{
  "framework": {},
  "source": {
    "builder": {
      "_files": [
        {
          "path": "../../src/builder/builder.js",
          "relativePath": "builder/builder.js",
          "extension": ".js",
          "content": "import createSpaDevServer from './modes/spa.dev.js';\nimport createSpaProdServer from './modes/spa.prod.js';\nimport createSsrDevServer from './modes/ssr.dev.js';\nimport createSsrProdServer from './modes/ssr.prod.js';\nimport createSsrRspackDevServer from './modes/ssr.rspack.dev.js';\nimport rspackConfigs from './rspack/index.js';\nimport webpackConfigs from './webpack/index.js';\n\nexport {\n  rspackConfigs,\n  createSsrRspackDevServer,\n  webpackConfigs,\n  createSsrDevServer,\n  createSsrProdServer,\n  createSpaDevServer,\n  createSpaProdServer,\n};\n\nexport default {\n  rspackConfigs,\n  createSsrRspackDevServer,\n  webpackConfigs,\n  createSsrDevServer,\n  createSsrProdServer,\n  createSpaDevServer,\n  createSpaProdServer,\n};\n\n",
          "name": "builder.js",
          "size": 719,
          "type": "source"
        }
      ],
      "modes": {
        "_files": [
          {
            "path": "../../src/builder/modes/spa.dev.js",
            "relativePath": "builder/modes/spa.dev.js",
            "extension": ".js",
            "content": "import * as history from 'connect-history-api-fallback';\nimport path from 'path';\nimport webpack from 'webpack';\nimport devMiddleware from 'webpack-dev-middleware';\nexport default (function createSpaDevServer(projectRoot, { spaConfig, apiConfig, createServer }) {\n  const spaCompiler = webpack(spaConfig);\n  const serverCompiler = webpack(apiConfig);\n  const createDevRenderer = () => {\n    // Нативные ANSI escape коды для цветов\n    const colors = {\n      reset: '\\x1b[0m',\n      greenBright: '\\x1b[92;1m', // яркий зеленый + жирный\n      blueBright: '\\x1b[94m', // яркий синий\n      yellow: '\\x1b[33m', // желтый\n    };\n    const progressPlugin = new webpack.ProgressPlugin((percentage, message, ...args) => {\n      // readline.clearLine(process.stdout, 0);\n      // readline.cursorTo(process.stdout, 0);\n      process.stdout.write(\n        colors.greenBright + `${(percentage * 100).toFixed(2)}% ` + colors.reset + colors.blueBright + message + colors.reset + ' ' + args.map(arg => colors.yellow + arg + colors.reset).join(' ')\n      );\n    });\n    spaConfig.plugins.push(progressPlugin);\n  };\n  let serverInstance;\n  const clientDevMiddleware = devMiddleware(spaCompiler, {\n    publicPath: spaConfig.output.publicPath,\n    stats: false,\n  });\n  // const clientHotMiddleware = hotMiddleware(spaCompiler, {\n  //   heartbeat: 5000,\n  //   log: false\n  // });\n  const port = process.env.PORT || 8080;\n  // Функция для запуска сервера\n  const startServer = async () => {\n    if (serverInstance) {\n      serverInstance.close();\n    }\n    // Очистка кэша модуля и всех его зависимостей\n    Object.keys(require.cache).forEach(id => {\n      delete require.cache[id];\n    });\n    const { createServer } = createServer;\n    let { app, server, env } = await createServer();\n    // Используем connect-history-api-fallback перед другими middleware\n    app.use(history());\n    app.use(clientDevMiddleware);\n    // app.use(clientHotMiddleware);\n    // app.use(compression());\n    // Удаляем статическое обслуживание файлов\n    // app.use(express.static(path.resolve(projectRoot, \"builds/web/client\")));\n    // Обрабатываем все маршруты\n    app.get('*', (req, res, next) => {\n      const filename = path.join(spaCompiler.outputPath, 'index.html');\n      spaCompiler.outputFileSystem.readFile(filename, (err, result) => {\n        if (err) {\n          return next(err);\n        }\n        res.set('content-type', 'text/html');\n        res.send(result);\n        res.end();\n      });\n    });\n    serverInstance = server;\n    try {\n      await server.listen(port);\n      console.log(`Server started at http://localhost:${port}\\n`);\n    } catch (err) {\n      console.error(err);\n      process.exit(1);\n    }\n  };\n  // Настройка наблюдения за изменениями\n  serverCompiler.watch({}, async (err, stats) => {\n    if (err) {\n      console.error(err);\n      return;\n    }\n    console.log(stats.toString(apiConfig.stats));\n    console.log('Server.js has changed, updating...');\n    await startServer();\n  });\n  createDevRenderer();\n  return startServer;\n});\n",
            "name": "spa.dev.js",
            "size": 3032,
            "type": "source"
          },
          {
            "path": "../../src/builder/modes/spa.prod.js",
            "relativePath": "builder/modes/spa.prod.js",
            "extension": ".js",
            "content": "import * as history from 'connect-history-api-fallback';\nimport * as express from 'express';\nimport fs from 'fs';\nimport path from 'path';\nexport default (function createSpaProdServer(projectRoot, { createServer }) {\n  let serverInstance;\n  const port = process.env.PORT || 8080;\n  // Функция для запуска сервера\n  const startServer = async () => {\n    const { createServer } = createServer;\n    let { app, server } = await createServer();\n    // Включаем сжатие ответов\n    // app.use(compression());\n    // Статическое обслуживание сбилженных файлов\n    app.use(express.static(path.resolve(projectRoot, 'builds/web/spa')));\n    app.use(\n      history({\n        index: '/index.html',\n      })\n    );\n    app.get('*', (req, res) => {\n      fs.readFile(path.resolve(projectRoot, 'builds/web/spa', 'index.html'), 'utf-8', (err, content) => {\n        if (err) {\n          console.log('We cannot open \"index.html\" file.');\n          res.writeHead(500, {\n            'Content-Type': 'text/plain; charset=utf-8',\n          });\n          res.end('Internal Server Error');\n          return;\n        }\n        res.writeHead(200, {\n          'Content-Type': 'text/html; charset=utf-8',\n        });\n        res.end(content);\n      });\n    });\n    // Запуск сервера\n    serverInstance = server;\n    try {\n      await server.listen(port);\n      console.log(`Production server started at http://localhost:${port}\\n`);\n    } catch (err) {\n      console.error(err);\n      process.exit(1);\n    }\n  };\n  return startServer;\n});\n",
            "name": "spa.prod.js",
            "size": 1510,
            "type": "source"
          },
          {
            "path": "../../src/builder/modes/ssr.dev.js",
            "relativePath": "builder/modes/ssr.dev.js",
            "extension": ".js",
            "content": "import path from \"path\";\nimport chalk from \"chalk\";\nimport { rspack, ProgressPlugin } from \"@rspack/core\";\nimport { createHtmlRenderer } from \"../ssr/ssr-render-html.js\";\nimport { transformDevStats } from \"../ssr/ssr-transform-webpack-stats.js\";\n\nexport default function createSsrDevServer(projectRoot, { clientConfig, apiConfig, ssrConfig, createServer }) {\n  // Добавляем HMR плагины в клиентскую конфигурацию\n  const addHmrToClientConfig = (config) => {\n    config.plugins = config.plugins || [];\n    // Встроенный HMR плагин от Rspack\n    config.plugins.push(new rspack.HotModuleReplacementPlugin());\n    // Добавляем HMR entry\n    config.entry = {\n      main: [\n        \"webpack-hot-middleware/client?path=/__webpack_hmr&timeout=20000\",\n        ...(Array.isArray(config.entry.main) ? config.entry.main : [config.entry.main])\n      ]\n    };\n    return config;\n  };\n\n  // Применяем HMR к клиентской конфигурации\n  const clientConfigWithHmr = addHmrToClientConfig({ ...clientConfig });\n  const clientCompiler = rspack(clientConfigWithHmr);\n  const ssrCompiler = rspack(ssrConfig);\n\n  const createDevRenderer = () => {\n    const createHotReloadingServerRenderer = (config) => {\n      // Добавляем прогресс-плагин для отображения процесса сборки\n      const progressPlugin = new ProgressPlugin((percentage, message, ...args) => {\n        console.log(\n          chalk.greenBright(`${(percentage * 100).toFixed(2)}% `) +\n          chalk.blueBright(message) +\n          \" \" +\n          args.map((arg) => chalk.yellow(arg)).join(\" \")\n        );\n      });\n\n      config.plugins = config.plugins || [];\n      config.plugins.push(progressPlugin);\n      \n      let renderApp = null;\n      let setCompilationDone = null;\n      let ssrCompilation = new Promise((resolve) => { setCompilationDone = resolve });\n\n      // Запускаем наблюдение за SSR сборкой\n      ssrCompiler.watch({ \"info-verbosity\": \"none\" }, async (error, stats) => {\n        if (error) {\n          console.error(chalk.red(\"Server critical error\"));\n          console.error(JSON.stringify(error, null, 2));\n          throw error;\n        }\n\n        const jsonStats = stats.toJson();\n\n        if (stats.hasErrors()) {\n          console.error(chalk.red(\"Server compilation error\"));\n          jsonStats.errors.forEach((err) => {\n            if (err.details) {\n              console.error(err.details);\n            } else if (typeof err === 'object') {\n              try {\n                console.error(JSON.stringify(err, null, 2));\n              } catch (e) {\n                console.error(e);\n              }\n            } else {\n              console.error(chalk.red(err.slice()));\n            }\n          });\n          return;\n        }\n        \n        // Получаем путь к собранному SSR бандлу\n        const { entrypoints, outputPath } = jsonStats;\n        const { main: { assets: [mainChunkPath] } } = entrypoints;\n        const mainModulePath = path.resolve(outputPath, mainChunkPath.name);\n        \n        // Динамический импорт для ESM совместимости\n        const module = await import(mainModulePath);\n        renderApp = module.render;\n        setCompilationDone();\n      });\n      \n      return async (stuff) => {\n        await ssrCompilation;\n        return await renderApp(stuff);\n      };\n    };\n\n    const renderApp = createHotReloadingServerRenderer(ssrConfig);\n    const renderHtml = createHtmlRenderer();\n\n    return async (stuff, stats) => {\n      const { html, meta, state, statusCode } = await renderApp(stuff);\n      \n      // Трансформируем статистику для вставки в HTML\n     const publicPath = clientConfigWithHmr.output.publicPath;\n    const { head, body } = extractAssets(stats, publicPath);\n\n      const initialState = JSON.stringify(state);\n      \n      // Рендерим финальный HTML\n      const completeHtml = await renderHtml({\n        appHtml: html,\n        meta,\n        head,\n        body,\n        initialState,\n      });\n      \n      return { html: completeHtml, statusCode };\n    };\n  };\n\n  let serverInstance;\n  let rendererInstance;\n  const port = process.env.PORT || 8080;\n\n  // Функция запуска сервера\n  const startServer = async () => {\n    if (serverInstance) {\n      serverInstance.close();\n    }\n\n    // Создаем экземпляр сервера с помощью предоставленной функции\n    const { app, server } = await createServer.createServer();\n    \n    // Инициализируем Dev middleware с использованием встроенного в Rspack middleware\n    const devMiddleware = clientCompiler.devMiddleware(app, {\n      publicPath: clientConfigWithHmr.output.publicPath,\n      stats: false,\n    });\n\n    // Инициализируем Hot middleware с использованием встроенного в Rspack middleware\n    clientCompiler.hotMiddleware(app);\n    \n    // Создаем рендерер для SSR, если его еще нет\n    if (!rendererInstance) {\n      rendererInstance = createDevRenderer();\n      \n      // Обновляем страницу при изменениях в клиентском коде\n      clientCompiler.hooks.done.tap(\"reload\", (stats) => {\n        // Инвалидация кеша клиентского кода происходит автоматически с HMR\n      });\n    }\n\n    // Обрабатываем все запросы через SSR\n    app.use(\"/*\", async (req, res) => {\n      try {\n        const stats = clientCompiler.getStats().toJson();\n        \n        const result = await rendererInstance(\n          {\n            url: req.originalUrl,\n            cookies: req.cookies,\n            languages: req.acceptsLanguages(),\n          },\n          stats\n        );\n\n        res.status(result.statusCode)\n          .header(\"Content-Type\", \"text/html; charset=utf-8\")\n          .send(result.html);\n      } catch (err) {\n        console.error(err);\n        res.status(500).send(\"Internal Server Error\");\n      }\n    });\n\n    serverInstance = server;\n\n    try {\n      await server.listen(port);\n      console.log(`Server started at localhost:${port}\\n`);\n    } catch (err) {\n      console.error(err);\n      process.exit(1);\n    }\n  };\n\n  return startServer;\n}",
            "name": "ssr.dev.js",
            "size": 5903,
            "type": "source"
          },
          {
            "path": "../../src/builder/modes/ssr.prod.js",
            "relativePath": "builder/modes/ssr.prod.js",
            "extension": ".js",
            "content": "import path from 'path';\nimport express from 'express';\n\nimport { renderHtml } from '../ssr/ssr-render-html.js';\nimport { transformProdStats } from '../ssr/ssr-transform-webpack-stats.js';\n\nexport default (function createSsrProdServer(projectRoot, { clientConfig, apiConfig, createServer }) {\n\n  const startServer = async () => {\n    const { app, server, env } = await createServer.createServer();\n    app.use(\n      clientConfig.output.publicPath,\n      express.static(path.resolve(projectRoot, 'builds/web/client'), {\n        maxAge: '1d', // Кэширование на 1 день\n      })\n    );\n    const { head, body } = transformProdStats({\n      stats: clientStats,\n      publicPath: clientConfig.output.publicPath,\n    });\n    app.use('/*', async (req, res) => {\n      const { html, meta, state, statusCode } = await render({\n        url: req.originalUrl,\n        cookies: req.cookies,\n        languages: req.acceptsLanguages(),\n      });\n      if (state.NotFound) {\n        res.status(404);\n      }\n      const initialState = JSON.stringify(state);\n      const completeHtml = await renderHtml({\n        appHtml: html,\n        meta,\n        head,\n        body,\n        initialState,\n      });\n      res.status(statusCode).header('Content-Type', 'text/html; charset=utf-8').send(completeHtml);\n    });\n    return server;\n  };\n\n  const port = process.env.PORT || 8080;\n\n  const start = async () => {\n    const server = await startServer();\n\n    try {\n      server.listen(port, () => console.log(`Server running on port ${port}`));\n    } catch (err) {\n      console.error(err);\n      process.exit(1);\n    }\n  };\n\n  return start;\n});\n",
            "name": "ssr.prod.js",
            "size": 1622,
            "type": "source"
          },
          {
            "path": "../../src/builder/modes/ssr.rspack.dev.js",
            "relativePath": "builder/modes/ssr.rspack.dev.js",
            "extension": ".js",
            "content": "import path from \"path\";\nimport chalk from \"chalk\";\n\nimport { rspack, ProgressPlugin } from \"@rspack/core\";\nimport { fork } from \"child_process\";\n\nimport devMiddleware from \"webpack-dev-middleware\";\n\nimport { createHtmlRenderer } from \"../ssr/ssr-render-html.js\";\nimport { transformDevStats } from \"../ssr/ssr-transform-webpack-stats.js\";\n\nexport default function createSsrDevServer(projectRoot, { clientConfig, apiConfig, ssrConfig }) {\n  const clientCompiler = rspack(clientConfig); \n  const ssrCompiler = rspack(ssrConfig);\n  const serverCompiler = rspack(apiConfig);\n\n  const createDevRenderer = (onUpdate) => {\n    const createHotReloadingServerRenderer = (config) => {\n      const progressPlugin = new ProgressPlugin((percentage, message, ...args) => {\n\n        console.log(\n          chalk.greenBright(`${(percentage * 100).toFixed(2)}% `) +\n          chalk.blueBright(message) +\n          \" \" +\n          args.map((arg) => chalk.yellow(arg)).join(\" \")\n        );\n      });\n\n      config.plugins = config.plugins || [];\n      config.plugins.push(progressPlugin);\n      \n      let renderApp = null;\n\n      let setCompilationDone = null;\n      let ssrCompilation = new Promise((resolve) => { setCompilationDone = resolve });\n\n      ssrCompiler.watch(\n        {\n          \"info-verbosity\": \"none\",\n        },\n        async (error, stats) => {\n          if (error) {\n            console.error(chalk.red(\"Server critical error\"));\n            console.error(JSON.stringify(error, null, 2));\n            throw error;\n          }\n\n          const jsonStats = stats.toJson();\n\n          if (stats.hasErrors()) {\n            console.error(chalk.red(\"Client compilation error\"));\n            jsonStats.errors.forEach((err) => {\n              if (err.details) {\n                console.error(err.details);\n              } else if (typeof err === 'object') {\n                try {\n                  console.error(JSON.stringify(err, null, 2));\n                } catch (e) {\n                  console.error(e);\n                }\n              } else {\n                console.error(chalk.red(err.slice()));\n              }\n            });\n            return;\n          }\n          const { entrypoints, outputPath } = jsonStats;\n          const { main: { assets: [mainChunkPath] } } = entrypoints;\n          const mainModulePath = path.resolve(outputPath, mainChunkPath.name);\n          \n          // Dynamic import for ESM compatibility\n          const module = await import(mainModulePath);\n          renderApp = module.render;\n          setCompilationDone();\n        }\n      );\n      \n      return async (stuff) => {\n        await ssrCompilation;\n        const result = await renderApp(stuff);\n        return result;\n      };\n    };\n\n    const renderApp = createHotReloadingServerRenderer(ssrConfig);\n    const renderHtml = createHtmlRenderer(onUpdate);\n\n    return async (stuff, { stats, outputFileSystem }) => {\n      const { html, meta, state, statusCode } = await renderApp(stuff);\n\n      const { head, body } = transformDevStats(stats.toJson(), outputFileSystem);\n\n      const initialState = JSON.stringify(state);\n\n      const completeHtml = await renderHtml({\n        appHtml: html,\n        meta,\n        head,\n        body,\n        initialState,\n      });\n      return { html: completeHtml, statusCode };\n    };\n  };\n\n  let serverInstance;\n  let rendererInstance;\n\n  let serverModule;\n\n  serverCompiler.watch({}, async (err, stats) => {\n    if (err) {\n      console.error(err);\n      return;\n    }\n    \n    console.log(stats.toString(apiConfig.stats));\n    \n    try {\n      // Получаем путь к скомпилированному файлу\n      const { outputPath } = stats.toJson();\n      const entryName = Object.keys(stats.toJson().entrypoints)[0];\n      const assetName = stats.toJson().entrypoints[entryName].assets[0].name;\n      \n      // Импортируем с уникальным параметром для сброса кэша\n      serverModule = await import(`file://${path.resolve(outputPath, assetName)}?t=${Date.now()}`);\n      \n      if (typeof serverModule.createServer !== 'function') {\n        throw new Error(\"Экспорт createServer не найден\");\n      }\n      \n      console.log(\"Сервер скомпилирован, перезапуск...\");\n      await startServer();\n    } catch (error) {\n      console.error(\"Ошибка при загрузке серверного модуля:\", error);\n    }\n  });\n\n  const clientDevMiddleware = devMiddleware(clientCompiler, {\n    publicPath: clientConfig.output.publicPath,\n    serverSideRender: true,\n    stats: {\n      children: true\n    },\n  });\n\n  const port = process.env.PORT || 8080;\n\n  // Function to start the server\n  const startServer = async () => {\n    if (serverInstance) {\n      serverInstance.close();\n    }\n\n     // Проверяем, что серверный модуль загружен\n    if (!serverModule) {\n      console.error(\"Серверный модуль еще не скомпилирован\");\n      return;\n    }\n\n\n    let { app, server, env } = await serverModule.createServer();\n\n    app.use(clientDevMiddleware);\n\n    // SSR client-side compilation\n    if (!rendererInstance) {\n      rendererInstance = createDevRenderer(() => {\n        clientCompiler.hooks.done.tap(\"reload\", () => {\n          setTimeout(() => {\n            // const client = await import(\"webpack-hot-middleware/client\");\n            // client?.reload();\n          }, 500);\n        });\n      });\n    }\n\n    // Serve SSR content for all routes\n    app.use(\"/*\", async (req, res) => {\n      const result = await rendererInstance(\n        {\n          url: req.originalUrl,\n          cookies: req.cookies,\n          languages: req.acceptsLanguages(),\n        },\n        res.locals.webpack.devMiddleware // Update to rspack middleware context\n      );\n\n      res.status(result.statusCode)\n        .header(\"Content-Type\", \"text/html; charset=utf-8\")\n        .send(result.html);\n    });\n\n    serverInstance = server;\n\n    try {\n      await server.listen(port);\n      console.log(`Server started at localhost:${port}\\n`);\n    } catch (err) {\n      console.error(err);\n      process.exit(1);\n    }\n  };\n\n  return startServer;\n}",
            "name": "ssr.rspack.dev.js",
            "size": 6005,
            "type": "source"
          },
          {
            "path": "../../src/builder/modes/ssr.vite.dev.js",
            "relativePath": "builder/modes/ssr.vite.dev.js",
            "extension": ".js",
            "content": "import compression from 'compression';\nimport fs from 'fs';\nimport path from 'path';\nimport { createServer as createViteServer } from 'vite';\nimport { createHtmlRenderer } from '../ssr/ssr-render-html.js';\n// Цвета для консоли\nconst colors = {\n  reset: '\\x1b[0m',\n  green: '\\x1b[32m',\n  greenBright: '\\x1b[92;1m',\n  blue: '\\x1b[34m',\n  blueBright: '\\x1b[94m',\n  yellow: '\\x1b[33m',\n  red: '\\x1b[31m',\n};\nexport default (function createSsrDevServer(projectRoot, { clientConfig, apiConfig, ssrConfig, createServer }) {\n  let serverInstance;\n  let viteDevServer;\n  let rendererInstance;\n  const port = process.env.PORT || 8080;\n  // Создаем рендерер для SSR\n  const createDevRenderer = onUpdate => {\n    const renderHtml = createHtmlRenderer(onUpdate);\n    return async (stuff, vite) => {\n      // Динамически импортируем входную точку SSR\n      let ssrEntry;\n      try {\n        // Используем Vite для трансформации и загрузки SSR-скрипта\n        ssrEntry = await vite.ssrLoadModule(ssrConfig.entry);\n      } catch (error) {\n        console.error(colors.red + 'SSR compilation error' + colors.reset);\n        console.error(error);\n        return {\n          html: `<pre>${error.stack}</pre>`,\n          statusCode: 500,\n        };\n      }\n      // Рендерим приложение с помощью SSR\n      try {\n        const { html, meta, state, statusCode } = await ssrEntry.render(stuff);\n        // Получаем скрипты и стили клиентской части для вставки в HTML\n        const headTags = [];\n        const bodyTags = [];\n        // Добавляем основной скрипт клиентской части\n        bodyTags.push(`<script type=\"module\" src=\"/@vite/client\"></script>`);\n        bodyTags.push(`<script type=\"module\" src=\"${clientConfig.entry}\"></script>`);\n        const initialState = JSON.stringify(state);\n        // Рендерим финальный HTML\n        const completeHtml = await renderHtml({\n          appHtml: html,\n          meta,\n          head: headTags.join('\\n'),\n          body: bodyTags.join('\\n'),\n          initialState,\n        });\n        return { html: completeHtml, statusCode };\n      } catch (error) {\n        console.error(colors.red + 'Render error' + colors.reset);\n        console.error(error.stack);\n        return {\n          html: `<pre>${error.stack}</pre>`,\n          statusCode: 500,\n        };\n      }\n    };\n  };\n  // Функция для запуска сервера\n  const startServer = async () => {\n    if (serverInstance) {\n      serverInstance.close();\n    }\n    // Очистка кэша модулей\n    Object.keys(require.cache).forEach(id => {\n      delete require.cache[id];\n    });\n    try {\n      // Создаем Vite Dev Server\n      if (!viteDevServer) {\n        viteDevServer = await createViteServer({\n          root: projectRoot,\n          server: {\n            middlewareMode: true,\n            hmr: true,\n            watch: {\n              usePolling: true,\n              interval: 100,\n            },\n          },\n          appType: 'custom',\n          logLevel: 'info',\n          // Используем настройки из клиентского конфига\n          ...clientConfig,\n        });\n      }\n      // Создаем рендерер, если его ещё нет\n      if (!rendererInstance) {\n        rendererInstance = createDevRenderer(() => {\n          console.log(colors.green + 'Client updated, triggering reload...' + colors.reset);\n        });\n      }\n      let { app, server, env } = await createServer();\n      // Применяем Vite middleware\n      app.use(viteDevServer.middlewares);\n      // Middleware для SSR\n      app.use('/*', async (req, res) => {\n        try {\n          const result = await rendererInstance(\n            {\n              url: req.originalUrl,\n              cookies: req.cookies,\n              languages: req.acceptsLanguages(),\n            },\n            viteDevServer\n          );\n          res.status(result.statusCode).header('Content-Type', 'text/html; charset=utf-8').send(result.html);\n        } catch (error) {\n          console.error(colors.red + 'SSR middleware error' + colors.reset);\n          console.error(error);\n          viteDevServer.ssrFixStacktrace(error);\n          res.status(500).send(`<pre>${error.stack}</pre>`);\n        }\n      });\n      app.use(compression());\n      serverInstance = server;\n      await server.listen(port);\n      console.log(`${colors.greenBright}Server started at localhost:${port}${colors.reset}\\n`);\n      // Настройка наблюдения за изменениями серверных файлов\n      const watcher = fs.watch(path.dirname(createServer), { recursive: true });\n      watcher.on('change', async (eventType, filename) => {\n        if (filename && filename.endsWith('.js')) {\n          console.log(`${colors.blue}Server file changed: ${filename}, updating...${colors.reset}`);\n          try {\n            await startServer();\n          } catch (err) {\n            console.error(colors.red + 'Server restart failed' + colors.reset);\n            console.error(err);\n          }\n        }\n      });\n    } catch (err) {\n      console.error(colors.red + 'Server start failed' + colors.reset);\n      console.error(err);\n      process.exit(1);\n    }\n  };\n  return startServer;\n});\n",
            "name": "ssr.vite.dev.js",
            "size": 5060,
            "type": "source"
          }
        ]
      },
      "rspack": {
        "_files": [
          {
            "path": "../../src/builder/rspack/index.js",
            "relativePath": "builder/rspack/index.js",
            "extension": ".js",
            "content": "import baseConfig from './rspack.config.base.js';\n\nimport clientConfig from './rspack.config.ssr.client.js';\nimport ssrConfig from './rspack.config.ssr.server.js';\nimport spaConfig from './rspack.config.spa.client.js';\n\nimport apiConfig from './rspack.config.api.js';\n\nexport default {\n  baseConfig,\n  clientConfig,\n  apiConfig,\n  spaConfig,\n  ssrConfig,\n};\n",
            "name": "index.js",
            "size": 358,
            "type": "source"
          },
          {
            "path": "../../src/builder/rspack/rspack.config.api.js",
            "relativePath": "builder/rspack/rspack.config.api.js",
            "extension": ".js",
            "content": "import core from '@rspack/core';\nimport path from 'path';\nimport nodeExternals from 'webpack-node-externals';\nconst { rspack } = core;\n\nexport default projectRoot => {\n  return {\n    target: 'node',\n    mode: 'development',\n    entry: [path.resolve(projectRoot, 'src/server.js')],\n    output: {\n      filename: 'server.js',\n      path: path.resolve(projectRoot, 'builds/web/server'),\n      libraryTarget: 'module',\n      chunkFormat: 'module', \n      module: true,\n      clean: true,\n    },\n    experiments: {\n      outputModule: true,\n    },\n    resolve: {\n      alias: {\n        '@martyrs': path.resolve(projectRoot, 'martyrs'),\n      },\n      fallback: {\n        path: false,\n      },\n    },\n    // Добавляем externals для node_modules\n    externals: [\n      nodeExternals({\n        // Явно указываем, чтобы uWebSockets.js был внешним модулем\n        allowlist: [] // Пустой список означает, что все модули будут внешними\n      }),\n      // Исключаем все .node файлы\n      function({ context, request }, callback) {\n        if (/\\.node$/.test(request)) {\n          return callback(null, `commonjs ${request}`);\n        }\n        callback();\n      }\n    ],\n    plugins: [\n      // new rspack.HotModuleReplacementPlugin()\n    ],\n    // Добавляем правило, чтобы .node файлы не обрабатывались\n    module: {\n      rules: [\n        {\n          test: /\\.node$/,\n          loader: 'node-loader',\n          // или просто исключаем их:\n          // use: 'null-loader', \n        }\n      ]\n    }\n  };\n};",
            "name": "rspack.config.api.js",
            "size": 1494,
            "type": "source"
          },
          {
            "path": "../../src/builder/rspack/rspack.config.base.js",
            "relativePath": "builder/rspack/rspack.config.base.js",
            "extension": ".js",
            "content": "import path from \"path\";\nimport { rspack } from '@rspack/core';\nimport { VueLoaderPlugin } from \"vue-loader\";\nimport { CleanWebpackPlugin } from \"clean-webpack-plugin\";\nimport { RsdoctorRspackPlugin } from '@rsdoctor/rspack-plugin';\nimport { BundleAnalyzerPlugin } from 'webpack-bundle-analyzer';\nimport Dotenv from 'dotenv-webpack';\n\nexport default (projectRoot) => {\n  return {\n    context: projectRoot,\n    resolve: {\n       alias: {\n        '@': path.resolve(projectRoot, 'src'),\n        '@martyrs': path.resolve(projectRoot, 'martyrs'),\n        'vue': path.resolve(projectRoot, 'node_modules/vue'),\n        'vue-router': path.resolve(projectRoot, 'node_modules/vue-router'),\n        'vue-i18n': path.resolve(projectRoot, 'node_modules/vue-i18n'),\n      },\n    },\n    module: {\n      rules: [\n        \n        {\n          test: /\\.m?js$/,\n          exclude: /node_modules\\/(?!(vue-meta)\\/).*/,\n          use: {\n            loader: 'builtin:swc-loader',\n            options: {\n              jsc: {\n                parser: {\n                  syntax: 'ecmascript',\n                  jsx: false\n                },\n                target: 'es2020'\n              }\n            }\n          },\n        },\n        {\n          test: /\\.vue$/,\n          loader: 'vue-loader',\n          options: {\n            experimentalInlineMatchResource: true,\n            preprocessOptions: {\n              template: {\n                preprocess: (content, { filename }) => {\n                  const rewritten = content\n                    .replace(\n                      /<(\\w+)\\s+v-slot(:[\\w\\-]+)?=(\"|'){([^\"'}]+)}(\"|')\\s*>/g,\n                      (_match, tag, slotName, _q1, slotProps, _q2) => {\n                        const slotAttr = slotName || '';\n                        return `<template v-slot${slotAttr}=\"{${slotProps}}\"><${tag}>`;\n                      }\n                    )\n                    .replace(\n                      /<\\/(\\w+)>\\s*<!--\\s*v-slot-close\\s*-->/g,\n                      (_match, tag) => `</${tag}></template>`\n                    );\n\n                  return { code: rewritten };\n                }\n              }\n            }\n          },\n        },\n        {\n          test: /\\.(sa|sc|c)ss$/,\n          use: [\n            process.env.NODE_ENV !== 'production'\n              ? 'vue-style-loader'\n              : rspack.CssExtractRspackPlugin.loader,  \n            {\n              loader: 'css-loader',\n              options: {\n                sourceMap: true,\n                url: {\n                  filter: (url, resourcePath) => {\n                    if (url.indexOf(\"/fonts/\")==0) {\n                      return false;\n                    }\n                    return true;\n                  },\n                }\n              }\n            },\n            {\n              loader: 'sass-loader',\n              options: {\n                sourceMap: true, \n              }\n            },\n          ],\n          type: 'javascript/auto'\n        },\n        {\n          test: /\\.(?:ico|gif|png|jpg|jpeg|mp4|webp|webm|svg|woff2?|eot|ttf|otf)$/i,\n          type: \"asset/resource\",\n        }\n      ],\n    },\n    experiments: {\n      css: false\n    },\n    plugins: [\n      ...(process.env.BUNDLE_ANALYZER ? [new RsdoctorRspackPlugin(), new BundleAnalyzerPlugin()] : []),\n      new VueLoaderPlugin(),\n      ...(process.env.NODE_ENV === 'production' ? [new rspack.CssExtractRspackPlugin({\n        filename: '[name].[contenthash].css',\n        chunkFilename: '[id].[contenthash].css',\n        ignoreOrder: true,\n      })]: []),\n      new CleanWebpackPlugin(),\n      new Dotenv({\n        path: `.env.${process.env.NODE_ENV}`,\n        // ...(process.env.MODE === \"SPA\" ? [{path: '.env.mobile'}] : []),\n      }),\n      new rspack.DefinePlugin({\n        __VUE_I18N_LEGACY_API__:false,\n        __VUE_OPTIONS_API__:true,\n        __VUE_PROD_DEVTOOLS_:false,\n        __VUE_PROD_DEVTOOLS__: true,\n        __VUE_PROD_HYDRATION_MISMATCH_DETAILS__: true,\n        __VUE_I18N_FULL_INSTALL__:true,\n        __INTLIFY_PROD_DEVTOOLS__:false,\n        __MOBILE_APP__: process.env.MODE === \"SPA\" ? true : false,\n      })\n    ],\n    infrastructureLogging: {\n      level: 'verbose',\n    },\n    stats: {\n      colors: true,\n      hash: true,\n      version: true,\n      timings: true,\n      assets: true,\n      chunks: true,\n      modules: true, \n      reasons: true,\n      children: true,\n      source: true, \n      errors: true, \n      errorDetails: true, \n      errorStack: true,\n      warnings: true,\n      publicPath: true\n    },\n  };\n};",
            "name": "rspack.config.base.js",
            "size": 4529,
            "type": "source"
          },
          {
            "path": "../../src/builder/rspack/rspack.config.spa.client.js",
            "relativePath": "builder/rspack/rspack.config.spa.client.js",
            "extension": ".js",
            "content": "import core from '@rspack/core';\nimport { promises } from 'fs';\nimport Mustache from 'mustache';\nimport path from 'path';\nimport { merge } from 'webpack-merge';\nimport { StatsWriterPlugin } from 'webpack-stats-plugin';\nimport template from '../templates/page.js';\nimport getClientConfig from './rspack.config.ssr.client.js';\nconst { rspack } = core;\nconst fs = { promises }.promises;\nconst isProd = process.env.NODE_ENV === 'production';\nexport default projectRoot => {\n  const spaConfig = {\n    mode: !isProd ? 'development' : 'production',\n    devtool: 'source-map',\n    entry: {\n      main: path.resolve(projectRoot, 'src/client.js'),\n    },\n    output: {\n      filename: 'main.js',\n      path: path.resolve(projectRoot, 'builds/web/spa'),\n      clean: true,\n    },\n    target: 'web',\n    plugins: [\n      // ...(!isProd ? [new rspack.HotModuleReplacementPlugin()] : []),\n      new StatsWriterPlugin(),\n      new rspack.optimize.LimitChunkCountPlugin({\n        maxChunks: 1,\n      }),\n      new rspack.HtmlRspackPlugin({\n        templateContent: async () => {\n          const meta = {\n            htmlAttrs: 'lang=\"en\"',\n            headAttrs: '',\n            bodyAttrs: '',\n            // head: '<meta name=\"description\" content=\"Example\">',\n            body: '',\n          };\n          const data = {\n            googleTagId: process.env.GOOGLE_TAG_ID,\n            googleMapApiKey: process.env.GOOGLE_MAPS_API_KEY,\n            meta,\n          };\n          return Mustache.render(template, data);\n        },\n        filename: 'index.html',\n        inject: 'body',\n      }),\n      // new rspack.CopyRspackPlugin({\n      //   patterns: [\n      //     { from: path.resolve(projectRoot, \"../public/logo\"), to: 'logo' },\n      //     { from: path.resolve(projectRoot, \"../public/walkthrough\"), to: 'walkthrough' },\n      //     { from: path.resolve(projectRoot, \"../public/icons\"), to: 'icons' }\n      //   ]\n      // })\n      // new ServiceWorkerPlugin()\n    ],\n    optimization: {\n      minimizer: [new rspack.SwcJsMinimizerRspackPlugin(), , new rspack.LightningCssMinimizerRspackPlugin()],\n    },\n  };\n  return merge(getClientConfig(projectRoot), spaConfig);\n};\n",
            "name": "rspack.config.spa.client.js",
            "size": 2164,
            "type": "source"
          },
          {
            "path": "../../src/builder/rspack/rspack.config.ssr.client.js",
            "relativePath": "builder/rspack/rspack.config.ssr.client.js",
            "extension": ".js",
            "content": "import path from \"path\";\nimport glob from 'glob-all';\nimport { rspack } from '@rspack/core';\nimport { merge } from \"webpack-merge\";\nimport { StatsWriterPlugin } from \"webpack-stats-plugin\";\nimport { GenerateSW, InjectManifest } from '@aaroon/workbox-rspack-plugin';\nimport { PurgeCSSPlugin } from \"purgecss-webpack-plugin\";\nimport baseConfig from './rspack.config.base.js';\n\nexport default (projectRoot) => {\n  const isProd = process.env.NODE_ENV === \"production\";\n  const config = {\n    mode: !isProd ? \"development\" : \"production\",\n    devtool: !isProd ? \"inline-source-map\" : \"source-map\",\n    entry: {\n      main: path.resolve(projectRoot, \"src/client.js\"),\n    },\n    module: {\n      rules: [],\n    },\n    output: {\n      filename: \"[name].js\",\n      chunkFilename: '[name].js',\n      path: path.resolve(projectRoot, \"builds/web/client\"),\n      publicPath: \"/\",\n      clean: true\n    },\n    \n    plugins: [\n      // ...(!isProd ? [new rspack.HotModuleReplacementPlugin()] : []),\n      new StatsWriterPlugin(),\n      new PurgeCSSPlugin({\n        paths: glob.sync([\n          path.join(projectRoot, 'src/**/*.vue'),\n          path.join(projectRoot, 'src/**/*.js'),\n          path.join(projectRoot, 'martyrs/src/**/*.vue'),\n          path.join(projectRoot, 'martyrs/src/**/*.js'),\n          path.join(projectRoot, '/node_modules/@ozdao/martyrs/**/*.css'),\n          path.join(projectRoot, '/node_modules/@ozdao/martyrs/**/*.scss'),\n          path.join(projectRoot, '/node_modules/@ozdao/martyrs/src/**/*.vue'),\n          path.join(projectRoot, '/node_modules/@ozdao/martyrs/src/**/*.js'),\n          path.join(projectRoot, '/node_modules/@vuepic/vue-datepicker/**/*.js')\n        ]),\n        safelist: { \n          standard: [\"safelisted\", /^html/, /^:root/],\n          deep: [/^safelisted-deep-/, /^html/, /^:root/],\n            greedy: [/^data-v-/, /\\[data-v-.*\\]/, /\\[data-v-[a-zA-Z0-9]*\\]/] \n        },\n        rejected: true, \n        extractors: [\n          {\n            extractor: (content) => {\n              // Ищем классы и селекторы с префиксами Tailwind\n              const normalClasses = content.match(/[A-Za-z0-9-_:\\/]+/g) || [];\n              \n              // Дополнительно ищем Vue атрибуты data-v-*\n              // Это важно для правильного распознавания scoped стилей\n              const scopedAttrs = content.match(/\\[data-v-[a-zA-Z0-9]*\\]/g) || [];\n              \n              // Объединяем результаты\n              return [...normalClasses, ...scopedAttrs];\n            },\n            extensions: ['vue', 'js', 'css', 'scss'],\n          },\n        ],\n      }),\n    ],\n    optimization: {\n      usedExports: true,  \n      splitChunks: {\n        chunks: \"async\",\n        minSize: 0,\n        // minRemainingSize: 0,\n        minChunks: 1,\n        maxAsyncRequests: 30,\n        maxInitialRequests: 30,\n        // enforceSizeThreshold: 50000,\n      },\n      minimize: isProd,\n      minimizer: [\n        new rspack.SwcJsMinimizerRspackPlugin(), \n        new rspack.LightningCssMinimizerRspackPlugin()\n      ],\n    },\n  };\n  return merge(baseConfig(projectRoot), config);\n};",
            "name": "rspack.config.ssr.client.js",
            "size": 3092,
            "type": "source"
          },
          {
            "path": "../../src/builder/rspack/rspack.config.ssr.server.js",
            "relativePath": "builder/rspack/rspack.config.ssr.server.js",
            "extension": ".js",
            "content": "import path from \"path\";\nimport { rspack } from '@rspack/core';\nimport nodeExternals from 'webpack-node-externals';\nimport { merge } from \"webpack-merge\";\nimport { RspackManifestPlugin } from 'rspack-manifest-plugin';\n\nimport getBaseConfig from \"./rspack.config.base.js\";\n\nexport default (projectRoot) => {\n  const isProd = process.env.NODE_ENV === \"production\";\n\n  const ssrConfig = {\n    target: [\"node\", \"es2022\"], // Явно указываем современную версию Node.js с поддержкой ESM\n    mode: !isProd ? \"development\" : \"production\",\n    entry: {\n      main: path.resolve(projectRoot, \"src/client.js\"),\n    },\n    output: {\n      filename: \"main.js\",\n      path: path.resolve(projectRoot, \"builds/web/server\"),\n      // Явно указываем формат чанков\n      chunkFormat: \"module\",\n      library: {\n        type: \"module\"\n      },\n      clean: true,\n      module: true,\n      environment: {\n        module: true\n      }\n    },\n    experiments: {\n      outputModule: true\n    },\n    module: {\n      rules: [\n        {\n          test: /\\.css$/,\n          use: \"null-loader\",\n        },\n      ],\n    },\n    optimization: {\n      minimize: false,\n    },\n    externals: [\n      nodeExternals({\n        allowlist: [\n          /^@ozdao*/,\n          /\\.(css|sass|scss)$/,\n          /\\.(vue)$/,\n          /\\.(html)$/,\n        ],\n        importType: 'module'\n      })\n    ],\n    plugins: [\n      new rspack.optimize.LimitChunkCountPlugin({\n        maxChunks: 1,\n      }),\n      ...(isProd ? [new RspackManifestPlugin({\n         fileName: 'manifest.json'\n      })] : []),\n    ],\n  };\n\n  return merge(getBaseConfig(projectRoot), ssrConfig);\n};",
            "name": "rspack.config.ssr.server.js",
            "size": 1623,
            "type": "source"
          }
        ]
      },
      "ssr": {
        "_files": [
          {
            "path": "../../src/builder/ssr/ssr-render-html.js",
            "relativePath": "builder/ssr/ssr-render-html.js",
            "extension": ".js",
            "content": "import Mustache from 'mustache';\nimport template from '../templates/page.js';\n\nconst renderHtml = async stuff => {\n  const data = {\n    ...stuff,\n    googleTagId: process.env.GOOGLE_TAG_ID,\n    facebookPixelId: process.env.FACEBOOK_PIXEL_ID,\n    facebookDomainVerification: process.env.FACEBOOK_DOMAIN_VERIFICATION,\n    googleMapApiKey: process.env.GOOGLE_MAPS_API_KEY,\n  };\n  return Mustache.render(template, data);\n};\n\nconst createHtmlRenderer = onTemplateUpdate => {\n  setInterval(() => {\n    // Для ES модулей нам не нужно вручную удалять кэш\n    // При изменении файла импорт сам обновится при следующем импорте\n    if (onTemplateUpdate) {\n      onTemplateUpdate();\n    }\n  }, 1000);\n  \n  return async stuff => {\n    const data = {\n      ...stuff,\n      googleTagId: process.env.GOOGLE_TAG_ID,\n      facebookPixelId: process.env.FACEBOOK_PIXEL_ID,\n      facebookDomainVerification: process.env.FACEBOOK_DOMAIN_VERIFICATION,\n      googleMapApiKey: process.env.GOOGLE_MAPS_API_KEY,\n    };\n    return Mustache.render(template, data);\n  };\n};\n\nexport { createHtmlRenderer, renderHtml };\nexport default {\n  createHtmlRenderer,\n  renderHtml,\n};",
            "name": "ssr-render-html.js",
            "size": 1143,
            "type": "source"
          },
          {
            "path": "../../src/builder/ssr/ssr-transform-webpack-stats.js",
            "relativePath": "builder/ssr/ssr-transform-webpack-stats.js",
            "extension": ".js",
            "content": "const normalizeAssets = assets => {\n  if (Array.isArray(assets)) return assets;\n  if (typeof assets === 'object') return Object.values(assets);\n  return [assets];\n};\n\nconst extractAssets = (stats, publicPath) => {\n  const jsAssets = [];\n  const cssAssets = [];\n\n  const assets = stats.assets || [];\n\n  for (const asset of assets) {\n    if (asset.name.endsWith(\".js\")) {\n      jsAssets.push(`<script src=\"${publicPath}${asset.name}\"></script>`);\n    }\n    if (asset.name.endsWith(\".css\")) {\n      cssAssets.push(`<link rel=\"stylesheet\" href=\"${publicPath}${asset.name}\">`);\n    }\n  }\n\n  return {\n    head: cssAssets.join('\\n'),\n    body: jsAssets.join('\\n'),\n  };\n};\n\nconst transformDevStats = (stats, outputFileSystem) => {\n  const {\n    assetsByChunkName: { main },\n    outputPath,\n    publicPath,\n  } = stats;\n  const head = `\n      <style>\n      ${normalizeAssets(main)\n        .filter(path => path.endsWith('.css'))\n        .map(path => outputFileSystem.readFileSync(path.join(outputPath, path)))\n        .join('\\n')}\n      </style>\n    `;\n  const body = normalizeAssets(main)\n    .filter(path => path.endsWith('.js'))\n    .map(path => `<script src=\"${publicPath}${path}\"></script>`)\n    .join('\\n');\n  return { head, body };\n};\nconst transformProdStats = ({ stats, publicPath }) => {\n  const {\n    assetsByChunkName: { main },\n  } = stats;\n  const head = normalizeAssets(main)\n    .filter(path => path.endsWith('.css'))\n    .map(path => `<link rel=\"stylesheet\" href=\"${publicPath}${path}\">`)\n    .join('\\n');\n  const body = normalizeAssets(main)\n    .filter(path => path.endsWith('.js'))\n    .map(path => `<script src=\"${publicPath}${path}\"></script>`)\n    .join('\\n');\n  return { head, body };\n};\nexport { extractAssets, transformDevStats, transformProdStats };\nexport default {\n  transformDevStats,\n  transformProdStats,\n};\n",
            "name": "ssr-transform-webpack-stats.js",
            "size": 1831,
            "type": "source"
          },
          {
            "path": "../../src/builder/ssr/utils.js",
            "relativePath": "builder/ssr/utils.js",
            "extension": ".js",
            "content": "import crypto from 'crypto';\nimport Module from 'module';\nimport path from 'path';\n/**\n * Normalizes assets from webpack stats\n * @param {Array|string} assets - Assets to normalize\n * @returns {Array} - Normalized array of assets\n */\nfunction normalizeAssets(assets) {\n  if (typeof assets === 'string') {\n    return [assets];\n  }\n  if (Array.isArray(assets)) {\n    return assets;\n  }\n  const object = assets;\n  return Object.keys(object).reduce((result, key) => {\n    return result.concat(object[key]);\n  }, []);\n}\n/**\n * Creates a hash from a string\n * @param {string} str - String to hash\n * @returns {string} - Resulting hash\n */\nfunction hash(str) {\n  return crypto.createHash('md5').update(str).digest('hex');\n}\n/**\n * Requires a module from a string\n * @param {string} src - Module source code\n * @param {string} filename - Module filename\n * @returns {any} - Exported module\n */\nfunction requireFromString(src, filename = '') {\n  const m = new Module(filename);\n  m.filename = filename;\n  m.paths = Module._nodeModulePaths(path.dirname(filename));\n  m._compile(src, filename);\n  return m.exports;\n}\nexport { hash, normalizeAssets, requireFromString };\nexport default {\n  normalizeAssets,\n  requireFromString,\n  hash,\n};\n",
            "name": "utils.js",
            "size": 1227,
            "type": "source"
          }
        ]
      },
      "templates": {
        "_files": [
          {
            "path": "../../src/builder/templates/page.js",
            "relativePath": "builder/templates/page.js",
            "extension": ".js",
            "content": "export default `\n  <html {{{ meta.htmlAttrs }}}>\n    <head {{{ meta.headAttrs }}}>\n      {{{ meta.headTags }}}\n      <meta charset=\"UTF-8\">\n      \n      <!-- Facebook Domain Verification -->\n      {{#facebookDomainVerification}}\n      <meta name=\"facebook-domain-verification\" content=\"{{facebookDomainVerification}}\">\n      {{/facebookDomainVerification}}\n      \n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/favicon/apple-touch-icon.png\">\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/favicon/favicon-32x32.png\">\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/favicon/favicon-16x16.png\">\n      <link rel=\"manifest\" href=\"/favicon/site.webmanifest\">\n      <link rel=\"mask-icon\" href=\"/favicon/safari-pinned-tab.svg\" color=\"#5bbad5\">\n      <meta name=\"msapplication-TileColor\" content=\"#000000\">\n      <meta name=\"theme-color\" content=\"#ffffff\">\n      <meta name=\"viewport\" content=\"viewport-fit=cover, width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no\" />\n      <!-- Facebook Pixel Code -->\n      {{#facebookPixelId}}\n      <script>\n      !function(f,b,e,v,n,t,s)\n      {if(f.fbq)return;n=f.fbq=function(){n.callMethod?\n      n.callMethod.apply(n,arguments):n.queue.push(arguments)};\n      if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';\n      n.queue=[];t=b.createElement(e);t.async=!0;\n      t.src=v;s=b.getElementsByTagName(e)[0];\n      s.parentNode.insertBefore(t,s)}(window, document,'script',\n      'https://connect.facebook.net/en_US/fbevents.js');\n      fbq('init', '{{facebookPixelId}}');\n      fbq('track', 'PageView');\n      </script>\n      <noscript><img height=\"1\" width=\"1\" style=\"display:none\"\n      src=\"https://www.facebook.com/tr?id={{facebookPixelId}}&ev=PageView&noscript=1\"\n      /></noscript>\n      {{/facebookPixelId}}\n      \n      {{{ head }}}\n      \n      <!-- Google Tag (gtag.js) -->\n      {{#googleTagId}}\n      <script async src=\"https://www.googletagmanager.com/gtag/js?id={{googleTagId}}\"></script>\n      <script>\n        window.dataLayer = window.dataLayer || [];\n        function gtag(){dataLayer.push(arguments);}\n        gtag('js', new Date());\n        gtag('config', '{{googleTagId}}');\n      </script>\n      {{/googleTagId}}\n    </head>\n    \n    <body {{{ meta.bodyAttrs }}}>\n      <div id=\"app\">{{{ appHtml }}}</div>\n      \n      <script type=\"application/json\" data-user-state>\n         {{{ userState }}}\n      </script>\n\n      <script type=\"application/json\" data-state>\n        {{{ initialState }}}\n      </script>\n      \n      {{{ meta.body }}} {{{ body }}}\n    </body>\n  </html>\n`;\n",
            "name": "page.js",
            "size": 2621,
            "type": "source"
          },
          {
            "path": "../../src/builder/templates/screen.js",
            "relativePath": "builder/templates/screen.js",
            "extension": ".js",
            "content": "export default `\n  <!-- <!DOCTYPE html> -->\n    <html lang=\"en\">\n    <head {{{ meta.headAttrs }}}>\n      {{{ meta.headTags }}}\n      <meta charset=\"UTF-8\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\" />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/favicon/apple-touch-icon.png\">\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/favicon/favicon-32x32.png\">\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/favicon/favicon-16x16.png\">\n      <link rel=\"manifest\" href=\"/favicon/site.webmanifest\">\n      <link rel=\"mask-icon\" href=\"/favicon/safari-pinned-tab.svg\" color=\"#5bbad5\">\n      <meta name=\"msapplication-TileColor\" content=\"#000000\">\n      <meta name=\"theme-color\" content=\"#ffffff\">\n      <meta name=\"viewport\" content=\"viewport-fit=cover, width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no\" />\n      {{{ head }}}\n      <!-- Sign in with Apple -->\n      <!-- <script type=\"text/javascript\" src=\"https://appleid.cdn-apple.com/appleauth/static/jsapi/appleid/1/en_US/appleid.auth.js\"></script> -->\n    </head>\n    <!-- Google tag (gtag.js) -->\n    <script async src=\"https://www.googletagmanager.com/gtag/js?id={{googleTagId}}\"></script>\n    \n    <body {{{ meta.bodyAttrs }}}>\n      <div id=\"app\">{{{ appHtml }}}</div>\n      \n      <script type=\"application/json\" data-user-state>\n         {{{ userState }}}\n      </script>\n\n      <script type=\"application/json\" data-state>\n        {{{ initialState }}}\n      </script>\n\n      <script>\n        window.dataLayer = window.dataLayer || [];\n        function gtag(){dataLayer.push(arguments);}\n        gtag('js', new Date());\n\n        gtag('config', '{{googleTagId}}');\n      </script>\n      \n      {{{ meta.body }}} {{{ body }}}\n    </body>\n  </html>\n`;\n",
            "name": "screen.js",
            "size": 1848,
            "type": "source"
          }
        ]
      },
      "utils": {
        "_files": [
          {
            "path": "../../src/builder/utils/hot-reload.js",
            "relativePath": "builder/utils/hot-reload.js",
            "extension": ".js",
            "content": "// import webpackHotMiddlewareClient from 'webpack-hot-middleware/client?noInfo=true&reload=true';\n\nwebpackHotMiddlewareClient.subscribe(({ reload }) => {\n  if (reload) {\n    window.location.reload();\n  }\n});\n",
            "name": "hot-reload.js",
            "size": 209,
            "type": "source"
          }
        ]
      },
      "vite": {
        "_files": [
          {
            "path": "../../src/builder/vite/index.js",
            "relativePath": "builder/vite/index.js",
            "extension": ".js",
            "content": "import baseConfig from './vite.config.base.js';\nimport clientConfig from './vite.config.client.js';\nimport serverConfig from './vite.config.server.js';\nimport spaConfig from './vite.config.spa.js';\nimport ssrConfig from './vite.config.ssr.js';\nexport { baseConfig, clientConfig, serverConfig, spaConfig, ssrConfig };\nexport default {\n  baseConfig,\n  clientConfig,\n  serverConfig,\n  spaConfig,\n  ssrConfig,\n};\n",
            "name": "index.js",
            "size": 409,
            "type": "source"
          },
          {
            "path": "../../src/builder/vite/vite.config.base.js",
            "relativePath": "builder/vite/vite.config.base.js",
            "extension": ".js",
            "content": "import vue from '@vitejs/plugin-vue';\nimport dotenv from 'dotenv';\nimport fs from 'fs';\nimport path from 'path';\nimport rollupPluginVisualizer from 'rollup-plugin-visualizer';\n// Функция для загрузки переменных окружения\nfunction loadEnv(mode) {\n  const envFile = `.env.${mode}`;\n  if (fs.existsSync(envFile)) {\n    const envConfig = dotenv.parse(fs.readFileSync(envFile));\n    for (const [key, value] of Object.entries(envConfig)) {\n      process.env[key] = value;\n    }\n  }\n}\nexport default projectRoot => {\n  // Загружаем переменные окружения\n  loadEnv(process.env.NODE_ENV || 'development');\n  return {\n    root: projectRoot,\n    resolve: {\n      alias: {\n        '@': path.resolve(projectRoot, 'src'),\n        '@martyrs': path.resolve(projectRoot, 'martyrs'),\n        vue: path.resolve(projectRoot, 'node_modules/vue'),\n        'vue-router': path.resolve(projectRoot, 'node_modules/vue-router'),\n        'vue-i18n': path.resolve(projectRoot, 'node_modules/vue-i18n'),\n      },\n    },\n    plugins: [\n      vue({\n        template: {\n          compilerOptions: {\n            // Настройки компилятора Vue\n          },\n        },\n      }),\n      // Дополнительные плагины для анализа бандла по условию\n      ...(process.env.BUNDLE_ANALYZER\n        ? [\n            {\n              name: 'bundle-analyzer',\n              configResolved(config) {\n                // Динамически импортируем rollup-plugin-visualizer только когда нужно\n                const { visualizer } = rollupPluginVisualizer;\n                config.plugins.push(\n                  visualizer({\n                    open: true,\n                    filename: 'stats.html',\n                    gzipSize: true,\n                    brotliSize: true,\n                  })\n                );\n              },\n            },\n          ]\n        : []),\n    ],\n    // Настройки для CSS\n    css: {\n      preprocessorOptions: {\n        scss: {\n          sourceMap: true,\n        },\n      },\n      // Экстракция CSS в продакшн\n      // В Vite это делается автоматически в production режиме\n    },\n    // Настройки сборки\n    build: {\n      outDir: 'dist',\n      emptyOutDir: true, // Эквивалент CleanWebpackPlugin\n      sourcemap: true,\n      rollupOptions: {\n        output: {\n          // Настройки для получения хэша в имени файла\n          entryFileNames: 'assets/[name].[hash].js',\n          chunkFileNames: 'assets/[name].[hash].js',\n          assetFileNames: 'assets/[name].[hash].[ext]',\n        },\n      },\n    },\n    // Определение глобальных переменных для Vue\n    define: {\n      __VUE_I18N_LEGACY_API__: false,\n      __VUE_OPTIONS_API__: true,\n      __VUE_PROD_DEVTOOLS_: false,\n      __VUE_PROD_DEVTOOLS__: true,\n      __VUE_PROD_HYDRATION_MISMATCH_DETAILS__: true,\n      __VUE_I18N_FULL_INSTALL__: true,\n      __INTLIFY_PROD_DEVTOOLS__: false,\n      __MOBILE_APP__: process.env.MODE === 'SPA' ? true : false,\n    },\n    // Настройки лога\n    logLevel: 'info', // 'info' | 'warn' | 'error' | 'silent'\n    // Настройка для assets\n    assetsInclude: ['**/*.ico', '**/*.gif', '**/*.png', '**/*.jpg', '**/*.jpeg', '**/*.mp4', '**/*.webp', '**/*.webm', '**/*.svg', '**/*.woff', '**/*.woff2', '**/*.eot', '**/*.ttf', '**/*.otf'],\n    // Опция для URL в CSS, аналогичная той что была в Rspack\n    experimental: {\n      // Vite по умолчанию обрабатывает asset URLs в CSS\n      // Если нужно отключить обработку URL для определенных файлов,\n      // это можно сделать через свой плагин\n      renderBuiltUrl(filename, { hostType }) {\n        if (filename.includes('/fonts/')) {\n          return { relative: true }; // Не обрабатывать URL для фонтов\n        }\n        return { relative: true }; // Для остальных использовать относительные пути\n      },\n    },\n  };\n};\n",
            "name": "vite.config.base.js",
            "size": 3725,
            "type": "source"
          },
          {
            "path": "../../src/builder/vite/vite.config.client.js",
            "relativePath": "builder/vite/vite.config.client.js",
            "extension": ".js",
            "content": "import fs from 'fs';\nimport lodash from 'lodash';\nimport path from 'path';\nimport * as purgecss from 'purgecss';\nimport * as workboxBuild from 'workbox-build';\nimport baseConfig from './vite.config.base.js';\nconst { merge } = lodash;\nconst { generateSW } = workboxBuild;\nexport default projectRoot => {\n  const isProd = process.env.NODE_ENV === 'production';\n  // Базовая конфигурация для клиентской части\n  const clientConfig = {\n    // Основная точка входа\n    build: {\n      outDir: path.resolve(projectRoot, 'builds/web/client'),\n      emptyOutDir: true, // эквивалент clean: true в Webpack\n      sourcemap: true,\n      rollupOptions: {\n        input: {\n          main: path.resolve(projectRoot, 'src/client.js'),\n        },\n        output: {\n          // Настройки форматирования имен файлов\n          entryFileNames: '[name].[hash].js',\n          chunkFileNames: '[name].[hash].js',\n          assetFileNames: '[name].[hash].[ext]',\n          // Настройки разделения кода\n          manualChunks(id) {\n            if (id.includes('node_modules')) {\n              return 'vendors';\n            }\n          },\n        },\n      },\n      // Оптимизация в production\n      minify: isProd ? 'terser' : false,\n      terserOptions: isProd\n        ? {\n            compress: {\n              drop_console: true,\n              drop_debugger: true,\n            },\n          }\n        : undefined,\n      // Настройки CSS минификации\n      cssMinify: isProd ? 'cssnano' : false,\n      cssCodeSplit: true,\n    },\n    // В режиме разработки используем HMR\n    server: {\n      hmr: !isProd,\n    },\n    // Добавляем пользовательские плагины\n    plugins: [\n      // Плагин для PurgeCSS\n      {\n        name: 'vite-plugin-purge-css',\n        apply: 'build', // Применяем только при сборке\n        enforce: 'post', // После всех других плагинов\n        transformIndexHtml: {\n          enforce: 'post',\n          transform(html, { bundle }) {\n            if (!isProd) return html;\n            // Здесь можно реализовать PurgeCSS для HTML\n            return html;\n          },\n        },\n        async generateBundle(options, bundle) {\n          if (!isProd) return;\n          const cssFiles = Object.keys(bundle).filter(key => key.endsWith('.css'));\n          for (const cssFile of cssFiles) {\n            const content = bundle[cssFile].source;\n            const purged = await new purgecss.PurgeCSS().purge({\n              content: [\n                path.join(projectRoot, 'src/**/*.vue'),\n                path.join(projectRoot, 'martyrs/src/**/*.vue'),\n                path.join(projectRoot, '/node_modules/@ozdao/martyrs/src/**/*.vue'),\n                path.join(projectRoot, '/node_modules/@vuepic/vue-datepicker/**/*.js'),\n              ],\n              css: [{ raw: content }],\n              safelist: {\n                standard: ['safelisted', /^html/, /^:root/],\n                deep: [/^safelisted-deep-/, /^html/, /^:root/],\n                greedy: [/data-v-.*/],\n              },\n              extractors: [\n                {\n                  extractor: content => {\n                    // fix for escaped tailwind prefixes (sm:, lg:, etc)\n                    return content.match(/[A-Za-z0-9-_:/]+/g) || [];\n                  },\n                  extensions: ['vue'],\n                },\n              ],\n            });\n            if (purged.length > 0 && purged[0].css) {\n              bundle[cssFile].source = purged[0].css;\n            }\n          }\n        },\n      },\n      // Workbox плагин для PWA\n      {\n        name: 'vite-plugin-workbox',\n        apply: 'build',\n        closeBundle: async () => {\n          if (!isProd) {\n            // Для режима разработки можно создать минимальный сервис-воркер\n            const devSwContent = `\n              self.addEventListener('install', () => self.skipWaiting());\n              self.addEventListener('activate', () => self.clients.claim());\n            `;\n            fs.writeFileSync(path.join(path.resolve(projectRoot, 'builds/web/client'), 'sw.js'), devSwContent);\n            return;\n          }\n          // Для продакшена используем полноценный Workbox\n          const { swDest, count, size, warnings } = await generateSW({\n            globDirectory: path.resolve(projectRoot, 'builds/web/client'),\n            swDest: path.join(path.resolve(projectRoot, 'builds/web/client'), 'sw.js'),\n            clientsClaim: true,\n            skipWaiting: true,\n          });\n          if (warnings.length > 0) {\n            console.warn('Workbox warnings: ', warnings);\n          }\n          console.log(`Generated service worker at ${swDest}, which will precache ${count} files (${size} bytes)`);\n        },\n      },\n      // Плагин для записи статистики сборки\n      {\n        name: 'vite-plugin-stats-writer',\n        apply: 'build',\n        closeBundle: async (options, bundle) => {\n          // Создаем статистику сборки\n          const stats = {\n            entrypoints: {},\n            assetsByChunkName: {},\n            assets: [],\n          };\n          // Заполняем статистику на основе бандла\n          for (const [fileName, asset] of Object.entries(bundle)) {\n            if (fileName.endsWith('.js')) {\n              stats.assets.push({\n                name: fileName,\n                size: asset.code ? asset.code.length : 0,\n                emitted: true,\n              });\n              if (fileName.includes('main')) {\n                stats.entrypoints.main = { assets: [fileName] };\n                stats.assetsByChunkName.main = [fileName];\n              } else if (fileName.includes('vendors')) {\n                stats.assetsByChunkName.vendors = [fileName];\n              }\n            }\n          }\n          // Записываем статистику в файл\n          fs.writeFileSync(path.join(path.resolve(projectRoot, 'builds/web/client'), 'stats.json'), JSON.stringify(stats, null, 2));\n        },\n      },\n    ],\n  };\n  // Объединяем базовый конфиг с клиентским\n  return merge({}, baseConfig(projectRoot), clientConfig);\n};\n",
            "name": "vite.config.client.js",
            "size": 5981,
            "type": "source"
          },
          {
            "path": "../../src/builder/vite/vite.config.server.js",
            "relativePath": "builder/vite/vite.config.server.js",
            "extension": ".js",
            "content": "import module$0 from 'module';\nimport path from 'path';\nconst { builtinModules } = module$0;\nexport default projectRoot => {\n  // Получаем список встроенных модулей Node.js\n  const nodeBuiltins = builtinModules.filter(m => m !== 'process');\n  return {\n    // Обязательно указываем, что это SSR конфигурация\n    ssr: {\n      // Внешние зависимости для SSR (не включать в бандл)\n      // Это эквивалент nodeExternals в Webpack\n      noExternal: ['**/node_modules/**'],\n      // Можно указать какие модули включать в бандл, если нужно\n      // external: [...nodeBuiltins],\n    },\n    // Режим сборки для сервера всегда development\n    // (production оптимизации менее важны для серверного кода)\n    mode: 'development',\n    // Убираем оптимизации, не нужные для SSR\n    optimizeDeps: {\n      disabled: true,\n    },\n    // Настройки сборки\n    build: {\n      ssr: path.resolve(projectRoot, 'src/server.js'),\n      outDir: path.resolve(projectRoot, 'builds/web/server'),\n      emptyOutDir: true, // эквивалент clean: true в Webpack\n      sourcemap: true,\n      // Настройки сборки, специфичные для SSR\n      rollupOptions: {\n        input: path.resolve(projectRoot, 'src/server.js'),\n        output: {\n          // Имя выходного файла\n          entryFileNames: 'server.[hash].js',\n          format: 'cjs', // CommonJS формат для Node.js\n        },\n        // Не включаем node_modules в бандл\n        external: [\n          ...nodeBuiltins,\n          /^node:/, // Новый префикс импорта node:* модулей\n          /^[^./]/, // Все пакеты, которые не начинаются с . или / (node_modules)\n        ],\n      },\n      // Отключаем минимизацию для серверного кода\n      minify: false,\n    },\n    // Настройки разрешения путей\n    resolve: {\n      alias: {\n        '@martyrs': path.resolve(projectRoot, 'martyrs'),\n      },\n    },\n    // Настройки сервера разработки\n    server: {\n      hmr: true, // Hot Module Replacement для серверного кода\n    },\n    // Определяем, как обрабатывать определенные импорты\n    plugins: [\n      // Плагин для обработки импортов Node.js\n      {\n        name: 'vite-plugin-node-polyfills',\n        config(config) {\n          // Добавляем пустышки для Node.js модулей, которые не нужны в бандле\n          config.resolve = config.resolve || {};\n          config.resolve.alias = config.resolve.alias || {};\n          // 'path: false' в Webpack эквивалентно:\n          if (!config.resolve.alias.path) {\n            config.resolve.alias.path = false;\n          }\n        },\n      },\n      // Плагин для поддержки HMR в серверном коде\n      {\n        name: 'vite-plugin-ssr-hmr',\n        apply: 'serve', // Только для режима разработки\n        configureServer(server) {\n          // Наблюдение за серверными файлами\n          server.watcher.add(path.resolve(projectRoot, 'src/**/*'));\n          // Можно добавить дополнительную логику для перезапуска сервера\n          // при изменении серверных файлов\n          server.watcher.on('change', file => {\n            if (file.includes('src/server')) {\n              console.log('Server file changed, reloading...');\n              // В Vite перезагрузка модулей обрабатывается автоматически\n            }\n          });\n        },\n      },\n    ],\n  };\n};\n",
            "name": "vite.config.server.js",
            "size": 3207,
            "type": "source"
          },
          {
            "path": "../../src/builder/vite/vite.config.spa.js",
            "relativePath": "builder/vite/vite.config.spa.js",
            "extension": ".js",
            "content": "import fs from 'fs';\nimport lodash from 'lodash';\nimport path from 'path';\nimport { createHtmlPlugin } from 'vite-plugin-html';\nimport page from '../templates/page.js';\nimport baseConfig from './vite.config.base.js';\nconst { merge } = lodash;\nexport default projectRoot => {\n  const isProd = process.env.NODE_ENV === 'production';\n  // SPA config - equivalent to the spaConfig in the original webpack\n  const spaConfig = {\n    // Set mode based on environment\n    mode: !isProd ? 'development' : 'production',\n    // Entry point (entry is implicit in Vite but can be specified)\n    build: {\n      rollupOptions: {\n        input: path.resolve(projectRoot, 'src/client.js'),\n      },\n      // Override output directory\n      outDir: path.resolve(projectRoot, 'builds/web/spa'),\n      // Clean the output directory before build\n      emptyOutDir: true,\n    },\n    // Add HTML plugin for SPA\n    plugins: [\n      { createHtmlPlugin }.createHtmlPlugin({\n        minify: isProd,\n        inject: {\n          data: {\n            googleTagId: process.env.GOOGLE_TAG_ID,\n            googleMapApiKey: process.env.GOOGLE_MAPS_API_KEY,\n          },\n        },\n        template: page,\n      }),\n      // Stats plugin (equivalent to StatsWriterPlugin)\n      {\n        name: 'stats-writer',\n        apply: 'build',\n        writeBundle(options, bundle) {\n          const stats = JSON.stringify(\n            Object.keys(bundle).reduce((acc, key) => {\n              acc[key] = {\n                size: bundle[key].code?.length || 0,\n              };\n              return acc;\n            }, {})\n          );\n          fs.writeFileSync(path.resolve(options.dir, 'stats.json'), stats);\n        },\n      },\n      // Limit chunks (equivalent to LimitChunkCountPlugin)\n      {\n        name: 'limit-chunks',\n        apply: 'build',\n        config(config) {\n          if (!config.build) config.build = {};\n          if (!config.build.rollupOptions) config.build.rollupOptions = {};\n          if (!config.build.rollupOptions.output) config.build.rollupOptions.output = {};\n          config.build.rollupOptions.output.manualChunks = () => 'main';\n        },\n      },\n      // Uncomment if you need CopyWebpackPlugin equivalent\n      /*\n            require('vite-plugin-static-copy').viteStaticCopy({\n              targets: [\n                { src: path.resolve(projectRoot, \"../public/logo\"), dest: '' },\n                { src: path.resolve(projectRoot, \"../public/walkthrough\"), dest: '' },\n                { src: path.resolve(projectRoot, \"../public/icons\"), dest: '' }\n              ]\n            })\n            */\n    ],\n    // Server options\n    server: {\n      hot: true,\n    },\n  };\n  // Merge client config with spa config (equivalent to webpack-merge)\n  return merge(baseConfig(projectRoot), spaConfig);\n};\n",
            "name": "vite.config.spa.js",
            "size": 2787,
            "type": "source"
          },
          {
            "path": "../../src/builder/vite/vite.config.ssr.js",
            "relativePath": "builder/vite/vite.config.ssr.js",
            "extension": ".js",
            "content": "import fs from 'fs';\nimport lodash from 'lodash';\nimport path from 'path';\nimport getBaseConfig from './vite.config.base.js';\nconst { merge } = lodash;\nexport default projectRoot => {\n  const isProd = process.env.NODE_ENV === 'production';\n  // SSR specific configuration\n  const ssrConfig = {\n    // Build for SSR\n    build: {\n      ssr: true,\n      // Output location\n      outDir: path.resolve(projectRoot, 'builds/web/server'),\n      // Entry point\n      rollupOptions: {\n        input: path.resolve(projectRoot, 'src/client.js'),\n        output: {\n          // Format for Node.js compatibility (equivalent to libraryTarget: \"commonjs2\")\n          format: 'cjs',\n          // Generate filename with hash\n          entryFileNames: 'main.[hash].js',\n        },\n        // External packages that shouldn't be bundled (equivalent to nodeExternals)\n        external: [\n          'vue',\n          'vue-router',\n          'vuex',\n          // Add other Node.js built-ins and dependencies that should be external\n          ...Object.keys(require(path.resolve(projectRoot, 'package.json')).dependencies || {}).filter(dep => !dep.startsWith('vue-meta') && !/\\.(css|sass|scss|vue|html)$/.test(dep)),\n        ],\n        preserveEntrySignatures: 'strict',\n      },\n      // Don't minify for SSR build\n      minify: false,\n      // Clean output directory before build\n      emptyOutDir: true,\n    },\n    // Additional plugins for SSR\n    plugins: [\n      // Limit chunks plugin (equivalent to LimitChunkCountPlugin)\n      {\n        name: 'limit-chunks',\n        apply: 'build',\n        config(config) {\n          if (!config.build) config.build = {};\n          if (!config.build.rollupOptions) config.build.rollupOptions = {};\n          if (!config.build.rollupOptions.output) config.build.rollupOptions.output = {};\n          // Force single chunk\n          config.build.rollupOptions.output.manualChunks = () => 'main';\n        },\n      },\n      // Manifest plugin (equivalent to WebpackManifestPlugin)\n      ...(isProd\n        ? [\n            {\n              name: 'manifest-plugin',\n              apply: 'build',\n              closeBundle() {\n                // Create a simple manifest of the build assets\n                const outDir = path.resolve(projectRoot, 'builds/web/server');\n                const files = fs.readdirSync(outDir).filter(file => file.endsWith('.js'));\n                const manifest = {};\n                files.forEach(file => {\n                  const name = file.split('.')[0];\n                  manifest[`${name}.js`] = file;\n                });\n                fs.writeFileSync(path.resolve(outDir, 'manifest.json'), JSON.stringify(manifest, null, 2));\n              },\n            },\n          ]\n        : []),\n      // Handle CSS for SSR (equivalent to null-loader for CSS)\n      {\n        name: 'ignore-css-for-ssr',\n        transform(code, id) {\n          if (/\\.(css|less|sass|scss)$/.test(id)) {\n            return {\n              code: 'export default {}',\n              map: null,\n            };\n          }\n        },\n      },\n    ],\n    // Specify that this is for SSR\n    ssr: {\n      // Target is Node.js\n      target: 'node',\n      // Force CommonJS format\n      format: 'cjs',\n      // Don't optimize dependencies\n      optimizeDeps: {\n        disabled: true,\n      },\n    },\n    // Don't process CSS for SSR\n    css: {\n      devSourcemap: false,\n      // Empty CSS during SSR\n      postcss: {\n        plugins: [\n          {\n            postcssPlugin: 'postcss-empty-for-ssr',\n            Once() {\n              return {};\n            },\n          },\n        ],\n      },\n    },\n    // Server specific optimizations\n    optimizeDeps: {\n      // Disable optimization for server build\n      disabled: true,\n    },\n  };\n  // Merge base config with SSR config\n  return merge(getBaseConfig(projectRoot), ssrConfig);\n};\n",
            "name": "vite.config.ssr.js",
            "size": 3850,
            "type": "source"
          }
        ]
      },
      "webpack": {
        "_files": [
          {
            "path": "../../src/builder/webpack/index.js",
            "relativePath": "builder/webpack/index.js",
            "extension": ".js",
            "content": "import baseConfig from './webpack.config.base.js';\nimport clientConfig from './webpack.config.client.js';\nimport serverConfig from './webpack.config.server.js';\nimport spaConfig from './webpack.config.spa.js';\nimport ssrConfig from './webpack.config.ssr.js';\n\nexport default {\n  baseConfig,\n  clientConfig,\n  serverConfig,\n  spaConfig,\n  ssrConfig,\n};\n",
            "name": "index.js",
            "size": 352,
            "type": "source"
          },
          {
            "path": "../../src/builder/webpack/webpack.config.base.js",
            "relativePath": "builder/webpack/webpack.config.base.js",
            "extension": ".js",
            "content": "import path from 'path';\nimport webpack from 'webpack';\nimport dotenv from 'dotenv-webpack';\n\nimport MiniCssExtractPlugin from 'mini-css-extract-plugin';\nimport { CleanWebpackPlugin } from 'clean-webpack-plugin';\nimport { VueLoaderPlugin } from 'vue-loader';\nimport { BundleAnalyzerPlugin } from 'webpack-bundle-analyzer';\n\nexport default projectRoot => {\n  return {\n    resolve: {\n      alias: {\n        '@': path.resolve(projectRoot, 'src'),\n        '@martyrs': path.resolve(projectRoot, 'martyrs'),\n        vue: path.resolve(projectRoot, 'node_modules/vue'),\n        'vue-router': path.resolve(projectRoot, 'node_modules/vue-router'),\n        'vue-i18n': path.resolve(projectRoot, 'node_modules/vue-i18n'),\n      },\n      fallback: {\n        path: false,\n      },\n      extensions: ['.js', '.json', '.jsx', '.ts', '.tsx'],\n    },\n    module: {\n      rules: [\n        {\n          test: /\\.m?js$/,\n          exclude: /node_modules\\/(?!(vue-meta)\\/).*/,\n          use: {\n            loader: 'babel-loader',\n            options: {\n              configFile: path.resolve(projectRoot, 'babel.config.js'),\n              // Добавляем опции для ESM\n              presets: [\n                ['@babel/preset-env', {\n                  modules: false, // Важно: отключаем преобразование в CommonJS\n                  targets: {\n                    node: 'current',\n                  },\n                }]\n              ],\n              plugins: [\n                // Заменяем @babel/plugin-transform-runtime на ESM совместимую версию\n                ['@babel/plugin-transform-runtime', {\n                  useESModules: true, // Важно: используем ESM версию хелперов\n                  regenerator: true,\n                }],\n              ]\n            },\n          },\n        },\n        {\n          test: /\\.vue$/,\n          use: [\n            {\n              loader: 'vue-loader',\n            },\n          ],\n        },\n        {\n          test: /\\.(sa|sc|c)ss$/,\n          use: [\n            process.env.NODE_ENV !== 'production' ? 'vue-style-loader' : MiniCssExtractPlugin.loader,\n            {\n              loader: 'css-loader',\n              options: {\n                sourceMap: true,\n                url: {\n                  filter: (url, resourcePath) => {\n                    if (url.indexOf('/fonts/') == 0) {\n                      return false;\n                    }\n                    return true;\n                  },\n                },\n              },\n            },\n            {\n              loader: 'sass-loader',\n              options: {\n                sourceMap: true,\n              },\n            },\n          ],\n        },\n        {\n          test: /\\.(?:ico|gif|png|jpg|jpeg|mp4|webp|webm|svg|woff2?|eot|ttf|otf)$/i,\n          use: {\n            loader: 'url-loader',\n            options: {\n              emitFile: false,\n            },\n          },\n        },\n      ],\n    },\n    plugins: [\n      ...(process.env.BUNDLE_ANALYZER ? [new BundleAnalyzerPlugin()] : []),\n      new MiniCssExtractPlugin({\n        filename: '[name].[contenthash].css',\n        chunkFilename: '[id].[contenthash].css',\n        ignoreOrder: true,\n      }),\n      new CleanWebpackPlugin(),\n      new VueLoaderPlugin(),\n      new dotenv({\n        path: `.env.${process.env.NODE_ENV}`,\n      }),\n      new webpack.DefinePlugin({\n        __VUE_I18N_LEGACY_API__: false,\n        __VUE_OPTIONS_API__: true,\n        __VUE_PROD_DEVTOOLS_: false,\n        __VUE_PROD_DEVTOOLS__: true,\n        __VUE_PROD_HYDRATION_MISMATCH_DETAILS__: true,\n        __VUE_I18N_FULL_INSTALL__: true,\n        __INTLIFY_PROD_DEVTOOLS__: false,\n        __MOBILE_APP__: process.env.MODE === 'SPA' ? true : false,\n      }),\n    ],\n    infrastructureLogging: {\n      level: 'verbose',\n    },\n    stats: {\n      colors: true,\n      hash: true,\n      version: true,\n      timings: true,\n      assets: true,\n      chunks: true,\n      modules: true,\n      reasons: true,\n      children: true,\n      source: true,\n      errors: true,\n      errorDetails: true,\n      errorStack: true,\n      warnings: true,\n      publicPath: true,\n    },\n  };\n};\n",
            "name": "webpack.config.base.js",
            "size": 4096,
            "type": "source"
          },
          {
            "path": "../../src/builder/webpack/webpack.config.client.js",
            "relativePath": "builder/webpack/webpack.config.client.js",
            "extension": ".js",
            "content": "import CssMinimizerPlugin from 'css-minimizer-webpack-plugin';\nimport glob from 'glob-all';\nimport path from 'path';\nimport { PurgeCSSPlugin } from 'purgecss-webpack-plugin';\nimport TerserPlugin from 'terser-webpack-plugin';\nimport { merge } from 'webpack-merge';\nimport { StatsWriterPlugin } from 'webpack-stats-plugin';\n\nimport baseConfig from './webpack.config.base.js';\nexport default projectRoot => {\n  const isProd = process.env.NODE_ENV === 'production';\n  const config = {\n    mode: !isProd ? 'development' : 'production',\n    devtool: !isProd ? 'inline-source-map' : 'source-map',\n    entry: {\n      main: !isProd ? [path.resolve('../utils/hot-reload.js'), path.resolve(projectRoot, 'src/client.js')] : path.resolve(projectRoot, 'src/client.js'),\n    },\n    module: {\n      rules: [],\n    },\n    output: {\n      filename: '[name].[fullhash].js',\n      chunkFilename: '[name].[contenthash].js',\n      path: path.resolve(projectRoot, 'builds/web/client'),\n      publicPath: '/',\n      clean: true,\n    },\n    plugins: [\n      // ...(!isProd ? [new webpack.HotModuleReplacementPlugin()] : []),\n      new StatsWriterPlugin(),\n      ...(!isProd\n        ? [\n            // new WorkboxPlugin.GenerateSW({\n            //   clientsClaim: true,\n            //   skipWaiting: true,\n            //   disableDevLogs: true\n            // }),\n          ]\n        : []),\n      new PurgeCSSPlugin({\n        printRejected: true,\n        paths: glob.sync([\n          path.join(projectRoot, 'src/**/*.vue'),\n          path.join(projectRoot, 'src/**/*.js'),\n          path.join(projectRoot, 'martyrs/src/**/*.vue'),\n          path.join(projectRoot, 'martyrs/src/**/*.js'),\n          path.join(projectRoot, '/node_modules/@ozdao/martyrs/**/*.css'),\n          path.join(projectRoot, '/node_modules/@ozdao/martyrs/**/*.scss'),\n          path.join(projectRoot, '/node_modules/@ozdao/martyrs/src/**/*.vue'),\n          path.join(projectRoot, '/node_modules/@ozdao/martyrs/src/**/*.js'),\n          path.join(projectRoot, '/node_modules/@vuepic/vue-datepicker/**/*.js'),\n        ]),\n        safelist: {\n          standard: ['safelisted', /^html/, /^:root/],\n          deep: [/^safelisted-deep-/, /^html/, /^:root/],\n          greedy: [/data-v-.*/],\n        },\n        extractors: [\n          {\n            extractor: content => {\n              // fix for escaped tailwind prefixes (sm:, lg:, etc)\n              return content.match(/[A-Za-z0-9-_:/]+/g) || [];\n            },\n            extensions: ['vue'],\n          },\n        ],\n      }),\n    ],\n    optimization: {\n      usedExports: true,\n      splitChunks: {\n        chunks: 'async',\n        minSize: 0,\n        minRemainingSize: 0,\n        minChunks: 1,\n        maxAsyncRequests: 30,\n        maxInitialRequests: 30,\n        enforceSizeThreshold: 50000,\n        cacheGroups: {\n          vendor: {\n            test: /[\\\\/]node_modules[\\\\/]/,\n            name: 'vendors',\n            priority: -10,\n            reuseExistingChunk: true,\n          },\n        },\n      },\n      minimize: isProd,\n      minimizer: [new TerserPlugin(), new CssMinimizerPlugin()],\n    },\n  };\n  return merge(baseConfig(projectRoot), config);\n};\n",
            "name": "webpack.config.client.js",
            "size": 3157,
            "type": "source"
          },
          {
            "path": "../../src/builder/webpack/webpack.config.server.js",
            "relativePath": "builder/webpack/webpack.config.server.js",
            "extension": ".js",
            "content": "// webpack.config.server.js\nimport path from 'path';\nimport webpack from 'webpack';\nimport nodeExternals from 'webpack-node-externals';\n\nexport default projectRoot => {\n  return {\n    target: 'node',\n    mode: 'development',\n    entry: [path.resolve(projectRoot, 'src/server.js')],\n    output: {\n      filename: 'server.[fullhash].js',\n      path: path.resolve(projectRoot, 'builds/web/server'),\n      libraryTarget: 'module',\n      module: true,\n      clean: true,\n    },\n    experiments: {\n      outputModule: true,\n    },\n    resolve: {\n      alias: {\n        '@martyrs': path.resolve(projectRoot, 'martyrs'),\n      },\n      fallback: {\n        path: false,\n      },\n    },\n    externals: [nodeExternals({\n      // Добавляем опцию importType для использования ESM импортов\n      importType: 'module'\n    })],\n    plugins: [new webpack.HotModuleReplacementPlugin()],\n  };\n};",
            "name": "webpack.config.server.js",
            "size": 876,
            "type": "source"
          },
          {
            "path": "../../src/builder/webpack/webpack.config.spa.js",
            "relativePath": "builder/webpack/webpack.config.spa.js",
            "extension": ".js",
            "content": "import CssMinimizerPlugin from 'css-minimizer-webpack-plugin';\nimport { promises } from 'fs';\nimport HtmlWebpackPlugin from 'html-webpack-plugin';\nimport Mustache from 'mustache';\nimport path from 'path';\nimport TerserPlugin from 'terser-webpack-plugin';\nimport webpack from 'webpack';\nimport { merge } from 'webpack-merge';\nimport { StatsWriterPlugin } from 'webpack-stats-plugin';\n\nimport template from '../templates/page.js';\nimport getClientConfig from './webpack.config.client.js';\nconst fs = { promises }.promises;\nconst isProd = process.env.NODE_ENV === 'production';\n\nexport default projectRoot => {\n  const spaConfig = {\n    mode: !isProd ? 'development' : 'production',\n    devtool: 'source-map',\n    entry: {\n      main: path.resolve(projectRoot, 'src/client.js'),\n    },\n    output: {\n      filename: 'main.js',\n      path: path.resolve(projectRoot, 'builds/web/spa'),\n      clean: true,\n    },\n    target: 'web',\n    plugins: [\n      // ...(!isProd ? [new webpack.HotModuleReplacementPlugin()] : []),\n      new StatsWriterPlugin(),\n      new webpack.optimize.LimitChunkCountPlugin({\n        maxChunks: 1,\n      }),\n      new HtmlWebpackPlugin({\n        templateContent: async () => {\n          const meta = {\n            htmlAttrs: 'lang=\"en\"',\n            headAttrs: '',\n            bodyAttrs: '',\n            // head: '<meta name=\"description\" content=\"Example\">',\n            body: '',\n          };\n          const data = {\n            googleTagId: process.env.GOOGLE_TAG_ID,\n            googleMapApiKey: process.env.GOOGLE_MAPS_API_KEY,\n            meta,\n          };\n          return Mustache.render(template, data);\n        },\n        filename: 'index.html',\n        inject: 'body',\n      }),\n      // new CopyWebpackPlugin({\n      //   patterns: [\n      //     { from: path.resolve(projectRoot, \"../public/logo\"), to: 'logo' },\n      //     { from: path.resolve(projectRoot, \"../public/walkthrough\"), to: 'walkthrough' },\n      //     { from: path.resolve(projectRoot, \"../public/icons\"), to: 'icons' }\n      //   ]\n      // })\n      // new ServiceWorkerPlugin()\n    ],\n    optimization: {\n      minimizer: [new TerserPlugin(), new CssMinimizerPlugin()],\n    },\n  };\n  return merge(getClientConfig(projectRoot), spaConfig);\n};\n",
            "name": "webpack.config.spa.js",
            "size": 2247,
            "type": "source"
          },
          {
            "path": "../../src/builder/webpack/webpack.config.ssr.js",
            "relativePath": "builder/webpack/webpack.config.ssr.js",
            "extension": ".js",
            "content": "// webpack.config.ssr.js\nimport path from 'path';\nimport webpack from 'webpack';\nimport { WebpackManifestPlugin } from 'webpack-manifest-plugin';\nimport { merge } from 'webpack-merge';\nimport nodeExternals from 'webpack-node-externals';\nimport getBaseConfig from './webpack.config.base.js';\n\nexport default projectRoot => {\n  const isProd = process.env.NODE_ENV === 'production';\n  const ssrConfig = {\n    target: 'node',\n    mode: !isProd ? 'development' : 'production',\n    entry: {\n      main: path.resolve(projectRoot, 'src/client.js'),\n    },\n    output: {\n      filename: 'main.[fullhash].js',\n      path: path.resolve(projectRoot, 'builds/web/server'),\n      libraryTarget: 'module',    \n      module: true,\n      clean: true,\n    },\n    experiments: {\n      outputModule: true,\n    },\n    module: {\n      rules: [\n        {\n          test: /\\.css$/,\n          use: 'null-loader',\n        },\n      ],\n    },\n    optimization: {\n      minimize: false,\n    },\n    plugins: [\n      new webpack.optimize.LimitChunkCountPlugin({\n        maxChunks: 1,\n      }),\n      ...(isProd\n        ? [\n            new WebpackManifestPlugin({\n              fileName: 'manifest.json',\n            }),\n          ]\n        : []),\n    ],\n    externals: [\n      nodeExternals({\n        allowlist: [/^vue-meta*/, /\\.(css|sass|scss)$/, /\\.(vue)$/, /\\.(html)$/],\n        // Добавляем опцию importType для использования ESM импортов\n        importType: 'module'\n      }),\n    ],\n  };\n  return merge(getBaseConfig(projectRoot), ssrConfig);\n};",
            "name": "webpack.config.ssr.js",
            "size": 1521,
            "type": "source"
          }
        ]
      }
    },
    "components": {
      "FieldPhone": {
        "_files": [
          {
            "path": "../../src/components/FieldPhone/all-countries.js",
            "relativePath": "components/FieldPhone/all-countries.js",
            "extension": ".js",
            "content": "const allCountries = [\n  ['‫افغانستان‬‎', 'af', '93', , '🇦🇫'],\n  ['Shqipëri', 'al', '355', , '🇦🇱'],\n  ['‫الجزائر‬‎', 'dz', '213', , '🇩🇿'],\n  ['American Samoa', 'as', '1684', , '🇦🇸'],\n  ['Andorra', 'ad', '376', , '🇦🇩'],\n  ['Angola', 'ao', '244', , '🇦🇴'],\n  ['Anguilla', 'ai', '1264', , '🇦🇮'],\n  ['Antigua and Barbuda', 'ag', '1268', , '🇦🇬'],\n  ['Argentina', 'ar', '54', , '🇦🇷'],\n  ['Հայաստան', 'am', '374', , '🇦🇲'],\n  ['Aruba', 'aw', '297', , '🇦🇼'],\n  ['Australia', 'au', '61', 0, , '🇦🇺'],\n  ['Österreich', 'at', '43', , '🇦🇹'],\n  ['Azərbaycan', 'az', '994', , '🇦🇿'],\n  ['Bahamas', 'bs', '1242', , '🇧🇸'],\n  ['‫البحرين‬‎', 'bh', '973', , '🇧🇭'],\n  ['বাংলাদেশ', 'bd', '880', , '🇧🇩'],\n  ['Barbados', 'bb', '1246', , '🇧🇧'],\n  ['Беларусь', 'by', '375', , '🇧🇾'],\n  ['België', 'be', '32', , '🇧🇪'],\n  ['Belize', 'bz', '501', , '🇧🇿'],\n  ['Bénin', 'bj', '229', , '🇧🇯'],\n  ['Bermuda', 'bm', '1441', , '🇧🇲'],\n  ['འབྲུག', 'bt', '975', , '🇧🇹'],\n  ['Bolivia', 'bo', '591', , '🇧🇴'],\n  ['Босна и Херцеговина', 'ba', '387', , '🇧🇦'],\n  ['Botswana', 'bw', '267', , '🇧🇼'],\n  ['Brasil', 'br', '55', , '🇧🇷'],\n  ['British Indian Ocean Territory', 'io', '246', , '🇮🇴'],\n  ['British Virgin Islands', 'vg', '1284', , '🇻🇬'],\n  ['Brunei', 'bn', '673', , '🇧🇳'],\n  ['България', 'bg', '359', , '🇧🇬'],\n  ['Burkina Faso', 'bf', '226', , '🇧🇫'],\n  ['Uburundi', 'bi', '257', , '🇧🇮'],\n  ['កម្ពុជា', 'kh', '855', , '🇰🇭'],\n  ['Cameroun', 'cm', '237', , '🇨🇲'],\n  ['Canada', 'ca', '1', 1, '🇨🇦'],\n  ['Kabu Verdi', 'cv', '238', , '🇨🇻'],\n  ['Caribbean Netherlands', 'bq', '599', 1, , '🇧🇶'],\n  ['Cayman Islands', 'ky', '1345', , '🇰🇾'],\n  ['République centrafricaine', 'cf', '236', , '🇨🇫'],\n  ['Tchad', 'td', '235', , '🇹🇩'],\n  ['Chile', 'cl', '56', , '🇨🇱'],\n  ['中国', 'cn', '86', , '🇨🇳'],\n  ['Christmas Island', 'cx', '61', 2, , '🇨🇽'],\n  ['Keeling', 'cc', '61', 1, , '🇨🇨'],\n  ['Colombia', 'co', '57', , '🇨🇴'],\n  ['‫جزر القمر‬‎', 'km', '269', , '🇰🇲'],\n  ['DRC', 'cd', '243', , '🇨🇩'],\n  ['Republic', 'cg', '242', , '🇨🇬'],\n  ['Cook Islands', 'ck', '682', , '🇨🇰'],\n  ['Costa Rica', 'cr', '506', , '🇨🇷'],\n  ['Côte d’Ivoire', 'ci', '225', , '🇨🇮'],\n  ['Hrvatska', 'hr', '385', , '🇭🇷'],\n  ['Cuba', 'cu', '53', , '🇨🇺'],\n  ['Curaçao', 'cw', '599', 0, , '🇨🇼'],\n  ['Κύπρος', 'cy', '357', , '🇨🇾'],\n  ['Česká republika', 'cz', '420', , '🇨🇿'],\n  ['Danmark', 'dk', '45', , '🇩🇰'],\n  ['Djibouti', 'dj', '253', , '🇩🇯'],\n  ['Dominica', 'dm', '1767', , '🇩🇲'],\n  ['República Dominicana', 'do', '1', 2, ['809', '829', '849', '🇩🇴']],\n  ['Ecuador', 'ec', '593', , '🇪🇨'],\n  ['‫مصر‬‎', 'eg', '20', , '🇪🇬'],\n  ['El Salvador', 'sv', '503', , '🇸🇻'],\n  ['Guinea Ecuatorial', 'gq', '240', , '🇬🇶'],\n  ['Eritrea', 'er', '291', , '🇪🇷'],\n  ['Eesti', 'ee', '372', , '🇪🇪'],\n  ['Ethiopia', 'et', '251', , '🇪🇹'],\n  ['Islas Malvinas', 'fk', '500', , '🇫🇰'],\n  ['Føroyar', 'fo', '298', , '🇫🇴'],\n  ['Fiji', 'fj', '679', , '🇫🇯'],\n  ['Suomi', 'fi', '358', 0, , '🇫🇮'],\n  ['France', 'fr', '33', , '🇫🇷'],\n  ['Guyane française', 'gf', '594', , '🇬🇫'],\n  ['Polynésie française', 'pf', '689', , '🇵🇫'],\n  ['Gabon', 'ga', '241', , '🇬🇦'],\n  ['Gambia', 'gm', '220', , '🇬🇲'],\n  ['საქართველო', 'ge', '995', , '🇬🇪'],\n  ['Deutschland', 'de', '49', , '🇩🇪'],\n  ['Gaana', 'gh', '233', , '🇬🇭'],\n  ['Gibraltar', 'gi', '350', , '🇬🇮'],\n  ['Ελλάδα', 'gr', '30', , '🇬🇷'],\n  ['Kalaallit Nunaat', 'gl', '299', , '🇬🇱'],\n  ['Grenada', 'gd', '1473', , '🇬🇩'],\n  ['Guadeloupe', 'gp', '590', 0, , '🇬🇵'],\n  ['Guam', 'gu', '1671', , '🇬🇺'],\n  ['Guatemala', 'gt', '502', , '🇬🇹'],\n  ['Guernsey', 'gg', '44', 1, , '🇬🇬'],\n  ['Guinée', 'gn', '224', , '🇬🇳'],\n  ['Guiné Bissau', 'gw', '245', , '🇬🇼'],\n  ['Guyana', 'gy', '592', , '🇬🇾'],\n  ['Haiti', 'ht', '509', , '🇭🇹'],\n  ['Honduras', 'hn', '504', , '🇭🇳'],\n  ['香港', 'hk', '852', , '🇭🇰'],\n  ['Magyarország', 'hu', '36', , '🇭🇺'],\n  ['Ísland', 'is', '354', , '🇮🇸'],\n  ['भारत', 'in', '91', , '🇮🇳'],\n  ['Indonesia', 'id', '62', , '🇮🇩'],\n  ['‫ایران‬‎', 'ir', '98', , '🇮🇷'],\n  ['‫العراق‬‎', 'iq', '964', , '🇮🇶'],\n  ['Ireland', 'ie', '353', , '🇮🇪'],\n  ['Isle of Man', 'im', '44', 2, , '🇮🇲'],\n  ['‫ישראל‬‎', 'il', '972', , '🇮🇱'],\n  ['Italia', 'it', '39', 0, , '🇮🇹'],\n  ['Jamaica', 'jm', '1876', , '🇯🇲'],\n  ['日本', 'jp', '81', , '🇯🇵'],\n  ['Jersey', 'je', '44', 3, , '🇯🇪'],\n  ['‫الأردن‬‎', 'jo', '962', , '🇯🇴'],\n  ['Казахстан', 'kz', '7', 1, , '🇰🇿'],\n  ['Kenya', 'ke', '254', , '🇰🇪'],\n  ['Kiribati', 'ki', '686', , '🇰🇮'],\n  ['Kosovo', 'xk', '383', , '🇽🇰'],\n  ['‫الكويت‬‎', 'kw', '965', , '🇰🇼'],\n  ['Кыргызстан', 'kg', '996', , '🇰🇬'],\n  ['ລາວ', 'la', '856', , '🇱🇦'],\n  ['Latvija', 'lv', '371', , '🇱🇻'],\n  ['‫لبنان‬‎', 'lb', '961', , '🇱🇧'],\n  ['Lesotho', 'ls', '266', , '🇱🇸'],\n  ['Liberia', 'lr', '231', , '🇱🇷'],\n  ['‫ليبيا‬‎', 'ly', '218', , '🇱🇾'],\n  ['Liechtenstein', 'li', '423', , '🇱🇮'],\n  ['Lietuva', 'lt', '370', , '🇱🇹'],\n  ['Luxembourg', 'lu', '352', , '🇱🇺'],\n  ['澳門', 'mo', '853', , '🇲🇴'],\n  ['FYROM', 'mk', '389', , '🇲🇰'],\n  ['Madagasikara', 'mg', '261', , '🇲🇬'],\n  ['Malawi', 'mw', '265', , '🇲🇼'],\n  ['Malaysia', 'my', '60', , '🇲🇾'],\n  ['Maldives', 'mv', '960', , '🇲🇻'],\n  ['Mali', 'ml', '223', , '🇲🇱'],\n  ['Malta', 'mt', '356', , '🇲🇹'],\n  ['Marshall Islands', 'mh', '692', , '🇲🇭'],\n  ['Martinique', 'mq', '596', , '🇲🇶'],\n  ['‫موريتانيا‬‎', 'mr', '222', , '🇲🇷'],\n  ['Moris', 'mu', '230', , '🇲🇺'],\n  ['Mayotte', 'yt', '262', 1, , '🇾🇹'],\n  ['México', 'mx', '52', , '🇲🇽'],\n  ['Micronesia', 'fm', '691', , '🇫🇲'],\n  ['Republica Moldova', 'md', '373', , '🇲🇩'],\n  ['Monaco', 'mc', '377', , '🇲🇨'],\n  ['Монгол', 'mn', '976', , '🇲🇳'],\n  ['Crna Gora', 'me', '382', , '🇲🇪'],\n  ['Montserrat', 'ms', '1664', , '🇲🇸'],\n  ['‫المغرب‬‎', 'ma', '212', 0, , '🇲🇦'],\n  ['Moçambique', 'mz', '258', , '🇲🇿'],\n  ['Burma', 'mm', '95', , '🇲🇲'],\n  ['Namibië', 'na', '264', , '🇳🇦'],\n  ['Nauru', 'nr', '674', , '🇳🇷'],\n  ['नेपाल', 'np', '977', , '🇳🇵'],\n  ['Nederland', 'nl', '31', , '🇳🇱'],\n  ['Nouvelle-Calédonie', 'nc', '687', , '🇳🇨'],\n  ['New Zealand', 'nz', '64', , '🇳🇿'],\n  ['Nicaragua', 'ni', '505', , '🇳🇮'],\n  ['Nijar', 'ne', '227', , '🇳🇪'],\n  ['Nigeria', 'ng', '234', , '🇳🇬'],\n  ['Niue', 'nu', '683', , '🇳🇺'],\n  ['Norfolk Island', 'nf', '672', , '🇳🇫'],\n  ['조선 민주주의 인민 공화국', 'kp', '850', , '🇰🇵'],\n  ['Northern Mariana Islands', 'mp', '1670', , '🇲🇵'],\n  ['Norge', 'no', '47', 0, , '🇳🇴'],\n  ['‫عُمان‬‎', 'om', '968', , '🇴🇲'],\n  ['‫پاکستان‬‎', 'pk', '92', , '🇵🇰'],\n  ['Palau', 'pw', '680', , '🇵🇼'],\n  ['‫فلسطين‬‎', 'ps', '970', , '🇵🇸'],\n  ['Panamá', 'pa', '507', , '🇵🇦'],\n  ['Papua New Guinea', 'pg', '675', , '🇵🇬'],\n  ['Paraguay', 'py', '595', , '🇵🇾'],\n  ['Perú', 'pe', '51', , '🇵🇪'],\n  ['Philippines', 'ph', '63', , '🇵🇭'],\n  ['Polska', 'pl', '48', , '🇵🇱'],\n  ['Portugal', 'pt', '351', , '🇵🇹'],\n  ['Puerto Rico', 'pr', '1', 3, ['787', '939', '🇵🇷']],\n  ['‫قطر‬‎', 'qa', '974', , '🇶🇦'],\n  ['La Réunion', 're', '262', 0, , '🇷🇪'],\n  ['România', 'ro', '40', , '🇷🇴'],\n  ['Россия', 'ru', '7', 0, , '🇷🇺'],\n  ['Rwanda', 'rw', '250', , '🇷🇼'],\n  ['Saint Barthélemy', 'bl', '590', 1, , '🇧🇱'],\n  ['Saint Helena', 'sh', '290', , '🇸🇭'],\n  ['Saint Kitts and Nevis', 'kn', '1869', , '🇰🇳'],\n  ['Saint Lucia', 'lc', '1758', , '🇱🇨'],\n  ['Saint-Martin (partie française', 'mf', '590', 2, , '🇲🇫'],\n  ['Saint-Pierre-et-Miquelon', 'pm', '508', , '🇵🇲'],\n  ['Saint Vincent and the Grenadines', 'vc', '1784', , '🇻🇨'],\n  ['Samoa', 'ws', '685', , '🇼🇸'],\n  ['San Marino', 'sm', '378', , '🇸🇲'],\n  ['São Tomé e Príncipe', 'st', '239', , '🇸🇹'],\n  ['‫المملكة العربية السعودية‬‎', 'sa', '966', , '🇸🇦'],\n  ['Sénégal', 'sn', '221', , '🇸🇳'],\n  ['Србија', 'rs', '381', , '🇷🇸'],\n  ['Seychelles', 'sc', '248', , '🇸🇨'],\n  ['Sierra Leone', 'sl', '232', , '🇸🇱'],\n  ['Singapore', 'sg', '65', , '🇸🇬'],\n  ['Sint Maarten', 'sx', '1721', , '🇸🇽'],\n  ['Slovensko', 'sk', '421', , '🇸🇰'],\n  ['Slovenija', 'si', '386', , '🇸🇮'],\n  ['Solomon Islands', 'sb', '677', , '🇸🇧'],\n  ['Soomaaliya', 'so', '252', , '🇸🇴'],\n  ['South Africa', 'za', '27', , '🇿🇦'],\n  ['대한민국', 'kr', '82', , '🇰🇷'],\n  ['‫جنوب السودان‬‎', 'ss', '211', , '🇸🇸'],\n  ['España', 'es', '34', , '🇪🇸'],\n  ['ශ්‍රී ලංකාව', 'lk', '94', , '🇱🇰'],\n  ['‫السودان‬‎', 'sd', '249', , '🇸🇩'],\n  ['Suriname', 'sr', '597', , '🇸🇷'],\n  ['Svalbard and Jan Mayen', 'sj', '47', 1, , '🇸🇯'],\n  ['Swaziland', 'sz', '268', , '🇸🇿'],\n  ['Sverige', 'se', '46', , '🇸🇪'],\n  ['Schweiz', 'ch', '41', , '🇨🇭'],\n  ['‫سوريا‬‎', 'sy', '963', , '🇸🇾'],\n  ['台灣', 'tw', '886', , '🇹🇼'],\n  ['Tajikistan', 'tj', '992', , '🇹🇯'],\n  ['Tanzania', 'tz', '255', , '🇹🇿'],\n  ['ไทย', 'th', '66', , '🇹🇭'],\n  ['Timor-Leste', 'tl', '670', , '🇹🇱'],\n  ['Togo', 'tg', '228', , '🇹🇬'],\n  ['Tokelau', 'tk', '690', , '🇹🇰'],\n  ['Tonga', 'to', '676', , '🇹🇴'],\n  ['Trinidad and Tobago', 'tt', '1868', , '🇹🇹'],\n  ['‫تونس‬‎', 'tn', '216', , '🇹🇳'],\n  ['Türkiye', 'tr', '90', , '🇹🇷'],\n  ['Turkmenistan', 'tm', '993', , '🇹🇲'],\n  ['Turks and Caicos Islands', 'tc', '1649', , '🇹🇨'],\n  ['Tuvalu', 'tv', '688', , '🇹🇻'],\n  ['U.S. Virgin Islands', 'vi', '1340', , '🇻🇮'],\n  ['Uganda', 'ug', '256', , '🇺🇬'],\n  ['Україна', 'ua', '380', , '🇺🇦'],\n  ['‫الإمارات العربية المتحدة‬‎', 'ae', '971', , '🇦🇪'],\n  ['United Kingdom', 'gb', '44', 0, , '🇬🇧'],\n  ['United States', 'us', '1', 0, , '🇺🇸'],\n  ['Uruguay', 'uy', '598', , '🇺🇾'],\n  ['Oʻzbekiston', 'uz', '998', , '🇺🇿'],\n  ['Vanuatu', 'vu', '678', , '🇻🇺'],\n  ['Città del Vaticano', 'va', '39', 1, , '🇻🇦'],\n  ['Venezuela', 've', '58', , '🇻🇪'],\n  ['Việt Nam', 'vn', '84', , '🇻🇳'],\n  ['Wallis-et-Futuna', 'wf', '681', , '🇼🇫'],\n  ['‫الصحراء الغربية‬‎', 'eh', '212', 1, , '🇪🇭'],\n  ['‫اليمن‬‎', 'ye', '967', , '🇾🇪'],\n  ['Zambia', 'zm', '260', , '🇿🇲'],\n  ['Zimbabwe', 'zw', '263', , '🇿🇼'],\n  ['Åland Islands', 'ax', '358', 1, , '🇦🇽'],\n];\n\nexport default allCountries.map(country => ({\n  name: country[0],\n  iso2: country[1].toUpperCase(),\n  dialCode: country[2],\n  priority: country[3] || 0,\n  areaCodes: country[4] || null,\n  flag: country[country.length - 1] || null,\n}));\n",
            "name": "all-countries.js",
            "size": 10202,
            "type": "source"
          },
          {
            "path": "../../src/components/FieldPhone/click-outside.js",
            "relativePath": "components/FieldPhone/click-outside.js",
            "extension": ".js",
            "content": "export default {\n  beforeMount(el, binding, vNode) {\n    if (typeof binding.value !== 'function') {\n      let warn = `[Vue-click-outside:] provided expression ${binding.expression} is not a function, but has to be`;\n      const compName = vNode.component?.name;\n      if (compName) {\n        warn += ` Found in component ${compName}`;\n      }\n      console.warn(warn);\n    }\n\n    el.clickOutsideEvent = function (event) {\n      // Проверка, что клик был сделан за пределами элемента и не на самом элементе\n      if (!(el === event.target || el.contains(event.target))) {\n        // Вызов переданной функции, если условие выполняется\n        binding.value(event);\n      }\n    };\n\n    // Использование document вместо document.body может помочь в некоторых случаях,\n    // особенно если событие stopPropagation используется в дочерних элементах\n    document.addEventListener('click', el.clickOutsideEvent, true); // true для использования в фазе перехвата\n  },\n  unmounted(el) {\n    // Убедитесь, что используете тот же флаг при удалении обработчика\n    document.removeEventListener('click', el.clickOutsideEvent, true);\n  },\n};\n",
            "name": "click-outside.js",
            "size": 1127,
            "type": "source"
          },
          {
            "path": "../../src/components/FieldPhone/utils.js",
            "relativePath": "components/FieldPhone/utils.js",
            "extension": ".js",
            "content": "import allCountries from './all-countries.js';\n\nexport function getCountry() {\n  return fetch('https://ip2c.org/s')\n    .then(response => response.text())\n    .then(response => {\n      const result = (response || '').toString();\n\n      if (!result || result[0] !== '1') {\n        throw new Error('unable to fetch the country');\n      }\n\n      return result.substr(2, 2);\n    });\n}\n\n// Credits: http://blog.vishalon.net/index.php/javascript-getting-and-setting-caret-position-in-textarea/\nexport function setCaretPosition(ctrl, pos) {\n  // Modern browsers\n  if (ctrl.setSelectionRange) {\n    ctrl.focus();\n    ctrl.setSelectionRange(pos, pos);\n\n    // IE8 and below\n  } else if (ctrl.createTextRange) {\n    const range = ctrl.createTextRange();\n    range.collapse(true);\n    range.moveEnd('character', pos);\n    range.moveStart('character', pos);\n    range.select();\n  }\n}\n\nexport const allProps = [\n  {\n    name: 'allCountries',\n    type: Array,\n    default: allCountries,\n    description: 'All countries that are used in <code>libphonenumber-js</code>, can be overridden by this prop',\n    inDemo: false,\n  },\n  {\n    name: 'autoFormat',\n    type: Boolean,\n    default: true,\n    description: \"Auto update the input to the formatted phone number when it's valid\",\n    inDemo: true,\n  },\n  {\n    name: 'customValidate',\n    type: [Boolean, RegExp],\n    default: false,\n    description: 'Custom validation RegExp for input',\n    inDemo: false,\n  },\n  {\n    name: 'defaultCountry',\n    default: '',\n    type: String,\n    description: 'Default country, will override the country fetched from IP address of user',\n    inDemo: false,\n  },\n  {\n    name: 'disabled',\n    default: false,\n    type: Boolean,\n    description: 'Disable <code>vue-tel-input</code>, including the input & flag dropdown',\n    inDemo: false,\n  },\n  {\n    name: 'autoDefaultCountry',\n    default: true,\n    type: Boolean,\n    description: 'To fetch default country based on IP address of user',\n    inDemo: false,\n  },\n  {\n    name: 'dropdownOptions',\n    type: Object,\n    description: 'Options for dropdown, see below',\n    inDemo: false,\n  },\n  {\n    name: 'dropdownOptions.showDialCodeInList',\n    default: true,\n    type: Boolean,\n    description: 'Show dial code in the dropdown list',\n    inDemo: true,\n  },\n  {\n    name: 'dropdownOptions.showDialCodeInSelection',\n    default: false,\n    type: Boolean,\n    description: 'Show dial code in the dropdown selection',\n    inDemo: true,\n  },\n  {\n    name: 'dropdownOptions.showFlags',\n    default: true,\n    type: Boolean,\n    description: 'Show flags in the dropdown selection and list',\n    inDemo: true,\n  },\n  {\n    name: 'dropdownOptions.tabindex',\n    default: 0,\n    type: Number,\n    description: 'Native dropdown <code>tabindex</code> attribute',\n    inDemo: false,\n  },\n  {\n    name: 'ignoredCountries',\n    default: [],\n    type: Array,\n    description: 'List of countries will NOT be shown on the dropdown',\n    inDemo: false,\n  },\n  {\n    name: 'inputOptions',\n    type: Object,\n    description: 'Options for input, see below',\n    inDemo: false,\n  },\n  {\n    name: 'inputOptions.autocomplete',\n    type: String,\n    default: 'on',\n    description: 'Native input <code>autocomplete</code> attribute',\n    inDemo: false,\n  },\n  {\n    name: 'inputOptions.autofocus',\n    type: Boolean,\n    default: false,\n    description: 'Native input <code>autofocus</code> attribute',\n    inDemo: false,\n  },\n  // {\n  //   name: 'inputOptions.dynamicPlaceholder',\n  //   default: false,\n  //   type: Boolean,\n  //   description: 'Placeholder as a sample phone number in the current country',\n  //   inDemo: false,\n  // },\n  {\n    name: 'inputOptions.id',\n    default: '',\n    type: String,\n    description: 'Native input <code>id</code> attribute',\n    inDemo: false,\n  },\n  {\n    name: 'inputOptions.maxlength',\n    default: 25,\n    type: Number,\n    description: 'Native input <code>maxlength</code> attribute',\n    inDemo: false,\n  },\n  {\n    name: 'inputOptions.name',\n    default: 'telephone',\n    type: String,\n    description: 'Native input <code>name</code> attribute',\n    inDemo: false,\n  },\n  {\n    name: 'inputOptions.placeholder',\n    default: 'Enter a phone number',\n    type: String,\n    description: 'Placeholder for the input',\n    inDemo: false,\n  },\n  {\n    name: 'inputOptions.readonly',\n    default: false,\n    type: Boolean,\n    description: 'Native input <code>readonly</code> attribute',\n    inDemo: false,\n  },\n  {\n    name: 'inputOptions.required',\n    default: false,\n    type: Boolean,\n    description: 'Native input <code>required</code> attribute',\n    inDemo: false,\n  },\n  {\n    name: 'inputOptions.tabindex',\n    default: 0,\n    type: Number,\n    description: 'Native input <code>tabindex</code> attribute',\n    inDemo: false,\n  },\n  {\n    name: 'inputOptions.type',\n    default: 'tel',\n    type: String,\n    description: 'Native input <code>type</code> attribute',\n    inDemo: false,\n  },\n  {\n    name: 'inputOptions.styleClasses',\n    default: '',\n    type: [String, Array, Object],\n    description: 'Custom classes for the <code>input</code>',\n    inDemo: false,\n  },\n  {\n    name: 'invalidMsg',\n    default: '',\n    type: String,\n    description: '',\n    inDemo: false,\n  },\n  {\n    name: 'mode',\n    default: 'auto',\n    type: String,\n    description:\n      \"Allowed values: <code>'auto'</code> (Default set by phone),  <code>'international'</code> (Format number with the dial code i.e. + 61), <code>'national'</code> (Format number without dial code i.e. 0321232)\",\n    inDemo: true,\n    options: ['auto', 'national', 'international'],\n  },\n  {\n    name: 'onlyCountries',\n    default: [],\n    type: Array,\n    description: 'List of countries will be shown on the dropdown',\n    inDemo: false,\n  },\n  {\n    name: 'preferredCountries',\n    default: [],\n    type: Array,\n    description: 'Preferred countries list, will be on top of the dropdown',\n    inDemo: false,\n  },\n  {\n    name: 'styleClasses',\n    default: '',\n    type: [String, Array, Object],\n    description: 'Custom classes for the wrapper',\n    inDemo: false,\n  },\n  {\n    name: 'validCharactersOnly',\n    default: false,\n    type: Boolean,\n    description: 'Only allow valid characters in a phone number (will also verify in <code>mounted</code>, so phone number with invalid characters will be shown as an empty string)',\n    inDemo: false,\n  },\n];\n\nexport const defaultOptions = [...allProps].reduce((prv, crr) => {\n  if (crr.name.includes('.')) {\n    const [key, nestedKey] = crr.name.split('.');\n    if (prv[key]) {\n      Object.assign(prv[key], {\n        [nestedKey]: crr.default,\n      });\n    } else {\n      Object.assign(prv, {\n        [key]: {\n          [nestedKey]: crr.default,\n        },\n      });\n    }\n  } else {\n    Object.assign(prv, {\n      [crr.name]: crr.default,\n    });\n  }\n  return prv;\n}, {});\n\nexport default {\n  options: { ...defaultOptions },\n};\n",
            "name": "utils.js",
            "size": 6892,
            "type": "source"
          },
          {
            "path": "../../src/components/FieldPhone/FieldPhone.vue",
            "relativePath": "components/FieldPhone/FieldPhone.vue",
            "extension": ".vue",
            "content": "<template>\n  <div \n    :class=\"[\n      rootClass, \n      classes,\n      $attrs.class, \n      { 'bg-fourth-nano': validation }, \n      { disabled: disabled }\n    ]\" \n    :style=\"[\n      rootStyle, \n      styles\n    ]\" \n    ref=\"rootElement\"\n    class=\"vue3-reactive-tel-input\"\n  >\n    <div\n      v-click-outside=\"clickedOutside\"\n      :class=\"['vti__dropdown', { open: open }]\"\n      :style=\"[dropdownStyle]\"\n      :tabindex=\"dropdownOptions.tabindex\"\n      @keydown=\"keyboardNav\"\n      @click=\"toggleDropdown\"\n      @keydown.esc=\"reset\"\n      class=\"br-solid br-black-transp br-1px radius-thin\"\n    >\n      <span class=\"flex-nowrap flex flex-v-center  p-medium vti__selection\">\n        <span v-if=\"dropdownOptions.showFlags\" v-html=\"activeCountryFlag\" class=\"mn-r-nano\" />\n        <span v-if=\"dropdownOptions.showDialCodeInSelection\" class=\"vti__country-code\">\n          +{{ activeCountry && activeCountry.dialCode }}\n        </span>\n        <!-- <slot name=\"arrow-icon\" :open=\"open\"> -->\n          <!-- <span class=\"vti__dropdown-arrow\">{{ open ? \"▲\" : \"▼\" }}</span> -->\n        <!-- </slot> -->\n      </span>\n      <ul \n        ref=\"list\" \n        class=\"bs-black radius-small vti__dropdown-list\"\n        v-show=\"open\" \n        :class=\"dropdownOpenDirection\"\n        :style=\"[listStyle]\"\n         \n         >\n        <li\n          v-for=\"(pb, index) in sortedCountries\"\n          class=\"flex-nowrap flex w-max\"\n          :class=\"['vti__dropdown-item', getItemClass(index, pb.iso2)]\"\n          :key=\"pb.iso2 + (pb.preferred ? '-preferred' : '')\"\n          @click=\"choose(pb)\"\n          @mousemove=\"selectedIndex = index\"\n        >\n          <span v-if=\"dropdownOptions.showFlags\" v-html=\"pb.flag\" class=\"mn-r-thin\"/>\n          <strong>{{ pb.name }}</strong>\n          <span v-if=\"dropdownOptions.showDialCodeInList\"> +{{ pb.dialCode }} </span>\n        </li>\n      </ul>\n    </div>\n    <!-- <div :class=\"[divInputClass]\" > -->\n      <input\n        v-model=\"phone\"\n        inputmode=\"numeric\" \n        pattern=\"\\d*\"\n        ref=\"input\"\n        :type=\"inputOptions.type\"\n        :autocomplete=\"inputOptions.autocomplete\"\n        :autofocus=\"inputOptions.autofocus\"\n        :class=\"['vti__input', inputOptions.styleClasses, inputClass, Iclasses]\"\n        :style=\"[inputStyle, Istyles]\"\n        :disabled=\"disabled\"\n        :id=\"inputId !== ''? inputId : inputOptions.id\"\n        :maxlength=\"inputOptions.maxlength\"\n        :name=\"inputId !== ''? inputId : inputOptions.name\"\n        :placeholder=\"parsedPlaceholder\"\n        :readonly=\"inputOptions.readonly\"\n        :required=\"inputOptions.required\"\n        :tabindex=\"inputOptions.tabindex\"\n        @blur=\"onBlur\"\n        @focus=\"onFocus\"\n        @input=\"onInput\"\n        @keyup.enter=\"onEnter\"\n        @keyup.space=\"onSpace\"\n      />\n      <slot></slot> <!-- slot outlet -->\n    <!-- </div> -->\n\n  </div>\n  <!-- Validation -->\n  <transition name=\"fade\">\n    <div v-if=\"validation\" class=\"mn-t-thin mn-b-thin invalid-feedback\">\n      * {{validation.message}}\n    </div>\n  </transition>\n</template>\n\n\n<script setup>\n  import { ref, reactive, watch, computed, onMounted, nextTick } from 'vue';\n  import { parsePhoneNumberFromString } from 'libphonenumber-js';\n\n  import clickOutside from './click-outside.js';\n  import allCountries from './all-countries.js';\n\n  let vClickOutside = clickOutside\n\n  const props = defineProps({\n    modelValue: { type: String, default: '',},\n    badClass: { type: [String, Array, Object], default: '', },\n    goodClass: { type: [String, Array, Object], default: '', },\n    badStyle: { type: [String, Array, Object], default: '', },\n    goodStyle: { type: [String, Array, Object], default: '', },\n    badInputClass: { type: [String, Array, Object], default: '', },\n    goodInputClass: { type: [String, Array, Object], default: '', },\n    badInputStyle: { type: [String, Array, Object], default: '', },\n    goodInputStyle: { type: [String, Array, Object], default: '', },\n    allCountries: { type: Array, default: () => allCountries, },\n    autoFormat: { type: Boolean, default: () => true, },\n    validation: { type: [Boolean, Object], default: false, },\n    customValidate: { type: [Boolean, RegExp], default: () => false, },\n    defaultCountry: { type: String, default: () => '', },\n    disabled: { type: Boolean, default: () => false, },\n    autoDefaultCountry: { type: Boolean, default: () => true },\n    ignoredCountries: { type: Array, default: () => [], },\n    invalidMsg: { type: String, default: () => '', },\n    mode: { type: String, default: () => 'auto', },\n    onlyCountries: { type: Array, default: () => [], },\n    preferredCountries: { type: Array, default: () => [], },\n    validCharactersOnly: { type: Boolean, default: () => false, },\n    rootClass: { type: [String, Array, Object], default: () => '', },\n    inputClass: { type: [String, Array, Object], default: () => {return ''}, },\n    divInputClass: { type: [String, Array, Object], default: () => {return ''}, },\n    rootStyle: { type: [String, Array, Object], default: () => {return ''}, },\n    dropdownStyle: { type: [String, Array, Object], default: () => {return ''}, },\n    listStyle: { type: [String, Array, Object], default: () => {return ''}, },\n    inputStyle: { type: [String, Array, Object], default: () => {return ''}, },\n    inputId: { type: [String, Array, Object], default: () => {return ''}, },\n    Placeholder: { type: [String, Object, Function], default: () => {return ''}, },\n    dropdownOptions: { \n      type: Object, \n      default: () => {\n        return {\n          showDialCodeInList: true,\n          showDialCodeInSelection: false,\n          showFlags: true,\n          tabindex: 0\n        }\n      } \n    },\n    inputOptions: { \n      type: Object, \n      default: () => { \n        return {\n          autocomplete: 'on',\n          autofocus: false,\n          id: '',\n          maxlength: 25,\n          name: 'telephone',\n          placeholder: 'Enter a phone number',\n          readonly: false,\n          required: false,\n          tabindex: 0,\n          type: 'tel',\n          styleClasses: ''\n        }\n      }\n    },\n  });\n\n  const emits = defineEmits([\n    'update:modelValue', \n    'change',\n    'validate', \n    'country-changed', \n    'open', \n    'close', \n    'blur', \n    'focus', \n    'enter', \n    'space'\n  ]);\n\n  const counter = ref(5);\n  const initCounter = ref(5);\n  const message = reactive({\n    action: null,\n    amount: null,\n  });\n  const phone = ref(props.modelValue ? props.modelValue : '');\n  const activeCountryCode = ref('');\n  const open = ref(false);\n  const finishMounted = ref(false);\n  const selectedIndex = ref(null);\n  const typeToFindInput = ref('');\n  const typeToFindTimer = ref(null);\n  const dropdownOpenDirection = ref('below');\n  const parsedPlaceholder = ref(props.Placeholder !== '' ? props.Placeholder : props.inputOptions.placeholder);\n\n  const rootElement = ref(null)\n  const list = ref(null)\n  const input = ref(null)\n\n  // Lifecycle hooks\n  onMounted(async () => {\n    if (props.modelValue) {\n      phone.value = props.modelValue;\n    }\n\n    cleanInvalidCharacters();\n\n    initializeCountry()\n      .then(() => {\n        if (!phone.value\n          && props.inputOptions?.showDialCode\n          && activeCountryCode.value) {\n          phone.value = `+${activeCountryCode.value}`;\n        }\n        emits('validate', phoneObject.value);\n      })\n      .catch(console.error)\n      .then(() => {\n        finishMounted.value = true;\n      });\n  });\n\n  // Computed properties\n  const activeCountry = computed(() => {\n   return findCountry(activeCountryCode.value);\n  });\n\n  const activeCountryFlag = computed(() => {\n    return activeCountry.value ? activeCountry.value.flag : null;\n  });\n\n  const parsedMode = computed(() => {\n    if (props.mode === 'auto') {\n      if (!phone.value || phone.value[0] !== '+') {\n        return 'national';\n      }\n      return 'international';\n    }\n    if (!['international', 'national'].includes(props.mode)) {\n      console.error('Invalid value of prop \"mode\"');\n      return 'international';\n    }\n    return props.mode;\n  });\n\n  const filteredCountries = computed(() => {\n    if (props.onlyCountries && props.onlyCountries.length) {\n      return props.allCountries.filter(({ iso2 }) => props.onlyCountries.includes(iso2.toUpperCase()));\n    }\n\n    if (props.ignoredCountries && props.ignoredCountries.length) {\n      return props.allCountries.filter(({ iso2 }) =>\n        !props.ignoredCountries.includes(iso2.toUpperCase()) && !props.ignoredCountries.includes(iso2.toLowerCase()),\n      );\n    }\n\n    return props.allCountries;\n  });\n  const sortedCountries = computed(() => {\n    const preferredCountries = getCountries(props.preferredCountries)\n      .map(country => ({ ...country, preferred: true }));\n\n    return [...preferredCountries, ...filteredCountries.value];\n  });\n\n  const phoneObject = computed(() => {\n    let result = {};\n\n    if (phone.value?.[0] === '+') {\n      result = parsePhoneNumberFromString(phone.value) || {};\n    } else {\n      result = parsePhoneNumberFromString(phone.value, activeCountryCode.value) || {};\n    }\n\n    const { metadata, ...phoneDetails } = result;\n\n    let valid = result.isValid?.();\n    let formatted = phone.value;\n\n    if (valid) {\n      formatted = result.format?.(parsedMode.value.toUpperCase(), { nationalPrefix: false });\n    }\n\n    if (result.country && (props.ignoredCountries.length || props.onlyCountries.length)) {\n      if (!findCountry(result.country)) {\n        valid = false;\n        result = { ...result, country: null };\n      }\n    }\n\n    return {\n      ...phoneDetails,\n      countryCode: result.country,\n      valid,\n      country: activeCountry.value,\n      formatted,\n    };\n  });\n\n  const classes = computed(() => {\n    return phoneObject.value.valid === true ? props.goodClass : \n           phoneObject.value.valid === false ? props.badClass : undefined;\n  });\n\n  const styles = computed(() => {\n    return phoneObject.value.valid === true ? props.goodStyle : \n           phoneObject.value.valid === false ? props.badStyle : undefined;\n  });\n\n  const Iclasses = computed(() => {\n    return phoneObject.value.valid === true ? props.goodInputClass : \n           phoneObject.value.valid === false ? props.badInputClass : undefined;\n  });\n\n  const Istyles = computed(() => {\n    return phoneObject.value.valid === true ? props.goodInputStyle : \n           phoneObject.value.valid === false ? props.badInputStyle : undefined;\n  });\n  // ///////////\n  // Watchers\n  // ///////////\n  watch(activeCountry, (newValue, oldValue) => {\n    if (!newValue && oldValue?.iso2) {\n      activeCountryCode.value = oldValue.iso2;\n      return;\n    }\n    if (newValue?.iso2) {\n      emits('country-changed', newValue);\n      resetPlaceholder();\n    }\n  });\n\n  // Следим за изменениями countryCode в phoneObject\n  watch(() => phoneObject.value.countryCode, (newValue) => {\n    activeCountryCode.value = newValue;\n  });\n\n  // Следим за изменениями валидности phoneObject\n  watch(() => phoneObject.value.valid, () => {\n    emits('validate', phoneObject.value);\n  });\n\n  // Следим за изменениями отформатированного номера в phoneObject\n  watch(() => phoneObject.value.formatted, (newValue) => {\n    if (!props.autoFormat || props.customValidate) {\n      return;\n    }\n    emitInput(newValue);\n\n    nextTick(() => {\n      if (newValue && !props.modelValue) {\n        phone.value = newValue;\n      }\n    });\n  });\n\n  // Следим за изменениями placeholder в inputOptions\n  watch(() => props.inputOptions.placeholder, () => {\n    resetPlaceholder();\n  });\n\n  // Следим за внешними изменениями значения (например, через v-model)\n  watch(() => props.modelValue, (newValue, oldValue) => {\n    if (!testCharacters()) {\n      nextTick(() => {\n        phone.value = oldValue;\n        onInput();\n      });\n    } else {\n      phone.value = newValue;\n    }\n  });\n\n  // Следим за состоянием открытия/закрытия dropdown\n  watch(open, (isDropdownOpened) => {\n    if (isDropdownOpened) {\n      setDropdownPosition();\n      emits('open');\n    } else {\n      emits('close');\n    }\n  });\n\n  // Methods\n  function getCountry() {\n    return fetch('https://ip2c.org/s')\n        .then((response) => response.text())\n        .then((response) => {\n            const result = (response || '').toString();\n\n            if (!result || result[0] !== '1') {\n                throw new Error('unable to fetch the country');\n            }\n\n            return result.substr(2, 2);\n        });\n  }\n  \n  function setCaretPosition(ctrl, pos) {\n    // Modern browsers\n    if (ctrl.setSelectionRange) {\n        ctrl.focus();\n        ctrl.setSelectionRange(pos, pos);\n\n        // IE8 and below\n    } else if (ctrl.createTextRange) {\n        const range = ctrl.createTextRange();\n        range.collapse(true);\n        range.moveEnd('character', pos);\n        range.moveStart('character', pos);\n        range.select();\n    }\n  }\n\n  function resetPlaceholder() {\n    parsedPlaceholder.value = props.inputOptions.placeholder;\n  }\n  function initializeCountry() {\n    return new Promise((resolve) => {\n      if (phone.value?.[0] === '+') { resolve(); return; }\n      if (props.defaultCountry) { choose(props.defaultCountry); resolve(); return; }\n      const fallbackCountry = props.preferredCountries[0] || filteredCountries.value[0];\n      if (props.autoDefaultCountry) {\n        getCountry()\n          .then((res) => { choose(res || activeCountryCode.value); })\n          .catch((error) => { console.warn(error); choose(fallbackCountry); })\n          .finally(() => { resolve(); });\n      } else {\n        choose(fallbackCountry);\n        resolve();\n      }\n    });\n  }\n\n  function getCountries(list = []) {\n    return list.map((countryCode) => findCountry(countryCode)).filter(Boolean);\n  }\n\n  function findCountry(iso = '') {\n    return filteredCountries.value.find((country) => country.iso2 === iso.toUpperCase());\n  }\n\n  function getItemClass(index, iso2) {\n    const highlighted = selectedIndex.value === index;\n    const lastPreferred = index === props.preferredCountries.length - 1;\n    const preferred = props.preferredCountries.some((c) => c.toUpperCase() === iso2);\n    return { highlighted, 'last-preferred': lastPreferred, preferred };\n  }\n\n  function choose(country) {\n    let parsedCountry = typeof country === 'string' ? findCountry(country) : country;\n    if (!parsedCountry) return;\n    \n    if (phone.value?.[0] === '+' && parsedCountry.iso2 && phoneObject.value.nationalNumber) {\n      activeCountryCode.value = parsedCountry.iso2;\n      phone.value = parsePhoneNumberFromString(phoneObject.value.nationalNumber, parsedCountry.iso2).formatInternational();\n      return;\n    }\n\n    if (props.inputOptions?.showDialCode && parsedCountry) {\n      phone.value = `+${parsedCountry.dialCode}`;\n      return;\n    }\n\n    activeCountryCode.value = parsedCountry.iso2;\n    emitInput(phone.value);\n  }\n\n  function cleanInvalidCharacters() {\n    const currentPhone = phone.value;\n\n    if (props.validCharactersOnly) {\n      const results = phone.value.match(/[()\\-+0-9\\s]*/g);\n      phone.value = results.join('');\n    }\n\n    if (props.customValidate && props.customValidate instanceof RegExp) {\n      const results = phone.value.match(props.customValidate);\n      phone.value = results ? results.join('') : '';\n    }\n\n    if (currentPhone !== phone.value) {\n      emitInput(phone.value);\n    }\n  }\n\n  function testCharacters() {\n    if (props.validCharactersOnly) {\n      const result = /^[()\\-+0-9\\s]*$/.test(phone.value);\n      if (!result) return false;\n    }\n    if (props.customValidate) {\n      return testCustomValidate();\n    }\n    return true;\n  }\n\n  function testCustomValidate() {\n    return props.customValidate instanceof RegExp ? props.customValidate.test(phone.value) : false;\n  }\n\n  function onInput() {\n    input.value.setCustomValidity(phoneObject.valid ? '' : props.invalidMsg);\n\n    emitInput(phone.value);\n  }\n\n  function emitInput(value) {\n    emits('update:modelValue', value);\n\n\n\n    if (phoneObject.value.valid)  { \n      emits('change', phoneObject.value.number);\n      emits('country', phoneObject.value.number);\n    } else {\n      emits('country', null);\n    }\n  }\n\n  function onBlur() {\n    emits('blur');\n  }\n\n  function onFocus() {\n    setCaretPosition(input.value, phone.value.length);\n    emits('focus');\n  }\n\n  function onEnter() {\n    emits('enter');\n  }\n\n  function onSpace() {\n    emits('space');\n  }\n\n  function focus() {\n    input.value.focus();\n  }\n\n  function toggleDropdown() {\n    if (props.disabled) return;\n    open.value = !open.value;\n  }\n\n  function clickedOutside() {\n    open.value = false;\n  }\n\n  function keyboardNav(e) {\n    if (e.keyCode === 40) { // down arrow\n      e.preventDefault();\n      open.value = true;\n      selectedIndex.value = selectedIndex.value === null ? 0 : Math.min(sortedCountries.value.length - 1, selectedIndex.value + 1);\n      nextTick(() => {\n        const selEle = list.value.children[selectedIndex.value];\n        if (selEle.offsetTop + selEle.clientHeight > list.value.scrollTop + list.value.clientHeight) {\n          list.value.scrollTop = selEle.offsetTop - list.value.clientHeight + selEle.clientHeight;\n        }\n      });\n    } else if (e.keyCode === 38) { // up arrow\n      e.preventDefault();\n      open.value = true;\n      selectedIndex.value = selectedIndex.value === null ? sortedCountries.value.length - 1 : Math.max(0, selectedIndex.value - 1);\n      nextTick(() => {\n        const selEle = list.value.children[selectedIndex.value];\n        if (selEle.offsetTop < list.value.scrollTop) {\n          list.value.scrollTop = selEle.offsetTop;\n        }\n      });\n    } else if (e.keyCode === 13) { // enter key\n      e.preventDefault();\n      if (selectedIndex.value !== null) {\n        choose(sortedCountries.value[selectedIndex.value]);\n      }\n      open.value = !open.value;\n    } else { // typing a country's name\n      typeToFindInput.value += e.key;\n      clearTimeout(typeToFindTimer);\n      typeToFindTimer = setTimeout(() => {\n        typeToFindInput.value = '';\n      }, 700);\n      nextTick(() => {\n        const typedCountryI = sortedCountries.value.slice(props.preferredCountries.length).findIndex((c) => c.name.toLowerCase().startsWith(typeToFindInput.value));\n        if (typedCountryI >= 0) {\n          selectedIndex.value = props.preferredCountries.length + typedCountryI;\n          const selEle = list.value.children[selectedIndex.value];\n          const needToScroll = selEle.offsetTop < list.value.scrollTop || selEle.offsetTop + selEle.clientHeight > list.value.scrollTop + list.value.clientHeight;\n          if (needToScroll) {\n            list.value.scrollTop = selEle.offsetTop - list.value.clientHeight / 2;\n          }\n        }\n      });\n    }\n  }\n\n  function reset() {\n    selectedIndex.value = sortedCountries.value.map(c => c.iso2).indexOf(activeCountryCode.value);\n    open.value = false;\n  }\n\n  function setDropdownPosition() {\n    const spaceBelow = window.innerHeight - rootElement.value.getBoundingClientRect().bottom;\n    const hasEnoughSpaceBelow = spaceBelow > 200;\n    dropdownOpenDirection.value = hasEnoughSpaceBelow ? 'below' : 'above';\n  }\n</script>\n\n<style lang=\"scss\">\n  .vue3-reactive-tel-input{\n    display:flex\n  }\n  .vue3-reactive-tel-input.disabled .dropdown,.vue3-reactive-tel-input.disabled .selection,.vue3-reactive-tel-input.disabled input{\n    cursor:no-drop\n  }\n  .vti__dropdown{\n    display:flex;\n    flex-direction:column;\n    align-content:center;\n    justify-content:center;\n    position:relative;\n    padding:0.5rem;\n    cursor:pointer\n  }\n  .vti__dropdown.show{\n    max-height:300px;\n    overflow:scroll\n  }\n  .vti__dropdown-list{\n    z-index:1;\n    padding:0;\n    margin:0;\n    text-align:left;\n    list-style:none;\n    max-height:200px;\n    overflow-y:scroll;\n    position:absolute;\n    left:-1px;\n    background-color:#fff;\n    width:fit-content\n  }\n  .vti__dropdown-list.below{\n    top:33px\n  }\n  .vti__dropdown-list.above{\n    top:auto;\n    bottom:100%\n  }\n  .vti__dropdown-arrow{\n    transform:scaleY(.5);\n    display:inline-block;\n    color:#666\n  }\n  .vti__dropdown-item{\n    cursor:pointer;\n    padding:4px 15px\n  }\n  .vti__dropdown-item.last-preferred{\n    border-bottom:1px solid #cacaca\n  }\n  .vti__dropdown-item .vti__flag{\n    display:inline-block;\n    margin-right:5px\n  }\n  .vti__input{\n    color: inherit;\n    border:none;\n    border-radius:0 2px 2px 0;\n    width:100%;\n    outline:0;\n    padding-left:7px\n  }\n</style>",
            "name": "FieldPhone.vue",
            "size": 20452,
            "type": "source"
          }
        ]
      },
      "FieldTags": {
        "_files": [
          {
            "path": "../../src/components/FieldTags/create-tags.js",
            "relativePath": "components/FieldTags/create-tags.js",
            "extension": ".js",
            "content": "// helper functions\n\nconst validateUserRules = (tag, validation) => {\n  return validation\n    .filter(val => {\n      const { text } = tag;\n      // if the rule is a string, we convert it to RegExp\n      if (typeof val.rule === 'string') return !new RegExp(val.rule).test(text);\n\n      if (val.rule instanceof RegExp) return !val.rule.test(text);\n\n      // if we deal with a function, invoke it\n      const isFunction = {}.toString.call(val.rule) === '[object Function]';\n      if (isFunction) return val.rule(tag);\n    })\n    .map(val => val.classes);\n};\n\nconst clone = node => JSON.parse(JSON.stringify(node));\n\nconst findIndex = (arr, callback) => {\n  let index = 0;\n  while (index < arr.length) {\n    if (callback(arr[index], index, arr)) return index;\n    index++;\n  }\n  return -1;\n};\n\nconst createClasses = (tag, tags, validation = [], customDuplicateFn) => {\n  if (tag.text === undefined) tag = { text: tag };\n\n  // create css classes from the user validation array\n  const classes = validateUserRules(tag, validation);\n\n  // if we find the tag, it's an exsting one which is edited.\n  // in this case we must splice it out\n  const index = findIndex(tags, t => t === tag);\n  const tagsDiff = clone(tags);\n  const inputTag = index !== -1 ? tagsDiff.splice(index, 1)[0] : clone(tag);\n\n  // check whether the tag is a duplicate or not\n  const duplicate = customDuplicateFn ? customDuplicateFn(tagsDiff, inputTag) : tagsDiff.map(t => t.text).indexOf(inputTag.text) !== -1;\n\n  // if it's a duplicate, push the class duplicate to the array\n  if (duplicate) classes.push('ti-duplicate');\n\n  // if we find no classes, the tag is valid → push the class valid\n  classes.length === 0 ? classes.push('ti-valid') : classes.push('ti-invalid');\n  return classes;\n};\n\n/**\n * @description Create one tag out of a String or validate an existing one\n * @property {helpers}\n * @param {Object|String} tag A tag which should be validated | A String to create a tag\n * @param {Array} tagsarray The tags array\n * @param {Array} [validation=[]] The validation Array is optional (pass it if you use one)\n * @returns {Object} The created (validated) tag\n */\nconst createTag = (tag, ...rest) => {\n  // if text is undefined, a string is passed. let's make a tag out of it\n  if (tag.text === undefined) tag = { text: tag };\n\n  // we better make a clone to not getting reference trouble\n  const t = clone(tag);\n\n  // create the validation classes\n  t.tiClasses = createClasses(tag, ...rest);\n  return t;\n};\n\n/**\n * @description Create multiple tags out of Strings or validate existing tags\n * @property {helpers}\n * @param {Array} tagsarray An Array containing tags or strings. See example below.\n * @param {Array} [validation=[]] The validation Array is optional (pass it if you use one)\n * @returns {Array} An array containing (validated) tags\n * @example  &#47;* Example to call the function *&#47;\n   const validatedTags = createTags(['tag1Text', 'tag2Text'], [{ type: 'length', rule: /[0-9]/ }])\n */\nconst createTags = (tags, ...rest) => tags.map(t => createTag(t, tags, ...rest));\n\nexport { clone, createClasses, createTag, createTags };\n",
            "name": "create-tags.js",
            "size": 3118,
            "type": "source"
          },
          {
            "path": "../../src/components/FieldTags/vue-tags-input.props.js",
            "relativePath": "components/FieldTags/vue-tags-input.props.js",
            "extension": ".js",
            "content": "// The file contains all props and validators which are provided by the component\n\nconst propValidatorTag = value => {\n  return !value.some(t => {\n    const invalidText = !t.text;\n    if (invalidText) console.warn('Missing property \"text\"', t);\n\n    let invalidClasses = false;\n    if (t.classes) invalidClasses = typeof t.classes !== 'string';\n    if (invalidClasses) console.warn('Property \"classes\" must be type of string', t);\n\n    return invalidText || invalidClasses;\n  });\n};\n\nconst propValidatorStringNumeric = value => {\n  return !value.some(v => {\n    if (typeof v === 'number') {\n      const numeric = isFinite(v) && Math.floor(v) === v;\n      if (!numeric) console.warn('Only numerics are allowed for this prop. Found:', v);\n      return !numeric;\n    } else if (typeof v === 'string') {\n      /*\n       * Regex: || Not totally fool-proof yet, still matches \"0a\" and such\n       * - allow non-word characters (aka symbols e.g. ;, :, ' etc)\n       * - allow alpha characters\n       * - deny numbers\n       */\n      const string = /\\W|[a-z]|!\\d/i.test(v);\n      if (!string) console.warn('Only alpha strings are allowed for this prop. Found:', v);\n      return !string;\n    } else {\n      console.warn('Only numeric and string values are allowed. Found:', v);\n      return false;\n    }\n  });\n};\n\nexport default {\n  /**\n   * @description Property to bind a model to the input.\n     If the user changes the input value, the model updates, too.\n     If the user presses enter with an valid input,\n     a new tag is created with the value of this model.\n     After creating the new tag, the model is cleared.\n   * @property {props}\n   * @required\n   * @type {String}\n   * @model\n   * @default ''\n   */\n  modelValue: {\n    type: String,\n    default: '',\n    required: true,\n  },\n  /**\n   * @description Pass an array containing objects like in the example below.\n     The properties 'style' and 'class' are optional. Of course it is possible to add custom\n     properties to a tag object. vue-tags-input won't change the key and value.\n   * @property {props}\n   * @type {Array}\n   * @sync\n   * @default []\n   * @example\n    {\n    &emsp;text: 'My tag value', &#47;* The visible text on display *&#47;\n    &emsp;style: 'background-color: #ccc', &#47;* Adding inline styles is possible *&#47;\n    &emsp;classes: 'custom-class another', &#47;* The value will be added as css classes *&#47;\n    }\n   */\n  tags: {\n    type: Array,\n    default: () => [],\n    validator: propValidatorTag,\n  },\n  /**\n   * @description Expects an array containing objects inside. The objects\n    can have the same properties as a tag object.\n   * @property {props}\n   * @type {Array}\n   * @default []\n   */\n  autocompleteItems: {\n    type: Array,\n    default: () => [],\n    validator: propValidatorTag,\n  },\n  /**\n   * @description Defines whether a tag is editable after creation or not.\n   * @property {props}\n   * @type {Boolean}\n   * @default false\n   */\n  allowEditTags: {\n    type: Boolean,\n    default: false,\n  },\n  /**\n   * @description Defines if duplicate autocomplete items are filtered out from the view or not.\n   * @property {props}\n   * @type {Boolean}\n   * @default true\n   */\n  autocompleteFilterDuplicates: {\n    default: true,\n    type: Boolean,\n  },\n  /**\n   * @description If it's true, the user can add tags only via the autocomplete layer.\n   * @property {props}\n   * @type {Boolean}\n   * @default false\n   */\n  addOnlyFromAutocomplete: {\n    type: Boolean,\n    default: false,\n  },\n  /**\n   * @description The minimum character length which is required\n     until the autocomplete layer is shown. If set to 0,\n     then it'll be shown on focus.\n   * @property {props}\n   * @type {Number}\n   * @default 1\n   */\n  autocompleteMinLength: {\n    type: Number,\n    default: 1,\n  },\n  /**\n   * @description If it's true, the autocomplete layer is always shown, regardless if\n     an input or an autocomplete items exists.\n   * @property {props}\n   * @type {Boolean}\n   * @default false\n   */\n  autocompleteAlwaysOpen: {\n    type: Boolean,\n    default: false,\n  },\n  /**\n   * @description Property to disable vue-tags-input.\n   * @property {props}\n   * @type {Boolean}\n   * @default false\n   */\n  disabled: {\n    type: Boolean,\n    default: false,\n  },\n  /**\n   * @description The placeholder text which is shown in the input, when it's empty.\n   * @property {props}\n   * @type {String}\n   * @default Add Tag\n   */\n  placeholder: {\n    type: String,\n    default: 'Add Tag',\n  },\n  /**\n   * @description Custom trigger key codes can be registrated. If the user presses one of these,\n     a tag will be generated out of the input value. Can be either a numeric keyCode or the key\n     as a string.\n   * @property {props}\n   * @type {Array}\n   * @default [13]\n   * @example add-on-key=\"[13, ':', ';']\"\n   */\n  addOnKey: {\n    type: Array,\n    default: () => [13],\n    validator: propValidatorStringNumeric,\n  },\n  /**\n   * @description Custom trigger key codes can be registrated. If the user edits a tag\n     and presses one of these, the edited tag will be saved.\n     Can be either a numeric keyCode or the key as a string.\n   * @property {props}\n   * @type {Array}\n   * @default [13]\n   * @example save-on-key=\"[13, ':', ';']\"\n   */\n  saveOnKey: {\n    type: Array,\n    default: () => [13],\n    validator: propValidatorStringNumeric,\n  },\n  /**\n   * @description The maximum amount the tags array is allowed to hold.\n   * @property {props}\n   * @type {Number}\n   */\n  maxTags: {\n    type: Number,\n  },\n  /**\n   * @description The maximum amount of characters the input is allowed to hold.\n   * @property {props}\n   * @type {Number}\n   */\n  maxlength: {\n    type: Number,\n  },\n  /**\n   * @description Pass an array containing objects like in the example below.\n     The property 'classes' will be added as css classes, if the property 'rule' matches the text\n     of a tag, an autocomplete item or the input. The property 'rule' can be type of\n     RegExp or function. If the property 'disableAdd' is 'true', the item can't be added\n     to the tags array, if the appropriated rule matches.\n   * @property {props}\n   * @type {Array}\n   * @default []\n   * @example\n    {\n    &ensp;classes: 'class', &#47;* css class *&#47;\n    &ensp;rule: /^([^0-9]*)$/, &#47;* RegExp *&#47;\n    }, {\n    &ensp;classes: 'no-braces', &#47;* css class *&#47;\n    &ensp;rule(text) { &#47;* function with text as param *&#47;\n    &ensp;&ensp;return text.indexOf('{') !== -1 || text.indexOf('}') !== -1;\n    &ensp;},\n    &ensp;disableAdd: true, &#47;* if the rule matches, the item cannot be added *&#47;,\n    },\n   */\n  validation: {\n    type: Array,\n    default: () => [],\n    validator(value) {\n      return !value.some(v => {\n        const missingRule = !v.rule;\n        if (missingRule) console.warn('Property \"rule\" is missing', v);\n\n        const validRule = v.rule && (typeof v.rule === 'string' || v.rule instanceof RegExp || {}.toString.call(v.rule) === '[object Function]');\n\n        if (!validRule) {\n          console.warn('A rule must be type of string, RegExp or function. Found:', JSON.stringify(v.rule));\n        }\n\n        const missingClasses = !v.classes;\n        if (missingClasses) console.warn('Property \"classes\" is missing', v);\n\n        const invalidType = v.type && typeof v.type !== 'string';\n        if (invalidType) console.warn('Property \"type\" must be type of string. Found:', v);\n\n        return !validRule || missingRule || missingClasses || invalidType;\n      });\n    },\n  },\n  /**\n   * @description Defines the characters which splits a text into different pieces,\n     to generate tags out of this pieces.\n   * @property {props}\n   * @type {Array}\n   * @default [';']\n   * @example\n     separators: [';', ',']\n     input: some; user input, has random; commas, an,d semicolons\n     will split into: some - user input - has random - commas - an - d semicolons\n   */\n  separators: {\n    type: Array,\n    default: () => [';'],\n    validator(value) {\n      return !value.some(s => {\n        const invalidType = typeof s !== 'string';\n        if (invalidType) console.warn('Separators must be type of string. Found:', s);\n        return invalidType;\n      });\n    },\n  },\n  /**\n   * @description If it's true, the user can't add or save a tag,\n     if another exists, with the same text value.\n   * @property {props}\n   * @type {Boolean}\n   * @default true\n   */\n  avoidAddingDuplicates: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description If the input holds a value and loses the focus,\n     a tag will be generated out of this value, if possible.\n   * @property {props}\n   * @type {Boolean}\n   * @default true\n   */\n  addOnBlur: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description Custom function to detect duplicates. If the function returns 'true',\n    the tag will be marked as duplicate.\n   * @property {props}\n   * @type {Function}\n   * @param {Array} tagsarray The Array of tags minus the one which is edited/created.\n   * @param {Object} tag The tag which is edited or should be added to the tags array.\n   * @example\n     // The duplicate function to recreate the default behaviour, would look like this:\n     isDuplicate(tags, tag) {\n     &ensp;return tags.map(t => t.text).indexOf(tag.text) !== -1;\n    }\n   */\n  isDuplicate: {\n    type: Function,\n    default: null,\n  },\n  /**\n   * @description If it's true, the user can paste into the input element and\n     vue-tags-input will create tags out of the incoming text.\n   * @property {props}\n   * @type {Boolean}\n   * @default true\n   */\n  addFromPaste: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description Defines if it's possible to delete tags by pressing backspace.\n     If so and the user wants to delete a tag,\n     the tag gets the css class 'deletion-mark' for 1 second.\n     If the user presses backspace again in that time period,\n     the tag is removed from the tags array and the view.\n   * @property {props}\n   * @type {Boolean}\n   * @default true\n   */\n  deleteOnBackspace: {\n    default: true,\n    type: Boolean,\n  },\n  // event handlers\n  onBeforeAddingTag: Function,\n  onBeforeDeletingTag: Function,\n  onBeforeEditingTag: Function,\n  onBeforeSavingTag: Function,\n};\n",
            "name": "vue-tags-input.props.js",
            "size": 10199,
            "type": "source"
          },
          {
            "path": "../../src/components/FieldTags/BlockTags.vue",
            "relativePath": "components/FieldTags/BlockTags.vue",
            "extension": ".vue",
            "content": "<template>\n  <div>\n    <FieldTags\n      v-model=\"tag\"\n      :tags=\"selectedTags\"\n      :autocomplete-items=\"filteredItems\"\n      :add-on-key=\"[13, ':', ';', ',']\"\n      :save-on-key=\"[13, ':', ';', ',']\"\n      :separators=\"[';', ',']\"\n      :max-tags=\"20\"\n      :maxlength=\"20\"\n      :placeholder=\"'Please add tags'\"\n      :add-from-paste=\"true\"\n      :allow-edit-tags=\"true\"\n      @tags-changed=\"handleTagsChanged\"\n      class=\"mn-b-thin bg-light radius-medium pd-small\"\n    />\n\n    <p class=\"p-small mn-b-thin\">Suggested:</p>\n\n    <span \n      v-if=\"filteredSuggestedItems.length > 0\" \n      v-for=\"(tag,index) in filteredSuggestedItems\" \n      @click=\"addTag(tag)\"\n      class=\"cursor-pointer t-medium ti-tag-toDefactor\"\n      :class=\"{'mn-r-micro':index !== filteredSuggestedItems.length - 1}\"\n    >\n      {{ tag.text }}\n    </span>\n    <span v-else>You added all suggested tags</span> \n  </div>\n</template>\n\n<script setup>\nimport FieldTags from '@martyrs/src/components/FieldTags/FieldTags.vue'\nimport { ref, computed, onMounted } from 'vue';\n\nconst emits = defineEmits(['tags-changed']);\nconst props = defineProps({\n  tags: {\n    type: Array\n  },\n  tagsSuggested: {\n    type: Array,\n    default: [\n      { text: 'story' },\n      { text: 'news' },\n      { text: 'guide' },\n      { text: 'discussion' },\n      { text: 'photos' },\n    ]\n  }\n});\n\nconst tag = ref('');\n\nconst selectedTags = ref([]);\n\nconst autocompleteItems = ref(props.tagsSuggested);\n\nif (props.tags) selectedTags.value = props.tags.map(tag => ({text: tag}))\n  \n\nconst filteredItems = computed(() => {\n  return autocompleteItems.value.filter(i => {\n    return i.text.toLowerCase().includes(tag.value.toLowerCase());\n  });\n});\n\nconst filteredSuggestedItems = computed(() => {\n    return autocompleteItems.value.filter(item => {\n      return !selectedTags.value.some(tag => tag.text === item.text);\n    });\n  })\n\nfunction addTag (tag) {\n  selectedTags.value.push(tag)\n  emits('tags-changed', selectedTags.value.map(tag => { return tag.text }));\n}\n\nfunction handleTagsChanged(newTags) {\n  selectedTags.value = newTags;\n  emits('tags-changed', selectedTags.value.map(tag => { return tag.text }));\n}\n\n\n\n</script>\n\n<style>\n  .ti-tag-toDefactor {\n    background-color: rgb(var(--main));\n    color: rgb(var(--black));\n    border-radius: 4rem;\n    padding: 1px 8px 2px;\n    margin: 2px;\n    font-size: .85em;\n  }\n</style>",
            "name": "BlockTags.vue",
            "size": 2382,
            "type": "source"
          },
          {
            "path": "../../src/components/FieldTags/FieldTags.vue",
            "relativePath": "components/FieldTags/FieldTags.vue",
            "extension": ".vue",
            "content": "<template>\n  <div\n    class=\"vue-tags-input pos-relative\"\n    :class=\"[{ 'ti-disabled': disabled }, { 'ti-focus': focused }, $attrs.class]\"\n    :style=\"$attrs.style\"\n  >\n    <div class=\"ti-input\">\n      <ul v-if=\"tagsCopy.length || !disabled\" class=\"ti-tags\">\n        <li\n          v-for=\"(tag, index) in tagsCopy\"\n          :key=\"`tag-${index}-${tag.text}`\"\n          :style=\"tag.style\"\n          :class=\"[\n            { 'ti-editing': tagsEditStatus[index] },\n            tag.tiClasses,\n            tag.classes,\n            { 'ti-deletion-mark': isMarked(index) }\n          ]\"\n          tabindex=\"0\"\n          class=\"ti-tag t-medium\"\n          @click=\"emit('tag-clicked', { tag, index })\"\n        >\n          <div class=\"ti-content\">\n            <div\n              v-if=\"$slots['tag-left']\"\n              class=\"ti-tag-left\"\n            >\n              <slot\n                name=\"tag-left\"\n                :tag=\"tag\"\n                :index=\"index\"\n                :edit=\"tagsEditStatus[index]\"\n                :perform-save-edit=\"performSaveTag\"\n                :perform-delete=\"performDeleteTag\"\n                :perform-cancel-edit=\"cancelEdit\"\n                :perform-open-edit=\"performEditTag\"\n                :deletion-mark=\"isMarked(index)\"\n              />\n            </div>\n            <div :ref=\"el => setTagCenter(el, index)\" class=\"ti-tag-center\">\n              <span\n                v-if=\"!$slots['tag-center']\"\n                :class=\"{ 'ti-hidden': tagsEditStatus[index] }\"\n                @click=\"performEditTag(index)\"\n              >{{ tag.text }}</span>\n              <tag-input\n                v-if=\"!$slots['tag-center']\"\n                :scope=\"{\n                  edit: tagsEditStatus[index],\n                  maxlength,\n                  tag,\n                  index,\n                  validateTag: createChangedTag,\n                  performCancelEdit: cancelEdit,\n                  performSaveEdit: performSaveTag,\n                }\"\n              />\n              <slot\n                name=\"tag-center\"\n                :tag=\"tag\"\n                :index=\"index\"\n                :maxlength=\"maxlength\"\n                :edit=\"tagsEditStatus[index]\"\n                :perform-save-edit=\"performSaveTag\"\n                :perform-delete=\"performDeleteTag\"\n                :perform-cancel-edit=\"cancelEdit\"\n                :validate-tag=\"createChangedTag\"\n                :perform-open-edit=\"performEditTag\"\n                :deletion-mark=\"isMarked(index)\"\n              />\n            </div>\n            <div\n              v-if=\"$slots['tag-right']\"\n              class=\"ti-tag-right\"\n            >\n              <slot\n                name=\"tag-right\"\n                :tag=\"tag\"\n                :index=\"index\"\n                :edit=\"tagsEditStatus[index]\"\n                :perform-save-edit=\"performSaveTag\"\n                :perform-delete=\"performDeleteTag\"\n                :perform-cancel-edit=\"cancelEdit\"\n                :perform-open-edit=\"performEditTag\"\n                :deletion-mark=\"isMarked(index)\"\n              />\n            </div>\n          </div>\n          <div class=\"ti-actions\">\n            <i\n              v-if=\"!$slots['tag-actions']\"\n              v-show=\"tagsEditStatus[index]\"\n              class=\"ti-icon-undo\"\n              @click.stop=\"cancelEdit(index)\"\n            />\n            <i\n              v-if=\"!$slots['tag-actions']\"\n              v-show=\"!tagsEditStatus[index]\"\n              class=\"ti-icon-close\"\n              @click.stop=\"performDeleteTag(index)\"\n            />\n            <slot\n              v-if=\"$slots['tag-actions']\"\n              name=\"tag-actions\"\n              :tag=\"tag\"\n              :index=\"index\"\n              :edit=\"tagsEditStatus[index]\"\n              :perform-save-edit=\"performSaveTag\"\n              :perform-delete=\"performDeleteTag\"\n              :perform-cancel-edit=\"cancelEdit\"\n              :perform-open-edit=\"performEditTag\"\n              :deletion-mark=\"isMarked(index)\"\n            />\n          </div>\n        </li>\n        <li class=\"ti-new-tag-input-wrapper\">\n          <input\n            ref=\"newTagInputRef\"\n            :class=\"[createClasses(newTag, tags, validation, isDuplicate)]\"\n            :placeholder=\"placeholder\"\n            :value=\"newTag\"\n            :maxlength=\"maxlength\"\n            :disabled=\"disabled\"\n            type=\"text\"\n            size=\"1\"\n            class=\"ti-new-tag-input\"\n            @keydown=\"handleKeyDown\"\n            @paste=\"addTagsFromPaste\"\n            @keydown.delete=\"invokeDelete\"\n            @keydown.tab=\"performBlur\"\n            @keydown.up.prevent=\"selectItem('before')\"\n            @keydown.down.prevent=\"selectItem('after')\"\n            @input=\"updateNewTag\"\n            @focus=\"focused = true\"\n            @click=\"!addOnlyFromAutocomplete && (selectedItem = null)\"\n          >\n        </li>\n      </ul>\n    </div>\n    <slot name=\"between-elements\" />\n    <div\n      v-if=\"autocompleteOpen\"\n      class=\"ti-autocomplete\"\n      :class=\"$attrs.class\"\n      @mouseleave=\"selectedItem = null\"\n    >\n      <slot name=\"autocomplete-header\" />\n      <ul>\n        <li\n          v-for=\"(item, index) in filteredAutocompleteItems\"\n          :key=\"`autocomplete-${index}-${item.text}`\"\n          :style=\"item.style\"\n          :class=\"[\n            item.tiClasses,\n            item.classes,\n            { 'ti-selected-item': isSelected(index) }\n          ]\"\n          class=\"ti-item\"\n          @mouseenter=\"!disabled && (selectedItem = index)\"\n        >\n          <div\n            v-if=\"!$slots['autocomplete-item']\"\n            @click=\"performAddTags(item, undefined, 'autocomplete')\"\n          >\n            {{ item.text }}\n          </div>\n          <slot\n            v-else\n            name=\"autocomplete-item\"\n            :item=\"item\"\n            :index=\"index\"\n            :perform-add=\"item => performAddTags(item, undefined, 'autocomplete')\"\n            :selected=\"isSelected(index)\"\n          />\n        </li>\n      </ul>\n      <slot name=\"autocomplete-footer\" />\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, watch, nextTick, onMounted, onBeforeUnmount, shallowRef, toRef } from 'vue';\nimport equal from 'fast-deep-equal';\nimport { clone, createClasses, createTag, createTags } from './create-tags.js';\nimport TagInput from './tag-input.vue';\nimport props from './vue-tags-input.props.js';\n\n// Props\nconst propsObj = defineProps(props);\n\n// Emits\nconst emit = defineEmits([\n  'adding-duplicate',\n  'before-adding-tag',\n  'before-deleting-tag',\n  'before-editing-tag',\n  'before-saving-tag',\n  'max-tags-reached',\n  'saving-duplicate',\n  'tags-changed',\n  'tag-clicked',\n  'update:modelValue',\n  'update:tags',\n]);\n\n// State\nconst tagCenterRefs = ref(new Map());\nconst newTag = ref(propsObj.modelValue || '');\nconst tagsCopy = shallowRef([]);\nconst tagsEditStatus = ref([]);\nconst deletionMark = ref(null);\nconst deletionMarkTimer = ref(null);\nconst selectedItem = ref(null);\nconst focused = ref(false);\nconst newTagInputRef = ref(null);\n\n// Computed\nconst autocompleteOpen = computed(() => {\n  if (propsObj.autocompleteAlwaysOpen) return true;\n  return newTag.value !== null && \n         newTag.value.length >= propsObj.autocompleteMinLength && \n         filteredAutocompleteItems.value.length > 0 && \n         focused.value;\n});\n\nconst filteredAutocompleteItems = computed(() => {\n  const items = propsObj.autocompleteItems.map(i => \n    createTag(i, propsObj.tags, propsObj.validation, propsObj.isDuplicate)\n  );\n\n  if (!propsObj.autocompleteFilterDuplicates) return items;\n  return items.filter(duplicateFilter);\n});\n\n// Methods\nconst getSelectedIndex = (method) => {\n  const items = filteredAutocompleteItems.value;\n  const current = selectedItem.value;\n  const lastItem = items.length - 1;\n  \n  if (items.length === 0) return;\n  if (current === null) return 0;\n  if (method === 'before' && current === 0) return lastItem;\n  if (method === 'after' && current === lastItem) return 0;\n  return method === 'after' ? current + 1 : current - 1;\n};\n\nconst selectDefaultItem = () => {\n  selectedItem.value = propsObj.addOnlyFromAutocomplete && filteredAutocompleteItems.value.length > 0 ? 0 : null;\n};\n\nconst selectItem = (method) => {\n  selectedItem.value = getSelectedIndex(method);\n};\n\nconst isSelected = (index) => selectedItem.value === index;\nconst isMarked = (index) => deletionMark.value === index;\n\nconst setTagCenter = (el, index) => {\n  if (el) {\n    tagCenterRefs.value.set(index, el);\n  } else {\n    tagCenterRefs.value.delete(index);\n  }\n};\n\nconst invokeDelete = () => {\n  if (!propsObj.deleteOnBackspace || newTag.value.length > 0) return;\n  \n  const lastIndex = tagsCopy.value.length - 1;\n  if (deletionMark.value === null) {\n    clearTimeout(deletionMarkTimer.value);\n    deletionMarkTimer.value = setTimeout(() => (deletionMark.value = null), 1000);\n    deletionMark.value = lastIndex;\n  } else {\n    performDeleteTag(lastIndex);\n  }\n};\n\nconst addTagsFromPaste = () => {\n  if (!propsObj.addFromPaste) return;\n  setTimeout(() => performAddTags(newTag.value), 10);\n};\n\nconst performEditTag = (index) => {\n  if (!propsObj.allowEditTags) return;\n  \n  if (!propsObj.onBeforeEditingTag) {\n    editTag(index);\n  } else {\n    emit('before-editing-tag', {\n      index,\n      tag: tagsCopy.value[index],\n      editTag: () => editTag(index),\n    });\n  }\n};\n\nconst editTag = (index) => {\n  if (!propsObj.allowEditTags) return;\n  toggleEditMode(index);\n  focus(index);\n};\n\nconst toggleEditMode = (index) => {\n  if (!propsObj.allowEditTags || propsObj.disabled) return;\n  tagsEditStatus.value[index] = !tagsEditStatus.value[index];\n};\n\nconst createChangedTag = (index, event) => {\n  const tag = tagsCopy.value[index];\n  tag.text = event ? event.target.value : tagsCopy.value[index].text;\n  \n  const newTags = [...tagsCopy.value];\n  newTags[index] = createTag(tag, tagsCopy.value, propsObj.validation, propsObj.isDuplicate);\n  tagsCopy.value = newTags;\n};\n\nconst focus = (index) => {\n  nextTick(() => {\n    const el = tagCenterRefs.value.get(index)?.querySelector('input.ti-tag-input');\n    if (el) el.focus();\n  });\n};\n\nconst quote = (regex) => regex.replace(/([()[{*+.$^\\\\|?])/g, '\\\\$1');\n\nconst cancelEdit = (index) => {\n  if (!propsObj.tags[index]) return;\n  \n  const newTags = [...tagsCopy.value];\n  newTags[index] = clone(createTag(propsObj.tags[index], propsObj.tags, propsObj.validation, propsObj.isDuplicate));\n  tagsCopy.value = newTags;\n  tagsEditStatus.value[index] = false;\n};\n\nconst hasForbiddingAddRule = (tiClasses) => {\n  return tiClasses.some(type => {\n    const rule = propsObj.validation.find(rule => type === rule.classes);\n    return rule ? rule.disableAdd : false;\n  });\n};\n\nconst createTagTexts = (string) => {\n  const regex = new RegExp(propsObj.separators.map(s => quote(s)).join('|'));\n  return string.split(regex).map(text => ({ text }));\n};\n\nconst performDeleteTag = (index) => {\n  if (!propsObj.onBeforeDeletingTag) {\n    deleteTag(index);\n  } else {\n    emit('before-deleting-tag', {\n      index,\n      tag: tagsCopy.value[index],\n      deleteTag: () => deleteTag(index),\n    });\n  }\n};\n\nconst deleteTag = (index) => {\n  if (propsObj.disabled) return;\n  \n  deletionMark.value = null;\n  clearTimeout(deletionMarkTimer.value);\n  \n  const newTags = [...tagsCopy.value];\n  newTags.splice(index, 1);\n  tagsCopy.value = newTags;\n  \n  tagsEditStatus.value.splice(index, 1);\n  \n  emit('update:tags', tagsCopy.value);\n  emit('tags-changed', tagsCopy.value);\n};\n\nconst noTriggerKey = (event, category) => {\n  const triggerKey = propsObj[category].indexOf(event.keyCode) !== -1 || \n                     propsObj[category].indexOf(event.key) !== -1;\n  if (triggerKey) event.preventDefault();\n  return !triggerKey;\n};\n\nconst performAddTags = (tag, event, source) => {\n  if (propsObj.disabled || (event && noTriggerKey(event, 'addOnKey'))) return;\n\n  let tags = [];\n  if (typeof tag === 'object') tags = [tag];\n  if (typeof tag === 'string') tags = createTagTexts(tag);\n\n  tags = tags.filter(tag => tag.text.trim().length > 0);\n\n  tags.forEach(tag => {\n    tag = createTag(tag, propsObj.tags, propsObj.validation, propsObj.isDuplicate);\n    if (!propsObj.onBeforeAddingTag) {\n      addTag(tag, source);\n    } else {\n      emit('before-adding-tag', {\n        tag,\n        addTag: () => addTag(tag, source),\n      });\n    }\n  });\n};\n\nconst duplicateFilter = (tag) => {\n  return propsObj.isDuplicate ? \n    !propsObj.isDuplicate(tagsCopy.value, tag) : \n    !tagsCopy.value.find(t => t.text === tag.text);\n};\n\nconst addTag = (tag, source = 'new-tag-input') => {\n  const options = filteredAutocompleteItems.value.map(i => i.text);\n  if (propsObj.addOnlyFromAutocomplete && options.indexOf(tag.text) === -1) return;\n\n  nextTick(() => {\n    const maximumReached = propsObj.maxTags && propsObj.maxTags <= tagsCopy.value.length;\n    if (maximumReached) return emit('max-tags-reached', tag);\n\n    const dup = propsObj.avoidAddingDuplicates && !duplicateFilter(tag);\n    if (dup) return emit('adding-duplicate', tag);\n\n    if (hasForbiddingAddRule(tag.tiClasses)) return;\n\n    newTag.value = '';\n    tagsCopy.value = [...tagsCopy.value, tag];\n    tagsEditStatus.value.push(false);\n\n    emit('update:tags', tagsCopy.value);\n\n    if (source === 'autocomplete') newTagInputRef.value?.focus();\n\n    emit('tags-changed', tagsCopy.value);\n  });\n};\n\nconst performSaveTag = (index, event) => {\n  const tag = tagsCopy.value[index];\n\n  if (propsObj.disabled || (event && noTriggerKey(event, 'addOnKey'))) return;\n  if (tag.text.trim().length === 0) return;\n\n  if (!propsObj['onBeforeSavingTag']) {\n    saveTag(index, tag);\n  } else {\n    emit('before-saving-tag', {\n      index,\n      tag,\n      saveTag: () => saveTag(index, tag),\n    });\n  }\n};\n\nconst saveTag = (index, tag) => {\n  if (propsObj.avoidAddingDuplicates) {\n    const tagsDiff = clone(tagsCopy.value);\n    const inputTag = tagsDiff.splice(index, 1)[0];\n    const dup = propsObj.isDuplicate ? \n      propsObj.isDuplicate(tagsDiff, inputTag) : \n      tagsDiff.map(t => t.text).indexOf(inputTag.text) !== -1;\n\n    if (dup) return emit('saving-duplicate', tag);\n  }\n\n  if (hasForbiddingAddRule(tag.tiClasses)) return;\n\n  const newTags = [...tagsCopy.value];\n  newTags[index] = tag;\n  tagsCopy.value = newTags;\n  toggleEditMode(index);\n\n  emit('update:tags', tagsCopy.value);\n  emit('tags-changed', tagsCopy.value);\n};\n\nconst tagsEqual = () => {\n  return !tagsCopy.value.some((t, i) => !equal(t, propsObj.tags[i]));\n};\n\nconst updateNewTag = (event) => {\n  const value = event.target.value;\n  newTag.value = value;\n  emit('update:modelValue', value);\n};\n\nconst initTags = () => {\n  tagsCopy.value = createTags(propsObj.tags, propsObj.validation, propsObj.isDuplicate);\n  tagsEditStatus.value = new Array(propsObj.tags.length).fill(false);\n\n  if (!tagsEqual()) {\n    emit('update:tags', tagsCopy.value);\n  }\n};\n\nconst blurredOnClick = (e) => {\n  const el = e.currentTarget;\n  if (el?.contains(e.target) || el?.contains(document.activeElement)) return;\n  performBlur();\n};\n\nconst performBlur = () => {\n  if (propsObj.addOnBlur && focused.value) performAddTags(newTag.value);\n  focused.value = false;\n};\n\nconst handleKeyDown = (event) => {\n  const item = filteredAutocompleteItems.value[selectedItem.value] || newTag.value;\n  performAddTags(item, event);\n};\n\n// Watchers\nwatch(() => propsObj.modelValue, (newValue) => {\n  if (!propsObj.addOnlyFromAutocomplete) selectedItem.value = null;\n  newTag.value = newValue;\n});\n\nwatch(() => propsObj.tags, () => {\n  initTags();\n}, { deep: true });\n\nwatch(autocompleteOpen, selectDefaultItem);\n\n// Lifecycle\ninitTags();\n\nonMounted(() => {\n  selectDefaultItem();\n  document.addEventListener('click', blurredOnClick);\n});\n\nonBeforeUnmount(() => {\n  document.removeEventListener('click', blurredOnClick);\n  clearTimeout(deletionMarkTimer.value);\n});\n\n// Expose for template\ndefineExpose({\n  createClasses\n});\n</script>\n\n<style lang=\"scss\" src=\"./vue-tags-input.scss\"></style>",
            "name": "FieldTags.vue",
            "size": 15932,
            "type": "source"
          },
          {
            "path": "../../src/components/FieldTags/tag-input.vue",
            "relativePath": "components/FieldTags/tag-input.vue",
            "extension": ".vue",
            "content": "<!-- A helper component used by VueTagsInput and can be put into the tag-center slot -->\n\n<template>\n  <input\n    v-if=\"scope.edit\"\n    v-model=\"scope.tag.text\"\n    :maxlength=\"scope.maxlength\"\n    type=\"text\"\n    class=\"ti-tag-input\"\n    size=\"1\"\n    @input=\"scope.validateTag(scope.index, $event)\"\n    @blur=\"scope.performCancelEdit(scope.index)\"\n    @keydown=\"scope.performSaveEdit(scope.index, $event)\"\n  >\n</template>\n\n<script>\n\nexport default {\n  name: 'TagInput',\n  props: {\n    scope: {\n      type: Object,\n    },\n  },\n};\n\n</script>\n\n<style lang=\"css\" >\n.ti-tag-input {\n  background-color: transparent;\n  color: inherit;\n  border: none;\n  padding: 0px;\n  margin: 0px;\n  display: flex;\n  top: 0px;\n  position: absolute;\n  width: 100%;\n  line-height: inherit;\n}\n\n.ti-tag-input::-ms-clear {\n  display: none;\n}\n\ninput:focus {\n  outline: none;\n}\n\ninput[disabled] {\n  background-color: transparent;\n}\n</style>\n",
            "name": "tag-input.vue",
            "size": 912,
            "type": "source"
          },
          {
            "path": "../../src/components/FieldTags/vue-tags-input.scss",
            "relativePath": "components/FieldTags/vue-tags-input.scss",
            "extension": ".scss",
            "content": "$error: #e54d42;\n$success: #68cd86;\n$warn: #ffb648;\n\n.ti-icon-check:before {\n  content: \"\\e902\";\n  font-size: 0.5rem;\n}\n\n.ti-icon-close:before {\n  content: \"✕\";\n  font-size: 0.5rem;\n}\n\n.ti-icon-undo:before {\n  content: \"↺\";\n  font-size: 0.5rem;\n}\n\nul {\n  margin: 0px;\n  padding: 0px;\n  list-style-type: none;\n}\n\n*, *:before, *:after {\n  box-sizing: border-box;\n}\n\ninput:focus {\n  outline: none;\n}\n\ninput[disabled] {\n  background-color: transparent;\n}\n\ndiv.vue-tags-input.disabled {\n  opacity: 0.5;\n\n  * {\n    cursor: default;\n  }\n}\n\n.ti-input {\n  display: flex;\n}\n\n.ti-tags {\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  line-height: 1em;\n}\n\n.ti-tag {\n  background-color: rgb(var(--main));\n  color: rgb(var(--black));\n  border-radius: 4rem;\n  display: flex;\n  padding: 1px 8px 2px;\n  margin: 2px;\n  font-size: .85em;\n  min-height: 2rem;\n\n  &:focus {\n    outline: none;\n  }\n\n  .ti-content {\n    display: flex;\n    align-items: center;\n  }\n\n  .ti-tag-center {\n    position: relative;\n  }\n\n  span {\n    line-height: .85em;\n  }\n\n  span.ti-hidden {\n    padding-left: 14px;\n    visibility: hidden;\n    height: 0px;\n    white-space: pre;\n  }\n\n  .ti-actions {\n    margin-left: 2px;\n    display: flex;\n    align-items: center;\n    font-size: 1.15em;\n\n    i {\n      cursor: pointer;\n    }\n  }\n\n  &:last-child {\n    margin-right: 4px;\n  }\n\n  &.ti-invalid, &.ti-tag.ti-deletion-mark {\n    background-color: $error;\n  }\n}\n\n.ti-new-tag-input-wrapper {\n  display: flex;\n  flex: 1 0 auto;\n  padding: 3px 5px;\n  margin: 2px;\n  font-size: .85em;\n\n  input {\n    flex: 1 0 auto;\n    min-width: 100px;\n    border: none;\n    padding: 0px;\n    margin: 0px;\n  }\n}\n\n.ti-new-tag-input {\n  line-height: initial;\n}\n\n.ti-autocomplete {\n  border-top: none;\n  position: absolute;\n  width: 100%;\n  left: 0;\n  top: 110%;\n  z-index: 20;\n}\n\n.ti-item > div {\n  cursor: pointer;\n  padding: 3px 6px;\n  width: 100%;\n}\n\n.ti-selected-item {\n  background-color: rgb(var(--main));\n  color: #fff;\n}\n",
            "name": "vue-tags-input.scss",
            "size": 1963,
            "type": "source"
          }
        ]
      },
      "_files": [
        {
          "path": "../../src/components/index.js",
          "relativePath": "components/index.js",
          "extension": ".js",
          "content": "export { default as Address } from './Address/Address.vue';\nexport { default as Button } from './Button/Button.vue';\nexport { default as Checkbox } from './Checkbox/Checkbox.vue';\nexport { default as Dropdown } from './Dropdown/Dropdown.vue';\nexport { default as Error } from './Error/Error.vue';\nexport { default as Field } from './Field/Field.vue';\nexport { default as FieldPhone } from './FieldPhone/FieldPhone.vue';\nexport { default as LocationMarker } from './LocationMarker/LocationMarker.vue';\nexport { default as Map } from './Map/Map.vue';\nexport { default as Popup } from './Popup/Popup.vue';\nexport { default as Radio } from './Radio/Radio.vue';\nexport { default as Select } from './Select/Select.vue';\nexport { default as SelectMulti } from './SelectMulti/SelectMulti.vue';\nexport { default as Spoiler } from './Spoiler/Spoiler.vue';\nexport { default as Tab } from './Tab/Tab.vue';\nexport { default as Text } from './Text/Text.vue';\nexport { default as Tooltip } from './Tooltip/Tooltip.vue';\nexport { default as Upload } from './Upload/Upload.vue';\nexport { default as UploadImage } from './UploadImage/UploadImage.vue';\nexport { default as UploadImageMultiple } from './UploadImageMultiple/UploadImageMultiple.vue';\n\nexport { default as Menu } from './Menu/Menu.vue';\nexport { default as MenuItem } from './Menu/MenuItem.vue';\n\nexport { default as Breadcrumbs } from './Breadcrumbs/Breadcrumbs.vue';\nexport { default as Chips } from './Chips/Chips.vue';\nexport { default as Countdown } from './Countdown/Countdown.vue';\nexport { default as DatePicker } from './DatePicker/DatePicker.vue';\nexport { default as EmptyState } from './EmptyState/EmptyState.vue';\nexport { default as Feed } from './Feed/Feed.vue';\nexport { default as FieldBig } from './FieldBig/FieldBig.vue';\nexport { default as FieldTags } from './FieldTags/FieldTags.vue';\n// export { default as Footer } from './Footer/Footer.vue';\n// export { default as Header } from './Header/Header.vue';\nexport { default as Loader } from './Loader/Loader.vue';\n// export { default as Navigation } from './Navigation/Navigation.vue';\n// export { default as Search } from './Search/Search.vue';\nexport { default as Shader } from './Shader/Shader.vue';\nexport { default as Slider } from './Slider/Slider.vue';\nexport { default as Status } from './Status/Status.vue';\n\nexport { default as Marquee } from './Marquee/Marquee.vue';\nexport { default as Media } from './Media/Media.vue';\n",
          "name": "index.js",
          "size": 2447,
          "type": "source"
        }
      ],
      "Map": {
        "_files": [
          {
            "path": "../../src/components/Map/LoaderGMaps.js",
            "relativePath": "components/Map/LoaderGMaps.js",
            "extension": ".js",
            "content": "// google-maps-loader.js\nclass GoogleMapsLoader {\n  constructor() {\n    this.loadPromise = null;\n    this.google = null;\n    this.currentOptions = null;\n    this.initCallbacks = new Set();\n  }\n\n  load(apiKey, options = {}) {\n    const defaultOptions = {\n      version: 'weekly',\n      libraries: ['places'],\n      language: 'en',\n    };\n\n    this.currentOptions = { ...defaultOptions, ...options };\n    const librariesParam = this.currentOptions.libraries.join(',');\n\n    if (!this.loadPromise) {\n      this.loadPromise = new Promise((resolve, reject) => {\n        const script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&libraries=${librariesParam}&v=${this.currentOptions.version}&language=${this.currentOptions.language}`;\n        script.onload = () => {\n          this.google = window.google.maps;\n          this.initCallbacks.forEach(callback => callback(this.google));\n          resolve(this.google);\n        };\n        script.onerror = reject;\n        document.head.appendChild(script);\n      });\n    }\n\n    return this.loadPromise.then(() => {\n      this._applyOptions(this.currentOptions);\n      return this.google;\n    });\n  }\n\n  _applyOptions(options) {\n    if (this.google && this.currentOptions.language !== options.language) {\n      this.google.setLanguage(options.language);\n      this.currentOptions.language = options.language;\n      this.reinitialize();\n    }\n  }\n\n  reinitialize() {\n    this.initCallbacks.forEach(callback => callback(this.google));\n  }\n\n  onInit(callback) {\n    this.initCallbacks.add(callback);\n    return () => {\n      this.initCallbacks.delete(callback);\n    };\n  }\n\n  updateOptions(newOptions) {\n    this.currentOptions = { ...this.currentOptions, ...newOptions };\n    this._applyOptions(this.currentOptions);\n  }\n}\n\nexport const googleMapsLoader = new GoogleMapsLoader();\n",
            "name": "LoaderGMaps.js",
            "size": 1923,
            "type": "source"
          },
          {
            "path": "../../src/components/Map/Map.vue",
            "relativePath": "components/Map/Map.vue",
            "extension": ".vue",
            "content": "<template>\n  <div ref=\"gmap\" class=\"gmap\"></div>\n  \n</template>\n\n<script setup>\nimport { ref, onMounted, watch } from 'vue';\n\n\nimport { Loader as GMLoader } from \"@googlemaps/js-api-loader\";\n\nconst props = defineProps({\n  location: Object,\n  apiKey: String,\n  locale: String,\n});\n\nlet gmap = ref(null);\nlet map = null;\nlet marker = null;\n\nonMounted(async () => {\n  const loader = new GMLoader({\n    apiKey: props.apiKey,\n    version: \"weekly\",\n    libraries: [\"places\"],\n    language: props.locale,    \n  });\n\n  loader.load().then(() => {\n    map = new google.maps.Map(gmap.value, {\n      zoom: 13,\n      center: {\n        lat: props.location.lat,\n        lng: props.location.lng,\n      },\n    });\n\n    // Добавить маркер\n    marker = new google.maps.Marker({\n      position: {\n        lat: props.location.lat,\n        lng: props.location.lng,\n      },\n      map: map,\n    });\n }).catch(e => {\n    console.error(e);\n  });\n});\nwatch(() => props.location, () => {\n  if (map && marker) {\n    // Обновить позицию маркера\n    marker.setPosition(new google.maps.LatLng(props.location.lat, props.location.lng));\n\n    // Обновить центр карты\n    map.setCenter(new google.maps.LatLng(props.location.lat, props.location.lng));\n  }\n}, { deep: true });\n\n</script>\n\n<style scoped>\n.gmap {\n  height: 100%;\n  width: 100%;\n}\n</style>\n",
            "name": "Map.vue",
            "size": 1318,
            "type": "source"
          }
        ]
      },
      "Address": {
        "_files": [
          {
            "path": "../../src/components/Address/Address.vue",
            "relativePath": "components/Address/Address.vue",
            "extension": ".vue",
            "content": "<template>\n  <div :class=\"$attrs.class\" class=\"flex-nowrap flex\"> \n    <!-- ////////////////////////// -->\n    <!-- Label -->\n    <!-- ////////////////////////// -->\n    <div v-if=\"label\" class=\"t-transp mn-r-small\">\n      <span>{{label}}</span>\n    </div>\n    <!-- ////////////////////////// -->\n    <!-- Input -->\n    <!-- ////////////////////////// -->\n    <input\n      ref=\"addressInput\"\n      class=\"w-100\"\n      :placeholder=\"placeholder\"\n      :value=\"address\"\n      @input=\"onInput\"\n    />\n  <!-- ////////////////////////// -->\n  <!-- Validation -->\n  <!-- ////////////////////////// -->\n    <transition mode=\"out-in\" name=\"fade\">\n      <div v-if=\"validation\" class=\"mn-t-thin invalid-feedback\">\n        * {{validation.message}}\n      </div>\n    </transition>\n  </div>\n</template>\n\n<style>\n.pac-container {\n  position: absolute;\n  background-color: white;\n  z-index: 1000;\n  border-radius: 2rem;\n  overflow: hidden;\n}\n</style>\n\n<script setup>\nimport { ref, onMounted, watchEffect } from 'vue';\n\nimport { Loader as GMLoader } from \"@googlemaps/js-api-loader\";\n\nconst props = defineProps({\n  apiKey: {\n    type: String,\n    required: true,\n  },\n  label: null,\n  placeholder: 'Enter something here',\n  field: null,\n  location: {\n    type: Object,\n    default:  { lat: 48.6900735, lng: 41.16202390 }\n  },\n  address: {\n    type: String,\n    default: \"\"\n  },\n  locale: {\n    type: String,\n    default: 'en'\n  }\n});\n\nconst emit = defineEmits(['update:address', 'update:location', 'update:country', 'update:state', 'update:city']);\n\nconst addressInput = ref(null);\n\nlet autocomplete;\n\nconst onPlaceChanged = () => {\n  const place = autocomplete.getPlace();\n\n  if (!place.geometry || !place.address_components) {\n    return;\n  }\n\n  let country = '', state = '', city = '';\n\n  for (let i = 0; i < place.address_components.length; i++) {\n\n    let addr = place.address_components[i];\n\n    if (addr.types.includes('country')) {\n      country = addr.long_name;\n    }\n    if (addr.types.includes('administrative_area_level_1')) {\n      state = addr.long_name;\n    }\n    if (addr.types.includes('locality')) {\n      city = addr.long_name;\n    }\n  }\n  \n  const newAddress = place.formatted_address;\n  const newLocation = { lat: place.geometry.location.lat(), lng: place.geometry.location.lng() };\n\n  emit('update:address', newAddress);\n  emit('update:location', newLocation);\n  \n  // Add new emits\n  emit('update:country', country);\n  emit('update:state', state);\n  emit('update:city', city);\n};\n\nonMounted(() => {  \n  const loader = new GMLoader({  \n    apiKey: props.apiKey,  \n    version: \"weekly\",  \n    libraries: [\"places\"],\n    language: props.locale,    \n  });\n\n  loader.load().then(() => {  \n    autocomplete = new google.maps.places.Autocomplete(addressInput.value);  \n    autocomplete.addListener('place_changed', onPlaceChanged);  \n  }).catch(e => {  \n    console.error(e);  \n  });  \n});\n</script>",
            "name": "Address.vue",
            "size": 2900,
            "type": "source"
          }
        ]
      },
      "Block": {
        "_files": [
          {
            "path": "../../src/components/Block/Block.vue",
            "relativePath": "components/Block/Block.vue",
            "extension": ".vue",
            "content": "<template>\n\t<div \n    class=\"bg-light pd-medium radius-medium\"\n  >\n  \t<div v-if=\"title || actions\" class=\"mn-b-small flex-v-center flex-nowrap flex\">\n  \t\t<h4 v-if=\"title\" class=\"mn-r-thin t-medium\">{{title}}</h4>\n  \t\t\t\n  \t\t<button \n  \t\t\tv-for=\"action in actions\" \n  \t\t\t@click=\"action.function\" \n  \t\t\tclass=\"pd-thin button-delete button\"\n  \t\t\t:class=\"action.class || 'bg-main radius-small t-center i-medium'\"\n  \t\t>\n  \t\t\t{{action.label}}\n  \t\t</button>\n\n  \t\t<Tooltip v-if=\"tooltip\" :text=\"tooltip\">\n\t      <p class=\"bg-main radius-small t-center i-medium\">i</p>\n\t    </Tooltip>\n  \t</div>\n\n  \t<span \n      v-if=\"!hasSlotContent($slots.default)\" \n      class=\"w-100\"\n    >\n     {{placeholder}}\n    </span> \n\n  \t<slot></slot>\n\t</div>\n</template>\n\n<script setup>\nimport { ref, defineProps, useSlots, Comment } from 'vue';\n\n\nimport Tooltip           from '@martyrs/src/components/Tooltip/Tooltip.vue'\n\nconst slots = useSlots()\n\nconst hasSlotContent = (slot, slotProps = {}) => {\n\tif (!slot) return false;\n\n\treturn slot(slotProps).some((vnode) => {\n\t\tif (Array.isArray(vnode.children)) {\n\t\t\treturn !!vnode.children.length;\n\t\t}\n\n\t\treturn vnode.type !== Comment;\n\t});\n};\n\n// defineProps объявление\nconst props = defineProps({\n\ttitle: {\n\t\ttype: String,\n\t\tdefault: null\n\t},\n\ttooltip: {\n\t\ttype: String,\n\t\tdefault: null\n\t},\n\tactions: {\n\t\ttype: Array,\n\t\tdefault: null\n\t},\n\tplaceholder: {\n\t\ttype: String,\n\t\tdefault: 'Nothing here'\n\t},\n  options: {\n    type: Object,\n    default: {\n    \ttheme: 'white'\n    }\n  },\n})\n</script>",
            "name": "Block.vue",
            "size": 1507,
            "type": "source"
          }
        ]
      },
      "BottomSheet": {
        "_files": [
          {
            "path": "../../src/components/BottomSheet/BottomSheet.vue",
            "relativePath": "components/BottomSheet/BottomSheet.vue",
            "extension": ".vue",
            "content": "<template>\n  <transition name=\"slideY\"  mode=\"out-in\">\n    <section \n      v-if=\"show\"\n      ref=\"wrapper\" \n      class=\"w-100 bs-black rows-1 h-100\"\n      :class=\"{\n        'pd-t-extra': MOBILE_APP === 'ios',  \n      }\"\n      >\n      <!-- Toggle To Close -->\n      <div\n        @click=\"emits('toggle')\"\n        @mousedown=\"startDrag\"\n        @touchstart=\"startDrag\"\n        @mousemove=\"onDrag\"\n        @touchmove=\"onDrag\"\n        @mouseup=\"endDrag\"\n        @touchend=\"endDrag\"\n        @mouseleave=\"endDrag\"\n        class=\"bs-black pd-small br-b br-solid br-light pos-relative bg-white flex-center flex z-index-2\"\n      >\n        <div class=\"radius-extra pd-nano w-3r h-1r bg-light\"></div>\n      </div>\n      \n      <slot></slot>\n    </section>\n  </transition>\n</template>\n\n<script setup>\nimport { ref, watch } from 'vue';\n\nconst props = defineProps({\n  show: {\n    type: Boolean,\n    default: false\n  },\n  options: {\n    type: Object,\n    default: {\n      position: false\n    }\n  }\n})\n\nconst emits = defineEmits([\n  'toggle'\n])\n\nconst wrapper = ref(null)\n\nconst startY = ref(0);\nconst currentY = ref(0);\nconst dragging = ref(false);\n\nwatch(() => props.show, (newVal) => {\n  if (newVal) {\n    document.body.classList.add('no-scroll');\n  } else {\n    document.body.classList.remove('no-scroll');\n  }\n});\n\nfunction startDrag(event) {\n  dragging.value = true;\n  startY.value = event.touches ? event.touches[0].clientY : event.clientY;\n  currentY.value = startY.value;\n}\n\nfunction onDrag(event) {\n  if (!dragging.value) return;\n  event.preventDefault(); // Prevent scrolling while dragging\n  currentY.value = event.touches ? event.touches[0].clientY : event.clientY;\n  const deltaY = currentY.value - startY.value;\n\n  if (deltaY > 0) {\n    wrapper.value.style.top = `${deltaY}px`;\n  }\n}\nfunction endDrag() {\n  if (!dragging.value) return;\n\n  dragging.value = false;\n\n  const deltaY = currentY.value - startY.value;\n  const threshold = window.innerHeight * 0.2;\n\n  if (deltaY < threshold) {\n    // If less than 40%, snap back to the original position\n    wrapper.value.style.top = '';\n  } else {\n    // If more than 40%, hide the element\n    emits('toggle')\n    // VisualizerWrapper.value.style.top = '';\n  }\n}\n</script>",
            "name": "BottomSheet.vue",
            "size": 2215,
            "type": "source"
          }
        ]
      },
      "Breadcrumbs": {
        "_files": [
          {
            "path": "../../src/components/Breadcrumbs/Breadcrumbs.vue",
            "relativePath": "components/Breadcrumbs/Breadcrumbs.vue",
            "extension": ".vue",
            "content": "<template>\n  <ol \n    class=\"\n      breadcrumbs\n      flex-row\n      flex-nowrap\n      flex-left\n      flex\n    \" \n    aria-label=\"breadcrumbs\"\n  >\n    <li \n      v-for=\"(item, index) in breadcrumbs\" \n      :key=\"index\" \n      class=\"\n        flex-v-center\n        flex-nowrap\n        flex\n      \" \n      :class=\"{ 't-main': index === breadcrumbs.length - 1 }\"\n    >\n      <!-- Home -->\n      <svg \n        v-if=\"index === 0\"\n        class=\"i-small mn-r-thin\" \n        viewBox=\"0 0 10 9\" \n        fill=\"none\" \n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path fill=\"rgb(var(--black))\" d=\"M0.494141 4.26391C0.494141 4.48862 0.659906 4.66912 0.928813 4.66912C1.05037 4.66912 1.16825 4.6065 1.27139 4.52177L1.64344 4.20866V7.56448C1.64344 8.13545 1.98971 8.47803 2.5791 8.47803H7.56678C8.15616 8.47803 8.50243 8.13545 8.50243 7.56448V4.19392L8.8929 4.52177C8.99604 4.6065 9.11392 4.66912 9.23916 4.66912C9.48597 4.66912 9.67015 4.5144 9.67015 4.27128C9.67015 4.1313 9.61121 4.01343 9.5007 3.92133L8.50243 3.08146V1.47538C8.50243 1.30961 8.3956 1.1991 8.22984 1.1991H7.63308C7.46732 1.1991 7.35313 1.30961 7.35313 1.47538V2.11634L5.66969 0.70181C5.31606 0.403433 4.85928 0.403433 4.50197 0.70181L0.663589 3.92133C0.553079 4.01711 0.494141 4.14235 0.494141 4.26391ZM6.13752 5.26219C6.13752 5.08906 6.02701 4.97855 5.85387 4.97855H4.31779C4.14097 4.97855 4.02678 5.08906 4.02678 5.26219V7.63447H2.83327C2.60856 7.63447 2.48332 7.50922 2.48332 7.28084V3.5014L4.90349 1.47538C5.01768 1.37592 5.15029 1.37592 5.26817 1.47538L7.66255 3.48298V7.28084C7.66255 7.50922 7.53731 7.63447 7.3126 7.63447H6.13752V5.26219Z\"/>\n      </svg>\n\n      <router-link v-if=\"index !== breadcrumbs.length - 1\" :to=\"index === 0 ? '/' : item.path\">\n        {{ item.name }}\n      </router-link>\n\n      <a v-else>\n        {{ item.name }}\n      </a>\n\n      <!-- Arrow -->\n      <svg \n        v-if=\"index !== breadcrumbs.length - 1\"\n        class=\"i-small chevron\" \n        viewBox=\"0 0 4 8\" \n        fill=\"none\" \n        xmlns=\"http://www.w3.org/2000/svg\"\n        >\n        <path d=\"M4 3.99992C4 3.83673 3.94307 3.70391 3.81025 3.57867L0.899431 0.732369C0.800759 0.629902 0.679317 0.580566 0.531309 0.580566C0.239089 0.580566 0 0.815861 0 1.10808C0 1.25229 0.0607211 1.38512 0.166983 1.49138L2.74763 3.99613L0.166983 6.50846C0.0607211 6.61093 0 6.74375 0 6.89176C0 7.18398 0.239089 7.41928 0.531309 7.41928C0.675522 7.41928 0.800759 7.36994 0.899431 7.26747L3.81025 4.42117C3.94307 4.29594 4 4.15931 4 3.99992Z\" fill=\"rgb(var(--black))\"/>\n      </svg>\n      \n    </li>\n  </ol>\n</template>\n\n<script setup>\nimport { ref, watch } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { useI18n } from 'vue-i18n';\n\nconst route = useRoute();\nconst { t, locale } = useI18n();\n\nfunction createRoute(array, route) {\n  return array\n    .map(segment => {\n      if (segment.startsWith(':')) {\n        let paramName = segment.replace(/[:?]/g, '');\n        return route.params[paramName] || null;\n      }\n      return segment;\n    })\n    .filter(segment => segment !== null)\n    .join('/');\n}\n\nconst breadcrumbs = ref([]);\n\nfunction updateBreadcrumbs() {\n  breadcrumbs.value = route.matched\n    .map((r) => {\n      const title = r.meta?.title;\n      const currentLocale = locale?.value;\n    \n      const name = title && currentLocale && title[currentLocale];\n\n      let path = r.path.split('/');\n      path = createRoute(path, route);\n\n      const isHidden = r.meta?.breadcrumbs?.hidden;\n    \n      return { name, path, isHidden };\n    })\n    .filter((breadcrumb) => {\n      return breadcrumb.name && !breadcrumb.isHidden;\n    });\n}\n\nwatch(\n  () => route.matched,\n  () => {\n    updateBreadcrumbs();\n  },\n  { immediate: true }\n);\n</script>\n\n\n\n<style lang='scss'>\n  .breadcrumbs { \n    height: 4rem;\n\n    // border-bottom: 1px solid rgba(0,0,0,0.1);\n\n    display: flex;\n    align-items: center;\n\n    flex-wrap: nowrap;\n\n    .home {\n      height: 1rem;\n\n    }\n\n    .chevron {\n      height: 0.75rem;\n\n    }\n\n    a {\n      display: flex;\n      align-items: center;\n\n      flex-wrap: nowrap;\n\n      span {\n        margin-left: 0.5rem;\n        margin-right: 0.5rem;\n      }\n    }\n\n    .router-link-exact-active:last-of-type {\n      span {\n        color: #00ff88;\n      } \n    }\n  }\n  </style>",
            "name": "Breadcrumbs.vue",
            "size": 4256,
            "type": "source"
          }
        ]
      },
      "Button": {
        "_files": [
          {
            "path": "../../src/components/Button/Button.vue",
            "relativePath": "components/Button/Button.vue",
            "extension": ".vue",
            "content": "<script setup>\n\timport { ref } from 'vue'\n\n\timport Loader from '@martyrs/src/components/Loader/Loader.vue'\n\n\tconst props = defineProps({\n\t\tsubmit: {\n\t\t\ttype: Function,\n\t\t\tdefault: async () => { console.log('Button click.') }\n\t\t},\n\t\ttext: {\n\t\t\ttype: Object,\n\t\t\tdefault: (textComponent) => {\n\t\t\t\treturn textComponent = {\n\t\t\t\t\t...textComponent.text,\n\t\t\t\t\tsuccess: '✔',\n\t\t\t\t\terror: '✖'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcounter: {\n\t    type: Object\n\t  },\n\t\tcallback: {\n\t\t\ttype: Function,\n\t\t\tdefault: async () => { console.log('Button callback.') }\n\t\t},\n\t\tcallbackDelay: {\n\t\t\ttype: Number,\n\t\t\tdefault: 750\n\t\t},\n\t\tshowSucces: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true\n\t\t},\n\t\tshowLoader: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true\n\t\t},\n\t\tvalidation: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\t})\t\n\n\tconst emits = defineEmits(['error'])\n\n\tconst button = ref(null);\n\tconst error = ref(null);\n\tconst loading = ref(false);\n\tconst finished = ref(false);\n\n\tasync function Submit() {\n\t\t\tconsole.log('click')\n\t\t\t\n\t    button.value.style['pointer-events'] = 'none';\n\t    error.value = null;\n\t    loading.value = true;\n\n\t    // Функция для сброса состояния кнопки.\n\t    const resetButton = () => {\n        if (button.value) {\n          // button.value.classList.replace('bg-second', 'bg-main');\n          button.value.style.pointerEvents = 'auto';\n          loading.value = false;\n          finished.value = false;\n          error.value = null;\n        }\n\t    };\n\n\t    try {\n        await props.submit();\n\n        button.value.classList.replace('bg-main', 'bg-second');\n\n        loading.value = false;\n\n        // Используем функцию сброса состояния кнопки здесь.\n        if (props.showSucces) { \n\t\t\t\t\tfinished.value = true;\n          setTimeout(resetButton, 500);\n        } else {\n          resetButton();\n        }\n\n        // Если есть callback, мы также установим таймер для его вызова.\n        if (props.callback) setTimeout(() => props.callback(), props.callbackDelay);\n\n\t    } catch (err) {\n    \t\temits('error',err)\n        // Если возникла ошибка, мы изменяем стили и устанавливаем сообщение об ошибке.\n        button.value.classList.replace('bg-main', 'bg-fourth-nano');\n        error.value = props.error;\n        \n        // После задержки снова сбрасываем состояние кнопки.\n        setTimeout(() => {\n          resetButton();\n          // Так как класс кнопки был изменен, вернем его в исходное состояние.\n          button.value.classList.replace('bg-fourth-nano', 'bg-main');\n        }, 1330);\n\t    }\n\t}\n\n</script>\n\n<template>\n\t<button @click.stop=\"Submit\" :disabled=\"validation\" ref=\"button\" class=\"button\">\n\t\t<transition name=\"FromTop\" >\n\t\t\t<!-- Slot -->\n\t\t\t<template v-if=\"!loading && !error && !finished || !showLoader\"><slot></slot></template>\n\t\t\t<!-- Loading Circle Animation -->\n\t\t\t<template v-else-if=\"loading && !error && showLoader\"><Loader  class=\"pos-relative pos-t-0 pos-l-0 loading\"/></template>\n\t\t\t<!-- <Loader v-else-if=\"loading && !error && showLoader\"/> -->\n\t\t\t<!-- Success -->\n\t\t\t<span v-else-if=\"finished && showSucces\" class=\"t-semi t-center w-100  loading t-black\">{{text.success}}</span>\n\t\t\t<!-- Error if not finished -->\n\t\t\t<span v-else-if=\"error\" class=\"t-center w-100 error\">{{ error }}</span>\n\t\t</transition>\n\t\t<!-- Counter -->\n\t\t<div v-if=\"counter\" class=\"button-counter flex-center\"><span>{{counter}}</span></div> \n\n\t</button> \n</template>\n\n\n<style lang=\"scss\">\n\t.FromTop-enter-active,\n\t.FromTop-leave-active {\n\t\ttransform: translateY(0);\n\t\topacity: 1;\n\t\ttransition: all 0.5s ease; \n\t\t\n\t}\n\t.FromTop-enter-from,\n\t.FromTop-leave-to {\n\t\tposition: absolute;\n\t\ttransform: translateY(-1rem);\n\t\topacity: 0;\n\t\ttransition: all 0.5s ease;\n\t}\n\n\tbutton[disabled] {\n\t\topacity: 0.75  !important;\n\t \tpointer-events: none  !important;\n\t \tcursor: default  !important;\n\t \tcolor: rgba(var(--black), 0.5)  !important;\n\t\tbackground: rgba(var(--grey), 1) !important; \n\t}\n\n\ta.button {\n\t\t\ttext-box: trim-both cap alphabetic;\n\t}\n\n\t.button {\n\t\tdisplay: flex;\n\n\t\tpadding: 1rem;\n\t\tborder-radius: 3rem;\n\t\ttext-box: trim-both cap alphabetic;\n\n\t\ttransform: scale(1);\n\t\topacity: 1;\n\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\t\n\t\tcolor: black;\n\t\ttext-align: center;\n\t\ttext-transform: uppercase;\n\t\tfont-size: 1rem;\n\t\tletter-spacing: 5%;\n\n\t\ttransition: all 0.33s ease;\n\t \n\t\t&:hover {\n\t\t\tcursor: pointer;\n\t\t\topacity: 0.9;\n\t\t}\n\n\t\t&:active {\n\t\t\ttransform: scale(0.95);\n\t\t}\n\n\t\t&-small {\n\t\t\tpadding: 0.75rem;\n\t\t\tborder-radius: 0.5rem;\n\t\t\theight: fit-content;\n\t\t}\n\n\t\t.button-counter {\n\t\t\tposition: absolute;\n\t\t\tright: -8px;\n\t    bottom: -8px;\n\t    background: yellow;\n\t    height: 16px;\n\t    border-radius: 16px;\n\t    width: 16px;\n\t    font-weight: 500;\n\t    text-align: center;\n\t    line-height: 16px;\n\t    font-size: 10px;\n\t\t}\n\t}\n</style>",
            "name": "Button.vue",
            "size": 4706,
            "type": "source"
          }
        ]
      },
      "ButtonSegmented": {
        "_files": [
          {
            "path": "../../src/components/ButtonSegmented/ButtonSegmented.vue",
            "relativePath": "components/ButtonSegmented/ButtonSegmented.vue",
            "extension": ".vue",
            "content": "<template>\n\t<div class=\"\">\n\t\t<div class=\"flex-nowrap flex-v-center flex pos-relative\">\n\n\t\t\t<div  \n\t\t\t\tv-for=\"(tab,index) in tabs\" \n\t\t\t\t:key=\"index\" \n\t\t\t\t@click=\"selectTab(index,tab)\" \n\t\t\t\t:class=\"{ 't-transp': index !== selectedTab }\"\n\t\t\t\tclass=\"z-index-1 t-center pd-small w-100\">\n\t\t\t\t<label>{{tab.name}}</label>\n\t\t\t</div>\n\n\t\t\t<div \n\t\t\t\t:style=\"tabSelectorStyle\" \n\t\t\t\tclass=\"radius-extra bg-main t-white tab-selector\">\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n\n<script setup=\"props\">\n\timport { ref, computed } from 'vue'\n\n\tconst emit = defineEmits(['update:selected']);\n\n\tconst props = defineProps({\n\t\ttabs: Array,\n\t\tselected: String,\n\t\tcallback: Function\n\t})\n\n\tconst selectedTab = ref(0)\n\n\tif (props.selected) {\n\t\tconst selectedIndex = props.tabs.findIndex(tab => tab.value === props.selected)\n\t\tif (selectedIndex !== -1) {\n\t\t\tselectedTab.value = selectedIndex\n\t\t}\n\t}\n\t\n\tfunction selectTab(index,tab) {\n\t  selectedTab.value = index;\n\t  emit('update:selected', tab.value);\n\t  if (props.callback) props.callback()\n\t}\n\n\tfunction getTabSelectorLeftOffset(tabIndex) {\n\t  const tabWidthPercentage = 100 / props.tabs.length;\n\t  return `${tabWidthPercentage * tabIndex}%`;\n\t}\n\n\tfunction calculateTabWidth() {\n\t  return `${100 / props.tabs.length}%`;\n\t}\n\n\tconst tabSelectorStyle = computed(() => {\n\t  const leftOffset = getTabSelectorLeftOffset(selectedTab.value);\n\t  return { left: leftOffset, width: calculateTabWidth() };\n\t});\n</script>\n\n<style lang=\"scss\">\n\t.tab-selector {\n\t\tposition: absolute;\n\t\twidth: 50%;\n\t\theight: 100%;\n\n\n\t\tleft: 0;\n\t\ttop: 0;\n\n\t\tz-index: 0;\n\n\t\ttransition: left 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n\t}\n</style>\n",
            "name": "ButtonSegmented.vue",
            "size": 1627,
            "type": "source"
          }
        ]
      },
      "Checkbox": {
        "_files": [
          {
            "path": "../../src/components/Checkbox/Checkbox.vue",
            "relativePath": "components/Checkbox/Checkbox.vue",
            "extension": ".vue",
            "content": "<script setup>\n  import { ref, watch, computed } from 'vue'\n\n  const props = defineProps({\n    label: String,\n    name: String,\n    value: String,\n    radio: {\n      type: [Array, Boolean, Object],\n      default: () => []\n    },\n    theme: {\n      type: String,\n      default: \"light\"\n    }\n  })\n\n  const emit = defineEmits(['update:radio'])\n\n  const updateInputText = (event) => {\n    if (Array.isArray(props.radio)) {\n      let newRadio = [...props.radio];  // создаем копию массива для иммутабельности\n      if (event.target.checked) {\n        newRadio.push(props.value);\n      } else {\n        const index = newRadio.indexOf(props.value);\n        if (index !== -1) {\n          newRadio.splice(index, 1);\n        }\n      }\n      emit('update:radio', newRadio);\n    } else if (typeof props.radio === 'boolean') {\n      emit('update:radio', event.target.checked);\n    }\n  }\n</script>\n\n<template>\n\n  <label class=\"flex-v-center flex-nowrap flex\">\n    <div v-if=\"label\" class=\"mn-r-auto t-transp mn-r-small\">\n      <span>{{label}}</span>\n    </div>\n\n    <input \n      @change=\"updateInputText\"\n      class=\"round radiobutton\" \n      type=\"checkbox\" \n      :name=\"name\" \n      :value=\"value\"\n      :checked=\"Array.isArray(radio) ? radio.includes(value) : radio\"\n    > \n\n    <div \n      class=\"transition-elastic cursor-pointer mn-l-thin pd-thin h-2r w-4r radius-extra\"\n      :class=\"{\n        'bg-dark':!(Array.isArray(radio) ? radio.includes(value) : radio) && theme === 'dark',\n        'bg-light':!(Array.isArray(radio) ? radio.includes(value) : radio) && theme === 'light',\n        'bg-main':Array.isArray(radio) ? radio.includes(value) : radio,\n      }\"\n\n    >\n      <div \n        class=\"transition-linear w-1r h-1r radius-extra h-100 bg-white\"\n        :class=\"{\n          'mn-r-auto':!(Array.isArray(radio) ? radio.includes(value) : radio),\n          'mn-l-auto':Array.isArray(radio) ? radio.includes(value) : radio,\n        }\"\n      >\n      </div>\n    </div>\n  </label>\n\n</template>",
            "name": "Checkbox.vue",
            "size": 1986,
            "type": "source"
          }
        ]
      },
      "Chips": {
        "_files": [
          {
            "path": "../../src/components/Chips/Chips.vue",
            "relativePath": "components/Chips/Chips.vue",
            "extension": ".vue",
            "content": "<template>\n\t<div \n    class=\"font-main\"\n   >\n   \t<slot></slot>\n\t\t<span \n\t\t\tv-if=\"chips?.length\"\n\t\t  v-for=\"(chip,index) in chips\" \n\t\t  :class=\"$attrs.class || 'p-medium font-main'\"\n\t\t \tclass=\"mn-r-nano d-inline-block w-max pd-b-micro pd-t-micro pd-r-thin pd-l-thin radius-small t-medium bg-main\" \n\t\t>\n\t\t\t<span class=\"text-box-trim-none t-truncate\">{{chip.text ? chip.text : chip}}</span>\n\t\t</span>\n\n\t\t<div \n\t\t\tv-else\n\t\t\tclass=\"pd-b-micro pd-t-micro pd-r-thin pd-l-thin radius-small t-semi bg-white\" \n\t\t>\n\t\t\t<slot></slot>\n\t\t</div>\n\t</div>\n</template>\n\n<script setup>\nimport { ref, defineProps } from 'vue';\n\nconst props = defineProps(['chips']);\n</script>\n\n<style>\n\t.t-trimmed {\n\t\tfont-size: 0;\n\t}\n</style>",
            "name": "Chips.vue",
            "size": 705,
            "type": "source"
          }
        ]
      },
      "Completion": {
        "_files": [
          {
            "path": "../../src/components/Completion/Completion.vue",
            "relativePath": "components/Completion/Completion.vue",
            "extension": ".vue",
            "content": "<template>\n  <section class=\"\">\n    <div class=\"mn-b-small gap-small flex-v-center flex-nowrap flex\">\n      <h4 class=\"t-nowrap  \">\n        {{ text }}\n\n      <span class=\"uppercase radius-big t-nowrap t-medium t-white bg-black w-max pd-micro pd-l-thin pd-r-small\">\n        {{ percentage || completionPercentage }}%\n      </span>\n\n      </h4>\n\n      <router-link \n        v-if=\"cta\"\n        class=\"h4 mn-l-auto\"\n         :to=\"{\n          name: 'User Edit Profile',\n          params: { _id: user }\n        }\"\n      >\n\n        <span class=\"uppercase radius-big t-nowrap t-medium t-white bg-black w-max pd-micro pd-l-thin pd-r-small\">\n          {{ text_cta }}\n        </span>\n      \n      </router-link>\n    </div> \n\n    <div class=\"w-100 h-2r pos-relative pd-nano bg-black radius-big\">\n      <div :style=\"`width: ${completionPercentage}%`\" class=\"h-100 bg-second mn-b-thin radius-big\">\n      </div>\n    </div>\n  </section>\n</template>\n\n<script setup>\nimport { computed } from 'vue';\n\nconst { user, cta, target } = defineProps({\n  user: Object,\n  target: Object,\n  cta: Boolean,\n  percentage: Number,\n  text: String,\n  text_cta: String,\n});\n\nconst calculateCompletion = (profileObject) => {\n  let totalProperties = 0;\n  let filledProperties = 0;\n\n  function recurse(obj) {\n    for (let key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        if (obj[key] && typeof obj[key] === 'object' && !Array.isArray(obj[key])) {\n          recurse(obj[key]);  // Recurse into nested objects\n        } else {\n          totalProperties++;\n          if (obj[key] != null && obj[key] !== '') {\n            filledProperties++;\n          }\n        }\n      }\n    }\n  }\n\n  recurse(profileObject);\n\n  return (totalProperties === 0 ? 0 : Math.round((filledProperties / totalProperties) * 100));\n};\n\nconst completionPercentage = computed(() => {\n  return target ? calculateCompletion(target) : 0;\n});\n</script>\n",
            "name": "Completion.vue",
            "size": 1887,
            "type": "source"
          }
        ]
      },
      "Countdown": {
        "_files": [
          {
            "path": "../../src/components/Countdown/Countdown.vue",
            "relativePath": "components/Countdown/Countdown.vue",
            "extension": ".vue",
            "content": "<template>\n  <div class=\"gap-thin flex-nowrap flex flex-center\">\n    <div v-if=\"isTimeOver\" class=\"flex-child-grow-1  flex-child-shrink-0 flex-child-basis-auto pd-medium bg-blur-small bg-white-transp-5 radius-small\">\n      <p class=\"p-small t-transp\">Offer is over</p>\n    </div>\n\n    <div  v-if=\"!isTimeOver\" class=\"flex-child-grow-1  flex-child-shrink-0 flex-child-basis-auto pd-thin bg-blur-small bg-white-transp-5 radius-small\">\n    \t<p class=\"p-big\">{{ days }}</p>\n    \t<p class=\"p-small t-transp\">Days</p>\n    </div>\n     <div  v-if=\"!isTimeOver\" class=\"flex-child-grow-1  flex-child-shrink-0 flex-child-basis-auto pd-thin bg-blur-small bg-white-transp-5 radius-small\">\n    \t<p class=\"p-big\">{{ hours }}</p>\n    \t<p class=\"p-small t-transp\">hours</p>\n    </div>\n     <div  v-if=\"!isTimeOver\" class=\"flex-child-grow-1  flex-child-shrink-0 flex-child-basis-auto pd-thin bg-blur-small bg-white-transp-5 radius-small\">\n    \t<p class=\"p-big\">{{ minutes }}</p>\n    \t<p class=\"p-small t-transp\">minutes</p>\n    </div>\n     <div  v-if=\"!isTimeOver\" class=\"flex-child-grow-1  flex-child-shrink-0 flex-child-basis-auto pd-thin bg-blur-small bg-white-transp-5 radius-small\">\n    \t<p class=\"p-big\">{{ seconds }}</p>\n    \t<p class=\"p-small t-transp\">seconds</p>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, onBeforeUnmount } from 'vue';\n\nconst props = defineProps([\n  'date',\n])\n\nconst targetDate = new Date(props.date).getTime();\nconst currentDate = ref(new Date().getTime());\n\nlet interval;\n\nconst days = ref(0);\nconst hours = ref(0);\nconst minutes = ref(0);\nconst seconds = ref(0);\n\nconst isTimeOver = ref(false);\n\nconst calculateTime = () => {\n  const timeDifference = targetDate - currentDate.value;\n\n  if (timeDifference <= 0) {\n    // Target date has passed, set all values to 0\n    days.value = 0;\n    hours.value = 0;\n    minutes.value = 0;\n    seconds.value = 0;\n    isTimeOver.value = true\n    clearInterval(interval);\n  } else {\n    days.value = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\n    hours.value = Math.floor((timeDifference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    minutes.value = Math.floor((timeDifference % (1000 * 60 * 60)) / (1000 * 60));\n    seconds.value = Math.floor((timeDifference % (1000 * 60)) / 1000);\n  }\n};\n\ncalculateTime();\n\nonMounted(() => {\n  interval = setInterval(() => {\n    currentDate.value = new Date().getTime();\n    calculateTime();\n  }, 1000);\n});\n\nonBeforeUnmount(() => {\n  clearInterval(interval);\n});\n</script>\n",
            "name": "Countdown.vue",
            "size": 2502,
            "type": "source"
          }
        ]
      },
      "DatePicker": {
        "_files": [
          {
            "path": "../../src/components/DatePicker/Calendar.vue",
            "relativePath": "components/DatePicker/Calendar.vue",
            "extension": ".vue",
            "content": "<template>\n  <div class=\"calendar\" :aria-disabled=\"disabled\"> \n     <div v-if=\"allowRange && !disablePastDates\" class=\"br-b br-solid br-grey-transp-25 gap-thin flex flex-nowrap pd-thin\">\n      <button @click=\"selectToday\" class=\"font-second t-nowrap pd-thin bg-white radius-small\">Today</button>\n      <button @click=\"selectLastWeek\" class=\"font-second t-nowrap pd-thin bg-white radius-small\">Last Week</button>\n      <button @click=\"selectLastMonth\" class=\"font-second t-nowrap pd-thin bg-white radius-small\">Last Month</button>\n      <button @click=\"selectLastYear\" class=\"font-second t-nowrap pd-thin bg-white radius-small\">All time</button>\n    </div>\n    <div class=\"pd-thin flex flex-nowrap flex-v-center flex-justify-between\">\n      <button @click.stop=\"prevMonth\" class=\"aspect-1x1 pd-thin bg-white radius-extra\" :disabled=\"isPrevMonthDisabled\">\n        <svg class=\"i-regular\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"20\" viewBox=\"0 0 12 20\" fill=\"none\">\n          <path d=\"M0.610352 10.0068C0.615885 9.81315 0.654622 9.63607 0.726562 9.47559C0.798503 9.3151 0.90918 9.16016 1.05859 9.01074L9.37598 0.958984C9.61393 0.721029 9.90723 0.602051 10.2559 0.602051C10.4883 0.602051 10.6986 0.657389 10.8867 0.768066C11.0804 0.878743 11.2326 1.02816 11.3433 1.21631C11.4595 1.40446 11.5176 1.61475 11.5176 1.84717C11.5176 2.19027 11.3875 2.49186 11.1274 2.75195L3.60693 9.99854L11.1274 17.2534C11.3875 17.519 11.5176 17.8206 11.5176 18.1582C11.5176 18.3962 11.4595 18.6092 11.3433 18.7974C11.2326 18.9855 11.0804 19.1349 10.8867 19.2456C10.6986 19.3618 10.4883 19.4199 10.2559 19.4199C9.90723 19.4199 9.61393 19.2982 9.37598 19.0547L1.05859 11.0029C0.903646 10.8535 0.790202 10.6986 0.718262 10.5381C0.646322 10.3721 0.610352 10.195 0.610352 10.0068Z\" :fill=\"isPrevMonthDisabled ? '#303030' : '#007AFF'\"/>\n        </svg>\n      </button>\n      <span class=\"t-semi\">{{ monthYear }}</span>\n      <button @click.stop=\"nextMonth\" class=\"aspect-1x1 pd-thin bg-white radius-extra\">\n        <svg class=\"i-regular \" xmlns=\"http://www.w3.org/2000/svg\" width=\"11\" height=\"20\" viewBox=\"0 0 11 20\" fill=\"none\">\n          <path d=\"M10.9072 10.0151C10.9017 10.2088 10.863 10.3859 10.791 10.5464C10.7191 10.7069 10.6084 10.8618 10.459 11.0112L2.1416 19.063C1.90365 19.3009 1.61035 19.4199 1.26172 19.4199C1.0293 19.4199 0.81901 19.3646 0.630859 19.2539C0.437175 19.1432 0.284994 18.9938 0.174316 18.8057C0.0581055 18.6175 8.85326e-08 18.4072 1.08852e-07 18.1748C1.38846e-07 17.8317 0.130046 17.5301 0.390137 17.27L7.91065 10.0234L0.390138 2.76855C0.130047 2.50293 1.5053e-06 2.20133 1.53481e-06 1.86377C1.55561e-06 1.62581 0.058107 1.41276 0.174318 1.22461C0.284995 1.03646 0.437176 0.887043 0.630861 0.776366C0.819012 0.660155 1.0293 0.60205 1.26172 0.60205C1.61035 0.60205 1.90365 0.723795 2.1416 0.967284L10.459 9.01904C10.6139 9.16846 10.7274 9.3234 10.7993 9.48389C10.8713 9.6499 10.9072 9.82699 10.9072 10.0151Z\" :fill=\"isPrevMonthDisabled ? '#303030' : '#007AFF'\"/>\n        </svg>\n      </button>\n    </div>\n\n    <div class=\"pd-thin calendar__body\">\n      <div class=\"calendar__week\">\n        <div v-for=\"(day, index) in daysOfWeek\" :key=\"index\" class=\"calendar__weekday\">\n          {{ day }}\n        </div>\n      </div>\n      <div class=\"gap-micro calendar__dates\">\n        <div\n          v-for=\"day in daysInMonth\"\n          :key=\"day.date\"\n          :class=\"[\n            'flex flex-center cursor-pointer aspect-1x1 radius-small',\n            { 'calendar__date--today': day.isToday },\n            { 'calendar__date--selected': isSelected(day.date) },\n            { 'calendar__date--range': isInRange(day.date) },\n            { 'calendar__date--in-other-month': !isSameMonth(day.date) },\n            { 'calendar__date--disabled': isPastDate(day.date) },\n            { 'calendar__date--low-availability': isLowAvailability(day.date) },\n            { 'calendar__date--unavailable': !isAvailable(day.date) && !isPastDate(day.date) },\n          ]\"\n          @click.stop=\"selectDate(day.date)\"\n        >\n          {{ day.day }}\n          <span v-if=\"showAvailability && getAvailability(day.date)\" class=\"availability-indicator\">\n            {{ getAvailability(day.date) }}\n          </span>\n        </div>\n      </div>\n    </div>\n   \n  </div>\n</template>\n\n<script setup>\nimport { computed, ref, watch } from 'vue'\n\nconst props = defineProps({\n  modelValue: [Date, Object],\n  allowRange: Boolean,\n  disabled: Boolean,\n  disablePastDates: {\n    type: Boolean,\n    default: false\n  },\n  availabilityData: {\n    type: Array,\n    default: () => []\n  },\n  showAvailability: {\n    type: Boolean,\n    default: false\n  },\n  lowAvailabilityThreshold: {\n    type: Number,\n    default: 3\n  }\n})\n\nconst emit = defineEmits(['update:modelValue'])\n\nconst dateCalendar = defineModel('date')\n\nconst today = new Date()\nconst currentDate = ref(today)\nconst selectedDate = ref(null)\nconst startDate = ref(null)\nconst endDate = ref(null)\n\nconst daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n\n// Watch for availability data updates\nwatch(() => props.availabilityData, (newData) => {\n  // You could perform additional processing when availability data changes\n}, { deep: true })\n\nconst toUTC = (date) => {\n  return new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()))\n}\n\nconst toEndOfDayUTC = (date) => {\n  const endOfDay = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), 23, 59, 59));\n  return endOfDay;\n}\n\nconst dateToString = (date) => {\n  return date.toISOString().split('T')[0];\n}\n\nconst monthYear = computed(() => {\n  const month = currentDate.value.toLocaleString('default', { month: 'long', timeZone: 'UTC' })\n  const year = currentDate.value.getUTCFullYear()\n  return `${month} ${year}`\n})\n\nconst isPrevMonthDisabled = computed(() => {\n  if (!props.disablePastDates) return false;\n  \n  // Check if current view month is the current month\n  return currentDate.value.getUTCMonth() === today.getUTCMonth() && \n         currentDate.value.getUTCFullYear() === today.getUTCFullYear();\n})\n\nconst daysInMonth = computed(() => {\n  const days = []\n  const firstDay = new Date(Date.UTC(\n    currentDate.value.getUTCFullYear(),\n    currentDate.value.getUTCMonth(),\n    1\n  ))\n  const lastDay = new Date(Date.UTC(\n    currentDate.value.getUTCFullYear(),\n    currentDate.value.getUTCMonth() + 1,\n    0\n  ))\n\n  const firstDayOfWeek = firstDay.getUTCDay()\n\n  let date = new Date(firstDay)\n\n  date.setUTCDate(date.getUTCDate() - firstDayOfWeek)\n\n  for (let i = 0; i < firstDayOfWeek; i++) {\n    days.push({\n      date: new Date(date),\n      day: date.getUTCDate(),\n      isToday: isToday(date),\n    })\n    date.setUTCDate(date.getUTCDate() + 1)\n  }\n\n  let day = 1\n\n  for (date = firstDay; date <= lastDay; date.setUTCDate(date.getUTCDate() + 1)) {\n    days.push({\n      date: new Date(date),\n      day,\n      isToday: isToday(date),\n    })\n    day++\n  }\n\n  const lastDayOfWeek = days[days.length - 1].date.getUTCDay()\n\n  for (let i = lastDayOfWeek + 1; i <= 6; i++) {\n    days.push({\n      date: new Date(date),\n      day: date.getUTCDate(),\n      isToday: isToday(date),\n    })\n    date.setUTCDate(date.getUTCDate() + 1)\n  }\n\n  return days\n})\n\nconst isToday = (date) => {\n  const today = new Date()\n  return (\n    date.getUTCDate() === today.getUTCDate() &&\n    date.getUTCMonth() === today.getUTCMonth() &&\n    date.getUTCFullYear() === today.getUTCFullYear()\n  )\n}\n\nconst isSameMonth = (date) => {\n  return (\n    date.getUTCMonth() === currentDate.value.getUTCMonth() &&\n    date.getUTCFullYear() === currentDate.value.getUTCFullYear()\n  )\n}\n\nconst isPastDate = (date) => {\n  if (!props.disablePastDates) return false;\n  \n  const now = new Date();\n  // Compare only dates without time\n  const todayDate = new Date(Date.UTC(now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate()));\n  const compareDate = new Date(Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate()));\n  \n  return compareDate < todayDate;\n}\n\nconst getAvailabilityInfo = (date) => {\n  if (!props.availabilityData || props.availabilityData.length === 0) return null;\n  \n  const dateStr = dateToString(date);\n  return props.availabilityData.find(item => item.date === dateStr);\n}\n\nconst isAvailable = (date) => {\n  if (!props.availabilityData || props.availabilityData.length === 0) return true;\n  \n  const availabilityInfo = getAvailabilityInfo(date);\n  return !availabilityInfo || availabilityInfo.availableQuantity > 0;\n}\n\nconst isLowAvailability = (date) => {\n  if (!props.availabilityData || props.availabilityData.length === 0) return false;\n  \n  const availabilityInfo = getAvailabilityInfo(date);\n  return availabilityInfo && \n         availabilityInfo.availableQuantity > 0 && \n         availabilityInfo.availableQuantity <= props.lowAvailabilityThreshold;\n}\n\nconst getAvailability = (date) => {\n  if (!props.showAvailability) return null;\n  \n  const availabilityInfo = getAvailabilityInfo(date);\n  return availabilityInfo ? availabilityInfo.availableQuantity : null;\n}\n\nconst isSelected = (date) => {\n  if (props.allowRange) {\n    if (startDate.value && endDate.value) {\n      return date >= new Date(startDate.value) && toEndOfDayUTC(date) <= new Date(endDate.value);\n    } else if (startDate.value) {\n      return date.getTime() === new Date(startDate.value).getTime();\n    }\n  } else {\n    return selectedDate.value && date.getTime() === new Date(selectedDate.value).getTime();\n  }\n}\n\nconst isInRange = (date) => {\n  if (startDate.value && endDate.value) {\n    return date > startDate.value && toEndOfDayUTC(date) < endDate.value\n  }\n  return false\n}\n\nconst selectDate = (date) => {\n  // Don't allow selection of past dates or unavailable dates\n  if (props.disablePastDates && isPastDate(date)) return;\n  if (!isAvailable(date)) return;\n  \n  // If selecting a date from another month, switch to that month\n  if (!isSameMonth(date)) {\n    // currentDate.value = new Date(Date.UTC(\n    //   date.getUTCFullYear(),\n    //   date.getUTCMonth(),\n    //   1\n    // ));\n  }\n  \n  const formattedDate = toUTC(date)\n  \n  if (!props.allowRange) {\n    selectedDate.value = formattedDate\n    dateCalendar.value = formattedDate\n  } else if (!startDate.value && !endDate.value) {\n    startDate.value = formattedDate\n    dateCalendar.value = { start: formattedDate, end: null }\n  } else if (!endDate.value) {\n    endDate.value = toEndOfDayUTC(date)\n    if (formattedDate < startDate.value) {\n      const temp = toEndOfDayUTC(startDate.value)\n      startDate.value = formattedDate\n      endDate.value = temp\n    }\n    // Verify all dates in the range are available\n    if (props.availabilityData && props.availabilityData.length > 0) {\n      let allDatesAvailable = true;\n      let currentDate = new Date(startDate.value);\n      \n      while (currentDate <= endDate.value) {\n        if (!isAvailable(currentDate)) {\n          allDatesAvailable = false;\n          break;\n        }\n        currentDate.setUTCDate(currentDate.getUTCDate() + 1);\n      }\n      if (!allDatesAvailable) {\n        // Instead of resetting the end date, start a new range\n        startDate.value = formattedDate\n        endDate.value = null\n        dateCalendar.value = { start: formattedDate, end: null }\n        return;\n      }\n    }\n    dateCalendar.value = { start: startDate.value, end: endDate.value }\n  } else {\n    startDate.value = formattedDate\n    endDate.value = null\n    dateCalendar.value = { start: formattedDate, end: null }\n  }\n}\n\nconst prevMonth = () => {\n  // Prevent navigating to past months if disablePastDates is true\n  if (props.disablePastDates) {\n    const newDate = new Date(Date.UTC(\n      currentDate.value.getUTCFullYear(),\n      currentDate.value.getUTCMonth() - 1,\n      1\n    ));\n    \n    if (newDate.getUTCFullYear() < today.getUTCFullYear() || \n        (newDate.getUTCFullYear() === today.getUTCFullYear() && \n         newDate.getUTCMonth() < today.getUTCMonth())) {\n      return;\n    }\n  }\n  \n  currentDate.value = new Date(Date.UTC(\n    currentDate.value.getUTCFullYear(),\n    currentDate.value.getUTCMonth() - 1,\n    1\n  ));\n}\n\nconst nextMonth = () => {\n  currentDate.value = new Date(Date.UTC(\n    currentDate.value.getUTCFullYear(),\n    currentDate.value.getUTCMonth() + 1,\n    1\n  ))\n}\n\nconst selectToday = () => {\n  const today = new Date();  \n  const todayStart = new Date(Date.UTC(today.getUTCFullYear(), today.getUTCMonth(), today.getUTCDate(), 0, 0, 0, 0)); \n  const todayEnd = new Date(Date.UTC(today.getUTCFullYear(), today.getUTCMonth(), today.getUTCDate(), 23, 59, 59, 999)); \n\n  // Check if today is available\n  if (props.disablePastDates || isAvailable(todayStart)) {\n    startDate.value = todayStart.toISOString();\n    endDate.value = todayEnd.toISOString();\n    dateCalendar.value = { start: startDate.value, end: endDate.value };\n  }\n}\n\nconst selectLastWeek = () => {\n  const today = new Date();\n  const lastWeek = new Date(today);\n  lastWeek.setUTCDate(today.getUTCDate() - 7);\n  lastWeek.setUTCHours(0, 0, 0, 0);\n\n  // Skip if disablePastDates is true\n  if (props.disablePastDates) return;\n\n  startDate.value = lastWeek;\n  endDate.value = toEndOfDayUTC(today);\n  \n  today.setUTCHours(23, 59, 59, 999);\n\n  const start = lastWeek.toISOString();\n  const end = today.toISOString();\n  \n  dateCalendar.value = { start: start, end: end };\n}\n\nconst selectLastMonth = () => {\n  const today = new Date();\n  \n  // Skip if disablePastDates is true\n  if (props.disablePastDates) return;\n  \n  // Create date for last month\n  const lastMonth = new Date(today);\n  lastMonth.setUTCMonth(today.getUTCMonth() - 1);\n  lastMonth.setUTCHours(0, 0, 0, 0);\n  \n  startDate.value = lastMonth;\n  endDate.value = toEndOfDayUTC(today);\n\n  today.setUTCHours(23, 59, 59, 999);\n  \n  const start = lastMonth.toISOString();\n  const end = today.toISOString();\n  \n  dateCalendar.value = { start: start, end: end };\n}\n\nconst selectLastYear = () => {\n  // Skip if disablePastDates is true\n  if (props.disablePastDates) return;\n\n  startDate.value = null;\n  endDate.value = null;\n  dateCalendar.value = { start: null, end: null };\n}\n</script>\n\n<style lang='scss' scoped>\n.calendar[aria-disabled=\"true\"] {\n  cursor: not-allowed;\n\n  * {\n     pointer-events: none;\n  }\n}\n.calendar__week {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  gap: 5px;\n  margin-bottom: 10px;\n}\n\n.calendar__weekday {\n  text-align: center;\n}\n\n.calendar__dates {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  grid-auto-rows: 1fr;\n}\n\n.calendar__dates::before {\n  content: '';\n  width: 0;\n  padding-bottom: 100%;\n  grid-row: 1 / 1;\n  grid-column: 1 / 1;\n}\n\n.calendar__dates > *:first-child {\n  grid-row: 1 / 1;\n  grid-column: 1 / 1;\n}\n\n.calendar__date--today {\n  background-color: rgb(var(--main)) !important;\n  font-weight: bold;\n}\n\n.calendar__date--in-other-month {\n  color: #aaaaaa; /* Grey text color for dates from adjacent months */\n}\n\n.calendar__date--selected {\n  background-color: #007bff !important;\n  color: #fff;\n}\n\n.calendar__date--range {\n  background-color: #1c6ab8 !important;\n}\n\n.calendar__date--disabled, .calendar__date--unavailable {\n  color: #ccc;\n  cursor: not-allowed;\n  text-decoration: line-through;\n  opacity: 0.5;\n}\n\n.calendar__date--low-availability {\n  position: relative;\n  background-color: #f0f0f0;\n/*  border: 1px solid #fff3cd;*/\n/*  background-color: #fff3cd;*/\n}\n\n.availability-indicator {\n  position: absolute;\n  bottom: 2px;\n  right: 2px;\n  font-size: 8px;\n  color: #6c757d;\n}\n\nbutton:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n</style>",
            "name": "Calendar.vue",
            "size": 15481,
            "type": "source"
          },
          {
            "path": "../../src/components/DatePicker/DatePicker.vue",
            "relativePath": "components/DatePicker/DatePicker.vue",
            "extension": ".vue",
            "content": "<template>\n  <div>\n    <div \n      class=\"w-100 scroller o-scroll scroll-snap-type-x-mandatory scroll-pd-regular scroll-hide flex-nowrap flex\" \n      ref=\"scrollContainer\"\n    >\n      <div \n        v-for=\"date in dates\" \n        :key=\"date.toString()\" \n        @click=\"selectDate(date)\"\n        :class=\"{\n          'selected': selectedDate && selectedDate.toDateString() === date.toDateString(),\n          'highlighted': isHighlighted(date)\n        }\"\n        class=\"cursor-pointer scroll-snap-align-start mn-r-small mn-l-small flex-column flex-center flex\"\n      >\n        <span class=\"t-transp\">\n          {{ dayLetter(date) }}\n        </span>\n        <span \n          :class=\"{\n            'bg-main': selectedDate && selectedDate.toDateString() === date.toDateString(),\n             'br-1px br-solid br-main':isHighlighted(date),\n          }\"\n          class=\"transition-ease-in-out t-semi flex-center flex radius-big i-semi day-number\"\n        >\n          {{ date.getDate() }}\n        </span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, defineProps, defineEmits } from 'vue';\n\nconst emit = defineEmits();\nconst props = defineProps(['date', 'options','locale']);\n\nconst scrollContainer = ref(null);\n\n// Initialize base date for generating the date range\nconst baseDate = new Date();\nbaseDate.setHours(0, 0, 0, 0);\n\n// Initialize selectedDate as null or with provided date\nconst selectedDate = ref(null);\n\nif (props.date) {\n  const day = parseInt(props.date.substring(0, 2));\n  const month = parseInt(props.date.substring(2, 4)) - 1;\n  const year = parseInt(props.date.substring(4));\n\n  selectedDate.value = new Date(year, month, day);\n  selectedDate.value.setHours(0, 0, 0, 0);\n}\n\nconst dates = generateDates(baseDate, props.options.dateEnd || 30);\n\nonMounted(() => {\n  if (scrollContainer.value) {\n    const target = scrollContainer.value.getElementsByClassName('selected')[0] || \n                  scrollContainer.value.getElementsByClassName('bg-main')[0] || \n                  scrollContainer.value.getElementsByClassName('highlighted')[0];\n    if (target) {\n      scrollContainer.value.scrollLeft = target.offsetLeft - \n        scrollContainer.value.offsetWidth / 2 + target.offsetWidth / 2;\n    }\n  }\n});\n\nfunction selectDate(date) {\n  if (selectedDate.value && selectedDate.value.toDateString() === date.toDateString()) {\n    // If clicking the same date, reset selection\n    selectedDate.value = null;\n    emit('update:date', null);\n  } else {\n    // Select new date\n    selectedDate.value = date;\n    const formattedDate = formatDateForRouter(date);\n    emit('update:date', date);\n  }\n}\n\nfunction isHighlighted(date) {\n  return selectedDate.value === null && date.toDateString() === baseDate.toDateString();\n}\n\nfunction formatDateForRouter(date) {\n  return `${date.getDate().toString().padStart(2, '0')}${(date.getMonth() + 1)\n    .toString().padStart(2, '0')}${date.getFullYear()}`;\n}\n\nfunction dayLetter(date) {\n  return date.toLocaleDateString(props.locale ? props.locale : 'en', { \n    weekday: 'narrow' \n  }).toUpperCase();\n}\n\nfunction generateDates(start, count) {\n  const dates = [];\n  for (let i = props.options.dateStart || 0; i < count - props.options.dateStart || 0; i++) {\n    const newDate = new Date(start);\n    newDate.setDate(start.getDate() + i);\n    newDate.setHours(0, 0, 0, 0);\n    dates.push(newDate);\n  }\n  return dates;\n}\n</script>",
            "name": "DatePicker.vue",
            "size": 3408,
            "type": "source"
          }
        ]
      },
      "Draggable": {
        "_files": [
          {
            "path": "../../src/components/Draggable/Draggable.vue",
            "relativePath": "components/Draggable/Draggable.vue",
            "extension": ".vue",
            "content": "<template>\n  <div ref=\"container\" class=\"draggable-container\">\n    <slot></slot>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue';\n\nconst props = defineProps({\n  list: {\n    type: Array,\n    required: true,\n  },\n  disabledClass: {\n    type: String,\n    default: 'draggable-disabled',\n  },\n});\n\nconst emit = defineEmits(['update:list', 'start', 'end']);\nconst container = ref(null);\n\nlet dragStartIndex = null;\n\nonMounted(() => {\n  const handleDragStart = (e) => {\n    const target = e.target.closest('.draggable-item');\n    if (!target || target.classList.contains(props.disabledClass)) {\n      e.preventDefault();\n      return;\n    }\n    dragStartIndex = Number(target.dataset.index);\n    e.dataTransfer.effectAllowed = 'move';\n    emit('start', dragStartIndex);\n  };\n\n  const handleDragOver = (e) => {\n    e.preventDefault();\n  };\n\n  const handleDrop = (e) => {\n    e.preventDefault();\n    const target = e.target.closest('.draggable-item');\n    if (!target || target.classList.contains(props.disabledClass)) {\n      return;\n    }\n    const dragEndIndex = Number(target.dataset.index);\n    if (dragStartIndex !== dragEndIndex && !isInvalidMove(dragStartIndex, dragEndIndex)) {\n      const updatedList = [...props.list];\n      const [removed] = updatedList.splice(dragStartIndex, 1);\n      updatedList.splice(dragEndIndex, 0, removed);\n      emit('update:list', updatedList);\n    }\n    emit('end', dragStartIndex, dragEndIndex);\n    dragStartIndex = null;\n  };\n\n  const handleTouchStart = (e) => {\n    const target = e.target.closest('.draggable-item');\n    if (!target || target.classList.contains(props.disabledClass)) {\n      e.preventDefault();\n      return;\n    }\n    dragStartIndex = Number(target.dataset.index);\n    emit('start', dragStartIndex);\n  };\n\n  const handleTouchMove = (e) => {\n    e.preventDefault();\n  };\n\n  const handleTouchEnd = (e) => {\n    const target = document.elementFromPoint(\n      e.changedTouches[0].clientX,\n      e.changedTouches[0].clientY\n    ).closest('.draggable-item');\n    if (!target || target.classList.contains(props.disabledClass)) {\n      return;\n    }\n    const dragEndIndex = Number(target.dataset.index);\n    if (dragStartIndex !== dragEndIndex && !isInvalidMove(dragStartIndex, dragEndIndex)) {\n      const updatedList = [...props.list];\n      const [removed] = updatedList.splice(dragStartIndex, 1);\n      updatedList.splice(dragEndIndex, 0, removed);\n      emit('update:list', updatedList);\n    }\n    emit('end', dragStartIndex, dragEndIndex);\n    dragStartIndex = null;\n  };\n\n  const isInvalidMove = (start, end) => {\n    const disabledIndices = Array.from(container.value.children)\n      .map((child, index) => (child.classList.contains(props.disabledClass) ? index : null))\n      .filter(index => index !== null);\n    return disabledIndices.includes(end);\n  };\n\n  container.value.addEventListener('dragstart', handleDragStart);\n  container.value.addEventListener('dragover', handleDragOver);\n  container.value.addEventListener('drop', handleDrop);\n  container.value.addEventListener('touchstart', handleTouchStart);\n  container.value.addEventListener('touchmove', handleTouchMove);\n  container.value.addEventListener('touchend', handleTouchEnd);\n});\n</script>\n\n<style>\n.draggable-container {\n  display: flex;\n  flex-direction: column;\n}\n</style>\n",
            "name": "Draggable.vue",
            "size": 3326,
            "type": "source"
          }
        ]
      },
      "Dropdown": {
        "_files": [
          {
            "path": "../../src/components/Dropdown/Dropdown.vue",
            "relativePath": "components/Dropdown/Dropdown.vue",
            "extension": ".vue",
            "content": "<template>\n  <div class=\"dropdown pos-relative\" v-click-outside=\"clickedOutside\" @click.stop=\"isOpen = !isOpen\">\n    <div v-if=\"isComponentLabel\" class=\"w-100 h-100 flex-center flex\">\n      <component :is=\"label.component\" v-bind=\"label.props\" :class=\"label.class\"></component>\n    </div>\n    <div v-else>\n      {{ label }}\n    </div>\n    <transition name=\"TransitionTranslateY\" mode=\"out-in\">\n      <div \n        v-show=\"isOpen\" \n        :style=\"{ left: align === 'left' ? '0' : 'auto', right: align === 'right' ? '0' : 'auto' }\" \n        class=\"dropdown-content radius-big\" \n      >\n        <slot></slot>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue';\nimport clickOutside from '../FieldPhone/click-outside.js';\n\nlet vClickOutside = clickOutside\n\nconst props = defineProps({\n  label: {\n    type: [String, Object],\n    default: 'Open'\n  },\n  align: {\n    type: String,\n    default: 'left'\n  }\n})\n\nconst isOpen = ref(false);\nconst isComponentLabel = computed(() => typeof props.label === 'object');\n\nfunction clickedOutside () {\n  isOpen.value = false\n}\n</script>\n\n<style >\n.dropdown-content {\n  display: block;\n  position: absolute;\n  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n  z-index: 1;\n}\n\n/*.dropdown:hover .dropdown-content {\n  display: block;\n}*/\n</style>\n",
            "name": "Dropdown.vue",
            "size": 1325,
            "type": "source"
          }
        ]
      },
      "EditImages": {
        "_files": [
          {
            "path": "../../src/components/EditImages/EditImages.vue",
            "relativePath": "components/EditImages/EditImages.vue",
            "extension": ".vue",
            "content": "<template>\n\t<div class=\"flex-nowrap flex gap-small\">\n    <VueDraggableNext v-if=\"localImages.length > 0\"  class=\"gap-small flex dragArea list-group w-full\" v-model=\"localImages\" @change=\"emitChanges\">\n\t\t\t<div v-for=\"(image, index) in localImages\" class=\"pos-relative\">\n\t\t\t\t<img loading=\"lazy\" class=\"i-extra object-fit-contain bg-black-transp-5 pd-nano radius-small o-hidden\" :src=\"(FILE_SERVER_URL || '') + image\" />\n\t\t\t\t\n        <IconCross  \n          @click=\"deleteImage(index)\" \n          class=\"cursor-pointer pos-absolute t-center flex-center flex radius-extra i-medium bg-red  pos-t-10-negative pos-r-10-negative pd-micro\"\n        />\n\t\t\t</div>\n\t\t</VueDraggableNext>\n    <div\n      v-if=\"localImages.length > 0\" \n      class=\"i-extra uppercase flex-center flex radius-small o-hidden br-solid br-main br-2px pd-small\"\n      >\n       <UploadImageMultiple   \n        @update:images=\"onImagesUpdate\"\n        text=\"Add\"\n        :options=\"{\n          showText: false\n        }\"\n        :uploadPath=\"'photos'\"\n        class=\"radius-big\"\n      />\n    </div>\n\n\n\t\t<UploadImageMultiple \t\n      v-if=\"localImages.length < 1\" \n      @update:images=\"onImagesUpdate\"\n      :uploadPath=\"props.uploadPath\"\n      :text=\"props.text\"\n      :options=\"props.options\"\n      class=\"w-100 pd-medium\"\n    />\n\t</div>\t\n</template>\n\n<script setup>\nimport { ref, defineProps, watchEffect } from 'vue';\nimport { VueDraggableNext } from 'vue-draggable-next'\nimport UploadImageMultiple from \"@martyrs/src/components/UploadImageMultiple/UploadImageMultiple.vue\";\nimport IconCross from '@martyrs/src/modules/icons/navigation/IconCross.vue';\n\nconst props = defineProps({\n  images: Array,\n  text: Object,\n  options: Object,\n  uploadPath: {\n    type: Object,\n    default: 'unsorted'\n  }\n});\n\nconst emit = defineEmits(['update:images'])\n\nconst localImages = ref([...props.images])\n\nwatchEffect(() => {\n  localImages.value = [...props.images]; // Обновление localImages при изменении props.images\n});\n\nconst emitChanges = () => {\n  emit('update:images', localImages.value)\n}\n\nconst onImagesUpdate = (newImages) => {\n  localImages.value = [...localImages.value, ...newImages]\n  emitChanges()\n}\n\nconst deleteImage = (index) => {\n  localImages.value.splice(index, 1)\n  emitChanges()\n}\n</script>\n\n<style lang=\"scss\">\n// Your styles here\n</style>\n",
            "name": "EditImages.vue",
            "size": 2308,
            "type": "source"
          }
        ]
      },
      "EmptyState": {
        "_files": [
          {
            "path": "../../src/components/EmptyState/EmptyState.vue",
            "relativePath": "components/EmptyState/EmptyState.vue",
            "extension": ".vue",
            "content": "<template>\n  <section>\n    <h5 class=\"mn-b-small\">{{ title }}</h5>\n    <p class=\"t-transp p-medium\">{{ description }}</p>\n\n    <button v-if=\"action\" @click=\"callback\" class=\"mn-t-small t-white bg-second w-100 button\">\n      {{ action }}\n    </button>\n  </section>\n</template>\n\n<script setup>\n\nconst props = defineProps({\n  title: {\n    type: String,\n    default: 'Sorry, nothing found.',\n  },\n  description: {\n    type: String,\n    default: 'No items to display. Try changing your search criteria.',\n  },\n  action: {\n    type: String,\n  },\n  callback: {\n    type: Function,\n    default: () => {},\n  },\n})\n\n\n</script>",
            "name": "EmptyState.vue",
            "size": 616,
            "type": "source"
          }
        ]
      },
      "Error": {
        "_files": [
          {
            "path": "../../src/components/Error/Error.vue",
            "relativePath": "components/Error/Error.vue",
            "extension": ".vue",
            "content": "<template>\n\t<div class=\"error-wrapper\">\n\t\t<div class=\"error-card\">\n\t\t\t<p>Ошибка {{error.status}} </p>\n\t\t\t<!-- <p>{{error.data.message}}</p> -->\n\t\t\t<!-- <button @click=\"closeError()\" class=\"button-cross button-icon-medium button\"><img loading=\"lazy\" src=\"@/assets/icons/cross.svg\"></button> -->\n\t\t</div>\n\t</div>\n</template>\n\n\n<script setup=\"props\">\n\timport {computed } from 'vue'\n\t\n\tconst props = defineProps({\n\t  error: Object\n\t})\n\n\tfunction closeError () {\n\t} \n</script>\n\n<style lang=\"scss\">\n</style>\n\n\n",
            "name": "Error.vue",
            "size": 504,
            "type": "source"
          }
        ]
      },
      "Feed": {
        "_files": [
          {
            "path": "../../src/components/Feed/Feed.vue",
            "relativePath": "components/Feed/Feed.vue",
            "extension": ".vue",
            "content": "<template>\n  <div v-if=\"search || date || (sort && !sort.hideButton)\" style=\"transform: scale(1);\" class=\"mn-b-thin z-index-10 pos-relative flex-nowrap flex gap-thin\">\n\n    <BlockSearch \n      v-if=\"search\"\n      :placeholder=\"search.placeholder || 'Search...'\"\n      :class=\"search.class || 'bg-light'\"\n      @search=\"updateSearch\"\n      :autofocus=\"search.autofocus\"\n    />\n\n    <Dropdown \n      v-if=\"date\"\n      :label=\"{\n        component: ButtonDate,\n        props: { date: date }\n      }\" \n      :class=\"date.class || 'bg-light'\"\n      class=\"flex-child flex-child-shrink-0 pd-r-small pd-l-small pd-thin bg-light radius-medium\"\n      :align=\"search ? 'right' : 'left'\"\n    >\n\n      <Calendar\n        v-model:date=\"date\"\n        :locale=\"$i18n.locale\"\n        :allowRange=\"true\"\n        class=\"radius-medium w-100 o-hidden bg-light\"\n      />\n    </Dropdown> \n\n    <template\n      v-if=\"filter\"\n    >\n      <div \n        :class=\"filter.class || 'bg-light'\"\n        class=\"flex-center flex pd-thin bg-light radius-medium aspect-1x1 h-100\"\n      >\n        <IconFilter @click=\"() => filter.active = !filter.active\" class=\"w-1r h-auto\"/>\n      </div>\n\n    \n      <BottomSheet\n        :show=\"filter.active\"\n        @toggle=\"() => filter.active = false\"\n        class=\"z-index-10 pos-fixed pos-r-0\"\n        :class=\"{\n          'pos-t-0':  filter.active,\n          'pos-t-100': !filter.active\n        }\"\n      >\n        <BlockFilter\n          v-model:filter=\"filter\"\n          :options=\"filter.options\"\n          @click_filter=\"() => { filter.active = false } \"\n          class=\"h-max w-100 pd-small pd-b-5r bg-light\"\n        />\n      </BottomSheet>  \n    </template>\n\n    <Dropdown \n      v-if=\"sort && !sort.hideButton\"\n      :label=\"{\n        component: ButtonSort,\n        props: { order: sort.order },\n        class: 'w-1r'\n      }\" \n      :class=\"sort.class || 'bg-light'\"\n      class=\"radius-medium aspect-1x1 h-100\"\n      :align=\"search ? 'right' : 'left'\"\n    >\n\n      <BlockSorting\n        v-model:param=\"sort.param\"\n        v-model:order=\"sort.order\"\n        :options=\"sort.options\"\n        class=\"h-100 pd-small radius-medium t-white bg-black\"\n      />\n    </Dropdown> \n\n    <!-- Actions -->\n    <template\n      v-if=\"actions.length\"\n    >\n      <template v-for=\"action in actions\" :key=\"action.key\">\n        <div \n        :class=\"action.class || 'bg-light'\"\n        class=\"flex-center flex pd-thin bg-light radius-medium aspect-1x1 h-100\"\n      >\n        <component\n          :is=\"action.component\"\n          @click=\"action.handler\"\n          class=\"w-1r h-auto\"\n        >\n        </component>\n\n      </div>\n      </template>\n    </template>\n  </div>\n\n  <TransitionGroup \n    v-if=\"isLoading\"\n    tag=\"ul\" \n    name=\"scaleTransition\" \n    class=\"pos-relative z-index-1\"\n   :class=\"$attrs.class\"\n  >\n    <Skeleton\n      v-if=\"isLoading && !skeleton?.hide\"\n      v-for=\"i in currentLimit\" \n      :structure=\"skeleton.structure\"\n      :horizontal=\"skeleton.horizontal\"\n      :loading=\"skeleton.apply_to_slot\"\n      :key=\"'skeleton-' + i\"\n      class=\"radius-medium flex-child-default o-hidden d-block\"\n    />\n    <Loader v-if=\"isLoading && skeleton?.hide\"/>\n  </TransitionGroup>\n\n  <TransitionGroup \n    tag=\"ul\" \n    v-else-if=\"itemsList.length < 1\"\n    name=\"feed\"\n  >\n    <EmptyState\n      v-if=\"!isLoading && itemsList.length < 1\"\n      :title=\"states.empty.title\"\n      :description=\"states.empty.description\"\n      :action=\"states.empty.action\"\n      :callback=\"states.empty.callback\"\n      class=\"pd-medium mn-b-thin bg-light radius-medium\"\n    />\n   </TransitionGroup>\n\n  <TransitionGroup \n    v-else\n    tag=\"ul\" \n    name=\"feed\"\n    :class=\"$attrs.class\"\n  >\n    <slot\n      :items=\"itemsList\"\n    >\n    </slot>\n  </TransitionGroup>\n\n  <button\n    v-if=\"showLoadMore && hasMoreItems && itemsList.length > 0 && !isLoadingExtra\"\n    @click=\"loadMoreItems\"\n    class=\"col-w-100 mn-t-thin w-100 t-black bg-main button\"\n  >\n    Load More\n  </button>\n\n  <div v-else key=\"sentinel\" ref=\"sentinel\" class=\"sentinel\"></div> \n\n  <div\n    v-if=\"isLoadingExtra\"\n    class=\"col-w-100 w-100 pos-relative\"\n  >\n    <Loader/>\n  </div>\n \n\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, onUnmounted, shallowRef, watch } from 'vue';\n\nimport SkeletonEvent from '@martyrs/src/modules/icons/skeletons/SkeletonEvent.vue'\n\nimport Loader from '@martyrs/src/components/Loader/Loader.vue';\nimport Skeleton from '@martyrs/src/components/Skeleton/Skeleton.vue';\nimport EmptyState from '@martyrs/src/components/EmptyState/EmptyState.vue';\nimport Dropdown from \"@martyrs/src/components/Dropdown/Dropdown.vue\";\nimport Calendar from '@martyrs/src/components/DatePicker/Calendar.vue'\nimport BottomSheet from '@martyrs/src/components/BottomSheet/BottomSheet.vue';\n\nimport BlockSearch from '@martyrs/src/modules/globals/views/components/blocks/BlockSearch.vue'\nimport BlockSorting  from '@martyrs/src/modules/globals/views/components/blocks/BlockSorting.vue'\nimport BlockFilter  from '@martyrs/src/modules/globals/views/components/blocks/BlockFilter.vue'\n\nimport ButtonSort  from '@martyrs/src/modules/globals/views/components/elements/ButtonSort.vue'\nimport ButtonDate  from '@martyrs/src/modules/globals/views/components/elements/ButtonDate.vue'\n\nimport IconFilter from '@martyrs/src/modules/icons/navigation/IconFilter.vue'\nimport IconEvents from '@martyrs/src/modules/icons/entities/IconEvents.vue'\n\nconst search = defineModel('search')\nconst sort = defineModel('sort')\nconst filter = defineModel('filter')\nconst date = defineModel('date')\nconst items = defineModel('items')\n\n// Пропсы\nconst props = defineProps({\n  showLoadMore: {\n    type: Boolean,\n    default: true\n  },\n  LoadMore: {\n    type: Boolean,\n    default: true\n  },\n  search: {\n    type: [Boolean, Object],\n    default: false\n  },\n  states: {\n    type: Object,\n    default: () => ({\n      empty: {\n        title: 'Nothing found',\n        description: 'Sorry, nothing found',\n      },\n    }),\n  },\n  actions: {\n    type: Array,\n    default: () => []\n  },\n  skeleton: {\n    type: Object,\n    default: () => ({\n      hide: false,\n      horizontal: false,\n      structure: [\n        { block: 'text', size: 'medium' },\n        { block: 'text', size: 'large' },\n        { block: 'button', size: 'small' }\n      ]\n    }),\n   \n  },\n  store: {\n    type: Object,\n    default: () => ({\n      read: Function,\n      state: Object,\n    }),\n  },\n  external: {\n    type: Boolean,\n    default: false\n  },\n  options: {\n    type: Object,\n    default: () => ({\n      category: null,\n      limit: 10, \n      skip: 0 ,\n      owner:  null,\n      creator:  null,\n      customer:  null,\n      user:  null,\n      status: null,\n      period:  null,\n      contain:  null,\n    }),\n  },\n});\n  \nconst itemsList = shallowRef(items.value || []);\nconst hasMoreItems = ref(false);\n\nlet isLoading = ref(true);\nlet isLoadingExtra = ref(false);\nlet sentinel = ref(null)\n\nlet currentSkip = ref(props.options.skip ? props.options.skip : 0);\nlet currentLimit = ref(props.options.limit ? props.options.limit : 10);\n\nlet currentSearch = ref('');\n// Флаг для определения поискового запроса\nlet isSearching = ref(false);\n\n// Счетчик для отслеживания актуальности запросов\nlet requestId = 0;\n\nfunction debounce(fn, delay) {\n  let timeoutId = null;\n  return (...args) => {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => fn(...args), delay);\n  };\n}\n\nconst debouncedSearch = debounce((value) => {\n  // Устанавливаем флаг поиска\n  isSearching.value = true;\n  currentSearch.value = value;\n  currentSkip.value = 0;\n  currentLimit.value = 10;\n  fetchItems();\n}, 500);\n\nfunction updateSearch(search) {\n  debouncedSearch(search);\n}\n\nconst loadMoreItems = async () => {\n  if (!hasMoreItems.value || isLoadingExtra.value) {\n    return;\n  }\n  \n  isLoadingExtra.value = true;\n  \n  // Увеличиваем счетчик запросов\n  const currentRequestId = ++requestId;\n\n  currentSkip.value += currentLimit.value;\n  \n  try {\n    const data = await props.store.read({\n      skip: currentSkip.value,\n      limit: currentLimit.value,\n      search: currentSearch.value,\n      dateStart: date.value ? date.value.start : null,\n      dateEnd: date.value ? date.value.end : null,\n      sortParam: sort.value ? sort.value.param : null,\n      sortOrder: sort.value ? sort.value.order : null,\n      ...props.options\n    });\n\n    // Проверяем, актуален ли еще этот запрос\n    if (currentRequestId !== requestId) {\n      return;\n    }\n\n    if (data.length === 0) {\n      hasMoreItems.value = false;\n    } else if (data.length < currentLimit.value) {\n      hasMoreItems.value = false;\n    } else {\n      hasMoreItems.value = true;\n    }\n\n    itemsList.value = [...itemsList.value, ...data];\n    \n    if (items.value) items.value = itemsList.value;\n    \n  } catch (error) {\n    console.error('Load more error:', error);\n  } finally {\n    // Устанавливаем isLoadingExtra только для актуального запроса\n    if (currentRequestId === requestId) {\n      isLoadingExtra.value = false;\n    }\n  }\n};\n\nconst fetchItems = async () => {\n  isLoading.value = true;\n  \n  // Увеличиваем счетчик при каждом новом запросе\n  const currentRequestId = ++requestId;\n  \n  // Очищаем список только при поиске\n  if (isSearching.value) {\n    itemsList.value = [];\n    isSearching.value = false; // Сбрасываем флаг после использования\n  }\n  \n  try {\n    const data = await props.store.read({\n      skip: currentSkip.value,\n      limit: currentLimit.value,\n      dateStart: date.value ? date.value.start : null,\n      dateEnd: date.value ? date.value.end : null,\n      sortParam: sort.value ? sort.value.param : null,\n      sortOrder: sort.value ? sort.value.order : null,\n      search: currentSearch.value,\n      ...props.options\n    });\n\n    // Проверяем, актуален ли еще этот запрос\n    if (currentRequestId !== requestId) {\n      // Если нет - игнорируем результат\n      return;\n    }\n\n    if (data.length === 0) {\n      hasMoreItems.value = false;\n    } else if (data.length < currentLimit.value) {\n      hasMoreItems.value = false;\n    } else {\n      hasMoreItems.value = true;\n    }\n\n    itemsList.value = data;\n    if (items.value) items.value = itemsList.value;\n    \n  } catch (error) {\n    console.error('Fetch error:', error);\n  } finally {\n    // Устанавливаем isLoading только для актуального запроса\n    if (currentRequestId === requestId) {\n      isLoading.value = false;\n    }\n  }\n};\n\nwatch(\n  [() => props.external, () => date.value, () => ({...sort.value}), () => ({...props.options})],\n  ([newExternal, newDate, newSort, newOptions], [oldExternal, oldDate, oldSort, oldOptions]) => {\n    if (\n      newExternal !== oldExternal ||\n      newDate !== oldDate ||\n      newSort?.order !== oldSort?.order ||\n      newSort?.param !== oldSort?.param ||\n      JSON.stringify(newOptions) !== JSON.stringify(oldOptions)\n    ) {\n      currentSkip.value = 0;\n      fetchItems();\n    }\n  },\n  { deep: true }\n);\n\nlet observer = null\n\nonMounted(async () => {\n  await fetchItems()\n\n  if (typeof window !== 'undefined' && !props.showLoadMore && props.LoadMore) {\n    observer = new IntersectionObserver(entries => {\n      if (entries.some(entry => entry.isIntersecting)) {\n        loadMoreItems()\n      }\n    })\n\n    if (sentinel.value) observer.observe(sentinel.value)\n  }\n});\n\nonUnmounted(() => {\n  if (observer) {\n    observer.disconnect();\n  }\n});\n</script>\n\n<style>\n.feed-move, /* apply transition to moving elements */\n.feed-enter-active,\n.feed-leave-active {\n  transition: all 0.5s ease;\n}\n\n.feed-enter-from,\n.feed-leave-to {\n  opacity: 0;\n  transform: translateY(30px);\n}\n\n/* ensure leaving items are taken out of layout flow so that moving\n   animations can be calculated correctly. */\n.feed-leave-active {\n  position: absolute;\n}\n</style>",
            "name": "Feed.vue",
            "size": 11710,
            "type": "source"
          },
          {
            "path": "../../src/components/Feed/Masonry.vue",
            "relativePath": "components/Feed/Masonry.vue",
            "extension": ".vue",
            "content": "<script setup>\nimport { nextTick, onBeforeUnmount, onMounted, ref, watch } from 'vue'\n\n// Assuming the default props are handled similarly in JS\nconst props = defineProps({\n  columnWidth: { type: [Number, Array], default: 400 },\n  items: { type: Array, required: true },\n  gap: { type: Number, default: 0 },\n  rtl: { type: Boolean, default: false },\n  ssrColumns: { type: Number, default: 0 },\n  minColumns: { type: Number, default: 1 },\n  maxColumns: { type: Number, default: 3 },\n  keyMapper: { default: undefined },\n})\n\nconst emit = defineEmits(['redraw', 'redrawSkip'])\n\n\nconst columns = ref([])\nconst wall = ref(null)\nconst scrollContainer = ref(null);\n\nfunction useMasonryWall({\n  columns,\n  columnWidth,\n  emit,\n  gap,\n  items,\n  maxColumns,\n  minColumns,\n  rtl,\n  scrollContainer,\n  ssrColumns,\n  wall\n}) {\n  // Helper function to recursively count the number of columns that can fit\n  function countIteratively(containerWidth, gap, count, consumed) {\n    const nextWidth = getColumnWidthTarget(count);\n    if (consumed + gap + nextWidth <= containerWidth) {\n      return countIteratively(containerWidth, gap, count + 1, consumed + gap + nextWidth);\n    }\n    return count;\n  }\n\n  // Calculate target width for a column at given index\n  function getColumnWidthTarget(columnIndex) {\n    const widths = Array.isArray(columnWidth.value) ? columnWidth.value : [columnWidth.value];\n    return widths[columnIndex % widths.length];\n  }\n\n  // Determine the number of columns based on the container's width\n  function columnCount() {\n    const count = countIteratively(\n      wall.value.getBoundingClientRect().width,\n      gap.value,\n      0,\n      -gap.value // Account for initial gap\n    );\n    const boundedCount = Math.max(minColumns.value || 0, Math.min(count, maxColumns.value || count));\n    return boundedCount > 0 ? boundedCount : 1;\n  }\n\n  // Create columns arrays based on count\n  function createColumns(count) {\n    return Array.from({ length: count }, () => []);\n  }\n\n  // Initial columns setup for SSR\n  if (ssrColumns.value > 0) {\n    const newColumns = createColumns(ssrColumns.value);\n    props.items.forEach((_, i) => newColumns[i % ssrColumns.value].push(i));\n    columns.value = newColumns;\n  }\n\n  // Asynchronously fill columns with items\n  async function fillColumns(itemIndex) {\n    if (itemIndex >= props.items.length) return;\n    await nextTick();\n    const columnDivs = [...wall.value.children];\n    if (rtl.value) columnDivs.reverse();\n    const target = columnDivs.reduce((prev, curr) =>\n      curr.getBoundingClientRect().height < prev.getBoundingClientRect().height ? curr : prev\n    );\n    columns.value[+target.dataset.index].push(itemIndex);\n    await fillColumns(itemIndex + 1);\n  }\n\n  // Redraw columns, optionally forcing a refresh\n  async function redraw(force = false) {\n    if (columns.value.length === columnCount() && !force) {\n      emit('redrawSkip');\n      return;\n    }\n    columns.value = createColumns(columnCount());\n    // const scrollY = scrollContainer.value ? scrollContainer.value.scrollTop : window.scrollY;\n    await fillColumns(0);\n    // if (scrollContainer.value) {\n      // scrollContainer.value.scrollTop = scrollY;\n    // } else {\n      // window.scrollTo({ top: scrollY });\n    // }\n    emit('redraw');\n  }\n\n  // Observe wall size changes to trigger redraw\n  const resizeObserver = typeof ResizeObserver !== 'undefined' ? new ResizeObserver(() => redraw()) : undefined;\n\n  onMounted(() => {\n    redraw();\n    if (resizeObserver) resizeObserver.observe(wall.value);\n  });\n\n  onBeforeUnmount(() => {\n    if (resizeObserver) resizeObserver.unobserve(wall.value);\n  });\n\n  // Watchers for reactive properties\n  watch([items, rtl, columnWidth, gap, minColumns, maxColumns, ssrColumns], () => redraw(true));\n\n  return { getColumnWidthTarget };\n}\n\nconst { getColumnWidthTarget } = useMasonryWall({\n  columns,\n  columnWidth: props.columnWidth,\n  emit,\n  gap: props.gap,\n  items: props.items,\n  maxColumns: props.maxColumns,\n  minColumns: props.minColumns,\n  rtl: props.rtl,\n  scrollContainer: props.scrollContainer,\n  ssrColumns: props.ssrColumns,\n  wall\n});\n\n\n</script>\n\n<template>\n  <div\n    ref=\"wall\"\n    class=\"masonry-wall\"\n    :style=\"{ display: 'flex', gap: `${props.gap}px` }\"\n  >\n    <div\n      v-for=\"(column, columnIndex) in columns\"\n      :key=\"columnIndex\"\n      class=\"masonry-column\"\n      :data-index=\"columnIndex\"\n      :style=\"{\n        'display': 'flex',\n        'flex-basis': `${getColumnWidthTarget(columnIndex)}px`,\n        'flex-direction': 'column',\n        'flex-grow': 1,\n        'gap': `${props.gap}px`,\n        'height': '-webkit-max-content, -moz-max-content, max-content',\n        'min-width': 0,\n      }\"\n    >\n      <div\n        v-for=\"(itemIndex, row) in column\"\n        :key=\"props.keyMapper ? props.keyMapper(props.items[itemIndex], columnIndex, row, itemIndex) : itemIndex\"\n        class=\"masonry-item\"\n      >\n        <slot\n          :item=\"props.items[itemIndex]\"\n          :column=\"columnIndex\"\n          :row=\"row\"\n          :index=\"itemIndex\"\n        >\n          {{ props.items[itemIndex] }}\n        </slot>\n      </div>\n    </div>\n  </div>\n</template>\n",
            "name": "Masonry.vue",
            "size": 5150,
            "type": "source"
          }
        ]
      },
      "Field": {
        "_files": [
          {
            "path": "../../src/components/Field/Field.vue",
            "relativePath": "components/Field/Field.vue",
            "extension": ".vue",
            "content": "<script setup>\nimport { ref, onMounted, nextTick, watch } from 'vue'\nconst emit = defineEmits(['update:field', 'focus', 'blur']);\nconst props = defineProps({\n  label: null,\n  symbol: null,\n  type: 'text',\n  placeholder: 'Enter something here',\n  field: null,\n  value: null,\n  validation: false,\n  disabled: null,\n  tabindex: -1,\n  autofocus: false\n});\nif (props.value) {\n  emit('update:field', props.value)\n}\nconst textarea = ref(null);\nconst input = ref(null);\n\nfunction resize() {\n  if (!textarea.value) {\n    textarea.value.style.height = '';\n    return;\n  }\n  \n  const el = textarea.value;\n  \n  // Сначала сбрасываем высоту для правильного расчета scrollHeight\n  el.style.height = '';\n  \n  const scrollHeight = el.scrollHeight;\n  \n  // Теперь устанавливаем высоту на основе scrollHeight\n  if (scrollHeight > 33) {\n    el.style.height = scrollHeight + 'px';\n  } else {\n    el.style.height = '';\n  }\n}\n\n\nfunction focus() {\n  if (props.autofocus) {\n    if (props.type === 'textarea' && textarea.value) {\n      textarea.value.focus();\n    } else if (input.value) {\n      input.value.focus();\n    }\n  }\n}\n\n// Следим за изменениями поля\nwatch(() => props.field, () => {\n  if (props.type === 'textarea') {\n    nextTick(resize);\n  }\n});\n\n// Autofocus\nwatch(() => props.autofocus, (newVal) => {\n  if (newVal) {\n    nextTick(focus);\n  }\n});\n\nonMounted(() => {\n  nextTick(focus);\n});\n\nconst text = ref(props.field);\n</script>\n<template>\n  <div \n    :class=\"[\n      $attrs.class, \n      { \n        'bg-fourth-nano': validation \n      }\n    ]\" \n    class=\"flex-center flex-nowrap flex\"\n  >\n    <div \n      v-if=\"label\" \n      class=\"t-transp mn-r-small\"\n    >\n      <span class=\"t-nowrap\">\n        {{label}}\n      </span>\n    </div>\n    <div class=\"w-100\">\n      <input \n        v-if=\"type !== 'textarea'\"\n        ref=\"input\"\n        @input=\"event => text = emit('update:field', event.target.value)\"\n        @focus=\"event => emit('focus', event)\"\n        @blur=\"event => emit('blur', event)\"\n        :type=\"type\"\n        class=\"w-100\"\n        :value=\"field\"\n        :placeholder=\"placeholder\"\n        :tabindex=\"tabindex\"\n        :disabled=\"disabled\"\n        :autofocus=\"autofocus\"\n      />\n      <textarea \n        v-else\n        ref=\"textarea\"\n        @input=\"event => text = emit('update:field', event.target.value)\"\n        @focus=\"event => emit('focus', event)\"\n        @blur=\"event => emit('blur', event)\"\n        class=\"w-100\"\n        :value=\"field\"\n        :placeholder=\"placeholder\"\n        :tabindex=\"tabindex\"\n        :disabled=\"disabled\"\n      />\n    </div> \n    <slot></slot>\n    <div \n      v-if=\"symbol\" \n      class=\"t-transp mn-l-small\"\n    >\n      <span>\n        {{symbol}}\n      </span>\n    </div>\n  </div>\n  <!-- Validation -->\n  <transition name=\"fade\">\n    <div v-if=\"validation\" class=\"mn-t-thin mn-b-thin mn-b-thin invalid-feedback\">\n      * {{validation.message}}\n    </div>\n  </transition>\n</template>\n<style scoped>\ninput, textarea, span {\n  line-height: 1;\n  color: inherit;\n}\ntextarea {\n  resize: none;\n  overflow: hidden;\n  height: 1rem; \n  line-height: 1rem;\n}\ninput[type=\"date\"]::-webkit-calendar-picker-indicator,\ninput[type=\"time\"]::-webkit-calendar-picker-indicator {\n  filter: invert(1); /* Это инвертирует иконку, подходит при светлом фоне */\n  opacity: 1;\n  color: inherit;\n}\n</style>",
            "name": "Field.vue",
            "size": 3313,
            "type": "source"
          }
        ]
      },
      "FieldBig": {
        "_files": [
          {
            "path": "../../src/components/FieldBig/FieldBig.vue",
            "relativePath": "components/FieldBig/FieldBig.vue",
            "extension": ".vue",
            "content": "<template>\n  <div class=\"pd-thin radius-extra flex-nowrap flex\">\n    <Field\n      v-model:field=\"inputField\"\n      @update:field=\"updateInput\"\n      :placeholder=\"typing ? '' : placeholder\"\n      @input=\"handleInput\"\n      @focus=\"handleFocus\"\n      @blur=\"checkInput\"\n      class=\"w-100 p-medium t-regular uppercase pd-small\"\n    />\n    <button\n      v-if=\"action\" \n      @click=\"emitAction\" \n      class=\"t-nowrap t-medium radius-big uppercase cursor-pointer flex flex-v-center pd-r-small pd-l-small w-max hover-bg-fifth t-semi transition-linear transition-timing-1 t-black bg-main\" \n    >\n      <span class=\"desktop-only mn-r-thin\">{{action}}</span>\n      <IconArrow class=\"br-solid br-black-transp-10 br-1px radius-extra  i-semi pd-nano\"/>\n    </button>\n  </div>\n</template>\n\n<script setup=\"props\">\n  import { ref, watchEffect, onMounted } from 'vue'\n  import Field from '@martyrs/src/components/Field/Field.vue'\n  import IconArrow from '@martyrs/src/modules/icons/navigation/IconArrow.vue'\n  import { useI18n } from 'vue-i18n'\n\n  const props = defineProps({\n    input: String,\n    placeholder: {\n      type: String\n    },\n    action: {\n      type: String,\n      default: 'Action'\n    },\n    placeholderTexts: {\n      type: Object,\n      default: () => ({\n        en: [\n          'Lowest THC, please!',\n          'Something with banana flavors?',\n          \"I'm in the mood for trippy vibes.\"\n        ],\n        ru: [\n          'Я хочу самый низкий THC',\n          'Я хочу чего-нибудь бананового',\n          'Я хочу курнуть хейза'\n        ],\n      })\n    },\n    typingSpeed: {\n      type: Number,\n      default: 200\n    },\n    loopTyping: {\n      type: Boolean,\n      default: false\n    },\n    enableTyping: {\n      type: Boolean,\n      default: false\n    }\n  });\n\n  const { t, locale } = useI18n()\n\n  let placeholderIndex = ref(0)\n\n  let inputField = ref(props.input)\n  let inputPlaceholder = ref(props.placeholder)\n  let typing = ref(props.enableTyping)\n  let typeInterval = ref(null)\n  let userText = ref('') // Stores user input\n  let cursorVisible = ref(true)\n  let cursorInterval = null\n\n  const emit = defineEmits(['update:input',  'action']);\n\n  function emitAction() {\n    emit('action')\n  }\n  \n  function updateInput(event) {\n     emit('update:input', event)\n     userText.value = event // Stores user input\n  }\n\n  function handleInput() {\n    placeholderIndex.value = (placeholderIndex.value + 1) % props.placeholderTexts[locale.value].length\n  }\n\n  function handleFocus() {\n    typing.value = false\n\n    clearInterval(typeInterval.value)\n\n    inputPlaceholder.value = props.placeholder\n\n    if (!userText.value) {\n      inputField.value = ''\n    }\n  }\n\n  function checkInput() {\n    if (!userText.value && props.enableTyping) {\n      typing.value = true\n      inputPlaceholder.value = ''\n      startTyping()\n    }\n  }\n\n  function startTyping() {\n    let placeholderText = props.placeholderTexts[locale.value][placeholderIndex.value]\n    let i = 0\n    let typingBackwards = false\n  \n    // Start the cursor blinking\n    cursorInterval = setInterval(() => {\n      cursorVisible.value = !cursorVisible.value\n    }, 200)\n\n    typeInterval.value = setInterval(() => {\n      if (typing.value) {\n        if (!typingBackwards) {\n          inputField.value = placeholderText.substring(0, i) + (cursorVisible.value && i % 2 ? '|' : '')\n          i++\n        } else {\n          inputField.value = inputField.value.slice(0, -1)\n          inputField.value = placeholderText.substring(0, i) + (cursorVisible.value && i % 2 ? '|' : '')\n          i--\n        }\n\n        if (i > placeholderText.length && props.loopTyping) {\n          setTimeout(() => {\n            typingBackwards = true\n            inputField.value = placeholderText.substring(0, i)\n          }, 333)\n        }\n\n        if (i === 0 && typingBackwards) {\n          typingBackwards = false\n          handleInput()\n          placeholderText = props.placeholderTexts[locale.value][placeholderIndex.value]\n        }\n      }\n    }, props.typingSpeed)\n  }\n\n\n  onMounted(() => {\n    if (props.enableTyping) startTyping()\n  })\n\n  watchEffect(() => {\n    if (!typing.value) {\n      clearInterval(typeInterval.value)\n      clearInterval(cursorInterval)\n    }\n  })\n</script>\n\n<style lang=\"scss\">\n</style>",
            "name": "FieldBig.vue",
            "size": 4260,
            "type": "source"
          }
        ]
      },
      "Loader": {
        "_files": [
          {
            "path": "../../src/components/Loader/Loader.vue",
            "relativePath": "components/Loader/Loader.vue",
            "extension": ".vue",
            "content": "<template>\n  <div class=\"circular-loader\" :class=\"{ 'circular-loader-centered': centered }\">\n    <svg viewBox=\"25 25 50 50\">\n      <circle class=\"circular-loader-fill\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke-width=\"4\" stroke-miterlimit=\"10\" />\n      <circle class=\"circular-loader-circle\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke-width=\"4\" stroke-miterlimit=\"10\" />\n    </svg>\n    <div v-if=\"progress\" class=\"progress-text\">{{ progress }}</div>\n    <div v-if=\"status\" class=\"uppercase t-semi w-m-10r status-text\">{{ status }}</div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    progress: {\n      type: Number,\n      default: null,\n    },\n    status: {\n      type: String,\n      default: null,\n    },\n    centered: {\n      type: Boolean,\n      default: true, // По умолчанию лоадер центрирован (для обратной совместимости)\n    },\n  },\n};\n</script>\n\n<style>\n.circular-loader {\n  position: relative;\n  z-index: 50;\n  height: 2rem;\n  width: 2rem;\n}\n\n.circular-loader-centered {\n  top: calc(50% - 1rem);\n  left: calc(50% - 1rem);\n}\n\n.circular-loader svg {\n  animation: rotate 2s linear infinite;\n}\n\n.circular-loader-circle {\n  stroke-dasharray: 1, 200;\n  stroke-dashoffset: 0;\n  stroke-linecap: round;\n  stroke: rgb(var(--main));\n  animation: dash 1.5s ease-in-out infinite;\n}\n\n.circular-loader-fill {\n  stroke-linecap: round;\n  stroke: rgba(var(--black),0.2);\n}\n\n.progress-text {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 0.8rem;\n  color: rgb(var(--main));;\n}\n\n.status-text {\n  position: absolute;\n  top: 120%;\n  left: calc(50% - 5rem);\n  font-size: 0.8rem;\n  width: 10rem !important;\n  text-align: center;\n}\n\n@keyframes rotate {\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes dash {\n  0% {\n    stroke-dasharray: 1, 200;\n    stroke-dashoffset: 0;\n  }\n  50% {\n    stroke-dasharray: 89, 200;\n    stroke-dashoffset: -35;\n  }\n  100% {\n    stroke-dasharray: 1, 200;\n    stroke-dashoffset: -124;\n  }\n}\n</style>",
            "name": "Loader.vue",
            "size": 1985,
            "type": "source"
          }
        ]
      },
      "LocationMarker": {
        "_files": [
          {
            "path": "../../src/components/LocationMarker/LocationMarker.vue",
            "relativePath": "components/LocationMarker/LocationMarker.vue",
            "extension": ".vue",
            "content": "<template>\n  <div class=\"pos-relative\">\n    <div ref=\"mapContainer\" class=\"w-100 h-100\"></div>\n\n    <button class=\"cursor-pointer flex-center flex pos-absolute pos-t-regular pos-r-regular i-semi bg-second pd-nano radius-extra\" @click=\"setUserLocation\">\n\n      <transition name=\"ScaleOut\" mode=\"out-in\"> \n        <svg v-if=\"!locationLoading\" class=\"i-regular\" width=\"98\" height=\"98\" viewBox=\"0 0 98 98\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M50.0004 31.4995C39.7996 31.4995 31.5 39.7991 31.5 49.9999C31.5 60.2007 39.7996 68.5003 50.0004 68.5003C60.2012 68.5003 68.5008 60.2007 68.5008 49.9999C68.5008 39.7991 60.2012 31.4995 50.0004 31.4995ZM50.0004 63.7944C42.3941 63.7944 36.2059 57.6062 36.2059 49.9999C36.2059 42.3936 42.3941 36.2054 50.0004 36.2054C57.6067 36.2054 63.7949 42.3936 63.7949 49.9999C63.7949 57.6062 57.6067 63.7944 50.0004 63.7944Z\" fill=\"rgb(var(--white))\"/>\n          <path d=\"M97.6471 47.6471H84.56C83.3977 30.4141 69.5859 16.6024 52.3529 15.44V2.35294C52.3529 1.05255 51.2988 0 50 0C48.6996 0 47.6471 1.05255 47.6471 2.35294V15.44C30.4141 16.6024 16.6024 30.4141 15.44 47.6471H2.35294C1.05255 47.6471 0 48.6996 0 50C0 51.2988 1.05255 52.3529 2.35294 52.3529H15.44C16.6024 69.5859 30.4141 83.3977 47.6471 84.56V97.6471C47.6471 98.9459 48.6996 100 50 100C51.2988 100 52.3529 98.9459 52.3529 97.6471V84.56C69.5859 83.3977 83.3977 69.5859 84.56 52.3529H97.6471C98.9459 52.3529 100 51.2988 100 50C100 48.6996 98.9459 47.6471 97.6471 47.6471ZM50 79.9435C33.4886 79.9435 20.0565 66.5114 20.0565 50C20.0565 33.4886 33.4886 20.0565 50 20.0565C66.5098 20.0565 79.9435 33.4886 79.9435 50C79.9435 66.5098 66.5098 79.9435 50 79.9435Z\" fill=\"rgb(var(--white))\"/>      \n        </svg>\n\n        <Loader v-else  class=\"pos-t-0 pos-l-0 i-small\"/>\n      </transition>\n\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, watchEffect } from 'vue';\nimport { Loader as GMLoader } from \"@googlemaps/js-api-loader\";\n\nimport Loader from '@martyrs/src/components/Loader/Loader.vue'\n\n// Добавим новый проп для ключа API\nconst props = defineProps({\n  location: {\n    type: Object,\n    default: () => ({ lat: 15.8700, lng: 100.9925 })\n  },\n  address: {\n    type: String,\n    default: null\n  },\n  apiKey: String,\n  locale: {\n    type: String,\n    default: 'en'\n  }\n})\n\nconst emit = defineEmits(['update:location', 'update:address', 'update:country', 'update:state', 'update:city']);\n\nconst mapContainer = ref(null);\nconst locationLoading = ref(false);\n\nlet map, marker;\n\nonMounted(() => {\n  const loader = new GMLoader({\n    apiKey: props.apiKey,\n    version: \"weekly\",\n    libraries: [\"places\"],\n    language: props.locale,    \n  });\n\n  loader.load().then(() => {\n    map = new google.maps.Map(mapContainer.value, {\n      center: props.location,\n      zoom: 15,\n      mapTypeControl: false,\n      fullscreenControl: false,\n      disableDefaultUI: true\n    });\n\n    marker = new google.maps.Marker({\n      position: props.location,\n      map,\n      draggable: true,\n    });\n\n    marker.addListener(\"dragend\", (e) => {\n      const newLocation = { lat: e.latLng.lat(), lng: e.latLng.lng() };\n\n      emit('update:location', newLocation);\n\n      getAddressFromLocation(newLocation);\n    });\n  }).catch(e => {\n    console.error(e);\n  });\n});\n\nwatchEffect(() => {\n  if (props.location && marker) {\n    marker.setPosition(new google.maps.LatLng(props.location.lat, props.location.lng));\n  }\n});\n\nwatchEffect(() => {\n  if (props.location && map) {\n    const newCenter = new google.maps.LatLng(props.location.lat, props.location.lng);\n    \n    map.setCenter(newCenter);\n    map.setZoom(15);\n  }\n});\n\nfunction getAddressFromLocation(location) {\n  \n  const geocoder = new google.maps.Geocoder;\n\n  geocoder.geocode({ 'location': location }, (results, status) => {\n    if (status === 'OK') {\n      if (results[0]) {\n        emit('update:address', results[0].formatted_address);\n\n        let country = '', state = '', city = '';\n\n        results[0].address_components.forEach((addr) => {\n          if (addr.types.includes('country')) {\n            country = addr.long_name;\n          }\n          if (addr.types.includes('administrative_area_level_1')) {\n            state = addr.long_name;\n          }\n          if (addr.types.includes('locality')) {\n            city = addr.long_name;\n          }\n        });\n\n        emit('update:country', country);\n        emit('update:state', state);\n        emit('update:city', city);\n      } else {\n        console.error('No results found');\n      }\n    } else {\n      console.error('Geocoder failed due to: ' + status);\n    }\n  });\n}\n\n// Функция для установки местоположения пользователя\nasync function setUserLocation() {\n  locationLoading.value = true\n  \n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition((position) => {\n      const newLocation = { lat: position.coords.latitude, lng: position.coords.longitude };\n      emit('update:location', newLocation);\n      getAddressFromLocation(newLocation);\n      locationLoading.value = false\n    }, () => {\n      console.error('Error getting location');\n      locationLoading.value = false\n    });\n  } else {\n    console.error('Geolocation is not supported by this browser.');\n    locationLoading.value = false\n  }\n}\n</script>\n\n\n<style >\n.my-location-button {\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  z-index: 99;\n}\n\n.gm-style-cc { display:none; }\n\n\n</style>\n",
            "name": "LocationMarker.vue",
            "size": 5415,
            "type": "source"
          }
        ]
      },
      "Marquee": {
        "_files": [
          {
            "path": "../../src/components/Marquee/Marquee.vue",
            "relativePath": "components/Marquee/Marquee.vue",
            "extension": ".vue",
            "content": "<template>\n  <div\n    v-if=\"ready\"\n    class=\"vue3-marquee\"\n    :class=\"{ vertical: vertical, horizontal: !vertical }\"\n    :style=\"getCurrentStyle\"\n    :key=\"componentKey\"\n    @mouseenter=\"hoverStarted\"\n    @mouseleave=\"hoverEnded\"\n    @mousedown=\"mouseDown\"\n    @mouseup=\"mouseUp\"\n  >\n    <div\n      class=\"transparent-overlay\"\n      ref=\"marqueeOverlayContainer\"\n      :aria-hidden=\"true\"\n      :class=\"{ vertical: vertical, horizontal: !vertical, overlay: gradient }\"\n    />\n\n    <div \n      class=\"marquee\"\n      ref=\"marqueeContent\">\n      <slot></slot>\n    </div>\n\n    <div \n      class=\"marquee\" \n      :aria-hidden=\"true\"\n    >\n      <slot></slot>\n    </div>\n\n    <div\n      v-for=\"num in cloneAmount\"\n      :key=\"num\"\n      :aria-hidden=\"true\"\n      class=\"marquee cloned\"\n    >\n      <slot></slot>\n    </div\n    >\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, onBeforeUnmount, computed, watch } from 'vue'\n\nconst props = defineProps({\n  vertical: { type: Boolean, default: false },\n  direction: { type: String, default: 'normal' },\n  duration: { type: Number, default: 20 },\n  delay: { type: Number, default: 0 },\n  loop: { type: Number, default: 0 },\n  clone: { type: Boolean, default: false },\n  gradient: { type: Boolean, default: false },\n  gradientColor: { type: [Array,String], default: () => [255, 255, 255] },\n  gradientLength: { type: String },\n  pauseOnHover: { type: Boolean, default: false },\n  pauseOnClick: { type: Boolean, default: false },\n  pause: { type: Boolean, default: false }\n})\n\nconst emits = defineEmits(['onComplete', 'onLoopComplete', 'onPause', 'onResume'])\n\nconst ready = ref(false)\n\nconst componentKey = ref(0)\nconst cloneAmount = ref(0)\nconst loopCounter = ref(0)\nconst loopInterval = ref(null)\n\nconst widthMin = ref('100%')\nconst widthContainer = ref(0)\nconst widthContent = ref(0)\nconst heightMin = ref('100%')\nconst heightContainer = ref(0)\nconst heightContent = ref(0)\n\nconst gradientLength = ref('200px')\n\nconst verticalAnimationPause = ref(false)\nconst marqueeContent = ref(null)\nconst marqueeOverlayContainer = ref(null)\n\nconst ForcesUpdate = async () => {\n  await checkForClone()\n  componentKey.value++\n}\n\nconst checkForClone = async () => {\n  if (props.vertical) {\n    verticalAnimationPause.value = true\n  }\n\n  setInterval(() => {\n    widthMin.value = '0%'\n    heightMin.value = '0%'\n\n    if (marqueeContent.value !== null && marqueeOverlayContainer.value !== null) {\n      if (marqueeContent.value && marqueeOverlayContainer.value) {\n        if (\n          props.vertical &&\n          'clientHeight' in marqueeContent.value &&\n          'clientHeight' in marqueeOverlayContainer.value\n        ) {\n          heightContent.value = marqueeContent.value.clientHeight\n          heightContainer.value = marqueeOverlayContainer.value.clientHeight\n\n          const localCloneAmount = Math.ceil(heightContainer.value / heightContent.value)\n\n          cloneAmount.value = isFinite(localCloneAmount) ? localCloneAmount : 0\n\n          verticalAnimationPause.value = false\n\n          return cloneAmount.value\n        } else if (\n          !props.vertical &&\n          'clientWidth' in marqueeContent.value &&\n          'clientWidth' in marqueeOverlayContainer.value\n        ) {\n          widthContent.value = marqueeContent.value.clientWidth\n          widthContainer.value = marqueeOverlayContainer.value.clientWidth\n\n          const localCloneAmount = Math.ceil(widthContainer.value / widthContent.value)\n\n          cloneAmount.value = isFinite(localCloneAmount) ? localCloneAmount : 0\n\n          return cloneAmount.value\n        } else {\n          widthMin.value = '100%'\n          heightMin.value = '100%'\n          return 0\n        }\n      } else {\n        widthMin.value = '100%'\n        heightMin.value = '100%'\n        return 0\n      }\n    } else {\n      widthMin.value = '100%'\n      heightMin.value = '100%'\n      return 0\n    }\n  }, 100)\n}\n\nconst hoverStarted = () => { if (props.pauseOnHover) emits('onPause') }\nconst hoverEnded = () => { if (props.pauseOnHover) emits('onResume') }\nconst mouseDown = () => { if (props.pauseOnClick) emits('onPause') }\nconst mouseUp = () => { if (props.pauseOnClick) emits('onResume') }\n\nconst getCurrentStyle = computed(() => {\n  return {\n    '--loops': `${props.loop === 0 ? 'infinite' : props.loop}`,\n    '--duration': `${props.duration}s`,\n    '--delay': `${props.delay}s`,\n    '--direction': `${props.direction}`,\n    '--pauseOnHover': `${props.pauseOnHover ? 'paused' : 'running'}`,\n    '--pauseOnClick': `${props.pauseOnClick ? 'paused' : 'running'}`,\n    '--pauseAnimation': `${(props.vertical && verticalAnimationPause.value) || props.pause ? 'paused' : 'running'}`,\n    '--gradient-color': `rgba(${props.gradientColor}, 1), rgba(${props.gradientColor}, 0)`,\n    '--gradient-length': `${gradientLength.value}`,\n    '--min-width': `${widthMin.value}`,\n    '--min-height': `${heightMin.value}`,\n    '--orientation': props.vertical ? 'scrollY' : 'scrollX'\n  }\n})\n\nconst setupMarquee = async () => {\n  if (props.vertical) {\n    heightMin.value = '100%'\n    widthMin.value = 'auto'\n  } else {\n    heightMin.value = 'auto'\n    widthMin.value = '100%'\n  }\n\n  if (props.gradient && props.gradientLength) {\n    gradientLength.value = props.gradientLength\n  }\n\n  if (props.clone) {\n    await checkForClone()\n    ForcesUpdate()\n    ready.value = true\n  } else {\n    ready.value = true\n  }\n}\n\nonMounted(async () => {\n  setupMarquee()\n\n  loopInterval.value = setInterval(() => {\n    loopCounter.value++\n\n    if (props.loop !== 0 && loopCounter.value === props.loop) {\n      emits('onComplete')\n      clearInterval(loopInterval.value)\n    }\n\n    emits('onLoopComplete')\n  }, props.duration * 1000)\n})\n\nonBeforeUnmount(() => {\n  clearInterval(loopInterval.value)\n})\n\nwatch(widthContent, async () => {\n  if (props.clone) {\n    ForcesUpdate()\n  }\n})\n\nwatch(widthContainer, async () => {\n  if (props.clone) {\n    ForcesUpdate()\n  }\n})\n\nwatch(\n  () => props.pause,\n  (newVal, oldVal) => {\n    if (newVal !== oldVal) {\n      if (newVal) {\n        emits('onResume')\n      } else {\n        emits('onPause')\n      }\n    }\n  }\n)\n</script>\n\n<style lang=\"scss\">\n.vue3-marquee {\n  display: flex !important;\n  position: relative;\n\n  .marquee {\n    flex: 0 0 auto;\n    min-width: var(--min-width);\n    min-height: var(--min-height);\n    z-index: 1;\n\n    animation: var(--orientation) var(--duration) linear var(--delay) var(--loops);\n    animation-play-state: var(--pauseAnimation);\n    animation-direction: var(--direction);\n  }\n\n  .overlay {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n\n    &:before {\n      left: 0;\n      top: 0;\n    }\n\n    &:before, &:after {\n      content: '';\n      position: absolute;\n      z-index: 2;\n    }\n  }\n\n  .transparent-overlay {\n    position: absolute;\n    width: 100.5%;\n    height: 100.5%;\n  }\n\n\n  &.horizontal {\n    overflow-x: hidden !important;\n    flex-direction: row !important;\n    width: 100%;\n    height: max-content;\n\n    .marquee {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n    }\n\n    .overlay::before,.overlay::after {\n      background: linear-gradient(to right, var(--gradient-color));\n      height: 100%;\n      width: var(--gradient-length);\n    }\n\n    .overlay::after {\n      transform: rotateZ(180deg);\n      right: 0;\n      top: 0;\n    }\n  }\n\n  &.vertical {\n    overflow-y: hidden !important;\n    flex-direction: column !important;\n    height: 100%;\n    width: max-content;\n\n    .marquee {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n    }\n\n    .overlay::before, .overlay::after {\n      background: linear-gradient(to bottom, var(--gradient-color));\n      height: var(--gradient-length);\n      width: 100%;\n    }\n\n    .overlay::after {\n      transform: rotateZ(-180deg);\n      left: 0;\n      bottom: 0;\n    }\n  }\n\n  &:hover {\n    div {\n      animation-play-state: var(--pauseOnHover);\n    }\n  }\n\n  &:active {\n    div {\n      animation-play-state: var(--pauseOnClick);\n    } \n  }\n}\n\n@keyframes scrollX {\n  0% {\n    transform: translateX(0%);\n  }\n  100% {\n    transform: translateX(-100%);\n  }\n}\n\n@keyframes scrollY {\n  0% {\n    transform: translateY(0%);\n  }\n  100% {\n    transform: translateY(-100%);\n  }\n}\n</style>",
            "name": "Marquee.vue",
            "size": 8228,
            "type": "source"
          }
        ]
      },
      "Media": {
        "_files": [
          {
            "path": "../../src/components/Media/Media.vue",
            "relativePath": "components/Media/Media.vue",
            "extension": ".vue",
            "content": "<template>\n  <div class=\"media-container\">\n    <!-- Изображение с ленивой загрузкой и placeholder -->\n    <img\n      v-if=\"isImage\"\n      :src=\"isIntersecting ? url : ''\"\n      :data-src=\"url\"\n      :alt=\"options?.alt || 'Image'\"\n      class=\"media-item\"\n      :class=\"{ 'loading': !isLoaded }\"\n      loading=\"lazy\"\n      @load=\"handleLoad\"\n      v-bind=\"options\"\n      ref=\"imageElement\"\n    />\n    \n    <!-- Видео с предварительной загрузкой -->\n    <video\n      v-else-if=\"isVideo\"\n      ref=\"videoElement\"\n      :class=\"{ 'loading': !isLoaded }\"\n      class=\"media-item\"\n      :controls=\"!options?.hideControls\"\n      :loop=\"options?.loop !== false\"\n      :muted=\"options?.muted !== false\"\n      :autoplay=\"options?.autoplay\"\n      :playsinline=\"options?.playsinline !== false\"\n      :preload=\"options?.preload || 'metadata'\"\n      @loadeddata=\"handleLoad\"\n      v-bind=\"options\"\n    >\n      <source :src=\"url\" :type=\"videoType\">\n    </video>\n    \n    <!-- Плейсхолдер во время загрузки -->\n    <div v-if=\"!isLoaded\" class=\"media-placeholder\">\n      Loading...\n    </div>\n    \n    <!-- Сообщение об ошибке -->\n    <div v-if=\"error\" class=\"media-error\">\n      {{ error }}\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, computed, onUnmounted } from 'vue'\n\nconst props = defineProps({\n  url: {\n    type: String,\n    required: true\n  },\n  options: {\n    type: Object,\n    default: () => ({\n      muted: true,\n      loop: true,\n      playsinline: true,\n      preload: 'metadata' // 'none' | 'metadata' | 'auto'\n    })\n  }\n})\n\n// Refs\nconst videoElement = ref(null)\nconst imageElement = ref(null)\nconst isLoaded = ref(false)\nconst error = ref(null)\nconst isIntersecting = ref(false)\nlet observer = null\nlet isPlaying = false\n\n// Определяем тип медиа\nconst fileExtension = computed(() => {\n  return props.url?.split('.')?.pop()?.toLowerCase()\n})\n\nconst isImage = computed(() => {\n  const imageExtensions = ['jpg', 'jpeg', 'png', 'gif', 'webp', 'svg', 'avif']\n  return imageExtensions.includes(fileExtension.value)\n})\n\nconst isVideo = computed(() => {\n  const videoExtensions = ['mp4', 'webm', 'ogg']\n  return videoExtensions.includes(fileExtension.value)\n})\n\n// Определяем MIME-тип для видео\nconst videoType = computed(() => {\n  const types = {\n    'mp4': 'video/mp4',\n    'webm': 'video/webm',\n    'ogg': 'video/ogg'\n  }\n  return types[fileExtension.value] || ''\n})\n\n// Обработчик загрузки медиа\nfunction handleLoad() {\n  isLoaded.value = true\n}\n\n// Обработка ошибок\nfunction handleError(err) {\n  error.value = `Ошибка загрузки медиа: ${err.message}`\n  isLoaded.value = false\n}\n\n// Управление видео с обработкой ошибок\nasync function playVideo() {\n  if (!videoElement.value) return\n  \n  try {\n    if (videoElement.value.paused && !isPlaying) {\n      await videoElement.value.play()\n      isPlaying = true\n    }\n  } catch (err) {\n    handleError(err)\n  }\n}\n\nfunction checkAndPlayVideo() {\n  if (!videoElement.value) return\n  \n  videoElement.value.onplaying = () => {\n    isPlaying = true\n  }\n  \n  videoElement.value.onpause = () => {\n    isPlaying = false\n  }\n  \n  videoElement.value.onerror = handleError\n}\n\n// Intersection Observer для ленивой загрузки\nfunction setupIntersectionObserver() {\n  const options = {\n    root: null,\n    rootMargin: '50px',\n    threshold: 0.1\n  }\n  \n  observer = new IntersectionObserver((entries) => {\n    entries.forEach(entry => {\n      isIntersecting.value = entry.isIntersecting\n      \n      if (entry.isIntersecting) {\n        if (isVideo.value && props.options?.autoplay) {\n          playVideo()\n        }\n        // Отключаем observer после первой загрузки\n        observer.disconnect()\n      }\n    })\n  }, options)\n  \n  // Наблюдаем за элементом в зависимости от типа медиа\n  const element = isImage.value ? imageElement.value : videoElement.value\n  if (element) {\n    observer.observe(element)\n  }\n}\n\n// Lifecycle hooks\nonMounted(() => {\n  setupIntersectionObserver()\n})\n\nonUnmounted(() => {\n  if (observer) {\n    observer.disconnect()\n  }\n})\n</script>\n\n<style scoped>\n.media-container {\n}\n\n.media-item {\n  all: inherit;\n  opacity: 1;\n  transition: opacity 0.3s ease;\n}\n\n.media-item.loading {\n  opacity: 0;\n}\n\n.media-placeholder {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #f5f5f5;\n}\n\n.media-error {\n  color: #ff4444;\n  padding: 1rem;\n  text-align: center;\n}\n</style>",
            "name": "Media.vue",
            "size": 4449,
            "type": "source"
          }
        ]
      },
      "Menu": {
        "_files": [
          {
            "path": "../../src/components/Menu/Menu.vue",
            "relativePath": "components/Menu/Menu.vue",
            "extension": ".vue",
            "content": "<template>\n  <section class=\"mobile-menu-section  pd-r-zero pd-t-thin pd-b-thin pd-medium radius-medium\">\n    <slot></slot>\n  </section>\n</template>\n\n<script setup>\nimport { ref, } from 'vue';\n\n</script>\n\n<style  lang=\"scss\">\n  .mobile-menu-section {\n    > div {\n      &:last-of-type {\n          border-bottom: none !important;\n      }\n    }\n    \n  }\n</style>",
            "name": "Menu.vue",
            "size": 359,
            "type": "source"
          },
          {
            "path": "../../src/components/Menu/MenuItem.vue",
            "relativePath": "components/Menu/MenuItem.vue",
            "extension": ".vue",
            "content": "<script>\n  import { h, ref, inject, defineComponent } from 'vue';\n  \n  import IconChevronRight from '@martyrs/src/modules/icons/navigation/IconChevronRight.vue';  \n\n  export default defineComponent({\n    props: {\n    },\n    setup(props, { slots }) {\n      return () => {\n        const defaultSlotContent = slots.default ? slots.default() : [];\n\n        const iconSlot = [];\n        const textSlot = [];\n\n        // Changing the logic to place slots based on whether the type starts with 'Icon' or not\n        defaultSlotContent.forEach((vnode) => {\n          let compType = vnode.toString()\n          if (vnode.props && vnode.props.icon) {  // Check if the type starts with 'Icon'\n            iconSlot.push(vnode);\n          } else {\n            textSlot.push(vnode);\n          }\n        });\n\n        return h(\n          'div',\n          {\n            class: [\n              'w-100',\n              't-left',\n              'flex-nowrap',\n              'flex-v-center',\n              'flex',\n              // here we need add logic\n              { 'br-b br-black-transp-10 br-solid': true  }\n            ]\n          },\n          [\n            // Conditionally include the div for iconSlot\n            ...iconSlot.length ? [\n              h(\n                'div',\n                {\n                  class: ['mn-b-thin', 'mn-t-thin', 'flex-center', 'flex', 'mn-r-small','flex-child','flex-child-shrink-0', 'i-big', 'bg-main', 'radius-thin']\n                },\n                iconSlot\n              )\n            ] : [],\n            h(\n              'div',\n              {\n                class: ['w-100', 'mn-b-thin', 'mn-t-thin', 'mn-r-small', 'i-big', 'flex-v-center', 'flex']\n              },\n              [\n                h(\n                  'span',\n                  {\n                    class: ['p-big', 't-medium', 'mn-r-auto']\n                  },\n                  textSlot\n                )\n              ]\n            ),\n            h(IconChevronRight, { class: \"i-medium mn-r-medium\", type: \"chevron\"})\n          ]\n        );\n      };\n    }\n  });\n</script>\n",
            "name": "MenuItem.vue",
            "size": 2072,
            "type": "source"
          }
        ]
      },
      "PhotoViewer": {
        "_files": [
          {
            "path": "../../src/components/PhotoViewer/PhotoViewer.vue",
            "relativePath": "components/PhotoViewer/PhotoViewer.vue",
            "extension": ".vue",
            "content": "<template>\n  <div class=\"photo-container\" @wheel=\"handleWheel\" @mousedown=\"startDrag\" @touchstart=\"handleTouchStart\" @touchmove=\"handleTouchMove\" @touchend=\"handleTouchEnd\">\n    <img loading=\"lazy\" :src=\"photoUrl\" :style=\"imgStyle\" ref=\"image\" @load=\"initialize\" />\n  </div>\n</template>\n<script setup>\nimport { ref, reactive, computed, onMounted, watch } from 'vue';\nconst props = defineProps({\n  photoUrl: String,\n  show: Boolean,\n});\nconst scale = ref(1);\nconst position = reactive({ x: 0, y: 0 });\nconst dragging = ref(false);\nconst startPosition = reactive({ x: 0, y: 0 });\nconst startScale = ref(1);\nconst startDistance = ref(0);\nconst image = ref(null);\nconst container = ref(null);\n\nconst imgStyle = computed(() => ({\n  transform: `scale(${scale.value}) translate(${position.x}px, ${position.y}px)`,\n}));\n\n// Наблюдаем за изменением масштаба, чтобы ограничивать позицию\nwatch(scale, () => {\n  constrainPosition();\n});\n\nconst getImageDimensions = () => {\n  if (!image.value) return { width: 0, height: 0 };\n  \n  // Используем естественные размеры изображения\n  const imgWidth = image.value.naturalWidth;\n  const imgHeight = image.value.naturalHeight;\n  \n  // Получаем размеры контейнера\n  const containerRect = image.value.parentElement?.getBoundingClientRect();\n  if (!containerRect) return { width: 0, height: 0 };\n  \n  const containerWidth = containerRect.width;\n  const containerHeight = containerRect.height;\n  \n  // Определяем, как изображение вписывается в контейнер (с учетом object-fit: scale-down)\n  let renderedWidth, renderedHeight;\n  \n  if (imgWidth > containerWidth || imgHeight > containerHeight) {\n    const ratioX = containerWidth / imgWidth;\n    const ratioY = containerHeight / imgHeight;\n    const ratio = Math.min(ratioX, ratioY);\n    \n    renderedWidth = imgWidth * ratio;\n    renderedHeight = imgHeight * ratio;\n  } else {\n    renderedWidth = imgWidth;\n    renderedHeight = imgHeight;\n  }\n  \n  return {\n    renderedWidth,\n    renderedHeight,\n    containerWidth,\n    containerHeight\n  };\n};\n\nconst handleWheel = (event) => {\n  event.preventDefault();\n  \n  const delta = event.deltaY > 0 ? -0.1 : 0.1;\n  const newScale = Math.min(Math.max(1, scale.value + delta), 3);\n  \n  // Рассчитываем позицию курсора относительно центра изображения\n  const rect = image.value.getBoundingClientRect();\n  const mouseX = event.clientX - rect.left - rect.width / 2;\n  const mouseY = event.clientY - rect.top - rect.height / 2;\n  \n  // Сохраняем соотношение позиции курсора к изображению при масштабировании\n  const scaleChange = newScale / scale.value;\n  \n  // Обновляем позицию так, чтобы точка под курсором оставалась на месте\n  position.x = position.x - (mouseX / scale.value) * (scaleChange - 1);\n  position.y = position.y - (mouseY / scale.value) * (scaleChange - 1);\n  \n  // Обновляем масштаб\n  scale.value = newScale;\n  \n  // Ограничиваем позицию после обновления масштаба\n  constrainPosition();\n};\n\nconst startDrag = (event) => {\n  event.preventDefault();\n  if (scale.value <= 1) return; // Не позволяем перетаскивать при масштабе 1\n  \n  dragging.value = true;\n  startPosition.x = event.type === 'mousedown' ? event.clientX : event.touches[0].clientX;\n  startPosition.y = event.type === 'mousedown' ? event.clientY : event.touches[0].clientY;\n  \n  const move = (moveEvent) => {\n    if (dragging.value) {\n      const currentX = moveEvent.type === 'mousemove' ? moveEvent.clientX : moveEvent.touches[0].clientX;\n      const currentY = moveEvent.type === 'mousemove' ? moveEvent.clientY : moveEvent.touches[0].clientY;\n      \n      const deltaX = (currentX - startPosition.x) / scale.value;\n      const deltaY = (currentY - startPosition.y) / scale.value;\n      \n      position.x += deltaX;\n      position.y += deltaY;\n      \n      // Ограничиваем позицию после перемещения\n      constrainPosition();\n      \n      startPosition.x = currentX;\n      startPosition.y = currentY;\n    }\n  };\n  \n  const endDrag = () => {\n    dragging.value = false;\n    document.removeEventListener('mousemove', move);\n    document.removeEventListener('mouseup', endDrag);\n    document.removeEventListener('touchmove', move);\n    document.removeEventListener('touchend', endDrag);\n  };\n  \n  document.addEventListener('mousemove', move);\n  document.addEventListener('mouseup', endDrag);\n  document.addEventListener('touchmove', move);\n  document.addEventListener('touchend', endDrag);\n};\n\nconst handleTouchStart = (event) => {\n  if (event.touches.length === 2) {\n    const touch1 = event.touches[0];\n    const touch2 = event.touches[1];\n    const distanceX = Math.abs(touch1.clientX - touch2.clientX);\n    const distanceY = Math.abs(touch1.clientY - touch2.clientY);\n    startDistance.value = Math.sqrt(distanceX ** 2 + distanceY ** 2);\n    startScale.value = scale.value;\n  } else {\n    startDrag(event);\n  }\n};\n\nconst handleTouchMove = (event) => {\n  if (event.touches.length === 2) {\n    event.preventDefault();\n    const touch1 = event.touches[0];\n    const touch2 = event.touches[1];\n    const distanceX = Math.abs(touch1.clientX - touch2.clientX);\n    const distanceY = Math.abs(touch1.clientY - touch2.clientY);\n    const newDistance = Math.sqrt(distanceX ** 2 + distanceY ** 2);\n    const scaleFactor = newDistance / startDistance.value;\n    \n    // Получаем центр между двумя касаниями\n    const centerX = (touch1.clientX + touch2.clientX) / 2;\n    const centerY = (touch1.clientY + touch2.clientY) / 2;\n    \n    // Получаем координаты центра касания относительно изображения\n    const rect = image.value.getBoundingClientRect();\n    const touchCenterX = centerX - rect.left - rect.width / 2;\n    const touchCenterY = centerY - rect.top - rect.height / 2;\n    \n    const newScale = Math.min(Math.max(1, startScale.value * scaleFactor), 3);\n    const scaleChange = newScale / scale.value;\n    \n    // Обновляем позицию, чтобы центр касания оставался на месте\n    position.x = position.x - (touchCenterX / scale.value) * (scaleChange - 1);\n    position.y = position.y - (touchCenterY / scale.value) * (scaleChange - 1);\n    \n    scale.value = newScale;\n    constrainPosition();\n  }\n};\n\nconst handleTouchEnd = (event) => {\n  if (event.touches.length === 0) {\n    startDistance.value = 0;\n  }\n};\n\nconst initialize = () => {\n  scale.value = 1;\n  position.x = 0;\n  position.y = 0;\n};\n\nconst constrainPosition = () => {\n  // Если масштаб 1, сбрасываем позицию в центр\n  if (scale.value <= 1) {\n    position.x = 0;\n    position.y = 0;\n    return;\n  }\n  \n  const { renderedWidth, renderedHeight, containerWidth, containerHeight } = getImageDimensions();\n  \n  // Вычисляем максимальное смещение\n  const scaledWidth = renderedWidth * scale.value;\n  const scaledHeight = renderedHeight * scale.value;\n  \n  // Отступ от края изображения до края контейнера при текущем масштабе\n  const horizontalOffset = (scaledWidth - containerWidth) / 2 / scale.value;\n  const verticalOffset = (scaledHeight - containerHeight) / 2 / scale.value;\n  \n  // Ограничиваем смещение, чтобы изображение не выходило за пределы контейнера\n  if (horizontalOffset > 0) {\n    position.x = Math.max(-horizontalOffset, Math.min(horizontalOffset, position.x));\n  } else {\n    position.x = 0;\n  }\n  \n  if (verticalOffset > 0) {\n    position.y = Math.max(-verticalOffset, Math.min(verticalOffset, position.y));\n  } else {\n    position.y = 0;\n  }\n};\n\nonMounted(() => {\n  window.addEventListener('resize', () => {\n    constrainPosition();\n  });\n});\n</script>\n<style>\n.photo-container {\n  width: 100%;\n  height: 100%;\n  background: black;\n  overflow: hidden;\n  position: relative;\n  cursor: grab;\n}\n.photo-container img {\n  width: 100%;\n  height: 100%;\n  object-fit: scale-down;\n  transition: transform 0.05s;\n  transform-origin: center center;\n}\n</style>",
            "name": "PhotoViewer.vue",
            "size": 7708,
            "type": "source"
          }
        ]
      },
      "Popup": {
        "_files": [
          {
            "path": "../../src/components/Popup/Popup.vue",
            "relativePath": "components/Popup/Popup.vue",
            "extension": ".vue",
            "content": "<template>\n  <transition name=\"moveFromTop\">\n    <teleport to=\"body\" v-if=\"isPopupOpen\">\n      <div v-if=\"isPopupOpen\" key=\"popup-content\" class=\"z-index-6 popup-wrapper\"\n        :class=\"{\n          'pd-t-extra': MOBILE_APP === 'ios',\n          [alignClass]: true\n        }\"\n      >\n        <transition name=\"TransitionTranslateY\" mode=\"out-in\">\n          <section class=\"h-max-100 o-y-scroll pos-relative z-index-4\" v-bind=\"$attrs\" :class=\"$attrs.class\">\n            <h4 v-if=\"title\" class=\"mn-b-medium\">{{title}}</h4>\n            <IconCross :fill=\"'rgb(var(--white))'\" @click=\"closePopup()\" class=\"cursor-pointer bg-second pd-micro radius-extra pos-absolute pos-t-0 pos-r-0 mn-t-medium mn-r-medium hover-scale-1 i-medium z-index-5\"/>\n            <slot></slot>\n          </section>  \n        </transition>\n\n        <div \n          @click=\"closePopup()\" \n          :class=\"{'active':isPopupOpen === true}\" \n          class=\"color-overlay z-index-3\">\n        </div>\n      </div>\n    </teleport>\n  </transition>\n</template>\n\n<script setup>\nimport { computed, watch, onMounted, ref, nextTick } from 'vue';\n// Import libs\nimport { useRoute, useRouter } from 'vue-router'\n// import { useI18n } from 'vue-i18n'\n// Icons\nimport IconCross from '@martyrs/src/modules/icons/navigation/IconCross.vue';\n// Define props\nconst props = defineProps({\n  isPopupOpen: {\n    type: Boolean,\n    default: false\n  },\n  style: String,\n  title: String,\n  align: {\n    type: String,\n    default: 'center center',\n    validator: (value) => {\n      const validAlignments = [\n        'top left', 'top center', 'top right',\n        'center left', 'center center', 'center right',\n        'bottom left', 'bottom center', 'bottom right'\n      ];\n      return validAlignments.includes(value);\n    }\n  }\n});\n\nconst emits = defineEmits(['close-popup'])\n\n// Compute the alignment class from the align prop\nconst alignClass = computed(() => {\n  return `align-${props.align.replace(/\\s+/g, '-')}`;\n});\n\nfunction closePopup() {\n  emits(\"close-popup\");\n} \n\nwatch(() => props.isPopupOpen, (newVal) => {\n  if (newVal) {\n    document.body.classList.add('no-scroll');\n  } else {\n    document.body.classList.remove('no-scroll');\n  }\n});\n\n// Accessing router and store\nconst route = useRoute()\nconst router = useRouter()\n// Localization\nconst text = {\n  messages: {\n    en: {},\n    ru: {}\n  }\n}\n// const { t } = useI18n(text)\n</script>\n\n<style lang=\"scss\">\n  .no-scroll {\n    overflow: hidden;\n\n    #view {\n      overflow: hidden;\n    }\n  }\n\n  .popup-wrapper {\n    display: flex;\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    z-index: 40;\n\n    /* Default alignment - center center */\n    &.align-center-center {\n      align-items: center;\n      justify-content: center;\n    }\n\n    /* Top alignments */\n    &.align-top-left {\n      align-items: flex-start;\n      justify-content: flex-start;\n    }\n    \n    &.align-top-center {\n      align-items: flex-start;\n      justify-content: center;\n    }\n    \n    &.align-top-right {\n      align-items: flex-start;\n      justify-content: flex-end;\n    }\n\n    /* Center alignments */\n    &.align-center-left {\n      align-items: center;\n      justify-content: flex-start;\n    }\n    \n    &.align-center-right {\n      align-items: center;\n      justify-content: flex-end;\n    }\n\n    /* Bottom alignments */\n    &.align-bottom-left {\n      align-items: flex-end;\n      justify-content: flex-start;\n    }\n    \n    &.align-bottom-center {\n      align-items: flex-end;\n      justify-content: center;\n    }\n    \n    &.align-bottom-right {\n      align-items: flex-end;\n      justify-content: flex-end;\n    }\n\n    .popup {\n      position: absolute;\n      height: auto;\n      padding: 2rem;\n      min-width: 24rem;\n      border-radius: 2rem;\n      overflow: hidden;\n      color: white;\n      background: black;\n      z-index: 40;\n    }\n  }\n\n  .color-overlay {\n    display: block;\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0,0,0,0.0);\n    pointer-events: none;\n    transform: scale(1.5);\n    transition: all 0.5s cubic-bezier(.31,.79,.24,.92);\n    \n    &.active {\n      background: rgba(#000,0.25);\n      pointer-events: all;\n    }\n  }\n</style>",
            "name": "Popup.vue",
            "size": 4226,
            "type": "source"
          }
        ]
      },
      "Radio": {
        "_files": [
          {
            "path": "../../src/components/Radio/Radio.vue",
            "relativePath": "components/Radio/Radio.vue",
            "extension": ".vue",
            "content": "<template>\n  <label class=\"flex-v-center flex-nowrap flex\">\n    <!-- ////////////////////////// -->\n    <!-- Checkmark -->\n    <!-- ////////////////////////// -->\n    <div \n      class=\"cursor-pointer mn-r-thin radius-extra pd-micro h-100 aspect-1x1 pos-relative\"\n      :class=\"{\n        'bg-main': radio === value,\n      }\"\n    >\n      <div \n        class=\"radius-extra pd-micro w-100 h-100\"\n        :class=\"{\n          'bg-white': radio === value,\n        }\"\n      >\n\n      </div> \n\n      <div \n        v-if=\"radio !== value\"\n        class=\"br-solid br-2px br-grey-transp-25 pos-absolute pos-t-0 pos-r-0 radius-extra w-100 h-100\"\n      >\n\n      </div> \n    </div> \n    <!-- <div v-if=\"radio === value\" class=\"\">\n      <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g id=\"24 / basic / check-mark\">\n          <path id=\"icon\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.28033 10.7197L14.25 3.75L15.3107 4.81066L7.28033 12.841L3 8.56066L4.06066 7.5L7.28033 10.7197Z\" fill=\"#000000\"/>\n        </g>\n      </svg>\n    </div> -->\n\n    <!-- ////////////////////////// -->\n    <!-- Label -->\n    <!-- ////////////////////////// -->\n\n    <div v-if=\"label\" class=\"mn-r-auto t-transp mn-r-small\">\n      <span>{{label}}</span>\n    </div>\n\n    <!-- ////////////////////////// -->\n    <!-- Input -->\n    <!-- ////////////////////////// -->\n    <input \n      @input=\"event => text = emit('update:radio', event.target.value)\"\n      class=\"round radiobutton\" \n      type=\"checkbox\" \n      :name=\"name\" \n      :value=\"value\"\n      :checked=\"value === radio\"\n    >\n  </label>\n</template>\n\n<script setup>\n  const props = defineProps({\n    label: String,\n    name: String,\n    value: false,\n    radio: [Object, String]\n  })\n\n  const emit = defineEmits(['update:radio'])\n\n  const updateInputText = () => {\n    emit('update:radio', value)\n  }\n</script>\n\n<style lang=\"scss\">\n</style>",
            "name": "Radio.vue",
            "size": 1918,
            "type": "source"
          }
        ]
      },
      "Search": {
        "_files": [
          {
            "path": "../../src/components/Search/Search.vue",
            "relativePath": "components/Search/Search.vue",
            "extension": ".vue",
            "content": "<template>\n\t<div id=\"search\"  v-if=\"search.current.length !== 0 \" class=\"search-wrapper\">\n\t\t<h2 class=\"mn-b-big\" >Поиск</h2>\n\t\t<div v-if=\"loading\" class=\"loading\">\n      Loading...\n    </div>\n\n    <div v-if=\"error\" class=\"error\">\n      {{ error }}\n    </div>\n\n    <p class=\"mn-b-big\" v-if=\"products\" >Всего {{ declOfNum(searchResult.length, [' найден', ' найдено', ' найдено']) }} {{searchResult.length}} {{ declOfNum(searchResult.length, [' товар', ' товара', ' товаров']) }}</p>\n\t\t<div v-if=\"products\"  class=\"mn-b-big grid-layout\">\n\t\t\t<ProductCard v-for=\"product in searchResult\" :product=\"product\" :key=\"product\"></ProductCard>\n\t\t</div>\n\t</div>\n</template>\n\n<script setup=\"props\">\nimport ProductCard from '@/components/blocks/ProductCard.vue'\t\n/////////////////////////////\n// COMPONENT DEPENDENCIES\n/////////////////////////////\nimport { toRefs, ref, computed,onMounted } from 'vue';\n\n\timport { useRoute, useRouter } from 'vue-router'\n\t// Module Created\n\tconst route = useRoute()\n\tconst router = useRouter()\n/////////////////////////////\n// HELPERS\n/////////////////////////////\nfunction declOfNum(number, words) {  \n\treturn words[(number % 100 > 4 && number % 100 < 20) ? 2 : [2, 0, 1, 1, 1, 2][(number % 10 < 5) ? number % 10 : 5]];\n}\nvar error =   ref(null)\nvar loading = ref(null)\nvar products = ref(null)\n\nfunction fetchData () {\n  error.value = products.value = null\n  loading.value = true\n\n  if (store.state.products.all.length > 1)  \n  \t{\n  \t\tloading.value = false \n  \t\tproducts.value = store.state.products.all\n\t\t}\n\n\tstore.dispatch('products/fetchProductsPublished').then(\n    finish => {\n      loading.value = false\n     \tproducts.value = finish\n     \tconsole.log(products.value)\n    },\n    err => {\n     \terror.value = err.toString()\n    }\n  );\n}\nrouter.afterEach((to, from, next) => {\n  if (store.state.products.search.current.length !== 0) {\n   store.dispatch('products/resetSearch');   \n   next() \n } else {\n  \tnext()\n  }\n\n})\n/////////////////////////////\n// CREATED\n/////////////////////////////\nconst store = useStore()\n\nconst search = computed(() => store.state.products.search)\n\nconst searchResult = computed(() => {\n\tconst searcher = store.state.products.all.filter(function(product) {\n\t  if (product.name.toUpperCase().includes(store.state.products.search.current.toUpperCase())) {\n\t  \treturn true\n\t  }\n\t})\n\treturn searcher\n})\n\n/////////////////////////////\n// MOUNTED\n/////////////////////////////\nonMounted(() => {\n\t// alert('hello')\n\tfetchData()\n});\n\n\n</script>\n\n<style lang=\"scss\">\n.search-wrapper {\n\tpadding: 8rem;\n\tmin-height: 100vh;\n\tpadding-top: 6rem;\n\tbackground: white;\n\tposition: relative;\n\tz-index: 1;\n}\n\n</style>\n",
            "name": "Search.vue",
            "size": 2651,
            "type": "source"
          }
        ]
      },
      "Select": {
        "_files": [
          {
            "path": "../../src/components/Select/Select.vue",
            "relativePath": "components/Select/Select.vue",
            "extension": ".vue",
            "content": "<template>\n  <!-- Input Wrapper -->\n  <div \n    @click.stop=\"toggleMenu\"  \n    v-click-outside=\"clickedOutside\" \n    :class=\"$attrs.class\" \n    class=\"cursor-pointer flex-v-center flex-nowrap flex pos-relative\"\n  >\n    <!-- Label -->\n    <span v-if=\"label\" class=\"t-transp mn-r-small\">{{label}}</span>\n    \n    <!-- Input -->\n    <span>\n      {{ optionsSelected ? (optionsSelected.name || optionsSelected[props.value] || optionsSelected) : placeholder  }}\n    </span>\n\n    <!-- Dropdown menu -->\n    <transition mode=\"out-in\" name=\"TransitionTranslateY\">\n      <ul \n        v-show=\"showMenu\" \n        :class=\"$attrs.class\"\n        class=\"bs-black pos-absolute pos-t-100 pos-l-0 z-index-5 w-100 mn-t-thin\"\n        style=\"min-width: max-content;\"\n      >\n        <li @click.stop=\"selectOption(option)\" v-for=\"option in optionsListed\" class=\"text-box-trim\">\n          <span v-if=\"option\" class=\"w-100\">\n\n            {{ option.name || option[props.value] || option }}\n          </span>\n        </li>\n      </ul>\n    </transition>\n  </div>\n\n  <!-- Validation -->\n  <transition mode=\"out-in\" name=\"fade\">\n    <div v-if=\"validation\" class=\"mn-t-thin invalid-feedback\">\n      * {{validation.message}}\n    </div>\n  </transition>\n</template>\n\n<script setup>\nimport { ref, computed, watch } from 'vue'\n\nimport clickOutside from '../FieldPhone/click-outside.js';\n\nlet vClickOutside = clickOutside\n\nconst emit = defineEmits([\n  'update:select', \n  'focus', \n  'blur'\n])\n\nconst props = defineProps({\n  label: String,\n  placeholder: { type: String, default: 'Please select an item' },\n  select: [String, Object],\n  property: String,\n  value: String,\n  options: { type: Array, default: () => [] },\n  validation: Boolean,\n})\n\nconst showMenu = ref(false)\n\nconst optionsSelected = ref(\n  props.property \n  ? findObjectByValue(props.select, props.property, props.options) \n  : props.select\n)\n\nconst optionsListed = computed(() => {\n  return props.select \n  ? props.options.filter(option => option !== props.select) \n  : props.options\n})\n\nwatch(() => props.select, (newSelect) => {\n  optionsSelected.value = \n  props.property \n  ? findObjectByValue(props.select, props.property, props.options) \n  : props.select;\n});\n\nconst toggleMenu = () => {\n  showMenu.value = !showMenu.value\n\n  emit(showMenu.value ? 'focus' : 'blur')\n}\n\nfunction clickedOutside () {\n  showMenu.value = false\n}\n\nconst selectOption = option => {\n  optionsSelected.value = option\n  \n  toggleMenu()\n\n  if (props.property) {  \n    emit('update:select', optionsSelected.value[props.property])\n  } else {\n    emit('update:select', optionsSelected.value)\n  }\n}\n\nfunction findObjectByValue (value, property, objects) {\n  for (const object of objects) {\n    if (object[property] === value || object === value) {\n      return object;\n    }\n  }\n  return null;\n}\n</script>\n\n<style lang=\"scss\" scoped>\n  li {\n    list-style-type: none;\n  }\n\n  ul li {\n    line-height: 2;\n  }\n</style>\n",
            "name": "Select.vue",
            "size": 2921,
            "type": "source"
          }
        ]
      },
      "SelectMulti": {
        "_files": [
          {
            "path": "../../src/components/SelectMulti/SelectMulti.vue",
            "relativePath": "components/SelectMulti/SelectMulti.vue",
            "extension": ".vue",
            "content": "<template>\n  <div\n    ref=\"multiselect\"\n    :tabindex=\"searchable ? -1 : tabindex\"\n    :class=\"{\n      'multiselect--active': isOpen,\n      'multiselect--disabled': disabled,\n      'multiselect--above': isAbove,\n      'multiselect--has-options-group': hasOptionGroup\n    }\"\n    @focus=\"activate\"\n    @blur=\"searchable ? false : deactivate\"\n    @keydown.self.down.prevent=\"pointerForward\"\n    @keydown.self.up.prevent=\"pointerBackward\"\n    @keypress.enter.tab.stop.self=\"addPointerElement\"\n    @keyup.esc=\"deactivate\"\n    class=\"multiselect flex flex-v-center\"\n    role=\"combobox\"\n    :aria-owns=\"`listbox-${id}`\">\n    \n    <slot name=\"caret\" :toggle>\n      <div @mousedown.prevent.stop=\"toggle\" class=\"multiselect__select\"></div>\n    </slot>\n    \n    <slot name=\"clear\" :search />\n    \n    <div ref=\"tags\" class=\"multiselect__tags\">\n      <slot\n        name=\"selection\"\n        :search\n        :remove=\"removeElement\"\n        :values=\"visibleValues\"\n        :is-open=\"isOpen\">\n        <div class=\"multiselect__tags-wrap\" v-show=\"visibleValues.length > 0\">\n          <template v-for=\"(option, index) of visibleValues\" :key=\"index\">\n            <slot name=\"tag\" :option :search :remove=\"removeElement\">\n              <span class=\"multiselect__tag\">\n                <span v-text=\"getOptionLabel(option)\" />\n                <i \n                  tabindex=\"1\" \n                  @keypress.enter.prevent=\"removeElement(option)\"\n                  @mousedown.prevent=\"removeElement(option)\" \n                  class=\"multiselect__tag-icon\" />\n              </span>\n            </slot>\n          </template>\n        </div>\n        <template v-if=\"internalValue?.length > limit\">\n          <slot name=\"limit\">\n            <strong class=\"multiselect__strong\" v-text=\"limitText(internalValue.length - limit)\" />\n          </slot>\n        </template>\n      </slot>\n      <transition name=\"multiselect__loading\">\n        <slot name=\"loading\">\n          <div v-show=\"loading\" class=\"multiselect__spinner\" />\n        </slot>\n      </transition>\n      <input\n        ref=\"searchInput\"\n        v-if=\"searchable\"\n        :name\n        :id\n        type=\"text\"\n        autocomplete=\"off\"\n        spellcheck=\"false\"\n        :placeholder\n        :style=\"inputStyle\"\n        :value=\"search\"\n        :disabled\n        :tabindex\n        @input=\"updateSearch($event.target.value)\"\n        @focus.prevent=\"activate\"\n        @blur.prevent=\"deactivate\"\n        @keyup.esc=\"deactivate\"\n        @keydown.down.prevent=\"pointerForward\"\n        @keydown.up.prevent=\"pointerBackward\"\n        @keypress.enter.prevent.stop.self=\"addPointerElement\"\n        @keydown.delete.stop=\"removeLastElement\"\n        class=\"multiselect__input\"\n        :aria-controls=\"`listbox-${id}`\" />\n      <span\n        v-if=\"isSingleLabelVisible\"\n        class=\"multiselect__single\"\n        @mousedown.prevent=\"toggle\">\n        <slot name=\"singleLabel\" :option=\"singleValue\">\n          {{ currentOptionLabel }}\n        </slot>\n      </span>\n      <span\n        v-if=\"isPlaceholderVisible\"\n        class=\"multiselect__placeholder\"\n        @mousedown.prevent=\"toggle\">\n        <slot name=\"placeholder\">\n          {{ placeholder }}\n        </slot>\n      </span>\n    </div>\n    \n    <transition name=\"multiselect\">\n      <div\n        class=\"multiselect__content-wrapper\"\n        v-show=\"isOpen\"\n        @focus=\"activate\"\n        tabindex=\"-1\"\n        @mousedown.prevent\n        :style=\"{ maxHeight: `${optimizedHeight}px` }\"\n        ref=\"list\">\n        <ul class=\"multiselect__content\" :style=\"contentStyle\" role=\"listbox\" :id=\"`listbox-${id}`\">\n          <slot name=\"beforeList\" />\n          <li v-if=\"multiple && max === internalValue.length\">\n            <span class=\"multiselect__option\">\n              <slot name=\"maxElements\">\n                Maximum of {{ max }} options selected. First remove a selected option to select another.\n              </slot>\n            </span>\n          </li>\n          <template v-if=\"!max || internalValue.length < max\">\n            <li \n              class=\"multiselect__element\"\n              v-for=\"(option, index) of filteredOptions\"\n              :key=\"index\"\n              :id=\"`${id}-${index}`\"\n              :role=\"!(option?.$isLabel || option?.$isDisabled) ? 'option' : null\">\n              <span\n                v-if=\"!(option?.$isLabel || option?.$isDisabled)\"\n                :class=\"optionHighlight(index, option)\"\n                @click.stop=\"select(option)\"\n                @mouseenter.self=\"pointerSet(index)\"\n                :data-select=\"option?.isTag ? tagPlaceholder : selectLabelText\"\n                :data-selected=\"selectedLabelText\"\n                :data-deselect=\"deselectLabelText\"\n                class=\"multiselect__option\">\n                <slot name=\"option\" :option :search :index>\n                  <span>{{ getOptionLabel(option) }}</span>\n                </slot>\n              </span>\n              <span\n                v-if=\"option?.$isLabel || option?.$isDisabled\"\n                :data-select=\"groupSelect && selectGroupLabelText\"\n                :data-deselect=\"groupSelect && deselectGroupLabelText\"\n                :class=\"groupHighlight(index, option)\"\n                @mouseenter.self=\"groupSelect && pointerSet(index)\"\n                @mousedown.prevent=\"selectGroup(option)\"\n                class=\"multiselect__option\">\n                <slot name=\"option\" :option :search :index>\n                  <span>{{ getOptionLabel(option) }}</span>\n                </slot>\n              </span>\n            </li>\n          </template>\n          <li v-show=\"showNoResults && filteredOptions.length === 0 && search && !loading\">\n            <span class=\"multiselect__option\">\n              <slot name=\"noResult\" :search>\n                No elements found. Consider changing the search query.\n              </slot>\n            </span>\n          </li>\n          <li v-show=\"showNoOptions && (options.length === 0 || (hasOptionGroup && filteredOptions.length === 0)) && !search && !loading\">\n            <span class=\"multiselect__option\">\n              <slot name=\"noOptions\">List is empty.</slot>\n            </span>\n          </li>\n          <slot name=\"afterList\" />\n        </ul>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, watch, onMounted, nextTick } from 'vue'\n\n// Props\nconst props = defineProps({\n  modelValue: { type: null, default: () => [] },\n  options: { type: Array, required: true },\n  multiple: { type: Boolean, default: false },\n  trackBy: String,\n  label: String,\n  searchable: { type: Boolean, default: true },\n  clearOnSelect: { type: Boolean, default: true },\n  hideSelected: { type: Boolean, default: false },\n  placeholder: { type: String, default: 'Select option' },\n  allowEmpty: { type: Boolean, default: true },\n  resetAfter: { type: Boolean, default: false },\n  closeOnSelect: { type: Boolean, default: true },\n  customLabel: {\n    type: Function,\n    default: (option, label) => {\n      if (!option && option !== 0) return ''\n      return label ? option[label] : option\n    }\n  },\n  taggable: { type: Boolean, default: false },\n  tagPlaceholder: { type: String, default: 'Press enter to create a tag' },\n  tagPosition: { type: String, default: 'top' },\n  max: { type: [Number, Boolean], default: false },\n  id: { default: null },\n  optionsLimit: { type: Number, default: 1000 },\n  groupValues: String,\n  groupLabel: String,\n  groupSelect: { type: Boolean, default: false },\n  blockKeys: { type: Array, default: () => [] },\n  preserveSearch: { type: Boolean, default: false },\n  preselectFirst: { type: Boolean, default: false },\n  preventAutofocus: { type: Boolean, default: false },\n  internalSearch: { type: Boolean, default: true },\n  name: { type: String, default: '' },\n  selectLabel: { type: String, default: 'Press enter to select' },\n  selectGroupLabel: { type: String, default: 'Press enter to select group' },\n  selectedLabel: { type: String, default: 'Selected' },\n  deselectLabel: { type: String, default: 'Press enter to remove' },\n  deselectGroupLabel: { type: String, default: 'Press enter to deselect group' },\n  showLabels: { type: Boolean, default: true },\n  limit: { type: Number, default: 99999 },\n  maxHeight: { type: Number, default: 300 },\n  limitText: { type: Function, default: count => `and ${count} more` },\n  loading: { type: Boolean, default: false },\n  disabled: { type: Boolean, default: false },\n  openDirection: { type: String, default: '' },\n  showNoOptions: { type: Boolean, default: true },\n  showNoResults: { type: Boolean, default: true },\n  tabindex: { type: Number, default: 0 },\n  showPointer: { type: Boolean, default: true },\n  optionHeight: { type: Number, default: 40 }\n})\n\n// Emits\nconst emit = defineEmits(['open', 'search-change', 'close', 'select', 'update:modelValue', 'remove', 'tag'])\n\n// Refs\nconst multiselect = ref(null)\nconst searchInput = ref(null)\nconst list = ref(null)\nconst tags = ref(null)\n\n// State\nconst search = ref('')\nconst isOpen = ref(false)\nconst preferredOpenDirection = ref('below')\nconst optimizedHeight = ref(props.maxHeight)\nconst pointer = ref(0)\nconst pointerDirty = ref(false)\n\n// Helper functions\nconst isEmpty = opt => {\n  if (opt === 0) return false\n  if (Array.isArray(opt) && opt.length === 0) return true\n  return !opt\n}\n\nconst includes = (str, query) => {\n  if (str === undefined) str = 'undefined'\n  if (str === null) str = 'null'\n  if (str === false) str = 'false'\n  return str.toString().toLowerCase().indexOf(query.trim()) !== -1\n}\n\nconst filterOptions = (options, search, label, customLabel) => {\n  return search \n    ? options.filter(option => includes(customLabel(option, label), search))\n        .sort((a, b) => customLabel(a, label).length - customLabel(b, label).length)\n    : options\n}\n\nconst flattenOptions = (values, label) => options =>\n  options.reduce((prev, curr) => {\n    if (curr[values]?.length) {\n      prev.push({ $groupLabel: curr[label], $isLabel: true })\n      return prev.concat(curr[values])\n    }\n    return prev\n  }, [])\n\nconst stripGroups = options => options.filter(option => !option.$isLabel)\n\nconst filterGroups = (search, label, values, groupLabel, customLabel) => groups =>\n  groups.map(group => {\n    if (!group[values]) {\n      console.warn(`Options passed to vue-multiselect do not contain groups, despite the config.`)\n      return []\n    }\n    const groupOptions = filterOptions(group[values], search, label, customLabel)\n    return groupOptions.length ? { [groupLabel]: group[groupLabel], [values]: groupOptions } : []\n  })\n\nconst flow = (...fns) => x => fns.reduce((v, f) => f(v), x)\n\n// Computed\nconst internalValue = computed(() => {\n  const val = props.modelValue\n  return val || val === 0 ? (Array.isArray(val) ? val : [val]) : []\n})\n\nconst filteredOptions = computed(() => {\n  const searchVal = search.value || ''\n  const normalizedSearch = searchVal.toLowerCase().trim()\n  let options = props.options.concat()\n\n  if (props.internalSearch) {\n    options = props.groupValues \n      ? filterAndFlat(options, normalizedSearch, props.label)\n      : filterOptions(options, normalizedSearch, props.label, props.customLabel)\n  } else {\n    options = props.groupValues \n      ? flattenOptions(props.groupValues, props.groupLabel)(options) \n      : options\n  }\n\n  options = props.hideSelected ? options.filter(o => !isSelected(o)) : options\n\n  if (props.taggable && normalizedSearch.length && !isExistingOption(normalizedSearch)) {\n    if (props.tagPosition === 'bottom') {\n      options.push({ isTag: true, label: searchVal })\n    } else {\n      options.unshift({ isTag: true, label: searchVal })\n    }\n  }\n\n  return options.slice(0, props.optionsLimit)\n})\n\nconst valueKeys = computed(() => \n  props.trackBy ? internalValue.value.map(el => el[props.trackBy]) : internalValue.value\n)\n\nconst optionKeys = computed(() => {\n  const options = props.groupValues ? flatAndStrip(props.options) : props.options\n  return options.map(el => props.customLabel(el, props.label).toString().toLowerCase())\n})\n\nconst currentOptionLabel = computed(() =>\n  props.multiple \n    ? (props.searchable ? '' : props.placeholder)\n    : internalValue.value.length \n      ? getOptionLabel(internalValue.value[0])\n      : props.searchable ? '' : props.placeholder\n)\n\nconst hasOptionGroup = computed(() => props.groupValues && props.groupLabel && props.groupSelect)\n\nconst isSingleLabelVisible = computed(() =>\n  (singleValue.value || singleValue.value === 0) &&\n  (!isOpen.value || !props.searchable) &&\n  !visibleValues.value.length\n)\n\nconst isPlaceholderVisible = computed(() =>\n  !internalValue.value.length && (!props.searchable || !isOpen.value)\n)\n\nconst visibleValues = computed(() =>\n  props.multiple ? internalValue.value.slice(0, props.limit) : []\n)\n\nconst singleValue = computed(() => internalValue.value[0])\n\nconst deselectLabelText = computed(() => props.showLabels ? props.deselectLabel : '')\nconst deselectGroupLabelText = computed(() => props.showLabels ? props.deselectGroupLabel : '')\nconst selectLabelText = computed(() => props.showLabels ? props.selectLabel : '')\nconst selectGroupLabelText = computed(() => props.showLabels ? props.selectGroupLabel : '')\nconst selectedLabelText = computed(() => props.showLabels ? props.selectedLabel : '')\n\nconst inputStyle = computed(() => {\n  if (props.searchable || (props.multiple && props.modelValue?.length)) {\n    return isOpen.value\n      ? { width: '100%' }\n      : { width: '0', position: 'absolute', padding: '0' }\n  }\n  return ''\n})\n\nconst contentStyle = computed(() => \n  props.options.length ? { display: 'inline-block' } : { display: 'block' }\n)\n\nconst isAbove = computed(() => {\n  if (['above', 'top'].includes(props.openDirection)) return true\n  if (['below', 'bottom'].includes(props.openDirection)) return false\n  return preferredOpenDirection.value === 'above'\n})\n\nconst pointerPosition = computed(() => pointer.value * props.optionHeight)\nconst visibleElements = computed(() => optimizedHeight.value / props.optionHeight)\n\n// Methods\nconst filterAndFlat = (options, search, label) =>\n  flow(\n    filterGroups(search, label, props.groupValues, props.groupLabel, props.customLabel),\n    flattenOptions(props.groupValues, props.groupLabel)\n  )(options)\n\nconst flatAndStrip = options =>\n  flow(\n    flattenOptions(props.groupValues, props.groupLabel),\n    stripGroups\n  )(options)\n\nconst updateSearch = query => {\n  search.value = query\n}\n\nconst isExistingOption = query => \n  props.options ? optionKeys.value.indexOf(query) > -1 : false\n\nconst isSelected = option => {\n  const opt = props.trackBy ? option[props.trackBy] : option\n  return valueKeys.value.indexOf(opt) > -1\n}\n\nconst isOptionDisabled = option => !!option?.$isDisabled\n\nconst getOptionLabel = option => {\n  if (isEmpty(option)) return ''\n  if (option.isTag) return option.label\n  if (option.$isLabel) return option.$groupLabel\n  const label = props.customLabel(option, props.label)\n  return isEmpty(label) ? '' : label\n}\n\nconst select = (option, key) => {\n  if (option.$isLabel && props.groupSelect) {\n    selectGroup(option)\n    return\n  }\n  if (props.blockKeys.indexOf(key) !== -1 || props.disabled || option.$isDisabled || option.$isLabel) return\n  if (props.max && props.multiple && internalValue.value.length === props.max) return\n  if (key === 'Tab' && !pointerDirty.value) return\n  \n  if (option.isTag) {\n    emit('tag', option.label, props.id)\n    search.value = ''\n    if (props.closeOnSelect && !props.multiple) deactivate()\n  } else {\n    if (isSelected(option)) {\n      if (key !== 'Tab') removeElement(option)\n      return\n    }\n\n    emit('update:modelValue', props.multiple ? internalValue.value.concat([option]) : option)\n    emit('select', option, props.id)\n\n    if (props.clearOnSelect) search.value = ''\n  }\n  \n  if (props.closeOnSelect) deactivate()\n}\n\nconst selectGroup = selectedGroup => {\n  const group = props.options.find(option => \n    option[props.groupLabel] === selectedGroup.$groupLabel\n  )\n  if (!group) return\n\n  if (wholeGroupSelected(group)) {\n    emit('remove', group[props.groupValues], props.id)\n    const newValue = internalValue.value.filter(option => \n      group[props.groupValues].indexOf(option) === -1\n    )\n    emit('update:modelValue', newValue)\n  } else {\n    let optionsToAdd = group[props.groupValues].filter(option => \n      !(isOptionDisabled(option) || isSelected(option))\n    )\n    if (props.max) optionsToAdd.splice(props.max - internalValue.value.length)\n    \n    emit('select', optionsToAdd, props.id)\n    emit('update:modelValue', internalValue.value.concat(optionsToAdd))\n  }\n\n  if (props.closeOnSelect) deactivate()\n}\n\nconst wholeGroupSelected = group =>\n  group[props.groupValues].every(option => isSelected(option) || isOptionDisabled(option))\n\nconst wholeGroupDisabled = group =>\n  group[props.groupValues].every(isOptionDisabled)\n\nconst removeElement = (option, shouldClose = true) => {\n  if (props.disabled || option?.$isDisabled) return\n  if (!props.allowEmpty && internalValue.value.length <= 1) {\n    deactivate()\n    return\n  }\n\n  const index = typeof option === 'object' \n    ? valueKeys.value.indexOf(option[props.trackBy])\n    : valueKeys.value.indexOf(option)\n\n  const newValue = props.multiple\n    ? internalValue.value.slice(0, index).concat(internalValue.value.slice(index + 1))\n    : null\n\n  emit('update:modelValue', newValue)\n  emit('remove', option, props.id)\n\n  if (props.closeOnSelect && shouldClose) deactivate()\n}\n\nconst removeLastElement = () => {\n  if (props.blockKeys.indexOf('Delete') !== -1) return\n  if (search.value.length === 0 && Array.isArray(internalValue.value) && internalValue.value.length) {\n    removeElement(internalValue.value[internalValue.value.length - 1], false)\n  }\n}\n\nconst activate = () => {\n  if (isOpen.value || props.disabled) return\n\n  adjustPosition()\n  if (props.groupValues && pointer.value === 0 && filteredOptions.value.length) {\n    pointer.value = 1\n  }\n\n  isOpen.value = true\n  if (props.searchable) {\n    if (!props.preserveSearch) search.value = ''\n    if (!props.preventAutofocus) nextTick(() => searchInput.value?.focus())\n  } else if (!props.preventAutofocus) {\n    multiselect.value?.focus()\n  }\n  emit('open', props.id)\n}\n\nconst deactivate = () => {\n  if (!isOpen.value) return\n\n  isOpen.value = false\n  if (props.searchable) {\n    searchInput.value?.blur()\n  } else {\n    multiselect.value?.blur()\n  }\n  if (!props.preserveSearch) search.value = ''\n  emit('close', getValue(), props.id)\n}\n\nconst toggle = () => {\n  isOpen.value ? deactivate() : activate()\n}\n\nconst adjustPosition = () => {\n  if (typeof window === 'undefined') return\n\n  const spaceAbove = multiselect.value.getBoundingClientRect().top\n  const spaceBelow = window.innerHeight - multiselect.value.getBoundingClientRect().bottom\n  const hasEnoughSpaceBelow = spaceBelow > props.maxHeight\n\n  if (hasEnoughSpaceBelow || spaceBelow > spaceAbove || ['below', 'bottom'].includes(props.openDirection)) {\n    preferredOpenDirection.value = 'below'\n    optimizedHeight.value = Math.min(spaceBelow - 40, props.maxHeight)\n  } else {\n    preferredOpenDirection.value = 'above'\n    optimizedHeight.value = Math.min(spaceAbove - 40, props.maxHeight)\n  }\n}\n\nconst getValue = () => \n  props.multiple ? internalValue.value : internalValue.value.length === 0 ? null : internalValue.value[0]\n\n// Pointer methods\nconst optionHighlight = (index, option) => ({\n  'multiselect__option--highlight': index === pointer.value && props.showPointer,\n  'multiselect__option--selected': isSelected(option)\n})\n\nconst groupHighlight = (index, selectedGroup) => {\n  if (!props.groupSelect) {\n    return ['multiselect__option--disabled', { 'multiselect__option--group': selectedGroup.$isLabel }]\n  }\n  const group = props.options.find(option => \n    option[props.groupLabel] === selectedGroup.$groupLabel\n  )\n  return group && !wholeGroupDisabled(group)\n    ? ['multiselect__option--group', \n       { 'multiselect__option--highlight': index === pointer.value && props.showPointer },\n       { 'multiselect__option--group-selected': wholeGroupSelected(group) }]\n    : 'multiselect__option--disabled'\n}\n\nconst addPointerElement = ({ key } = 'Enter') => {\n  if (filteredOptions.value.length > 0) {\n    select(filteredOptions.value[pointer.value], key)\n  }\n  pointerReset()\n}\n\nconst pointerForward = () => {\n  if (pointer.value < filteredOptions.value.length - 1) {\n    pointer.value++\n    if (list.value.scrollTop <= pointerPosition.value - (visibleElements.value - 1) * props.optionHeight) {\n      list.value.scrollTop = pointerPosition.value - (visibleElements.value - 1) * props.optionHeight\n    }\n    if (filteredOptions.value[pointer.value]?.$isLabel && !props.groupSelect) pointerForward()\n  }\n  pointerDirty.value = true\n}\n\nconst pointerBackward = () => {\n  if (pointer.value > 0) {\n    pointer.value--\n    if (list.value.scrollTop >= pointerPosition.value) {\n      list.value.scrollTop = pointerPosition.value\n    }\n    if (filteredOptions.value[pointer.value]?.$isLabel && !props.groupSelect) pointerBackward()\n  } else {\n    if (filteredOptions.value[pointer.value]?.$isLabel && !props.groupSelect) pointerForward()\n  }\n  pointerDirty.value = true\n}\n\nconst pointerReset = () => {\n  if (!props.closeOnSelect) return\n  pointer.value = 0\n  if (list.value) list.value.scrollTop = 0\n}\n\nconst pointerAdjust = () => {\n  if (pointer.value >= filteredOptions.value.length - 1) {\n    pointer.value = filteredOptions.value.length ? filteredOptions.value.length - 1 : 0\n  }\n  if (filteredOptions.value.length > 0 && filteredOptions.value[pointer.value]?.$isLabel && !props.groupSelect) {\n    pointerForward()\n  }\n}\n\nconst pointerSet = index => {\n  pointer.value = index\n  pointerDirty.value = true\n}\n\n// Watchers\nwatch(() => internalValue.value, () => {\n  if (props.resetAfter && internalValue.value.length) {\n    search.value = ''\n    emit('update:modelValue', props.multiple ? [] : null)\n  }\n}, { deep: true })\n\nwatch(search, () => emit('search-change', search.value))\n\nwatch(filteredOptions, () => pointerAdjust())\n\nwatch(isOpen, () => pointerDirty.value = false)\n\nwatch(pointer, () => {\n  searchInput.value?.setAttribute('aria-activedescendant', `${props.id}-${pointer.value}`)\n})\n\n// Lifecycle\nonMounted(() => {\n  if (!props.multiple && props.max) {\n    console.warn('[Vue-Multiselect warn]: Max prop should not be used when prop Multiple equals false.')\n  }\n  if (props.preselectFirst && !internalValue.value.length && props.options.length) {\n    select(filteredOptions.value[0])\n  }\n})\n</script>\n\n<style>\nfieldset[disabled] .multiselect {\n  pointer-events: none;\n}\n\n.multiselect__spinner {\n  position: absolute;\n  right: 1px;\n  top: 1px;\n  width: 40px;\n  height: 38px;\n  background: #fff;\n  display: block;\n}\n\n.multiselect__spinner::before,\n.multiselect__spinner::after {\n  position: absolute;\n  content: \"\";\n  top: 50%;\n  left: 50%;\n  margin: -8px 0 0 -8px;\n  width: 16px;\n  height: 16px;\n  border-radius: 100%;\n  border-color: #41b883 transparent transparent;\n  border-style: solid;\n  border-width: 2px;\n  box-shadow: 0 0 0 1px transparent;\n}\n\n.multiselect__spinner::before {\n  animation: spinning 2.4s cubic-bezier(0.41, 0.26, 0.2, 0.62);\n  animation-iteration-count: infinite;\n}\n\n.multiselect__spinner::after {\n  animation: spinning 2.4s cubic-bezier(0.51, 0.09, 0.21, 0.8);\n  animation-iteration-count: infinite;\n}\n\n.multiselect__loading-enter-active,\n.multiselect__loading-leave-active {\n  transition: opacity 0.4s ease-in-out;\n  opacity: 1;\n}\n\n.multiselect__loading-enter,\n.multiselect__loading-leave-active {\n  opacity: 0;\n}\n\n.multiselect,\n.multiselect__input,\n.multiselect__single {\n  font-family: inherit;\n  touch-action: manipulation;\n}\n\n.multiselect {\n  display: block;\n  position: relative;\n  width: 100%;\n  min-height: 40px;\n}\n\n.multiselect * {\n  box-sizing: border-box;\n}\n\n.multiselect:focus {\n  outline: none;\n}\n\n.multiselect--disabled {\n  background: #ededed;\n  pointer-events: none;\n  opacity: 0.6;\n}\n\n.multiselect--active {\n  z-index: 50;\n}\n\n.multiselect--active:not(.multiselect--above) .multiselect__current,\n.multiselect--active:not(.multiselect--above) .multiselect__input,\n.multiselect--active:not(.multiselect--above) .multiselect__tags {\n  border-bottom-left-radius: 0;\n  border-bottom-right-radius: 0;\n}\n\n.multiselect--active .multiselect__select {\n  transform: rotateZ(180deg);\n}\n\n.multiselect--above.multiselect--active .multiselect__current,\n.multiselect--above.multiselect--active .multiselect__input,\n.multiselect--above.multiselect--active .multiselect__tags {\n  border-top-left-radius: 0;\n  border-top-right-radius: 0;\n}\n\n.multiselect__input,\n.multiselect__single,\n.multiselect__placeholder {\n  position: relative;\n  display: inline-block;\n  min-height: 20px;\n  line-height: 20px;\n  border: none;\n  width: calc(100%);\n  height: inherit;\n  box-sizing: border-box;\n  vertical-align: top;\n  display: flex;\n  align-items: center;\n}\n\n.multiselect__input::placeholder {\n  color: #35495e;\n}\n\n.multiselect__tag ~ .multiselect__input,\n.multiselect__tag ~ .multiselect__single {\n  width: auto;\n}\n\n.multiselect__input:hover,\n.multiselect__single:hover {\n  border-color: #cfcfcf;\n}\n\n.multiselect__input:focus,\n.multiselect__single:focus {\n  border-color: #a8a8a8;\n  outline: none;\n}\n\n.multiselect__tags-wrap {\n  display: inline;\n}\n\n.multiselect__tags {\n  display: block;\n  height: inherit;\n}\n\n.multiselect__tag {\n  position: relative;\n  display: inline-block;\n  padding: 4px 26px 4px 10px;\n  border-radius: 5px;\n  margin-right: 10px;\n  color: #fff;\n  line-height: 1;\n  background: #41b883;\n  margin-bottom: 5px;\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 100%;\n  text-overflow: ellipsis;\n}\n\n.multiselect__tag-icon {\n  cursor: pointer;\n  margin-left: 7px;\n  position: absolute;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  font-weight: 700;\n  font-style: initial;\n  width: 22px;\n  text-align: center;\n  line-height: 22px;\n  transition: all 0.2s ease;\n  border-radius: 5px;\n}\n\n.multiselect__tag-icon::after {\n  content: \"×\";\n  color: #266d4d;\n  font-size: 14px;\n}\n\n.multiselect__tag-icon:focus::after,\n.multiselect__tag-icon:hover::after {\n  color: white;\n}\n\n.multiselect__current {\n  line-height: 16px;\n  min-height: 40px;\n  box-sizing: border-box;\n  display: block;\n  overflow: hidden;\n  padding: 8px 12px 0;\n  padding-right: 30px;\n  white-space: nowrap;\n  margin: 0;\n  text-decoration: none;\n  border-radius: 5px;\n  border: 1px solid #e8e8e8;\n  cursor: pointer;\n}\n\n.multiselect__select {\n  line-height: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: center;\n  position: absolute;\n  box-sizing: border-box;\n  width: 40px;\n  height: 38px;\n  right: 1px;\n  top: calc(50% - 19px);\n  padding: 4px 8px;\n  margin: 0;\n  text-decoration: none;\n  text-align: center;\n  cursor: pointer;\n  transition: transform 0.2s ease;\n}\n\n.multiselect__select::before {\n  position: relative;\n  color: #999;\n  margin-top: 4px;\n  border-style: solid;\n  border-width: 5px 5px 0 5px;\n  border-color: #999 transparent transparent transparent;\n  content: \"\";\n}\n\n.multiselect--active .multiselect__placeholder {\n  display: none;\n}\n\n.multiselect__content-wrapper {\n  position: absolute;\n  display: block;\n  background: #fff;\n  width: 100%;\n  max-height: 240px;\n  height: min-content;\n  overflow: auto;\n  left: 0;\n  border-top: none;\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n  z-index: 50;\n  -webkit-overflow-scrolling: touch;\n}\n\n.multiselect__content {\n  list-style: none;\n  display: inline-block;\n  padding: 0;\n  margin: 0;\n  min-width: 100%;\n  vertical-align: top;\n}\n\n.multiselect--above .multiselect__content-wrapper {\n  bottom: 100%;\n  border-bottom-left-radius: 0;\n  border-bottom-right-radius: 0;\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n  border-bottom: none;\n  border-top: 1px solid #e8e8e8;\n}\n\n.multiselect__content::-webkit-scrollbar {\n  display: none;\n}\n\n.multiselect__element {\n  display: block;\n}\n\n.multiselect__option {\n  display: block;\n  padding: 12px;\n  min-height: 40px;\n  line-height: 16px;\n  text-decoration: none;\n  text-transform: none;\n  vertical-align: middle;\n  position: relative;\n  cursor: pointer;\n  white-space: nowrap;\n}\n\n.multiselect__option::after {\n  top: 0;\n  right: 0;\n  position: absolute;\n  line-height: 40px;\n  padding-right: 12px;\n  padding-left: 20px;\n  font-size: 13px;\n}\n\n.multiselect__option--highlight {\n  background: rgba(var(--main), 0.1);\n  outline: none;\n}\n\n.multiselect__option--highlight::after {\n  content: attr(data-select);\n}\n\n.multiselect__option--selected {\n  background: #f3f3f3;\n  color: #35495e;\n  font-weight: bold;\n}\n\n.multiselect__option--selected::after {\n  content: attr(data-selected);\n  color: silver;\n  background: inherit;\n}\n\n.multiselect__option--selected.multiselect__option--highlight {\n  background: rgba(var(--red), 0.1);\n}\n\n.multiselect__option--selected.multiselect__option--highlight::after {\n  content: attr(data-deselect);\n}\n\n.multiselect--disabled .multiselect__current,\n.multiselect--disabled .multiselect__select {\n  background: #ededed;\n  color: #a6a6a6;\n}\n\n.multiselect__option--disabled {\n  background: #ededed !important;\n  color: #a6a6a6 !important;\n  cursor: text;\n  pointer-events: none;\n}\n\n.multiselect__option--group {\n  background: #ededed;\n  color: #35495e;\n}\n\n.multiselect__option--group.multiselect__option--highlight {\n  background: #35495e;\n  color: #fff;\n}\n\n.multiselect__option--group.multiselect__option--highlight::after {\n  background: #35495e;\n}\n\n.multiselect__option--disabled.multiselect__option--highlight {\n  background: #dedede;\n}\n\n.multiselect__option--group-selected.multiselect__option--highlight {\n  background: #ff6a6a;\n  color: #fff;\n}\n\n.multiselect__option--group-selected.multiselect__option--highlight::after {\n  background: #ff6a6a;\n  content: attr(data-deselect);\n  color: #fff;\n}\n\n.multiselect-enter-active,\n.multiselect-leave-active {\n  transition: all 0.15s ease;\n}\n\n.multiselect-enter,\n.multiselect-leave-active {\n  opacity: 0;\n}\n\n.multiselect__strong {\n  margin-bottom: 8px;\n  line-height: 20px;\n  display: inline-block;\n  vertical-align: top;\n}\n\n*[dir=\"rtl\"] .multiselect {\n  text-align: right;\n}\n\n*[dir=\"rtl\"] .multiselect__select {\n  right: auto;\n  left: 1px;\n}\n\n*[dir=\"rtl\"] .multiselect__tags {\n  padding: 8px 8px 0 40px;\n}\n\n*[dir=\"rtl\"] .multiselect__content {\n  text-align: right;\n}\n\n*[dir=\"rtl\"] .multiselect__option::after {\n  right: auto;\n  left: 0;\n}\n\n*[dir=\"rtl\"] .multiselect__clear {\n  right: auto;\n  left: 12px;\n}\n\n*[dir=\"rtl\"] .multiselect__spinner {\n  right: auto;\n  left: 1px;\n}\n\n@keyframes spinning {\n  from {\n    transform: rotate(0);\n  }\n  to {\n    transform: rotate(2turn);\n  }\n}\n</style>",
            "name": "SelectMulti.vue",
            "size": 30586,
            "type": "source"
          }
        ]
      },
      "Shader": {
        "_files": [
          {
            "path": "../../src/components/Shader/Shader.vue",
            "relativePath": "components/Shader/Shader.vue",
            "extension": ".vue",
            "content": "<template>\n  <canvas ref=\"refCanvas\" />\n</template>\n<script setup>\nimport { onMounted, ref, watch } from 'vue'\n\nconst props = defineProps({\n  shader: {\n    type: String,\n    required: true\n  },\n  theme: {\n    type: String,\n    default: 'light' // или любое другое значение по умолчанию\n  }\n})\n\nconst refCanvas = ref(null)\nlet gl = null\nlet shaderProgram = null\nlet themeUniformLocation = null\n\n// Функция для обновления uniform-переменных в шейдере\nconst updateUniforms = () => {\n  if (!gl || !shaderProgram) return\n  \n  // Получаем location для переменной iTheme\n  if (!themeUniformLocation) {\n    themeUniformLocation = gl.getUniformLocation(shaderProgram, 'iTheme')\n  }\n  \n  // Устанавливаем значение: 0.0 для темной темы, 1.0 для светлой\n  const themeValue = props.theme === 'light' ? 1.0 : 0.0\n  gl.uniform1f(themeUniformLocation, themeValue)\n}\n\n// Следим за изменениями темы\nwatch(() => props.theme, () => {\n  updateUniforms()\n}, { immediate: true })\n\nonMounted(() => {\n  const canvas = refCanvas.value\n  gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl')\n  \n  const vsSource = `\n    attribute vec4 aVertexPosition;\n    void main() {\n      gl_Position = aVertexPosition;\n    }\n  `\n  const fsSource = props.shader\n  \n  function compileShader(gl, type, source) {\n    const shader = gl.createShader(type)\n    gl.shaderSource(shader, source)\n    gl.compileShader(shader)\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n      alert('An error occurred compiling the shaders: ' + gl.getShaderInfoLog(shader))\n      gl.deleteShader(shader)\n      return null\n    }\n    return shader\n  }\n  \n  const vertexShader = compileShader(gl, gl.VERTEX_SHADER, vsSource)\n  const fragmentShader = compileShader(gl, gl.FRAGMENT_SHADER, fsSource)\n  shaderProgram = gl.createProgram()\n  gl.attachShader(shaderProgram, vertexShader)\n  gl.attachShader(shaderProgram, fragmentShader)\n  gl.linkProgram(shaderProgram)\n  \n  if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n    alert('Unable to initialize the shader program: ' + gl.getProgramInfoLog(shaderProgram))\n  }\n  \n  function resizeCanvasToDisplaySize(canvas) {\n    const width = canvas.clientWidth * window.devicePixelRatio\n    const height = canvas.clientHeight * window.devicePixelRatio\n    if (canvas.width !== width || canvas.height !== height) {\n      canvas.width = width\n      canvas.height = height\n      return true\n    }\n    return false\n  }\n  \n  function render() {\n    if (resizeCanvasToDisplaySize(gl.canvas)) {\n      gl.viewport(0, 0, gl.canvas.width, gl.canvas.height)\n    }\n    \n    gl.clearColor(0.0, 0.0, 0.0, 1.0)\n    gl.clearDepth(1.0)\n    gl.enable(gl.DEPTH_TEST)\n    gl.depthFunc(gl.LEQUAL)\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\n    gl.useProgram(shaderProgram)\n    \n    const positionBuffer = gl.createBuffer()\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer)\n    const positions = [\n      -1.0, 1.0,\n      1.0, 1.0,\n      -1.0, -1.0,\n      1.0, -1.0,\n    ]\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW)\n    \n    const vertexPosition = gl.getAttribLocation(shaderProgram, 'aVertexPosition')\n    gl.vertexAttribPointer(vertexPosition, 2, gl.FLOAT, false, 0, 0)\n    gl.enableVertexAttribArray(vertexPosition)\n    \n    const timeUniformLocation = gl.getUniformLocation(shaderProgram, 'iTime')\n    const resolutionUniformLocation = gl.getUniformLocation(shaderProgram, 'iResolution')\n\n    gl.uniform1f(timeUniformLocation, performance.now() / 3000.0)\n    gl.uniform2f(resolutionUniformLocation, gl.canvas.width, gl.canvas.height)\n    \n    // Обновляем uniform для темы\n    updateUniforms()\n    \n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4)\n    requestAnimationFrame(render)\n  }\n  \n  requestAnimationFrame(render)\n})\n</script>\n<style scoped>\n  canvas {\n    width: 100%;\n    height: 100%;\n  }\n</style>",
            "name": "Shader.vue",
            "size": 3854,
            "type": "source"
          }
        ]
      },
      "Skeleton": {
        "_files": [
          {
            "path": "../../src/components/Skeleton/Skeleton.vue",
            "relativePath": "components/Skeleton/Skeleton.vue",
            "extension": ".vue",
            "content": "<template>\n  <div class=\"skeleton-wrapper\" :class=\"{ 'skeleton-wrapper--loading': loading }\">\n    <!-- Используем слот по умолчанию, если он есть -->\n    <slot v-if=\"hasDefaultSlot && !structure.length\"></slot>\n    \n    <!-- Создаем скелетон на основе переданной структуры, если слот пустой -->\n    <div v-else-if=\"structure.length\" class=\"skeleton-structure\" :class=\"{ 'skeleton-structure--horizontal': horizontal }\">\n      <div \n        v-for=\"(item, index) in structure\" \n        :key=\"index\" \n        class=\"skeleton-item\"\n        :class=\"[\n          `skeleton-item--${item.block}`,\n          `skeleton-item--${item.size || 'medium'}`,\n          { 'skeleton-item--rounded': item.rounded }\n        ]\"\n        :style=\"item.style\"\n      ></div>\n    </div>\n    \n    <!-- Если слот пустой и структура не определена - показываем дефолтный скелетон -->\n    <div v-else class=\"skeleton-default\">\n      <div class=\"skeleton-item skeleton-item--text skeleton-item--small\"></div>\n      <div class=\"skeleton-item skeleton-item--text skeleton-item--medium\"></div>\n      <div class=\"skeleton-item skeleton-item--text skeleton-item--large\"></div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, useSlots, computed, onMounted } from 'vue';\n\nconst slots = useSlots();\n\nconst props = defineProps({\n  // Флаг загрузки, определяет, нужно ли показывать скелетон\n  loading: {\n    type: Boolean,\n    default: false\n  },\n  // Структура скелетона, если не используется слот\n  structure: {\n    type: Array,\n    default: () => []\n  },\n  // Горизонтальное расположение элементов (для карточек пользователей)\n  horizontal: {\n    type: Boolean,\n    default: false\n  },\n  // Цвет фона карточки (светлый фон)\n  cardColor: {\n    type: String,\n    default: 'rgb(var(--light))'\n  },\n  // Цвет блоков скелетона (серый)\n  blockColor: {\n    type: String,\n    default: 'rgba(var(--white),0.25)'\n  },\n  // Цвет анимированной полосы (белый с прозрачностью)\n  highlightColor: {\n    type: String,\n    default: 'rgba(var(--white), 0.9)'\n  },\n  // Скорость анимации в секундах\n  animationDuration: {\n    type: Number,\n    default: 1.5\n  },\n  // Радиус закругления\n  borderRadius: {\n    type: String,\n    default: '0.5rem'\n  }\n});\n\n// Проверяем наличие слота по умолчанию\nconst hasDefaultSlot = computed(() => Boolean(slots.default));\n\n// Применяем CSS переменные для настройки стилей\nonMounted(() => {\n  const root = document.documentElement;\n  root.style.setProperty('--skeleton-card-color', props.cardColor);\n  root.style.setProperty('--skeleton-block-color', props.blockColor);\n  root.style.setProperty('--skeleton-highlight-color', props.highlightColor);\n  root.style.setProperty('--skeleton-animation-duration', `${props.animationDuration}s`);\n  root.style.setProperty('--skeleton-border-radius', props.borderRadius);\n});\n</script>\n\n<style scoped>\n.skeleton-wrapper {\n  width: 100%;\n  position: relative;\n  background-color: var(--skeleton-card-color);\n  padding: 1rem;\n}\n\n/* Стили для режима загрузки */\n.skeleton-wrapper--loading ::v-deep(*) {\n  color: transparent !important;\n  border-color: transparent !important;\n  position: relative;\n}\n\n.skeleton-wrapper--loading ::v-deep(img),\n.skeleton-wrapper--loading ::v-deep(svg),\n.skeleton-wrapper--loading ::v-deep(button),\n.skeleton-wrapper--loading ::v-deep(a) {\n  opacity: 0;\n}\n\n.skeleton-wrapper--loading ::v-deep(*::before),\n.skeleton-wrapper--loading ::v-deep(*::after) {\n  display: none !important;\n}\n\n.skeleton-wrapper--loading ::v-deep(*) {\n  position: relative;\n  background-color: var(--skeleton-block-color) !important;\n  border-radius: var(--skeleton-border-radius);\n  overflow: hidden;\n}\n\n.skeleton-wrapper--loading ::v-deep(*)::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  display: block !important;\n  animation: shimmer var(--skeleton-animation-duration) infinite;\n  background: linear-gradient(\n    90deg,\n    transparent 0%,\n    var(--skeleton-highlight-color) 50%,\n    transparent 100%\n  );\n}\n\n/* Стили для структурного скелетона */\n.skeleton-structure {\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n  width: 100%;\n}\n\n/* Горизонтальный скелетон для карточек пользователей */\n.skeleton-structure--horizontal {\n  flex-direction: row;\n  align-items: center;\n  flex-wrap: nowrap;\n}\n\n.skeleton-item {\n  background-color: var(--skeleton-block-color);\n  border-radius: var(--skeleton-border-radius);\n  position: relative;\n  overflow: hidden;\n}\n\n.skeleton-item::after {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  animation: shimmer var(--skeleton-animation-duration) infinite;\n  background: linear-gradient(\n    90deg,\n    transparent 0%,\n    var(--skeleton-highlight-color) 50%,\n    transparent 100%\n  );\n}\n\n/* Типы блоков */\n.skeleton-item--text {\n  height: 1rem;\n  width: 100%;\n}\n\n.skeleton-item--text-group {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n  flex: 1;\n}\n\n.skeleton-item--image {\n  width: 100%;\n  aspect-ratio: 16 / 9;\n}\n\n.skeleton-item--avatar {\n  width: 4rem;\n  height: 4rem;\n  border-radius: 50%;\n  flex-shrink: 0;\n}\n\n.skeleton-item--button {\n  height: 3rem;\n  width: 8rem;\n}\n\n.skeleton-item--circle {\n  border-radius: 50%;\n}\n\n.skeleton-item--action {\n  width: 2rem;\n  height: 2rem;\n  border-radius: 50%;\n  flex-shrink: 0;\n}\n\n.skeleton-item--actions-group {\n  display: flex;\n  gap: 0.5rem;\n  margin-left: auto;\n}\n\n.skeleton-item--square {\n  aspect-ratio: 1 / 1;\n}\n\n/* Размеры */\n.skeleton-item--small {\n  width: 30%;\n}\n\n.skeleton-item--medium {\n  width: 60%;\n}\n\n.skeleton-item--large {\n  width: 100%;\n}\n\n.skeleton-item--rounded {\n  border-radius: 50%;\n}\n\n/* Дефолтный скелетон */\n.skeleton-default {\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n  width: 100%;\n}\n\n/* Анимация движения полосы */\n@keyframes shimmer {\n  0% {\n    left: -100%;\n  }\n  100% {\n    left: 100%;\n  }\n}\n</style>",
            "name": "Skeleton.vue",
            "size": 5891,
            "type": "source"
          }
        ]
      },
      "Slider": {
        "_files": [
          {
            "path": "../../src/components/Slider/Slider.native.vue",
            "relativePath": "components/Slider/Slider.native.vue",
            "extension": ".vue",
            "content": "<template>\n  <div class=\"pos-relative\">\n    <!-- Loading State -->\n    <div v-if=\"isLoading\" class=\"h-20r radius-semi pos-relative w-100 bg-light\">\n      <Loader />\n    </div>\n    <!-- Empty State -->\n    <div v-else-if=\"!entitiesState.length\" class=\"bg-light radius-semi flex flex-center w-100 h-20r\">\n      <p class=\"text-gray-500\">{{t('title')}}</p>\n    </div>\n    <!-- Native Carousel -->\n    <div v-else class=\"carousel\" ref=\"carouselRef\">\n      <div class=\"carousel__container\" @scroll=\"handleScroll\">\n        <div \n          class=\"carousel__slide pd-nano\" \n          v-for=\"(entity, key, index) in entitiesState\" \n          :key=\"key\"\n        >\n          <transition name=\"fade\" mode=\"out-in\" appear>\n            <slot\n              :item=\"entity\"\n              :user=\"user\"\n            ></slot>\n          </transition>\n        </div>\n      </div>\n      \n      <!-- Navigation Dots (optional) -->\n      <div class=\"carousel__dots\" v-if=\"showDots && entitiesState.length > 1\">\n        <button \n          v-for=\"(_, index) in entitiesState\" \n          :key=\"index\"\n          class=\"carousel__dot\"\n          :class=\"{ 'carousel__dot--active': selectedIndex === index }\"\n          @click=\"scrollTo(index)\"\n        ></button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, onBeforeUnmount, watch } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useI18n } from 'vue-i18n'\nimport Loader from '@martyrs/src/components/Loader/Loader.vue'\n\n// Props for customization\nconst props = defineProps({\n  showDots: Boolean,\n  store: Object,\n  options: Object,\n  text: Object,\n  user: Object\n});\n\nconst router = useRouter()\nconst carouselRef = ref(null)\nconst entitiesState = ref([])\nconst isLoading = ref(true)\nconst selectedIndex = ref(0)\nconst autoplayInterval = ref(null)\nconst scrollTimeout = ref(null)\n\nconst { t } = useI18n({\n  messages: props.text\n})\n\n// Scroll to specific slide\nconst scrollTo = (index) => {\n  if (!carouselRef.value) return\n  \n  const container = carouselRef.value.querySelector('.carousel__container')\n  const slides = container.querySelectorAll('.carousel__slide')\n  \n  if (slides[index]) {\n    container.scrollTo({\n      left: slides[index].offsetLeft,\n      behavior: 'smooth'\n    })\n    \n    selectedIndex.value = index\n  }\n}\n\n// Handle scroll event with debounce\nconst handleScroll = () => {\n  // Clear previous timeout\n  if (scrollTimeout.value) {\n    clearTimeout(scrollTimeout.value)\n  }\n  \n  // Set a timeout to update the index when scrolling stops\n  scrollTimeout.value = setTimeout(() => {\n    updateSelectedIndex()\n  }, 50) // Small delay to ensure scroll has completed\n}\n\n// Update selected index when scrolling\nconst updateSelectedIndex = () => {\n  if (!carouselRef.value) return\n  \n  const container = carouselRef.value.querySelector('.carousel__container')\n  const slides = container.querySelectorAll('.carousel__slide')\n  \n  if (!slides.length) return\n  \n  const scrollPosition = container.scrollLeft\n  const slideWidth = slides[0].offsetWidth\n  \n  // Find current slide index based on scroll position\n  const index = Math.round(scrollPosition / slideWidth)\n  \n  // Ensure index is within bounds\n  const boundedIndex = Math.max(0, Math.min(index, entitiesState.value.length - 1))\n  \n  // Update selected index\n  selectedIndex.value = boundedIndex\n}\n\n// Setup autoplay functionality\nconst setupAutoplay = () => {\n  if (autoplayInterval.value) {\n    clearInterval(autoplayInterval.value)\n  }\n  \n  autoplayInterval.value = setInterval(() => {\n    const nextIndex = (selectedIndex.value + 1) % entitiesState.value.length\n    scrollTo(nextIndex)\n  }, 2000) // 2 seconds interval like in original\n}\n\nonMounted(async() => {\n  try {\n    entitiesState.value = await props.store.read(props.options)\n  } catch (error) {\n    console.error('Error loading entities:', error)\n    entitiesState.value = []\n  } finally {\n    isLoading.value = false\n  }\n  \n  // Initialize native carousel after entities are loaded\n  if (entitiesState.value.length && carouselRef.value) {\n    // Listen for scroll end using intersection observer for better performance\n    const container = carouselRef.value.querySelector('.carousel__container')\n    const slides = container.querySelectorAll('.carousel__slide')\n    \n    // Create intersection observer to detect when slides are visible\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          // Find the index of the visible slide\n          const slideIndex = Array.from(slides).indexOf(entry.target)\n          if (slideIndex !== -1) {\n            selectedIndex.value = slideIndex\n          }\n        }\n      })\n    }, {\n      root: container,\n      threshold: 0.7 // Consider slide visible when 70% is in view\n    })\n    \n    // Observe all slides\n    slides.forEach(slide => {\n      observer.observe(slide)\n    })\n    \n    // Add focus/blur events to pause autoplay on focus\n    container.addEventListener('focusin', () => {\n      if (autoplayInterval.value) {\n        clearInterval(autoplayInterval.value)\n      }\n    })\n    \n    container.addEventListener('focusout', () => {\n      setupAutoplay()\n    })\n    \n    // Stop autoplay on touch/mouse interaction\n    container.addEventListener('mousedown', () => {\n      if (autoplayInterval.value) {\n        clearInterval(autoplayInterval.value)\n      }\n    })\n    \n    container.addEventListener('touchstart', () => {\n      if (autoplayInterval.value) {\n        clearInterval(autoplayInterval.value)\n      }\n    })\n    \n    // Resume autoplay after interaction ends\n    container.addEventListener('mouseup', () => {\n      setupAutoplay()\n    })\n    \n    container.addEventListener('touchend', () => {\n      setupAutoplay()\n    })\n    \n    // Initialize autoplay\n    setupAutoplay()\n    \n    // Store observer for cleanup\n    carouselRef.value._observer = observer\n  }\n})\n\nonBeforeUnmount(() => {\n  // Clean up all resources\n  if (carouselRef.value) {\n    // Clean up intersection observer\n    if (carouselRef.value._observer) {\n      carouselRef.value._observer.disconnect()\n    }\n    \n    // Clean up event listeners\n    const container = carouselRef.value.querySelector('.carousel__container')\n    if (container) {\n      container.removeEventListener('focusin', () => {})\n      container.removeEventListener('focusout', () => {})\n      container.removeEventListener('mousedown', () => {})\n      container.removeEventListener('touchstart', () => {})\n      container.removeEventListener('mouseup', () => {})\n      container.removeEventListener('touchend', () => {})\n    }\n  }\n  \n  // Clear all timeouts and intervals\n  if (autoplayInterval.value) {\n    clearInterval(autoplayInterval.value)\n  }\n  \n  if (scrollTimeout.value) {\n    clearTimeout(scrollTimeout.value)\n  }\n})\n\n// Watch for changes in entities to reinitialize if needed\nwatch(entitiesState, (newValue) => {\n  if (newValue.length && carouselRef.value) {\n    // Reset to first slide\n    selectedIndex.value = 0\n    scrollTo(0)\n    \n    // Reset autoplay\n    setupAutoplay()\n  }\n})\n</script>\n\n<style scoped>\n.carousel {\n  position: relative;\n  width: 100%;\n  overflow: hidden;\n}\n\n.carousel__container {\n  display: flex;\n  scroll-snap-type: x mandatory;\n  overflow-x: scroll;\n  scrollbar-width: none; /* Firefox */\n  -ms-overflow-style: none; /* IE and Edge */\n  scroll-behavior: smooth;\n}\n\n.carousel__container::-webkit-scrollbar {\n  display: none; /* Chrome, Safari, Opera */\n}\n\n.carousel__slide {\n  flex: 0 0 100%;\n  width: 100%;\n  scroll-snap-align: start;\n  scroll-snap-stop: always;\n}\n\n/* Navigation dots */\n.carousel__dots {\n  display: flex;\n  justify-content: center;\n  gap: 0.5rem;\n  margin-top: 1rem;\n}\n\n.carousel__dot {\n  width: 0.625rem;\n  height: 0.625rem;\n  border-radius: 50%;\n  background-color: rgba(0, 0, 0, 0.2);\n  border: none;\n  padding: 0;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.carousel__dot--active {\n  background-color: rgba(0, 0, 0, 0.6);\n}\n\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.3s ease;\n}\n\n.fade-enter-from,\n.fade-leave-to {\n  opacity: 0;\n}\n</style>",
            "name": "Slider.native.vue",
            "size": 8126,
            "type": "source"
          },
          {
            "path": "../../src/components/Slider/Slider.vue",
            "relativePath": "components/Slider/Slider.vue",
            "extension": ".vue",
            "content": "<template>\n  <div class=\"pos-relative\">\n    <!-- Loading State -->\n    <div v-if=\"isLoading\" class=\"h-20r radius-semi pos-relative w-100 bg-light\">\n      <Loader />\n    </div>\n\n    <!-- Empty State -->\n    <div v-else-if=\"!entitiesState.length\" class=\"bg-light radius-semi  flex flex-center  w-100 h-20r\">\n      <p class=\"text-gray-500\">{{t('title')}}</p>\n    </div>\n\n    <!-- Carousel -->\n    <div v-else class=\"embla\" ref=\"emblaNode\">\n      <div class=\"embla__container\">\n        <div \n          class=\"embla__slide pd-nano\" \n          v-for=\"(entity, key, index) in entitiesState\" \n          :key=\"key\"\n        >\n          <transition name=\"fade\" mode=\"out-in\" appear>\n            <slot\n              :item=\"entity\"\n              :user=\"user\"\n            ></slot>\n          </transition>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, onUnmounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useI18n } from 'vue-i18n'\n\nimport emblaCarouselVue from 'embla-carousel-vue'\nimport Autoplay from 'embla-carousel-autoplay'\n\nimport Loader from '@martyrs/src/components/Loader/Loader.vue'\n\n// Props for customization\nconst props = defineProps({\n  store: Object,\n  options: Object,\n  text: Object,\n  user: Object\n});\n\nconst router = useRouter()\nconst entitiesState = ref([])\nconst isLoading = ref(true);\nconst selectedIndex = ref(0);\n\n\n// Конфигурация автоплея\nconst autoplayOptions = {\n  delay: 2000,\n  jump: false,\n  stopOnInteraction: false,\n  stopOnMouseEnter: false,\n  stopOnFocusIn: true,\n  stopOnLastSnap: false,\n  rootNode: (emblaRoot) => emblaRoot.parentElement\n}\n\n// Инициализация карусели\nconst [emblaNode, emblaApi] = emblaCarouselVue(\n  { loop: true }, \n  [Autoplay(autoplayOptions)]\n)\n\n// Методы управления каруселью\nconst scrollTo = (index) => emblaApi.value?.scrollTo(index)\nconst onInit = () => {\n  if (emblaApi.value) {\n    scrollSnaps.value = emblaApi.value.scrollSnapList()\n  }\n}\nconst onSelect = () => {\n  if (emblaApi.value) {\n    selectedIndex.value = emblaApi.value.selectedScrollSnap()\n  }\n}\n\nconst { t } = useI18n({\n  messages: props.text\n})\n\nonMounted(async() => {\n  try {\n    entitiesState.value = await props.store.read(props.options);\n  } catch (error) {\n    console.error('Error loading entities:', error);\n    entitiesState.value = [];\n  } finally {\n    isLoading.value = false;\n  }\n  // Инициализируем карусель\n  onInit()\n  onSelect()\n  \n  // Добавляем слушатели событий\n  if (emblaApi.value) {\n    emblaApi.value.on('reInit', onInit)\n    emblaApi.value.on('reInit', onSelect)\n    emblaApi.value.on('select', onSelect)\n  }\n})\n\n// Очистка слушателей при размонтировании\nonUnmounted(() => {\n  if (emblaApi.value) {\n    emblaApi.value.off('reInit', onInit)\n    emblaApi.value.off('reInit', onSelect)\n    emblaApi.value.off('select', onSelect)\n  }\n})\n\n</script>\n\n<style scoped>\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.3s ease;\n}\n\n.fade-enter-from,\n.fade-leave-to {\n  opacity: 0;\n}\n</style>",
            "name": "Slider.vue",
            "size": 3006,
            "type": "source"
          }
        ]
      },
      "Spoiler": {
        "_files": [
          {
            "path": "../../src/components/Spoiler/Spoiler.vue",
            "relativePath": "components/Spoiler/Spoiler.vue",
            "extension": ".vue",
            "content": "<template>\n  <div>\n    <div @click=\"toggleSpoiler\" class=\"flex-v-center flex-nowrap flex\">\n      <slot name=\"header\" :isOpen=\"showSpoiler\"></slot>\n    </div>\n    <transition\n      name=\"collapse\"\n      @enter=\"onEnter\"\n      @after-enter=\"onAfterEnter\"\n      @leave=\"onLeave\"\n    >\n      <div v-show=\"showSpoiler\" class=\"spoiler\" ref=\"spoilerContent\">\n        <slot name=\"content\"></slot>\n      </div>\n    </transition>\n  </div>\n</template>\n<script setup>\nimport { ref, onMounted } from 'vue';\n\nconst props = defineProps({\n  status: {\n    type: Boolean,\n    default: false\n  }\n});\n\nconst showSpoiler = ref(false);\nconst spoilerContent = ref(null);\n\nonMounted(() => {\n  if (props.status) {\n    showSpoiler.value = props.status;\n  }\n});\n\nconst toggleSpoiler = () => {\n  showSpoiler.value = !showSpoiler.value;\n};\n\n// Анимация открытия\nconst onEnter = (el) => {\n  el.style.height = '0';\n  void el.offsetHeight; // force reflow\n  el.style.height = el.scrollHeight + 'px';\n};\n\nconst onAfterEnter = (el) => {\n  el.style.height = 'auto';\n};\n\n// Анимация закрытия\nconst onLeave = (el) => {\n  el.style.height = el.scrollHeight + 'px';\n  void el.offsetHeight; // force reflow\n  el.style.height = '0';\n};\n\ndefineExpose({\n  showSpoiler\n});\n</script>\n<style lang=\"scss\">\n.spoiler {\n  overflow: hidden;\n  transition: height 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n}\n</style>",
            "name": "Spoiler.vue",
            "size": 1355,
            "type": "source"
          }
        ]
      },
      "Status": {
        "_files": [
          {
            "path": "../../src/components/Status/Status.vue",
            "relativePath": "components/Status/Status.vue",
            "extension": ".vue",
            "content": "<template>\n\t<div class=\"pd-small error-wrapper\">\n\t\t<div class=\"\n\t\t\tflex-nowrap flex\n\t\t\tradius-small\n\t\t\tpd-small\n\t\t\tt-white \n\t\t\tbg-fourth\n\t\t\">\n\t\t\t<p class=\"w-100\">\n\t\t\t\t{{data.message}}\n\t\t\t\t<!-- <span class=\"t-semi\">Ошибка: {{status}} </span> -->\n\t\t\t\t<br>\n\t\t\t\t<!-- <span>Сообщение: {{message}}</span> -->\n\t\t\t</p>\n\t\t\t\n\t\t\t<IconCross @click=\"closeError()\"  class=\"cursor-pointer hover-scale-1 i-regular z-index-5\"/>\n\t\t</div>\n\t</div>\n</template>\n\n\n<script setup=\"props\">\n\timport { computed } from 'vue'\n\timport IconCross from '@martyrs/src/modules/icons/navigation/IconCross.vue';\n\n\tconst emits = defineEmits('close')\n\n\tconst props = defineProps({\n\t  status: String,\n\t  message: String,\n\t  show: Boolean,\n\t  data: Object\n\t})\n\n\tfunction closeError () {\n\t\temits('close')\n\t} \n</script>\n\n<style lang=\"scss\">\n\t.error-wrapper {\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\tright: 0;\n\t\topacity: 0.9\n\t}\n</style>\n\n\n",
            "name": "Status.vue",
            "size": 890,
            "type": "source"
          }
        ]
      },
      "Tab": {
        "_files": [
          {
            "path": "../../src/components/Tab/Tab.vue",
            "relativePath": "components/Tab/Tab.vue",
            "extension": ".vue",
            "content": "<template>\n  <div class=\"flex-nowrap flex-v-center flex pos-relative\">\n    <button  \n      v-for=\"(tab, index) in tabs\" \n      :key=\"index\" \n      @click=\"handleTabClick(index, tab)\" \n      class=\"z-index-1 t-center cursor-pointer\"\n      :style=\"isSelected(index, tab) ? 'background: rgb(var(--main)) !important' : ''\"\n      :class=\"[\n        isSelected(index, tab) ? 'bg-main' : '',\n        tabClass ? tabClass : 'pd-small pd-r-medium pd-l-medium w-max pd-small radius-small'\n      ]\"\n    >\n      {{tab.name || tab.label}}\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, watch } from 'vue'\n\nconst emit = defineEmits(['update:selected', 'tab-click']);\n\nconst props = defineProps({\n  tabs: Array,\n  tabClass: String,\n  selected: [String, Number],\n  modelValue: [String, Number],\n  callback: Function\n})\n\nconst selectedTab = ref(0)\n\n// Handle both v-model and selected prop for backward compatibility\nconst updateSelectedIndex = () => {\n  if (props.modelValue !== undefined) {\n    const selectedIndex = props.tabs.findIndex(tab => tab.value === props.modelValue)\n    if (selectedIndex !== -1) {\n      selectedTab.value = selectedIndex\n    }\n  } else if (props.selected !== undefined) {\n    const selectedIndex = props.tabs.findIndex(tab => tab.value === props.selected)\n    if (selectedIndex !== -1) {\n      selectedTab.value = selectedIndex\n    }\n  }\n}\n\n// Initial setup\nupdateSelectedIndex()\n\n// Watch for changes in selected or modelValue props\nwatch(() => props.selected, updateSelectedIndex)\nwatch(() => props.modelValue, updateSelectedIndex)\n\n// Check if tab is selected\nconst isSelected = (index, tab) => {\n  if (props.modelValue !== undefined) {\n    return tab.value === props.modelValue\n  } else if (props.selected !== undefined) {\n    return tab.value === props.selected\n  }\n  return index === selectedTab.value\n}\n\n// Handle tab click\nfunction handleTabClick(index, tab) {\n  selectedTab.value = index\n  \n  // Emit both events for flexibility\n  emit('update:selected', tab.value)\n  emit('tab-click', { index, tab })\n  \n  // For v-model support\n  if (props.modelValue !== undefined) {\n    emit('update:modelValue', tab.value)\n  }\n  \n  // Call callback if provided\n  if (props.callback) props.callback(tab)\n}\n</script>\n\n<style lang=\"scss\">\n.tab-selector {\n  position: absolute;\n  width: 50%;\n  height: 100%;\n  left: 0;\n  top: 0;\n  z-index: 0;\n  transition: left 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n}\n</style>",
            "name": "Tab.vue",
            "size": 2439,
            "type": "source"
          }
        ]
      },
      "Table": {
        "_files": [
          {
            "path": "../../src/components/Table/StatusBadge.vue",
            "relativePath": "components/Table/StatusBadge.vue",
            "extension": ".vue",
            "content": "<script setup>\ndefineProps({\n  value: {\n    type: Object,\n    required: true\n  }\n})\n</script>\n\n<template>\n  <span \n    class=\"status-badge\"\n    :style=\"{ backgroundColor: value.color || '#ddd' }\"\n  >\n    {{ value }}\n  </span>\n</template>\n\n<style scoped>\n.status-badge {\n  padding: 4px 8px;\n  border-radius: 12px;\n  font-size: 0.875rem;\n  color: white;\n  display: inline-block;\n}\n</style>",
            "name": "StatusBadge.vue",
            "size": 387,
            "type": "source"
          },
          {
            "path": "../../src/components/Table/Table.vue",
            "relativePath": "components/Table/Table.vue",
            "extension": ".vue",
            "content": "<!-- src/components/Table/Table.vue -->\n<script setup>\nimport { defineProps, computed } from 'vue'\n\nconst props = defineProps({\n  // принимаем уже отформатированный набор строк\n  items: {\n    type: Array,\n    required: true,\n    default: () => []\n  },\n  // массив колонок { key, label }\n  columns: {\n    type: Array,\n    required: true,\n    default: () => []\n  }\n})\n\n// если вам нужен геттер для вложенных свойств\nconst getNestedValue = (obj, path) => path.split('.').reduce((o, k) => (o ? o[k] : undefined), obj) \n</script>\n\n<template>\n  <div class=\"o-x-scroll\">\n    <table class=\"w-100 custom-table\">\n      <thead class=\"t-left bg-light t-black\">\n        <tr>\n          <th v-for=\"col in columns\" :key=\"col.key\" class=\"pd-small t-medium\">\n            {{ col.label }}\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"(row, rowIndex) in props.items\" :key=\"rowIndex\">\n          <td v-for=\"col in columns\" :key=\"col.key\" class=\"pd-small br-t br-solid br-light t-left\">\n            <!-- Передаем полный объект row и текущее значение -->\n            <slot :name=\"`cell-${col.key}`\" :value=\"getNestedValue(row, col.key)\" :row=\"row\">\n              {{ getNestedValue(row, col.key) }}\n            </slot>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.custom-table {\n  border-collapse: collapse;\n  td {\n    vertical-align: middle;\n  }\n}\n</style>",
            "name": "Table.vue",
            "size": 1427,
            "type": "source"
          },
          {
            "path": "../../src/components/Table/TableCell.vue",
            "relativePath": "components/Table/TableCell.vue",
            "extension": ".vue",
            "content": "<script setup>\nimport { defineProps, h } from 'vue'\n\nconst props = defineProps({\n  value: {\n    type: [String, Number, Object, Array],\n    required: true\n  },\n  column: {\n    type: Object,\n    required: true\n  }\n})\n\nconst renderContent = () => {\n  // If component is specified, use it\n  if (props.column.component) {\n    return h(props.column.component, { value: props.value })\n  }\n  \n  // If formatter is specified, use it\n  if (props.column.formatter) {\n    return props.column.formatter(props.value)\n  }\n  \n  // If value is object, format it safely\n  if (typeof props.value === 'object' && props.value !== null) {\n    try {\n      // Only display enumerable properties\n      const safeObj = Object.keys(props.value).reduce((acc, key) => {\n        // Skip functions and complex objects to prevent circular refs\n        const val = props.value[key]\n        if (typeof val !== 'function' && typeof val !== 'object') {\n          acc[key] = val\n        }\n        return acc\n      }, {})\n      return JSON.stringify(safeObj)\n    } catch (e) {\n      return '[Complex Object]'\n    }\n  }\n  \n  // Default rendering\n  return props.value\n}\n</script>\n\n<template>\n  <component \n    :is=\"column.wrapper || 'div'\" \n    class=\"table-cell-content\"\n  >\n    <component \n      v-if=\"column.component\" \n      :is=\"column.component\" \n      :value=\"value\" \n    />\n    <template v-else>\n      {{ renderContent() }}\n    </template>\n  </component>\n</template>\n\n<style scoped>\n.table-cell-content {\n  width: 100%;\n  height: 100%;\n}\n</style>",
            "name": "TableCell.vue",
            "size": 1514,
            "type": "source"
          }
        ]
      },
      "Text": {
        "_files": [
          {
            "path": "../../src/components/Text/Text.vue",
            "relativePath": "components/Text/Text.vue",
            "extension": ".vue",
            "content": "<template>\n  <span @click=\"toggleShow\" class=\"\">\n    {{ shownText }}\n    <span v-if=\"isTruncated && showToggleText\" class=\"cursor-pointer t-second\">{{ showMoreText }}</span>\n  </span>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue';\n\n// Максимальная длина, текст и опциональный параметр отображения текста переключателя, передаваемые как параметры\nconst props = defineProps({\n  maxLen: { type: Number, required: true },\n  text:   { type: String, required: true },\n  showToggleText: { type: Boolean, default: false }\n})\n\n// Управление показом полного текста\nconst showFull = ref(false);\n\n// Компонент вычисляет обрезанный текст\nconst truncatedText = computed(() => {\n  return props.text.length > props.maxLen ? props.text.slice(0, props.maxLen) + '...' : props.text;\n});\nconst fullText = computed(() => props.text);\n\n// Переключение показа полного текста\nconst toggleShow = () => {\n  showFull.value = !showFull.value;\n};\n\n// Текст, который нужно показать\nconst shownText = computed(() => showFull.value ? fullText.value : truncatedText.value);\n\n// Вычисляем, когда текст обрезан\nconst isTruncated = computed(() => props.text.length > props.maxLen);\n\n// Вычисляем текст для кнопки \"Показать больше/Скрыть\"\nconst showMoreText = computed(() => showFull.value ? 'Hide' : 'Show more');\n\n</script>",
            "name": "Text.vue",
            "size": 1306,
            "type": "source"
          }
        ]
      },
      "Tooltip": {
        "_files": [
          {
            "path": "../../src/components/Tooltip/Tooltip.vue",
            "relativePath": "components/Tooltip/Tooltip.vue",
            "extension": ".vue",
            "content": "<template>\n  <div class=\"cursor-pointer tooltip-container\" @mouseover=\"showTooltip\" @mouseleave=\"hideTooltip\">\n    <slot></slot>\n    <div  class=\"tooltip-content\" :style=\"tooltipStyle\">\n      {{ text }}\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive } from 'vue';\n\nconst props = defineProps({\n  text: {\n    type: String,\n    required: true\n  }\n});\n\nconst visible = ref(false);\n\nconst tooltipStyle = reactive({\n  position: 'absolute',\n  width: 'max-content',\n  zIndex: 1000,\n  background: '#333',\n  color: '#fff',\n  padding: '5px 10px',\n  borderRadius: '3px',\n  fontSize: '14px',\n  display: 'none',\n});\n\nfunction showTooltip(event) {\n  visible.value = true;\n  tooltipStyle.left = `${(event.clientX / 100) + 10 }px`;\n  tooltipStyle.top = `${(event.clientY / 100) + 10 }px`;\n  tooltipStyle.display = 'block';\n}\n\nfunction hideTooltip() {\n  visible.value = false;\n  tooltipStyle.display = 'none';\n}\n</script>\n\n<style >\n.tooltip-container {\n  position: relative;\n  display: inline-block;\n}\n\n.tooltip-content {\n  pointer-events: none;\n}\n</style>",
            "name": "Tooltip.vue",
            "size": 1062,
            "type": "source"
          }
        ]
      },
      "Tree": {
        "_files": [
          {
            "path": "../../src/components/Tree/Tree.vue",
            "relativePath": "components/Tree/Tree.vue",
            "extension": ".vue",
            "content": "<template>\n  <VueDraggableNext\n    v-bind=\"dragOptions\" \n    class=\"dragArea list-group w-full\"\n    :list=\"items\"\n    :handle=\"'.my-handle'\"\n    @change=\"handleChange\"\n  >\n    <div v-for=\"item in items\" :key=\"item._id\" class=\"mn-t-thin  radius-medium mn-b-thin\">\n      <slot\n        :item=\"item\"\n      >\n      </slot>\n      <Tree \n        :items=\"item.children\"\n        :state=\"state\"\n        @update=\"emitChange\"\n        class=\"pd-l-medium\"\n        v-slot=\"{ item }\"\n      >\n        <slot\n          :item=\"item\"\n          >\n        </slot>\n      </Tree>\n    </div>\n  </VueDraggableNext>\n</template>\n\n<script setup>\nimport { VueDraggableNext } from 'vue-draggable-next';\n\nimport Tree from './Tree.vue';\n\nconst props = defineProps({\n  items: Array,\n   state: Array\n});\n\nconst emits = defineEmits(['update']);\n\nconst dragOptions = {\n  animation: 200,\n  group: 'category',\n  ghostClass: 'ghost'\n};\n\nfunction findCategoryAndUpdateParent(items, targetId, parentId = null) {\n  for (const item of items) {\n    if (item._id === targetId) {\n      item.parent = parentId;\n      return item;\n    }\n    \n    if (item.children) {\n      const found = findCategoryAndUpdateParent(item.children, targetId, item._id);\n      if (found) {\n        return found;\n      }\n    }\n  }\n  return null;\n}\n\nfunction updateOrders(items, startOrder = 0) {\n  let currentOrder = startOrder;\n  \n  items.forEach(item => {\n    item.order = currentOrder++;\n    \n    if (item.children?.length) {\n      currentOrder = updateOrders(item.children, currentOrder);\n    }\n  });\n  \n  return currentOrder;\n}\n\nfunction handleChange(event) {\n\n    console.log('event order is', event)\n  if (!event.added && !event.moved) return;\n  \n  const targetId = event.added ? \n    event.added.element._id : \n    props.items[event.moved.newIndex]._id;\n    \n  const updatedCategory = findCategoryAndUpdateParent(props.state, targetId);\n\n  if (!updatedCategory) return;\n  \n  // Обновляем order для всего дерева категорий\n  updateOrders(props.state);\n  console.log('hi')\n  // Отправляем обновленную категорию\n  emits('update', updatedCategory);\n}\n\nfunction emitChange(event) {\n  emits('update', event);\n}\n</script> ",
            "name": "Tree.vue",
            "size": 2151,
            "type": "source"
          }
        ]
      },
      "Upload": {
        "_files": [
          {
            "path": "../../src/components/Upload/Upload.vue",
            "relativePath": "components/Upload/Upload.vue",
            "extension": ".vue",
            "content": "<template>\n  <div :class=\"[$attrs.class, { 'bg-fourth-nano': validation }]\" class=\"flex-center flex-nowrap flex\">\n    <!-- Label -->\n    <div v-if=\"label\" class=\"t-transp mn-r-small\">\n      <span>{{label}}</span>\n    </div>\n\n    <div v-if=\"fileURL\" class=\"flex-nowrap flex w-100  flex-v-center\">\n      <a :href=\"fileURL\" class=\"w-100\" target=\"_blank\">{{ fileURL }}</a>\n\n      <IconCross  \n        @click=\"removeFile\" \n        class=\"cursor-pointer  t-center flex-center flex radius-extra i-medium bg-red pd-micro\"\n      />\n\n    </div>\n\n    <div v-else class=\"w-100\">\n      <!-- Input / File -->\n      <input \n        @change=\"onFileChange\"\n        type=\"file\"\n        class=\"w-100\"\n        :placeholder=\"placeholder\"\n        :multiple=\"multiple\"\n        id=\"photo\"\n        name=\"photo\"\n      >\n    </div>\n  </div>\n\n  <!-- Validation -->\n  <transition mode=\"out-in\" name=\"fade\">\n    <div v-if=\"validation\" class=\"mn-t-thin mn-b-thin invalid-feedback\">\n      * {{validation.message}}\n    </div>\n  </transition>\n</template>\n\n<script setup>\nimport { ref, computed, watch} from 'vue'\nimport axios from 'axios';\n\nimport IconCross from '@martyrs/src/modules/icons/navigation/IconCross.vue';\n\nconst emit = defineEmits(['update:field', 'focus', 'blur', 'file-change']);\n\nconst props = defineProps({\n  field: String,\n  label: null,\n  type: {\n    type: String,\n    default: 'file'\n  },\n  placeholder: 'Upload a file',\n  validation: false,\n  uploadPath: {\n    type: String,\n    default: '/files'\n  },\n  multiple: {\n    type: Boolean,\n    default: false\n  }\n});\n\nconst fileURL = ref(props.field);\nconst fileInput = ref(null);\n\nwatch(() => props.field, (newValue) => {\n  fileURL.value = newValue;\n});\n\n// Handles file change event\n\nasync function onFileChange(e) {\n\n  let file = e.target.files[0];\n  let formData = new FormData();\n\n  formData.append(\"file\", file);\n\n  try {\n    const $axios = axios.create({baseURL: process.env.API_URL, withCredentials: true}) \n\n    let response = await $axios.post(`/api/upload/${props.type}?folderName=${encodeURIComponent(props.uploadPath)}`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n\n    fileURL.value = response.data[0].filepath;\n    emit('file-change', fileURL.value);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nconst removeFile = () => {\n  fileURL.value = null;\n  emit('update:field', null); // Обновляем значение, связанное с v-model:field\n  emit('file-change', null); // Посылаем событие об изменении файла\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  input, span {\n    line-height: 1;\n    color: inherit;\n  }\n</style>\n",
            "name": "Upload.vue",
            "size": 2606,
            "type": "source"
          }
        ]
      },
      "UploadImage": {
        "_files": [
          {
            "path": "../../src/components/UploadImage/UploadImage.vue",
            "relativePath": "components/UploadImage/UploadImage.vue",
            "extension": ".vue",
            "content": "<template>\n  <div \n    @click=\"onComponentClick\"\n    @drop=\"onDrop\"\n    @dragover.prevent\n    class=\"image-upload-area flex-v-center flex-h-center flex\">\n      <img loading=\"lazy\" \n        v-if=\"imageUrl || photo\" \n        :src=\"(FILE_SERVER_URL || '') + (imageUrl || photo)\"\n        alt=\"Uploaded image\" \n        class=\"w-100 h-100 object-fit-cover\"\n        />\n      \n      <div v-else class=\"flex-v-center flex-h-center flex w-100 h-100 bg-second\" >\n        <svg class=\"i-medium\" width=\"104\" height=\"104\" viewBox=\"0 0 104 104\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path  fill=\"rgb(var(--white))\" d=\"M21.2784 37.2973C18.8466 34.6628 18.8466 30.6098 21.2784 27.9753L47.2179 2.03584C48.6364 0.81993 50.2577 0.211974 51.8789 0.211974C53.5001 0.211974 55.1213 0.81993 56.5399 2.03584L82.4793 27.9753C84.9111 30.6098 84.9111 34.6628 82.4793 37.2973C79.8448 39.7291 75.7918 39.7291 73.1573 37.2973L58.3637 22.301V71.5454C58.3637 75.1932 55.5266 78.0303 51.8789 78.0303C48.2311 78.0303 45.394 75.1932 45.394 71.5454V22.301L30.6004 37.2973C27.966 39.7291 23.9129 39.7291 21.2784 37.2973ZM97.2729 71.5454C100.921 71.5454 103.758 74.3825 103.758 78.0303V97.4849C103.758 101.133 100.921 103.97 97.2729 103.97H6.48486C2.83713 103.97 0 101.133 0 97.4849V78.0303C0 74.3825 2.83713 71.5454 6.48486 71.5454H38.9092C38.9092 78.6382 44.7861 84.5151 51.8789 84.5151C58.9717 84.5151 64.8486 78.6382 64.8486 71.5454H97.2729ZM87.5456 92.6212C90.1801 92.6212 92.4092 90.392 92.4092 87.7576C92.4092 85.1231 90.1801 82.8939 87.5456 82.8939C84.9111 82.8939 82.682 85.1231 82.682 87.7576C82.682 90.392 84.9111 92.6212 87.5456 92.6212Z\"/>\n        </svg>\n      </div>\n      \n      <input type=\"file\" name=\"file\" ref=\"fileInput\" @change=\"onFileChange\" style=\"display: none\"/>\n  </div>\n</template>\n\n<script setup>\nimport { ref, watch } from 'vue';\nimport axios from 'axios';\n\nconst imageUrl = ref(null);\nconst fileInput = ref(null);\n\nconst props = defineProps([\n  'uploadPath', // only necessary prop\n  'photo' // new prop for holding the image url\n]);\n\nconst emit = defineEmits(['update:photo', 'error']);\n\nwatch(props, ({photo}) => {\n  if(photo) imageUrl.value = photo;\n});\n\nfunction onComponentClick() {\n  fileInput.value.click();\n}\n\nasync function onFileChange(e) {\n  let file = e.target.files[0];\n  if (!file) {\n    console.error(\"No file selected\");\n    return;\n  }\n  \n  let formData = new FormData();\n  formData.append(\"file\", file);\n\n  console.log(\"Sending file:\", file.name); // Логируем имя файла перед отправкой\n\n  try {\n    const $axios = axios.create({ baseURL: process.env.API_URL, withCredentials: true }); \n\n    let response = await $axios.post(`/api/upload/multiple?folderName=${encodeURIComponent(props.uploadPath)}`, formData);\n    console.log(\"Upload response:\", response); // Логируем ответ сервера\n    imageUrl.value = response.data[0].filepath;\n    emit('update:photo', imageUrl.value);\n  } catch (error) {\n    emit('error', error);\n    console.error(\"Upload error:\", error); // Логируем ошибку\n  }\n}\n\n\nfunction onDrop(e) {\n  e.preventDefault();\n  onFileChange({\n    target: {\n      files: e.dataTransfer.files\n    }\n  });\n}\n</script>\n",
            "name": "UploadImage.vue",
            "size": 3149,
            "type": "source"
          }
        ]
      },
      "UploadImageMultiple": {
        "_files": [
          {
            "path": "../../src/components/UploadImageMultiple/UploadImageMultiple.vue",
            "relativePath": "components/UploadImageMultiple/UploadImageMultiple.vue",
            "extension": ".vue",
            "content": "<template>\n  <div \n    @click=\"onComponentClick\"\n    @drop=\"onDrop\"\n    @dragover.prevent\n    class=\"cursor-pointer t-black w-100 flex-v-center flex-h-center flex pos-relative\"\n  >\n    <transition name=\"moveFromTop\" mode=\"out-in\">\n      <div v-if=\"!loading\" class=\"t-center\">\n        <IconUpload\n          style=\"max-height: 4rem;\"\n          class=\"w-100 mn-b-thin h-100\"\n          fill=\"rgb(var(--main))\"\n        />\n\n        <span v-if=\"options.showText || options.showTitle\" class=\"mn-t-medium  mn-b-medium d-block h3 t-black\">{{ text.title }}</span>\n        <span v-if=\"options.showText\" class=\"mn-b-small t-transp d-block \">{{ text.subtitle }}</span>\n        <span  v-if=\"options.showText\"class=\"mn-b-small uppercase p-small t-medium d-block\">or</span>\n\n        <button  v-if=\"options.showText\" class=\"cursor-pointer mn-b-small br-2px br-main br-solid radius-extra pd-l-thin pd-r-thin  t-main\">Browse Files</button>\n\n        <span  v-if=\"options.showText\" class=\"uppercase p-small t-medium d-block \">Maximum size: 2MB</span>\n      </div>\n      <Loader v-else class=\"pos-absolute\"/>\n    </transition>\n\n    <input type=\"file\" ref=\"fileInput\" @change=\"onFileChange\" multiple style=\"display: none\"/>\n  </div>\n</template>\n\n<script setup>\nimport { ref, watch } from 'vue';\nimport axios from 'axios';\n\nimport Loader from '@martyrs/src/components/Loader/Loader.vue';\nimport PlaceholderImage from '@martyrs/src/modules/icons/placeholders/PlaceholderImage.vue'\nimport IconUpload from '@martyrs/src/modules/icons/navigation/IconUpload.vue'\n\nconst images = ref([]);\nconst loading = ref(false);\nconst fileInput = ref(null);\n\nconst props = defineProps({\n  uploadPath: {\n    type: Object,\n    required: true\n  },\n  options: {\n    type: Object,\n    default: () => ({\n      mimeType: ['jpg', 'png', 'gif'],\n      maxSize: 10 * 1024 * 1024,\n      showText: true,\n      showTitle: true\n    })\n  },\n  text: {\n    type: Object,\n    default: () => ({\n      title: 'Drag & Drop Your Images Here',\n      subtitle: 'Files supported: JPG, PNG, GIF'\n    })\n  }\n});\n\nconst emit = defineEmits(['update:images']);\n\nfunction onComponentClick() {\n  fileInput.value.click();\n}\n\nasync function onFileChange(e) {\n  loading.value = true;\n\n  let files = e.target.files;\n  let formData = new FormData();\n\n  for (const file of files) {\n    formData.append(\"file\", file);\n  }\n\n\n  try {\n    const $axios = axios.create({ baseURL: process.env.API_URL, withCredentials: true }); \n\n    let response = await $axios.post(`/api/upload/multiple?folderName=${encodeURIComponent(props.uploadPath)}`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    response.data.forEach(file => {\n      images.value.push(file.filepath); // push each file path to the images array\n    });\n    emit('update:images', images.value);\n    loading.value = false;\n  } catch (error) {\n    console.error(error);\n    loading.value = false;\n  }\n}\n\nfunction onDrop(e) {\n  e.preventDefault();\n  onFileChange({\n    target: {\n      files: e.dataTransfer.files\n    }\n  });\n}\n</script>\n",
            "name": "UploadImageMultiple.vue",
            "size": 3052,
            "type": "source"
          }
        ]
      }
    },
    "configurator": {
      "router": {
        "_files": [
          {
            "path": "../../src/configurator/router/configurator.router.js",
            "relativePath": "configurator/router/configurator.router.js",
            "extension": ".js",
            "content": "import layoutConfigurator from '../components/layouts/layoutConfigurator.vue';\n\nconst configurator = [\n  {\n    path: 'configurator',\n    name: 'Configurator',\n    component: layoutConfigurator,\n    children: [\n      {\n        path: '',\n        name: 'Styles',\n        component: () => import(/* webpackChunkName: \"signin\" */ '../components/pages/Styles.vue'),\n      },\n    ],\n  },\n];\n\nexport default configurator;\n",
            "name": "configurator.router.js",
            "size": 414,
            "type": "source"
          }
        ]
      },
      "components": {
        "layouts": {
          "_files": [
            {
              "path": "../../src/configurator/components/layouts/layoutConfigurator.vue",
              "relativePath": "configurator/components/layouts/layoutConfigurator.vue",
              "extension": ".vue",
              "content": "<template>\n\t<section id=\"account\" class=\"cols-2-1_3 gap-medium pd-big\">\n    <!-- ---------------------------------------------------------------- -->\n    <!-- 02. Page Tabs  -->\n    <!-- ---------------------------------------------------------------- -->\n    <div class=\"pd-medium menu-tabs\">\n      123\n      <!-- {{store.auth.state.access.roles}} -->\n       <!-- <button v-if=\"store.auth.state.access.roles.includes('ROLE_ADMIN')\" @click=\"$router.push('/account/community')\" :class=\"{'product-tab-active': $route.path === '/account/community'}\" class=\"mn-b-small product-tab\"> -->\n        <!-- Blog -->\n      <!-- </button> -->\n\n      <!-- <button v-if=\"store.auth.state.access.roles.includes('ROLE_ADMIN')\" @click=\"$router.push('/account/gallery')\" :class=\"{'product-tab-active': $route.path === '/account/gallery'}\" class=\"mn-b-medium product-tab\"> -->\n        <!-- Gallery -->\n      <!-- </button> -->\n      <button @click=\"logout()\" class=\"w-100 mn-t-semi bg-main button\">Выйти</button>\n    </div>\n    \n\n    <div class=\"w-100\">\n      <router-view  v-slot=\"{ Component, route }\">\n        <transition  name=\"scaleIn\" mode=\"out-in\">\n          <component ref=\"page\" :key=\"route.path\" :is=\"Component\" />\n        </transition>\n      </router-view>\n    </div>\n \n  </section>\n</template>\n\n\n<script setup>\nimport { computed, onMounted,reactive,toRefs } from 'vue'\n\nimport { useRoute,useRouter } from 'vue-router'\nimport { useStore } from '@/store';\n\nconst store = useStore()\n\nconst route = useRoute()\nconst router = useRouter()\n\nlet data = reactive({currentTab: 'user'})\nlet reactiveData = toRefs(data)\nfunction changeTab (tab) {data.currentTab = tab; console.log(data.currentTab) }\n\n\nfunction logout () {\n  store.auth.actions.logout()\n  router.push({name: 'Sign In'})\n}\n\n</script>\n\n<style lang=\"scss\">\n\n</style>\n",
              "name": "layoutConfigurator.vue",
              "size": 1810,
              "type": "source"
            }
          ]
        },
        "pages": {
          "_files": [
            {
              "path": "../../src/configurator/components/pages/Styles.vue",
              "relativePath": "configurator/components/pages/Styles.vue",
              "extension": ".vue",
              "content": "<template>\n\t<h2 class=\"mn-b-small \">Colors</h2>\n\t<div v-for=\"color in colors\" class=\"bg-light radius-big pd-medium mn-b-small mn-b-big cols-1\">\n\t\t<div class=\"flex-nowrap flex\">\n\t\t\t<div\n\t\t\t\t:class=\"`i-medium flex-center flex radius-big bg-${color.name}`\"\n\t\t\t>\n\t\t\t</div>\n\t\t\t<h3 class=\"mn-b-medium \">{{color.name}}</h3>\n\t\t</div>\n\t\t\n\t\t<div class=\"flex-nowrap flex\">\n\t\t\t<div \n\t\t\t\tv-for=\"subcolor in color.colors\"\n\t\t\t\t:class=\"`mn-r-small w-100 h-8r flex-center flex radius-big bg-${subcolor}`\"\n\t\t\t>\n\t\t\t\t<span class=\"uppercase t-semi p-small\">{{subcolor}}</span>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script setup>\n\n\tlet colors = [\n\t\t{\n\t\t\tname: 'main',\n\t\t\tcolors: [\n\t\t\t\t'main-extra',\n\t\t\t\t'main-big',\n\t\t\t\t'main-semi',\n\t\t\t\t'main-medium',\n\t\t\t\t'main-regular',\n\t\t\t\t'main-small',\n\t\t\t\t'main-thin',\n\t\t\t\t'main-micro',\n\t\t\t\t'main-nano',\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tname: 'second',\n\t\t\tcolors: [\n\t\t\t\t'second-extra',\n\t\t\t\t'second-big',\n\t\t\t\t'second-semi',\n\t\t\t\t'second-medium',\n\t\t\t\t'second-regular',\n\t\t\t\t'second-small',\n\t\t\t\t'second-thin',\n\t\t\t\t'second-micro',\n\t\t\t\t'second-nano',\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tname: 'third',\n\t\t\tcolors: [\n\t\t\t\t'third-extra',\n\t\t\t\t'third-big',\n\t\t\t\t'third-semi',\n\t\t\t\t'third-medium',\n\t\t\t\t'third-regular',\n\t\t\t\t'third-small',\n\t\t\t\t'third-thin',\n\t\t\t\t'third-micro',\n\t\t\t\t'third-nano',\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tname: 'fourth',\n\t\t\tcolors: [\n\t\t\t\t'fourth-extra',\n\t\t\t\t'fourth-big',\n\t\t\t\t'fourth-semi',\n\t\t\t\t'fourth-medium',\n\t\t\t\t'fourth-regular',\n\t\t\t\t'fourth-small',\n\t\t\t\t'fourth-thin',\n\t\t\t\t'fourth-micro',\n\t\t\t\t'fourth-nano',\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tname: 'fifth',\n\t\t\tcolors: [\n\t\t\t\t'fifth-extra',\n\t\t\t\t'fifth-big',\n\t\t\t\t'fifth-semi',\n\t\t\t\t'fifth-medium',\n\t\t\t\t'fifth-regular',\n\t\t\t\t'fifth-small',\n\t\t\t\t'fifth-thin',\n\t\t\t\t'fifth-micro',\n\t\t\t\t'fifth-nano',\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tname: 'black',\n\t\t\tcolors: [\n\t\t\t\t'black-extra',\n\t\t\t\t'black-big',\n\t\t\t\t'black-semi',\n\t\t\t\t'black-medium',\n\t\t\t\t'black-regular',\n\t\t\t\t'black-small',\n\t\t\t\t'black-thin',\n\t\t\t\t'black-micro',\n\t\t\t\t'black-nano',\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tname: 'white',\n\t\t\tcolors: [\n\t\t\t\t'white-extra',\n\t\t\t\t'white-big',\n\t\t\t\t'white-semi',\n\t\t\t\t'white-medium',\n\t\t\t\t'white-regular',\n\t\t\t\t'white-small',\n\t\t\t\t'white-thin',\n\t\t\t\t'white-micro',\n\t\t\t\t'white-nano',\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tname: 'white',\n\t\t\tcolors: [\n\t\t\t\t'white-transp-10',\n\t\t\t\t'white-transp-20',\n\t\t\t\t'white-transp-30',\n\t\t\t\t'white-transp-40',\n\t\t\t\t'white-transp-50',\n\t\t\t\t'white-transp-60',\n\t\t\t\t'white-transp-70',\n\t\t\t\t'white-transp-80',\n\t\t\t\t'white-transp-90',\n\t\t\t],\n\t\t},\n\t\t// 'l-main',\n\t\t// 'second',\n\t\t// 'l-second',\n\t\t// 'transparent',\n\t\t// 'black',\n\t\t// 'grey',\n\t\t// 'light',\n\t\t// 'white',\n\t\t// 'red',\n\t\t// 'light-red'\n\t]\n\n</script>\n\n\t--main:      \t\t0,255,136; \n\t--light-main:  \t\trgb(var(--main)), 0.1;\n\t--second:    \t\t34,102,255;\n\t--light-second: \trgb(var(--second)), 0.1;\n\t--transparent:   0,0,0,0;\n\t// Main and secondary colors\n\n\t// Black and white colors\n\t--black:      \t\t10,10,10;\n\t--dark:      \t\t36,36,36; \t\n\t--grey:      \t\t245,249,247; \n\t--light:     \t\t249,251,252; \n\t--white:     \t\t255,255,255;\n\t// Tones\n\t--red: \t\t\t\t255,20,20;\n\t--light-red: \t\t255,235,235;\n\t// For brands\n\t--youtube:\t\t\t252,13,27;\n\t--telegram:\t\t\tlinear-gradient(0deg, #1D93D2 0%, #38B0E3 100%), #000000;\n\t--twitter:\t\t\t29,155,240;\n\t--instagram:\t\t233,89,80;\n\t--reddit:\t\t\t255,69,0;",
              "name": "Styles.vue",
              "size": 3180,
              "type": "source"
            }
          ]
        }
      }
    },
    "_files": [
      {
        "path": "../../src/main.js",
        "relativePath": "main.js",
        "extension": ".js",
        "content": "// Define components\n// ------------------------------------- //\nimport {\n  Address,\n  Breadcrumbs,\n  Button,\n  Checkbox,\n  Chips,\n  Countdown,\n  DatePicker,\n  Dropdown,\n  EmptyState,\n  Error,\n  Feed,\n  Field,\n  FieldBig,\n  FieldPhone,\n  FieldTags,\n  // Footer,\n  // Header,\n  Loader,\n  LocationMarker,\n  Map,\n  Marquee,\n  Menu,\n  MenuItem,\n  Popup,\n  Radio,\n  Select,\n  SelectMulti,\n  // Navigation,\n  // Search,\n  Shader,\n  Slider,\n  Spoiler,\n  Status,\n  Tab,\n  Text,\n  Tooltip,\n  Upload,\n  UploadImage,\n  UploadImageMultiple,\n} from './components.js';\n\nexport default {\n  install: app => {\n    app.component('Address', () => import('./components/Address/Address.vue'));\n    app.component('Button', () => import('./components/Button/Button.vue'));\n    app.component('Checkbox', () => import('./components/Checkbox/Checkbox.vue'));\n    app.component('Dropdown', () => import('./components/Dropdown/Dropdown.vue'));\n    app.component('Error', () => import('./components/Error/Error.vue'));\n    app.component('Field', () => import('./components/Field/Field.vue'));\n    app.component('FieldPhone', () => import('./components/FieldPhone/FieldPhone.vue'));\n    app.component('LocationMarker', () => import('./components/LocationMarker/LocationMarker.vue'));\n    app.component('Map', () => import('./components/Map/Map.vue'));\n    app.component('Popup', () => import('./components/Popup/Popup.vue'));\n    app.component('Radio', () => import('./components/Radio/Radio.vue'));\n    app.component('Select', () => import('./components/Select/Select.vue'));\n    app.component('SelectMulti', () => import('./components/SelectMulti/SelectMulti.vue'));\n    app.component('Spoiler', () => import('./components/Spoiler/Spoiler.vue'));\n    app.component('Tab', () => import('./components/Tab/Tab.vue'));\n    app.component('Tooltip', () => import('./components/Tooltip/Tooltip.vue'));\n    app.component('Text', () => import('./components/Text/Text.vue'));\n    app.component('Menu', () => import('./components/Menu/Menu.vue'));\n    app.component('MenuItem', () => import('./components/Menu/MenuItem.vue'));\n    app.component('Upload', () => import('./components/Upload/Upload.vue'));\n    app.component('UploadImage', () => import('./components/UploadImage/UploadImage.vue'));\n    app.component('UploadImageMultiple', () => import('./components/UploadImageMultiple/UploadImageMultiple.vue'));\n    app.component('Breadcrumbs', () => import('./components/Breadcrumbs/Breadcrumbs.vue'));\n    app.component('Chips', () => import('./components/Chips/Chips.vue'));\n    app.component('Countdown', () => import('./components/Countdown/Countdown.vue'));\n    app.component('DatePicker', () => import('./components/DatePicker/DatePicker.vue'));\n    app.component('EmptyState', () => import('./components/EmptyState/EmptyState.vue'));\n    app.component('Feed', () => import('./components/Feed/Feed.vue'));\n    app.component('FieldBig', () => import('./components/FieldBig/FieldBig.vue'));\n    app.component('FieldTags', () => import('./components/FieldTags/FieldTags.vue'));\n    // app.component('Footer',       () => import('./components/Footer/Footer.vue'));\n    // app.component('Header',       () => import('./components/Header/Header.vue'));\n    app.component('Loader', () => import('./components/Loader/Loader.vue'));\n    // app.component('Navigation',   () => import('./components/Navigation/Navigation.vue'));\n    // app.component('Search',       () => import('./components/Search/Search.vue'));\n    app.component('Shader', () => import('./components/Shader/Shader.vue'));\n    app.component('Slider', () => import('./components/Slider/Slider.vue'));\n    app.component('Status', () => import('./components/Status/Status.vue'));\n    app.component('Marquee', () => import('./components/Marquee/Marquee.vue'));\n    app.component('Media', () => import('./components/Media/Media.vue'));\n  },\n};\n\nexport {\n  Address,\n  Breadcrumbs,\n  Button,\n  Checkbox,\n  Chips,\n  Countdown,\n  DatePicker,\n  Dropdown,\n  EmptyState,\n  Error,\n  Feed,\n  Field,\n  FieldBig,\n  FieldPhone,\n  FieldTags,\n  // Footer,\n  // Header,\n  Loader,\n  LocationMarker,\n  Map,\n  Marquee,\n  Menu,\n  MenuItem,\n  Popup,\n  Radio,\n  Select,\n  SelectMulti,\n  // Navigation,\n  // Search,\n  Shader,\n  Slider,\n  Spoiler,\n  Status,\n  Tab,\n  Text,\n  Tooltip,\n  Upload,\n  UploadImage,\n  UploadImageMultiple,\n};\n",
        "name": "main.js",
        "size": 4333,
        "type": "source"
      }
    ],
    "modules": {
      "auth": {
        "_files": [
          {
            "path": "../../src/modules/auth/auth.client.js",
            "relativePath": "modules/auth/auth.client.js",
            "extension": ".js",
            "content": "// Store\nimport * as storeAuth from './views/store/auth.js';\nimport * as storeTwofa from './views/store/twofa.js';\nimport * as storeUsers from './views/store/users.js';\n\n// Router\nimport routerAuth from './views/router/auth.js';\nimport routerUsers from './views/router/users.js';\n\n// Middlewares\nimport * as validationAuth from '@martyrs/src/modules/auth/views/middlewares/auth.validation.js';\n\n// Views\nimport Auth from './views/components/layouts/Auth.vue';\nimport EnterCode from './views/components/pages/EnterCode.vue';\nimport EnterPassword from './views/components/pages/EnterPassword.vue';\nimport Invite from './views/components/pages/Invite.vue';\nimport Profile from './views/components/pages/Profile.vue';\nimport ProfileEdit from './views/components/pages/ProfileEdit.vue';\nimport ResetPassword from './views/components/pages/ResetPassword.vue';\nimport SignIn from './views/components/pages/SignIn.vue';\nimport SignUp from './views/components/pages/SignUp.vue';\n\n// Importing sections components\nimport FeaturedUsers from './views/components/sections/FeaturedUsers.vue';\nimport SliderFeatures from './views/components/sections/SliderFeatures.vue';\n\n// Пример функции инициализации для модуля аутентификации\nfunction initializeAuth(app, store, router, options = {}) {\n  const route = options.route || 'Home';\n\n  router.addRoute(route, routerAuth);\n  router.addRoute(route, routerUsers);\n\n  store.addStore('auth', storeAuth);\n  store.addStore('twofa', storeTwofa);\n  store.addStore('users', storeUsers);\n\n  app.provide('store', store);\n}\n\nconst ModuleAuth = {\n  initialize: initializeAuth,\n  views: {\n    store: {\n      storeAuth,\n      storeTwofa,\n      storeUsers,\n    },\n    router: {\n      routerAuth,\n      routerUsers,\n    },\n    middlewares: {\n      validationAuth,\n    },\n    components: {\n      // Layout\n      Auth,\n      // Pages\n      EnterCode,\n      Invite,\n      EnterPassword,\n      ResetPassword,\n      SignUp,\n      SignIn,\n      Profile,\n      ProfileEdit,\n      // Sections\n      SliderFeatures,\n      FeaturedUsers,\n    },\n  },\n};\n\nexport default ModuleAuth;\n",
            "name": "auth.client.js",
            "size": 2086,
            "type": "source"
          },
          {
            "path": "../../src/modules/auth/auth.server.js",
            "relativePath": "modules/auth/auth.server.js",
            "extension": ".js",
            "content": "import visitors from '@martyrs/src/modules/auth/controllers/middlewares/visitor.logger.js';\nimport authRoutes from './controllers/routes/auth.routes.js';\nimport twofaRoutes from './controllers/routes/twofa.routes.js';\nimport usersRoutes from './controllers/routes/users.routes.js';\nimport AuthController from './controllers/services/auth.service.js';\nimport TwoFaController from './controllers/services/twofa.service.js';\nimport UsersController from './controllers/services/users.service.js';\nimport RequestModel from './models/request.model.js';\nimport RoleModel from './models/role.model.js';\nimport UserModel from './models/user.model.js';\nimport VisitorModel from './models/visitor.model.js';\nfunction initializeAuth(app, db, origins, publicPath) {\n  // Настраиваем модели в объекте базы данных\n  db.role = RoleModel(db);\n  db.user = UserModel(db);\n  db.visitor = VisitorModel(db);\n  db.request = RequestModel(db);\n  // Настраиваем маршруты, если объект приложения передан\n  if (app) {\n    authRoutes(app, db, origins, publicPath);\n    twofaRoutes(app, db, origins, publicPath);\n    usersRoutes(app, db, origins, publicPath);\n    const visitorModule = visitors(db);\n    app.use(visitorModule.visitorLogger);\n  }\n}\nexport const models = {\n  RoleModel,\n  UserModel,\n  VisitorModel,\n};\nexport const routes = {\n  authRoutes,\n  twofaRoutes,\n  usersRoutes,\n};\nexport const controllers = {\n  AuthController,\n  TwoFaController,\n  UsersController,\n};\nexport { initializeAuth as initialize };\nexport default {\n  initialize: initializeAuth,\n  models,\n  routes,\n  controllers,\n};\n",
            "name": "auth.server.js",
            "size": 1572,
            "type": "source"
          }
        ],
        "controllers": {
          "middlewares": {
            "_files": [
              {
                "path": "../../src/modules/auth/controllers/middlewares/authJwt.js",
                "relativePath": "modules/auth/controllers/middlewares/authJwt.js",
                "extension": ".js",
                "content": "import jwt from 'jsonwebtoken';\nconst middlewareFactory = db => {\n  const User = db.user;\n  const Role = db.role;\n  const verifyToken = (continueOnFail = false) => {\n    return async (req, res, next) => {\n      try {\n        let token = req.headers['x-access-token'];\n        if (!token && req.cookies.user) {\n          let user = JSON.parse(req.cookies.user);\n          token = user.accessToken;\n        }\n        if (req.headers['x-service-key']) {\n          const serviceKey = req.headers['x-service-key'];\n          const validServiceKey = process.env.SERVICE_KEY; // Укажи ключ для сервиса в env\n          if (serviceKey !== validServiceKey) {\n            return res.status(403).send({ message: 'Unauthorized: Invalid service key' });\n          }\n          // Если это запрос от микросервиса, пропускаем аутентификацию пользователя\n          req.isServiceRequest = true; // Помечаем, что это запрос от другого сервиса\n          return next();\n        }\n        if (!token) {\n          req.userId = null;\n          if (continueOnFail) {\n            return next();\n          } else {\n            return res.status(401).send({ message: 'Unauthorized: No token provided' });\n          }\n        }\n        const decoded = jwt.verify(token, process.env.SECRET_KEY);\n        req.userId = decoded._id;\n        req.user = {\n          _id: decoded._id,\n        };\n        next();\n      } catch (err) {\n        req.userId = null;\n        if (continueOnFail) {\n          next();\n        } else {\n          res.status(401).send({ message: 'Unauthorized: Invalid token' });\n        }\n      }\n    };\n  };\n  const checkRole = roleToCheck => async (req, res, next) => {\n    try {\n      const user = await User.findById(req.userId).exec();\n      if (!user) {\n        return res.status(404).send({ message: 'User Not found.' });\n      }\n      const roles = await Role.find({ _id: { $in: user.roles } }).exec();\n      for (let role of roles) {\n        if (role.name === roleToCheck) {\n          next();\n          return;\n        }\n      }\n      res.status(403).send({ message: `Require ${roleToCheck} Role!` });\n    } catch (err) {\n      res.status(500).send({ message: err.message });\n    }\n  };\n  const isAdmin = checkRole('admin');\n  const isModerator = checkRole('moderator');\n  return {\n    verifyToken,\n    isAdmin,\n    isModerator,\n  };\n};\nexport default middlewareFactory;\n",
                "name": "authJwt.js",
                "size": 2366,
                "type": "source"
              },
              {
                "path": "../../src/modules/auth/controllers/middlewares/authSecret.js",
                "relativePath": "modules/auth/controllers/middlewares/authSecret.js",
                "extension": ".js",
                "content": "import crypto from 'crypto';\nconst middlewareFactory = () => {\n  const verifySecret = (method, endpoint, secret) => async (req, res, next) => {\n    const requestSignature = req.headers.signature;\n    const signature = crypto\n      .createHmac('sha256', secret)\n      .update(method + endpoint)\n      .digest('hex');\n    if (signature === requestSignature) {\n      return next();\n    }\n    res.status(403).send('Forbidden');\n  };\n  return { verifySecret };\n};\nexport default middlewareFactory;\n",
                "name": "authSecret.js",
                "size": 493,
                "type": "source"
              },
              {
                "path": "../../src/modules/auth/controllers/middlewares/index.js",
                "relativePath": "modules/auth/controllers/middlewares/index.js",
                "extension": ".js",
                "content": "// Импортируем модули middleware\nimport authJwtModule from './authJwt.js';\nimport authSecretModule from './authSecret.js';\nimport verifySignUpModule from './verifySignUp.js';\nimport verifyUserModule from './verifyUser.js';\nimport verifyInvitesModule from './verifyInvites.js';\n\nconst middlewareIndexFactory = db => {\n  const authJwt = authJwtModule(db);\n  const authSecret = authSecretModule();\n  const verifySignUp = verifySignUpModule(db);\n  const verifyUser = verifyUserModule(db);\n  const verifyInvites = verifyInvitesModule(db);\n  \n  return {\n    authJwt,\n    authSecret,\n    verifySignUp,\n    verifyUser,\n    verifyInvites,\n  };\n};\n\nexport default middlewareIndexFactory;",
                "name": "index.js",
                "size": 677,
                "type": "source"
              },
              {
                "path": "../../src/modules/auth/controllers/middlewares/verifyInvites.js",
                "relativePath": "modules/auth/controllers/middlewares/verifyInvites.js",
                "extension": ".js",
                "content": "import * as mongodb from 'mongodb';\nconst { ObjectId } = mongodb;\nconst middlewareFactory = db => {\n  const User = db.user;\n  const Invite = db.invite;\n  const Membership = db.membership;\n  const checkInviteExist = async (req, res, next) => {\n    for (let invite of req.body.invites) {\n      let query;\n      if (invite.contact.includes('@')) {\n        query = { invitedEmail: invite.contact };\n      } else {\n        query = { invitedPhone: invite.contact };\n      }\n      query['owner.target'] = req.body.owner.target;\n      const userInvite = await Invite.findOne(query).exec();\n      if (userInvite) {\n        console.log(userInvite);\n        res.status(400).send({ message: 'Инвайт c таким email или телефоном уже создан!' });\n        return;\n      }\n    }\n    next();\n  };\n  const checkUsersExist = async (req, res, next) => {\n    for (let invite of req.body.invites) {\n      let query;\n      if (invite.contact.includes('@')) {\n        query = { email: invite.contact };\n      } else {\n        query = { phone: invite.contact };\n      }\n      const user = await User.findOne(query).exec();\n      console.log(req.params);\n      if (user) {\n        const membership = await Membership.findOne({\n          user: new ObjectId(user._id),\n          'owner.target': req.body.owner.target,\n        }).exec();\n        if (membership) {\n          console.log(membership);\n          res.status(400).send({\n            message: 'Пользователь с таким email или телефоном уже добавлен в организацию!',\n          });\n          return;\n        }\n      }\n    }\n    next();\n  };\n  return {\n    checkInviteExist,\n    checkUsersExist,\n  };\n};\nexport default middlewareFactory;\n",
                "name": "verifyInvites.js",
                "size": 1664,
                "type": "source"
              },
              {
                "path": "../../src/modules/auth/controllers/middlewares/verifySignUp.js",
                "relativePath": "modules/auth/controllers/middlewares/verifySignUp.js",
                "extension": ".js",
                "content": "// Фабрика для middleware\nconst middlewareFactory = db => {\n  const User = db.user;\n  const Role = db.role;\n  const checkDuplicateUsernameOrEmail = async (req, res, next) => {\n    const { type, email, phone } = req.body;\n    console.log(req.body);\n    let query;\n    if (type === 'phone' && phone) {\n      query = { phone };\n    }\n    if (type === 'email' && email) {\n      query = { email };\n    }\n    try {\n      const user = await User.findOne(query).exec();\n      if (user) {\n        console.log(`USER_ALREADY_REGISTERED`);\n        res.status(400).send({ errorCode: 'USER_ALREADY_REGISTERED' });\n        return;\n      }\n      next();\n    } catch (err) {\n      console.log(err);\n      res.status(500).send({ message: err.message });\n    }\n  };\n  const checkRolesExisted = (req, res, next) => {\n    // if (req.body.roles) {\n    //   for (let i = 0; i < req.body.roles.length; i++) {\n    //     if (!ROLES.includes(req.body.roles[i])) {\n    //       console.log(`Failed! Role ${req.body.roles[i]} does not exist!`)\n    //       res.status(400).send({\n    //         message: `Failed! Role ${req.body.roles[i]} does not exist!`\n    //       });\n    //       return;\n    //     }\n    //   }\n    // }\n    next();\n  };\n  return {\n    checkDuplicateUsernameOrEmail,\n    checkRolesExisted,\n  };\n};\nexport default middlewareFactory;\n",
                "name": "verifySignUp.js",
                "size": 1327,
                "type": "source"
              },
              {
                "path": "../../src/modules/auth/controllers/middlewares/verifyUser.js",
                "relativePath": "modules/auth/controllers/middlewares/verifyUser.js",
                "extension": ".js",
                "content": "// Создаем фабрику для middleware\nconst middlewareFactory = db => {\n  const User = db.user;\n  const Role = db.role;\n  const checkDuplicateUsername = async (req, res, next) => {\n    const { username } = req.body;\n    // Если username не передан, пропускаем проверку\n    if (!username) {\n      return next();\n    }\n    try {\n      // Ищем пользователя с таким же username, исключая текущего пользователя\n      const user = await User.findOne({\n        username,\n        _id: { $ne: req.body._id }, // Исключаем текущего пользователя из поиска\n      });\n      if (user) {\n        console.log(`USERNAME_ALREADY_USED`);\n        res.status(400).send({ errorCode: 'USERNAME_ALREADY_USED' });\n        return;\n      }\n      next();\n    } catch (err) {\n      console.log(err);\n      res.status(500).send({ message: err.message });\n    }\n  };\n  // Ваш middleware для проверки существования пользователя\n  const checkUserExist = async (req, res, next) => {\n    const { type, email, phone } = req.body;\n    let query;\n    if (type === 'phone' && phone) {\n      query = { phone };\n    }\n    if (type === 'email' && email) {\n      query = { email };\n    }\n    try {\n      const user = await User.findOne(query).exec();\n      if (!user) {\n        console.log(query);\n        res.status(400).send({ errorCode: 'USER_NOT_REGISTERED_YET' });\n        return;\n      }\n      next();\n    } catch (err) {\n      res.status(500).send({ message: err.message });\n    }\n  };\n  return {\n    checkDuplicateUsername,\n    checkUserExist,\n  };\n};\nexport default middlewareFactory;\n",
                "name": "verifyUser.js",
                "size": 1547,
                "type": "source"
              },
              {
                "path": "../../src/modules/auth/controllers/middlewares/visitor.logger.js",
                "relativePath": "modules/auth/controllers/middlewares/visitor.logger.js",
                "extension": ".js",
                "content": "import crypto from 'crypto';\nconst fingerprintCache = new Map();\nconst generateFingerprint = req => {\n  const { ip, headers } = req;\n  const userAgent = headers['user-agent'];\n  const acceptLanguage = headers['accept-language'];\n  const key = `${ip}-${userAgent}-${acceptLanguage}`;\n  if (fingerprintCache.has(key)) {\n    return fingerprintCache.get(key);\n  }\n  const hash = crypto.createHash('sha256');\n  hash.update(key);\n  const digest = hash.digest('hex');\n  fingerprintCache.set(key, digest);\n  return digest;\n};\nconst modelsFactory = db => {\n  const Visitor = db.visitor;\n  const Request = db.request;\n  const visitorLogger = async (req, res, next) => {\n    const fingerprint = generateFingerprint(req);\n    try {\n      // Check if the visitor already exists\n      let visitor = await Visitor.findOne({ fingerprint: fingerprint });\n      // If visitor does not exist, create a new one\n      if (!visitor) {\n        visitor = new Visitor({\n          ip: req.ip,\n          userAgent: req.headers['user-agent'],\n          acceptLanguage: req.headers['accept-language'],\n          fingerprint: fingerprint,\n        });\n        await visitor.save();\n      }\n      // Log the request in a separate model\n      const newRequest = new Request({\n        visitor: visitor._id,\n        path: req.path,\n        method: req.method,\n        timestamp: new Date(),\n      });\n      await newRequest.save();\n      next();\n    } catch (error) {\n      console.error('Error processing visitor and request data:', error);\n      next();\n    }\n  };\n  return {\n    visitorLogger,\n  };\n};\nexport default modelsFactory;\n",
                "name": "visitor.logger.js",
                "size": 1600,
                "type": "source"
              }
            ]
          },
          "routes": {
            "_files": [
              {
                "path": "../../src/modules/auth/controllers/routes/auth.routes.js",
                "relativePath": "modules/auth/controllers/routes/auth.routes.js",
                "extension": ".js",
                "content": "import middlewareFactory from '../middlewares/index.js';\nimport controllerFactory from '../services/auth.service.js';\nimport controllerFactoryTwofa from '../services/twofa.service.js';\nexport default (function (app, db, origins) {\n  const controller = controllerFactory(db);\n  const controllerTwofa = controllerFactoryTwofa(db);\n  const { verifySignUp, verifyUser, authJwt } = middlewareFactory(db);\n  app.post(\n    '/api/auth/signup',\n    [\n      verifySignUp.checkDuplicateUsernameOrEmail,\n      // verifySignUp.checkRolesExisted\n    ],\n    controller.signup\n  );\n  app.post('/api/auth/signin', controller.signin);\n  app.post('/api/auth/reset-password', [verifyUser.checkUserExist], controllerTwofa.sendcode);\n  app.post('/api/auth/update-password', controller.updatePassword);\n});\n",
                "name": "auth.routes.js",
                "size": 784,
                "type": "source"
              },
              {
                "path": "../../src/modules/auth/controllers/routes/twofa.routes.js",
                "relativePath": "modules/auth/controllers/routes/twofa.routes.js",
                "extension": ".js",
                "content": "import middlewareFactory from '@martyrs/src/modules/auth/controllers/middlewares/index.js';\nimport controllerFactory from '../services/twofa.service.js';\nexport default (function (app, db) {\n  const controller = controllerFactory(db);\n  const { verifySignUp, verifyUser } = middlewareFactory(db);\n  app.post('/api/twofa/sendcode', [verifySignUp.checkDuplicateUsernameOrEmail], controller.sendcode);\n  app.post('/api/twofa/sendcodereset', [verifyUser.checkUserExist], controller.sendcode);\n});\n",
                "name": "twofa.routes.js",
                "size": 493,
                "type": "source"
              },
              {
                "path": "../../src/modules/auth/controllers/routes/users.routes.js",
                "relativePath": "modules/auth/controllers/routes/users.routes.js",
                "extension": ".js",
                "content": "import middlewareFactory from '../middlewares/index.js';\nimport controllerFactory from '../services/users.service.js';\nexport default (function (app, db, origins) {\n  const controller = controllerFactory(db);\n  // Middlewares\n  const { authJwt, verifyUser } = middlewareFactory(db);\n  // Create a User\n  app.post('/api/users', [authJwt.verifyToken(), verifyUser.checkDuplicateUsername], controller.create);\n  // Fetch Users\n  app.get('/api/users', controller.read);\n  // Update User by _id\n  app.put('/api/users/:_id', [authJwt.verifyToken(), verifyUser.checkDuplicateUsername], controller.update);\n  // Delete User by _id\n  app.delete('/api/users/:_id', [authJwt.verifyToken()], controller.remove);\n});\n",
                "name": "users.routes.js",
                "size": 704,
                "type": "source"
              }
            ]
          },
          "services": {
            "_files": [
              {
                "path": "../../src/modules/auth/controllers/services/auth.service.js",
                "relativePath": "modules/auth/controllers/services/auth.service.js",
                "extension": ".js",
                "content": "import bcrypt from 'bcryptjs';\nimport jwt from 'jsonwebtoken';\nimport { Types } from 'mongoose';\nimport { verifyAppleIdToken } from '../utils/verifyAppleIdToken.js';\nconst ObjectId = { Types }.Types.ObjectId;\n// Factory\nconst controllerFactory = db => {\n  const User = db.user;\n  const Membership = db.membership;\n  const Department = db.department;\n  const Organization = db.organization;\n  const Invite = db.invite;\n  const Role = db.role;\n  const signin = async (req, res) => {\n    const { type, email, phone, authorization } = req.body;\n    let query;\n    let payload = null;\n    if (type === 'phone' && phone) {\n      query = { phone };\n    }\n    if (type === 'email' && email) {\n      query = { email };\n    }\n    if (type === 'apple' && authorization.id_token) {\n      payload = await verifyAppleIdToken(authorization.id_token);\n      if (payload) {\n        query = { apple_id: payload.sub };\n      } else {\n        return res.status(401).send({ errorCode: 'INVALID_APPLE_ID_TOKEN' });\n      }\n    }\n    try {\n      let user = await User.findOne(query).populate('roles').exec();\n      if (type !== 'apple' && !user) {\n        return res.status(404).send({ errorCode: 'USER_NOT_FOUND' });\n      }\n      if (type === 'apple' && !user) {\n        const { firstName, lastName } = req.body.user.name;\n        const newUser = new User({\n          apple_id: payload.sub,\n          email: payload.email,\n          profile: { name: `${firstName} ${lastName}` },\n        });\n        await newUser.save();\n        user = newUser;\n      } else if (!user) {\n        return res.status(404).send({ errorCode: 'USER_NOT_FOUND' });\n      }\n      if (type === 'email' || type === 'phone') {\n        const passwordIsValid = bcrypt.compareSync(req.body.password, user.password);\n        if (!passwordIsValid) {\n          return res.status(401).send({ errorCode: 'INCORRECT_PASSWORD_ENTERED', accessToken: null });\n        }\n      }\n      const token = jwt.sign(\n        {\n          _id: user._id,\n        },\n        process.env.SECRET_KEY,\n        {\n          expiresIn: 864000,\n        }\n      );\n      const authorities = user.roles.map(role => `ROLE_${role.name.toUpperCase()}`);\n      res.status(200).send({\n        _id: user._id,\n        username: user.username,\n        avatar: user.profile.photo,\n        phone: user.phone,\n        email: user.email,\n        roles: authorities,\n        accessToken: token,\n      });\n    } catch (err) {\n      console.error(err);\n      res.status(500).send({ message: err });\n    }\n  };\n  const signup = async (req, res) => {\n    const { type, email, phone, inviteCode } = req.body;\n    let invite = null;\n    if (inviteCode) {\n      try {\n        invite = await Invite.findOne({ code: inviteCode, status: 'active' });\n        if (!invite) {\n          return res.status(400).json({ errorCode: 'INVALID_INVITATION_CODE' });\n        }\n      } catch (err) {\n        return res.status(500).send({ message: err });\n      }\n    }\n    let userData = {\n      password: bcrypt.hashSync(req.body.password, 8),\n    };\n    if (type === 'email') {\n      userData.email = email;\n    } else if (type === 'phone') {\n      userData.phone = phone;\n    }\n    const user = new User(userData);\n    try {\n      await user.save();\n    } catch (err) {\n      console.log(err);\n      return res.status(500).send({ message: err });\n    }\n    try {\n      const role = await Role.findOne({ name: 'user' });\n      user.roles = [role._id];\n      await user.save();\n    } catch (err) {\n      console.log(err);\n      return res.status(500).send({ message: err });\n    }\n    if (invite) {\n      invite.status = 'used';\n      await invite.save();\n      const newMembership = new Membership({\n        type: 'organization',\n        user: new ObjectId(user._id),\n        target: new ObjectId(invite.owner.target),\n        role: invite.role,\n        label: invite.role,\n      });\n      try {\n        await newMembership.save();\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    const token = jwt.sign(\n      {\n        _id: user._id,\n        organization: invite ? invite.organization : null,\n      },\n      process.env.SECRET_KEY,\n      {\n        expiresIn: 86400,\n      }\n    );\n    res.status(200).send({\n      _id: user._id,\n      phone: user.phone,\n      email: user.email,\n      accessToken: token,\n      organization: {\n        _id: invite ? invite.organization : null,\n      },\n    });\n  };\n  const updatePassword = async (req, res) => {\n    try {\n      const { phone, email, password, type } = req.body;\n      let query;\n      if (type === 'phone' && phone) {\n        query = { phone };\n      }\n      if (type === 'email' && email) {\n        query = { email };\n      }\n      if (!query || !password) {\n        return res.status(400).send({ errorCode: 'MISSING_REQUIRED_PARAMETERS' });\n      }\n      const salt = await bcrypt.genSalt(8); // Generating a salt asynchronously\n      const hashedPassword = await bcrypt.hash(password, salt); // Hashing the password asynchronously\n      const user = await User.findOneAndUpdate(query, {\n        password: hashedPassword,\n      })\n        .populate('roles')\n        .exec();\n      if (!user) {\n        return res.status(404).send({ errorCode: 'ERROR_UPDATING_USER' });\n      }\n      const token = jwt.sign({ _id: user._id }, process.env.SECRET_KEY, {\n        expiresIn: 86400,\n      });\n      const authorities = user.roles.map(role => `ROLE_${role.name.toUpperCase()}`);\n      return res.status(200).send({\n        _id: user._id,\n        username: user.username,\n        avatar: user.profile.photo,\n        phone: user.phone,\n        email: user.email,\n        roles: authorities,\n        accessToken: token,\n      });\n    } catch (err) {\n      return res.status(500).send({ message: err.message });\n    }\n  };\n  return {\n    signin,\n    signup,\n    updatePassword,\n  };\n};\nexport default controllerFactory;\n",
                "name": "auth.service.js",
                "size": 5864,
                "type": "source"
              },
              {
                "path": "../../src/modules/auth/controllers/services/twofa.service.js",
                "relativePath": "modules/auth/controllers/services/twofa.service.js",
                "extension": ".js",
                "content": "import mailing from '@martyrs/src/modules/globals/controllers/utils/mailing.js';\nconst { sendEmail, sendSms } = mailing;\nconst controllerFactory = db => {\n  const sendcode = async (req, res) => {\n    const code = Math.floor(1000 + Math.random() * 9000);\n    const type = req.body.type;\n    const method = req.body.method;\n    if (type === 'email') {\n      const emailSent = await sendEmail(req.body.email, `${process.env.APP_NAME} Verification Code`, `Your ${process.env.APP_NAME} verification code is ${code}`);\n      if (emailSent) {\n        res.send({ code, type, method });\n      } else {\n        console.log(emailSent);\n        res.status(500).send('Failed to send email');\n      }\n    }\n    if (type === 'phone') {\n      const smsSent = await sendSms(req.body.phone, `Your ${process.env.APP_NAME} verification code: ${code}`);\n      if (smsSent) {\n        res.send({ code, type, method });\n      } else {\n        res.status(500).send('Failed to send SMS');\n      }\n    }\n  };\n  return {\n    sendcode,\n  };\n};\nexport default controllerFactory;\n",
                "name": "twofa.service.js",
                "size": 1049,
                "type": "source"
              },
              {
                "path": "../../src/modules/auth/controllers/services/users.service.js",
                "relativePath": "modules/auth/controllers/services/users.service.js",
                "extension": ".js",
                "content": "import addMembersQuantity from '@martyrs/src/modules/organizations/controllers/utils/addMembersQuantity.js';\nimport addUserStatusFields from '@martyrs/src/modules/organizations/controllers/utils/addUserStatusFields.js';\nimport { Types } from 'mongoose';\nconst ObjectId = { Types }.Types.ObjectId;\nconst controllerFactory = db => {\n  const User = db.user;\n  const read = async (req, res) => {\n    let query = [];\n    let match = {};\n    let skip = parseInt(req.query.skip) || 0;\n    let limit = parseInt(req.query.limit) || 10;\n    let matchConditions = [];\n    // Модифицированная проверка _id\n    if (req.query._id) {\n      // Проверяем, является ли _id валидным ObjectId\n      const isValidObjectId = ObjectId.isValid(req.query._id);\n      if (isValidObjectId) {\n        matchConditions.push({ _id: new ObjectId(req.query._id) });\n      } else {\n        // Если не ObjectId, ищем по username\n        matchConditions.push({ username: req.query._id });\n      }\n    }\n    let search = req.query.search;\n    if (search) {\n      let regexPattern = '';\n      // Экранирование специальных символов в строке поиска\n      const escapedSearch = search.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n      // Проверка, является ли строка поиска потенциальным email\n      if (escapedSearch.includes('@')) {\n        regexPattern = escapedSearch;\n      }\n      // Проверка, является ли строка поиска потенциальным телефонным номером\n      else if (escapedSearch.match(/^\\+?\\d{0,14}$/)) {\n        regexPattern = escapedSearch;\n      }\n      // Иначе, предполагаем, что это имя или username\n      else {\n        regexPattern = `.*${escapedSearch}.*`;\n      }\n      matchConditions.push({\n        $or: [\n          { 'profile.name': { $regex: regexPattern, $options: 'i' } },\n          { email: { $regex: regexPattern, $options: 'i' } },\n          { phone: { $regex: regexPattern, $options: 'i' } },\n          { username: { $regex: regexPattern, $options: 'i' } },\n        ],\n      });\n    }\n    if (matchConditions.length > 0) query.push({ $match: { $and: matchConditions } });\n    query.push({\n      $lookup: {\n        from: 'orders',\n        localField: '_id',\n        foreignField: 'user',\n        as: 'orders',\n      },\n    });\n    query.push({\n      $lookup: {\n        from: 'roles',\n        localField: 'roles',\n        foreignField: '_id',\n        as: 'roles',\n      },\n    });\n    query.push({\n      $lookup: {\n        from: 'memberships',\n        localField: '_id',\n        foreignField: 'target',\n        as: 'memberships',\n      },\n    });\n    query.push(addMembersQuantity());\n    if (req.query.user) query.push(addUserStatusFields(req.query.user));\n    query.push({\n      $skip: skip,\n    });\n    query.push({\n      $limit: limit,\n    });\n    try {\n      const users = await User.aggregate(query);\n      if (!users) {\n        return res.status(404).send({ message: 'Users not found.' });\n      }\n      res.status(200).send(users);\n    } catch (err) {\n      console.log(err);\n      res.status(500).send({ message: err });\n    }\n  };\n  const create = async (req, res) => {\n    try {\n      const newUser = {\n        phone: req.body.phone,\n        email: req.body.email,\n        roles: req.body.roles ? req.body.roles : [],\n      };\n      const user = await User.create(newUser);\n      if (!user) {\n        return res.status(404).send({ errorCode: 'USER_NOT_CREATED', message: 'User is not created.' });\n      }\n      res.status(200).send(user);\n    } catch (err) {\n      return res.status(500).send({ errorCode: 'INTERNAL_SERVER_ERROR', message: err });\n    }\n  };\n  const update = async (req, res) => {\n    try {\n      const user = await User.findOneAndUpdate({ _id: req.params._id }, req.body, { new: true });\n      if (!user) {\n        return res.status(404).send({ errorCode: 'UPDATE_FAILED', message: 'Something wrong when updating user.' });\n      }\n      res.status(200).send(user);\n    } catch (err) {\n      return res.status(500).send({ errorCode: 'INTERNAL_SERVER_ERROR', message: err });\n    }\n  };\n  const remove = async (req, res) => {\n    try {\n      const user = await User.findOneAndDelete({ phone: req.params.phone });\n      if (!user) {\n        return res.status(404).send({ errorCode: 'DELETION_FAILED', message: 'User is not deleted.' });\n      }\n      res.status(200).send(user);\n    } catch (err) {\n      return res.status(500).send({ errorCode: 'INTERNAL_SERVER_ERROR', message: err });\n    }\n  };\n  return {\n    read,\n    create,\n    update,\n    remove,\n  };\n};\nexport default controllerFactory;\n",
                "name": "users.service.js",
                "size": 4508,
                "type": "source"
              }
            ]
          },
          "utils": {
            "_files": [
              {
                "path": "../../src/modules/auth/controllers/utils/verifyAppleIdToken.js",
                "relativePath": "modules/auth/controllers/utils/verifyAppleIdToken.js",
                "extension": ".js",
                "content": "import jwt from 'jsonwebtoken';\nimport jwkToPem from 'jwk-to-pem';\nasync function verifyAppleIdToken(id_token) {\n  // Decode the token (without verification)\n  const decodedToken = jwt.decode(id_token, { complete: true });\n  if (!decodedToken) {\n    throw new Error('Failed to decode token.');\n  }\n  // Check iss claim\n  if (decodedToken.payload.iss !== 'https://appleid.apple.com') {\n    throw new Error('Invalid issuer.');\n  }\n  // Check aud claim - Replace YOUR_APP_CLIENT_ID with your client ID\n  if (decodedToken.payload.aud !== process.env.APPLE_CLIENTID) {\n    throw new Error('Invalid audience.');\n  }\n  // Ensure the token has not expired\n  const currentTimestamp = Math.floor(Date.now() / 1000);\n  if (currentTimestamp > decodedToken.payload.exp) {\n    throw new Error('Token has expired.');\n  }\n  // Fetch Apple's public keys\n  const applePublicKeys = await fetch('https://appleid.apple.com/auth/keys')\n    .then(response => response.json())\n    .catch(err => {\n      throw new Error('Failed to fetch Apple public keys.');\n    });\n  const appleKey = applePublicKeys.keys.find(key => key.kid === decodedToken.header.kid);\n  if (!appleKey) {\n    throw new Error('Invalid token key ID.');\n  }\n  // Convert JWK to PEM\n  const pem = jwkToPem(appleKey);\n  // Verify the token's signature using the PEM\n  try {\n    jwt.verify(id_token, pem, {\n      algorithms: ['RS256'],\n      issuer: 'https://appleid.apple.com',\n    });\n  } catch (err) {\n    console.log(err);\n    throw new Error('Token signature verification failed.');\n  }\n  return decodedToken.payload; // or return the entire payload, depending on your needs\n}\nexport { verifyAppleIdToken };\nexport default {\n  verifyAppleIdToken,\n};\n",
                "name": "verifyAppleIdToken.js",
                "size": 1695,
                "type": "source"
              }
            ]
          }
        },
        "models": {
          "_files": [
            {
              "path": "../../src/modules/auth/models/request.model.js",
              "relativePath": "modules/auth/models/request.model.js",
              "extension": ".js",
              "content": "export default db => {\n  const RequestSchema = new db.mongoose.Schema({\n    visitor: {\n      type: db.mongoose.Schema.Types.ObjectId,\n      ref: 'Visitor',\n    },\n    path: String,\n    method: String,\n    timestamp: { type: Date, default: Date.now },\n  });\n  RequestSchema.index({ visitor: 1 });\n  const Request = db.mongoose.model('Request', RequestSchema);\n  return Request;\n};\n",
              "name": "request.model.js",
              "size": 380,
              "type": "source"
            },
            {
              "path": "../../src/modules/auth/models/role.model.js",
              "relativePath": "modules/auth/models/role.model.js",
              "extension": ".js",
              "content": "export default db => {\n  const RoleSchema = new db.mongoose.Schema({\n    name: String,\n  });\n  const Role = db.mongoose.model('Role', RoleSchema);\n  return Role;\n};\n",
              "name": "role.model.js",
              "size": 165,
              "type": "source"
            },
            {
              "path": "../../src/modules/auth/models/user.model.js",
              "relativePath": "modules/auth/models/user.model.js",
              "extension": ".js",
              "content": "import applyCredentialsSchema from '@martyrs/src/modules/globals/models/schemas/credentials.schema.js';\nimport applyProfileSchema from '@martyrs/src/modules/globals/models/schemas/profile.schema.js';\nimport applySocialsSchema from '@martyrs/src/modules/globals/models/schemas/socials.schema.js';\nexport default db => {\n  const UserSchema = new db.mongoose.Schema(\n    {\n      username: {\n        type: String,\n        sparse: true,\n        unique: true,\n      },\n      password: {\n        type: String,\n        required: true,\n      },\n      status: {\n        type: String,\n        enum: ['active', 'banned', 'removed', 'inactive'],\n        default: 'active',\n        required: true,\n      },\n      birthday: {\n        type: Date,\n        default: null,\n      },\n      roles: [\n        {\n          type: db.mongoose.Schema.Types.ObjectId,\n          ref: 'Role',\n        },\n      ],\n    },\n    {\n      // Creation Date\n      timestamps: {\n        currentTime: () => Date.now(),\n      },\n    }\n  );\n  applyProfileSchema(UserSchema, db);\n  applySocialsSchema(UserSchema, db);\n  applyCredentialsSchema(UserSchema, db);\n  const User = db.mongoose.model('User', UserSchema);\n  return User;\n};\n",
              "name": "user.model.js",
              "size": 1187,
              "type": "source"
            },
            {
              "path": "../../src/modules/auth/models/visitor.model.js",
              "relativePath": "modules/auth/models/visitor.model.js",
              "extension": ".js",
              "content": "export default db => {\n  const VisitorSchema = new db.mongoose.Schema({\n    ip: String,\n    userAgent: String,\n    acceptLanguage: String,\n    fingerprint: { type: String, unique: true },\n  });\n  // VisitorSchema.index({ fingerprint: 1 });\n  const Visitor = db.mongoose.model('Visitor', VisitorSchema);\n  return Visitor;\n};\n",
              "name": "visitor.model.js",
              "size": 324,
              "type": "source"
            }
          ]
        },
        "views": {
          "middlewares": {
            "_files": [
              {
                "path": "../../src/modules/auth/views/middlewares/auth.validation.js",
                "relativePath": "modules/auth/views/middlewares/auth.validation.js",
                "extension": ".js",
                "content": "import * as auth from '@martyrs/src/modules/auth/views/store/auth.js';\n\nfunction resetUser(to, from, next) {\n  next();\n  auth.state.user.phone = '';\n  auth.state.user.email = '';\n  auth.state.user.avatar = '';\n  auth.state.user.password = '';\n  auth.state.user.passwordRepeat = '';\n}\n\nasync function initUser(to, from, next) {\n  await auth.actions.initialize();\n  next();\n}\n\n// Check state before open\nfunction checkUser(to, from, next) {\n  if (auth.state.user.phone === '' && auth.state.user.email === '') {\n    next('/auth/signin');\n  } else {\n    next();\n  }\n}\n\nfunction requiresNoAuth(to, from, next) {\n  const isLogin = auth.state.access.status;\n\n  console.log(isLogin);\n  console.log(auth.state.access);\n\n  console.log('');\n\n  if (isLogin) {\n    console.log('havee login');\n    return next('/profile/' + auth.state.user._id);\n  }\n\n  console.log('not have login');\n\n  next();\n}\n\nfunction requiresAuth(to, from, next) {\n  const isLogin = auth.state.access.status;\n\n  if (isLogin !== true) {\n    return next('/auth/signin');\n  }\n\n  next();\n}\n\nasync function requiresAdmin(to, from, next) {\n  const isAdmin = auth.state.access.roles?.includes('ROLE_ADMIN') ? auth.state.access.roles.includes('ROLE_ADMIN') : false;\n\n  if (isAdmin !== true) {\n    return next('/401');\n  }\n\n  next();\n}\n\nexport { checkUser, initUser, requiresAdmin, requiresAuth, requiresNoAuth, resetUser };\n",
                "name": "auth.validation.js",
                "size": 1375,
                "type": "source"
              },
              {
                "path": "../../src/modules/auth/views/middlewares/ownership.validation.js",
                "relativePath": "modules/auth/views/middlewares/ownership.validation.js",
                "extension": ".js",
                "content": "import * as auth from '@martyrs/src/modules/auth/views/store/auth.js';\nimport * as blog from '@martyrs/src/modules/community/store/blogposts.js';\n\nimport { useGlobalMixins } from '@martyrs/src/modules/globals/views/mixins/mixins.js';\n\nconst { hasAccess } = useGlobalMixins();\n\nasync function requiresEditAccess(to, from, next) {\n  const postId = to.params.url; // Предполагается, что `url` является идентификатором поста\n  const userId = auth.state.user._id; // Получаем текущего пользователя\n\n  try {\n    // Получаем данные поста, чтобы проверить его принадлежность к организации или авторство\n    const post = (await blog.read({ url: to.params.url }))[0];\n\n    console.log('post is', post);\n\n    if (!post) {\n      return next('/404'); // Если пост не найден, перенаправляем на страницу 404\n    }\n\n    if (post.owner.type === 'organization') {\n      // Если пост принадлежит организации, проверяем права на редактирование через `hasAccess`\n      const isAccess = hasAccess(post.owner.target._id, 'posts', 'edit', auth.state.accesses, auth.state.access.roles);\n\n      if (!isAccess) {\n        return next('/401'); // Если у пользователя нет прав на редактирование в организации, перенаправляем на 403\n      }\n    } else {\n      // Если пост не принадлежит организации, проверяем авторство\n      if (post.creator.target._id !== userId) {\n        return next('/401'); // Если пользователь не является автором, перенаправляем на 403\n      }\n    }\n\n    next(); // Если все проверки прошли, продолжаем\n  } catch (error) {\n    console.error('Error during post access check:', error);\n    return next('/500'); // Если произошла ошибка, перенаправляем на страницу 500\n  }\n}\n\nfunction requiresAccess(resource, action) {\n  return (to, from, next) => {\n    const isAccess = hasAccess(to.params._id, resource, action, auth.state.accesses, auth.state.access.roles);\n\n    if (isAccess) {\n      return next();\n    } else {\n      return next('/401');\n    }\n  };\n}\n\nexport { requiresAccess, requiresEditAccess };\n",
                "name": "ownership.validation.js",
                "size": 1997,
                "type": "source"
              }
            ]
          },
          "router": {
            "_files": [
              {
                "path": "../../src/modules/auth/views/router/auth.js",
                "relativePath": "modules/auth/views/router/auth.js",
                "extension": ".js",
                "content": "import layoutAuth from '../components/layouts/Auth.vue';\n\nimport * as validationAuth from '@martyrs/src/modules/auth/views/middlewares/auth.validation.js';\n\nconst auth = {\n  path: 'auth',\n  name: 'Authentication',\n  meta: {\n    title: {\n      en: 'Аутентификация',\n      ru: 'Authentication',\n    },\n  },\n  component: layoutAuth,\n  children: [\n    {\n      path: 'signin',\n      name: 'Sign In',\n      beforeEnter: [validationAuth.requiresNoAuth, validationAuth.resetUser],\n      meta: {\n        title: {\n          en: 'Sign In',\n          ru: 'Вход',\n        },\n      },\n      component: () => import(/* webpackChunkName: \"signin\" */ '../components/pages/SignIn.vue'),\n    },\n    {\n      path: 'reset-password',\n      name: 'Reset Password',\n      beforeEnter: [validationAuth.requiresNoAuth, validationAuth.resetUser],\n      meta: {\n        title: {\n          en: 'Reset Password',\n          ru: 'Сбросить Пароль',\n        },\n      },\n      component: () => import(/* webpackChunkName: \"reset-password\" */ '../components/pages/ResetPassword.vue'),\n    },\n    {\n      path: 'signup',\n      name: 'Sign Up',\n      beforeEnter: [validationAuth.requiresNoAuth, validationAuth.resetUser],\n      meta: {\n        title: {\n          en: 'Sign Up',\n          ru: 'Регистрация',\n        },\n      },\n      component: () => import(/* webpackChunkName: \"signup\" */ '../components/pages/SignUp.vue'),\n    },\n    {\n      path: 'enter-code',\n      name: 'Enter Code',\n      beforeEnter: [validationAuth.requiresNoAuth, validationAuth.checkUser],\n      meta: {\n        title: {\n          en: 'Enter Code',\n          ru: 'Введите Код',\n        },\n      },\n      component: () => import(/* webpackChunkName: \"signup\" */ '../components/pages/EnterCode.vue'),\n    },\n    {\n      path: 'enter-password',\n      name: 'Enter Password',\n      beforeEnter: [validationAuth.requiresNoAuth, validationAuth.checkUser],\n      meta: {\n        title: {\n          en: 'Enter Password',\n          ru: 'Введите Пароль',\n        },\n      },\n      component: () => import(/* webpackChunkName: \"signup\" */ '../components/pages/EnterPassword.vue'),\n    },\n    {\n      path: 'invite',\n      name: 'Invite',\n      beforeEnter: [validationAuth.requiresNoAuth, validationAuth.resetUser],\n      meta: {\n        title: {\n          en: 'Invite',\n          ru: 'Приглашение',\n        },\n      },\n      component: () => import(/* webpackChunkName: \"signup\" */ '../components/pages/Invite.vue'),\n    },\n  ],\n};\n\nexport default auth;\n",
                "name": "auth.js",
                "size": 2485,
                "type": "source"
              },
              {
                "path": "../../src/modules/auth/views/router/users.js",
                "relativePath": "modules/auth/views/router/users.js",
                "extension": ".js",
                "content": "import * as validationAuth from '@martyrs/src/modules/auth/views/middlewares/auth.validation.js';\nimport * as auth from '@martyrs/src/modules/auth/views/store/auth.js';\n\nimport IconPlus from '@martyrs/src/modules/icons/navigation/IconPlus.vue';\n\nconst users = {\n  path: 'users',\n  name: 'Users',\n  meta: {\n    title: {\n      en: 'Users',\n      ru: 'Пользователи',\n    },\n  },\n  children: [\n    {\n      path: ':_id',\n      name: 'User Profile Root',\n      meta: {\n        title: {\n          en: 'Profile',\n          ru: 'Профиль',\n        },\n      },\n      children: [\n        {\n          path: '', // Пустой путь для основного профиля\n          name: 'User Profile',\n          meta: {\n            title: {\n              en: 'Profile',\n              ru: 'Профиль',\n            },\n            title_hide: true,\n            hideNavigationBar: route => route.params._id === auth.state.user._id,\n          },\n          component: () => import(/* webpackChunkName: \"profile\" */ '../components/pages/Profile.vue'),\n        },\n        {\n          path: 'edit',\n          name: 'User Edit Profile',\n          beforeEnter: [validationAuth.requiresAuth],\n          meta: {\n            title: {\n              en: 'Edit Profile',\n              ru: 'Редактировать Профиль',\n            },\n          },\n          component: () => import(/* webpackChunkName: \"profile\" */ '../components/pages/ProfileEdit.vue'),\n        },\n        {\n          path: 'blogposts',\n          name: 'User Posts',\n          meta: {\n            title: {\n              en: 'Posts',\n              ru: 'Посты',\n            },\n          },\n          component: () => import(/* webpackChunkName: \"profile\" */ '../components/pages/ProfileBlogposts.vue'),\n        },\n        {\n          path: 'events',\n          name: 'User Events',\n          meta: {\n            title: {\n              en: 'Events',\n              ru: 'События',\n            },\n          },\n          component: () => import(/* webpackChunkName: \"profile\" */ '@martyrs/src/modules/events/components/pages/EventsBackoffice.vue'),\n        },\n        {\n          path: 'organizations',\n          name: 'User Organizations',\n          meta: {\n            title: {\n              en: 'Groups',\n              ru: 'Группы',\n            },\n            actions: [\n              {\n                component: IconPlus,\n                props: {\n                  fill: 'rgb(var(--main))',\n                },\n                condition: () => auth.state.user && auth.state.user._id,\n                action: router => router.push({ name: 'Create Organization' }),\n              },\n            ],\n          },\n          component: () => import(/* webpackChunkName: \"profile\" */ '@martyrs/src/modules/organizations/components/pages/Organizations.vue'),\n        },\n        {\n          path: 'wallet',\n          name: 'User Wallet',\n          meta: {\n            title: {\n              en: 'Wallet',\n              ru: 'Кошелек',\n            },\n          },\n          component: () => import(/* webpackChunkName: \"profile\" */ '@martyrs/src/modules/wallet/views/components/pages/Wallet.vue'),\n        },\n      ],\n    },\n  ],\n};\n\nexport default users;\n",
                "name": "users.js",
                "size": 3150,
                "type": "source"
              }
            ]
          },
          "store": {
            "_files": [
              {
                "path": "../../src/modules/auth/views/store/auth.js",
                "relativePath": "modules/auth/views/store/auth.js",
                "extension": ".js",
                "content": "// Dependencies\nimport $axios, { setAuthToken } from '@martyrs/src/modules/globals/views/utils/axios-instance.js';\nimport Cookies from 'js-cookie';\n// Capacitor\nimport { Preferences } from '@capacitor/preferences';\n// Vue modules\nimport { reactive, watch } from 'vue';\n// Globals\nimport { setError } from '@martyrs/src/modules/globals/views/store/globals.js';\n// State\nimport * as twofa from './twofa.js';\n\n// State\nconst state = reactive({\n  user: {\n    _id: undefined,\n    avatar: null,\n    username: '',\n    email: '',\n    phone: '',\n    password: '',\n    passwordRepeat: '',\n  },\n  access: {\n    roles: null,\n    token: null,\n    status: false,\n  },\n  accesses: [],\n});\n\nconst actions = {\n  async initialize(cookie) {\n    try {\n      const userCookie = cookie ? cookie : await getCookie('user');\n\n      if (userCookie) {\n        const { _id, email, phone, avatar, roles, accessToken } = userCookie;\n\n        setAuthToken(accessToken);\n\n        // Проверка токена через серверный маршрут\n        const response = await $axios.get('/api/auth/check-accesses');\n        const userAccesses = response.data;\n        state.accesses = userAccesses;\n\n        // Обновление состояния приложения с информацией о пользователе и его правах доступа\n        Object.assign(state.user, { _id, email, phone, avatar });\n        Object.assign(state.access, { token: accessToken, roles, status: !!accessToken });\n      } else {\n        console.log('no cookies');\n        setAuthToken(null);\n        this.resetState();\n      }\n    } catch (error) {\n      console.error('Error initializing auth:', error);\n      // Make sure we remove the cookie when there's an error\n      await removeCookie('user');\n      setAuthToken(null);\n      this.resetState();\n      setError(error);\n    }\n  },\n\n  // Helper method to reset state\n  resetState() {\n    state.accesses = [];\n    state.user = {\n      _id: undefined,\n      avatar: null,\n      username: '',\n      email: '',\n      phone: '',\n      password: '',\n      passwordRepeat: '',\n    };\n    state.access = {\n      roles: null,\n      token: null,\n      status: false,\n    };\n  },\n\n  async login(user, type) {\n    try {\n      const response = await $axios.post('/api/auth/signin', {\n        ...user,\n        type,\n      });\n\n      setCookie('user', response.data);\n\n      Object.assign(state.user, {\n        ...response.data,\n      });\n\n      Object.assign(state.access, {\n        token: response.data.accessToken,\n        status: true,\n        roles: response.data.roles,\n      });\n\n      await this.initialize();\n\n      return response.data;\n    } catch (error) {\n      // Make sure cookie is removed on login error\n      await removeCookie('user');\n\n      Object.assign(state.access, {\n        token: null,\n        status: false,\n        roles: null,\n      });\n\n      console.log(error);\n      setError(error);\n      return Promise.reject(error);\n    }\n  },\n\n  async signup(user, type, invite) {\n    const { password, passwordRepeat } = state.user;\n\n    console.log(password);\n    console.log(passwordRepeat);\n\n    if (password !== passwordRepeat) {\n      const error = {\n        response: {\n          data: { errorCode: 'PASSWORDS_DO_NOT_MATCH' },\n        },\n      };\n      setError(error);\n      throw new Error(error.response.status);\n    }\n\n    try {\n      const response = await $axios.post('/api/auth/signup', {\n        ...user,\n        type,\n        inviteCode: invite,\n      });\n\n      console.log(response);\n\n      if (response.data.accessToken) {\n        setCookie('user', response.data);\n      }\n\n      Object.assign(state.user, {\n        ...response.data,\n      });\n\n      Object.assign(state.access, {\n        token: response.data.accessToken,\n        status: true,\n        roles: response.data.roles,\n      });\n\n      await this.initialize();\n\n      return response.data;\n    } catch (error) {\n      // Make sure cookie is removed on signup error\n      await removeCookie('user');\n      setError(error);\n      console.log('Sign up failed');\n      throw error;\n    }\n  },\n\n  async logout() {\n    await removeCookie('user');\n    setAuthToken(null);\n    this.resetState();\n  },\n\n  async resetPassword(user, type) {\n    try {\n      const response = await $axios.post('/api/auth/reset-password', {\n        email: user.email,\n        phone: user.phone,\n        type,\n      });\n\n      Object.assign(twofa.state.code, {\n        ...response.data,\n        isSended: true,\n      });\n\n      return response.data;\n    } catch (error) {\n      setError(error);\n      return Promise.reject(error);\n    }\n  },\n\n  async updatePassword(user, type) {\n    const { password, passwordRepeat } = state.user;\n\n    if (password !== passwordRepeat) {\n      const error = {\n        response: {\n          data: { errorCode: 'PASSWORDS_DO_NOT_MATCH' },\n        },\n      };\n      setError(error);\n      throw new Error(error.response.status);\n    }\n\n    try {\n      const response = await $axios.post('/api/auth/update-password', {\n        email: user.email,\n        phone: user.phone,\n        password: user.password,\n        passwordRepeat: user.passwordRepeat,\n        type,\n      });\n\n      if (response.data.accessToken) {\n        setCookie('user', response.data);\n      }\n\n      Object.assign(state.user, {\n        ...response.data,\n      });\n\n      Object.assign(state.access, {\n        token: response.data.accessToken,\n        status: true,\n      });\n\n      return response.data;\n    } catch (error) {\n      // Make sure cookie is removed on password update error\n      await removeCookie('user');\n      setError(error);\n      return Promise.reject(error);\n    }\n  },\n};\n\n// Cookies\nconst optionsDefault = {\n  development: { secure: false, expires: 7, sameSite: 'Lax' },\n  production: {\n    expires: 7,\n    path: '/',\n    domain: process.env.DOMAIN_URL,\n    sameSite: 'strict',\n    secure: true,\n  },\n};\n\nasync function getCookie(name) {\n  if (process.env.MOBILE_APP) {\n    const { value } = await Preferences.get({ key: name });\n    return value ? JSON.parse(value) : null;\n  } else {\n    const cookie = Cookies.get(name);\n    return cookie ? JSON.parse(cookie) : null;\n  }\n}\n\nasync function setCookie(name, data, env = process.env.DOMAIN_URL) {\n  if (process.env.MOBILE_APP) {\n    // Если приложение запущено в Capacitor\n    await Preferences.set({\n      key: name,\n      value: JSON.stringify(data),\n    });\n  } else {\n    // Для веб-версии\n    Cookies.set(name, JSON.stringify(data), optionsDefault[env]);\n  }\n}\n\nasync function removeCookie(name, env = process.env.NODE_ENV) {\n  if (process.env.MOBILE_APP) {\n    // Если приложение запущено в Capacitor\n    await Preferences.remove({ key: name });\n  } else {\n    // Для веб-версии\n    const options = env === 'production' ? { domain: process.env.DOMAIN_URL, path: '/' } : {};\n    Cookies.remove(name, options);\n  }\n}\n\n// History\nconst history = [];\nhistory.push(state);\n\n// Watch\nwatch(state, (newState, oldState) => {\n  history.push(newState);\n});\n\n// Module Export\nexport { actions, removeCookie, state };\n",
                "name": "auth.js",
                "size": 6981,
                "type": "source"
              },
              {
                "path": "../../src/modules/auth/views/store/twofa.js",
                "relativePath": "modules/auth/views/store/twofa.js",
                "extension": ".js",
                "content": "// Vue modules\nimport { reactive, watch } from 'vue';\n// Globals\nimport { setError } from '@martyrs/src/modules/globals/views/store/globals.js';\n// Setup Axios\nimport $axios from '@martyrs/src/modules/globals/views/utils/axios-instance.js';\n// State\nconst state = reactive({\n  code: {\n    value: '',\n    type: '',\n    method: '',\n    isSended: false,\n    isValid: false,\n  },\n});\n\nasync function sendCode(user, method, type) {\n  let api = '/api/twofa/sendcode';\n\n  if (method === 'reset-password') api = '/api/twofa/sendcodereset';\n\n  return await $axios\n    .post(api, {\n      phone: user.phone,\n      email: user.email,\n      method: method,\n      type: type,\n    })\n    .then(\n      response => {\n        state.code = response.data;\n        state.code.isSended = true;\n        return Promise.resolve(response.data);\n      },\n      error => {\n        console.log('error is', error);\n        setError(error);\n        return Promise.reject(error);\n      }\n    );\n}\n\nfunction validCode() {\n  const rightcode = state.status.signup.code.value.code;\n  const usercode = state.user.code;\n\n  if (rightcode == usercode) {\n    state.status.signup.code.isValid = true;\n  } else {\n    setError({\n      response: {\n        status: 'Неверный код',\n        data: { message: 'Вы ввели неверный код. Попробуйте еще раз.' },\n      },\n    });\n  }\n}\n\n// // History\nconst history = [];\nhistory.push(state);\n\n// // Watch\nwatch(state, (newState, oldState) => {\n  history.push(newState);\n});\n\n// Module Export\nexport { sendCode, state };\n",
                "name": "twofa.js",
                "size": 1515,
                "type": "source"
              },
              {
                "path": "../../src/modules/auth/views/store/users.js",
                "relativePath": "modules/auth/views/store/users.js",
                "extension": ".js",
                "content": "import $axios from '@martyrs/src/modules/globals/views/utils/axios-instance.js';\nimport { reactive } from 'vue';\n// Add import for global error handler\nimport { setError } from '@martyrs/src/modules/globals/views/store/globals.js';\n\nconst state = reactive({\n  all: [],\n  current: {\n    _id: '',\n    username: '',\n    email: '',\n    phone: '',\n    status: '',\n    profile: {\n      name: '',\n      photo: '',\n      description: '',\n      birthday: '',\n    },\n    socials: {\n      facebook: '',\n      twitter: '',\n      instagram: '',\n      telegram: '',\n    },\n    roles: [],\n  },\n});\n\nconst actions = {\n  async create(user) {\n    try {\n      const response = await $axios.post('/api/users', user);\n      mutations.set(response.data, 'current');\n      return Promise.resolve(response.data);\n    } catch (error) {\n      setError(error); // Add global error handling\n      return Promise.reject(error);\n    }\n  },\n\n  async read(options = {}) {\n    try {\n      const response = await $axios.get('/api/users', { params: options });\n\n      if (options._id) {\n        mutations.set(response.data[0], 'current');\n      } else {\n        mutations.set(response.data, 'all');\n      }\n      return Promise.resolve(response.data);\n    } catch (error) {\n      setError(error); // Add global error handling\n      return Promise.reject(error);\n    }\n  },\n\n  async update(user) {\n    try {\n      const response = await $axios.put(`/api/users/${user._id}`, user);\n      mutations.set(response.data, 'current');\n      return Promise.resolve(response.data);\n    } catch (error) {\n      setError(error); // Add global error handling\n      return Promise.reject(error);\n    }\n  },\n\n  async delete(user) {\n    try {\n      await $axios.delete(`/api/users/${user._id}`);\n      const index = state.all.findIndex(u => u._id === user._id);\n      if (index !== -1) {\n        state.all.splice(index, 1);\n      }\n    } catch (error) {\n      setError(error); // Add global error handling\n      return Promise.reject(error); // Add Promise.reject for consistency\n    }\n  },\n};\n\nconst mutations = {\n  set(user, property) {\n    state[property] = user;\n  },\n  clean() {\n    state.current = {\n      phone: '',\n      name: '',\n      surname: '',\n      birthday: '',\n      city: '',\n      address: '',\n      roles: [],\n      orders: [],\n    };\n  },\n};\n\nexport { actions, mutations, state };\n",
                "name": "users.js",
                "size": 2351,
                "type": "source"
              }
            ]
          },
          "validations": {
            "_files": [
              {
                "path": "../../src/modules/auth/views/validations/inputs.validation.js",
                "relativePath": "modules/auth/views/validations/inputs.validation.js",
                "extension": ".js",
                "content": "// import i18n from \"@martyrs/src/modules/globals/views/localization/vue-i18n.js\";\nconst messages = {\n  ru: {\n    validation: {\n      length: 'Содержимое должно быть не менее 1 символа.',\n      maxLength: 'Содержимое не должно превышать {maxLength} символов.',\n      phone: 'Неверный формат номера',\n      email: 'Неверный формат email',\n      password: {\n        minLength: 'Пароль должен быть больше 8 символов',\n        lowercase: 'Должен быть символ в нижнем регистре',\n        uppercase: 'Должен быть символ в верхнем регистре',\n        number: 'Должна быть 1 цифра',\n        specialChar: 'Должен быть 1 специальный символ',\n      },\n    },\n  },\n  en: {\n    validation: {\n      length: 'Content must be at least 1 character long.',\n      maxLength: 'Content should not exceed {maxLength} characters.',\n      phone: 'Invalid number format',\n      email: 'Invalid email format',\n      password: {\n        minLength: 'Password must be longer than 8 characters',\n        lowercase: 'Must contain a lowercase character',\n        uppercase: 'Must contain an uppercase character',\n        number: 'Must contain at least 1 digit',\n        specialChar: 'Must contain at least 1 special character',\n      },\n    },\n  },\n};\n\n// i18n.global.mergeLocaleMessage('ru', messages.ru);\n// i18n.global.mergeLocaleMessage('en', messages.en);\n\nfunction validateLength(input) {\n  const length = input.length;\n\n  if (length < 1) {\n    return {\n      status: false,\n      // message:  i18n.global.t(\"validation.length\")\n      message: 'validation.length',\n    };\n  }\n\n  return {\n    status: true,\n    message: null,\n  };\n}\n\nfunction validatePhone(phone) {\n  return {\n    status: true,\n    message: null,\n  };\n}\n\nfunction validateEmail(email) {\n  // const emailRegex = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,12}$/; Not allowing to add +1, +2, +3 and etc after email\n  const emailRegex = /^[\\w-]+(\\.[\\w-]+)*(\\+[\\w-]+)?@([\\w-]+\\.)+[\\w-]{2,12}$/;\n\n  if (!emailRegex.test(email)) {\n    return {\n      status: false,\n      // message:  i18n.global.t(\"validation.email\")\n      message: 'validation.email',\n    };\n  }\n\n  return {\n    status: true,\n    message: null,\n  };\n}\n\nfunction validatePassword(password) {\n  const lowercaseRegex = /[a-z]/;\n  const uppercaseRegex = /[A-Z]/;\n  const numberRegex = /[0-9]/;\n  const specialCharRegex = /[@$!%*?&]/;\n\n  if (password.length < 8) {\n    return {\n      status: false,\n      // message:  i18n.global.t(\"validation.password.minLength\")\n      message: 'validation.password.minLength',\n    };\n  }\n\n  // if (!lowercaseRegex.test(password)) {\n  //    return {\n  //     status: false,\n  //     message:i18n.global.t(\"validation.password.lowercase\")\n  //   }\n  // }\n\n  // if (!uppercaseRegex.test(password)) {\n  //   return {\n  //     status: false,\n  //     message: i18n.global.t(\"validation.password.uppercase\")\n  //   }\n  // }\n\n  // if (!numberRegex.test(password)) {\n  //   return {\n  //     status: false,\n  //     message: i18n.global.t(\"validation.password.number\")\n  //   }\n  // }\n\n  // if (!specialCharRegex.test(password)) {\n  //   return {\n  //     status: false,\n  //     message: i18n.global.t(\"validation.password.specialChar\")\n  //   }\n  // }\n\n  return {\n    status: true,\n    message: null,\n  };\n}\n\nasync function validateInputs(input, method, variable, message) {\n  if (!variable) {\n    input.value = {\n      status: false,\n      // message: i18n.global.t(\"validation.length\")\n      message: 'validation.length',\n    };\n\n    setTimeout(() => {\n      input.value = null;\n    }, 3000);\n    // throw new Error(i18n.global.t(\"validation.length\"));\n    throw new Error('validation.length');\n  } else {\n    const InputGood = method(variable);\n\n    if (!InputGood.status) {\n      input.value = InputGood;\n      setTimeout(() => {\n        input.value = null;\n      }, 3000);\n      throw new Error(message);\n    }\n  }\n}\n\nexport { validateEmail, validateInputs, validateLength, validatePassword, validatePhone };\n",
                "name": "inputs.validation.js",
                "size": 3925,
                "type": "source"
              }
            ]
          },
          "components": {
            "blocks": {
              "_files": [
                {
                  "path": "../../src/modules/auth/views/components/blocks/CardUser.vue",
                  "relativePath": "modules/auth/views/components/blocks/CardUser.vue",
                  "extension": ".vue",
                  "content": "<template>\n  <div class=\"flex-v-center flex-nowrap flex\">\n    <img loading=\"lazy\" \n      v-if=\"photo\" \n      :src=\"(FILE_SERVER_URL || '') + photo\" \n      class=\"radius-medium aspect-1x1 bg-white object-fit-cover mn-r-thin h-100 w-max\" \n\n      @click.stop=\"$router.push({\n        name: user.type === 'user' ? 'User Profile' : 'Organization', \n        params: {\n          _id: user._id\n        }\n      })\" \n    />\n\n    <PlaceholderUserpic\n      v-if=\"!photo\"\n      class=\"radius-medium aspect-1x1 mn-r-thin h-100 w-auto\"\n\n      @click.stop=\"$router.push({\n        name: 'User Profile', \n        params: {\n          _id: user._id || _id\n        }\n      })\" \n    />\n\n    <div>\n      <p class=\"h4\">{{ name }}</p>\n      <span class=\"t-transp mn-r-small\">{{phone || email}}</span>\n    </div>\n\n    <div v-if=\"action || role\" class=\"mn-l-auto  flex-stretch flex-v-center flex\">\n      <span \n        v-if=\"role\"\n        class=\"flex-child flex-child-shrink-0 capitalize w-max t-medium radius-big pd-b-nano pd-t-nano pd-r-thin pd-l-thin bg-main\"\n      >\n        {{role}}\n      </span>\n      <button \n        v-if=\"action\" \n        @click.stop=\"action.method\" \n        class=\"h-2r w-2r t-white mn-l-thin capitalize t-medium radius-big bg-red\"\n      >\n        <component v-if=\"action.label.is\" :is=\"action.label.is\" v-bind=\"action.label.props\"></component>  \n\n        <template v-else>\n          {{action.label}} \n        </template>\n      </button>\n      <!-- {{`Member since  ${user.createdAt}. Invited by ${user.creator.target}`}} -->\n    </div>\n \n  </div>\n</template>\n\n<script setup>\n  import PlaceholderUserpic from '@martyrs/src/modules/icons/placeholders/PlaceholderUserpic.vue'\n\n  const props = defineProps({\n    _id: {\n      type: String,\n      default: null\n    },\n    user: {\n      type: Object,\n      required: true\n    },\n    action: {\n      type: Object,\n    },\n    photo: {\n      type: String,\n      default: null\n    },\n    name: {\n      type: String,\n      default: 'No name'\n    },\n    role: {\n      type: String\n    },\n    phone: {\n      type: String,\n    },\n    email: {\n      type: String,\n    }\n  });\n</script>",
                  "name": "CardUser.vue",
                  "size": 2119,
                  "type": "source"
                }
              ]
            },
            "layouts": {
              "_files": [
                {
                  "path": "../../src/modules/auth/views/components/layouts/Auth.vue",
                  "relativePath": "modules/auth/views/components/layouts/Auth.vue",
                  "extension": ".vue",
                  "content": "<template>\n  <div \n  \tclass=\"cols-2-1_2 gap-small pd-small\"\n  >\n\n    <router-view\n    \tclass=\"pd-big mobile:pd-medium w-m-66r t-center\" \n    \tv-slot=\"{ Component, route }\"\n    >\n      <transition \n      \tname=\"scaleIn\" mode=\"out-in\"\n      >\n        <component \n        \tref=\"page\" \n        \t:key=\"route.path\" \n        \t:localPosition=\"localPosition\" \n        \t:is=\"Component\" \n        />\n      </transition>\n    </router-view>\n\n    <section class=\"w-100 desktop-only o-hidden radius-big bg-grad-main\">\n      <!-- <SliderFeatures/> -->  \n    </section>\n  </div>\n</template>\n\n<script setup>\n// Import components\nimport Tab from '@martyrs/src/components/Tab/Tab.vue'\nimport Field from '@martyrs/src/components/Field/Field.vue'\nimport Button from '@martyrs/src/components/Button/Button.vue'\n// Import blocks\nimport SliderFeatures from '@martyrs/src/modules/auth/views/components/sections/SliderFeatures.vue'\n// Import libs\nimport { computed, onMounted, ref } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\n// Import state\nimport * as auth from '@martyrs/src/modules/auth/views/store/auth.js'\n// Import validation\nimport * as inputsValidation from '@martyrs/src/modules/auth/views/validations/inputs.validation'\n\nconst phoneValidation = ref(null)\nconst passswordValidation = ref(null)\nconst emailValidation = ref(null)\n// Accessing router\nconst route = useRoute()\nconst router = useRouter()\n// Accessing state\nconst tabAuth = ref('email')\n// Methods\nasync function onSubmit() {\n  try {\n    await inputsValidation.validateInputs(\n      emailValidation,\n      inputsValidation.validateEmail,\n      auth.state.user.email,\n      'Некорректный email'\n    )\n    await inputsValidation.validateInputs(\n      passswordValidation,\n      inputsValidation.validatePassword,\n      auth.state.user.password,\n      'Некорректный пароль'\n    )\n  } catch (error) {\n    throw new Error\n  }\n  await auth.actions.login(auth.state.user, tabAuth.value)\n}\n\nfunction redirectTo() {\n  router.push({ name: 'Account' })\n}\n</script>",
                  "name": "Auth.vue",
                  "size": 2013,
                  "type": "source"
                }
              ]
            },
            "pages": {
              "_files": [
                {
                  "path": "../../src/modules/auth/views/components/pages/EnterCode.vue",
                  "relativePath": "modules/auth/views/components/pages/EnterCode.vue",
                  "extension": ".vue",
                  "content": "<template>\n\t<section class=\"t-center pd-medium\">\n\t\t<!-- <img loading=\"lazy\" src=\"@/assets/icons/message1.png\" class=\"i-extra mn-b-small\"> -->\n\n\t\t<h3 class=\"mn-b-medium\">\n\t\t\t{{ t('verifyNumberTitle') }}\n\t\t</h3>\n\n\t\t<p class=\"mn-b-big t-transp\">{{ t('instructions') }}</p>\n\n\t\t<div class=\"w-100 mn-b-big flex-nowrap flex\">\n      \t\t<input \n      \t\t\ttype=\"number\" \n      \t\t\tv-model=\"state.digits[0]\" \n      \t\t\tref=\"firstInput\" \n      \t\t\tmaxlength=\"1\" \n      \t\t\t@input=\"onInput(0)\" \n      \t\t\t@paste=\"($event) => onPaste($event, 0)\" \n      \t\t\t@keydown=\"($event) => onKeyDown($event, 0)\" \n      \t\t\tclass=\"w-100 h1 pd-small t-center bg-light radius-small mn-r-small\"\n      \t\t>\n\t\t\t<input \n\t\t\t\ttype=\"number\" \n\t\t\t\tv-model=\"state.digits[1]\" \n\t\t\t\tmaxlength=\"1\" \n\t\t\t\t@input=\"onInput(1)\" \n\t\t\t\t@paste=\"($event) => onPaste($event, 1)\" \n\t\t\t\t@keydown=\"($event) => onKeyDown($event, 1)\" \n\t\t\t\tclass=\"w-100 h1 pd-small t-center bg-light radius-small mn-r-small\"\n\t\t\t>\n\t\t\t<input \n\t\t\t\ttype=\"number\" \n\t\t\t\tv-model=\"state.digits[2]\" \n\t\t\t\tmaxlength=\"1\" \n\t\t\t\t@input=\"onInput(2)\" \n\t\t\t\t@paste=\"($event) => onPaste($event, 2)\" \n\t\t\t\t@keydown=\"($event) => onKeyDown($event, 2)\" \n\t\t\t\tclass=\"w-100 h1 pd-small t-center bg-light radius-small mn-r-small\"\n\t\t\t>\n\t\t\t<input \n\t\t\t\ttype=\"number\" \n\t\t\t\tv-model=\"state.digits[3]\" \n\t\t\t\tmaxlength=\"1\" \n\t\t\t\t@input=\"onInput(3)\" \n\t\t\t\t@paste=\"($event) => onPaste($event, 3)\" \n\t\t\t\t@keydown=\"($event) => onKeyDown($event, 3)\" \n\t\t\t\tclass=\"w-100 h1 pd-small t-center bg-light radius-small\"\n\t\t\t>\n    \t</div>\n\n\t\t<a v-if=\"resendTimer < 1\" @click=\"sendAgain\" class=\"t-blue\">\n\t\t\t{{ t('resendCode') }}\n\t\t</a>\n\n\t\t<span v-else>\n\t\t\t{{resendTimer}} {{ t('secondsResend') }}\n\t\t</span>\n\t</section>\n</template>\n\n<script setup>\n\t// Import components\n\timport Field         from '@martyrs/src/components/Field/Field.vue'\n\t// Import libs\n\timport { computed,reactive,ref, onMounted, onBeforeMount, watch } from 'vue'\n\timport { useRoute,useRouter } from 'vue-router'\n\timport { useI18n } from 'vue-i18n'\n\t// Import state\n\timport * as auth \tfrom '@martyrs/src/modules/auth/views/store/auth.js'\n\timport * as twofa \tfrom '@martyrs/src/modules/auth/views/store/twofa.js'\n\timport { setError } from '@martyrs/src/modules/globals/views/store/globals.js'\n\t\n\tconst route = useRoute()\n\tconst router = useRouter()\n\n\t// Localization\n\timport text from '@martyrs/src/modules/auth/views/localization/EnterCode.json'\n\t// Localization\n\tconst { t } = useI18n({\n\t\tuseScope: 'global', \n\t\t...text\n\t})\n\t\n\tconst state = reactive({\n\t  digits: ['', '', '', ''],\n\t  error: null,\n\t});\n\n\twatch(\n\t    () => state.digits[0],\n\t    (newVal) => {\n\t        if (newVal && String(newVal).length > 1) {\n\t            let newValArray = String(newVal).split('');\n\t            console.log(newValArray);\n\n\t            let newDigits = [...state.digits];\n\t            newValArray.forEach((digit, i) => {\n\t                console.log(i);\n\t                console.log(newDigits[i]);\n\t                console.log(digit);\n\t                newDigits[i] = digit;\n\t            });\n\n\t            state.digits = newDigits;\n\n\t            onInput(3);\n\t        }\n\t    }\n\t);\n\n\tconst firstInput = ref(null);\n\n\tconst resendTimer = ref(0);\n\n\tasync function sendAgain () {\n\t\ttry {\n\t\t  \tawait twofa.sendCode(\n\t\t  \t\tauth.state.user, \n\t\t  \t\troute.query.method, \n\t\t  \t\troute.query.type, \n\t\t  \t)\n\n\t\t  \tresendTimer.value = 30;\n\n\t     \t// Start the timer using `setInterval()`\n\t      \tconst timer = setInterval(() => {\n\t\t        if (resendTimer.value > 0) {\n\t\t          // Decrement the timer by 1 second\n\t\t          resendTimer.value -= 1;\n\t\t        } else {\n\t\t          // Stop the timer when it reaches 0 seconds\n\t\t          clearInterval(timer);\n\t\t        }\n\t\t     }, 1000);\n\t  } catch (error) {\n\t\t\tsetError({ response: {data: { errorCode: \"CODE_NOT_SENT\"}}})\n\t\t}\n\t}\n\n\n\tconst onKeyDown = (event, index) => {\n\t    if (event.key === \"Backspace\" && (state.digits[index] === null || state.digits[index] === undefined || state.digits[index] === '')) {\n\t        event.preventDefault();\n\n\t        const inputs = document.querySelectorAll('input');\n\t        const prevInput = index > 0 ? inputs[index - 1] : null;\n\n\t        if (prevInput) {\n\t            prevInput.focus();\n\t            prevInput.setSelectionRange(prevInput.value.length, prevInput.value.length);\n\t        }\n\t    }\n\t};\n\n\t// const onPaste = (event, index) => {\n\t//   event.preventDefault();\n\t//   const pastedData = event.clipboardData.getData('text/plain');\n\t  \n\t//   // Проверим, что вставленный текст состоит только из 4 цифр\n\t//   if (/^\\d{4}$/.test(pastedData)) {\n\t//     for (let i = 0; i < 4; i++) {\n\t//       state.digits[index + i] = pastedData[i];\n\t//     }\n\t//     onInput(index + 3); // Вызываем обработчик onInput для последнего инпута, чтобы обработать логику ввода\n\t//   } else {\n\t//    \tsetError({ response: {data: { errorCode: \"INPUT_ERROR\"}}})\n\t//   }\n\t// };\n\n\tconst onInput = (index) => {\n\t    const inputs = document.querySelectorAll('input');\n\t    const nextInput = inputs[index + 1];\n\t    const prevInput = index > 0 ? inputs[index - 1] : null;\n\n\t    // Переход на следующий инпут\n\t    if (state.digits[index] !== '' && state.digits[index] !== null && state.digits[index] !== undefined && index < 4) {\n\t        if (index < 3) nextInput.focus();\n\t        else firstInput.value.focus();\n\t    }\n\n\t    // Переход на предыдущий инпут при удалении\n\t    if ((state.digits[index] === null || state.digits[index] === undefined || state.digits[index] === '') && index > 0) {\n\t        prevInput.focus();\n\t    }\n\n\t    // Проверка введенного кода\n\t    if (state.digits.every(digit => digit !== '')) {\n\t        const enteredCode = state.digits.join('');\n\t        const correctCode = twofa.state.code.code.toString();\n\n\t        if (enteredCode === correctCode) {\n\t            twofa.state.code.isValid = true;\n\n\t            router.push({\n\t                path: '/auth/enter-password',\n\t                query: { type: twofa.state.code.type, method: route.query.method, returnUrl: route.query.returnUrl }\n\t            });\n\n\t        } else {\n\t            setError({ response: {data: { errorCode: \"WRONG_CODE\"}}})\n\t            firstInput.value.focus()\n\t            state.digits = ['', '', '', ''];\n\t        }\n\t    }\n\t};\n</script>",
                  "name": "EnterCode.vue",
                  "size": 6193,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/auth/views/components/pages/EnterPassword.vue",
                  "relativePath": "modules/auth/views/components/pages/EnterPassword.vue",
                  "extension": ".vue",
                  "content": "<template>\n\t<section class=\"t-left pd-medium\">\n\t\t<!-- Header -->\n\t\t<!-- <img loading=\"lazy\" src=\"@/assets/icons/password.png\" class=\"i-extra mn-b-small\"> -->\n\t\t<h3 class=\"mn-b-small\">{{ t('almostDone') }}</h3>\n\t\t<p v-if=\"route.query.method === 'reset-password'\" class=\"mn-b-semi t-transp\">{{ t('newPasswordPrompt') }}</p>\n\t\t<p v-else class=\"mn-b-semi t-transp\">{{ t('registrationPasswordPrompt') }}</p>\n\t\n\t\t<!-- Form -->\n\t\t<div class=\"mn-b-semi radius-small o-hidden\">\n\t\t\t<Field \n\t\t\t\tv-model:field=\"auth.state.user.password\"\n\t\t\t\ttype=\"password\" \t\n\t\t\t\t:validation=\"passswordValidation\" \n\t\t\t\t:placeholder=\"t('passwordPlaceholder')\"\t\t\n\t\t\t\tclass=\"bg-light pd-small radius-small mn-b-thin\"\n\t\t\t/>\n\t\t\t<Field \n\t\t\t\tv-model:field=\"auth.state.user.passwordRepeat\"\n\t\t\t\ttype=\"password\" \t\n\t\t\t\t:placeholder=\"t('repeatPasswordPlaceholder')\"\n\t\t\t\tclass=\"bg-light pd-small radius-small mn-b-thin\"\n\t\t\t/>\n\t\t</div>\n\t\t<div\n\t\t\t v-if=\"route.query.method !== 'reset-password'\" \n\t\t\t class=\"p-medium t-semi mn-b-semi \"\n\t\t>\n\t\t\t By registering, you agree to our <a class=\"t-second\" href=\"/legal/eula\" target=\"_blank\" rel=\"noopener noreferrer\">End User License Agreement (EULA)</a>\n\t\t</div>\n\t\t<!-- Button -->\n\t\t<Button :submit=\"onSubmit\" :callback=\"redirectTo\" class=\"w-100 bg-main mn-b-big\">\n\t\t\t<span  v-if=\"route.query.method === 'reset-password'\">{{ t('changePasswordBtn') }}</span>\n\t\t\t<span v-else>{{ t('registerBtn') }}</span>\n\t\t</Button>\n\t</section> \n</template>\n\n<script setup>\n// Import components\nimport Tab           from '@martyrs/src/components/Tab/Tab.vue'\nimport Field         from '@martyrs/src/components/Field/Field.vue'\nimport Button        from '@martyrs/src/components/Button/Button.vue'\n// Import libs\nimport { computed, onMounted, ref, onBeforeMount } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\nimport { useI18n } from 'vue-i18n'\n// Import state\nimport * as auth from '@martyrs/src/modules/auth/views/store/auth.js'\n// Import validation\nimport * as inputsValidation from '@martyrs/src/modules/auth/views/validations/inputs.validation'\nconst passswordValidation = ref(null)\n// Localization\nimport text from '@martyrs/src/modules/auth/views/localization/EnterPassword.json'\n// Localization\nconst { t } = useI18n({\n\tuseScope: 'global', \n\t...text\n})\n// Accessing router\nconst route = useRoute()\nconst router = useRouter()\n// Accessing state\nconst tabAuth = ref('phone')\n// Methods\nasync function onSubmit() {\n\ttry {\n\t\tawait inputsValidation.validateInputs(\n\t\t\tpassswordValidation, \n\t\t\tinputsValidation.validatePassword, \n\t\t\tauth.state.user.password, \n\t\t\t'Некорректный пароль'\n\t\t)\n\t} catch (error) {\n\t\tthrow new Error\n\t}\n\n\tif (route.query.method === 'reset-password') await auth.actions.updatePassword(auth.state.user, route.query.type)\n\tif (route.query.method !== 'reset-password') await auth.actions.signup(auth.state.user, route.query.type)\n}\n\nfunction redirectTo () {\n\tif (route.query.returnUrl) {\n\t\trouter.push({ \n\t\t\tpath: route.query.returnUrl,\n\t\t\tquery: { \n\t\t\t\tafterAuth: 'true' \n\t\t\t}\n\t\t})\n\t} else { \n\t\trouter.push({ \n\t\t\tname: 'User Profile', \n\t\t\tparams: { \n\t\t\t\t_id: auth.state.user._id \n\t\t\t},\n\t\t\tquery: { \n\t\t\t\tafterAuth: 'true' \n\t\t\t}\n\t\t})\n\t}\n}\n</script>\n\n<style lang=\"scss\">\n\t.slide-fade-enter-active {\n\t  transition: all  0.3s cubic-bezier(0.4, 0, 0.2, 1);\n\t}\n\n\t.slide-fade-leave-active {\n\t  transition: all  0.3s cubic-bezier(0.4, 0, 0.2, 1);\n\n\t}\n\n\t.slide-fade-enter-from,\n\t.slide-fade-leave-to {\n\t\tposition: absolute;\n\t  transform: translateX(20px);\n\t  opacity: 0;\n\t  left: 0;\n\t  top: 0;\n\t}\n\n\t.slide-fade-leave-to {\n\n\t}\n</style>\n",
                  "name": "EnterPassword.vue",
                  "size": 3543,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/auth/views/components/pages/Invite.vue",
                  "relativePath": "modules/auth/views/components/pages/Invite.vue",
                  "extension": ".vue",
                  "content": "<template>\n\t<section class=\"t-left pd-medium\">\n\t\t<!-- Header -->\n\t\t<h3 class=\"mn-b-small\">You have been invited to the organization</h3>\n\t\t<p class=\"mn-b-semi t-transp\">Please provide a password to complete the registration.</p>\n\t\t\n\t\t<!-- Form -->\n\t\t<div  class=\"mn-b-semi radius-small o-hidden\">\n\t\t\t<Field \n\t\t\t\tv-model:field=\"auth.state.user.password\"\n\t\t\t\ttype=\"password\" \t\n\t\t\t\t:validation=\"passswordValidation\" \n\t\t\t\tlabel=\"Password\"\t\t\n\t\t\t\tplaceholder=\"******\" \n\t\t\t\tclass=\"mn-b-thin bg-light pd-medium radius-small\" \n\t\t\t/>\n\t\t\t<Field \n\t\t\t\tv-model:field=\"auth.state.user.passwordRepeat\"\n\t\t\t\ttype=\"password\" \t\n\t\t\t\tlabel=\"Repeat Password\"\t\t\n\t\t\t\tplaceholder=\"******\" \n\t\t\t\tclass=\"bg-light pd-medium radius-small\" \n\t\t\t\t\n\t\t\t/>\n\t\t</div>\n\t\t<!-- Button -->\n\t\t<Button \n\t\t\t:submit=\"onSubmit\" \n\t\t\t:callback=\"redirectTo\" \n\t\t\tclass=\"w-100 bg-main mn-b-big\">\n\t\t\t<span>Join</span>\n\t\t</Button>\n\t</section> \n</template>\n\n<script setup>\n// Import components\nimport Tab           from '@martyrs/src/components/Tab/Tab.vue'\nimport Field         from '@martyrs/src/components/Field/Field.vue'\nimport Button        from '@martyrs/src/components/Button/Button.vue'\n// Import libs\nimport { computed, onMounted, ref, onBeforeMount } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\n// Import state\nimport * as auth \t\tfrom '@martyrs/src/modules/auth/views/store/auth.js'\nimport * as invites from '@martyrs/src/modules/organizations/store/invites.js'\n// Import validation\nimport * as inputsValidation from '@martyrs/src/modules/auth/views/validations/inputs.validation'\nconst passswordValidation = ref(null)\n// Accessing router\nconst route = useRoute()\nconst router = useRouter()\n// Lifecycles\nonMounted(async () => {\n\tawait invites.actions.readOne(route.query.inviteCode)\n})\n// Methods\nasync function onSubmit() {\n\ttry {\n\t\tawait inputsValidation.validateInputs(\n\t\t\tpassswordValidation, \n\t\t\tinputsValidation.validatePassword, \n\t\t\tauth.state.user.password, \n\t\t\t'Некорректный пароль'\n\t\t)\n\t} catch (error) {\n\t\tthrow new Error\n\t}\n\ttry {\n\t\tawait auth.actions.signup(auth.state.user, route.query.type, route.query.inviteCode)\n\t} catch (err) {\n\t\tconsole.log(err)\n\t}\n}\n\nfunction redirectTo () {\n\trouter.push({ name: 'User Profile', \n\t\tparams: { \n\t\t\t_id: auth.state.user._id \n\t\t},\n\t\tquery: { \n\t\t\tafterAuth: 'true' \n\t\t}})\n}\n</script>\n\n<style lang=\"scss\">\n\t.slide-fade-enter-active {\n\t  transition: all  0.3s cubic-bezier(0.4, 0, 0.2, 1);\n\t}\n\n\t.slide-fade-leave-active {\n\t  transition: all  0.3s cubic-bezier(0.4, 0, 0.2, 1);\n\n\t}\n\n\t.slide-fade-enter-from,\n\t.slide-fade-leave-to {\n\t\tposition: absolute;\n\t  transform: translateX(20px);\n\t  opacity: 0;\n\t  left: 0;\n\t  top: 0;\n\t}\n\n\t.slide-fade-leave-to {\n\n\t}\n</style>\n",
                  "name": "Invite.vue",
                  "size": 2684,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/auth/views/components/pages/Profile.vue",
                  "relativePath": "modules/auth/views/components/pages/Profile.vue",
                  "extension": ".vue",
                  "content": "<template>\n\t<div \n\t\tv-if=\"show\"\n\t\tclass=\"for-transition bg-white w-100\"\n\t>\n\t\t<div \n\t\t\tv-if=\"users.state.current?.status === 'removed'\"\n\t\t\tclass=\"flex-center flex pd-medium radius-big bg-light uppercase t-semi w-100 h-100\"\n\t\t>\n\t\t\tSorry, user has been removed.\n\t\t</div>\n\n\t\t<div \n\t\t\tv-else\n\t\t\t_id=\"dash\" \n\t\t\tclass=\"pd-thin w-100\"\n\t\t>\n\t\t\t<!-- <Completion \n\t\t\t\tv-if=\"route.params._id === auth.state.user._id && show\" \n\t\t    :user=\"auth.state.user._id\"\n\t\t    :target=\"users.state.current\"\n\t\t    :cta=\"false\" \n\t\t    text_cta=\"Fill\"\n\t\t    text=\"Profile completed at\"\n\t\t    class=\"mn-b-medium mn-b-regular pd-medium radius-semi t-white bg-second\"\n\t\t\t/> -->\n\n\t\t\t<section \n\t\t\t\tclass=\"flex-center pos-relative flex flex-column t-center w-100 mn-b-regular radius-medium pd-medium bg-light\"\n\t\t\t>\n\n\t\t\t\t<Dropdown \n\t\t\t\t\tv-if=\"route.params._id && route.params._id !== auth.state.user._id\"\n\t\t\t\t\t:label=\"'...'\" \n\t\t\t\t\t:align=\"'right'\"\n\t\t\t\t\tclass=\"cursor-pointer pos-absolute pos-r-0 pos-t-0 pd-thin radius-extra \"\n\t\t\t\t>\n\t\t\t\t\t<section \n\t\t\t\t\t\tclass=\"bg-black pd-thin radius-small\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<FormReport \n\t\t\t\t\t\t\t:user=\"auth.state.user._id\"\n\t\t\t\t\t\t\t:type=\"'user'\" \n\t\t\t\t\t\t\t:target=\"users.state.current._id\" \n\t\t\t\t\t\t\t:text=\"'Report'\" \n\t\t\t\t\t\t\tclass=\"w-100\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<button \n\t\t\t\t\t\t\t\tclass=\"w-100 bg-black br-solid br-1px br-white-transp-20 t-white button-small button\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tReport\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</FormReport>\n\n\t\t\t\t\t\t<ButtonToggleMembership\n\t\t\t\t\t\t\tv-if=\"auth.state.user._id\"\n\t\t\t\t      :user=\"auth.state.user._id\"\n\t\t\t\t      :type=\"'user'\" \n\t\t\t      \t:role=\"'blocked'\" \n\t\t\t\t      :target=\"users.state.current._id\" \n\t\t\t\t      :status=\"users.state.current.isBlocked\" \n\t\t\t\t      :text=\"{create: 'Block', remove: 'Unblock'}\"\n\t\t\t\t      @updateMembership=\"event => handleMembershipUpdate(event, 'isBlocked')\"\n\t\t\t\t      class=\"t-white mn-t-thin bg-red\" \n\t\t\t    \t/>\n\t\t\t\t\t</section>\n\t      </Dropdown>\t\n\n\n\t\t\t\t<IconEdit\n\t\t\t\t\tv-if=\"route.params._id === auth.state.user._id\"\n\t\t\t\t\t@click=\"$router.push({\n\t\t\t\t\t\tname: 'User Edit Profile', \n\t\t\t\t\t\tparams: {\n\t\t\t\t\t\t\t_id: auth.state.user._id\n\t\t\t\t\t\t}\n\t\t\t\t\t})\" \n\t\t\t\t\tclass=\"cursor-pointer pos-absolute pos-t-regular pos-r-regular i-regular t-transp\"\n\t\t\t\t/>\n\n\t\t\t\t<img loading=\"lazy\" \n\t\t\t\t\tv-if=\"users.state.current.profile.photo && users.state.current.profile.photo.length > 0\" \n\t\t\t\t\t:src=\"(FILE_SERVER_URL || '')+ users.state.current.profile.photo\" \n\t\t\t\t\tclass=\"radius-extra bg-white mn-b-small object-fit-cover i-extra\" \n\t\t\t\t/>\n\t\t\t\t\n\t\t\t\t<PlaceholderUserpic \n\t\t\t\t\tv-else \n\t\t\t\t\tclass=\"radius-medium mn-b-small i-extra\"\n\t\t\t\t/>\n\n\t\t\t\t<h3 \n\t\t\t\t\tclass=\"mn-b-thin\"\n\t\t\t\t>\n\t\t\t\t\t{{users.state.current.profile.name ? users.state.current.profile.name : 'Anonymous' }}\n\t\t\t\t</h3>\n\t\t\t\t\n\t\t\t\t<p \n\t\t\t\t\tv-if=\"users.state.current.username\"\n\t\t\t\t\tclass=\"mn-b-thin t-main t-semi\"\n\t\t\t\t>\n\t\t\t\t\t@{{ users.state.current.username ? users.state.current.username : 'Not specified' }}\n\t\t\t\t</p>\n\n\t\t\t\t<p \n\t\t\t\t\tclass=\"mn-b-small p-medium\"\n\t\t\t\t>\n\t\t\t\t {{ users.state.current.profile.description ? users.state.current.profile.description : 'Bio not specified' }}\n\t\t\t\t</p>\n\t\t\t\t\n\t\t\t\t<div class=\"mn-b-medium flex-center flex-nowrap flex\">\n\t\t\t\t\t<div \n\t\t\t\t\t  v-for=\"(role,index) in users.state.current.roles\" \n\t\t\t\t\t  class=\"pd-thin radius-small t-semi bg-white\" \n\t\t\t\t\t  :class=\"{'mn-r-thin': index !== users.state.current.roles.length - 1}\"\n\t\t\t\t\t >\n\t\t\t\t\t\t{{role.icon}}\n\t\t\t\t\t\t{{role.name}}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\t\t\t\n\n\t\t\t\t<p \n\t\t\t\t\tclass=\"t-semi mn-b-small\"\n\t\t\t\t>\n\t\t\t\t\t<!-- 👍 3 212 likes ·  -->\n\t\t\t\t\t<!-- 💬 342 comments ·  -->\n\t\t\t\t\t👨‍👨‍👧‍👧 {{users.state.current.numberOfSubscribers}} followers\n\t\t\t\t</p>\n\t\t\t\t\n\t    \t<ButtonToggleMembership\n\t    \t\tv-if=\"auth.state.user._id && route.params._id && route.params._id !== auth.state.user._id\"\n\t\t      :user=\"auth.state.user._id\"\n\t\t      :type=\"'user'\" \n\t      \t:role=\"'subscriber'\" \n\t\t      :target=\"users.state.current._id\" \n\t\t      :status=\"users.state.current.isSubscriber\" \n\t\t\t\t\t:text=\"{create: 'Follow', remove: 'Unfollow'}\"\n\t\t      @updateMembership=\"event => handleMembershipUpdate(event, 'isSubscriber', 'numberOfSubscribers')\"\n\t\t      class=\"w-min mn-b-medium\tmn-r-auto mn-l-auto\" \n\t    \t/>\n\n\t    \t<h4 \n\t      \tv-if=\"Object.values(users.state.current.socials).some(value => value)\" \n\t      \tclass=\"mn-t-small mn-b-thin\"\n\t      >\n\t    \t\tFind Me in Socials\n\t    \t</h4>\n\t     \t<Socials \n\t     \t\t:telegram=\"users.state.current.socials.telegram\"\n\t     \t\t:facebook=\"users.state.current.socials.facebook\"\n\t     \t\t:instagram=\"users.state.current.socials.instagram\"\n\t     \t\t:twitter=\"users.state.current.socials.twitter\"\n\t     \t\tclass=\"mn-r-auto mn-l-auto\"\n\t     \t/>\n\n\t\t\t</section>\n\t\t\t\n\t\t\t\n\n\t\t\t<Menu v-if=\"filteredModules.length > 0\" class=\"mn-b-regular bg-light\">\n\t      <MenuItem \n\t        v-for=\"module in filteredModules\" \n\t        :key=\"module.name\"\n\t        @click=\"router.push({\n\t          name: `${module.route}`, \n\t          params: {\n\t            _id: route.params._id,\n\t            user: route.params._id\n\t          }\n\t        })\" \n\t        class=\"profile-menu-item cursor-pointer\"\n\t      >\n\t        <component \n\t          :is=\"module.icon\" \n\t          v-if=\"module.icon\"\n\t          class=\"i-semi\" \n\t          :icon=\"true\"\n\t        />\n\t        <span>{{ module.displayName }}</span>\n      \t</MenuItem>\n   \t\t</Menu>\n\t\t\t  \n\t\t\t<Menu \n\t\t\t\tv-if=\"auth.state.user._id === route.params._id\"\n\t\t\t\tclass=\"bg-light\"\n\t\t\t>\n\t\t\t\t<MenuItem \n\t\t\t  \t@click=\"router.push({\n\t\t\t  \t\tname: 'Notifications', \n\t\t\t  \t\tparams: {\n\t\t\t  \t\t\t_id: route.params._id\n\t\t\t  \t\t}\n\t\t\t  \t})\" \n\t\t\t  \tclass=\"cursor-pointer\">\n\t\t\t    <span>\n\t\t\t    \tNotifications\n\t\t\t    </span>\n\t\t\t  </MenuItem>\n\t\t\t  <MenuItem \n\t\t\t  \t@click=\"router.push({\n\t\t\t  \t\tname: 'User Edit Profile', \n\t\t\t  \t\tparams: {\n\t\t\t  \t\t\t_id: route.params._id\n\t\t\t  \t\t}\n\t\t\t  \t})\" \n\t\t\t  \tclass=\"cursor-pointer\">\n\t\t\t    <span>\n\t\t\t    \tSettings\n\t\t\t    </span>\n\t\t\t  </MenuItem>\n\n\t\t\t  <MenuItem \n\t\t\t  \t@click=\"router.push({\n\t\t\t  \t\tname: 'Legal', \n\t\t\t  \t\tparams: {\n\t\t\t  \t\t\t_id: route.params._id\n\t\t\t  \t\t}\n\t\t\t  \t})\" \n\t\t\t  \tclass=\"cursor-pointer\">\n\t\t\t    <span>\n\t\t\t    \tAbout\n\t\t\t    </span>\n\t\t\t  </MenuItem>\n\t\t\t  \n\t\t\t  <MenuItem \n\t\t\t  \tclass=\"cursor-pointer\"\n\t\t\t\t\t@click=\"logout()\"\n\t\t\t  >\n\t\t\t    <span \n\t\t\t    \tclass=\"t-red\"\n\t\t\t    >\n\t\t\t    \tLogout\n\t\t\t    </span>\n\t\t\t  </MenuItem>\n\t\t\t</Menu>\n\n\t\t</div>\n\t</div>\n</template>\n\n<script setup>\n// Import components\nimport Field         from '@martyrs/src/components/Field/Field.vue'\nimport Button        from '@martyrs/src/components/Button/Button.vue'\nimport Dropdown from \"@martyrs/src/components/Dropdown/Dropdown.vue\";\nimport Completion from '@martyrs/src/components/Completion/Completion.vue'\n// Mobile Module\nimport Menu from '@martyrs/src/components/Menu/Menu.vue'\nimport MenuItem from '@martyrs/src/components/Menu/MenuItem.vue'\n// Org Module\nimport ButtonToggleMembership from '@martyrs/src/modules/organizations/components/elements/ButtonToggleMembership.vue'\n// Report Module\nimport FormReport from '@martyrs/src/modules/reports/components/sections/FormReport.vue'   \n// Community Module \nimport Activity from '@martyrs/src/modules/community/components/blocks/Activity.vue'; \nimport Socials from '@martyrs/src/modules/organizations/components/blocks/Socials.vue'\n// Icons Module\nimport IconEvents from '@martyrs/src/modules/icons/entities/IconEvents.vue'\nimport IconGroups from '@martyrs/src/modules/icons/entities/IconGroups.vue'\nimport IconCommunity from '@martyrs/src/modules/icons/entities/IconCommunity.vue'\nimport IconOrders from '@martyrs/src/modules/icons/entities/IconOrders.vue'\n\nimport IconEdit from '@martyrs/src/modules/icons/navigation/IconEdit.vue'\n\nimport PlaceholderUserpic from '@martyrs/src/modules/icons/placeholders/PlaceholderUserpic.vue'\n// Import libs\nimport { computed, watch, onMounted, ref, onBeforeMount, inject } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\n\n// Import state\nimport * as auth from '@martyrs/src/modules/auth/views/store/auth.js'\nimport * as users from '@martyrs/src/modules/auth/views/store/users.js'\nimport * as memberships from '@martyrs/src/modules/organizations/store/memberships.js'\n// Accessing router\nconst route = useRoute()\nconst router = useRouter()\n// Get organization _id from cookie\nconst show = ref(false)\n\nconst store = inject('store')\n\nconst moduleMapping = {\n  events: {\n    displayName: 'Events',\n    route: 'User Events',\n    icon: IconEvents\n  },\n  organizations: {\n    displayName: 'Groups',\n    route: 'User Organizations',\n    icon: IconGroups\n  },\n  blogposts: {\n    displayName: 'Posts',\n    route: 'User Posts',\n    icon: IconCommunity\n  },\n  orders: {\n    displayName: 'Orders',\n    route: 'UserOrdersList',\n    icon: IconOrders,\n    visible: (auth) => auth.state.user && (\n      auth.state.user._id === route.params._id || \n      (auth.state.access && auth.state.access.roles && \n        (auth.state.access.roles.includes('ROLE_MODERATOR') || \n         auth.state.access.roles.includes('ROLE_ADMIN'))\n      )\n    )\n  }\n}\n\nconst filteredModules = computed(() => {\n  return store.modules\n    .map(moduleName => {\n      return {\n        name: moduleName,\n        ...moduleMapping[moduleName]\n      }\n    })\n    .filter(module => {\n      // Проверяем существование маппинга для модуля\n      if (!moduleMapping[module.name]) return false;\n      \n      // Проверяем видимость модуля, если есть условие visible\n      if (module.visible && typeof module.visible === 'function') {\n        return module.visible(auth);\n      }\n      \n      // По умолчанию показываем модуль, если есть маппинг\n      return true;\n    })\n})\n\nonMounted(async () => {\n \tawait users.actions.read({ _id: route.params._id, user: auth.state.user._id });\n \tshow.value = true\n})\n\nconst handleMembershipUpdate = ({ membership, status, target }, statusName, statusNumber) => {\n  memberships.mutations.handleMembershipUpdate(users.state.current, membership, status, target, statusName, statusNumber)\n};\n\nfunction logout () {\n  auth.actions.logout()\n\n  router.push({name: 'Sign In'})\n}\n</script>\n\n<style lang=\"scss\">\n\t#header {\n\t\t// height: 3rem;\n\t}\n</style>\n",
                  "name": "Profile.vue",
                  "size": 10004,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/auth/views/components/pages/ProfileBlogposts.vue",
                  "relativePath": "modules/auth/views/components/pages/ProfileBlogposts.vue",
                  "extension": ".vue",
                  "content": "<template>\n\t<div class=\"pd-thin\">\n\t\t<header class=\"mn-b-medium flex-v-center flex-nowrap flex\">\n    \t<h2 class=\"mn-r-medium\">Posts</h2>\n    \t<button \n    \t\tv-if=\"auth.state.user._id === route.params._id\"\n    \t\t@click=\"$router.push({\n    \t\t\tname: 'Create BlogPost'\n    \t\t})\" \n    \t\tclass=\"radius-100 t-white t-semi i-big hover-scale-1 cursor-pointer t-white bg-second\">\n    \t\t\t+\n    \t</button>\n\t\t</header>\n\n\t\t<Tab \n\t\t\tv-if=\"auth.state.user._id === route.params._id\"\n\t\t\tv-model:selected=\"tabOrganization\"\n\t\t\t:tabs=\"[\n\t\t\t\t{ name: 'My posts', \tvalue: 'posts' },\n\t\t\t\t{ name: 'Drafts', \t\tvalue: 'drafts' },\n\t\t\t\t{ name: 'Following', \tvalue: 'following' },\t\n\t\t\t]\"\n\t\t\tclass=\"mn-b-small o-hidden h5 radius-big bg-light\"\n\t\t/>\n\n\t\t<Feed\n\t\t\t:showLoadMore=\"false\"\n\t\t\t:states=\"{\n\t\t\t\tempty: {\n\t\t\t\t\ttitle: 'No Blog Posts Found',\n\t\t\t\t\tdescription: 'Currently, there are no posts available in this blog. Please check back later.'\n\t\t\t\t},\n\t\t\t}\"\n\t\t\t:store=\"{\n\t\t\t\tread: (options) => blog.read(options)\n\t\t\t}\"\n\t\t\t:options=\"{\n\t\t\t\tlimit: 15,\n\t\t\t\tcategory: route.params.category,\n\t\t\t\tperiod: route.query.period,\n\t\t\t\tstatus: tabOrganization === 'drafts' ? 'draft' : 'published',\n\t\t\t\tuser: auth.state.user._id,\n\t\t\t\tcreator: ['posts', 'drafts'].includes(tabOrganization) ? route.params._id : null,\n\t\t\t\tfollowing: tabOrganization === 'following' ? auth.state.user._id : null,\n\t\t\t}\"\n\t\t\tv-slot=\"{ items }\"\n\t\t\tclass=\"rows-1 gap-thin\"\n\t\t>\n\t\t\t<CardBlogpost \n\t\t\t\tv-for=\"item in items\" \n\t\t\t\t:key=\"item._id\" \n\t\t\t\t:blogpost=\"item\" \n\t\t\t\t:user=\"auth.state.user._id\" \n\t\t\t\tclass=\"h-max-40r bg-light radius-medium\"\n\t\t\t/>\n\t\t</Feed>\n\t</div>\n</template>\n\n<script setup>\n\timport { watch, ref } from 'vue'\n\timport { useRoute, useRouter } from 'vue-router'\n\t// Components\n\timport Tab  \t\tfrom '@martyrs/src/components/Tab/Tab.vue'\n\n\timport Feed from '@martyrs/src/components/Feed/Feed.vue'\n\n  import CardBlogpost from '@martyrs/src/modules/community/components/blocks/CardBlogpost.vue';\n\n\timport * as auth from '@martyrs/src/modules/auth/views/store/auth.js';\n  import * as blog from '@martyrs/src/modules/community/store/blogposts.js';\n\t// Accessing router\n\tconst route = useRoute()\n\tconst router = useRouter()\n\t// State\n\tlet tab = route.query.tab ? route.query.tab : 'posts';\n\n\tconst tabOrganization = ref(tab)\n\n\troute.query.tab = tabOrganization.value\n\n\twatch(tabOrganization, (newValue) => {\n\t  router.replace({ query: { ...route.query, tab: newValue } });\n\t});\n</script>",
                  "name": "ProfileBlogposts.vue",
                  "size": 2421,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/auth/views/components/pages/ProfileComments.vue",
                  "relativePath": "modules/auth/views/components/pages/ProfileComments.vue",
                  "extension": ".vue",
                  "content": "<template>\n\t<div class=\"pd-thin\">\n\t\t<header class=\"mn-b-medium flex-v-center flex-nowrap flex\">\n\t      \t<h2 class=\"mn-r-medium\">Comments</h2>\n\t\t</header>\n\n\t\t<Tab \n\t\t\tv-model:selected=\"tabOrganization\"\n\t\t\t:tabs=\"[\n\t\t\t\t{ name: 'My posts', \tvalue: 'posts' },\n\t\t\t\t{ name: 'Following', \tvalue: 'hubs' },\t\n\t\t\t]\"\n\t\t\tclass=\"mn-r-medium o-hidden h5 radius-big bg-light\"\n\t\t/>\n\n\t\t<Feed \n\t\t\tv-if=\"tabOrganization === 'posts'\"\n\t  \t\t:user=\"route.params._id\"\n\t\t\t:owner=\"route.params._id\"\n\t\t/>\n\t</div>\n</template>\n\n<script setup>\n\timport { watch, ref } from 'vue'\n\timport { useRoute, useRouter } from 'vue-router'\n\t// Components\n\timport Tab  \t\tfrom '@martyrs/src/components/Tab/Tab.vue'\n\timport Feed from '@martyrs/src/modules/community/components/sections/Feed.vue'; \n\t// Accessing router\n\tconst route = useRoute()\n\tconst router = useRouter()\n\t// State\n\tlet tab = route.query.tab ? route.query.tab : 'posts';\n\n\tconst tabOrganization = ref(tab)\n\n\troute.query.tab = tabOrganization.value\n\n\twatch(tabOrganization, (newValue) => {\n\t  router.replace({ query: { ...route.query, tab: newValue } });\n\t});\n</script>",
                  "name": "ProfileComments.vue",
                  "size": 1091,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/auth/views/components/pages/ProfileEdit.vue",
                  "relativePath": "modules/auth/views/components/pages/ProfileEdit.vue",
                  "extension": ".vue",
                  "content": "<template>\n\t<div  v-if=\"show\" class=\"for-transition w-100\">\n   \n    <!-- <ProfileCompletion \n      v-if=\"route.params._id === auth.state.user._id\" \n      :user=\"auth.state.user._id\"\n      :target=\"users.state.current\"\n      :cta=\"false\"\n    /> -->\n\n    <div class=\"bg-white mn-b-thin pd-medium\">\n      <h4 class=\"mn-b-small\">Profile</h4>\n\n      <div class=\"mn-b-thin radius-small w-100 h-10r bg-light flex-center flex-column flex\">\n         <UploadImage \n            v-model:photo=\"users.state.current.profile.photo\"\n            :uploadPath=\"'users/' + users.state.current._id + '/avatars'\"\n            class=\"h-4r w-4r aspect-1x1 o-hidden bg-white mn-b-thin radius-extra\" \n          />\n          <h4>Upload userpic</h4>\n      </div>\n\n      <Field \n        v-model:field=\"users.state.current.username\"     \n        label=\"@\"  \n        placeholder=\"Not specified\" \n        class=\"mn-b-thin w-100 bg-light pd-medium radius-small\" \n        :validation=\"organizationName\" \n      />\n\n      <p class=\"mn-b-semi\">Your username will be used for URL of profile like {{API_URL}}/users/username</p>\n\n      <Field \n        v-model:field=\"users.state.current.profile.name\"     \n        label=\"Name\"  \n        placeholder=\"Not specified\" \n        class=\"mn-b-thin bg-light pd-medium radius-small\" \n        :validation=\"organizationName\" \n      />\n\n      <Field \n        v-model:field=\"users.state.current.profile.description\"     \n        label=\"Description\"  \n        placeholder=\"Not specified\" \n        class=\"mn-b-semi bg-light pd-medium radius-small\" \n        :validation=\"organizationName\" \n      />\n    </div>\n\n    <!-- <p class=\"mn-b-thin\">Select your birthday if you want to receive your birthday gift.</p>\n    \n    <Field \n      v-model:field=\"users.state.current.birthday\"     \n      label=\"Birthday\"  \n      type=\"date\"\n      placeholder=\"Not specified\" \n      class=\"mn-b-semi bg-light pd-medium radius-small\" \n      :validation=\"organizationName\" \n    /> -->\n    <div class=\"bg-white mn-b-thin pd-medium\">\n      <h3 class=\"mn-b-small\">Socials</h3>\n      <p class=\"mn-b-thin\">Please provide only the username for social media profiles, without full links.</p>\n\n      <Field \n        v-model:field=\"users.state.current.socials.instagram\"\n        label=\"Instagram\"   \n        placeholder=\"\" \n        class=\"mn-b-thin bg-light pd-medium radius-small\" \n      />\n      <Field \n        v-model:field=\"users.state.current.socials.twitter\"\n        label=\"Twitter\"   \n        placeholder=\"\" \n        class=\"mn-b-thin bg-light pd-medium radius-small\" \n      />\n      <Field \n        v-model:field=\"users.state.current.socials.facebook\"\n        label=\"Facebook\"   \n        placeholder=\"\" \n        class=\"mn-b-thin bg-light pd-medium radius-small\" \n      />\n      <Field \n        v-model:field=\"users.state.current.socials.telegram\"\n        label=\"Telegram\"   \n        placeholder=\"\" \n        class=\"mn-b-semi bg-light pd-medium radius-small\" \n      />\n    </div>\n\n    <ProfileEditCredentials class=\"bg-white mn-b-thin pd-medium\"/>\n\n    <div class=\"bg-white mn-b-thin pd-medium\">\n      <h3 class=\"mn-b-small\">Settings</h3>\n      <Checkbox \n        :label=\"'Darkmode'\"\n        :radio=\"globals.state.theme.darkmode\"\n        @update:radio=\"event => globals.actions.toggleTheme()\"\n        class=\"w-100 bg-light t-black pd-medium radius-small\"\n      />\n    </div>\n\n    <Button \n      :submit=\"onSubmit\" \n      :callback=\"redirectTo\" \n      class=\"mn-b-thin bg-main w-100\"\n    > \n      Save\n    </Button>\n\n\t\t<Button\n      :submit=\"onSubmitDelete\" \n      :callback=\"a = () => {router.push({name: 'Sign In'})}\" \n      class=\"mn-b-thin w-100 bg-red t-white\"\n    >\n      Delete Account\n    </Button>\n\t</div>\n</template>\n\n<script setup>\n  // Import components\n  import Tab           from '@martyrs/src/components/Tab/Tab.vue'\n  import Field         from '@martyrs/src/components/Field/Field.vue'\n  import Checkbox from '@martyrs/src/components/Checkbox/Checkbox.vue'\n  import Button        from '@martyrs/src/components/Button/Button.vue'\n  import UploadImage   from '@martyrs/src/components/UploadImage/UploadImage.vue';\n\n  import ProfileCompletion from '@martyrs/src/modules/auth/views/components/sections/ProfileCompletion.vue'\n  import ProfileEditCredentials from '@martyrs/src/modules/auth/views/components/sections/ProfileEditCredentials.vue'\n  // Import libs\n  import { computed, onMounted, ref, onBeforeMount } from 'vue'\n  import { useRoute, useRouter } from 'vue-router'\n  // Import state\n  import * as auth from '@martyrs/src/modules/auth/views/store/auth.js'\n  import * as users from '@martyrs/src/modules/auth/views/store/users.js'\n  import * as globals from '@martyrs/src/modules/globals/views/store/globals.js'\n  // Import validation\n  import * as inputsValidation from '@martyrs/src/modules/auth/views/validations/inputs.validation'\n  const passswordValidation = ref(null)\n  // Accessing router\n  const route = useRoute()\n  const router = useRouter()\n\n  const user = ref(null)\n  const show = ref(false)\n\n\n  onMounted(async () => {\n    await users.actions.read({ _id: route.params._id, user: auth.state.user._id });\n    show.value = true\n  })\n  // Methods\n\n  async function onSubmit() {\n    await users.actions.update(users.state.current)\n  }\n\n  // Добавляем редирект после сохранения\nasync function handleSave() {\n  await onSubmit()\n  router.replace({ name: 'User Profile', params: { _id: users.state.current._id }})\n}\n\n  async function onSubmitDelete() {\n    const confirmation = window.confirm(\"Are you sure you want to delete your account? Restoration will be possible only with the help of an administrator.\");\n    \n    if (!confirmation) {\n        return;\n    }\n\n    users.state.current.status = 'removed'\n    await users.actions.update(users.state.current)\n    auth.actions.logout()\n  }\n  function redirectTo () {\n    router.replace({ name: 'User Profile', params: { _id: users.state.current._id }});\n  }\n\n  defineExpose({\n    onSubmit,\n    redirectTo\n  })\n</script>\n\n<style lang=\"scss\">\n\t#header {\n\t\t// height: 3rem;\n\t}\n</style>\n",
                  "name": "ProfileEdit.vue",
                  "size": 6028,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/auth/views/components/pages/ProfileLikes.vue",
                  "relativePath": "modules/auth/views/components/pages/ProfileLikes.vue",
                  "extension": ".vue",
                  "content": "<template>\n\t<div class=\"pd-thin\">\n\t\t<header class=\"mn-b-medium flex-v-center flex-nowrap flex\">\n\t      \t<h2 class=\"mn-r-medium\">Likes</h2>\n\t\t</header>\n\n\t\t<Tab \n\t\t\tv-model:selected=\"tabOrganization\"\n\t\t\t:tabs=\"[\n\t\t\t\t{ name: 'My posts', \tvalue: 'posts' },\n\t\t\t\t{ name: 'Following', \tvalue: 'hubs' },\t\n\t\t\t]\"\n\t\t\tclass=\"mn-r-medium o-hidden h5 radius-big bg-light\"\n\t\t/>\n\n\t\t<Feed \n\t\t\tv-if=\"tabOrganization === 'posts'\"\n\t  \t\t:user=\"route.params._id\"\n\t\t\t:owner=\"route.params._id\"\n\t\t/>\n\t</div>\n</template>\n\n<script setup>\n\timport { watch, ref } from 'vue'\n\timport { useRoute, useRouter } from 'vue-router'\n\t// Components\n\timport Tab  \t\tfrom '@martyrs/src/components/Tab/Tab.vue'\n\timport Feed from '@martyrs/src/modules/community/components/sections/Feed.vue'; \n\t// Accessing router\n\tconst route = useRoute()\n\tconst router = useRouter()\n\t// State\n\tlet tab = route.query.tab ? route.query.tab : 'posts';\n\n\tconst tabOrganization = ref(tab)\n\n\troute.query.tab = tabOrganization.value\n\n\twatch(tabOrganization, (newValue) => {\n\t  router.replace({ query: { ...route.query, tab: newValue } });\n\t});\n</script>",
                  "name": "ProfileLikes.vue",
                  "size": 1088,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/auth/views/components/pages/ResetPassword.vue",
                  "relativePath": "modules/auth/views/components/pages/ResetPassword.vue",
                  "extension": ".vue",
                  "content": "<template>\n\t<section class=\"t-left pd-medium\">\n\t\t<!-- <img loading=\"lazy\" src=\"@/assets/icons/password.png\" class=\"i-extra mn-b-small\"> -->\n\t\t<!-- Header -->\n\t\t<h3 class=\"mn-b-small\">{{ t('forgotPasswordTitle') }}</h3>\n\t\t<p class=\"mn-b-small t-transp\">{{ t('instructions') }}</p>\n\t\t\n\t\t<!-- Select -->\n\t\t<div \n\t\t\tv-if=\"availableTabs.length > 1\" \n\t\t\tclass=\"mn-b-small p-small uppercase t-semi bg-light radius-small o-hidden\"\n\t\t>\n\t\t\t<Tab \n\t\t\t\tv-model:selected=\"tabAuth\"\n\t\t\t\t:tabs=\"availableTabs\"\n\t\t\t\ttabClass=\"pd-small pd-r-medium pd-l-medium w-100 pd-small radius-small\"\n\t\t\t/>\n\t\t</div>\n\n\t\t<!-- Form -->\n\t\t<div class=\"pos-relative\">\n\t\t<!-- Phone -->\n\t\t\t<transition name=\"slide-fade\">\n\t\t\t\t<div v-if=\"tabAuth === 'phone'\" class=\"mn-b-semi radius-small\">\n\t\t\t\t\t<p class=\"mn-b-small t-transp\">{{ t('smsInfo') }}</p>\n\t\t\t\t\t<FieldPhone\n\t\t\t\t\t\t@change=\"(event) => auth.state.user.phone = event\" \t\n\t\t\t\t\t\t:dropdownOptions=\"{\n\t\t\t\t\t\t\tshowDialCodeInSelection: true,\n\t\t\t\t\t\t\tshowFlags: true,\n\t\t\t\t\t\t\tshowDialCodeInList: true\n\t\t\t\t\t\t}\"\n\t\t\t\t\t\t:validation=\"phoneValidation\" \n\t\t\t\t\t\tmode=\"national\"\n\t\t\t\t\t\t:inputOptions=\"{placeholder: t('phonePlaceholder')}\"\n\t\t\t\t\t\tclass=\"bg-light h-4r pd-small radius-small mn-b-thin\" \n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</transition>\n\t\t\t<!-- Email -->\n\t\t\t<transition name=\"slide-fade\">\n\t\t\t\t<div v-if=\"tabAuth === 'email'\" class=\"mn-b-semi radius-small o-hidden\">\n\t\t\t\t\t<p class=\"mn-b-small t-transp\">{{ t('emailInfo') }}</p>\n\t\t\t\t\t<Field \n\t\t\t\t\t\tv-model:field=\"auth.state.user.email\" \t\t\n\t\t\t\t\t\t:placeholder=\"t('emailPlaceholder')\" \t\n\t\t\t\t\t\t:validation=\"emailValidation\" \n\t\t\t\t\t\tclass=\"bg-light h-4r pd-medium radius-small\" \n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</transition>\n\t\t</div>\n\t\t<!-- Button -->\n\t\t<Button :submit=\"onSubmit\" :callback=\"redirectTo\" class=\"w-100 bg-main\">{{ t('sendCode') }}</Button>\n\t</section> \n</template>\n\n<script setup>\n// Import components\nimport Tab           from '@martyrs/src/components/Tab/Tab.vue'\nimport Field         from '@martyrs/src/components/Field/Field.vue'\nimport FieldPhone    from '@martyrs/src/components/FieldPhone/FieldPhone.vue'\nimport Button        from '@martyrs/src/components/Button/Button.vue'\n// Import libs\nimport { computed, onMounted, ref } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\nimport { useI18n } from 'vue-i18n'\n// Localization\nimport text from '@martyrs/src/modules/auth/views/localization/ResetPassword.json'\n// Import state\nimport * as auth from '@martyrs/src/modules/auth/views/store/auth.js'\nimport * as twofa from '@martyrs/src/modules/auth/views/store/twofa.js'\nimport * as globals from '@martyrs/src/modules/globals/views/store/globals.js'\n// Import validation\nimport * as inputsValidation from '@martyrs/src/modules/auth/views/validations/inputs.validation'\n// Localization\nconst { t } = useI18n({\n\tuseScope: 'global', \n\t...text\n})\n// Validation\nconst phoneValidation = ref(null)\nconst emailValidation = ref(null)\n// Accessing router\nconst route = useRoute()\nconst router = useRouter()\n// Accessing state\nconst availableTabs = computed(() => {\n    const tabs = [\n        { name: t('phone'), value: 'phone' },\n        { name: t('email'), value: 'email' }\n    ];\n    return tabs.filter(tab => !globals.state.options.auth.authMethodsExclude.includes(tab.value));\n});\n\nconst tabAuth = ref(availableTabs.value.length ? availableTabs.value[0].value : '');\n// Methods\nasync function onSubmit() {\n\ttry {\n\t  if (tabAuth.value === 'phone') await inputsValidation.validateInputs(\n\t\t\tphoneValidation, \n\t\t\tinputsValidation.validatePhone, \n\t\t\tauth.state.user.phone, \n\t\t\t'Некорректный телефон'\n\t\t)\n\t\tif (tabAuth.value === 'email') await inputsValidation.validateInputs(\n\t\t\temailValidation, \n\t\t\tinputsValidation.validateEmail, \n\t\t\tauth.state.user.email, \n\t\t\t'Некорректный email'\n\t\t)\n\t} catch (error) {\n\t\tthrow new Error\n\t}\n\ttry {\n  \tawait auth.actions.resetPassword(auth.state.user, tabAuth.value, 'reset-password')\n  } catch (error) {\n  \tconsole.log(error)\n\t\tthrow new Error\n\t}\n}\n\nfunction redirectTo () {\n\trouter.push({ name: 'Enter Code', query: {type: tabAuth.value, method: 'reset-password'} })\n}\n</script>\n\n<style lang=\"scss\">\n\t.slide-fade-enter-active {\n\t  transition: all  0.3s cubic-bezier(0.4, 0, 0.2, 1);\n\t}\n\n\t.slide-fade-leave-active {\n\t  transition: all  0.3s cubic-bezier(0.4, 0, 0.2, 1);\n\n\t}\n\n\t.slide-fade-enter-from,\n\t.slide-fade-leave-to {\n\t\tposition: absolute;\n\t  transform: translateX(20px);\n\t  opacity: 0;\n\t  left: 0;\n\t  top: 0;\n\t}\n\n\t.slide-fade-leave-to {\n\n\t}\n</style>\n",
                  "name": "ResetPassword.vue",
                  "size": 4437,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/auth/views/components/pages/SignIn.vue",
                  "relativePath": "modules/auth/views/components/pages/SignIn.vue",
                  "extension": ".vue",
                  "content": "<template>\n\t<section class=\"\">\n\t\t<!-- Header -->\n\t\t<img loading=\"lazy\" :src=\"'/logo/logo.svg'\" class=\"i-extra radius-small mn-b-small\">\n\n\t\t<h3 class=\"mn-b-medium\">\n\t\t\t{{ t('title') }}\n\t\t\t<br>\n\t\t\t<span class=\"t-semi\">{{ t('subtitle') }}</span>\n\t\t</h3>\n\n\t\t<p class=\"mn-b-big\">\n\t\t\t<router-link :to=\"{name: 'Sign Up', query: { returnUrl: route.query?.returnUrl}}\" class=\"underline t-second\">{{ t('signup') }}</router-link>\n\t\t</p>\n\t\t\n\t\t<!-- Select -->\n\t\t<div \n\t\t\tv-if=\"availableTabs.length > 1\" \n\t\t\tclass=\"mn-b-small p-small uppercase t-semi bg-light radius-small o-hidden\"\n\t\t>\n\t\t\t<Tab \n\t\t\t\tv-model:selected=\"tabAuth\"\n\t\t\t\t:tabs=\"availableTabs\"\n\t\t\t\ttabClass=\"pd-small pd-r-medium pd-l-medium w-100 pd-small radius-small\"\n\t\t\t/>\n\t\t</div>\n\t\t<!-- Form -->\n\t\t<div class=\"pos-relative\">\n\t\t<!-- Phone -->\n\t\t\t<transition name=\"slide-fade\">\n\t\t\t\t<div v-show=\"tabAuth === 'phone'\" class=\"mn-b-thin radius-small\">\n\t\t\t\t\t<FieldPhone\n\t\t\t\t\t\t@change=\"(event) => auth.state.user.phone = event\" \t\n\t\t\t\t\t\t:dropdownOptions=\"{\n\t\t\t\t\t\t\tshowDialCodeInSelection: true,\n\t\t\t\t\t\t\tshowFlags: true,\n\t\t\t\t\t\t\tshowDialCodeInList: true,\n\t\t\t\t\t\t\ttabIndex: -1\n\t\t\t\t\t\t}\"\n\t\t\t\t\t\t:validCharactersOnly=\"true\"\n\t\t\t\t\t\t:validation=\"phoneValidation\" \n\t\t\t\t\t\tmode=\"national\"\n\t\t\t\t\t\t:inputOptions=\"{placeholder: t('phonePlaceholder'), type: 'tel'}\"\n\t\t\t\t\t\tclass=\"bg-light h-4r pd-small radius-small mn-b-thin\" \n\t\t\t\t\t/>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</transition>\n\t\t\t<transition name=\"slide-fade\">\n\t\t\t\t<div v-show=\"tabAuth === 'email'\" class=\"mn-b-thin radius-small o-hidden\">\n\t\t\t\t\t<Field \n\t\t\t\t\t\tv-model:field=\"auth.state.user.email\" \t\n\t\t\t\t\t\t:placeholder=\"t('emailPlaceholder')\" \t\n\t\t\t\t\t\t:validation=\"emailValidation\"\n\t\t\t\t\t\t:tabIndex=\"-1\"\n\t\t\t\t\t\tclass=\"bg-light h-4r pd-medium radius-small\" \n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</transition>\n\t\t</div>\n\n\t\t<!-- Password -->\n\t\t<Field \n\t\t\tv-model:field=\"auth.state.user.password\"\n\t\t\ttype=\"password\" \t\n\t\t\t:validation=\"passswordValidation\" \n\t\t\t:placeholder=\"t('passwordPlaceholder')\" \n\t\t\tclass=\"\n        bg-light\n        pd-medium\n        radius-small\n        mn-b-semi\n        h-4r \n      \"\n\t\t/>\n\t\t<!-- Links -->\n\t\t<div class=\"w-100 mn-b-big\">\n\t\t\t<router-link\n\t\t\t\t:to=\"{name: 'Reset Password', query: { returnUrl: route.query?.returnUrl}}\"\n\t\t\t\tclass=\"underline d-block t-blue\"\n\t\t\t>\n\t\t\t\t{{ t('forgotPassword') }}\n\t\t\t</router-link>\n\t\t</div>\n\t\t<!-- Button -->\n\t\t<Button \n\t\t\t:submit=\"onSubmit\" \n\t\t\t:callback=\"redirectTo\" \n\t\t\tclass=\"w-100 bg-main\"\n\t\t>\n\t\t\t{{ t('signin') }}\n\t\t</Button>\n\t\t\n\t\t<!-- <Button \n\t\t\t:submit=\"onSubmitApple\" \n\t\t\t:callback=\"redirectTo\" \n\t\t\tclass=\"mn-b-thin bg-black t-white\"\n\t\t>\n\t\t\t{{ t('signin_apple') }}\n\t\t</Button> -->\n\t</section> \n</template>\n\n<script setup>\n// Import components\nimport Tab           from '@martyrs/src/components/Tab/Tab.vue'\nimport Field         from '@martyrs/src/components/Field/Field.vue'\nimport FieldPhone    from '@martyrs/src/components/FieldPhone/FieldPhone.vue'\nimport Button        from '@martyrs/src/components/Button/Button.vue'\n// Import libs\nimport { computed, onMounted, ref, inject } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\nimport { useI18n } from 'vue-i18n'\n// Import localization\nimport text from '@martyrs/src/modules/auth/views/localization/SignIn.json'\n// Import state\nimport * as auth from '@martyrs/src/modules/auth/views/store/auth.js'\nimport * as globals from '@martyrs/src/modules/globals/views/store/globals.js'\n// Import validation\nimport * as inputsValidation from '@martyrs/src/modules/auth/views/validations/inputs.validation'\n// Init validation\nconst phoneValidation = ref(null)\nconst passswordValidation = ref(null)\nconst emailValidation = ref(null)\n// Accessing router\nconst route = useRoute()\nconst router = useRouter()\n// Localization\nconst { t } = useI18n({\n\tuseScope: 'global', \n\t...text\n})\n// Accessing state\nconst availableTabs = computed(() => {\n    const tabs = [\n        { name: t('phone'), value: 'phone' },\n        { name: t('email'), value: 'email' }\n    ];\n    return tabs.filter(tab => !globals.state.options.auth.authMethodsExclude.includes(tab.value));\n});\n\nconst tabAuth = ref(availableTabs.value.length ? availableTabs.value[0].value : '');\n\nconst loadExternalScript = (src) => {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = src;\n    script.onload = resolve;\n    script.onerror = reject;\n    document.head.appendChild(script);\n  });\n}\n\nonMounted(async () => {\n\tawait loadExternalScript('https://appleid.cdn-apple.com/appleauth/static/jsapi/appleid/1/en_US/appleid.auth.js');\n});\n// Methods\nasync function onSubmit() {\n\ttry {\n\t  if (tabAuth.value === 'phone') await inputsValidation.validateInputs(\n\t\t\tphoneValidation, \n\t\t\tinputsValidation.validatePhone, \n\t\t\tauth.state.user.phone, \n\t\t\t'Некорректный телефон'\n\t\t)\n\t\tif (tabAuth.value === 'email') await inputsValidation.validateInputs(\n\t\t\temailValidation, \n\t\t\tinputsValidation.validateEmail, \n\t\t\tauth.state.user.email, \n\t\t\t'Некорректный email'\n\t\t)\n\t} catch (error) {\n\t\tconsole.log(error)\n\t\tthrow new Error\n\t}\n\n\t// COSTIL PLEASE GOD MAKE IT GOOD, FUKEN INPUT COMPONENT RETURN OBJECT NUT NUMBER\n\tconst userCopy = {...auth.state.user};\n\t// COSTIL PLEASE GOD MAKE IT GOOD, FUKEN INPUT COMPONENT RETURN OBJECT NUT NUMBER\n\n \tawait auth.actions.login(userCopy, tabAuth.value)\n}\n\nasync function onSubmitApple() {\n  try {\n    window.AppleID.auth.init({\n      clientId: 'com.thecommune.app.signin',\n      scope: 'email name',\n      redirectURI: 'https://thecommunephuket.com/auth/signin',\n      usePopup: true,\n    });\n\n    let response = await window.AppleID.auth.signIn();\n\n    if (response) {\n      console.log(response);\n      await auth.actions.login(response, 'apple');\n    }\n\n  } catch (error) {\n    console.error(error);\n    throw new Error('Error during Apple authentication');\n  }\n}\n\nfunction redirectTo () {\n\tif (route.query?.returnUrl) {\n\t\trouter.push({ \n\t\t\tpath: route.query?.returnUrl,\n\t\t\tquery: { \n\t\t\t\tafterAuth: 'true' \n\t\t\t}\n\t\t})\n\t} else { \n\t\trouter.push({ \n\t\t\tname: 'User Profile', \n\t\t\tparams: { \n\t\t\t\t_id: auth.state.user._id \n\t\t\t},\n\t\t\tquery: { \n\t\t\t\tafterAuth: 'true' \n\t\t\t}\n\t\t})\n\t}\n}\n</script>\n\n<style lang=\"scss\">\n\n\t.input-error {\n\t  border: 1px solid red;\n\t  box-shadow: 0 0 3px 0 red;\n\t}\n</style>",
                  "name": "SignIn.vue",
                  "size": 6227,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/auth/views/components/pages/SignUp.vue",
                  "relativePath": "modules/auth/views/components/pages/SignUp.vue",
                  "extension": ".vue",
                  "content": "<template>\n\t<section class=\"t-left pd-medium\">\n\t\t<!-- Header -->\n\t\t<!-- <img loading=\"lazy\" src=\"@/assets/images/logo.svg\" class=\"i-extra mn-b-small\"> -->\n\t\t<h3 class=\"mn-b-small\">{{t('title')}}</h3>\n\t\t\n\t\t<!-- Select -->\n\t\t<div \n\t\t\tv-if=\"availableTabs.length > 1\" \n\t\t\tclass=\"mn-b-small p-small uppercase t-semi bg-light radius-small o-hidden\"\n\t\t>\n\t\t\t<Tab \n\t\t\t\tv-model:selected=\"tabAuth\"\n\t\t\t\t:tabs=\"availableTabs\"\n\t\t\t\ttabClass=\"pd-small pd-r-medium pd-l-medium w-100 pd-small radius-small\"\n\t\t\t/>\n\t\t</div>\n\n\t\t<!-- Form -->\n\t\t<div class=\"pos-relative\">\n\t\t<!-- Phone -->\n\t\t\t<transition name=\"slide-fade\">\n\t\t\t\t<div v-show=\"tabAuth === 'phone'\" class=\"mn-b-semi radius-small\">\n\t\t\t\t\t<p class=\"mn-b-small t-transp\">{{t('smsNotice')}}</p>\n\t\t\t\t\t<FieldPhone\n\t\t\t\t\t\t@change=\"(event) => auth.state.user.phone = event\" \t\n\t\t\t\t\t\t:dropdownOptions=\"{\n\t\t\t\t\t\t\tshowDialCodeInSelection: true,\n\t\t\t\t\t\t\tshowFlags: true,\n\t\t\t\t\t\t\tshowDialCodeInList: true\n\t\t\t\t\t\t}\"\n\t\t\t\t\t\t:validation=\"phoneValidation\" \n\t\t\t\t\t\tmode=\"national\"\n\t\t\t\t\t\t:inputOptions=\"{placeholder: t('phonePlaceholder')}\"\n\t\t\t\t\t\tclass=\"bg-light h-4r pd-small radius-small mn-b-thin\" \n\t\t\t\t\t/>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</transition>\n\t\t\t<transition name=\"slide-fade\">\n\t\t\t\t<div v-show=\"tabAuth === 'email'\" class=\"mn-b-semi radius-small o-hidden\">\n\t\t\t\t\t<p class=\"mn-b-small t-transp\">{{t('emailNotice')}}</p>\n\t\t\t\t\t<Field \n\t\t\t\t\t\tv-model:field=\"auth.state.user.email\" \t\n\t\t\t\t\t\t:placeholder=\"t('emailPlaceholder')\" \t\n\t\t\t\t\t\t:validation=\"emailValidation\"\n\t\t\t\t\t\tclass=\"bg-light h-4r pd-medium radius-small\" \n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</transition>\n\t\t</div>\n\t\t\n\t\t<!-- Button -->\n\t\t<Button :submit=\"onSubmit\" :callback=\"redirectTo\" class=\"w-100 bg-main mn-b-big\">{{t('sendCode')}}</Button>\n\t\t\t\n\t\t<!-- Links -->\n\t\t<div class=\"w-100\">\n\t\t\t<router-link :to=\"{name: 'Sign In', query: { returnUrl: route.query.returnUrl}}\" class=\"underline mn-b-medium d-block t-blue\">{{t('haveAccount')}}</router-link>\n\t\t</div>\n\n\t</section> \n</template>\n\n\t<script setup>\n\t// Import components\n\timport Tab           from '@martyrs/src/components/Tab/Tab.vue'\n\timport Field         from '@martyrs/src/components/Field/Field.vue'\n\timport FieldPhone    from '@martyrs/src/components/FieldPhone/FieldPhone.vue'\n\timport Button        from '@martyrs/src/components/Button/Button.vue'\n\t// Import libs\n\timport { computed, onMounted, ref } from 'vue'\n\timport { useRoute, useRouter } from 'vue-router'\n\timport { useI18n } from 'vue-i18n'\n\t// Import localization\n\timport text from '@martyrs/src/modules/auth/views/localization/SignUp.json'\n\t// Import state\n\timport * as auth from '@martyrs/src/modules/auth/views/store/auth.js'\n\timport * as twofa from '@martyrs/src/modules/auth/views/store/twofa.js'\n\timport * as globals from '@martyrs/src/modules/globals/views/store/globals.js'\n\t// Import validation\n\timport * as inputsValidation from '@martyrs/src/modules/auth/views/validations/inputs.validation'\n\t// Localization\n\tconst { t } = useI18n({\n\t\tuseScope: 'global', \n\t\t...text\n\t})\n\t// Validation\n\tconst phoneValidation = ref(null)\n\tconst emailValidation = ref(null)\n\t// Accessing router\n\t// const store = useStore()\n\tconst route = useRoute()\n\tconst router = useRouter()\n\t// Accessing state\n\tconst availableTabs = computed(() => {\n\t    const tabs = [\n\t        { name: t('phone'), value: 'phone' },\n\t        { name: t('email'), value: 'email' }\n\t    ];\n\t    return tabs.filter(tab => !globals.state.options.auth.authMethodsExclude.includes(tab.value));\n\t});\n\n\tconst tabAuth = ref(availableTabs.value.length ? availableTabs.value[0].value : '');\n\t// Methods\n\tasync function onSubmit() {\n\t\ttry {\n\t\t  if (tabAuth.value === 'phone') await inputsValidation.validateInputs(\n\t\t\t\tphoneValidation, \n\t\t\t\tinputsValidation.validatePhone, \n\t\t\t\tauth.state.user.phone, \n\t\t\t\t'Некорректный телефон'\n\t\t\t)\n\t\t\tif (tabAuth.value === 'email') await inputsValidation.validateInputs(\n\t\t\t\temailValidation, \n\t\t\t\tinputsValidation.validateEmail, \n\t\t\t\tauth.state.user.email, \n\t\t\t\t'Некорректный email'\n\t\t\t)\n\t\t} catch (error) {\n\t\t\tthrow new Error\n\t\t}\n\t\ttry {\n\t  \tawait twofa.sendCode(auth.state.user, 'signup', tabAuth.value)\n\t  } catch (error) {\n\t\t\tthrow new Error\n\t\t}\n\t}\n\n\tfunction redirectTo () {\n\t\trouter.push({ name: 'Enter Code', query: { returnUrl: route.query.returnUrl}})\n\t}\n</script>\n\n<style lang=\"scss\">\n\t.slide-fade-enter-active {\n\t  transition: all  0.3s cubic-bezier(0.4, 0, 0.2, 1);\n\t}\n\n\t.slide-fade-leave-active {\n\t  transition: all  0.3s cubic-bezier(0.4, 0, 0.2, 1);\n\n\t}\n\n\t.slide-fade-enter-from,\n\t.slide-fade-leave-to {\n\t\tposition: absolute;\n\t  transform: translateX(20px);\n\t  opacity: 0;\n\t  left: 0;\n\t  top: 0;\n\t}\n\n\t.slide-fade-leave-to {\n\n\t}\n</style>\n",
                  "name": "SignUp.vue",
                  "size": 4613,
                  "type": "source"
                }
              ]
            },
            "sections": {
              "_files": [
                {
                  "path": "../../src/modules/auth/views/components/sections/FeaturedUsers.vue",
                  "relativePath": "modules/auth/views/components/sections/FeaturedUsers.vue",
                  "extension": ".vue",
                  "content": "<template>\n  <div class=\"o-hidden w-100\">\n    <div class=\"flex-center flex w-100\">\n      <h2 class=\"t-center h2 w-max-50r mn-b-big\">\n        Ask the hundreds shaping your entertainment for decades\n      </h2>\n    </div>\n    <Marquee\n      class=\"mn-b-thin\"\n      :gradient=\"true\"\n      :gradientColor=\"'var(--white)'\"\n      :gradientLength=\"'10%'\"\n      :direction=\"'normal'\"\n      :pauseOnHover=\"false\"\n      :clone=\"true\"\n    >\n      <div class=\"flex flex-nowrap\">\n        <CardUser \n          v-for=\"user in usersList.slice(0,6)\" \n          class=\"mn-r-thin h4 h-8r flex-child-grow-0 flex-child bg-light pd-small radius-medium\"\n          :user=\"user\" \n          :photo=\"user.profile.photo\"\n          :name=\"user.profile.name || user.phone || user.username\"\n          :phone=\"'DJ'\"\n        /> \n      </div>\n    </Marquee>\n\n    <Marquee\n      class=\"mn-b-thin\"\n      :gradient=\"true\"\n      :gradientColor=\"'var(--white)'\"\n      :gradientLength=\"'10%'\"\n      :direction=\"'reverse'\"\n      :pauseOnHover=\"false\"\n      :clone=\"true\"\n    >\n      <div class=\"flex flex-nowrap\">\n        <CardUser \n          v-for=\"user in usersList.slice(7,14)\" \n          class=\"mn-r-thin h4 h-8r flex-child-grow-0 flex-child bg-light pd-small radius-medium\"\n          :user=\"user\" \n          :photo=\"user.profile.photo\"\n          :name=\"user.profile.name || user.phone || user.username\"\n          :phone=\"'DJ'\"\n        /> \n      </div>\n    </Marquee>\n\n    <Marquee\n      class=\"mn-b-big\"\n      :gradient=\"true\"\n      :gradientColor=\"'var(--white)'\"\n      :gradientLength=\"'10%'\"\n      :direction=\"'normal'\"\n      :pauseOnHover=\"false\"\n      :clone=\"true\"\n    >\n      <div class=\"flex flex-nowrap\">\n        <CardUser \n          v-for=\"user in usersList.slice(15,22)\" \n          class=\"mn-r-thin h4 h-8r flex-child-grow-0 flex-child bg-light pd-small radius-medium\"\n          :user=\"user\" \n          :photo=\"user.profile.photo\"\n          :name=\"user.profile.name || user.phone || user.username\"\n          :phone=\"'DJ'\"\n        /> \n      </div>\n    </Marquee>\n\n    <p class=\"w-m-33r mn-r-auto mn-l-auto t-center mn-b-small p-big\">\n      Together, we're shaping the future of the globals music community.\n    </p>\n    <router-link :to=\"{ name: 'Sign In' }\" class=\"bg-black w-max mn-r-auto mn-l-auto t-medium t-white button\">\n      Join Now\n    </router-link>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue';\n\nimport * as users from '@martyrs/src/modules/auth/views/store/users.js'\n\nimport Marquee from '@martyrs/src/components/Marquee/Marquee.vue'\n\nimport CardUser from '@martyrs/src/modules/auth/views/components/blocks/CardUser.vue'\n\nconst usersList = ref([])\n\nonMounted(async() => {\n  usersList.value = await users.actions.read({\n    limit: 25\n  })\n});\n</script>\n\n<style lang=\"scss\">\n  .selector {\n    flex-grow: 1;\n    flex-basis: 0;\n    min-width: 0;\n  }\n</style>\n",
                  "name": "FeaturedUsers.vue",
                  "size": 2871,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/auth/views/components/sections/ProfileCompletion.vue",
                  "relativePath": "modules/auth/views/components/sections/ProfileCompletion.vue",
                  "extension": ".vue",
                  "content": "<template>\n  <section class=\"w-100 mn-b-semi radius-medium pd-medium bg-second t-black\">\n    <div class=\"mn-b-thin flex-v-center flex-nowrap flex\">    \n      <h4>\n        {{text}}\n      </h4>\n\n      <h4 class=\"mn-l-thin uppercase radius-big t-semi t-medium t-white bg-black w-max pd-thin\">\n        {{ percentage || completionPercentage }}%\n      </h4>\n\n      <router-link\n        v-if=\"cta\"\n        :to=\"{\n          name: 'User Edit Profile',\n          params: { _id: user }\n        }\"\n        class=\"mn-l-auto uppercase radius-big t-semi t-medium t-white bg-black w-max pd-thin\"\n      >\n        {{text_cta}}\n      </router-link>\n    </div> \n\n    <div class=\" w-100 h-2r pos-relative pd-nano bg-black radius-big\">\n      <div :style=\"`width: ${completionPercentage}%`\"class=\"h-100 bg-second mn-b-thin radius-big\">\n      </div>\n    </div>\n   \n  </section>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\n\nconst { user, cta, target} = defineProps({\n  user: Object,\n  target: Object,\n  cta: Boolean,\n  percentage: Number,\n  text: String,\n  text_cta: String,\n})\n\nconst completionPercentage = ref(0)\n\nconst calculateCompletion = (profileObject) => {\n    let totalProperties = 0;\n    let filledProperties = 0;\n\n    function recurse(obj) {\n        for (let key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                if (obj[key] && typeof obj[key] === 'object' && !Array.isArray(obj[key])) {\n                    recurse(obj[key]);  // Recurse into nested objects\n                } else {\n                    totalProperties++;\n                    if (obj[key] != null && obj[key] !== '') {\n                        filledProperties++;\n                    }\n                }\n            }\n        }\n    }\n\n    recurse(profileObject);\n\n  return (totalProperties === 0 ? 0 : Math.round((filledProperties / totalProperties) * 100));\n\n};\n\n\nif (target) completionPercentage.value = calculateCompletion(target)\n</script>\n\n<style scoped>\n</style>",
                  "name": "ProfileCompletion.vue",
                  "size": 1961,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/auth/views/components/sections/ProfileEditCredentials.vue",
                  "relativePath": "modules/auth/views/components/sections/ProfileEditCredentials.vue",
                  "extension": ".vue",
                  "content": "<template>\n  <div v-if=\"show\" class=\"\">\n    <h3 class=\"mn-b-small\">Phone and Email</h3>\n\n    <!-- Email section -->\n    <div v-if=\"!users.state.current.email\" class=\"mn-b-semi\">\n      <div v-if=\"isAddingEmail\">\n        <Field \n          v-model:field=\"newEmail\"     \n          label=\"Email\"  \n          placeholder=\"Enter your email\" \n          class=\"mn-b-thin bg-light pd-medium radius-small\"\n          :disabled=\"isVerificationSent\"\n        />\n        <div class=\"flex gap-2\">\n          <Button \n            v-if=\"!isVerificationSent\"\n            :submit=\"() => sendVerification('email', 'add')\" \n            class=\"mn-b-thin t-white bg-second  flex-1\"\n          >\n            Add Email\n          </Button>\n          <Button \n            v-if=\"!isVerificationSent\"\n            :submit=\"() => cancelAdding('email')\" \n            class=\"mn-b-thin bg-red t-white flex-1\"\n          >\n            Cancel\n          </Button>\n        </div>\n      </div>\n      <Button \n        v-if=\"!isAddingEmail\"\n        :submit=\"() => startAdding('email')\" \n        class=\"mn-b-thin t-white bg-second w-100\"\n      >\n        Add Email\n      </Button>\n    </div>\n\n    <!-- Phone section -->\n    <div v-if=\"!users.state.current.phone\" class=\"mn-b-semi\">\n      <div v-if=\"isAddingPhone\">\n        <FieldPhone\n          @change=\"(event) => newPhone = event\"  \n          :dropdownOptions=\"{\n            showDialCodeInSelection: true,\n            showFlags: true,\n            showDialCodeInList: true\n          }\"\n          :validCharactersOnly=\"true\"\n          mode=\"national\"\n          :inputOptions=\"{placeholder: 'Enter your phone number', type: 'tel'}\"\n          class=\"bg-light h-4r pd-small radius-small mn-b-thin\" \n        />\n\n        <div class=\"flex gap-2\">\n          <Button \n            v-if=\"!isVerificationSent\"\n            :submit=\"() => sendVerification('phone', 'add')\" \n            class=\"mn-b-thin t-white bg-second flex-1\"\n          >\n            Add Phone\n          </Button>\n          <Button \n            v-if=\"!isVerificationSent\"\n            :submit=\"() => cancelAdding('phone')\" \n            class=\"mn-b-thin  t-white bg-second t-white flex-1\"\n          >\n            Cancel\n          </Button>\n        </div>\n      </div>\n      <Button \n        v-if=\"!isAddingPhone\"\n        :submit=\"() => startAdding('phone')\" \n        class=\"mn-b-thin bg-main w-100\"\n      >\n        Add Phone\n      </Button>\n    </div>\n\n    <!-- Current contact info with edit options -->\n    <div class=\"mn-b-semi\">\n      <!-- Current/Edit Phone -->\n      <div v-if=\"users.state.current.phone\" class=\"mn-b-thin\">\n        <Field \n          v-if=\"!isEditingPhone\"\n          v-model:field=\"users.state.current.phone\"     \n          label=\"Phone\"  \n          class=\"mn-b-thin bg-light pd-medium radius-small\" \n          disabled=\"true\"\n        />\n        <Field \n          v-else\n          v-model:field=\"newPhone\"     \n          label=\"New Phone\"  \n          placeholder=\"Enter new phone number\" \n          class=\"mn-b-thin t-black  bg-light pd-medium radius-small\"\n          :disabled=\"isVerificationSent\"\n        />\n        <Button \n          v-if=\"!isEditingPhone && !isVerificationSent\"\n          :submit=\"() => startEditing('phone')\" \n          class=\"mn-b-thin t-black bg-light w-100\"\n        >\n          Change Phone\n        </Button>\n        <Button \n          v-if=\"isEditingPhone && !isVerificationSent\"\n          :submit=\"() => sendVerification('phone', 'edit')\" \n          class=\"mn-b-thin bg-main w-100\"\n        >\n          Verify New Phone\n        </Button>\n      </div>\n\n      <!-- Current/Edit Email -->\n      <div v-if=\"users.state.current.email\">\n        <Field \n          v-if=\"!isEditingEmail\"\n          v-model:field=\"users.state.current.email\"     \n          label=\"Email\"  \n          class=\"mn-b-thin bg-light pd-medium radius-small\" \n          disabled=\"true\"\n        />\n        <Field \n          v-else\n          v-model:field=\"newEmail\"     \n          label=\"New Email\"  \n          placeholder=\"Enter new email\" \n          class=\"mn-b-thin bg-light pd-medium radius-small\"\n          :disabled=\"isVerificationSent\"\n        />\n        <Button \n          v-if=\"!isEditingEmail && !isVerificationSent\"\n          :submit=\"() => startEditing('email')\" \n          class=\"mn-b-thin t-black bg-light w-100\"\n        >\n          Change Email\n        </Button>\n        <Button \n          v-if=\"isEditingEmail && !isVerificationSent\"\n          :submit=\"() => sendVerification('email', 'edit')\" \n          class=\"mn-b-thin bg-main w-100\"\n        >\n          Verify New Email\n        </Button>\n      </div>\n    </div>\n\n    <!-- Verification code section -->\n    <div v-if=\"isVerificationSent\" class=\"mn-b-semi\">\n      <Field \n        v-model:field=\"verificationCode\"     \n        label=\"Verification Code\"  \n        placeholder=\"Enter the code\" \n        class=\"mn-b-thin bg-light pd-medium radius-small\"\n      />\n      <div class=\"flex gap-2\">\n        <Button \n          :submit=\"verifyCode\" \n          class=\"mn-b-thin bg-main flex-1\"\n        >\n          Verify\n        </Button>\n        <Button \n          :submit=\"resendCode\" \n          class=\"mn-b-thin bg-light flex-1\"\n        >\n          Resend Code\n        </Button>\n        <Button \n          :submit=\"cancelEdit\" \n          class=\"mn-b-thin bg-red t-white flex-1\"\n        >\n          Cancel\n        </Button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\n// Import components\nimport Field from '@martyrs/src/components/Field/Field.vue'\nimport Button from '@martyrs/src/components/Button/Button.vue'\n\n// Import libs\nimport { ref, onMounted } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\n\n// Import state\nimport * as users from '@martyrs/src/modules/auth/views/store/users.js'\nimport * as twofa from '@martyrs/src/modules/auth/views/store/twofa.js'\n\n// Component state\nconst show = ref(false)\nconst newEmail = ref('')\nconst newPhone = ref('')\nconst verificationCode = ref('')\nconst isVerificationSent = ref(false)\nconst currentVerificationType = ref(null)\nconst currentAction = ref(null) // 'add' or 'edit'\nconst isEditingEmail = ref(false)\nconst isEditingPhone = ref(false)\nconst isAddingEmail = ref(false)\nconst isAddingPhone = ref(false)\n\n// Router\nconst route = useRoute()\nconst router = useRouter()\n\nimport FieldPhone from '@martyrs/src/components/FieldPhone/FieldPhone.vue'\n\n// Lifecycle hooks\nonMounted(async () => {\n  await users.actions.read({ _id: route.params._id })\n  show.value = true\n})\n\n// Methods\nfunction startEditing(type) {\n  if (type === 'email') {\n    isEditingEmail.value = true\n    newEmail.value = ''\n  } else {\n    isEditingPhone.value = true\n    newPhone.value = ''\n  }\n}\n\n// Methods for adding new contact info\nfunction startAdding(type) {\n  if (type === 'email') {\n    isAddingEmail.value = true\n    newEmail.value = ''\n  } else {\n    isAddingPhone.value = true\n    newPhone.value = ''\n  }\n}\n\nfunction cancelAdding(type) {\n  if (type === 'email') {\n    isAddingEmail.value = false\n    newEmail.value = ''\n  } else {\n    isAddingPhone.value = false\n    newPhone.value = ''\n  }\n}\n\nfunction cancelEdit() {\n  isEditingEmail.value = false\n  isEditingPhone.value = false\n  isAddingEmail.value = false\n  isAddingPhone.value = false\n  isVerificationSent.value = false\n  verificationCode.value = ''\n  newEmail.value = ''\n  newPhone.value = ''\n  currentVerificationType.value = null\n  currentAction.value = null\n}\n\nasync function sendVerification(type, action) {\n  try {\n    // Validate input before sending verification\n    if (action === 'edit') {\n      if (type === 'email' && (!newEmail.value || newEmail.value === users.state.current.email)) {\n        throw new Error('Please enter a different email address')\n      }\n      if (type === 'phone' && (!newPhone.value || newPhone.value === users.state.current.phone)) {\n        throw new Error('Please enter a different phone number')\n      }\n    }\n\n    const userData = {\n      phone: type === 'phone' ? newPhone.value : users.state.current.phone,\n      email: type === 'email' ? newEmail.value : users.state.current.email\n    }\n\n    await twofa.sendCode(userData, 'update', type)\n    isVerificationSent.value = true\n    currentVerificationType.value = type\n    currentAction.value = action\n  } catch (error) {\n    console.error('Failed to send verification code:', error)\n  }\n}\n\nasync function verifyCode() {\n  try {\n    // Проверяем, что код существует в state\n    if (!twofa.state.code || !twofa.state.code.code) {\n      throw new Error('Verification code not found')\n    }\n\n    // Сравниваем введенный код с кодом из state\n    if (String(twofa.state.code.code) === String(verificationCode.value)) {\n      const updateData = { ...users.state.current }\n      \n      if (currentVerificationType.value === 'email') {\n        updateData.email = newEmail.value\n      } else {\n        updateData.phone = newPhone.value\n      }\n\n      await users.actions.update(updateData)\n      \n      // Reset state\n      cancelEdit()\n      \n      // Refresh user data\n      await users.actions.read({ _id: route.params._id })\n    } else {\n      throw new Error('Invalid verification code')\n    }\n  } catch (error) {\n    console.error('Verification failed:', error)\n  }\n}\n\nasync function resendCode() {\n  verificationCode.value = ''\n  await sendVerification(currentVerificationType.value, currentAction.value)\n}\n</script>",
                  "name": "ProfileEditCredentials.vue",
                  "size": 9342,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/auth/views/components/sections/SliderFeatures.vue",
                  "relativePath": "modules/auth/views/components/sections/SliderFeatures.vue",
                  "extension": ".vue",
                  "content": "<script setup>\nimport { ref, onMounted } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nimport emblaCarouselVue from 'embla-carousel-vue';\nimport Autoplay from 'embla-carousel-autoplay'\n\nconst text = {\n  messages: {\n    en: {\n      features: [\n        {\n          title: \"What's the Weeder Token, Dude?\",\n          description: \"WDT is like, the backbone of our rad community. It's cash, it's power, it's an investment. Groovy, right?\", \n        },\n        {\n          title: \"Light Up and Level Up\",\n          description: \"Order up, light up, and earn Weeder tokens. More tokes, more cash in your pocket, man.\", \n        },\n        {\n          title: \"Hang Ten with Our Community\",\n          description: \"Find the dopest strains and start floating on cloud 9 with us!\", \n        },\n        {\n          title: \"Shop 'Til You Drop... Into Your Couch\",\n          description: \"Score primo bud and gear with just a few clicks. Delivered right to your pad!\", \n        },\n      ]\n    },\n    ru: {\n      features: [\n        {\n          title: \"Что такое токен Weeder, Бро?\",\n          description: \"WDT - это как основа нашего крутого сообщества. Это деньги, это власть, это инвестиции. Круто, а?\", \n        },\n        {\n          title: \"Зажигай и Развивайся\",\n          description: \"Закажи шмали, курни и зарабатывай токены Weeder. Чем больше курнешь, тем больше кэша у тебя в кармане, чувак.\", \n        },\n        \n        {\n          title: \"Веселись с Нашим Сообществом\",\n          description: \"Найди самые крутые сорта и начни шмалить на девятом облаке вместе с нами.\", \n        },\n        {\n          title: \"Покупайте, Когда Накурились\",\n          description: \"Закажи премиумную бошку и крутые аксессуары за пару кликов, чувак. Прямо к твоей двери!\",\n        },\n      ]\n    }\n  }\n}\n\nconst { tm,rt } = useI18n(text)\n\n\n\n\nconst selectedIndex = ref(0);\nconst scrollSnaps = ref([]);\n\nconst autoplayOptions = {\n  delay: 2000,\n  jump: false,\n  stopOnInteraction: false,\n  stopOnMouseEnter: false,\n  stopOnFocusIn: true,\n  stopOnLastSnap: false,\n  rootNode: (emblaRoot) => emblaRoot.parentElement\n}\n\nconst [emblaNode, emblaApi] = emblaCarouselVue({ loop: true }, [Autoplay(autoplayOptions)])\n\nconst scrollTo = (index) => emblaApi.value && emblaApi.value.scrollTo(index);\nconst onInit = (embla) =>  scrollSnaps.value = emblaApi.value.scrollSnapList();\nconst onSelect = (embla) => selectedIndex.value = emblaApi.value.selectedScrollSnap();\n\nonMounted(async() => {\n  onInit(emblaApi);\n  onSelect(emblaApi);\n\n  emblaApi.value.on('reInit', onInit);\n  emblaApi.value.on('reInit', onSelect);\n  emblaApi.value.on('select', onSelect);\n});\n</script>\n\n<template>\n  <div class=\"embla\" ref=\"emblaNode\">\n    <div class=\"embla__container\">\n      <div class=\"embla__slide pd-nano\" v-for=\"(feature, index) in tm('features')\" :key=\"index\">\n        <div class=\"parent-div\" :style=\"`background-image: url(/assets/images/features/${index}.png); background-size:cover; background-position: center center;`\">\n          <div class=\"background-div\"></div>\n          <h4 class=\"mn-b-small\">{{ feature.title }}</h4>\n          <p class='mn-b-big mn-r-small mn-l-small'>{{ feature.description }}</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\">\n.carousel__track {\n    height: 100%;\n  }\n.carousel-controls {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.carousel-indicators {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n}\n\n.carousel-indicators li {\n  list-style: none;\n  margin: 0 5px;\n  width: 10px;\n  height: 10px;\n  background: gray;\n  border-radius: 50%;\n}\n\n.carousel-indicators li.active {\n  background: white;\n}\n\n.parent-div {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n}\n\n.background-div {\n  flex-grow: 1 // Занимает все оставшееся пространство\n}\n</style>\n",
                  "name": "SliderFeatures.vue",
                  "size": 3859,
                  "type": "source"
                }
              ]
            }
          },
          "localization": {
            "_files": [
              {
                "path": "../../src/modules/auth/views/localization/EnterCode.json",
                "relativePath": "modules/auth/views/localization/EnterCode.json",
                "extension": ".json",
                "content": "{\n  \"messages\": {\n    \"en-default\": {\n      \"verifyNumberTitle\": \"Verify Number\",\n      \"instructions\": \"We have sent a registration code to your phone number. Please enter it in the field below:\",\n      \"resendCode\": \"Send the code again\",\n      \"secondsResend\": \"seconds to the possibility of sending the code again.\"\n    },\n    \"ru-default\": {\n      \"verifyNumberTitle\": \"Подтвердите номер\",\n      \"instructions\": \"Мы отправили код регистрации на ваш номер телефона. Введите его в поле ниже:\",\n      \"resendCode\": \"Отправить код еще раз\",\n      \"secondsResend\": \"секунд до возможности отправить код еще раз.\"\n    }\n  }\n}\n",
                "name": "EnterCode.json",
                "size": 624,
                "type": "source"
              },
              {
                "path": "../../src/modules/auth/views/localization/EnterPassword.json",
                "relativePath": "modules/auth/views/localization/EnterPassword.json",
                "extension": ".json",
                "content": "{\n  \"messages\": {\n    \"en-default\": {\n      \"almostDone\": \"Almost there!\",\n      \"newPasswordPrompt\": \"Please, set a new password.\",\n      \"registrationPasswordPrompt\": \"Please, set your password to complete the registration.\",\n      \"passwordPlaceholder\": \"Password\",\n      \"repeatPasswordPlaceholder\": \"Repeat Password\",\n      \"changePasswordBtn\": \"Change Password\",\n      \"registerBtn\": \"Register\"\n    },\n    \"ru-default\": {\n      \"almostDone\": \"Почти все!\",\n      \"newPasswordPrompt\": \"Пожалуйста, укажите новый пароль.\",\n      \"registrationPasswordPrompt\": \"Пожалуйста, укажите пароль, на этом регистрация будет закончена.\",\n      \"passwordPlaceholder\": \"Пароль\",\n      \"repeatPasswordPlaceholder\": \"Повторите пароль\",\n      \"changePasswordBtn\": \"Поменять пароль\",\n      \"registerBtn\": \"Зарегистрироваться\"\n    }\n  }\n}\n",
                "name": "EnterPassword.json",
                "size": 824,
                "type": "source"
              },
              {
                "path": "../../src/modules/auth/views/localization/ResetPassword.json",
                "relativePath": "modules/auth/views/localization/ResetPassword.json",
                "extension": ".json",
                "content": "{\n  \"messages\": {\n    \"en-default\": {\n      \"forgotPasswordTitle\": \"Forgot Password?\",\n      \"instructions\": \"To reset your password, specify the phone or email used during registration.\",\n      \"smsInfo\": \"We will send you an SMS with a confirmation code to reset your password, which you will need to enter in the next step.\",\n      \"emailInfo\": \"We will send you an email with a confirmation code to reset your password, which you will need to enter in the next step.\",\n      \"phone\": \"Phone\",\n      \"email\": \"Email\",\n      \"phonePlaceholder\": \"Enter your phone\",\n      \"emailPlaceholder\": \"Enter your email\",\n      \"sendCode\": \"Send code\"\n    },\n    \"ru-default\": {\n      \"forgotPasswordTitle\": \"Забыли пароль?\",\n      \"instructions\": \"Чтобы сбросить пароль, укажите телефон или email, использованные при регистрации.\",\n      \"smsInfo\": \"Мы вышлем вам SMS с кодом подтверждения для сброса пароля, который вы должны будете ввести в следующем шаге.\",\n      \"emailInfo\": \"Мы отправим вам электронное письмо с кодом подтверждения  для сброса пароля, который вы должны будете ввести в следующем шаге.\",\n      \"phone\": \"Телефон\",\n      \"email\": \"Email\",\n      \"phonePlaceholder\": \"Введите ваш телефон\",\n      \"emailPlaceholder\": \"Введите ваш email\",\n      \"sendCode\": \"Отправить код\"\n    }\n  }\n}\n",
                "name": "ResetPassword.json",
                "size": 1294,
                "type": "source"
              },
              {
                "path": "../../src/modules/auth/views/localization/SignIn.json",
                "relativePath": "modules/auth/views/localization/SignIn.json",
                "extension": ".json",
                "content": "{\n  \"messages\": {\n    \"en-default\": {\n      \"title\": \"Welcome to OZ DAO,\",\n      \"subtitle\": \"Sign In to Continue\",\n      \"signup\": \"Don't have an account?\",\n      \"phone\": \"Phone\",\n      \"email\": \"Email\",\n      \"phonePlaceholder\": \"Enter your phone\",\n      \"emailPlaceholder\": \"Enter your email\",\n      \"haveAccount\": \"Don't have an account? Sign Up\",\n      \"passwordPlaceholder\": \"Enter your password\",\n      \"forgotPassword\": \"Forgot Password?\",\n      \"signin\": \"Sign In\",\n      \"signin_apple\": \"Sign In with Apple\",\n      \"soon\": \"SOON\"\n    },\n    \"ru-default\": {\n      \"title\": \"Приветствуем вас,\",\n      \"subtitle\": \"Войдите для продолжения\",\n      \"signup\": \"Нет аккаунта?\",\n      \"phone\": \"Телефон\",\n      \"email\": \"Email\",\n      \"phonePlaceholder\": \"Введите ваш телефон\",\n      \"emailPlaceholder\": \"Введите ваш email\",\n      \"haveAccount\": \"Нет аккаунта? Зарегистрироваться\",\n      \"passwordPlaceholder\": \"Введите ваш пароль\",\n      \"forgotPassword\": \"Забыли пароль?\",\n      \"signin\": \"Войти\",\n      \"signin_apple\": \"Войти через Apple\",\n      \"soon\": \"СКОРО\"\n    }\n  }\n}\n",
                "name": "SignIn.json",
                "size": 1080,
                "type": "source"
              },
              {
                "path": "../../src/modules/auth/views/localization/SignUp.json",
                "relativePath": "modules/auth/views/localization/SignUp.json",
                "extension": ".json",
                "content": "{\n  \"messages\": {\n    \"en-default\": {\n      \"title\": \"Sign Up\",\n      \"description\": \"Choose a convenient way to register via phone or email:\",\n      \"phone\": \"Phone\",\n      \"email\": \"Email\",\n      \"phonePlaceholder\": \"Enter your phone\",\n      \"emailPlaceholder\": \"Enter your email\",\n      \"emailNotice\": \"We will send you an email with a confirmation code that you will need to enter in the next step.\",\n      \"smsNotice\": \"We will send you an SMS with a confirmation code that you will need to enter in the next step.\",\n      \"sendCode\": \"Send Code\",\n      \"haveAccount\": \"Already have an account?\"\n    },\n    \"ru-default\": {\n      \"title\": \"Новая учетная запись\",\n      \"description\": \"Выберите удобный способ регистрации через телефон или email:\",\n      \"phone\": \"Телефон\",\n      \"email\": \"Email\",\n      \"phonePlaceholder\": \"Введите ваш телефон\",\n      \"emailPlaceholder\": \"Введите ваш email\",\n      \"emailNotice\": \"Мы отправим вам электронное письмо с кодом подтверждения, который вы должны будете ввести в следующем шаге.\",\n      \"smsNotice\": \"Мы вышлем вам SMS с кодом подтверждения, который вы должны будете ввести в следующем шаге.\",\n      \"sendCode\": \"Отправить код\",\n      \"haveAccount\": \"У вас уже есть аккаунт?\"\n    }\n  }\n}\n",
                "name": "SignUp.json",
                "size": 1237,
                "type": "source"
              }
            ]
          }
        }
      },
      "backoffice": {
        "_files": [
          {
            "path": "../../src/modules/backoffice/backoffice.client.js",
            "relativePath": "modules/backoffice/backoffice.client.js",
            "extension": ".js",
            "content": "// Router\nimport routerBackoffice from './router/backoffice.js';\n\n// Views\n// Layouts\n\n// Pages\nimport Dashboard from './components/pages/Dashboard.vue';\n\n// Admin components\n// import AdminDashboard from './components/admin/Dashboard.vue';\n// import FastOrders from './components/admin/FastOrders.vue';\n// import UserEdit from './components/admin/UserEdit.vue';\n// import Users from './components/admin/Users.vue';\n// import ProductEdit from './components/admin/ProductEdit.vue';\n// import Backcalls from './components/admin/Backcalls.vue';\n\n// Partials\nimport Sidebar from './components/partials/Sidebar.vue';\n\n// Пример функции инициализации для модуля бэкофиса\nfunction initializeBackoffice(app, store, router, options = {}) {\n  const route = options.route || 'Home';\n\n  // const routesBackoffice = createBackofficeRoutes();\n  // const routesAdmin = createAdminRoutes();\n\n  router.addRoute(route, routerBackoffice);\n  // router.addRoute(`${route}.admin`, routerBackoffice);\n}\n\nconst ModuleBackoffice = {\n  initialize: initializeBackoffice,\n  views: {\n    router: {\n      routerBackoffice,\n    },\n    components: {\n      // Layouts\n      // Pages\n      Dashboard,\n      // Admin components\n      // AdminDashboard,\n      // FastOrders,\n      // UserEdit,\n      // Users,\n      // ProductEdit,\n      // Backcalls,\n      // Partials\n      Sidebar,\n    },\n  },\n};\n\nexport default ModuleBackoffice;\n",
            "name": "backoffice.client.js",
            "size": 1398,
            "type": "source"
          }
        ],
        "router": {
          "_files": [
            {
              "path": "../../src/modules/backoffice/router/backoffice.js",
              "relativePath": "modules/backoffice/router/backoffice.js",
              "extension": ".js",
              "content": "import Sidebar from '../components/partials/Sidebar.vue';\n\nimport * as validationAuth from '@martyrs/src/modules/auth/views/middlewares/auth.validation.js';\n\n// const admin = [\n//   {\n//     path: 'admin',\n//     component: layoutAdmin,\n//     meta: { authorize: [\"ROLE_MODERATOR\"] },\n//     children: [{\n//       path: 'backcalls',\n//       name: 'Backcalls',\n//       // meta: { authorize: [\"ROLE_MODERATOR\"] },\n//       component: () => import(/* webpackChunkName: 'Backcalls' */ '@/components/pages/admin/Backcalls.vue')\n//     },{\n//       path: 'fastorder',\n//       name: 'FastOrders',\n//       // meta: { authorize: [\"ROLE_MODERATOR\"] },\n//       component: () => import(/* webpackChunkName: 'FastOrders' */ '@/components/pages/admin/FastOrders.vue')\n//     },{\n//       path: 'users',\n//       name: 'Users',\n//       component: () => import(/* webpackChunkName: 'Users' */ '@/components/pages/admin/Users.vue')\n//     },{\n//       path: 'users/:phone',\n//       name: 'User',\n//       component: () => import(/* webpackChunkName: 'User' */ '@/components/pages/admin/User.vue')\n//     }]\n//   }\n// ];\n\nconst backofficeRoutes = {\n  path: 'backoffice',\n  name: 'Backoffice Root',\n\n  meta: {\n    sidebar_navigation: Sidebar,\n    sidebar_width_hidden: 'w-0',\n  },\n\n  props: {\n    newsletterPopup: 12344,\n  },\n\n  beforeEnter: [validationAuth.requiresAdmin],\n  children: [\n    {\n      path: '',\n      name: 'Backoffice Admin',\n      meta: {\n        title: {\n          en: 'Backoffice',\n          ru: 'Управление',\n        },\n      },\n      component: () => import(/* webpackChunkName: 'BackofficeGallery' */ '../components/pages/Dashboard.vue'),\n    },\n    {\n      path: 'reports',\n      name: 'Backoffice Reports',\n      meta: {\n        title: {\n          en: 'Backoffice Reports',\n          ru: 'Управление Жалобами',\n        },\n      },\n      component: () => import(/* webpackChunkName: 'BackofficeGallery' */ '@martyrs/src/modules/reports/components/pages/BackofficeReports.vue'),\n    },\n    {\n      path: 'organizations',\n      name: 'Backoffice Organizations',\n      meta: {\n        title: {\n          en: 'Backoffice Organizations',\n          ru: 'Управление Организациями',\n        },\n        authorize: [],\n      },\n      component: () => import(/* webpackChunkName: 'BackofficeOrganizations' */ '@martyrs/src/modules/organizations/components/pages/Organizations.vue'),\n    },\n    {\n      path: 'community',\n      name: 'Backoffice Community',\n      meta: {\n        title: {\n          en: 'Backoffice Community',\n          ru: 'Управление Сообществом',\n        },\n        authorize: [],\n      },\n      component: () => import(/* webpackChunkName: 'BackofficeCommunity' */ '@martyrs/src/modules/community/components/pages/Blog.vue'),\n    },\n  ],\n};\n\nexport default backofficeRoutes;\n",
              "name": "backoffice.js",
              "size": 2795,
              "type": "source"
            }
          ]
        },
        "components": {
          "admin": {
            "_files": [
              {
                "path": "../../src/modules/backoffice/components/admin/Backcalls.vue",
                "relativePath": "modules/backoffice/components/admin/Backcalls.vue",
                "extension": ".vue",
                "content": "<template>\n   <!-- Toolbar -->\n  <section class=\"br-bot-dark bg-white pd-big\">\n    <header class=\"flex-nojustify flex-bottom flex-nowrap flex\">\n      <h1 class=\"mn-r-small\">Запросы обратного звонка</h1>\n    </header>\n  </section>\n\n \n\n  <section class=\"cols-1 bg-light pd-big\">\n    <!-- Empty State -->\n    <p v-if=\"backcalls.length === 0\">У вас еще нет запросов обратного звонка</p>\n    <!-- Objects -->\n    <div v-for=\"backcall in backcalls\" class=\"order-card col\"> \n    \n\n      <div class=\"flex block\">\n        <div>\n          <p> Запрос от {{backcall.phone}} </p> \n          <p  class=\"t-transp\">Добавлен в {{DateToFormattedString(backcall.createdAt)}}</p>\n          \n        </div>\n\n        <div>\n          <p>Интересуемый товар</p>\n          <p class=\"t-transp\">\n            <router-link v-if=\"backcall.product\" :to=\"{ name: 'Product', params: { _id: backcall.product}}\">\n              Товар #{{backcall.product.slice(0,8)}}\n            </router-link>\n            <span v-else>Товар не указан</span>\n          </p>\n       </div>\n\n        <div class=\"t-right\">\n          <p>{{backcall.status}}</p>\n          <p>\n            <a v-if=\"backcall.status !== 'Обработан'\" @click=\"store.dispatch('backcalls/update', {_id: backcall._id, status: 'Обработан'})\" class=\"t-main\">Подтвердить</a>\n            <a v-if=\"backcall.status === 'Обработан'\" @click=\"store.dispatch('backcalls/delete', backcall._id)\" class=\"t-main\">Удалить</a>\n          </p>\n        </div>\n      </div>\n\n     \n        \n    </div>\n  </section>\n</template>\n\n\n<script setup>\n\n\n  import { computed, onMounted, reactive, toRefs } from 'vue'\n  \n  import { useRoute,useRouter } from 'vue-router'\n \n  const store = useStore()\n  const route = useRoute()\n  const router = useRouter()\n\n  await store.dispatch('backcalls/fetchAll').then(\n    succes => { console.log('sycces') },\n    error => {  \n      console.log('eror') \n    }\n  )\n  const backcalls = computed(() => store.state.backcalls.all)\n\n  </script>\n\n<style lang=\"scss\">\n\n.round-stat {\n  padding: 1rem;\n  border-radius: 5rem;\n  width: 3rem;\n  height: 3rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid rgba(0,0,0,0.1);\n\n  &-tab {\n    width: 2rem;\n    height: 2rem;\n  }\n}\n\n\n\n.order-card {\n  border-radius: 0.25rem;\n  overflow: hidden;\n  box-shadow: 0 8px 8px -8px rgb(36 36 36 / 10%);\n  .order-status {\n    color: black;\n    background: #EEF2F6; \n    width: 100%;\n    padding: 0.75rem 1.5rem;\n    margin: 0;\n  }\n\n  .new {\n    color: white;\n    background: #00ff88;\n  }\n\n  .block {\n    border-radius: 0;\n    border: 0;\n  }\n}\n\n  \n</style>\n",
                "name": "Backcalls.vue",
                "size": 2590,
                "type": "source"
              },
              {
                "path": "../../src/modules/backoffice/components/admin/Dashboard.vue",
                "relativePath": "modules/backoffice/components/admin/Dashboard.vue",
                "extension": ".vue",
                "content": "<template>\n  <!-- Toolbar -->\n  <section class=\"pageheader section\">\n    \n    <div class=\"mn-b-big title\">\n      <h1>Категории товаров</h1>\n      <div class=\"round-stat\">{{categories.length}}</div>\n    </div>\n    <router-link :to=\"'/admin/categories/add'\" class=\"button\">Добавить категорию</router-link>\n  </section>\n\n  <CategoriesSection />\n</template>\n\n\n<script setup>\n\n\n  import { computed, onMounted } from 'vue'\n  \n  import { useRoute } from 'vue-router'\n \n\n  import CategoriesSection from '@/components/sections/CategoriesSection.vue'\n\n  const store = useStore()\n  const route = useRoute()\n  store.dispatch('categories/read')\n  const categories = computed(() => store.state.categories)\n  \n  </script>\n\n<style lang=\"scss\">\n  \n</style>\n",
                "name": "Dashboard.vue",
                "size": 740,
                "type": "source"
              },
              {
                "path": "../../src/modules/backoffice/components/admin/FastOrders.vue",
                "relativePath": "modules/backoffice/components/admin/FastOrders.vue",
                "extension": ".vue",
                "content": "<template>\n   <!-- Toolbar -->\n  <section class=\"br-bot-dark bg-white pd-big\">\n    <header class=\"flex-nojustify flex-bottom flex-nowrap flex\">\n      <h1 class=\"mn-r-small\">Быстрые заказы</h1>\n    </header>\n  </section>\n\n \n\n  <section class=\"cols-1 bg-light pd-big\">\n    <!-- Empty State -->\n    <p v-if=\"fastorders.length === 0\">У вас еще нет запросов на быстрый заказ</p>\n    <!-- Objects -->\n    <div v-for=\"fastorder in fastorders\" class=\"order-card pd-small bg-white col\"> \n    \n        <div class=\"flex-wrap flex \">\n          <div>\n            <p> Запрос от {{fastorder.phone ? fastorder.phone : fastorder.userid}} </p> \n            <p  class=\"t-transp\">Добавлен в {{DateToFormattedString(fastorder.createdAt)}}</p>\n            \n          </div>\n\n          <div>\n            <p>Интересуемый товар</p>\n            <p class=\"t-transp\">\n              <router-link v-if=\"fastorder.product\" :to=\"{ name: 'Product', params: { _id: fastorder.product}}\">\n                Товар #{{fastorder.product.slice(0,8)}}\n              </router-link>\n              <span v-else>Товар не указан</span>\n            </p>\n         </div>\n\n          <div class=\"t-right\">\n            <p v-if=\"fastorder.userid\">{{fastorder.userid}}</p>\n            <p>\n              <a v-if=\"fastorder.status !== 'Обработан'\" @click=\"store.dispatch('fastorders/update', {_id: fastorder._id, status: 'Обработан'})\" class=\"t-main\">Подтвердить</a>\n              <a v-if=\"fastorder.status === 'Обработан'\" @click=\"store.dispatch('fastorders/delete', fastorder._id)\" class=\"t-main\">Удалить</a>\n            </p>\n\n          </div>\n        </div>\n\n        <hr clas=\"mn-b-small mn-t-small\">\n        <div  v-if=\"fastorder.products.length > 0\" class=\"w-100 spoiler\">\n          <div @click=\"spoiler = !spoiler\"  class=\"mn-b-small flex\">\n            <!-- <span>Всего товаров {{leftover.positions.length}}</span> -->\n            <img loading=\"lazy\" :class=\"{ 'spoiler-active': spoiler }\" class=\"button-icon\" src=\"@/assets/icons/arrow-down-spoiler.svg\">\n          </div>\n\n          <transition name=\"fade\">\n            <div v-if=\"spoiler\">\n              <div  v-for=\"position in fastorder.products\" class=\"w-100 mn-b-thin flex\"> \n                <div class=\" w-50 flex\">\n                  <span>\n                    <!-- <span class=\"t-transp\">Название:</span>  -->\n                    {{position.name}}\n                  </span>\n                </div>\n                \n                <div class=\"t-right w-50 flex\">\n                  <span class=\"w-100\">\n                    \n                    {{position.quantity}}\n                  </span>\n                </div>\n              </div> \n            </div>\n          </transition>\n        </div>\n\n\n     \n        \n    </div>\n  </section>\n</template>\n\n\n<script setup>\n\n\n  import { computed, onMounted, reactive, toRefs,ref } from 'vue'\n  \n  import { useRoute,useRouter } from 'vue-router'\n \n  const store = useStore()\n  const route = useRoute()\n  const router = useRouter()\n\n  await store.dispatch('fastorders/fetchAll').then(\n    succes => { console.log('sycces') },\n    error => {  \n      console.log('eror') \n    }\n  )\n\n  const spoiler = ref(false)\n\n  const fastorders = computed(() => store.state.fastorders.all.reverse())\n\n  </script>\n\n<style lang=\"scss\">\n\n.round-stat {\n  padding: 1rem;\n  border-radius: 5rem;\n  width: 3rem;\n  height: 3rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid rgba(0,0,0,0.1);\n\n  &-tab {\n    width: 2rem;\n    height: 2rem;\n  }\n}\n\n\n\n.order-card {\n  border-radius: 0.25rem;\n  overflow: hidden;\n  box-shadow: 0 8px 8px -8px rgb(36 36 36 / 10%);\n  .order-status {\n    color: black;\n    background: #EEF2F6; \n    width: 100%;\n    padding: 0.75rem 1.5rem;\n    margin: 0;\n  }\n\n  .new {\n    color: white;\n    background: #00ff88;\n  }\n\n  .block {\n    border-radius: 0;\n    border: 0;\n  }\n}\n\n  \n</style>\n",
                "name": "FastOrders.vue",
                "size": 3869,
                "type": "source"
              },
              {
                "path": "../../src/modules/backoffice/components/admin/ProductEdit.vue",
                "relativePath": "modules/backoffice/components/admin/ProductEdit.vue",
                "extension": ".vue",
                "content": "<template>\n\t<!-- ---------------------------------------------------------------- -->\n\t<!-- 01. Page Title  -->\n\t<!-- ---------------------------------------------------------------- -->\n\t<section class=\"pageheader section\">\n\t\t<div class=\"mn-b-big title\">\n\t\t\t<h1 v-if=\"route.params._id\">Редактировать товар</h1>\n\t\t\t<h1 v-else>Добавить товар</h1>\n\t\t</div>\n\t</section>\n\t<!-- ---------------------------------------------------------------- -->\n\t<!-- 02. Page Tabs  -->\n\t<!-- ---------------------------------------------------------------- -->\n\t<div v-if=\"route.params._id\" class=\"flex-nowrap flex product-tab-header\">\n    <button @click=\"changeTab('info')\" :class=\"{'product-tab-active':data.currentTab === 'info'}\" \n    class=\"br-right-dark product-tab section-panel section\">\n      Информация о товаре\n    </button>\n\n    <button @click=\"changeTab('images')\" :class=\"{'product-tab-active':data.currentTab === 'images'}\" \n    class=\"br-right-dark product-tab section-panel section\">\n      Изображения\n    </button>\n    <button @click=\"changeTab('modifications')\" :class=\"{'product-tab-active':data.currentTab === 'modifications'}\" \n    class=\"product-tab section-panel section\">\n      Модификации\n    </button>\n  </div>\n\t<!-- ---------------------------------------------------------------- -->\n\t<!-- 03. Page Content  -->\n\t<!-- ---------------------------------------------------------------- -->\n\t<section class=\" bg-light br-bot-dark section-subsection section\">\n\n\t\t<form onsubmit=\"return false\">\n\t\t\t<!-- ---------------------------------------------------------------- -->\n\t\t\t<!-- Product Info -->\n\t\t\t<!-- ---------------------------------------------------------------- -->\n\t\t\t<div  v-if=\"data.currentTab === 'info'\"> \n\t\t\t\t<EditProductInfo :product=\"product\"/>\n\t\t\t\t<EditCategories :product=\"product\" :categories=\"categories\" />\n\t\t\t\t<EditParameters :product=\"product\"/>\t\n\t\t\t\t<a @click=\"onSubmit()\" class=\"button\">Обновить информацию</a>\n\t\t\t</div>\n\t\t\t<!-- ---------------------------------------------------------------- -->\n\t\t\t<!-- Product Images -->\n\t\t\t<!-- ---------------------------------------------------------------- -->\n\t\t\t<EditProductImages  v-if=\"data.currentTab === 'images'\" :product=\"product\"/>\n\t\t\t<!-- ---------------------------------------------------------------- -->\n\t\t\t<!-- Product Modifications -->\n\t\t\t<!-- ---------------------------------------------------------------- -->\n\t\t\t<EditModifications v-if=\"data.currentTab === 'modifications'\" :product=\"product\"/>\n\t\t\t\n\t\t</form>\n\t</section> \n\t<!-- ---------------------------------------------------------------- -->\n\t<!-- 03. Page Footer  -->\n\t<!-- ---------------------------------------------------------------- -->\n\n</template>\n\n<script setup>\n\t// Import libs\n\timport { reactive, computed, onMounted, toRefs } from 'vue'\n\timport { useRoute, useRouter } from 'vue-router'\n\t// Import components\n\timport EditProductInfo from '@/components/sections/product/EditProductInfo.vue';\n  import EditCategories from '@/components/sections/product/EditCategories.vue';\n  import EditParameters from '@/components/sections/product/EditParameters.vue';\n  import EditProductImages from '@/components/sections/product/EditProductImages.vue';\n  import EditModifications from '@/components/sections/product/EditModifications.vue';\n  \n\t// Accessing router and store\n\tconst route = useRoute()\n\tconst router = useRouter()\n\n  // Data prefetching\n  await store.dispatch('categories/read')\n\n  if (route.params._id) {\n\t  await store.dispatch('products/fetchProduct', route.params._id)\n  } else {\n  \tawait store.commit('products/clearProductState')\n  }\n  // Accessing state\n \tconst product = computed(() => store.state.products.current)\n\tconst categories = computed(() => store.state.categories.all)\n \t// Making tabs working\n \tlet data = reactive({currentTab: 'info'})\n  let reactiveData = toRefs(data)\n  function changeTab (tab) {data.currentTab = tab; console.log(data.currentTab) }\n\n\tfunction onSubmit() {\n\t\tif (route.params._id) {\n\t\t\tstore.dispatch('products/updateProductInfo', route.params._id)\n\t\t\t// window.location.href = '/admin/products/';\n\t\t} else {\n\t\t\tstore.dispatch('products/updateProductInfo').then(function (response, err) {\n\t\t\t\trouter.push({name: 'ProductEdit', params: { _id: response._id } })\n\t\t\t})\n\t\t\t// window.location.href = '/admin/products/';\n\t\t}\n\t}\n</script>\n\n<style lang=\"scss\">\n\t.main-photo {\n\t\tmax-width: 50%;\n\t\timg { width: 100%; }\n\t}\n</style>\n",
                "name": "ProductEdit.vue",
                "size": 4419,
                "type": "source"
              },
              {
                "path": "../../src/modules/backoffice/components/admin/UserEdit.vue",
                "relativePath": "modules/backoffice/components/admin/UserEdit.vue",
                "extension": ".vue",
                "content": "<template>\n  <section class=\"section-header section\">\n    <div class=\"title\">\n      <h1 class=\"mn-b-regular\">Редактировать пользователя</h1>\n       <p class=\"t-transp w-100 h3\">\n        #{{user._id}} \n      </p>\n    </div>\n\n  </section>\n\n  <section class=\" bg-light br-bot-dark section-subsection section\">\n\n    <h5 class=\"w-100 mn-b-small\">Данные для входа  <TestButton></TestButton>\n\n    </h5>\n    <div class=\"cols-2 mn-b-medium \">\n       <!-- <p class=\"w-100\">Время создания: {{DateToFormattedString(order.createdAt)}}</p> -->\n      <div class=\"col flex block\">\n        <p class=\"mn-b-small w-100\">\n          Номер клиента:\n        </p>\n        <div class=\"w-100 flex-nowrap flex\">\n          <input \n            @input=\"updateInputText('users', 'current.phone', $event)\" \n            :value=\"user.phone\"  \n            placeholder=\"hello@example.com\"\n            class=\"mn-r-small input-text input\" \n          >\n           <button class=\"button\">Обновить</button> \n        </div>\n      </div>\n       <div class=\"col flex block\">\n        <p class=\"mn-b-small w-100\">\n          Роли: \n        </p>\n        <vue-select :options=\"roles\" :label-by=\"'translate'\" :close-on-select=\"true\"> </vue-select>\n        \n    </div>\n      \n    </div> \n     <div class=\"flex block\">\n      <p class=\"mn-b-small  w-100\">\n        Пароль:\n      </p>\n      <div class=\"w-100 flex-nowrap flex\">\n      <input \n          @input=\"updateInputText('users', 'current.phone', $event)\" \n          placeholder=\"Новый пароль\"\n          class=\"w-40 mn-r-small input-text input\" \n        >\n        <input \n          @input=\"updateInputText('users', 'current.phone', $event)\" \n          placeholder=\"Повторите новый пароль\"\n          class=\"w-40 mn-r-small input-text input\" \n        >\n        <button class=\"w-20 button\">Сохранить пароль</button> \n      </div>\n    </div>\n\n   \n  </section>\n</template>\n\n<script setup>\n  // Import libs\n  import { computed, onMounted } from 'vue'\n  \n  import { useRoute } from 'vue-router'\n  // Accessing router and store\n  const store = useStore()\n  const route = useRoute()\n  // Data prefetching\n  store.dispatch('users/fetchRoles')\n  store.dispatch('users/fetchUser', route.params.phone)\n  // Accessing state\n  const user = computed(() => store.state.users.current)\n  const roles = computed(() => store.state.users.roles)\n</script>\n\n<style lang=\"scss\" scoped>\n\n.vue-select {\n  width: 100%;\n  background: #f7f7f7;\n  border: 0;\n}\n.vue-select-header {\n  height: 3rem;\n  padding-left: 1rem;\n\n  input {\n    font-size: 1.125rem;\n    font-weight: 300;\n\n    &::placeholder {\n      color: ba\n    }\n  }\n}\n\n</style>\n",
                "name": "UserEdit.vue",
                "size": 2606,
                "type": "source"
              },
              {
                "path": "../../src/modules/backoffice/components/admin/Users.vue",
                "relativePath": "modules/backoffice/components/admin/Users.vue",
                "extension": ".vue",
                "content": "<template>\n   <!-- Toolbar -->\n  <section class=\"pageheader section\">\n    \n    <div class=\"title\">\n      <h1>Пользователи</h1>\n    </div>\n  </section>\n\n  <div class=\"flex-nowrap flex product-tab-header\">\n    <button @click=\"changeTab('all')\" :class=\"{'product-tab-active':data.currentTab === 'all'}\" \n    class=\"br-right-dark product-tab section-panel section\">\n      Все\n    </button>\n\n    <button @click=\"changeTab('user')\" :class=\"{'product-tab-active':data.currentTab === 'user'}\" \n    class=\"br-right-dark product-tab section-panel section\">\n      Клиенты\n    </button>\n\n    <button @click=\"changeTab('moderator')\" :class=\"{'product-tab-active':data.currentTab === 'moderator'}\" \n    class=\"product-tab section-panel section\">\n      Персонал\n    </button>\n\n    <button @click=\"changeTab('admin')\" :class=\"{'product-tab-active':data.currentTab === 'admin'}\" \n    class=\"product-tab section-panel section\">\n      Администраторы\n    </button>\n  </div>\n\n\n\n  <section class=\"cols-3 mobile:cols-1 bg-light br-bot-dark section-subsection section\">\n    <TestButton></TestButton>\n    <div v-for=\"user in users\" class=\"order-card col\"> \n      <p class=\" mn-b-small order-status w-100\">\n         <ul>\n          <li v-for=\"role in user.roles\" :key=\"role\">{{role.translate}}</li>\n        </ul>\n      </p>\n\n      <div class=\"flex block\">\n        <p class=\"w-100 mn-b-thin p-big\">\n          <!-- +7{{user.phone}}  -->\n        </p>\n         \n         <p class=\"w-100\">Время регистрации: {{DateToFormattedString(user.createdAt)}}</p>\n         <p class=\"w-100\">\n          Номер клиента: +7{{user.phone}}<br>\n        </p>\n        <p class=\"mn-b-small w-100\">\n          <!-- Имя клиента: {{order.info.name}}<br> -->\n        </p>\n        <hr class=\"mn-b-small\">\n        <router-link :to=\"{ name: 'User', params: { phone: user.phone }}\" class=\"link\">Редактировать</router-link>\n      </div>\n    </div>\n  </section>\n</template>\n\n\n<script setup>\n\n\n  import { computed, onMounted, reactive, toRefs } from 'vue'\n  \n  import { useRoute } from 'vue-router'\n \n  import HeaderAdmin from '@martyrs/src/components/HeaderAdmin/HeaderAdmin.vue'\n\n  import ProductsSection from '@/components/sections/ProductsSection.vue'\n\n  const store = useStore()\n  const route = useRoute()\n\n  store.dispatch('users/fetchUsers')\n\n  let data = reactive({currentTab: 'all'})\n  let reactiveData = toRefs(data)\n    \n\n  function changeTab (tab) {data.currentTab = tab; console.log(data.currentTab) }\n  \n  const users = computed(() => { \n    if (data.currentTab === 'all') {\n      return store.state.users.all\n    } else {\n\n      const filtered = store.state.users.all.filter(function(user, index) {\n        return user.roles.some(r=> r.name === data.currentTab)\n      })\n      \n      return filtered\n    } \n   \n  })\n\n  function DateToFormattedString(d) {         \n    var fixedDate = new Date(d);   \n    var yyyy = fixedDate.getFullYear().toString();                                                  \n    var mm = (fixedDate.getMonth()+1).toString(); // getMonth() is zero-based         \n    var dd  = fixedDate.getDate().toString();    \n    var hh  = fixedDate.getHours().toString();    \n    var minmin  = fixedDate.getMinutes().toString();             \n                         \n    return yyyy + '.' + (mm[1]?mm:\"0\"+mm[0]) + '.' + (dd[1]?dd:\"0\"+dd[0]) + \" в \" + (hh[1]?hh:\"0\"+hh[0]) + ':' + (minmin[1]?minmin:\"0\"+minmin[0]);\n  } \n\n\n  </script>\n\n<style lang=\"scss\">\n\n.order-card {\n  border-radius: 0.25rem;\n  overflow: hidden;\n  box-shadow: 0 8px 8px -8px rgb(36 36 36 / 10%);\n  .order-status {\n    color: black;\n    background: #EEF2F6; \n    width: 100%;\n    padding: 0.75rem 1.5rem;\n    margin: 0;\n  }\n\n  .new {\n    color: white;\n    background: #00ff88;\n  }\n\n  .block {\n    border-radius: 0;\n    border: 0;\n  }\n}\n\n  \n</style>\n",
                "name": "Users.vue",
                "size": 3781,
                "type": "source"
              }
            ]
          },
          "pages": {
            "_files": [
              {
                "path": "../../src/modules/backoffice/components/pages/Dashboard.vue",
                "relativePath": "modules/backoffice/components/pages/Dashboard.vue",
                "extension": ".vue",
                "content": "<template>\n\t<div class=\"pd-medium bg-white\">\n\t\t<h2 class=\"mn-b-small\">Overview</h2>\n\t\t<div class=\"mn-b-medium cols-3 mobile:cols-1 gap-thin\">\n\t\t\t<Block class=\"pos-relative\">\n\t\t\t\t<span class=\"t-green t-semi pos-absolute pos-t-medium pos-r-medium\">+12.5%</span>\n\t\t\t\t<div class=\"mn-b-medium radius-small w-max bg-main\"><IconProfile class=\"i-semi mn-small\"/></div>\n\t\t\t\t<p class=\"h3 mn-b-thin\">2,453</p>\n\t\t\t\t<p>Active Members</p>\n\t\t\t</Block>\n\n\t\t\t<Block class=\"pos-relative\">\n\t\t\t\t<span class=\"t-green t-semi pos-absolute pos-t-medium pos-r-medium\">+14.8%</span>\n\t\t\t\t<div class=\"mn-b-medium radius-small w-max bg-main\"><IconOrders class=\"i-semi mn-small\"/></div>\n\t\t\t\t<p class=\"h3 mn-b-thin\">432</p>\n\t\t\t\t<p>New Orders</p>\n\t\t\t</Block>\n\n\t\t\t<Block class=\"pos-relative\">\n\t\t\t\t<span class=\"t-green t-semi pos-absolute pos-t-medium pos-r-medium\">+25.1%</span>\n\t\t\t\t<div class=\"mn-b-medium radius-small w-max bg-main\"><IconProfile class=\"i-semi mn-small\"/></div>\n\t\t\t\t<p class=\"h3 mn-b-thin\">$23,232</p>\n\t\t\t\t<p>Monthly Revenue</p>\n\t\t\t</Block>\n\t\t</div>\n\n\t\t<div class=\"cols-2 gap-thin\">\n\t\t\t<Block \n\t\t\t\ttitle=\"Recent Orders\"\n\t\t\t\tclass=\"pos-relative\"\n\t\t\t>\n\t\t\t\t<Feed\n\t        :showLoadMore=\"false\"\n\t        :LoadMore=\"false\"\n\t        :states=\"{\n\t          empty: {\n\t            title: 'No Events Today',\n\t            description: 'Currently, there are no events available.'\n\t          }\n\t        }\"\n\t        :store=\"{\n\t          read: (options) => orders.actions.read(options),\n\t          state: orders.state\n\t        }\"\n\t        :options=\"{\n\t            user: auth.state.user._id,\n\t            limit: 5,\n\t            page: 1\n\t        }\"\n\t        v-slot=\"{ \n\t          items \n\t        }\"\n\t        class=\"cols-1 gap-thin\"\n\t      >\n\t\t\t\t\t<Table \n\t\t\t\t\t\tclass=\"radius-semi bg-white\"\n\t\t\t\t\t\t:items=\"items\"\n\t\t\t\t\t\t:columns=\"[{ \n\t\t\t\t\t    key: '_id', \n\t\t\t\t\t    label: 'ID',\n\t\t\t\t\t\t\tformatter: (value) => `#${value.slice(0, 4)}...${value.slice(-4)}` \n\t\t\t\t\t  },\n\t\t\t\t\t  { \n\t\t\t\t\t    key: 'customer.target.profile.name', \n\t\t\t\t\t    label: 'Name',\n\t\t\t\t\t    formatter: (value) => `👤 ${value}`\n\t\t\t\t\t  },\n\t\t\t\t\t  { \n\t\t\t\t\t    key: 'positions', \n\t\t\t\t\t    label: 'Name',\n\t\t\t\t\t    formatter: (value) => value?.length || 0\n\t\t\t\t\t  },\n\t\t\t\t\t  {\n\t\t\t\t\t    key: 'status',\n\t\t\t\t\t    label: 'Status',\n\t\t\t\t\t    component: StatusBadge\n\t\t\t\t\t  },\n\t\t\t\t\t  {\n\t\t\t\t\t    key: 'createdAt',\n\t\t\t\t\t    label: 'Metadata',\n\t\t\t\t\t    formatter: (value) => new Date(value).toLocaleDateString()\n\t\t\t\t\t  }]\" \n\t\t\t\t\t/>\n\t      </Feed>\n\n\t\t\t</Block>\n\n\t\t\t<Block \n\t\t\t\ttitle=\"Activity Feed\"\n\t\t\t\tclass=\"pos-relative\"\n\t\t\t\t>\n\t\t\t</Block>\n\t\t</div>\n\n\t</div>\n\n\n</template>\n\n<script setup=\"props\">\n/////////////////////////////\n// COMPONENT DEPENDENCIES\n/////////////////////////////\nimport { ref, onMounted } from 'vue';\n\n// Mobile Module\nimport Block from '@martyrs/src/components/Block/Block.vue'\nimport Feed from '@martyrs/src/components/Feed/Feed.vue'\nimport Table from '@martyrs/src/components/Table/Table.vue'\nimport StatusBadge from '@martyrs/src/components/Table/StatusBadge.vue'\n\n\nimport IconProfile from '@martyrs/src/modules/icons/entities/IconProfile.vue'\n\nimport IconProducts from '@martyrs/src/modules/icons/entities/IconProducts.vue'\nimport IconEvents from '@martyrs/src/modules/icons/entities/IconEvents.vue'\nimport IconGroups from '@martyrs/src/modules/icons/entities/IconGroups.vue'\nimport IconCommunity from '@martyrs/src/modules/icons/entities/IconCommunity.vue'\nimport IconGallery from '@martyrs/src/modules/icons/entities/IconGallery.vue'\nimport IconOrders from '@martyrs/src/modules/icons/entities/IconOrders.vue'\nimport IconLeftovers from '@martyrs/src/modules/icons/entities/IconLeftovers.vue'\n/////////////////////////////\n// HELPERS\n/////////////////////////////\nimport { useRoute, useRouter } from 'vue-router'\n\nimport * as auth  from '@martyrs/src/modules/auth/views/store/auth.js'\nimport * as organizations  from '@martyrs/src/modules/organizations/store/organizations.js'\nimport * as orders  from '@martyrs/src/modules/orders/store/orders.js'\n\nconst route = useRoute()\nconst router = useRouter()\n/////////////////////////////\n// CREATED\n/////////////////////////////\nconst props = defineProps({\n  favorites: Array,\n});\n\nconst selectedOrganization = ref(null);\nconst publics = ref([]);\n\n\nconst columns = [\n  \n]\n/////////////////////////////\n// MOUNTED\n/////////////////////////////\nonMounted(async () =>{\n})\n</script>\n\n<style lang=\"scss\">\n</style>",
                "name": "Dashboard.vue",
                "size": 4381,
                "type": "source"
              }
            ]
          },
          "partials": {
            "_files": [
              {
                "path": "../../src/modules/backoffice/components/partials/Sidebar.vue",
                "relativePath": "modules/backoffice/components/partials/Sidebar.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"pos-relative o-y-scroll o-x-hidden h-100\">\n    <div class=\"br-b  h3 h-4r pd-semi br-solid br-black-transp-10\">Backoffice</div>\n    <div class=\"pd-semi\">\n      <span class=\"pd-thin uppercase t-medium t-transp\">Menu</span>\n      <div \n        v-for=\"item in menuItems\" \n        :key=\"item.name\"\n        @click=\"router.push({ name: item.routeName })\" \n        class=\"flex pd-thin flex-v-center cursor-pointer\">\n        <component \n          v-if=\"item.icon\" \n          :is=\"item.icon\" \n          class=\"i-regular mn-r-thin\" \n          :icon=\"true\" \n          :fill=\"'rgba(var(--black),0.25)'\"\n        /> \n        <span class=\"t-medium\">{{ item.title }}</span>\n      </div>\n      \n      <span class=\"pd-thin d-block mn-t-medium uppercase t-medium t-transp\">General</span>\n      <div \n        v-for=\"item in generalItems\" \n        :key=\"item.name\"\n        @click=\"router.push({ name: item.routeName })\" \n        class=\"flex pd-thin flex-v-center cursor-pointer\">\n        <component \n          v-if=\"item.icon\" \n          :is=\"item.icon\" \n          class=\"i-regular mn-r-thin\" \n          :icon=\"true\" \n          :fill=\"'rgba(var(--black),0.25)'\"\n        /> \n        <span class=\"t-medium\">{{ item.title }}</span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup=\"props\">\n/////////////////////////////\n// COMPONENT DEPENDENCIES\n/////////////////////////////\nimport { ref, onMounted } from 'vue';\n\n// Mobile Module\nimport SelectMulti from '@martyrs/src/components/SelectMulti/SelectMulti.vue'\n\nimport IconProducts from '@martyrs/src/modules/icons/entities/IconProducts.vue'\nimport IconPayments from '@martyrs/src/modules/icons/entities/IconPayments.vue'\nimport IconEvents from '@martyrs/src/modules/icons/entities/IconEvents.vue'\nimport IconGroups from '@martyrs/src/modules/icons/entities/IconGroups.vue'\nimport IconCommunity from '@martyrs/src/modules/icons/entities/IconCommunity.vue'\nimport IconGallery from '@martyrs/src/modules/icons/entities/IconGallery.vue'\nimport IconOrders from '@martyrs/src/modules/icons/entities/IconOrders.vue'\nimport IconLeftovers from '@martyrs/src/modules/icons/entities/IconLeftovers.vue'\n/////////////////////////////\n// HELPERS\n/////////////////////////////\nimport { useRoute, useRouter } from 'vue-router'\n\nimport * as auth from '@martyrs/src/modules/auth/views/store/auth.js'\nimport * as organizations from '@martyrs/src/modules/organizations/store/organizations.js'\n\nconst route = useRoute()\nconst router = useRouter()\n/////////////////////////////\n// CREATED\n/////////////////////////////\nconst props = defineProps({\n  favorites: Array,\n});\n\nconst selectedOrganization = ref(null);\nconst publics = ref([]);\n\n// Define menu items\nconst menuItems = [\n  {\n    name: 'organizations',\n    title: 'Organizations',\n    routeName: 'Backoffice Organizations',\n    icon: IconGroups\n  },\n  {\n    name: 'community',\n    title: 'Community',\n    routeName: 'Backoffice Community',\n    icon: IconCommunity\n  },\n  {\n    name: 'products',\n    title: 'Products',\n    routeName: 'Products',\n    icon: IconProducts\n  },\n  {\n    name: 'leftovers',\n    title: 'Leftovers',\n    routeName: 'Leftovers',\n    icon: IconLeftovers\n  },\n  {\n    name: 'orders',\n    title: 'Orders',\n    routeName: 'BackofficeOrdersList',\n    icon: IconOrders\n  },\n  {\n    name: 'gallery',\n    title: 'Gallery',\n    routeName: 'Backoffice Gallery',\n    icon: IconGallery\n  },\n  {\n    name: 'events',\n    title: 'Events',\n    routeName: 'BackofficeEvents Backoffice',\n    icon: IconEvents\n  }\n];\n\n// Define general items\nconst generalItems = [\n  {\n    name: 'payments',\n    title: 'Payments',\n    routeName: 'Payments',\n    icon: IconPayments\n  },\n  {\n    name: 'users',\n    title: 'Users',\n    routeName: 'Users',\n    icon: null\n  },\n  {\n    name: 'pages',\n    title: 'Pages',\n    routeName: 'Backoffice Pages',\n    icon: null\n  },\n  {\n    name: 'reports',\n    title: 'Reports',\n    routeName: 'Backoffice Reports',\n    icon: null\n  }\n];\n\n/////////////////////////////\n// MOUNTED\n/////////////////////////////\nonMounted(async () => {\n});\n</script>\n\n<style lang=\"scss\">\n</style>",
                "name": "Sidebar.vue",
                "size": 4099,
                "type": "source"
              }
            ]
          }
        }
      },
      "chats": {
        "_files": [
          {
            "path": "../../src/modules/chats/chats.client.js",
            "relativePath": "modules/chats/chats.client.js",
            "extension": ".js",
            "content": "// Store\nimport * as storeChatModule from './store/chat.store.js';\n\n// Router\n// import { createChatRoutes } from './router/chat.router.js';\n\n// Views\n// Pages\nimport ChatPage from './components/pages/ChatPage.vue';\n\n// Sections\nimport ChatWindow from './components/sections/ChatWindow.vue';\n\n// Blocks\nimport ChatMessage from './components/blocks/ChatMessage.vue';\n\n// Пример функции инициализации для модуля чатов\nfunction initializeChats(app, store, router, options = {}) {\n  const route = options.route || 'Home';\n\n  // const routesChat = createChatRoutes();\n\n  // router.addRoute(route, routesChat);\n\n  store.addStore('chat', storeChatModule);\n}\n\nconst ModuleChats = {\n  initialize: initializeChats,\n  views: {\n    store: {\n      storeChatModule,\n    },\n    router: {\n      // createChatRoutes\n    },\n    components: {\n      // Pages\n      ChatPage,\n      // Sections\n      ChatWindow,\n      // Blocks\n      ChatMessage,\n    },\n  },\n};\n\nexport default ModuleChats;\n",
            "name": "chats.client.js",
            "size": 970,
            "type": "source"
          },
          {
            "path": "../../src/modules/chats/chats.server.js",
            "relativePath": "modules/chats/chats.server.js",
            "extension": ".js",
            "content": "import ChatsController from './controllers/chats.controller.js';\nimport ChatModel from './models/chat.model.js';\nimport chatsRoutes from './routes/chats.routes.js';\nfunction initializeChats(app, db, wss, origins, publicPath) {\n  // Настраиваем модели в объекте базы данных\n  db.chat = ChatModel(db);\n  // Настраиваем маршруты, если объект приложения передан\n  if (app) {\n    chatsRoutes(app, db, wss, origins, publicPath);\n  }\n}\nexport const models = {\n  ChatModel,\n};\nexport const routes = {\n  chatsRoutes,\n};\nexport const controllers = {\n  ChatsController,\n};\nexport { initializeChats as initialize };\nexport default {\n  initialize: initializeChats,\n  models,\n  routes,\n  controllers,\n};\n",
            "name": "chats.server.js",
            "size": 690,
            "type": "source"
          }
        ],
        "controllers": {
          "_files": [
            {
              "path": "../../src/modules/chats/controllers/chats.controller.js",
              "relativePath": "modules/chats/controllers/chats.controller.js",
              "extension": ".js",
              "content": "import mailing from '@martyrs/src/modules/globals/controllers/utils/mailing.js';\nconst { sendChatMessageTelegram } = mailing;\nconst controllerFactory = db => {\n  const ChatMessage = db.chat;\n  const saveMessage = async msg => {\n    try {\n      const message = new ChatMessage(msg);\n      await message.save();\n      return message;\n    } catch (error) {\n      console.error('Error saving message to database:', error);\n    }\n  };\n  const getMessages = async chatId => {\n    try {\n      const messages = await ChatMessage.find({ chatId }).sort({ createdAt: 1 });\n      return messages;\n    } catch (error) {\n      console.error('Error retrieving messages from database:', error);\n    }\n  };\n  return {\n    saveMessage,\n    getMessages,\n  };\n};\nexport default controllerFactory;\n",
              "name": "chats.controller.js",
              "size": 777,
              "type": "source"
            }
          ]
        },
        "models": {
          "_files": [
            {
              "path": "../../src/modules/chats/models/chat.model.js",
              "relativePath": "modules/chats/models/chat.model.js",
              "extension": ".js",
              "content": "export default db => {\n  const ChatMessageSchema = new db.mongoose.Schema({\n    username: {\n      type: String,\n      required: true,\n    },\n    chatId: {\n      type: String,\n      required: true,\n    },\n    text: {\n      type: String,\n      required: true,\n    },\n    createdAt: {\n      type: Date,\n      default: Date.now,\n    },\n  });\n  const ChatMessage = db.mongoose.model('ChatMessage', ChatMessageSchema);\n  return ChatMessage;\n};\n",
              "name": "chat.model.js",
              "size": 438,
              "type": "source"
            }
          ]
        },
        "routes": {
          "_files": [
            {
              "path": "../../src/modules/chats/routes/chats.routes.js",
              "relativePath": "modules/chats/routes/chats.routes.js",
              "extension": ".js",
              "content": "import middlewareFactory from '@martyrs/src/modules/auth/controllers/middlewares/index.js';\nimport controllerFactory from '../controllers/chats.controller.js';\nexport default (function (app, db, wss) {\n  const controller = controllerFactory(db);\n  const { verifySignUp, verifyUser } = middlewareFactory(db);\n  // WebSocket-обработчик для модуля \"chat\"\n  wss.registerModule('chat', async (ws, msg) => {\n    if (msg.type === 'joinChat') {\n      if (!msg.chatId) return;\n      // Вешаем chatId на сокет — позволяет фильтровать клиентов\n      if (!ws.activeChats) ws.activeChats = new Set();\n      ws.activeChats.add(msg.chatId);\n    }\n    if (msg.type === 'message') {\n      const savedMessage = await controller.saveMessage(msg);\n      // Отправить сообщение всем в этом чате\n      wss.broadcastToModuleWithFilter(\n        'chat',\n        client => {\n          return client.activeChats?.has(msg.chatId);\n        },\n        savedMessage\n      );\n    }\n  });\n  // REST API: получить историю сообщений\n  app.get('/messages/:chatId', async (req, res) => {\n    const { chatId } = req.params;\n    const messages = await controller.getMessages(chatId);\n    res.json(messages);\n  });\n  // CORS-заголовки\n  app.use((req, res, next) => {\n    res.header('Access-Control-Allow-Headers', 'Access-Control-Allow-Origin: *', 'x-access-token, Origin, Content-Type, Accept');\n    next();\n  });\n});\n",
              "name": "chats.routes.js",
              "size": 1379,
              "type": "source"
            }
          ]
        },
        "store": {
          "_files": [
            {
              "path": "../../src/modules/chats/store/chat.store.js",
              "relativePath": "modules/chats/store/chat.store.js",
              "extension": ".js",
              "content": "import globalWebSocket from '@martyrs/src/modules/globals/views/classes/globals.websocket.js';\nimport { reactive, readonly } from 'vue';\n\nconst state = reactive({\n  messages: [],\n  currentChatId: null,\n  username: null,\n});\n\nconst methods = {\n  /**\n   * Подключение к глобальному WebSocket и подписка на чат\n   * @param {String} userId\n   */\n  async connectWebSocket(userId) {\n    try {\n      console.log('[Chat] Connecting to WebSocket with userId:', userId);\n      await globalWebSocket.connect(userId);\n      await globalWebSocket.subscribeModule('chat'); // 👈 Подписка на модуль чата\n\n      // Очистка старых листенеров\n      globalWebSocket.removeModuleListeners('chat');\n\n      // Добавляем обработчик входящих сообщений\n      globalWebSocket.addEventListener(\n        'message',\n        data => {\n          if (data.chatId === state.currentChatId) {\n            state.messages.push(data);\n          }\n        },\n        { module: 'chat' }\n      );\n    } catch (error) {\n      console.error('[Chat] WebSocket connection failed:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Установка текущего активного чата и загрузка сообщений\n   * @param {String} chatId\n   */\n  async setCurrentChat(chatId) {\n    state.currentChatId = chatId;\n    state.messages = [];\n\n    // Отправляем joinChat через WebSocket\n    globalWebSocket.send({ type: 'joinChat', module: 'chat', chatId });\n\n    // Загружаем историю сообщений\n    try {\n      const response = await fetch(`/messages/${chatId}`);\n      const messages = await response.json();\n      methods.setMessages(messages);\n    } catch (err) {\n      console.error('[Chat] Failed to fetch messages:', err);\n    }\n  },\n\n  /**\n   * Установка сообщений\n   * @param {Array} messages\n   */\n  setMessages(messages) {\n    state.messages = messages;\n  },\n\n  /**\n   * Отправка сообщения через WebSocket\n   * @param {Object} message\n   */\n  async addMessage(message) {\n    await globalWebSocket.send({\n      ...message,\n      module: 'chat',\n      type: 'message',\n      chatId: state.currentChatId,\n    });\n  },\n\n  /**\n   * Установка имени пользователя\n   * @param {String} username\n   */\n  setUsername(username) {\n    state.username = username;\n  },\n\n  /**\n   * Отключение от чата (очистка листенеров)\n   */\n  disconnectChat() {\n    globalWebSocket.removeModuleListeners('chat');\n    // globalWebSocket.disconnect(); // включить, если нужно полностью разорвать соединение\n  },\n};\n\nexport default {\n  state: readonly(state),\n  methods,\n};\n",
              "name": "chat.store.js",
              "size": 2477,
              "type": "source"
            }
          ]
        },
        "components": {
          "blocks": {
            "_files": [
              {
                "path": "../../src/modules/chats/components/blocks/ChatMessage.vue",
                "relativePath": "modules/chats/components/blocks/ChatMessage.vue",
                "extension": ".vue",
                "content": "<template>\n  <div \n    class=\"pd-small\"\n    :class=\"{'bg-main-nano': message.username === 'Support'}\"\n  >\n    <p class=\"flex-v-center gap-thin flex-nowrap flex w-100 p-small\">\n      <!-- <img loading=\"lazy\" v-if=\"message.username === 'Weeder Support'\" src=\"/logo/logo.png\" class=\"i-medium\"> -->\n      <strong class=\"mn-r-auto\"><span class=\"t-semi\">{{ message.username }}</span> <span class=\"t-transp\">{{formatDate(message.createdAt)}}</span></strong>\n    </p>\n    <p>{{ message.text }}</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    message: {\n      type: Object,\n      required: true\n    }\n  }\n};\n</script>\n\n<style>\n</style>\n",
                "name": "ChatMessage.vue",
                "size": 646,
                "type": "source"
              }
            ]
          },
          "pages": {
            "_files": [
              {
                "path": "../../src/modules/chats/components/pages/ChatPage.vue",
                "relativePath": "modules/chats/components/pages/ChatPage.vue",
                "extension": ".vue",
                "content": "<template>\n  <main class=\"chat-main\">\n    <ChatWindow />\n  </main>\n</template>\n\n<script setup>\nimport { ref, onMounted, onUnmounted } from 'vue';\nimport ChatWindow from '../sections/ChatWindow.vue';\nimport chatStore from '../../store/chat.store.js';\n\nconst props = defineProps({\n  username: {\n    type: String,\n    required: true\n  },\n  user: {\n    type: String,\n    required: true\n  },\n  chatID: {\n    type: String,\n    required: true\n  },\n});\n\nconst selectChat = (chatId) => {\n  chatStore.methods.setCurrentChat(chatId);\n};\n\nonMounted(async () => {\n  chatStore.methods.setUsername(props.username || 'user'); // Установка имени пользователя\n  await chatStore.methods.connectWebSocket(props.user); // Подключение к WebSocket\n  await chatStore.methods.setCurrentChat(props.chatID);\n});\n\nonUnmounted(() => {\n  // Clean up when the component is unmounted (e.g., navigating away)\n  chatStore.methods.disconnectChat();\n});\n</script>\n\n<style>\n/* Стили остаются без изменений */\n</style>",
                "name": "ChatPage.vue",
                "size": 980,
                "type": "source"
              }
            ]
          },
          "sections": {
            "_files": [
              {
                "path": "../../src/modules/chats/components/sections/ChatWindow.vue",
                "relativePath": "modules/chats/components/sections/ChatWindow.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"bg-white radius-semi bg-white o-hidden pos-relative\">\n    <div ref=\"allMessages\" class=\"chat-messages o-scroll h-max-20r\">\n      <div class=\"pos-relative h-min-20r flex-justify-end flex flex-column br-b br-solid br-black-transp-10\">\n        <transition name=\"scaleIn\" mode=\"out-in\">\n          <div v-if=\"messages.length < 1\" class=\"flex-center pd-small t-center w-100 h-100 flex-column flex pos-absolute\">\n            <PlaceholderChat class=\"radius-100 mn-b-thin\"/>\n            <h4 class='mn-b-thin'>Here you can view your chat history</h4>\n            <p>Feel free to ask if you have any questions.</p>\n          </div>\n\n          <TransitionGroup v-else name=\"list\" tag=\"ul\" class=\"w-100 o-hidden\" @after-enter=\"scrollToBottom\">\n            <ChatMessage\n              v-for=\"message in messages\"\n              :key=\"message._id\"\n              :message=\"message\"\n            />\n          </TransitionGroup>\n        </transition>\n      </div>\n    </div>\n\n    <div class=\"flex-nowrap flex-v-center flex bg-white w-100 radius-big pd-small\">\n      <IconAdd class=\"mn-r-thin t-transp i-regular\" />\n      <input class=\"\" placeholder=\"Enter your message\" type=\"text\" v-model=\"newMessage\" @keyup.enter=\"sendMessage\" />\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, watch, onMounted, nextTick } from 'vue';\n\nimport IconAdd from '@martyrs/src/modules/icons/navigation/IconAdd.vue'\nimport PlaceholderChat from '@martyrs/src/modules/icons/placeholders/PlaceholderChat.vue'\n\nimport ChatMessage from '../blocks/ChatMessage.vue';\nimport chatStore from '../../store/chat.store.js';\n\nconst newMessage = ref('');\nconst allMessages = ref(null);\n\n// Вычисляемые свойства\nconst messages = computed(() => chatStore.state.messages);\n\n// Функция прокрутки вниз\nconst scrollToBottom = () => {\n  if (allMessages.value) {\n    allMessages.value.scrollTop = allMessages.value.scrollHeight;\n  }\n};\n\n// Функция для отправки сообщения\nconst sendMessage = async () => {\n  if (newMessage.value) {\n    const message = {\n      text: newMessage.value,\n      module: 'chat',\n      username: chatStore.state.username,\n      chatId: chatStore.state.currentChatId\n    };\n\n    chatStore.methods.addMessage(message);\n    newMessage.value = '';\n\n    // Ждем, пока все анимации и рендеринг завершатся\n    await nextTick();\n    await new Promise(resolve => setTimeout(resolve, 100)); // Небольшая задержка для анимаций\n    scrollToBottom();\n  }\n};\n\n// Прокрутка вниз при монтировании\nonMounted(() => {\n  nextTick(() => {\n    if (allMessages.value) {\n      allMessages.value.scrollTop = allMessages.value.scrollHeight;\n    }\n  });\n});\n\n// Прокрутка вниз при изменении сообщений\nwatch(messages, () => {\n  nextTick(() => {\n    if (allMessages.value) {\n      allMessages.value.scrollTop = allMessages.value.scrollHeight;\n    }\n  });\n}, { deep: true });\n\n// Обработчик после завершения анимации входа нового элемента\n</script>\n\n<style>\n.list-enter-active,\n.list-leave-active {\n  transition: all 0.5s ease;\n}\n.list-enter-from,\n.list-leave-to {\n  opacity: 0;\n  transform: translateX(30px);\n}\n</style>",
                "name": "ChatWindow.vue",
                "size": 3099,
                "type": "source"
              }
            ]
          }
        }
      },
      "community": {
        "_files": [
          {
            "path": "../../src/modules/community/community.client.js",
            "relativePath": "modules/community/community.client.js",
            "extension": ".js",
            "content": "// Store\nimport * as storeBlogposts from './store/blogposts.js';\nimport * as storeReactions from './store/reactions.js';\n\n// Router\nimport routerCommunity from './router/blogposts.js';\n\n// Views\n// Layouts\nimport Community from './components/layouts/Community.vue';\n\n// Pages\nimport Blog from './components/pages/Blog.vue';\nimport BlogPost from './components/pages/BlogPost.vue';\nimport CreateBlogPost from './components/pages/CreateBlogPost.vue';\n\n// Blocks\nimport Activity from './components/blocks/Activity.vue';\nimport CardBlogpost from './components/blocks/CardBlogpost.vue';\nimport FooterBlogpost from './components/blocks/FooterBlogpost.vue';\n\n// Sections\nimport Comments from './components/sections/Comments.vue';\nimport HotPosts from './components/sections/HotPosts.vue';\n\n// Пример функции инициализации для модуля сообщества\nfunction initializeCommunity(app, store, router, options = {}) {\n  const route = options.route || 'Home';\n\n  router.addRoute(route, routerCommunity);\n\n  store.addStore('blogposts', storeBlogposts);\n  store.addStore('reactions', storeReactions);\n}\n\nconst ModuleCommunity = {\n  initialize: initializeCommunity,\n  views: {\n    store: {\n      storeBlogposts,\n      storeReactions,\n    },\n    router: {\n      routerCommunity,\n    },\n    components: {\n      // Layouts\n      Community,\n      // Pages\n      CreateBlogPost,\n      BlogPost,\n      Blog,\n      // Blocks\n      FooterBlogpost,\n      Activity,\n      CardBlogpost,\n      // Sections\n      Comments,\n      HotPosts,\n    },\n  },\n};\n\nexport { Activity, Blog, BlogPost, CardBlogpost, Comments, Community, CreateBlogPost, FooterBlogpost, HotPosts, routerCommunity, storeBlogposts, storeReactions };\n\nexport default ModuleCommunity;\n",
            "name": "community.client.js",
            "size": 1717,
            "type": "source"
          },
          {
            "path": "../../src/modules/community/community.server.js",
            "relativePath": "modules/community/community.server.js",
            "extension": ".js",
            "content": "import BlogController from './controllers/blog.controller.js';\nimport CommentsController from './controllers/comments.controller.js';\nimport ReactionsController from './controllers/reactions.controller.js';\nimport BlogpostModel from './models/blogpost.model.js';\nimport CommentModel from './models/comment.model.js';\nimport ReactionModel from './models/reaction.model.js';\nimport blogRoutes from './routes/blog.routes.js';\nimport commentsRoutes from './routes/comments.routes.js';\nimport reactionsRoutes from './routes/reactions.routes.js';\nfunction initializeCommunity(app, db, origins, publicPath) {\n  // Настраиваем модели в объекте базы данных\n  db.blogpost = BlogpostModel(db);\n  db.comment = CommentModel(db);\n  db.reaction = ReactionModel(db);\n  // Настраиваем маршруты, если объект приложения передан\n  if (app) {\n    blogRoutes(app, db, origins, publicPath);\n    commentsRoutes(app, db, origins, publicPath);\n    reactionsRoutes(app, db, origins, publicPath);\n  }\n}\nexport const models = {\n  BlogpostModel,\n  CommentModel,\n  ReactionModel,\n};\nexport const routes = {\n  blogRoutes,\n  commentsRoutes,\n  reactionsRoutes,\n};\nexport const controllers = {\n  BlogController,\n  CommentsController,\n  ReactionsController,\n};\nexport { initializeCommunity as initialize };\nexport default {\n  initialize: initializeCommunity,\n  models,\n  routes,\n  controllers,\n};\n",
            "name": "community.server.js",
            "size": 1361,
            "type": "source"
          }
        ],
        "controllers": {
          "_files": [
            {
              "path": "../../src/modules/community/controllers/blog.controller.js",
              "relativePath": "modules/community/controllers/blog.controller.js",
              "extension": ".js",
              "content": "import queryProcessorReactions from '@martyrs/src/modules/community/controllers/utils/queryProcessorReactions.js';\nimport queryProcessorGlobals from '@martyrs/src/modules/globals/controllers/utils/queryProcessor.js';\nimport queryProcessorOrganizations from '@martyrs/src/modules/organizations/controllers/utils/queryProcessor.js';\nimport queryProcessor from './utils/queryProcessor.js';\nconst controllerFactory = db => {\n  const Blogpost = db.blogpost;\n  const Organization = db.organization;\n  const Membership = db.membership;\n  const read = async (req, res) => {\n    console.log(req.query);\n    let stages = [];\n    stages = [\n      // Basic\n      ...queryProcessorGlobals.getBasicOptions(req.query),\n      ...queryProcessorGlobals.getTagsOptions(req.query.tags),\n      ...queryProcessor.getPeriodConditions(req.query.period),\n      ...(await queryProcessor.getCategoryConditions(req.query.category)),\n      // Following\n      ...(await queryProcessorOrganizations.getFollowingStage(Membership, req.query.following)),\n      // Blocking\n      ...(await queryProcessorOrganizations.getBlockedStage(Membership, req.query.user)),\n      queryProcessorReactions.getCommentsLookupStage(),\n      queryProcessorReactions.getReactionsLookupStage(),\n      queryProcessorReactions.getReactionsCommentsFields(req.query.user),\n      queryProcessorGlobals.getCreatorUserLookupStage(),\n      queryProcessorGlobals.getCreatorOrganizationLookupStage(),\n      // For owner\n      queryProcessorGlobals.getOwnerUserLookupStage(),\n      queryProcessorGlobals.getOwnerOrganizationLookupStage(),\n      queryProcessorGlobals.getAddFieldsCreatorOwnerStage(),\n      // Sorting and Pagination\n      ...queryProcessorGlobals.getSortingOptions(req.query.sortParam, req.query.sortOrder),\n      ...queryProcessorGlobals.getPaginationOptions(req.query.skip, req.query.limit),\n      // For creator\n      // { $sample: { size: Number(req.query.limit) } },\n    ];\n    try {\n      const posts = await Blogpost.aggregate(stages).exec();\n      if (posts.length === 0) {\n        return res.status(200).send([]);\n      }\n      res.status(200).send(posts);\n    } catch (err) {\n      console.log(err);\n      res.status(500).send({ err });\n    }\n  };\n  const create = (req, res) => {\n    const newBlogpost = {\n      url: req.body.name\n        .toLowerCase()\n        .replace(/ /g, '-')\n        .replace(/[^\\w-]+/g, ''),\n      name: req.body.name,\n      status: req.body.status,\n      tags: req.body.tags ? req.body.tags : ['All'],\n      owner: req.body.owner,\n      source: req.body.source,\n      creator: req.body.creator,\n      content: req.body.content,\n      views: 1,\n    };\n    Blogpost.create(newBlogpost)\n      .then(post => {\n        res.status(200).send(post);\n      })\n      .catch(err => {\n        res.status(500).send({ message: err.message || 'Some error occurred while creating the blogpost.' });\n      });\n  };\n  const update = (req, res) => {\n    Blogpost.findOneAndUpdate({ _id: req.body._id }, { $set: req.body }, { new: true })\n      .exec()\n      .then(post => {\n        if (!post) {\n          return res.status(404).send({ message: 'Something wrong when updating the blogpost.' });\n        }\n        res.status(200).send(post);\n      })\n      .catch(err => {\n        res.status(500).send({ message: err.message || 'Some error occurred while updating the blogpost.' });\n      });\n  };\n  const del = (req, res) => {\n    Blogpost.findOneAndDelete({ _id: req.params._id })\n      .exec()\n      .then(post => {\n        if (!post) {\n          return res.status(404).send({ message: 'The blogpost is not deleted.' });\n        }\n        res.status(200).send(post);\n      })\n      .catch(err => {\n        res.status(500).send({ message: err.message || 'Some error occurred while deleting the blogpost.' });\n      });\n  };\n  return {\n    read,\n    create,\n    update,\n    delete: del,\n  };\n};\nexport default controllerFactory;\n",
              "name": "blog.controller.js",
              "size": 3897,
              "type": "source"
            },
            {
              "path": "../../src/modules/community/controllers/comments.controller.js",
              "relativePath": "modules/community/controllers/comments.controller.js",
              "extension": ".js",
              "content": "import queryProcessorGlobals from '@martyrs/src/modules/globals/controllers/utils/queryProcessor.js';\nconst commentControllerFactory = db => {\n  const Comment = db.comment;\n  const Membership = db.membership;\n  const read = async (req, res) => {\n    try {\n      const { target, type, user, maxDepth = 4, parentId = null, format = 'tree', sortParam = 'createdAt', sortOrder = 'desc' } = req.query;\n      let conditions = {};\n      if (target) conditions.target = new db.mongoose.Types.ObjectId(target);\n      if (type) conditions.type = type;\n      if (parentId) {\n        conditions.parent = new db.mongoose.Types.ObjectId(parentId);\n      } else {\n        conditions.parent = null;\n      }\n      let blockedMembers = [];\n      if (user) {\n        const memberships = await Membership.find({ user: user, role: 'blocked' });\n        blockedMembers = memberships.map(membership => membership.target);\n      }\n      const pipeline = [\n        { $match: conditions },\n        ...(format === 'tree'\n          ? [\n              {\n                $graphLookup: {\n                  from: 'comments',\n                  startWith: '$_id',\n                  connectFromField: '_id',\n                  connectToField: 'parent',\n                  as: 'children',\n                  maxDepth: Number(req.query.maxDepth),\n                  depthField: 'childDepth',\n                },\n              },\n            ]\n          : []),\n        {\n          $lookup: {\n            from: 'users',\n            localField: 'owner.target',\n            foreignField: '_id',\n            as: 'owner',\n          },\n        },\n        { $unwind: '$owner' },\n        {\n          $lookup: {\n            from: 'users',\n            localField: 'children.owner.target',\n            foreignField: '_id',\n            as: 'childUsers',\n          },\n        },\n        ...queryProcessorGlobals.getSortingOptions(sortParam, sortOrder),\n        {\n          $project: {\n            _id: 1,\n            content: 1,\n            type: 1,\n            target: 1,\n            'owner.username': 1,\n            'owner.profile.photo': 1,\n            'owner.profile.name': 1,\n            'owner._id': 1,\n            depth: 1,\n            createdAt: 1,\n            ...(format === 'tree'\n              ? {\n                  childrenCount: { $size: '$children' },\n                  children: {\n                    $map: {\n                      input: '$children',\n                      as: 'child',\n                      in: {\n                        _id: '$$child._id',\n                        content: '$$child.content',\n                        type: '$$child.type',\n                        parent: '$$child.parent',\n                        target: '$$child.target',\n                        owner: {\n                          $arrayElemAt: [\n                            {\n                              $filter: {\n                                input: '$childUsers',\n                                as: 'childUser',\n                                cond: { $eq: ['$$childUser._id', '$$child.owner.target'] },\n                              },\n                            },\n                            0,\n                          ],\n                        },\n                        depth: '$$child.depth',\n                        createdAt: '$$child.createdAt',\n                        childrenCount: { $size: '$$child.children' },\n                      },\n                    },\n                  },\n                }\n              : {}),\n          },\n        },\n      ];\n      if (blockedMembers.length > 0) {\n        pipeline.unshift({ $match: { user: { $nin: blockedMembers } } });\n      }\n      const comments = await Comment.aggregate(pipeline);\n      function buildCommentTree(comments) {\n        // Создаем Map для быстрого доступа ко всем комментариям по их ID\n        const commentMap = new Map();\n        // Функция для преобразования MongoDB ObjectId в строку\n        const objectIdToString = id => id.toString();\n        // Функция для добавления комментария и его дочерних элементов в Map\n        function addToMap(comment) {\n          const commentId = objectIdToString(comment._id);\n          if (!commentMap.has(commentId)) {\n            commentMap.set(commentId, { ...comment, children: [] });\n            if (comment.children && comment.children.length > 0) {\n              comment.children.forEach(addToMap);\n            }\n          }\n        }\n        // Добавляем все комментарии и их дочерние элементы в Map\n        comments.forEach(addToMap);\n        // Строим дерево\n        commentMap.forEach(comment => {\n          if (comment.parent) {\n            const parentId = objectIdToString(comment.parent);\n            const parent = commentMap.get(parentId);\n            if (parent) {\n              parent.children.push(comment);\n            }\n          }\n        });\n        // Функция для рекурсивной сортировки дочерних комментариев\n        function sortChildren(comment) {\n          if (comment.children.length > 0) {\n            comment.children.sort((a, b) => new Date(a.createdAt) - new Date(b.createdAt));\n            comment.children.forEach(sortChildren);\n          }\n        }\n        // Получаем корневые комментарии и сортируем их\n        const rootComments = comments\n          .map(comment => {\n            const commentId = objectIdToString(comment._id);\n            return commentMap.get(commentId);\n          })\n          .filter(comment => !comment.parent);\n        // Сортируем корневые комментарии по createdAt\n        rootComments.sort((a, b) => new Date(a.createdAt) - new Date(b.createdAt));\n        // Рекурсивно сортируем дочерние комментарии\n        rootComments.forEach(sortChildren);\n        return rootComments;\n      }\n      let commentsTree = format === 'tree' ? buildCommentTree(comments) : comments;\n      res.status(200).json(commentsTree);\n    } catch (error) {\n      console.error(error);\n      res.status(500).json({ message: error.message });\n    }\n  };\n  const create = async (req, res) => {\n    try {\n      const { user, type, target, content, parent, creator, owner } = req.body;\n      let depth = 0;\n      if (parent) {\n        const parentComment = await Comment.findById(parent);\n        if (!parentComment) {\n          return res.status(404).send({ message: 'Parent comment not found.' });\n        }\n        depth = parentComment.depth + 1;\n      }\n      const comment = new Comment({\n        user,\n        type,\n        target,\n        content,\n        parent,\n        creator,\n        owner,\n        depth,\n      });\n      const savedComment = await comment.save();\n      if (parent) {\n        await Comment.findByIdAndUpdate(parent, {\n          $push: { children: savedComment._id },\n        });\n      }\n      const populatedComment = await Comment.findById(savedComment._id)\n        .populate({\n          path: 'owner.target',\n          select: 'username profile.photo profile.name _id',\n        })\n        .populate({\n          path: 'creator.target',\n          select: 'username profile.photo profile.name _id',\n        });\n      res.status(201).send(populatedComment);\n    } catch (err) {\n      console.error(err);\n      res.status(500).send({\n        message: err.message || 'Some error occurred while creating the comment.',\n      });\n    }\n  };\n  const update = async (req, res) => {\n    try {\n      const comment = await Comment.findByIdAndUpdate(req.params._id, req.body, { new: true })\n        .populate({\n          path: 'creator.target',\n          select: 'username profile.photo profile.name _id',\n        })\n        .populate({\n          path: 'owner.target',\n          select: 'username profile.photo profile.name _id',\n        });\n      if (!comment) {\n        return res.status(404).send({ message: 'Comment not found.' });\n      }\n      res.status(200).send(comment);\n    } catch (err) {\n      res.status(500).send({ message: err.message });\n    }\n  };\n  const deleteComment = async (req, res) => {\n    try {\n      const comment = await Comment.findByIdAndRemove(req.params._id);\n      if (!comment) {\n        return res.status(404).send({ message: 'Comment is not deleted.' });\n      }\n      res.status(200).send(comment);\n    } catch (err) {\n      res.status(500).send({ message: err.message });\n    }\n  };\n  return {\n    read,\n    create,\n    update,\n    delete: deleteComment,\n  };\n};\nexport default commentControllerFactory;\n",
              "name": "comments.controller.js",
              "size": 8366,
              "type": "source"
            },
            {
              "path": "../../src/modules/community/controllers/reactions.controller.js",
              "relativePath": "modules/community/controllers/reactions.controller.js",
              "extension": ".js",
              "content": "import { Types } from 'mongoose';\nconst ObjectId = { Types }.Types.ObjectId;\nconst reactionControllerFactory = db => {\n  const Reaction = db.reaction;\n  const read = async (req, res) => {\n    let query = {};\n    // Uncomment and correctly implement the user query\n    if (req.query.user) {\n      query.user = new ObjectId(req.query.user);\n    }\n    if (req.query.type) {\n      query.type = req.query.type;\n    }\n    if (req.query.target) {\n      query.target = req.query.target;\n    }\n    if (req.query.targetString) {\n      query.targetString = req.query.targetString;\n    }\n    try {\n      // Assuming 'Reaction' is a model, querying with the constructed 'query' object\n      const reactions = await Reaction.find(query).populate('user');\n      if (!reactions) {\n        return res.status(404).send({ errorCode: 'REACTIONS_NOT_FOUND' });\n      }\n      res.send(reactions);\n    } catch (err) {\n      res.status(500).send({ errorCode: 'SERVER_ERROR' });\n    }\n  };\n  const create = async (req, res) => {\n    try {\n      const reaction = new Reaction(req.body);\n      const savedReaction = await reaction.save();\n      res.status(200).send({ reaction: savedReaction });\n    } catch (err) {\n      console.error(err);\n      res.status(500).send({ message: err });\n    }\n  };\n  const update = async (req, res) => {\n    try {\n      let query = { _id: new ObjectId(req.params._id) };\n      // Добавить проверку на targetString в запросе, если target не указан\n      if (req.body.targetString && !req.body.target) {\n        query.targetString = req.body.targetString;\n      }\n      const updatedReaction = await Reaction.findOneAndUpdate(query, { $set: req.body }, { new: true });\n      if (!updatedReaction) {\n        return res.status(404).send({ message: 'Something wrong when updating reaction.' });\n      }\n      res.status(200).send(updatedReaction);\n    } catch (err) {\n      console.error(err);\n      res.status(500).send({ message: err });\n    }\n  };\n  const deleteReaction = async (req, res) => {\n    try {\n      let query = { _id: new ObjectId(req.body._id) };\n      // Добавить проверку на targetString в запросе, если target не указан\n      if (req.body.targetString && !req.body.target) {\n        query.targetString = req.body.targetString;\n      }\n      const deletedReaction = await Reaction.findOneAndDelete(query);\n      if (!deletedReaction) {\n        return res.status(404).send({ message: 'Reaction is not deleted.' });\n      }\n      res.status(200).send(deletedReaction);\n    } catch (err) {\n      console.error(err);\n      res.status(500).send({ message: err });\n    }\n  };\n  return {\n    read,\n    create,\n    update,\n    delete: deleteReaction,\n  };\n};\nexport default reactionControllerFactory;\n",
              "name": "reactions.controller.js",
              "size": 2713,
              "type": "source"
            }
          ],
          "utils": {
            "_files": [
              {
                "path": "../../src/modules/community/controllers/utils/queryProcessor.js",
                "relativePath": "modules/community/controllers/utils/queryProcessor.js",
                "extension": ".js",
                "content": "function getPeriodConditions(period) {\n  const currentDate = new Date();\n  const startDate = new Date();\n  switch (period) {\n    case 'today':\n      startDate.setDate(currentDate.getDate() - 1);\n      break;\n    case 'week':\n      startDate.setDate(currentDate.getDate() - 7);\n      break;\n    case 'month':\n      startDate.setMonth(currentDate.getMonth() - 1);\n      break;\n    case 'year':\n      startDate.setFullYear(currentDate.getFullYear() - 1);\n      break;\n    default:\n      return [];\n  }\n  return [\n    {\n      $match: {\n        createdAt: {\n          $gte: startDate,\n          $lte: currentDate, // Добавлено условие, чтобы исключить будущие записи\n        },\n      },\n    },\n  ];\n}\nasync function getCategoryConditions(category, user) {\n  const aggregationStages = [];\n  if (category) {\n    switch (category) {\n      case 'featured':\n        aggregationStages.push({ $match: { tags: { $in: ['Featured'] } } });\n        break;\n      case 'popular':\n        aggregationStages.push({ $sort: { views: -1, likes: -1 } });\n        break;\n      case 'new':\n        aggregationStages.push({ $sort: { createdAt: 1 } });\n        break;\n    }\n  }\n  return aggregationStages;\n}\nexport { getCategoryConditions, getPeriodConditions };\nexport default {\n  getPeriodConditions,\n  getCategoryConditions,\n};\n",
                "name": "queryProcessor.js",
                "size": 1303,
                "type": "source"
              },
              {
                "path": "../../src/modules/community/controllers/utils/queryProcessorReactions.js",
                "relativePath": "modules/community/controllers/utils/queryProcessorReactions.js",
                "extension": ".js",
                "content": "import { Types } from 'mongoose';\nconst ObjectId = { Types }.Types.ObjectId;\nfunction getCommentsLookupStage() {\n  return {\n    $lookup: {\n      from: 'comments',\n      localField: '_id',\n      foreignField: 'target',\n      as: 'comments',\n    },\n  };\n}\nfunction getReactionsLookupStage() {\n  return {\n    $lookup: {\n      from: 'reactions',\n      localField: '_id',\n      foreignField: 'target',\n      as: 'reactions',\n    },\n  };\n}\nfunction getReactionsCommentsFields(user) {\n  return {\n    $addFields: {\n      numberOfComments: { $size: '$comments' },\n      numberOfReactions: { $size: '$reactions' },\n      isReacted: {\n        $in: [\n          new ObjectId(user), // make sure db is accessible or pass as param\n          '$reactions.user',\n        ],\n      },\n      reactionId: {\n        $let: {\n          vars: {\n            reactionIndex: {\n              $indexOfArray: [\n                '$reactions.user',\n                new ObjectId(user), // same here for db accessibility\n              ],\n            },\n          },\n          in: {\n            $cond: [{ $gte: ['$$reactionIndex', 0] }, { $arrayElemAt: ['$reactions._id', '$$reactionIndex'] }, null],\n          },\n        },\n      },\n    },\n  };\n}\nexport { getCommentsLookupStage, getReactionsCommentsFields, getReactionsLookupStage };\nexport default {\n  getCommentsLookupStage,\n  getReactionsLookupStage,\n  getReactionsCommentsFields,\n};\n",
                "name": "queryProcessorReactions.js",
                "size": 1401,
                "type": "source"
              }
            ]
          }
        },
        "middlewares": {
          "server": {
            "_files": [
              {
                "path": "../../src/modules/community/middlewares/server/index.js",
                "relativePath": "modules/community/middlewares/server/index.js",
                "extension": ".js",
                "content": "// Импортируем модуль verifyBlogpost\nimport verifyBlogpostModule from './verifyBlogpost.js';\n\nconst middlewareIndexFactory = db => {\n  const verifyBlogpost = verifyBlogpostModule(db);\n  \n  return {\n    verifyBlogpost,\n  };\n};\n\nexport default middlewareIndexFactory;",
                "name": "index.js",
                "size": 265,
                "type": "source"
              },
              {
                "path": "../../src/modules/community/middlewares/server/verifyBlogpost.js",
                "relativePath": "modules/community/middlewares/server/verifyBlogpost.js",
                "extension": ".js",
                "content": "// middlewareFactory.js\nconst middlewareFactory = db => {\n  const Blogpost = db.blogpost;\n  const checkBlogpostExistOrNot = async (req, res, next) => {\n    try {\n      // Обработка URL\n      const url = req.body.url\n        ? req.body.url\n        : req.body.name\n            .toLowerCase()\n            .replace(/ /g, '-')\n            .replace(/[^\\w-]+/g, '');\n      // Создание блога\n      if (!req.body._id) {\n        const blogpost = await Blogpost.findOne({ url });\n        if (blogpost) {\n          res.status(400).send({ errorCode: 'POST_URL_ALREADY_IN_USE', accessToken: null });\n          return;\n        }\n        next();\n        return;\n      }\n      // Обновление блога\n      const updatingBlogpostId = req.body._id;\n      const existingBlogpost = await Blogpost.findById(updatingBlogpostId);\n      if (!existingBlogpost) {\n        res.status(404).send({ errorCode: 'BLOGPOST_NOT_FOUND', accessToken: null });\n        return;\n      }\n      if (existingBlogpost.url !== url) {\n        const blogpost = await Blogpost.findOne({ url });\n        if (blogpost) {\n          res.status(400).send({ errorCode: 'POST_URL_ALREADY_IN_USE', accessToken: null });\n          return;\n        }\n      }\n      next();\n    } catch (err) {\n      console.log(err);\n      res.status(500).send({ message: err });\n    }\n  };\n  const checkNameNotEmpty = (req, res, next) => {\n    if (!req.body.name || req.body.name.trim() === '') {\n      res.status(400).send({ errorCode: 'NAME_CANNOT_BE_EMPTY', accessToken: null });\n      return;\n    }\n    next();\n  };\n  return {\n    checkBlogpostExistOrNot,\n    checkNameNotEmpty,\n  };\n};\nexport default middlewareFactory;\n",
                "name": "verifyBlogpost.js",
                "size": 1647,
                "type": "source"
              }
            ]
          }
        },
        "models": {
          "_files": [
            {
              "path": "../../src/modules/community/models/blogpost.model.js",
              "relativePath": "modules/community/models/blogpost.model.js",
              "extension": ".js",
              "content": "import applyCommonSchema from '@martyrs/src/modules/globals/models/schemas/common.schema.js';\nimport applyEngagementSchema from '@martyrs/src/modules/globals/models/schemas/engagement.schema.js';\nimport applyMetadataSchema from '@martyrs/src/modules/globals/models/schemas/metadata.schema.js';\nimport applyOwnershipSchema from '@martyrs/src/modules/globals/models/schemas/ownership.schema.js';\nexport default db => {\n  const BlogpostSchema = new db.mongoose.Schema(\n    {\n      name: {\n        type: String,\n        required: true,\n      },\n      content: {\n        type: Array,\n      },\n      source: {\n        type: String,\n      },\n      createdAt: {\n        type: Date,\n        default: Date.now,\n      },\n    },\n    {\n      strict: true,\n    }\n  );\n  applyCommonSchema(BlogpostSchema, db);\n  applyEngagementSchema(BlogpostSchema, db);\n  applyOwnershipSchema(BlogpostSchema, db);\n  applyMetadataSchema(BlogpostSchema, db);\n  const Blogpost = db.mongoose.model('Blogpost', BlogpostSchema);\n  return Blogpost;\n};\n",
              "name": "blogpost.model.js",
              "size": 1015,
              "type": "source"
            },
            {
              "path": "../../src/modules/community/models/comment.model.js",
              "relativePath": "modules/community/models/comment.model.js",
              "extension": ".js",
              "content": "import applyOwnershipSchema from '@martyrs/src/modules/globals/models/schemas/ownership.schema.js';\nexport default db => {\n  const CommentSchema = new db.mongoose.Schema({\n    type: {\n      type: String,\n      enum: ['blogpost', 'comment', 'photo', 'event'],\n      default: 'post',\n      required: true,\n    },\n    target: {\n      type: db.mongoose.Schema.Types.ObjectId,\n      ref: function (value) {\n        if (this.type === 'blogpost') return 'Blogpost';\n        if (this.type === 'comment') return 'Comment';\n        if (this.type === 'event') return 'Event';\n        if (this.type === 'photo') return 'Photo';\n      },\n      required: true,\n    },\n    parent: {\n      type: db.mongoose.Schema.Types.ObjectId,\n      ref: 'Comment',\n      default: null,\n    },\n    children: [\n      {\n        type: db.mongoose.Schema.Types.ObjectId,\n        ref: 'Comment',\n      },\n    ],\n    depth: {\n      type: Number,\n      default: 0,\n    },\n    content: {\n      type: String,\n      required: true,\n    },\n    createdAt: {\n      type: Date,\n      default: Date.now,\n    },\n  });\n  applyOwnershipSchema(CommentSchema, db);\n  CommentSchema.index({ target: 1, parent: 1, depth: 1 });\n  const Comment = db.mongoose.model('Comment', CommentSchema);\n  return Comment;\n};\n",
              "name": "comment.model.js",
              "size": 1259,
              "type": "source"
            },
            {
              "path": "../../src/modules/community/models/reaction.model.js",
              "relativePath": "modules/community/models/reaction.model.js",
              "extension": ".js",
              "content": "export default db => {\n  const ReactionSchema = new db.mongoose.Schema(\n    {\n      user: {\n        type: db.mongoose.Schema.Types.ObjectId,\n        ref: function (value) {\n          if (this.owner.type === 'user') return 'User';\n          if (this.owner.type === 'organization') return 'Organization';\n        },\n        required: true,\n      },\n      type: {\n        type: String,\n        enum: ['event', 'comment', 'blogpost', 'mix'],\n        default: 'blogpost',\n        required: true,\n      },\n      target: {\n        type: db.mongoose.Schema.Types.ObjectId,\n        ref: function (value) {\n          if (this.owner.type === 'event') return 'Event';\n          if (this.owner.type === 'comment') return 'Comment';\n          if (this.owner.blogpost === 'blogpost') return 'Blogpost';\n        },\n      },\n      targetString: {\n        type: String,\n      },\n      class: {\n        type: String,\n        enum: ['like', 'dislike', 'emoji'],\n        default: 'like',\n        required: true,\n      },\n      content: {\n        type: String,\n      },\n    },\n    {\n      timestamps: {\n        currentTime: () => Date.now(),\n      },\n    },\n    {\n      strict: false,\n    }\n  );\n  const Reaction = db.mongoose.model('Reaction', ReactionSchema);\n  return Reaction;\n};\n",
              "name": "reaction.model.js",
              "size": 1262,
              "type": "source"
            }
          ]
        },
        "router": {
          "_files": [
            {
              "path": "../../src/modules/community/router/blogposts.js",
              "relativePath": "modules/community/router/blogposts.js",
              "extension": ".js",
              "content": "import layoutCommunity from '../components/layouts/Community.vue';\n\nimport * as validationAuth from '@martyrs/src/modules/auth/views/middlewares/auth.validation.js';\n\nconst community = {\n  path: 'community',\n  component: layoutCommunity,\n  meta: {\n    title: {\n      en: 'Community',\n      ru: 'Коммьюнити',\n    },\n    breadcrumbs: {\n      hidden: true,\n    },\n    title_hide: true,\n  },\n  children: [\n    {\n      path: ':category?',\n      name: 'Blog',\n      meta: {\n        title: {\n          en: 'Community',\n          ru: 'Коммьюнити',\n        },\n        title_hide: true,\n        hideNavigationBar: true,\n      },\n      component: () => import(/* webpackChunkName: 'Blog' */ '../components/pages/Blog.vue'),\n    },\n    {\n      path: 'posts/create',\n      name: 'Create BlogPost',\n      meta: {\n        title: {\n          en: 'Create Post',\n          ru: 'Создать Пост',\n        },\n      },\n      beforeEnter: [validationAuth.requiresAuth],\n      component: () => import(/* webpackChunkName: 'CreateBlogPost' */ '../components/pages/CreateBlogPost.vue'),\n    },\n    {\n      path: 'posts/:url',\n      name: 'BlogPost',\n      meta: {\n        title: {\n          en: 'Post',\n          ru: 'Пост',\n        },\n        title_hide: false,\n      },\n      component: () => import(/* webpackChunkName: 'BlogPost' */ '../components/pages/BlogPost.vue'),\n    },\n    {\n      path: 'posts/:url/edit',\n      name: 'Edit BlogPost',\n      meta: {\n        title: {\n          en: 'Edit Post',\n          ru: 'Редактировать пост',\n        },\n      },\n      beforeEnter: [\n        validationAuth.requiresAuth,\n        // validationOwnership.requiresEditAccess\n      ],\n      component: () => import(/* webpackChunkName: 'CreateBlogPost' */ '../components/pages/CreateBlogPost.vue'),\n    },\n  ],\n};\n\nexport default community;\n",
              "name": "blogposts.js",
              "size": 1806,
              "type": "source"
            }
          ]
        },
        "routes": {
          "_files": [
            {
              "path": "../../src/modules/community/routes/blog.routes.js",
              "relativePath": "modules/community/routes/blog.routes.js",
              "extension": ".js",
              "content": "import middlewareFactoryAuth from '@martyrs/src/modules/auth/controllers/middlewares/index.js';\nimport globalsabac from '@martyrs/src/modules/globals/controllers/classes/globals.abac.js';\nimport controllerFactory from '../controllers/blog.controller.js';\nimport middlewareFactoryCommunity from '../middlewares/server/index.js';\n// ABAC\nconst { getInstance } = globalsabac;\nexport default (function (app, db, origins) {\n  const controller = controllerFactory(db);\n  const abac = getInstance(db);\n  const { authJwt } = middlewareFactoryAuth(db);\n  const { verifyBlogpost } = middlewareFactoryCommunity(db);\n  app.get(\n    '/api/blog/read',\n    [\n      authJwt.verifyToken(true),\n      abac.middleware('blogposts', 'read', {\n        allowPublished: true,\n        allowUnauthenticated: true,\n      }),\n    ],\n    controller.read\n  );\n  app.post('/api/blog/create', [authJwt.verifyToken(), abac.middleware('blogposts', 'create'), verifyBlogpost.checkNameNotEmpty, verifyBlogpost.checkBlogpostExistOrNot], controller.create);\n  app.post('/api/blog/update', [authJwt.verifyToken(), abac.middleware('blogposts', 'edit'), verifyBlogpost.checkNameNotEmpty, verifyBlogpost.checkBlogpostExistOrNot], controller.update);\n  app.delete('/api/blog/delete/:_id', [authJwt.verifyToken(), abac.middleware('blogposts', 'delete')], controller.delete);\n});\n",
              "name": "blog.routes.js",
              "size": 1335,
              "type": "source"
            },
            {
              "path": "../../src/modules/community/routes/comments.routes.js",
              "relativePath": "modules/community/routes/comments.routes.js",
              "extension": ".js",
              "content": "import middlewareFactoryAuth from '@martyrs/src/modules/auth/controllers/middlewares/index.js';\nimport globalsabac from '@martyrs/src/modules/globals/controllers/classes/globals.abac.js';\nimport controllerFactory from '../controllers/comments.controller.js';\n// ABAC\nconst { getInstance } = globalsabac;\nexport default (function (app, db) {\n  const controller = controllerFactory(db);\n  const abac = getInstance(db);\n  const { authJwt } = middlewareFactoryAuth(db);\n  app.get(\n    '/comments/read',\n    [\n      authJwt.verifyToken(true),\n      abac.middleware('comments', 'read', {\n        allowPublished: true,\n        allowUnauthenticated: true,\n      }),\n    ],\n    controller.read\n  );\n  app.post('/comments/create', [authJwt.verifyToken(), abac.middleware('comments', 'create')], controller.create);\n  app.post('/comments/update/:url', [authJwt.verifyToken(), abac.middleware('comments', 'edit')], controller.update);\n  app.delete('/comments/delete/:url', [authJwt.verifyToken(), abac.middleware('comments', 'delete')], controller.delete);\n});\n",
              "name": "comments.routes.js",
              "size": 1049,
              "type": "source"
            },
            {
              "path": "../../src/modules/community/routes/reactions.routes.js",
              "relativePath": "modules/community/routes/reactions.routes.js",
              "extension": ".js",
              "content": "import middlewareFactoryAuth from '@martyrs/src/modules/auth/controllers/middlewares/index.js';\nimport globalsabac from '@martyrs/src/modules/globals/controllers/classes/globals.abac.js';\nimport controllerFactory from '../controllers/reactions.controller.js';\n// ABAC\nconst { getInstance } = globalsabac;\nexport default (function (app, db) {\n  const controller = controllerFactory(db);\n  const abac = getInstance(db);\n  const { authJwt } = middlewareFactoryAuth(db);\n  app.get('/api/reactions/read', [authJwt.verifyToken(true)], controller.read);\n  app.post('/api/reactions/create', [authJwt.verifyToken()], controller.create);\n  app.post('/api/reactions/update', [authJwt.verifyToken()], controller.update);\n  app.post('/api/reactions/delete', [authJwt.verifyToken()], controller.delete);\n});\n",
              "name": "reactions.routes.js",
              "size": 794,
              "type": "source"
            }
          ]
        },
        "store": {
          "_files": [
            {
              "path": "../../src/modules/community/store/blogposts.js",
              "relativePath": "modules/community/store/blogposts.js",
              "extension": ".js",
              "content": "// Vue modules\nimport { reactive, watch } from 'vue';\n// Axios\nimport $axios from '@martyrs/src/modules/globals/views/utils/axios-instance.js';\n// Globals\nimport { setError } from '@martyrs/src/modules/globals/views/store/globals.js';\n// State\nconst state = reactive({\n  all: [],\n  filter: {\n    // query\n    tags: [],\n    period: '',\n    // pagination\n  },\n  pagination: {\n    page: 1,\n    perPage: 18,\n  },\n  // Sort\n  sort: {\n    param: 'createdAt',\n    order: 'desc',\n    hideButton: true,\n    options: [\n      {\n        label: 'Date',\n        value: 'createdAt',\n      },\n      {\n        label: 'Popularity',\n        value: 'views',\n      },\n      {\n        label: 'Creator',\n        value: 'creator',\n      },\n    ],\n  },\n  current: null,\n});\n\nasync function read(options = {}) {\n  options.params = options.params || {};\n  options.params.skip = options.skip || 0;\n  options.params.limit = options.limit || 9;\n  options.params.tags = options.tags || [];\n  // Period\n  if (options.period) {\n    options.params.period = options.period;\n  }\n  // Handle fetching a specific post by _id\n  if (options.url) {\n    options.params = { url: options.url };\n  }\n  // Handle fetching posts by category\n  if (options.category) {\n    options.params.category = options.category;\n  }\n  // Owner\n  if (options.owner) {\n    options.params.owner = options.owner;\n  }\n  // Following\n  if (options.following) {\n    options.params.following = options.following;\n  }\n  // Creator\n  if (options.creator) {\n    options.params.creator = options.creator;\n  }\n  // Status\n  if (options.status) {\n    options.params.status = options.status;\n  }\n  // User\n  if (options.user) {\n    options.params.user = options.user;\n  }\n  // Sort\n  if (options.sortParam) {\n    options.params.sortParam = options.sortParam;\n  }\n  if (options.sortOrder) {\n    options.params.sortOrder = options.sortOrder;\n  }\n  // Handle pagination\n  options.params.skip = options.skip || 0;\n  options.params.limit = options.limit || 10;\n\n  try {\n    console.log('params is', options.params);\n    const response = await $axios.get('/api/blog/read', { params: options.params });\n\n    if (options.url) {\n      if (response.data && response.data.length > 0) {\n        state.current = response.data[0];\n      } else {\n        state.current = null;\n      }\n    } else {\n      state.all = response.data;\n    }\n\n    return Promise.resolve(response.data);\n  } catch (err) {\n    setError(err);\n    return Promise.reject(err);\n  }\n}\nasync function create(blogpost) {\n  return $axios.post('/api/blog/create', blogpost).then(\n    response => {\n      set(response.data, 'current');\n      return Promise.resolve(response.data);\n    },\n    error => {\n      setError(error);\n      return Promise.reject(error);\n    }\n  );\n}\n\nasync function update(blogpost) {\n  return $axios.post('/api/blog/update', blogpost).then(\n    response => {\n      set(response.data, 'current');\n      return Promise.resolve(response.data);\n    },\n    error => {\n      setError(error);\n      return Promise.reject(error);\n    }\n  );\n}\n\nasync function remove(_id) {\n  return await $axios.delete(`/api/blog/delete/${_id}`).then(\n    response => {\n      const index = state.all.findIndex(p => p._id === _id);\n      if (index !== -1) {\n        state.all.splice(index, 1);\n      }\n      return Promise.resolve(response.data);\n    },\n    error => {\n      setError(error);\n      return Promise.reject(error);\n    }\n  );\n}\n\nfunction set(blogpost, property) {\n  state[property] = blogpost;\n}\n\nfunction clean() {\n  state.current = {\n    _id: '',\n    url: '',\n    status: '',\n    name: '',\n    tags: [],\n    author: '',\n    owner: '',\n    date: '',\n    views: 0,\n    content: [],\n  };\n}\n\n// Actions\nfunction blockAdd(block) {\n  const blockNew = {\n    order: state.project.content.length + 1,\n    type: block.type,\n    data: block.data,\n    class: block.class,\n    content: block.content,\n  };\n  state.project.content.push(blockNew);\n}\n\nconst history = [];\nhistory.push(state); // push initial state\n\nwatch(state, (newState, oldState) => {\n  history.push(newState);\n});\n\nexport { blockAdd, clean, create, read, remove, set, state, update };\n",
              "name": "blogposts.js",
              "size": 4130,
              "type": "source"
            },
            {
              "path": "../../src/modules/community/store/reactions.js",
              "relativePath": "modules/community/store/reactions.js",
              "extension": ".js",
              "content": "// Vue modules\nimport { reactive, watch } from 'vue';\n\n// Globals\nimport { setError } from '@martyrs/src/modules/globals/views/store/globals.js';\n\n// Setup Axios\nimport $axios from '@martyrs/src/modules/globals/views/utils/axios-instance.js';\n\n// State\nconst state = reactive({\n  reactions: [],\n  error: null,\n});\n\n// Methods\nconst actions = {\n  async read(options) {\n    try {\n      // Initialize an empty params object\n      const params = {};\n\n      // Add properties to params if they exist in options\n      if (options.user) {\n        params.user = options.user;\n      }\n      if (options.type) {\n        params.type = options.type;\n      }\n      if (options.target) {\n        params.target = options.target;\n      }\n      if (options.targetString) {\n        params.targetString = options.targetString;\n      }\n\n      // Sending the request with the params object\n      const response = await $axios.get(`/api/reactions/read`, { params });\n      state.error = null;\n      state.reactions = response.data;\n      return Promise.resolve(response.data);\n    } catch (error) {\n      setError(error);\n      return Promise.reject(error);\n    }\n  },\n  async create(reaction) {\n    try {\n      const response = await $axios.post(`/api/reactions/create`, reaction);\n      state.error = null;\n      return Promise.resolve(response.data);\n    } catch (error) {\n      console.log(error);\n      setError(error);\n      return Promise.reject(error);\n    }\n  },\n  async update(reaction) {\n    try {\n      const response = await $axios.post(`/api/reactions/update`, reaction);\n      state.error = null;\n      return Promise.resolve(response.data);\n    } catch (error) {\n      setError(error);\n      return Promise.reject(error);\n    }\n  },\n  async delete(reaction) {\n    try {\n      const response = await $axios.post(`/api/reactions/delete`, reaction);\n      state.error = null;\n      return Promise.resolve(response.data);\n    } catch (error) {\n      setError(error);\n      return Promise.reject(error);\n    }\n  },\n};\n\nconst mutations = {\n  handleReactionUpdate(data, reaction, hasReaction) {\n    let entity;\n\n    if (Array.isArray(data)) {\n      entity = data.find(o => o._id === reaction.target);\n    } else if (typeof data === 'object' && data._id === reaction.target) {\n      entity = data;\n    }\n\n    if (entity) {\n      entity.hasReaction = hasReaction;\n\n      if (hasReaction) {\n        entity.reactions.push(reaction);\n        entity.numberOfReactions += 1;\n      } else {\n        const index = entity.reactions.findIndex(t => t._id === reaction._id);\n        if (index !== -1) {\n          entity.reactions.splice(index, 1);\n          entity.numberOfReactions -= 1;\n        }\n      }\n    }\n  },\n};\n\n// History\nconst history = [];\nhistory.push(state);\n\n// Watch\nwatch(state, newState => {\n  history.push(newState);\n});\n\n// Module Export\nexport { actions, mutations, state };\n",
              "name": "reactions.js",
              "size": 2871,
              "type": "source"
            }
          ]
        },
        "components": {
          "blocks": {
            "_files": [
              {
                "path": "../../src/modules/community/components/blocks/Activity.vue",
                "relativePath": "modules/community/components/blocks/Activity.vue",
                "extension": ".vue",
                "content": "<template>\n  <section class=\"w-100 cols-4 t-left flex-nowrap flex\">\n    <div v-if=\"likes\" class=\"w-100 br-2px br-solid br-white-transp-10 radius-small pd-small flex-v-center flex-nowrap flex\">\n      <p class=\"h4 i-medium mn-r-small\">👍</p>\n      <span class=\"t-semi uppercase\">{{ likes }}<br>likes</span>\n    </div>\n    <div v-if=\"comments\" class=\"w-100 br-2px br-solid br-white-transp-10 radius-small pd-small flex-v-center flex-nowrap flex\">\n      <p class=\"h4 i-medium mn-r-small\">💬</p>\n      <span class=\"t-semi uppercase\">{{ comments }}<br>comments</span>\n    </div>\n    <div v-if=\"subscriptions\" class=\"w-100 br-2px br-solid br-white-transp-10 radius-small pd-small flex-v-center flex-nowrap flex\">\n       <p class=\"h4 i-medium mn-r-small\">👍</p>\n      <span class=\"t-semi uppercase\">{{ subscriptions }}<br>subscriptions</span>\n    </div>\n  </section>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue';\n\nconst props = defineProps({\n  likes: Number,\n  comments: Number,\n  subscriptions: Number\n});\n</script>\n",
                "name": "Activity.vue",
                "size": 1028,
                "type": "source"
              },
              {
                "path": "../../src/modules/community/components/blocks/CardBlogpost.vue",
                "relativePath": "modules/community/components/blocks/CardBlogpost.vue",
                "extension": ".vue",
                "content": "<template>\n\t<article \n\t\tclass=\"pos-relative flex-column flex o-hidden\"\n\t>\n\t\t<CardHeader \n\t    :class=\"{\n\t    \t'mn-b-medium pd-medium': type !== 'short',\n\t    \t'flex-child-order-last flex-child mn-l-small': type === 'short',\n\t    }\"\n\t    :entity=\"blogpost\"\n\t    :entityType=\"'blogpost'\"\n\t    :user=\"user\"\n\t    :owner=\"blogpost.owner\" \n    \t:creator=\"blogpost.creator\"\n    \t:date=\"blogpost.createdAt\"\n    \t:actions=\"user && user === blogpost.creator.target._id ? [\n        { to: { name: 'Edit BlogPost', params: {url: blogpost.url } }, label: 'Edit' }\n       ]: null\"\n\t\t/>\n\n\t\n\t\t<section\n\t\t\tclass=\"pd-t-zero pd-b-zero pd-medium\"\n\t\t>\n\t\t\t\n\t\t\t<div v-if=\"type !== 'blogpostPage'\" class=\"cursor-pointer mn-b-medium flex-nowrap flex w-100\">\n\n\t\t\t\t<Text \n\t\t\t\t\tv-if=\"!hideTitle\"\n\t\t\t\t \t:text=\"blogpost.name || ''\" \n\t\t\t\t \t:maxLen=\"80\" \n\t\t\t\t \tclass=\"h3 d-block\"\n\t\t\t\t \t@click=\"router.push({\n\t\t\t\t\t\tname: 'BlogPost', \n\t\t\t\t\t\tparams: { \n\t\t\t\t\t\t\turl: blogpost.url \n\t\t\t\t\t\t}\n\t\t\t\t\t})\"\n\t\t\t\t/>\n\n\t\t\t\t<div \n\t\t\t\t\tv-if=\"blogpost.status === 'draft'\" \n\t\t\t\t\tclass=\"pd-micro t-white uppercase t-semi p-small flex-center flex pd-r-small pd-l-small mn-l-thin w-min bg-second radius-extra\"\n\t\t\t\t>\n\t\t\t\t\t{{blogpost.status}}\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</div>\n\t\t\t\n\t\t\t<p \n\t\t\t\tv-if=\"firstText && firstText.content && type !== 'blogpostPage' && !hideDescription\" \n\t\t\t\tclass='mn-b-medium t-transp p-big'\n\t\t\t>\n\t\t\t\t{{firstText.content.slice(0,120)}}...\n\t\t\t</p>\n\n\t\t\t<h3 \n\t\t\t\tv-if=\"type === 'blogpostPage' && !hideTitle\" \n\t\t\t\tclass=\"mn-b-medium h2\"\n\t\t\t>\n\t\t\t\t{{blogpost.name}}\n\t\t\t</h3>\n\n\t\t\t<slot></slot>\n\n\t\t\t<!-- <Chips \n      \tv-if=\"type !== 'short' && blogpost.tags?.length > 0\" \n      \t:chips=\"blogpost.tags\"\n     \t/> -->\n\n\t\t</section>\n\n\t\t\t<!-- <Image :prop=\"{content:firstImage.content}\" class=\"h-100\"/> -->\n\n\t\t<template\n\t\t\tv-if=\"firstImage && firstImage.content && type !== 'blogpostPage'\"\n\t\t>\n\t\t\t<img loading=\"lazy\" \n\t\t\t\t:src=\"(FILE_SERVER_URL || '') + firstImage.content\" \n\t\t\t\talt=\"Blog post image\" \n\t\t\t\tclass=\"mn-b-medium object-fit-cover w-100 h-min-10r  h-100\"\n\t\t\t/>\n\t\t</template>\n\n\t\t<template\n\t\t\tv-if=\"!firstImage?.content && firstVideo && firstVideo.content && type !== 'blogpostPage'\"\n\t\t>\n\t\t\t<!-- <div class=\"flex-center flex\"> -->\n\t      <video controls class=\"mn-b-medium object-fit-fit bg-black w-100 h-max-20r\">\n\t        <source :src=\"firstVideo.content\" type=\"video/mp4\">\n\t        Your browser does not support the video tag.\n\t      </video>\n\t    <!-- </div> -->\n\t\t</template>\n\n\t\t\n\t\t<FooterBlogpost \n\t\t\tclass=\"pd-t-zero pd-medium\" \n\t\t\t:blogpost=\"blogpost\" :user=\"user\"\n\t\t/>\n\t\n\t</article>\n\n</template>\n\n\n<script setup=\"props\">\n\timport CardHeader  from '@martyrs/src/modules/globals/views/components/blocks/CardHeader.vue'\n\timport FooterBlogpost  from '@martyrs/src/modules/community/components/blocks/FooterBlogpost.vue'\t\n\n\timport Image  from '@martyrs/src/modules/constructor/components/elements/Image.vue';\n\n  import Text     from '@martyrs/src/components/Text/Text.vue'\n\timport Chips  from '@martyrs/src/components/Chips/Chips.vue'\n\n\timport IconEdit from '@martyrs/src/modules/icons/navigation/IconEdit.vue'\n\n\timport { computed } from 'vue'\n\n\timport { useRouter } from 'vue-router'\n\n\tconst router = useRouter()\n\n\tconst props = defineProps({\n\t\tblogpost: {\n\t\t\ttype: Object,\n\t\t},\n\t\tuser: {\n\t\t\ttype: String,\n\t\t},\n\t\ttype: {\n\t\t\ttype: String,\n\t\t},\n\t\thideDescription: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\t\thideTitle: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t}\n\t})\n\n  const firstImage = computed(() => {\n\t  return props.blogpost.content.find(block => block.type === 'ImageUpload');\n\t});\n\n\tconst firstVideo = computed(() => {\n\t  return props.blogpost.content.find(block => block.type === 'Video');\n\t});\n\n\tconst firstText = computed(() => {\n\t  return props.blogpost.content.find(block => \n\t    block.type === 'Textarea' && block.class !== 'h2'\n\t  );\n\t});\n\n</script>\n\n<style lang=\"scss\">\n</style>\n\n\n",
                "name": "CardBlogpost.vue",
                "size": 3853,
                "type": "source"
              },
              {
                "path": "../../src/modules/community/components/blocks/FooterBlogpost.vue",
                "relativePath": "modules/community/components/blocks/FooterBlogpost.vue",
                "extension": ".vue",
                "content": "<template>\n  <footer class=\"t-semi br-top-dark flex-nowrap flex-nojustify flex\">\n    <router-link :to=\"{\n      name: 'BlogPost', \n      params: { \n        url: blogpost.url \n      }\n    }\" \n    class=\"font-second cursor-pointer hover-bg-light pd-l-thin pd-r-thin radius-big\">\n      👁️ {{blogpost.views}}\n    </router-link>\n    \n    <div class=\"hover-bg-light pd-l-thin pd-r-thin radius-big cursor-pointer\">\n      <div class=\"cursor-pointer\" @click=\"addReaction('like')\" v-if=\"!isReacted\">\n        👍 {{reactionsCount }}\n      </div>\n      <div class=\"cursor-pointer\" @click=\"deleteReaction('like')\" v-if=\"isReacted\">\n        👍 {{reactionsCount }}\n      </div>\n    </div>\n    <router-link :to=\"{\n      name: 'BlogPost', \n      hash: '#comments',\n      params: { \n        url: blogpost.url \n      }\n    }\" \n    class=\"font-second cursor-pointer hover-bg-light pd-l-thin pd-r-thin radius-big\">\n      💬 {{ blogpost.numberOfComments }}\n    </router-link>\n  </footer>\n</template>\n\n<script setup=\"props\">\nimport { computed, ref } from 'vue';\nimport { useRouter } from 'vue-router';\n\nimport * as reactions from '@martyrs/src/modules/community/store/reactions.js';\n\nconst props = defineProps(['blogpost', 'owner', 'user']);\n\nconst reactionsCount = ref(props.blogpost.numberOfReactions);\nconst isReacted = ref(props.blogpost.isReacted);\nconst reactionId = ref(props.blogpost.reactionId);\n\nasync function addReaction(type) {\n  if (!props.user) {\n    alert('Please login to add a reaction');\n    return;\n  }\n\n  try {\n    const reaction = {\n      target: props.blogpost._id,\n      type: 'blogpost',\n      user: props.user,\n      class: 'like'\n    };\n    const res = await reactions.actions.create(reaction);\n\n    if (res.reaction.class === 'like') {\n      reactionsCount.value += 1;\n      isReacted.value = true;\n      reactionId.value = res.reaction._id;\n    }\n  } catch (err) {\n    console.error(err);\n    alert('Error adding reaction. Please try again later.');\n  }\n}\n\nasync function deleteReaction(type) {\n  if (!props.user) {\n    alert('Please login to add a reaction');\n    return;\n  }\n\n  try {\n    const reaction = { _id: reactionId.value };\n\n    await reactions.actions.delete(reaction);\n\n    reactionsCount.value -= 1;\n    isReacted.value = false;\n    reactionId.value = null;\n  } catch (err) {\n    alert('Error adding reaction. Please try again later.');\n  }\n}\n</script>\n\n<style lang=\"scss\">\n</style>\n",
                "name": "FooterBlogpost.vue",
                "size": 2401,
                "type": "source"
              }
            ]
          },
          "layouts": {
            "_files": [
              {
                "path": "../../src/modules/community/components/layouts/Community.vue",
                "relativePath": "modules/community/components/layouts/Community.vue",
                "extension": ".vue",
                "content": "<template>\n\t<div class=\"bg-white\">\n\t\t<section class=\"w-100 h-100 o-hidden flex-nowrap flex gap-thin mobile:pd-zero pd-thin pos-relative\">\n\n\t\t\t<div style=\"flex: 1 1 auto\" class=\"w-100 o-y-scroll h-100 pos-relative\">\n\t\t\t\t<header v-if=\"!route.params.url && route.name !== 'Create BlogPost'\" class=\"bg-light pd-medium radius-medium mobile:radius-zero scroll-hide o-y-visible t-black pos-relative  mn-b-thin flex-v-center t-left flex-nowrap flex\">\n\t\t    \t<h2 class=\"pos-relative t-nowrap flex-v-center flex-nowrap flex\">\n\t\t    \t\t<span class=\"mn-r-thin\">Posts for </span>\n\n\t\t    \t\t<Select \n\t\t\t        :options=\"['today','week','month','year','all time']\"\n\t\t\t        v-model:select=\"blog.state.filter.period\" \n\t\t\t        placeholder=\"all time\"\n\t\t\t        class=\"\n\t\t\t        \tt-semi\n\t\t\t        \tpos-relative \n\t\t\t        \tw-max\n\t\t\t        \tbg-main t-black\n\t\t\t        \tpd-thin\n\t\t\t        \tradius-medium\n\t\t\t          h2\n\t\t\t         \tt-center\n\t\t\t         \tflex-column \n\t\t\t         \tflex \n\t\t\t         \tgap-medium \n\t\t\t        \"\n\t\t\t      />\n\t\t    \t</h2>\n\t\t\t\t</header>\n\n\t\t\t\t<div  v-if=\"!route.params.url && route.name !=='Create BlogPost'\"  class=\"w-100 pos-relative\">\n\t\t\t\t\t<ul class=\"align-self-start pos-sticky pos-t-0 w-100 bg-light radius-medium mobile:radius-zero mn-b-thin pd-medium p-medium gap-thin flex-row flex-nowrap flex z-index-2 o-scroll t-nowrap scroll-hide\">\n\t\t\t\t\t\t<li  \t\n\t\t\t\t\t\t\t:class=\"{'t-black bg-white': route.params.category === 'featured' }\" \t\t\t\t\t\n\t\t\t\t\t\t\t@click=\"() => { blog.state.sort.param = 'createdAt'; router.push({name: 'Blog', params: { category: 'featured' } })}\" \n\t\t\t\t\t\t\tclass=\"cursor-pointer flex-v-center flex t-medium  pd-thin radius-small\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<IconFeatured class=\"i-medium mn-r-thin t-transp\"/>\n\t\t\t\t\t\t\tFeatured\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li  \t\n\t\t\t\t\t\t\t:class=\"{'t-black bg-white': route.params.category === 'popular' }\"\t\t\t\t\t \t\t\t\t\n\t\t\t\t\t\t\t@click=\"() => { blog.state.sort.param = 'views'; router.push({name: 'Blog', params: { category: 'popular' } }) }\" \n\t\t\t\t\t\t\tclass=\"cursor-pointer t-medium flex-v-center flex  pd-thin radius-small\"\n\t\t\t\t\t\t>\t\n\t\t\t\t\t\t\t<IconPopular class=\"i-medium mn-r-thin t-transp\"/>\n\t\t\t\t\t\t\tPopular\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li  \t\n\t\t\t\t\t\t\t:class=\"{'t-black bg-white': route.params.category === 'new'}\" \t\t\t\t\t\n\t\t\t\t\t\t\t@click=\"() => { blog.state.sort.param = 'createdAt'; router.push({name: 'Blog', params: { category: 'new' } })}\" \n\t\t\t\t\t\t\tclass=\"cursor-pointer t-medium flex-v-center flex  pd-thin radius-small\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<IconRecent class=\"i-medium mn-r-thin t-transp\"/>\n\t\t\t\t\t\t\tRecent\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li \t\n\t\t\t\t\t\t\tv-if=\"auth.state.user._id\"\n\t\t\t\t\t\t\t:class=\"{'t-black bg-white': route.params.category === 'following'}\" \t\t\n\t\t\t\t\t\t\t@click=\"() => { blog.state.sort.param = 'createdAt'; router.push({name: 'Blog', params: { category: 'following' } })}\" \n\t\t\t\t\t\t\tclass=\"cursor-pointer t-medium flex-v-center flex pd-thin radius-small\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<IconFollowing class=\"i-medium mn-r-thin t-transp\"/>\n\t\t\t\t\t\t\tFollowing\n\t\t\t\t\t\t</li>\n\n\t\t\t\t\t\t<router-link \n\t\t\t\t\t\t\tv-if=\"auth.state.user._id\"\n\t\t\t\t\t\t\t:to=\"{\n\t\t\t\t\t\t\t\tname: 'Create BlogPost'\n\t\t\t\t\t\t\t}\" \n\t\t\t\t\t\t\tclass=\"button t-medium bg-main w-max mn-l-auto\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tCreate Post\n\t\t\t\t\t\t</router-link>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\n\n\t\t\t\t<router-view v-slot=\"{ Component, route }\">\n\t\t\t\t\t<transition name=\"scaleIn\" mode=\"out-in\">\n\t\t\t\t\t\t<component ref=\"page\" :key=\"route.query\" :is=\"Component\" />\n\t\t\t\t\t</transition>\n\t\t\t\t</router-view>\n\t\t\t</div>\n\n\t\t\t<div style=\"flex: 1 1 auto\" class=\"desktop-only scroll-hide o-y-scroll h-100  w-40 h-100 pos-relative \">\n\t\t\t\t<div class=\"radius-medium bg-light mn-b-thin pd-small\">\n\t\t\t\t\t<div class=\"gap-thin flex-nowrap flex\">\n\t\t\t\t\t\t<p class=\"t-medium mn-b-small\">Latest Comments</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"flex flex-column gap-thin\">\n\t\t\t\t\t\t<Comment\n\t\t        \tv-for=\"comment in comments.slice(0,5)\"\n\t\t\t        :key=\"comment._id\"\n\t\t\t        :comment=\"comment\"\n\t\t\t        :target=\"target\"\n\t\t\t        :type=\"type\"\n\t\t\t        :owner=\"owner\"\n\t\t\t        @reply=\"handleReply\"\n\t\t\t        @load-more=\"loadMoreChildren\"\n\t\t\t        class=\"comment bg-white pd-small radius-regular\"\n\t\t\t      />\n\t\t\t    </div>\n\t\t    </div>\n\n\t      <div class=\"radius-medium bg-light pd-small\">\n\t\t\t\t\t<div class=\"gap-thin flex-nowrap flex  mn-b-small\">\n\t\t\t\t\t\t<p class=\"text-box-trim-end t-medium\">Popular Communities</p>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<router-link \n\t\t\t\t\t\t\tv-if=\"auth.state.user._id\"\n\t\t\t\t\t\t\t:to=\"{\n\t\t\t\t\t\t\t\tname: 'Create Organization'\n\t\t\t\t\t\t\t}\"\n\t\t\t\t\t\t\tclass=\"t-medium cursor-pointer hover-scale-1 radius-extra flex-center flex i-medium bg-main\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t+\n\t\t\t\t\t\t</router-link>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<transition name=\"slide-fade\">\n\t\t\t\t\t\t<Feed\n\t\t\t\t\t\t\t:showLoadMore=\"false\"\n\t\t\t\t\t\t\t:LoadMore=\"false\"\n\t\t\t\t      :states=\"{\n\t\t\t\t        empty: {\n\t\t\t\t          title: 'No Organization Found',\n\t\t\t\t          description: 'Currently, there are no organization available.'\n\t\t\t\t        }\n\t\t\t\t      }\"\n\t\t\t\t      :store=\"{\n\t\t\t\t        read: (options) => organizations.actions.read(options),\n\t\t\t\t        state: organizations.state\n\t\t\t\t      }\"\n\t\t\t\t      :options=\"{\n\t\t\t\t        \tuser: auth.state.user._id,\n\t\t\t\t\t\t\t\t\tsort: 'numberOfMemberships',\n\t\t\t\t\t\t\t\t\tcontain: ['blogposts'],\n\t\t\t\t\t\t\t\t\tlookup: ['blogposts'],\n\t\t\t\t\t\t\t\t\tlimit: 10\n\t\t\t\t      }\"\n\t\t\t\t      v-slot=\"{ \n\t\t\t\t        items \n\t\t\t\t      }\"\n\t\t\t\t      class=\"flex flex-column gap-thin\"\n\t\t\t\t    >\n\t\t\t\t    \t<CardOrganization \n\t\t\t    \t\t\tv-for=\"organization in items\"\n\t\t\t        \t:key=\"organization._id\" \n\t\t\t\t      \t:organization=\"organization\"\n\t\t\t\t      \t:user=\"auth.state.user\"\n\t\t\t\t      \t:showProducts=\"false\"\n\t\t\t\t      \t:showRating=\"false\"\n\t\t\t\t      \t:showFeatured=\"false\"\n\t\t\t\t      \t:showFollowers=\"false\"\n\t\t\t\t\t\t\t\t@updateMembership=\"handleMembershipUpdate\"\n\t\t\t\t\t\t\t\tclass=\"pd-small w-100 pd-0 bg-white radius-regular o-hidden\"\n\t\t\t\t\t    />\n\t\t\t\t    </Feed>\n\t\t\t\t\t</transition>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t</section>\n\t</div>\n</template>\n\n<script setup=\"props\">\n\timport { computed,onMounted, toRefs,ref } from 'vue'\n  import { useRoute,useRouter } from 'vue-router'\n\n\timport Select         from '@martyrs/src/components/Select/Select.vue'\n\timport Feed from '@martyrs/src/components/Feed/Feed.vue'\n\timport CardOrganization from '@martyrs/src/modules/organizations/components/blocks/CardOrganization.vue'\n\n\timport IconFeatured from '@martyrs/src/modules/icons/entities/IconFeatured.vue'\n\timport IconPopular from '@martyrs/src/modules/icons/entities/IconPopular.vue'\n\timport IconRecent from '@martyrs/src/modules/icons/entities/IconRecent.vue'\n\timport IconFollowing from '@martyrs/src/modules/icons/entities/IconFollowing.vue'\n\n\nimport axios from 'axios';\n\n\nimport Comment from '../sections/Comment.vue';\n\n\nconst $axios = axios.create({ baseURL: process.env.API_URL });\nconst comments = ref([]);\nconst commentContent = ref('');\n\nconst fetchComments = async () => {\n  try {\n    const response = await $axios.get('/comments/read', {\n      params: {\n        maxDepth: 1,\n        format: 'plain'\n      }\n    });\n    comments.value = response.data;\n  } catch (error) {\n    console.error('Error fetching comments:', error);\n  }\n};\n\nfetchComments();\n\n// Import state\nimport * as blog from '@martyrs/src/modules/community/store/blogposts.js';\nimport * as auth from '@martyrs/src/modules/auth/views/store/auth.js'\nimport * as organizations from '@martyrs/src/modules/organizations/store/organizations.js'\nimport * as memberships from '@martyrs/src/modules/organizations/store/memberships.js'\n\n// State\nconst route = useRoute();\nconst router = useRouter();\n\nif (route.params.category === 'popular') blog.state.sort.param = 'views'; \nif (route.params.category === 'new') blog.state.sort.param = 'createdAt'; \n\n\nconst handleMembershipUpdate = ({ membership, status, target }, statusName, statusNumber) => {\n  memberships.mutations.handleMembershipUpdate(organizations.state.current, membership, status, target, statusName, statusNumber)\n};\n\n</script>\n\n<style lang=\"scss\">\n\n</style>\n",
                "name": "Community.vue",
                "size": 7861,
                "type": "source"
              }
            ]
          },
          "pages": {
            "_files": [
              {
                "path": "../../src/modules/community/components/pages/Blog.vue",
                "relativePath": "modules/community/components/pages/Blog.vue",
                "extension": ".vue",
                "content": "<template>\n  <section>\n    <Feed\n      v-model:sort=\"blog.state.sort\"\n      :showLoadMore=\"false\"\n      :states=\"{\n        empty: {\n          title: 'No Blog Posts Found',\n          description: 'Currently, there are no posts available in this blog. Please check back later.'\n        },\n      }\"\n      :store=\"{\n        read: (options) => blog.read(options)\n      }\"\n      :options=\"{\n        limit: 15,\n        category: route.params.category,\n        period: route.query.period,\n        status: 'published',\n        user: auth.state.user._id,\n        following: route.params.category === 'following' ? auth.state.user._id : null,\n      }\"\n      v-slot=\"{ \n        items \n      }\"\n      class=\"rows-1 gap-thin\"\n    >\n      <CardBlogpost \n        v-for=\"item in items\" \n        :key=\"item._id\" \n        :blogpost=\"item\" \n        :user=\"auth.state.user._id\" \n        class=\"h-max-40r bg-light mn-b-thin radius-medium mobile:radius-zero\"\n      />\n    </Feed>\n  </section>\n</template>\n\n\n<script setup=\"props\">\n  import { ref, computed, onMounted, watch } from 'vue';\n  import { useRoute, useRouter } from 'vue-router';\n\n  import Breadcrumbs from '@martyrs/src/components/Breadcrumbs/Breadcrumbs.vue';\n  import Feed from '@martyrs/src/components/Feed/Feed.vue'\n\n  import CardBlogpost from '@martyrs/src/modules/community/components/blocks/CardBlogpost.vue';\n\n  // Import state\n  import * as blog from '@martyrs/src/modules/community/store/blogposts.js';\n  import * as auth  from '@martyrs/src/modules/auth/views/store/auth.js'\n\n  // State\n  const route = useRoute();\n  const router = useRouter();\n\n  // if (!route.params.category) {\n  //   route.params.category = 'popular'\n  // }\n \n  onMounted(() => {\n\n    if (route.query) {\n      const query = route.query;\n\n      const newFilterValue = {\n        tags: query.tags ? query.tags.split(',') : [],\n        period: query.period ? query.period : null,\n      };\n\n      // проверяем наличие категории в route.params и добавляем ее в фильтр\n      // if (route.params.category) {\n      //   newFilterValue.category = route.params.category;\n      // }\n\n      blog.state.filter = newFilterValue;\n    }\n    \n  });\n\n  watch(() => blog.state.filter, (newFilterValue, oldFilterValue) => {\n    // Переводим фильтр в формат query\n    const query = { ...route.query };\n\n    // Удаляем старые значения фильтра из query\n    Object.keys(oldFilterValue).forEach(key => {\n      if (query[key]) {\n        delete query[key];\n      }\n    });\n\n    // Добавляем новые значения фильтра в query\n    const newQueryValues = Object.fromEntries(\n      Object.entries(newFilterValue)\n        .filter(([key, value]) => (Array.isArray(value) && value.length > 0) || (typeof value === 'string' && value))\n        .map(([key, value]) => [key, Array.isArray(value) ? value.join(',') : value])\n    );\n    Object.assign(query, newQueryValues);\n\n    // Обновляем маршрут с новым query\n    router.replace({ query });\n  }, { deep: true })\n</script>\n\n<style lang=\"scss\">\n\n</style>\n",
                "name": "Blog.vue",
                "size": 2983,
                "type": "source"
              },
              {
                "path": "../../src/modules/community/components/pages/BlogPost.vue",
                "relativePath": "modules/community/components/pages/BlogPost.vue",
                "extension": ".vue",
                "content": "<template>\n  <section>\n    <TransitionGroup tag=\"ul\" name=\"fade\" class=\"o-hidden bg-light radius-medium\">\n      <SkeletonBlogpost\n        v-if=\"isLoading\"\n        v-for=\"i in 3\" :key=\"i\"\n        class=\"\"\n      />\n    </TransitionGroup>\n    <transition \n      name=\"fade\"\n    >\n      <EmptyState \n        v-if=\"!isLoading && !blogpost\"\n        title=\"No Blogpost Found\"\n        description=\"Currently, there are no blogposts available. Please check back later.\"\n        class=\"pd-medium mn-b-thin bg-light radius-big\"\n      />\n    </transition>\n\n    <TransitionGroup tag=\"div\" name=\"fade\" class=\"container\">\n    \t  <!-- <button @click=\"share\" >\n\t\t\t    Поделиться\n\t\t\t  </button>\n\t\t\t   -->\n      \t<CardBlogpost \n          v-if=\"!isLoading && blogpost\"\n          @click=\"$router.push({name: 'Blogpost', params: {url: blogpost.url}})\" \n          :blogpost=\"blogpost\" \n          :user=\"auth.state.user._id\"\n          :type=\"'blogpostPage'\"\n          :hideTitle=\"true\"\n          class=\"mn-b-regular  bg-light radius-medium\"\n        >\n\n  \t      <Viewer\n  \t        v-if=\"blogpost && blogpost.content\"\n  \t        :content=\"blogpost.content\"\n  \t      />\n\n  \t\t\t\t<a v-if=\"blogpost.source\" :href=\"blogpost.source\" target=\"_blank\" class=\"mn-b-semi d-block w-max radius-big pd-thin bg-black t-white\">\n  \t\t\t\t\tCheck Source 🔗\n  \t\t\t\t</a>\n  \t\t\t\n      </CardBlogpost>\n\n     \t<!-- <h3 class=\"mn-b-small\">Recommended Communities</h3>\n  \t\t<Publics \n  \t\t\tclass=\"mn-b-small\"\n  \t\t/> -->\n\n      <Comments \n        v-if=\"!isLoading && blogpost\" \n        :type=\"'blogpost'\" \n        :target=\"blogpost._id\" \n        :owner=\"auth.state.user._id\"\n      />\n      \n    </TransitionGroup>  \n  \n  </section>\n</template>\n\n<script setup>\nimport { ref, onMounted, computed, onServerPrefetch, watch } from 'vue';\nimport { useHead } from '@unhead/vue'\nimport Loader from '@martyrs/src/components/Loader/Loader.vue';\nimport EmptyState from '@martyrs/src/components/EmptyState/EmptyState.vue';\nimport CardBlogpost from '@martyrs/src/modules/community/components/blocks/CardBlogpost.vue';\nimport SkeletonBlogpost from '@martyrs/src/modules/icons/skeletons/SkeletonBlogpost.vue'\nimport Publics from '@martyrs/src/modules/organizations/components/sections/Publics.vue'\nimport Comments from '@martyrs/src/modules/community/components/sections/Comments.vue';\nimport Viewer from '@martyrs/src/modules/constructor/components/sections/Viewer.vue';\nimport * as blog from '@martyrs/src/modules/community/store/blogposts.js';\nimport * as auth from '@martyrs/src/modules/auth/views/store/auth.js';\n  \nimport { useRoute } from 'vue-router';\n\nconst route = useRoute();\nconst blogpost = computed(() => blog.state.current);\nconst isLoading = ref(false);\nconst canShare = ref(false);\nconst error = ref(null);\n\nasync function fetchBlogpost() {\n  try {\n    isLoading.value = true;\n    const data = await blog.read({ user: auth.state.user?._id, url: route.params.url });\n    blogpost.value = data[0];\n    // Обновляем состояние хранилища\n    blog.state.current = data[0];\n  } catch (err) {\n    error.value = err;\n    console.error('Error fetching blogpost:', err);\n  } finally {\n    isLoading.value = false;\n  }\n}\n\nonServerPrefetch(async() => {\n\tawait fetchBlogpost()\n});\n\nonMounted(async() => {\n  if (!blogpost.value || blogpost.value.url !== route.params.url) {\n    await fetchBlogpost();\n  }\n  canShare.value = !!navigator.share;\n});\n\n\nconst share = async () => {\n  if (!canShare.value) return;\n  try {\n    await navigator.share({\n      title: blogpost.value.name,\n      text: firstText.value?.content.slice(0, 120) || 'Check out this blog post!',\n      url: window.location.href,\n    });\n    console.log('Content shared successfully');\n  } catch (error) {\n    console.error('Error sharing:', error);\n  }\n};\n\nconst firstImage = computed(() => {\n  return blogpost.value?.content?.find(block => block.type === 'ImageUpload');\n});\n\nconst firstText = computed(() => {\n  return blogpost.value?.content?.find(block => \n    block.type === 'Textarea' && block.class !== 'h2'\n  );\n});\n\nconst metadata = computed(() => ({\n  title: blogpost.value?.name,\n  description: firstText.value?.content.slice(0, 120),\n  meta: [\n    { hid: 'description', name: 'description', content: firstText.value?.content.slice(0, 120) },\n    { hid: 'og:title', property: 'og:title', content: blogpost.value?.name },\n    { hid: 'og:description', property: 'og:description', content: firstText.value?.content.slice(0, 120) },\n    { hid: 'og:image', property: 'og:image', content: firstImage.value?.content ? `${process.env.FILE_SERVER_URL}${firstImage.value.content}` : `${process.env.FILE_SERVER_URL}/favicon/cover.jpg` },\n    { hid: 'twitter:title', name: 'twitter:title', content: blogpost.value?.name },\n    { hid: 'twitter:description', name: 'twitter:description', content: firstText.value?.content.slice(0, 120) },\n    { hid: 'twitter:image', name: 'twitter:image', content: firstImage.value?.content ? `${process.env.FILE_SERVER_URL}${firstImage.value.content}` : `${process.env.FILE_SERVER_URL}/favicon/cover.jpg` },\n    { hid: 'twitter:card', name: 'twitter:card', content: 'summary_large_image' },\n  ],\n}));\n\nuseHead(metadata);\n</script>\n\n<style lang=\"scss\">\n\n</style>\n",
                "name": "BlogPost.vue",
                "size": 5185,
                "type": "source"
              },
              {
                "path": "../../src/modules/community/components/pages/CreateBlogPost.vue",
                "relativePath": "modules/community/components/pages/CreateBlogPost.vue",
                "extension": ".vue",
                "content": "<template>\n  <article \n    class=\"w-100 bg-light radius-medium pos-relative\"\n  >\n    <section  \n      style=\"min-height: 100%;\"\n      class=\"w-100 pd-big\"\n    >\n      <!-- Title -->\n      <div \n        class=\"w-full h-full\"\n      >\n        <!-- <Textarea \n          v-if=\"post\" \n          :prop=\"post\" \n          :setFocus=\"true\"\n          content=\"name\" \n          placeholder=\"Enter post title\" \n          class=\"h2\"\n        /> -->\n      </div>\n\n      <Constructor \n        v-if=\"post\" \n        :content=\"post.content\"\n        @update=\"update => post.content = update\"\n      />\n\n    </section>\n\n    <transition  name=\"scaleIn\" >\n      <section v-if=\"post\" class=\"pd-small pos-sticky pos-l-0 pos-b-0 w-100 \">\n        <div class=\"pd-thin radius-big  bg-main w-100 flex-nowrap flex\">\n          <button v-if=\"route.params.url\" @click=\"onDelete()\" class=\"mn-r-auto bg-red t-white t-black button\"><span>Delete</span></button>\n          <button @click=\"onDrafts()\" class=\"mn-l-auto bg-white t-black button\"><span>To Drafts</span></button>\n          <button @click=\"openPulicationPopup()\" class=\"mn-l-thin bg-black t-white button\"><span>Publish</span></button>\n        </div>\n      </section>\n    </transition>\n\n    <Popup  \n      @close-popup=\"closePublicationPopup\" \n      :isPopupOpen=\"isPublicationPopup\"\n      class=\"w-m-33r t-left pd-big bg-white radius-big\"\n    >\n      <h3 class=\"mn-b-small\">Final Touches</h3>\n      \n      <BlockTags\n        @tags-changed=\"newTags => post.tags = newTags\"\n        :tags=\"post.tags\"\n        class=\"mn-b-small\"\n      />\n\n      <h5 class=\"mn-b-small\">Add source:</h5>\n      <Field \n        v-model:field=\"post.source\"    \n        placeholder=\"Add full link to the source\" \n        class=\"mn-b-medium bg-light radius-medium pd-small\" \n      />\n\n      <h5 class=\"mn-b-small\">Add to public</h5>\n      <Card\n        v-if=\"selectedOrganization\"\n        :photo=\"selectedOrganization.profile?.photo\"\n        :title=\"selectedOrganization.profile?.name\"\n        @click=\"() => { \n          selectedOrganization = null\n        }\"\n        class=\"h-4r w-100 bg-light pd-thin radius-medium  mn-b-thin\"\n      />\n\n      <section v-else class=\"mn-b-thin h-25r o-x-hidden o-y-scroll bg-light radius-big pd-small \">\n        <Feed\n          :showLoadMore=\"false\" \n          :search=\"{\n            placeholder: 'Search organization...',\n            class: 'bg-white mn-b-thin'\n          }\"\n          :states=\"{\n            empty: {\n              title: 'No organizations Found',\n              description: 'Currently, there are no such organizations available.'\n            }\n          }\"\n          :store=\"{\n            read: (options) => organizations.actions.read(options),\n            state: null\n          }\"\n          :options=\"{\n            user: auth.state.user._id,\n            postable: auth.state.user._id,\n            lookup: ['memberships']\n          }\"\n          v-slot=\"{ \n            items \n          }\"\n        >\n          <Card\n            v-for=\"(organization, index) in items\" \n            v-memo=\"[organization._id, organization.profile.name]\"\n            :photo=\"organization.profile?.photo\"\n            :title=\"organization.profile?.name\"\n            @click=\"() => { \n              selectedOrganization = organization\n            }\"\n            class=\"h-4r bg-white pd-thin radius-medium w-100 mn-b-thin\"\n          />\n        </Feed>\n      </section>\n\n      <h5 v-if=\"selectedOrganization\" class=\"mn-b-thin\">Options:</h5>\n      <div v-if=\"selectedOrganization\" class=\"mn-b-medium br-grey-transp-25 br-2px br-solid pd-small radius-big\">\n        <Checkbox \n          :label=\"'Hide Author'\"\n          :radio=\"post.creator.hidden\"\n          @update:radio=\"event => post.creator.hidden = event\"\n          name=\"prices\"\n          class=\"w-100\"\n        />\n      </div>\n        \n      <Button :submit=\"onSubmit\" :callback=\"redirectTo\" class=\"w-100 bg-black t-white\">Publish</Button>\n    </Popup>\n      \n  </article>\n</template>\n\n<script setup>\nimport Textarea from '@martyrs/src/modules/constructor/components/elements/Textarea.vue';\nimport Constructor from '@martyrs/src/modules/constructor/components/sections/Constructor.vue';\n\nimport Popup from '@martyrs/src/components/Popup/Popup.vue'\nimport FieldTags from '@martyrs/src/components/FieldTags/FieldTags.vue'\nimport BlockTags from '@martyrs/src/components/FieldTags/BlockTags.vue'\nimport Checkbox from '@martyrs/src/components/Checkbox/Checkbox.vue'\nimport Field from '@martyrs/src/components/Field/Field.vue'\nimport Button from '@martyrs/src/components/Button/Button.vue';   \nimport Feed from '@martyrs/src/components/Feed/Feed.vue'\n\nimport Card from '@martyrs/src/modules/globals/views/components/blocks/Card.vue';\n\nimport { ref, onMounted, watchEffect, nextTick, computed } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { VueDraggableNext } from 'vue-draggable-next';\n// Store & Router\nimport * as blog from '@martyrs/src/modules/community/store/blogposts.js';\nimport * as auth  from '@martyrs/src/modules/auth/views/store/auth.js'\nimport * as organizations  from '@martyrs/src/modules/organizations/store/organizations.js'\n    \nimport { useGlobalMixins } from \"@martyrs/src/modules/globals/views/mixins/mixins.js\"\n\nconst { hasAccess } = useGlobalMixins()\n\nconst route = useRoute();\nconst router = useRouter();\n\nlet post = ref(null);\nlet publics = ref(null);\n\nconst selectedTags = ref([]);\nconst selectedOrganization = ref(null);\n\nonMounted(async () =>{\n  \n  if (route.params.url) {\n    const data = await blog.read({ user: auth.state.user._id, url: route.params.url });\n    \n    post.value = data.pop();\n\n    if (!post.value) {\n      router.push({name: 'notfound'})\n    }\n\n    if (post.value.owner.type === 'organization') {\n      // Если пост принадлежит организации, проверяем права на редактирование через `hasAccess`\n      const isAccess = hasAccess(post.value.owner.target._id, 'posts', 'edit', auth.state.accesses, auth.state.access.roles);\n\n      if (!isAccess) {\n        router.push({name: 'unauthorized'})\n      }\n    }\n\n     if (post.value.owner.type === 'user' && post.value.creator.target._id !== auth.state.user._id) {\n      router.push({name: 'unauthorized'})\n    }\n  } else {\n    blog.clean();\n    post.value = blog.state.current;\n  }\n\n  if (!post.value.owner) post.value.owner = {\n    target: auth.state.user._id,\n    type: 'user'\n  }\n\n  if (!post.value.creator) post.value.creator = {\n    target: auth.state.user._id,\n    type: 'user',\n    hidden: false\n  }\n\n\n  if (post.value.owner.type === 'organization') selectedOrganization.value = {\n    _id: post.value.owner.target._id,\n    name: post.value.owner.target.profile.name,\n    photo: post.value.owner.target.profile.photo\n  }\n})\n// /////////////////////////////////////////\n// Publication Form\n// /////////////////////////////////////////\nconst tag = ref('');\nconst autocompleteItems = ref([\n  { text: 'story' },\n  { text: 'news' },\n  { text: 'guide' },\n  { text: 'discussion' },\n  { text: 'photos' },\n]);\n\nconst filteredItems = computed(() => {\n  return autocompleteItems.value.filter(i => {\n    return i.text.toLowerCase().includes(tag.value.toLowerCase());\n  });\n});\n\nconst filteredSuggestedItems = computed(() => {\n    return autocompleteItems.value.filter(item => {\n      return !selectedTags.value.some(tag => tag.text === item.text);\n    });\n  })\n\nfunction addTag (tag) {\n  selectedTags.value.push(tag)\n}\n// /////////////////////////////////////////\n// Publication Popup\n// /////////////////////////////////////////\nconst isPublicationPopup = ref(false)\n\nfunction openPulicationPopup() {\n  isPublicationPopup.value = true;\n}\nfunction closePublicationPopup() {\n  isPublicationPopup.value = false;\n}\n\nfunction onDrafts() {\n\n  if (selectedTags.value.length > 0) selectedTags.value.map(tag => (tag.text))\n\n  post.value.status = \"draft\"\n  post.value.name = post.value.content[0].content\n\n  if (route.params.url) {\n    blog.update(post.value)\n      .then(response => {\n        router.push({ name: 'BlogPost', params: { url: response.url } });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  } else {\n    blog.create(post.value)\n      .then(response => {\n        router.push({ name: 'BlogPost', params: { url: response.url } });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n}\n\nfunction onSubmit() {\n\n  if (selectedOrganization.value) post.value.owner = {\n    target: selectedOrganization.value._id,\n    type: 'organization'\n  }\n\n  if (!selectedOrganization.value) post.value.creator.hidden = false\n  if (!selectedOrganization.value) post.value.organization = post.value.creator\n\n  post.value.status = \"published\"\n  post.value.name = post.value.content[0].content\n\n  if (route.params.url) {\n    blog.update(post.value)\n      .then(response => {\n        console.log(post.value)\n        router.push({ name: 'BlogPost', params: { url: response.url } });\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  } else {\n    blog.create(post.value)\n      .then(response => {\n        router.push({ name: 'BlogPost', params: { url: response.url } });\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }\n}\n\nfunction onDelete() {\n  if (confirm('Are you sure you want to delete this post?')) {\n    blog.remove(post.value._id)\n      .then(response => {\n        router.push({ name: 'User Posts', params: { _id: post.value.creator.target._id } });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n}\n</script>\n\n\n<style lang=\"scss\">\n\n</style>\n",
                "name": "CreateBlogPost.vue",
                "size": 9529,
                "type": "source"
              }
            ]
          },
          "sections": {
            "_files": [
              {
                "path": "../../src/modules/community/components/sections/Comment.vue",
                "relativePath": "modules/community/components/sections/Comment.vue",
                "extension": ".vue",
                "content": "<template>\n  <div>\n    <CardHeader \n      class=\"mn-b-thin w-100\"\n      :entity=\"comment\"\n      :entityType=\"'comment'\"\n      :user=\"owner\"\n      :owner=\"{target: comment.owner, type: 'user'}\" \n      :creator=\"{target: comment.owner, type: 'user'}\"\n      :date=\"comment.createdAt\"\n    />\n    <div class=\"pd-t-zero\">\n      <p class=\"p-medium\">{{ comment.content }}</p>\n    </div>\n\n    <div class=\"mn-t-thin flex-v-center flex-nowrap flex gap-small\">\n      \n      <button \n        v-if=\"totalReplies > 0\" \n        @click=\"toggleChildren\"\n        class=\"t-second cursor-pointer t-medium  font-second\"\n      >\n        {{ isExpanded ? 'Hide' : totalReplies + (totalReplies === 1 ? ' reply' : ' replies') }} \n      </button>\n\n      <button \n        v-if=\"owner\" \n        class=\"font-second cursor-pointer t-transp t-medium\" \n        @click=\"showReplyForm = true\"\n      > \n        Reply\n      </button>\n    \n    </div>\n\n     <div v-if=\"showReplyForm\" class=\"mn-t-small bg-white pd-thin radius-regular\">\n        <textarea class=\"w-100\" v-model=\"replyContent\"></textarea>\n        <div class=\"mn-l-auto gap-thin flex-nowrap flex\">\n          <button class=\"bg-grey-transp-25 pd-r-regular pd-l-regular pd-thin button\" @click=\"submitReply\">Cancel</button>\n          <button class=\"bg-main pd-r-regular pd-l-regular pd-thin button\" @click=\"submitReply\">Send</button>\n        </div>\n      </div>\n\n    <div v-if=\"isExpanded && comment.children && comment.children.length\" class=\"br-solid br-l br-grey-transp-25\">\n      <Comment\n        v-for=\"childComment in comment.children\"\n        :key=\"childComment._id\"\n        :comment=\"childComment\"\n        :target=\"target\"\n        :owner=\"owner\"\n        @reply=\"handleReply\"\n        @load-more=\"handleLoadMore\"\n        class=\"mn-l-medium mn-t-small \"\n      />\n    </div>\n   \n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue';\n\nimport Comment from './Comment.vue';\n\nimport CardHeader  from '@martyrs/src/modules/globals/views/components/blocks/CardHeader.vue'\n\nconst props = defineProps({\n  comment: {\n    type: Object,\n    required: true\n  },\n  target: {\n    type: String,\n    required: true\n  },\n  owner: {\n    type: String,\n    required: true\n  }\n});\n\nconst emit = defineEmits(['reply', 'load-more']);\n\nconst showReplyForm = ref(false);\nconst replyContent = ref('');\nconst isExpanded = ref(shouldBeExpanded(props.comment.depth))\n\nfunction shouldBeExpanded(depth) {\n  return depth % 3 < 2\n}\n\nconst totalReplies = computed(() => {\n  function countReplies(comment) {\n    if (!comment.children || comment.children.length === 0) {\n      return 0\n    }\n    return comment.children.length + comment.children.reduce((sum, child) => sum + countReplies(child), 0)\n  }\n  return countReplies(props.comment)\n})\n\nconst toggleChildren = () => {\n  isExpanded.value = !isExpanded.value\n}\n\nconst submitReply = () => {\n  emit('reply', props.comment._id, replyContent.value);\n  replyContent.value = '';\n  showReplyForm.value = false;\n};\n\nconst handleReply = (parentId, content) => {\n  emit('reply', parentId, content);\n};\n\nconst loadMoreChildren = () => {\n  emit('load-more', props.comment._id, props.comment.depth + 1);\n};\n\nconst handleLoadMore = (commentId, depth) => {\n  emit('load-more', commentId, depth);\n};\n</script>",
                "name": "Comment.vue",
                "size": 3255,
                "type": "source"
              },
              {
                "path": "../../src/modules/community/components/sections/Comments.vue",
                "relativePath": "modules/community/components/sections/Comments.vue",
                "extension": ".vue",
                "content": "<template>\n  <div id=\"comments\">\n    <div class=\"mn-b-medium\">\n      <h3 class=\"mn-b-small\">{{ comments.length }} comments</h3>\n\n      <div @click=\"$router.push({name: 'Sign In'})\" class=\"pd-big cursor-pointer mn-b-small bg-black t-white flex-center flex radius-big\" v-if=\"!owner\">\n        <p class=\"t-semi uppercase\">Please log in to leave a comment.</p>\n      </div>\n\n      <div class=\"mn-b-small\" v-if=\"owner\">\n        <form @submit.prevent=\"submitComment\" class=\"bg-light radius-medium pd-medium\">\n          <textarea v-model=\"commentContent\" placeholder=\"Enter your comment\" class=\"p-big w-100\"></textarea>\n          <button type=\"submit\" class=\"mn-l-auto bg-main pd-r-regular pd-l-regular pd-thin button\">Send</button>\n        </form>\n      </div>\n    </div>\n\n     <Comment\n        v-for=\"comment in comments\"\n        :key=\"comment._id\"\n        :comment=\"comment\"\n        :target=\"target\"\n        :type=\"type\"\n        :owner=\"owner\"\n        @reply=\"handleReply\"\n        @load-more=\"loadMoreChildren\"\n        class=\"comment bg-light pd-medium mn-b-small radius-medium\"\n      />\n  </div>\n</template>\n\n<script setup=\"props\">\nimport { ref } from 'vue';\nimport axios from 'axios';\n\nimport Comment from './Comment.vue';\n\nconst props = defineProps([\n  'target', \n  'owner', \n  'type'\n])\n\nconst $axios = axios.create({ baseURL: process.env.API_URL });\nconst comments = ref([]);\nconst commentContent = ref('');\n\nconst fetchComments = async () => {\n  try {\n    const response = await $axios.get('/comments/read', {\n      params: {\n        target: props.target,\n        type: props.type,\n        user: props.owner,\n        format: 'tree',\n        maxDepth: 2\n      }\n    });\n    comments.value = response.data;\n  } catch (error) {\n    console.error('Error fetching comments:', error);\n  }\n};\n\nconst handleReply = async (parentId, content) => {\n  try {\n    const response = await $axios.post('/comments/create', {\n      content,\n      target: props.target,\n      type: props.type,\n      user: props.owner,\n      parent: parentId,\n      format: 'tree',\n      creator: {\n        target: props.owner,\n        type: 'User',\n        hidden: false\n      },\n      owner: {\n        target: props.owner,\n        type: 'User'\n      }\n    });\n\n    const newComment = response.data;\n\n    // Обновляем дерево комментариев\n    updateCommentTree(comments.value, parentId, newComment);\n  } catch (error) {\n    console.error('Error posting reply:', error);\n  }\n};\n\nconst loadMoreChildren = async (commentId, depth) => {\n  try {\n    const response = await $axios.get('/comments/read', {\n      params: {\n        target: props.target,\n        type: props.type,\n        user: props.owner,\n        parentId: commentId,\n        depth: depth,\n        maxDepth: 10\n      }\n    });\n\n    // Обновляем дерево комментариев\n    updateCommentTree(comments.value, commentId, response.data, response.data.hasMore, true);\n  } catch (error) {\n    console.error('Error loading more comments:', error);\n  }\n};\n\nconst updateCommentTree = (comments, parentId, newData, hasMore, isLoadMore = false) => {\n  for (let i = 0; i < comments.length; i++) {\n    if (comments[i]._id === parentId) {\n      if (isLoadMore) {\n        // Для загрузки дополнительных комментариев, добавляем их к существующим\n        comments[i].children = [...comments[i].children, ...newData];\n        comments[i].hasMore = hasMore;\n      } else {\n        // Для нового комментария, добавляем его в начало списка дочерних\n        comments[i].children.push(newData);\n      }\n      return true;\n    }\n    if (comments[i].children && updateCommentTree(comments[i].children, parentId, newData, hasMore, isLoadMore)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\nconst submitComment = async () => {\n  if (!commentContent.value) {\n    return;\n  }\n  try {\n    const response = await $axios.post('/comments/create', {\n      target: props.target,\n      user: props.owner,\n      type: props.type,\n      content: commentContent.value,\n      creator: {\n        target: props.owner,\n        type: 'User',\n        hidden: false\n      },\n      owner: {\n        target: props.owner,\n        type: 'User'\n      }\n    });\n\n    response.data.owner = props.owner;\n    comments.value.push(response.data);\n\n    commentContent.value = '';\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nfetchComments();\n</script>\n",
                "name": "Comments.vue",
                "size": 4328,
                "type": "source"
              },
              {
                "path": "../../src/modules/community/components/sections/HotPosts.vue",
                "relativePath": "modules/community/components/sections/HotPosts.vue",
                "extension": ".vue",
                "content": "<template>\n  <Slider\n    :store=\"{\n      read: (options) => blog.read({ \n        skip, \n        limit,\n        user: userId,\n        period,\n        category \n      })\n    }\"\n    :text=\"{\n      messages: {\n        en: {\n          title: 'No Blogposts Found',\n          description: 'Currently, there are no blogposts available.'\n        }\n      }\n    }\"\n    v-slot=\"{ \n      item\n    }\"\n    class=\"slider-hotpost flex-child-default\"\n  >\n    <CardBlogpost \n      :key=\"item._id\" \n      :blogpost=\"item\" \n      :user=\"auth.state.user._id\" \n      :hideDescription=\"true\"\n      class=\"bg-white flex flex-column radius-medium h-35r\"\n    />\n  </Slider>\n</template>\n\n<script setup>\nimport { ref, onMounted, defineProps } from 'vue'\nimport Feed from '@martyrs/src/components/Feed/Feed.vue'\nimport Slider from '@martyrs/src/components/Slider/Slider.native.vue'\nimport CardBlogpost from '@martyrs/src/modules/community/components/blocks/CardBlogpost.vue'\nimport * as blog from '@martyrs/src/modules/community/store/blogposts.js'\nimport * as auth from '@martyrs/src/modules/auth/views/store/auth.js'\n\nconst props = defineProps({\n  skip: {\n    type: Number,\n    default: 0\n  },\n  limit: {\n    type: Number,\n    default: 8\n  },\n  userId: {\n    type: String,\n    default: () => auth.state.user._id\n  },\n  period: {\n    type: String,\n  },\n  category: {\n    type: String,\n    default: 'featured'\n  }\n})\n</script>\n\n<style lang=\"scss\">\n.slider-hotpost .carousel__slide {\n  flex: 0 0 25%;\n}\n@media screen and (max-width: 1025px) {\n  .slider-hotpost .carousel__slide {\n    flex: 0 0 75%;\n  }\n}\n</style>",
                "name": "HotPosts.vue",
                "size": 1582,
                "type": "source"
              }
            ]
          }
        }
      },
      "core": {
        "classes": {
          "_files": [
            {
              "path": "../../src/modules/core/classes/event.js",
              "relativePath": "modules/core/classes/event.js",
              "extension": ".js",
              "content": "export const createEventBus = () => {\n  const events = new Map();\n\n  return {\n    emit(eventName, data) {\n      if (!eventName) throw new Error('Event name is required');\n\n      const listeners = events.get(eventName);\n      if (!listeners) return;\n\n      // Execute callbacks in try-catch to prevent chain breaking\n      listeners.forEach(cb => {\n        try {\n          cb(data);\n        } catch (error) {\n          console.error(`Error in event listener for ${eventName}:`, error);\n        }\n      });\n    },\n\n    on(eventName, callback) {\n      if (!eventName) throw new Error('Event name is required');\n      if (typeof callback !== 'function') throw new Error('Callback must be a function');\n\n      if (!events.has(eventName)) {\n        events.set(eventName, new Set());\n      }\n      events.get(eventName).add(callback);\n\n      return () => this.off(eventName, callback);\n    },\n\n    off(eventName, callback) {\n      if (!eventName) throw new Error('Event name is required');\n\n      if (callback) {\n        events.get(eventName)?.delete(callback);\n      } else {\n        events.delete(eventName);\n      }\n    },\n\n    // Clear all events and listeners\n    destroy() {\n      events.clear();\n    },\n  };\n};\n",
              "name": "event.js",
              "size": 1211,
              "type": "source"
            },
            {
              "path": "../../src/modules/core/classes/memory-tracker.js",
              "relativePath": "modules/core/classes/memory-tracker.js",
              "extension": ".js",
              "content": "// memory-tracker-simple.js\n// Простой и эффективный инструмент для отслеживания памяти в Vue 3 приложениях\n\nclass VueMemoryTracker {\n  constructor(options = {}) {\n    this.options = {\n      interval: 5000, // интервал проверки памяти в мс\n      ...options\n    };\n    \n    // Данные трекера\n    this.components = {}; // отслеживаемые компоненты по имени\n    this.memoryHistory = []; // история использования памяти\n    this.isTracking = false;\n    this.trackedInstances = new WeakSet(); // для избежания дублирования\n    \n    // Привязка методов\n    this.start = this.start.bind(this);\n    this.stop = this.stop.bind(this);\n    this.checkMemory = this.checkMemory.bind(this);\n    this.scanVueComponents = this.scanVueComponents.bind(this);\n    this.hookVueDevtools = this.hookVueDevtools.bind(this);\n    \n    // UI элементы\n    this.ui = null;\n  }\n  \n  // Запуск трекера\n  start() {\n    if (this.isTracking) return;\n    \n    this.isTracking = true;\n    this.startTime = performance.now();\n    \n    console.log('[MemoryTracker] Starting memory tracking...');\n    \n    // Инициализация UI\n    this.setupUI();\n    \n    // Подключаемся к Vue DevTools API для отслеживания компонентов\n    this.hookVueDevtools();\n    \n    // Начинаем периодическое сканирование компонентов и памяти\n    this.scanInterval = setInterval(() => {\n      this.scanVueComponents();\n      this.checkMemory();\n    }, this.options.interval);\n    \n    // Также запускаем сканирование сразу\n    this.scanVueComponents();\n    this.checkMemory();\n    \n    // Добавляем обработчик для проверки при возврате вкладки\n    document.addEventListener('visibilitychange', this.handleVisibilityChange.bind(this));\n    \n    return this;\n  }\n  \n  // Остановка трекера\n  stop() {\n    if (!this.isTracking) return;\n    \n    clearInterval(this.scanInterval);\n    document.removeEventListener('visibilitychange', this.handleVisibilityChange);\n    \n    if (this.ui) {\n      this.ui.removeButton();\n    }\n    \n    this.isTracking = false;\n    console.log('[MemoryTracker] Stopped memory tracking');\n    \n    return this;\n  }\n  \n  // Обработка видимости вкладки\n  handleVisibilityChange() {\n    if (document.visibilityState === 'visible') {\n      // Вкладка стала видимой, проверяем компоненты и память\n      this.scanVueComponents();\n      this.checkMemory();\n    }\n  }\n  \n  // Измерение использования памяти\n  checkMemory() {\n    // Получаем текущее состояние памяти\n    const memory = performance.memory || {\n      usedJSHeapSize: 0,\n      totalJSHeapSize: 0, \n      jsHeapSizeLimit: 0\n    };\n    \n    const sample = {\n      timestamp: Date.now(),\n      elapsed: performance.now() - this.startTime,\n      memory: {\n        heapUsed: memory.usedJSHeapSize,\n        heapTotal: memory.totalJSHeapSize,\n        heapLimit: memory.jsHeapSizeLimit\n      },\n      components: this.getComponentStats()\n    };\n    \n    this.memoryHistory.push(sample);\n    \n    // Ограничиваем историю 100 записями\n    if (this.memoryHistory.length > 100) {\n      this.memoryHistory.shift();\n    }\n    \n    // Обновляем UI, если он активен\n    if (this.ui && this.ui.isVisible) {\n      this.ui.updateMemoryDisplay(sample);\n    }\n    \n    // Анализируем тренд памяти на предмет утечек\n    this.checkForLeaks();\n    \n    // Выводим информацию в консоль\n    console.log(`[MemoryTracker] Memory: ${(memory.usedJSHeapSize / 1024 / 1024).toFixed(2)} MB, Components: ${Object.keys(this.components).length}`);\n  }\n  \n  // Проверка на утечки памяти\n  checkForLeaks() {\n    if (this.memoryHistory.length < 5) return;\n    \n    // Анализируем последние 5 замеров\n    const samples = this.memoryHistory.slice(-5);\n    const growthRates = [];\n    \n    for (let i = 1; i < samples.length; i++) {\n      growthRates.push(samples[i].memory.heapUsed - samples[i-1].memory.heapUsed);\n    }\n    \n    // Считаем устойчивый рост памяти\n    const consistentGrowth = growthRates.filter(rate => rate > 0).length >= 4;\n    const totalGrowth = samples[samples.length-1].memory.heapUsed - samples[0].memory.heapUsed;\n    \n    // Если память растет более чем на 10MB за 5 замеров и рост постоянный\n    if (consistentGrowth && totalGrowth > 10 * 1024 * 1024) {\n      console.warn(`[MemoryTracker] Потенциальная утечка памяти! Рост: ${(totalGrowth / 1024 / 1024).toFixed(2)} MB`);\n      \n      // Выводим компоненты, отсортированные по размеру\n      const suspectComponents = this.getComponentStats()\n        .filter(c => c.count > 0)\n        .sort((a, b) => b.size - a.size)\n        .slice(0, 10);\n      \n      console.group('Компоненты с наибольшим потреблением памяти:');\n      suspectComponents.forEach((c, i) => {\n        console.log(`${i+1}. ${c.name}: ${c.count} экз., ~${(c.size / 1024 / 1024).toFixed(2)} MB, возраст: ${c.avgAge}с`);\n      });\n      console.groupEnd();\n    }\n  }\n  \n  // Получение списка компонентов и их статистики\n  getComponentStats() {\n    const stats = [];\n    \n    for (const [name, component] of Object.entries(this.components)) {\n      // Фильтруем только активные инстансы\n      const activeInstances = component.instances.filter(inst => !inst.isDestroyed);\n      \n      if (activeInstances.length > 0) {\n        // Считаем общий и средний размер\n        const totalSize = activeInstances.reduce((sum, inst) => sum + inst.size, 0);\n        const avgAge = Math.round(\n          activeInstances.reduce((sum, inst) => sum + (Date.now() - inst.createdAt) / 1000, 0) / \n          activeInstances.length\n        );\n        \n        stats.push({\n          name,\n          count: activeInstances.length,\n          size: totalSize,\n          avgAge\n        });\n      }\n    }\n    \n    return stats.sort((a, b) => b.size - a.size);\n  }\n  \n  // Подключение к Vue DevTools для отслеживания компонентов\n  hookVueDevtools() {\n    const hook = window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n    \n    if (!hook) {\n      console.warn('[MemoryTracker] Vue DevTools hook not found. Component tracking will be limited.');\n      return;\n    }\n    \n    console.log('[MemoryTracker] Connected to Vue DevTools hook');\n    \n    // Отслеживаем существующие приложения\n    if (hook.apps && hook.apps.length > 0) {\n      hook.apps.forEach(app => {\n        if (app._instance) {\n          this.scanComponentTree(app._instance);\n        }\n      });\n    }\n    \n    // Подписываемся на события компонентов\n    if (!hook._memTrackerPatched) {\n      const self = this;\n      const originalEmit = hook.emit;\n      \n      hook.emit = function(event, ...args) {\n        // Вызываем оригинальный метод\n        const result = originalEmit.apply(this, arguments);\n        \n        // Отслеживаем создание и обновление компонентов\n        if (event === 'component:init') {\n          const component = args[0];\n          self.trackComponent(component);\n        }\n        else if (event === 'component:updated') {\n          const component = args[0];\n          self.updateComponentInfo(component);\n        }\n        \n        return result;\n      };\n      \n      hook._memTrackerPatched = true;\n    }\n  }\n  \n  // Отслеживание компонента\n  trackComponent(instance) {\n    if (!instance || this.trackedInstances.has(instance)) return;\n    \n    try {\n      // Получаем имя компонента\n      const name = this.getComponentName(instance);\n      \n      // Оцениваем размер\n      const size = this.estimateSize(instance);\n      \n      // Сохраняем информацию\n      if (!this.components[name]) {\n        this.components[name] = {\n          name,\n          instances: []\n        };\n      }\n      \n      // Добавляем инстанс\n      this.components[name].instances.push({\n        instance,\n        createdAt: Date.now(),\n        size,\n        isDestroyed: false\n      });\n      \n      // Отмечаем как отслеживаемый\n      this.trackedInstances.add(instance);\n      \n      // Отслеживаем удаление компонента (для Vue 3)\n      this.trackComponentDestruction(instance, name);\n      \n      // Рекурсивно отслеживаем дочерние компоненты\n      if (instance.subTree) {\n        this.scanVNode(instance.subTree);\n      }\n    } catch (e) {\n      // Игнорируем ошибки\n    }\n  }\n  \n  // Обновление информации о компоненте\n  updateComponentInfo(instance) {\n    if (!instance) return;\n    \n    try {\n      const name = this.getComponentName(instance);\n      \n      if (this.components[name]) {\n        // Находим инстанс в списке\n        const instanceInfo = this.components[name].instances.find(\n          info => info.instance === instance\n        );\n        \n        if (instanceInfo) {\n          // Обновляем размер\n          instanceInfo.size = this.estimateSize(instance);\n          \n          // Проверяем, не удален ли компонент\n          instanceInfo.isDestroyed = \n            (instance.isUnmounted === true) || \n            (instance._isDestroyed === true);\n        }\n      }\n      \n      // Проверяем новые дочерние компоненты\n      if (instance.subTree) {\n        this.scanVNode(instance.subTree);\n      }\n    } catch (e) {\n      // Игнорируем ошибки\n    }\n  }\n  \n  // Отслеживание уничтожения компонента (для Vue 3)\n  trackComponentDestruction(instance, name) {\n    try {\n      // Перехватываем хук unmounted для Vue 3\n      if (instance.bum) {\n        const originalBum = instance.bum;\n        const self = this;\n        \n        instance.bum = function() {\n          // Вызываем оригинальные хуки\n          const result = originalBum.apply(this, arguments);\n          \n          // Помечаем компонент как уничтоженный\n          if (self.components[name]) {\n            const instanceInfo = self.components[name].instances.find(\n              info => info.instance === instance\n            );\n            \n            if (instanceInfo) {\n              instanceInfo.isDestroyed = true;\n            }\n          }\n          \n          return result;\n        };\n      }\n    } catch (e) {\n      // Игнорируем ошибки\n    }\n  }\n  \n  // Сканирование VNode на наличие компонентов\n  scanVNode(vnode) {\n    if (!vnode) return;\n    \n    try {\n      // Обрабатываем компонент в VNode\n      if (vnode.component) {\n        this.trackComponent(vnode.component);\n      }\n      \n      // Специальная обработка для Suspense\n      if (vnode.type && vnode.type.__name === 'Suspense') {\n        // Проверяем активную ветку\n        if (vnode.suspense && vnode.suspense.activeBranch) {\n          this.scanVNode(vnode.suspense.activeBranch);\n        }\n        \n        // Проверяем ожидающую ветку\n        if (vnode.suspense && vnode.suspense.pendingBranch) {\n          this.scanVNode(vnode.suspense.pendingBranch);\n        }\n      }\n      \n      // Проверяем дочерние элементы\n      if (vnode.children) {\n        if (Array.isArray(vnode.children)) {\n          vnode.children.forEach(child => this.scanVNode(child));\n        } else if (typeof vnode.children === 'object') {\n          // Обработка слотов\n          Object.values(vnode.children).forEach(slot => {\n            if (typeof slot === 'function') {\n              try {\n                // Попытка вызова функции слота\n                const result = slot();\n                if (Array.isArray(result)) {\n                  result.forEach(child => this.scanVNode(child));\n                } else {\n                  this.scanVNode(result);\n                }\n              } catch (e) {\n                // Игнорируем ошибки вызова функции слота\n              }\n            } else if (Array.isArray(slot)) {\n              slot.forEach(child => this.scanVNode(child));\n            } else {\n              this.scanVNode(slot);\n            }\n          });\n        }\n      }\n    } catch (e) {\n      // Игнорируем ошибки\n    }\n  }\n  \n  // Рекурсивное сканирование дерева компонентов\n  scanComponentTree(instance, depth = 0) {\n    if (!instance || depth > 15) return;\n    \n    this.trackComponent(instance);\n    \n    try {\n      // Vue 3: сканируем subTree\n      if (instance.subTree) {\n        this.scanVNode(instance.subTree);\n      }\n      \n      // В компонентах Vue 3 также ищем компоненты в slots\n      if (instance.slots) {\n        Object.values(instance.slots).forEach(slot => {\n          if (typeof slot === 'function') {\n            try {\n              const result = slot();\n              if (Array.isArray(result)) {\n                result.forEach(child => this.scanVNode(child));\n              } else {\n                this.scanVNode(result);\n              }\n            } catch (e) {\n              // Игнорируем ошибки\n            }\n          }\n        });\n      }\n    } catch (e) {\n      // Игнорируем ошибки\n    }\n  }\n  \n  // Сканирование всех Vue компонентов в приложении\n  scanVueComponents() {\n    // Ищем через Vue DevTools Hook\n    const hook = window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n    \n    if (hook && hook.apps) {\n      hook.apps.forEach(app => {\n        if (app._instance) {\n          this.scanComponentTree(app._instance);\n        }\n      });\n    }\n    \n    // Также сканируем DOM для поиска компонентов\n    this.scanDOMForComponents();\n  }\n  \n  // Сканирование DOM для поиска компонентов Vue\n  scanDOMForComponents() {\n    // Ищем элементы с Vue-специфичными атрибутами\n    const elements = document.querySelectorAll('[data-v-]');\n    \n    elements.forEach(el => {\n      // Прямой доступ к компоненту (Vue 2)\n      let instance = el.__vue__;\n      \n      // Vue 3 может хранить инстанс по-другому\n      if (!instance && window.__VUE__) {\n        instance = window.__VUE__.inspectElement?.(el);\n      }\n      \n      if (instance) {\n        this.trackComponent(instance);\n      }\n    });\n    \n    // Особые случаи: Suspense, RouterView\n    this.scanSpecialComponents();\n  }\n  \n  // Сканирование специальных компонентов (Suspense, RouterView)\n  scanSpecialComponents() {\n    try {\n      // Suspense может иметь специальные классы или атрибуты\n      const suspenseElements = document.querySelectorAll('.v-suspense, [suspense]');\n      suspenseElements.forEach(el => {\n        // Ищем Vue компоненты внутри\n        el.querySelectorAll('[data-v-]').forEach(vueEl => {\n          let instance = vueEl.__vue__;\n          if (!instance && window.__VUE__) {\n            instance = window.__VUE__.inspectElement?.(vueEl);\n          }\n          \n          if (instance) {\n            this.trackComponent(instance);\n          }\n        });\n      });\n      \n      // RouterView обычно имеет специальный атрибут\n      const routerElements = document.querySelectorAll('[data-router-view]');\n      routerElements.forEach(el => {\n        el.querySelectorAll('[data-v-]').forEach(vueEl => {\n          let instance = vueEl.__vue__;\n          if (!instance && window.__VUE__) {\n            instance = window.__VUE__.inspectElement?.(vueEl);\n          }\n          \n          if (instance) {\n            this.trackComponent(instance);\n          }\n        });\n      });\n    } catch (e) {\n      // Игнорируем ошибки\n    }\n  }\n  \n  // Получение имени компонента\n  getComponentName(instance) {\n    try {\n      // Vue 3: проверяем различные способы получения имени\n      if (instance.type && instance.type.name) {\n        return instance.type.name;\n      }\n      \n      if (instance.type && instance.type.__name) {\n        return instance.type.__name;\n      }\n      \n      if (instance.type && instance.type.__file) {\n        return instance.type.__file.split('/').pop().replace('.vue', '');\n      }\n      \n      // Для компонентов, определенных в setup\n      if (instance.vnode && instance.vnode.type) {\n        const type = instance.vnode.type;\n        if (type.name) return type.name;\n        if (type.__name) return type.__name;\n        if (type.__file) return type.__file.split('/').pop().replace('.vue', '');\n      }\n      \n      // Проверяем метаданные маршрута для RouterView\n      if (instance.ctx && instance.ctx.$route) {\n        // RouterView с активным маршрутом\n        const route = instance.ctx.$route;\n        const componentName = route.matched[0]?.components?.default?.name;\n        if (componentName) return componentName;\n        \n        // Возвращаем имя пути\n        return 'RouterView:' + route.name || route.path;\n      }\n      \n      // Другие попытки определения имени\n      if (instance.ctx && instance.ctx.$options && instance.ctx.$options.name) {\n        return instance.ctx.$options.name;\n      }\n      \n      if (instance.proxy && instance.proxy.$options && instance.proxy.$options.name) {\n        return instance.proxy.$options.name;\n      }\n      \n      // Проверяем элемент\n      if (instance.el) {\n        const componentAttr = instance.el.getAttribute('component');\n        if (componentAttr) return componentAttr;\n        \n        // Проверяем атрибут name или id\n        const nameAttr = instance.el.getAttribute('name');\n        if (nameAttr) return nameAttr;\n        \n        const idAttr = instance.el.id;\n        if (idAttr) return 'Element:' + idAttr;\n        \n        // Проверяем классы\n        const componentClass = Array.from(instance.el.classList || [])\n          .find(cls => cls.startsWith('component-'));\n        if (componentClass) return componentClass.replace('component-', '');\n      }\n      \n      // По теговому имени элемента (если это кастомный элемент)\n      if (instance.el && instance.el.tagName && instance.el.tagName.includes('-')) {\n        return instance.el.tagName.toLowerCase();\n      }\n      \n      // Проверяем keyed элементы\n      if (instance.key) {\n        return 'Keyed:' + instance.key;\n      }\n    } catch (e) {\n      // Игнорируем ошибки доступа к свойствам\n    }\n    \n    return 'Unknown';\n  }\n  \n  // Оценка размера компонента в байтах\n  estimateSize(instance) {\n    try {\n      let size = 1000; // базовый размер\n      \n      // Подсчет размера по свойствам\n      if (instance.ctx) {\n        const props = Object.keys(instance.ctx).length;\n        size += props * 200; // примерно 200 байт на свойство\n      }\n      \n      // Подсчет по дочерним элементам\n      if (instance.subTree) {\n        const countNodes = (vnode) => {\n          if (!vnode) return 0;\n          \n          let count = 1;\n          \n          if (vnode.children) {\n            if (Array.isArray(vnode.children)) {\n              count += vnode.children.reduce((sum, child) => sum + countNodes(child), 0);\n            } else if (typeof vnode.children === 'object') {\n              count += Object.values(vnode.children).reduce((sum, slot) => {\n                if (Array.isArray(slot)) {\n                  return sum + slot.reduce((s, child) => s + countNodes(child), 0);\n                }\n                return sum + countNodes(slot);\n              }, 0);\n            }\n          }\n          \n          return count;\n        };\n        \n        const nodeCount = countNodes(instance.subTree);\n        size += nodeCount * 500; // примерно 500 байт на узел\n      }\n      \n      // Подсчет по DOM элементам\n      if (instance.el) {\n        // Размер HTML\n        const htmlSize = instance.el.outerHTML?.length || 0;\n        size += htmlSize * 2; // UTF-16 ~ 2 байта на символ\n        \n        // Подсчет дочерних элементов\n        const childCount = instance.el.querySelectorAll('*').length;\n        size += childCount * 300; // примерно 300 байт на элемент\n      }\n      \n      return size;\n    } catch (e) {\n      // При ошибке возвращаем базовый размер\n      return 1000;\n    }\n  }\n  \n  // UI для отображения данных о памяти\n  setupUI() {\n    this.ui = new MemoryMonitorUI(this);\n    return this.ui;\n  }\n}\n\n// UI класс для отображения статистики памяти\nclass MemoryMonitorUI {\n  constructor(tracker) {\n    this.tracker = tracker;\n    this.isVisible = false;\n    this.container = null;\n    this.toggleButton = null;\n    \n    // Создаем UI элементы\n    this.createToggleButton();\n  }\n  \n  // Создание кнопки переключения\n  createToggleButton() {\n    const button = document.createElement('button');\n    button.textContent = '🔍 Memory';\n    button.style.cssText = `\n      position: fixed;\n      bottom: 10px;\n      right: 10px;\n      z-index: 99999;\n      background: #333;\n      color: white;\n      border: none;\n      padding: 5px 10px;\n      border-radius: 4px;\n      cursor: pointer;\n      font-size: 12px;\n      box-shadow: 0 2px 5px rgba(0,0,0,0.2);\n    `;\n    \n    button.addEventListener('click', () => this.toggle());\n    document.body.appendChild(button);\n    this.toggleButton = button;\n  }\n  \n  // Удаление кнопки\n  removeButton() {\n    if (this.toggleButton && this.toggleButton.parentNode) {\n      this.toggleButton.parentNode.removeChild(this.toggleButton);\n    }\n    \n    if (this.container && this.container.parentNode) {\n      this.container.parentNode.removeChild(this.container);\n    }\n  }\n  \n  // Переключение видимости панели\n  toggle() {\n    if (this.isVisible) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  \n  // Показать панель\n  show() {\n    if (!this.container) {\n      this.createUI();\n    }\n    \n    this.container.style.display = 'flex';\n    this.isVisible = true;\n    \n    // Обновляем данные сразу при открытии\n    const latestSample = this.tracker.memoryHistory[this.tracker.memoryHistory.length - 1];\n    if (latestSample) {\n      this.updateMemoryDisplay(latestSample);\n    }\n  }\n  \n  // Скрыть панель\n  hide() {\n    if (this.container) {\n      this.container.style.display = 'none';\n    }\n    this.isVisible = false;\n  }\n  \n  // Создание UI панели\n  createUI() {\n    // Создаем основной контейнер\n    const container = document.createElement('div');\n    container.style.cssText = `\n      position: fixed;\n      bottom: 40px;\n      right: 10px;\n      width: 600px;\n      height: 400px;\n      background: rgba(0,0,0,0.85);\n      border-radius: 8px;\n      z-index: 99998;\n      padding: 10px;\n      color: white;\n      font-family: sans-serif;\n      font-size: 12px;\n      box-shadow: 0 5px 15px rgba(0,0,0,0.5);\n      display: flex;\n      flex-direction: column;\n      overflow: hidden;\n    `;\n    \n    // Заголовок и кнопка закрытия\n    const header = document.createElement('div');\n    header.style.cssText = 'display: flex; justify-content: space-between; align-items: center; margin-bottom: 10px;';\n    \n    const title = document.createElement('div');\n    title.textContent = 'Vue Memory Monitor';\n    title.style.cssText = 'font-weight: bold; font-size: 14px;';\n    \n    const closeButton = document.createElement('button');\n    closeButton.textContent = '×';\n    closeButton.style.cssText = 'background: none; border: none; color: white; font-size: 18px; cursor: pointer;';\n    closeButton.addEventListener('click', () => this.hide());\n    \n    header.appendChild(title);\n    header.appendChild(closeButton);\n    \n    // Основной контент в двух колонках\n    const content = document.createElement('div');\n    content.style.cssText = 'display: flex; flex: 1; overflow: hidden;';\n    \n    // Левая колонка - график памяти\n    const leftColumn = document.createElement('div');\n    leftColumn.style.cssText = 'flex: 1; margin-right: 10px; display: flex; flex-direction: column;';\n    \n    // Заголовок графика\n    const chartTitle = document.createElement('div');\n    chartTitle.textContent = 'Memory Usage';\n    chartTitle.style.cssText = 'margin-bottom: 5px;';\n    \n    // Canvas для графика\n    const canvas = document.createElement('canvas');\n    canvas.width = 280;\n    canvas.height = 150;\n    canvas.style.cssText = 'width: 100%; height: 150px; background: rgba(255,255,255,0.05); border-radius: 4px;';\n    \n    // Информация о памяти\n    const memoryInfo = document.createElement('div');\n    memoryInfo.style.cssText = 'margin-top: 10px; display: flex; justify-content: space-between;';\n    \n    // Кнопки действий\n    const actionsContainer = document.createElement('div');\n    actionsContainer.style.cssText = 'margin-top: 10px; display: flex; gap: 5px;';\n    \n    const snapshotButton = document.createElement('button');\n    snapshotButton.textContent = 'Take Snapshot';\n    snapshotButton.style.cssText = 'background: #4CAF50; border: none; color: white; padding: 3px 8px; border-radius: 3px; cursor: pointer; font-size: 11px;';\n    snapshotButton.addEventListener('click', () => {\n      this.tracker.scanVueComponents();\n      this.tracker.checkMemory();\n    });\n    \n    actionsContainer.appendChild(snapshotButton);\n    \n    // Добавляем элементы в левую колонку\n    leftColumn.appendChild(chartTitle);\n    leftColumn.appendChild(canvas);\n    leftColumn.appendChild(memoryInfo);\n    leftColumn.appendChild(actionsContainer);\n    \n    // Правая колонка - таблица компонентов\n    const rightColumn = document.createElement('div');\n    rightColumn.style.cssText = 'flex: 1; display: flex; flex-direction: column;';\n    \n    // Заголовок таблицы\n    const tableTitle = document.createElement('div');\n    tableTitle.textContent = 'Components by Memory Usage';\n    tableTitle.style.cssText = 'margin-bottom: 5px;';\n    \n    // Контейнер для таблицы компонентов\n    const componentTable = document.createElement('div');\n    componentTable.style.cssText = 'flex: 1; overflow-y: auto; background: rgba(255,255,255,0.05); border-radius: 4px;';\n    \n    // Добавляем элементы в правую колонку\n    rightColumn.appendChild(tableTitle);\n    rightColumn.appendChild(componentTable);\n    \n    // Добавляем колонки в контент\n    content.appendChild(leftColumn);\n    content.appendChild(rightColumn);\n    \n    // Собираем всё вместе\n    container.appendChild(header);\n    container.appendChild(content);\n    \n    // Добавляем в DOM\n    document.body.appendChild(container);\n    \n    // Сохраняем ссылки на элементы\n    this.container = container;\n    this.canvas = canvas;\n    this.ctx = canvas.getContext('2d');\n    this.memoryInfo = memoryInfo;\n    this.componentTable = componentTable;\n    \n    // Инициализируем пустой график\n    this.drawMemoryChart([]);\n  }\n  \n  // Обновление отображения данных о памяти\n  updateMemoryDisplay(sample) {\n    if (!this.isVisible) return;\n    \n    // Обновляем график памяти\n    this.updateMemoryChart(sample);\n    \n    // Обновляем информацию о памяти\n    this.updateMemoryInfo(sample);\n    \n    // Обновляем таблицу компонентов\n    this.updateComponentTable(sample.components);\n  }\n  \n  // Обновление графика памяти\n  updateMemoryChart(sample) {\n    // Получаем историю использования памяти\n    const memoryData = this.tracker.memoryHistory.map(s => s.memory);\n    \n    // Рисуем график\n    this.drawMemoryChart(memoryData);\n  }\n  \n  // Рисование графика памяти\n  drawMemoryChart(data) {\n    if (!this.ctx || !this.canvas) return;\n    \n    const ctx = this.ctx;\n    const width = this.canvas.width;\n    const height = this.canvas.height;\n    \n    // Очищаем холст\n    ctx.clearRect(0, 0, width, height);\n    \n    if (data.length === 0) {\n      // Нет данных\n      ctx.fillStyle = '#666';\n      ctx.font = '12px sans-serif';\n      ctx.textAlign = 'center';\n      ctx.fillText('Waiting for memory data...', width / 2, height / 2);\n      return;\n    }\n    \n    // Рисуем сетку\n    ctx.strokeStyle = 'rgba(255,255,255,0.1)';\n    ctx.beginPath();\n    for (let i = 0; i < 5; i++) {\n      const y = i * (height / 4);\n      ctx.moveTo(0, y);\n      ctx.lineTo(width, y);\n    }\n    ctx.stroke();\n    \n    // Находим максимальное значение для масштабирования\n    const maxMem = Math.max(...data.map(d => d.heapUsed)) * 1.1; // +10% для запаса\n    \n    // Рисуем линию использования памяти\n    ctx.strokeStyle = '#4CAF50';\n    ctx.lineWidth = 2;\n    ctx.beginPath();\n    \n    data.forEach((point, i) => {\n      const x = (i / (data.length - 1)) * width;\n      const y = height - (point.heapUsed / maxMem) * height;\n      \n      if (i === 0) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n    });\n    \n    ctx.stroke();\n    \n    // Заливка под графиком\n    const gradient = ctx.createLinearGradient(0, 0, 0, height);\n    gradient.addColorStop(0, 'rgba(76, 175, 80, 0.3)');\n    gradient.addColorStop(1, 'rgba(76, 175, 80, 0)');\n    \n    ctx.fillStyle = gradient;\n    ctx.beginPath();\n    ctx.moveTo(0, height - (data[0].heapUsed / maxMem) * height);\n    data.forEach((point, i) => {\n      const x = (i / (data.length - 1)) * width;\n      const y = height - (point.heapUsed / maxMem) * height;\n      ctx.lineTo(x, y);\n    });\n    ctx.lineTo(width, height);\n    ctx.lineTo(0, height);\n    ctx.closePath();\n    ctx.fill();\n    \n    // Подписи\n    ctx.fillStyle = 'white';\n    ctx.font = '10px sans-serif';\n    ctx.textAlign = 'left';\n    ctx.fillText(`${(maxMem / 1024 / 1024).toFixed(1)} MB`, 5, 12);\n    \n    // Текущее значение\n    const current = data[data.length - 1];\n    ctx.fillStyle = '#4CAF50';\n    ctx.textAlign = 'right';\n    ctx.fillText(`${(current.heapUsed / 1024 / 1024).toFixed(1)} MB`, width - 5, height - 5);\n  }\n  \n  // Обновление информации о памяти\n  updateMemoryInfo(sample) {\n    if (!this.memoryInfo) return;\n    \n    const memory = sample.memory;\n    this.memoryInfo.innerHTML = `\n      <div>Used: ${(memory.heapUsed / 1024 / 1024).toFixed(1)} MB</div>\n      <div>Total: ${(memory.heapTotal / 1024 / 1024).toFixed(1)} MB</div>\n      <div>Components: ${sample.components.length}</div>\n    `;\n  }\n  \n  // Обновление таблицы компонентов\n  updateComponentTable(components) {\n    if (!this.componentTable) return;\n    \n    // Очищаем таблицу\n    this.componentTable.innerHTML = '';\n    \n    if (!components || components.length === 0) {\n      this.componentTable.innerHTML = '<div style=\"padding: 10px; text-align: center;\">No components tracked yet</div>';\n      return;\n    }\n    \n    // Создаем заголовок таблицы\n    const tableHeader = document.createElement('div');\n    tableHeader.style.cssText = `\n      display: grid;\n      grid-template-columns: 1fr 60px 80px 60px;\n      padding: 5px;\n      background: rgba(255,255,255,0.1);\n      font-weight: bold;\n      border-bottom: 1px solid rgba(255,255,255,0.2);\n    `;\n    \n    tableHeader.innerHTML = `\n      <div>Component</div>\n      <div style=\"text-align: right\">Count</div>\n      <div style=\"text-align: right\">Size (MB)</div>\n      <div style=\"text-align: right\">Age (s)</div>\n    `;\n    \n    this.componentTable.appendChild(tableHeader);\n    \n    // Добавляем строки для каждого компонента\n    components.forEach((component, index) => {\n      const row = document.createElement('div');\n      row.style.cssText = `\n        display: grid;\n        grid-template-columns: 1fr 60px 80px 60px;\n        padding: 5px;\n        ${index % 2 === 1 ? 'background: rgba(255,255,255,0.05);' : ''}\n        border-bottom: 1px solid rgba(255,255,255,0.1);\n      `;\n      \n      // Определяем цвет в зависимости от использования памяти\n      let memoryColor = '#4CAF50'; // Зеленый для небольших\n      if (component.size > 5 * 1024 * 1024) { // Больше 5MB\n        memoryColor = '#F44336'; // Красный\n      } else if (component.size > 1 * 1024 * 1024) { // Больше 1MB\n        memoryColor = '#FF9800'; // Оранжевый\n      }\n      \n      // Определяем цвет для возраста\n      let ageColor = '#4CAF50'; // Зеленый для новых\n      if (component.avgAge > 120) { // Больше 2 минут\n        ageColor = '#F44336'; // Красный\n      } else if (component.avgAge > 60) { // Больше 1 минуты\n        ageColor = '#FF9800'; // Оранжевый\n      }\n      \n      row.innerHTML = `\n        <div title=\"${component.name}\" style=\"overflow: hidden; text-overflow: ellipsis; white-space: nowrap;\">\n          ${component.name}\n        </div>\n        <div style=\"text-align: right\">${component.count}</div>\n        <div style=\"text-align: right; color: ${memoryColor}\">\n          ${(component.size / 1024 / 1024).toFixed(2)}\n        </div>\n        <div style=\"text-align: right; color: ${ageColor}\">\n          ${component.avgAge}\n        </div>\n      `;\n      \n      // Добавляем обработчик клика для подробностей\n      row.style.cursor = 'pointer';\n      row.addEventListener('click', () => {\n        console.group(`Component: ${component.name}`);\n        console.log(`Instances: ${component.count}`);\n        console.log(`Memory: ${(component.size / 1024 / 1024).toFixed(2)} MB`);\n        console.log(`Average age: ${component.avgAge} seconds`);\n        console.groupEnd();\n      });\n      \n      this.componentTable.appendChild(row);\n    });\n  }\n}\n\n// Функция для создания и запуска трекера\nfunction setupMemoryTracker(options = {}) {\n  const tracker = new VueMemoryTracker(options);\n  tracker.start();\n  \n  // Также регистрируем глобально для отладки из консоли\n  window.__memoryTracker = tracker;\n  \n  return tracker;\n}\n\n// Экспорт для использования\nexport { setupMemoryTracker, VueMemoryTracker };",
              "name": "memory-tracker.js",
              "size": 32265,
              "type": "source"
            },
            {
              "path": "../../src/modules/core/classes/module-manager.js",
              "relativePath": "modules/core/classes/module-manager.js",
              "extension": ".js",
              "content": "export const createModuleManager = () => {\n  const modules = new Map();\n  const plugins = new Map();\n  const events = createEventBus();\n\n  const manager = {\n    registerModule(module) {\n      if (!module?.name) {\n        throw new Error('Invalid module object');\n      }\n\n      if (modules.has(module.name)) {\n        throw new Error(`Module ${module.name} is already registered`);\n      }\n\n      modules.set(module.name, module);\n      events.emit('moduleRegistered', module);\n    },\n\n    unregisterModule(name) {\n      const module = modules.get(name);\n\n      if (module) {\n        module.destroy();\n        modules.delete(name);\n        plugins.delete(name);\n        events.emit('moduleUnregistered', name);\n      }\n    },\n\n    _detectCircularDependencies(moduleName, visited = new Set()) {\n      if (visited.has(moduleName)) {\n        throw new Error(`Circular dependency detected for module ${moduleName}`);\n      }\n\n      visited.add(moduleName);\n\n      const module = modules.get(moduleName);\n\n      for (const dep of module.requires) {\n        this._detectCircularDependencies(dep, new Set(visited));\n      }\n    },\n\n    async initialize(app, store, router, options = {}) {\n      try {\n        // Check for circular dependencies\n        for (const module of modules.values()) {\n          this._detectCircularDependencies(module.name);\n        }\n\n        const sortedModules = this._sortModulesByDependencies();\n\n        // Initialize modules sequentially to maintain dependency order\n        for (const module of sortedModules) {\n          const moduleOptions = options[module.name] || {};\n\n          try {\n            await module.initialize(app, store, router, moduleOptions);\n\n            // Initialize plugins\n            if (plugins.has(module.name)) {\n              await Promise.all(Array.from(plugins.get(module.name)).map(plugin => plugin.initialize(app, store, router, moduleOptions)));\n            }\n          } catch (error) {\n            throw new Error(`Failed to initialize module ${module.name}: ${error.message}`);\n          }\n        }\n      } catch (error) {\n        // Cleanup on initialization failure\n        this.destroy();\n        throw error;\n      }\n    },\n\n    // Proper cleanup\n    destroy() {\n      for (const module of modules.values()) {\n        module.destroy();\n      }\n      modules.clear();\n      plugins.clear();\n      events.destroy();\n    },\n  };\n\n  return manager;\n};\n",
              "name": "module-manager.js",
              "size": 2415,
              "type": "source"
            },
            {
              "path": "../../src/modules/core/classes/module.js",
              "relativePath": "modules/core/classes/module.js",
              "extension": ".js",
              "content": "export const createModule = ({\n  name,\n  version,\n  requires = [],\n  framework = 'vue', // Support for different frameworks\n}) => {\n  if (!name) throw new Error('Module name is required');\n  if (!version) throw new Error('Module version is required');\n\n  // Private fields with WeakMap for better garbage collection\n  const stores = new WeakMap();\n  const routes = new WeakMap();\n  const components = new WeakMap();\n  const hooks = new WeakMap();\n  const events = createEventBus();\n\n  let isInitialized = false;\n\n  // Validate component name uniqueness\n  const validateComponentName = name => {\n    if (components.has(name)) {\n      throw new Error(`Component ${name} already registered`);\n    }\n  };\n\n  const module = {\n    name,\n    version,\n    requires,\n    events,\n\n    addComponent(name, component, options = {}) {\n      validateComponentName(name);\n\n      const { async = false } = options;\n\n      components.set(name, {\n        component,\n        async,\n        framework,\n      });\n    },\n\n    // Add proper cleanup\n    destroy() {\n      stores.clear();\n      routes.clear();\n      components.clear();\n      hooks.clear();\n      events.destroy();\n      isInitialized = false;\n    },\n\n    async initialize(app, store, router, options = {}) {\n      if (isInitialized) {\n        throw new Error(`Module ${name} is already initialized`);\n      }\n\n      try {\n        await this._runHooks('beforeInit', { app, store, router });\n\n        // Initialize features with error handling\n        await Promise.all([this._initializeComponents(app, options), this._initializeStores(store, options), this._initializeRoutes(router, options)]);\n\n        await this._runHooks('init', { app, store, router });\n        await this._runHooks('afterInit', { app, store, router });\n\n        isInitialized = true;\n      } catch (error) {\n        // Cleanup on initialization failure\n        this.destroy();\n        throw new Error(`Failed to initialize module ${name}: ${error.message}`);\n      }\n    },\n\n    // Private methods with proper error handling\n    async _initializeComponents(app, options) {\n      const usedFeatures = options.use || [];\n\n      for (const [name, { component, async, framework }] of components) {\n        if (!usedFeatures.length || usedFeatures.includes(name)) {\n          try {\n            if (framework === 'vue') {\n              if (async) {\n                app.component(\n                  name,\n                  defineAsyncComponent(() => component)\n                );\n              } else {\n                app.component(name, component);\n              }\n            } else {\n              // Support for other frameworks\n              throw new Error(`Framework ${framework} not supported`);\n            }\n          } catch (error) {\n            throw new Error(`Failed to register component ${name}: ${error.message}`);\n          }\n        }\n      }\n    },\n  };\n\n  return module;\n};\n",
              "name": "module.js",
              "size": 2903,
              "type": "source"
            }
          ]
        },
        "model": {
          "_files": [
            {
              "path": "../../src/modules/core/model/Adapter.js",
              "relativePath": "modules/core/model/Adapter.js",
              "extension": ".js",
              "content": "// DBAdapter.js\nclass DBAdapter {\n  constructor(modelName) {\n    this.modelName = modelName;\n  }\n  \n  async create(data) { throw new Error('Not implemented'); }\n  async find(query) { throw new Error('Not implemented'); }\n  async findOne(query) { throw new Error('Not implemented'); }\n  async findById(id) { throw new Error('Not implemented'); }\n  async update(id, data) { throw new Error('Not implemented'); }\n  async delete(id) { throw new Error('Not implemented'); }\n  async aggregate(pipeline) { throw new Error('Not implemented'); }\n  async count(query) { throw new Error('Not implemented'); }\n}\n\nexport default DBAdapter;",
              "name": "Adapter.js",
              "size": 626,
              "type": "source"
            },
            {
              "path": "../../src/modules/core/model/Adapter.mogodb.js",
              "relativePath": "modules/core/model/Adapter.mogodb.js",
              "extension": ".js",
              "content": "// MongoDBAdapter.js\nimport DBAdapter from './DBAdapter.js';\nimport { ObjectId } from 'mongodb';\n\nclass MongoDBAdapter extends DBAdapter {\n  constructor(modelName, connection) {\n    super(modelName);\n    this.db = connection.db;\n  }\n  \n  // Преобразование строкового ID в ObjectId\n  convertId(id) {\n    return new ObjectId(id);\n  }\n  \n  async create(data) {\n    const collection = this.db.collection(this.modelName);\n    const result = await collection.insertOne(data);\n    return { ...data, _id: result.insertedId };\n  }\n  \n  async findById(id) {\n    const collection = this.db.collection(this.modelName);\n    return await collection.findOne({ _id: this.convertId(id) });\n  }\n  \n  async find(query = {}) {\n    const collection = this.db.collection(this.modelName);\n    return await collection.find(query).toArray();\n  }\n  \n  async findOne(query = {}) {\n    const collection = this.db.collection(this.modelName);\n    return await collection.findOne(query);\n  }\n  \n  async update(id, data) {\n    const collection = this.db.collection(this.modelName);\n    const result = await collection.findOneAndUpdate(\n      { _id: this.convertId(id) },\n      { $set: data },\n      { returnDocument: 'after' }\n    );\n    \n    return result.value;\n  }\n  \n  async delete(id) {\n    const collection = this.db.collection(this.modelName);\n    const result = await collection.deleteOne({ _id: this.convertId(id) });\n    return result.deletedCount > 0;\n  }\n  \n  async aggregate(pipeline) {\n    const collection = this.db.collection(this.modelName);\n    return await collection.aggregate(pipeline).toArray();\n  }\n  \n  async count(query = {}) {\n    const collection = this.db.collection(this.modelName);\n    return await collection.countDocuments(query);\n  }\n}\n\nexport default MongoDBAdapter;",
              "name": "Adapter.mogodb.js",
              "size": 1768,
              "type": "source"
            },
            {
              "path": "../../src/modules/core/model/Adapter.postgre.js",
              "relativePath": "modules/core/model/Adapter.postgre.js",
              "extension": ".js",
              "content": "// PostgreSQLAdapter.js\nimport DBAdapter from './DBAdapter.js';\n\nclass PostgreSQLAdapter extends DBAdapter {\n  constructor(modelName, connection) {\n    super(modelName);\n    this.pool = connection;\n  }\n  \n  async create(data) {\n    const fields = Object.keys(data);\n    const placeholders = fields.map((_, i) => `$${i + 1}`).join(', ');\n    const values = fields.map(field => data[field]);\n    \n    const query = `\n      INSERT INTO ${this.modelName} (${fields.join(', ')})\n      VALUES (${placeholders})\n      RETURNING *\n    `;\n    \n    const result = await this.pool.query(query, values);\n    return result.rows[0];\n  }\n  \n  async findById(id) {\n    const query = `\n      SELECT * FROM ${this.modelName}\n      WHERE id = $1\n    `;\n    \n    const result = await this.pool.query(query, [id]);\n    return result.rows[0];\n  }\n  \n  async find(query = {}) {\n    // Преобразование объекта запроса в WHERE условия\n    const conditions = [];\n    const values = [];\n    let paramIndex = 1;\n    \n    for (const [key, value] of Object.entries(query)) {\n      conditions.push(`${key} = $${paramIndex}`);\n      values.push(value);\n      paramIndex++;\n    }\n    \n    const sqlQuery = `\n      SELECT * FROM ${this.modelName}\n      ${conditions.length ? `WHERE ${conditions.join(' AND ')}` : ''}\n    `;\n    \n    const result = await this.pool.query(sqlQuery, values);\n    return result.rows;\n  }\n  \n  async findOne(query = {}) {\n    // Преобразование объекта запроса в WHERE условия\n    const conditions = [];\n    const values = [];\n    let paramIndex = 1;\n    \n    for (const [key, value] of Object.entries(query)) {\n      conditions.push(`${key} = $${paramIndex}`);\n      values.push(value);\n      paramIndex++;\n    }\n    \n    const sqlQuery = `\n      SELECT * FROM ${this.modelName}\n      ${conditions.length ? `WHERE ${conditions.join(' AND ')}` : ''}\n      LIMIT 1\n    `;\n    \n    const result = await this.pool.query(sqlQuery, values);\n    return result.rows[0];\n  }\n  \n  async update(id, data) {\n    const fields = Object.keys(data);\n    const setClause = fields.map((field, index) => `${field} = $${index + 2}`).join(', ');\n    const values = [id, ...fields.map(field => data[field])];\n    \n    const query = `\n      UPDATE ${this.modelName}\n      SET ${setClause}\n      WHERE id = $1\n      RETURNING *\n    `;\n    \n    const result = await this.pool.query(query, values);\n    return result.rows[0];\n  }\n  \n  async delete(id) {\n    const query = `\n      DELETE FROM ${this.modelName}\n      WHERE id = $1\n      RETURNING *\n    `;\n    \n    const result = await this.pool.query(query, [id]);\n    return result.rowCount > 0;\n  }\n  \n  async count(query = {}) {\n    // Преобразование объекта запроса в WHERE условия\n    const conditions = [];\n    const values = [];\n    let paramIndex = 1;\n    \n    for (const [key, value] of Object.entries(query)) {\n      conditions.push(`${key} = $${paramIndex}`);\n      values.push(value);\n      paramIndex++;\n    }\n    \n    const sqlQuery = `\n      SELECT COUNT(*) FROM ${this.modelName}\n      ${conditions.length ? `WHERE ${conditions.join(' AND ')}` : ''}\n    `;\n    \n    const result = await this.pool.query(sqlQuery, values);\n    return parseInt(result.rows[0].count);\n  }\n}\n\nexport default PostgreSQLAdapter;",
              "name": "Adapter.postgre.js",
              "size": 3238,
              "type": "source"
            },
            {
              "path": "../../src/modules/core/model/Model.js",
              "relativePath": "modules/core/model/Model.js",
              "extension": ".js",
              "content": "// Model.js\nimport ModelSchema from './ModelSchema.js';\nimport ModelValidator from './ModelValidator.js';\n\nclass Model {\n  constructor(db, name, schema) {\n    this.name = name;\n    this._schema = new ModelSchema(schema);\n    this._validator = new ModelValidator(this._schema);\n    \n    if (db.type === 'mongodb') {\n      this.adapter = new MongoDBAdapter(name, db);\n    } else if (db.type === 'postgresql') {\n      this.adapter = new PostgreSQLAdapter(name, db);\n    } else {\n      // По умолчанию MongoDB\n      this.adapter = new MongoDBAdapter(name, db);\n    }\n  \n  // CRUD операции, делегируемые адаптеру\n  async create(data) {\n    if (!this._adapter) {\n      throw new Error('DB adapter not set');\n    }\n    \n    const validationResult = this.validate(data);\n    if (!validationResult.isValid) {\n      throw new Error('Validation failed: ' + JSON.stringify(validationResult.errors));\n    }\n    \n    return await this._adapter.create(data);\n  }\n  \n  async find(query = {}) {\n    if (!this._adapter) {\n      throw new Error('DB adapter not set');\n    }\n    \n    return await this._adapter.find(query);\n  }\n  \n  async findOne(query = {}) {\n    if (!this._adapter) {\n      throw new Error('DB adapter not set');\n    }\n    \n    return await this._adapter.findOne(query);\n  }\n  \n  async findById(id) {\n    if (!this._adapter) {\n      throw new Error('DB adapter not set');\n    }\n    \n    return await this._adapter.findById(id);\n  }\n  \n  async update(id, data) {\n    if (!this._adapter) {\n      throw new Error('DB adapter not set');\n    }\n    \n    const validationResult = this.validate(data);\n    \n    if (!validationResult.isValid) {\n      throw new Error('Validation failed: ' + JSON.stringify(validationResult.errors));\n    }\n    \n    return await this._adapter.update(id, data);\n  }\n  \n  async delete(id) {\n    if (!this._adapter) {\n      throw new Error('DB adapter not set');\n    }\n    \n    return await this._adapter.delete(id);\n  }\n  \n  // Методы валидации\n  validate(data) {\n    return this._validator.validate(data);\n  }\n  \n  validateField(field, value) {\n    return this._validator.validateField(field, value);\n  }\n  \n  // Методы для доступа к схеме\n  getSchema() {\n    return this._schema.getDefinition();\n  }\n  \n  createEmpty() {\n    return this._schema.createEmpty();\n  }\n}\n\nexport default Model;",
              "name": "Model.js",
              "size": 2310,
              "type": "source"
            },
            {
              "path": "../../src/modules/core/model/Schema.js",
              "relativePath": "modules/core/model/Schema.js",
              "extension": ".js",
              "content": "// ModelSchema.js\nclass ModelSchema {\n  constructor(schemaDefinition) {\n    this.definition = this._normalizeSchema(schemaDefinition);\n  }\n  \n  // Нормализация схемы, чтобы все поля имели одинаковую структуру\n  _normalizeSchema(schema) {\n    const normalized = {};\n    \n    for (const [field, config] of Object.entries(schema)) {\n      normalized[field] = {\n        type: config.type || String,\n        required: !!config.required,\n        default: config.default,\n        custom: config.custom || null,\n        // Остальные поля из конфигурации\n        ...config\n      };\n    }\n    \n    return normalized;\n  }\n  \n  getFieldNames() {\n    return Object.keys(this.definition);\n  }\n  \n  getFieldDefinition(field) {\n    return this.definition[field];\n  }\n  \n  getDefinition() {\n    return this.definition;\n  }\n  \n  // Создание пустого объекта с дефолтными значениями\n  createEmpty() {\n    const result = {};\n    \n    for (const [field, config] of Object.entries(this.definition)) {\n      if (config.default !== undefined) {\n        // Если default - функция, вызываем её\n        if (typeof config.default === 'function') {\n          result[field] = config.default();\n        } else {\n          result[field] = config.default;\n        }\n      } else if (config.type === String) {\n        result[field] = '';\n      } else if (config.type === Number) {\n        result[field] = 0;\n      } else if (config.type === Boolean) {\n        result[field] = false;\n      } else if (config.type === Date) {\n        result[field] = new Date();\n      } else if (config.type === Array) {\n        result[field] = [];\n      } else if (config.type === Object) {\n        result[field] = {};\n      } else {\n        result[field] = null;\n      }\n    }\n    \n    return result;\n  }\n}\n\nexport default ModelSchema;",
              "name": "Schema.js",
              "size": 1783,
              "type": "source"
            },
            {
              "path": "../../src/modules/core/model/Validation.js",
              "relativePath": "modules/core/model/Validation.js",
              "extension": ".js",
              "content": "// ModelValidator.js\nimport Validator from '@martyrs/src/modules/globals/controllers/classes/globals.validator.js';\nimport Verifier from '@martyrs/src/modules/globals/controllers/classes/globals.verifier.js';\n\nclass ModelValidator {\n  constructor(schema) {\n    this.schema = schema;\n    this.verifier = new Verifier();\n    this._initVerifier();\n  }\n  \n  _initVerifier() {\n    const schemaDefinition = this.schema.getDefinition();\n    \n    for (const [field, config] of Object.entries(schemaDefinition)) {\n      let validator;\n      \n      // Если есть кастомный валидатор, используем его\n      if (config.custom) {\n        validator = config.custom;\n      } else {\n        // Иначе создаем базовый валидатор по типу\n        validator = this._createBaseValidator(field, config);\n      }\n      \n      // Регистрируем в верификаторе\n      this.verifier.updateConfig({\n        [field]: {\n          rule: 'optional',\n          validator,\n          default: config.default\n        }\n      });\n    }\n  }\n  \n  _createBaseValidator(field, config) {\n    let validator = Validator.schema({ context: field });\n    \n    // Базовые проверки по типу\n    if (config.type === String) {\n      validator = validator.string();\n    } else if (config.type === Number) {\n      validator = validator.number();\n    } else if (config.type === Boolean) {\n      validator = validator.boolean();\n    } else if (config.type === Date) {\n      validator = validator.date();\n    } else if (config.type === Array) {\n      validator = validator.array();\n    } else if (config.type === Object) {\n      validator = validator.object({});\n    }\n    \n    // Дополнительные ограничения\n    if (config.required) {\n      validator = validator.required();\n    }\n    \n    if (config.min !== undefined) {\n      validator = validator.min(config.min);\n    }\n    \n    if (config.max !== undefined) {\n      validator = validator.max(config.max);\n    }\n    \n    if (config.enum) {\n      validator = validator.oneOf(config.enum);\n    }\n    \n    if (config.pattern) {\n      validator = validator.pattern(config.pattern);\n    }\n    \n    return validator;\n  }\n  \n  // Валидация всех данных\n  validate(data) {\n    return this.verifier.verify(data);\n  }\n  \n  // Валидация одного поля\n  validateField(field, value) {\n    const config = this.schema.getFieldDefinition(field);\n    \n    if (!config) {\n      return { isValid: false, errors: [`Unknown field: ${field}`] };\n    }\n    \n    const validator = this.verifier._getConfig()[field].validator;\n    return validator.validate(value);\n  }\n}\n\nexport default ModelValidator;",
              "name": "Validation.js",
              "size": 2564,
              "type": "source"
            }
          ]
        }
      },
      "events": {
        "controllers": {
          "_files": [
            {
              "path": "../../src/modules/events/controllers/events.controller.js",
              "relativePath": "modules/events/controllers/events.controller.js",
              "extension": ".js",
              "content": "import queryProcessorGlobals from '@martyrs/src/modules/globals/controllers/utils/queryProcessor.js';\nimport createFriendlyURL from '@martyrs/src/modules/globals/controllers/utils/seo-friendly-url.js';\nimport integrationStripe from '@martyrs/src/modules/integrations/stripe/controllers/services/stripe.service.js';\nimport { Types } from 'mongoose';\nimport queryProcessor from './utils/queryProcessor.js';\nconst ObjectId = { Types }.Types.ObjectId;\nconst middlewareFactory = db => {\n  const Ticket = db.ticket;\n  const Event = db.event;\n  const Membership = db.membership;\n  const serviceStripe = new integrationStripe();\n  const read = async (req, res) => {\n    console.log('req is', req.query);\n    let stages = [];\n    stages = [\n      ...queryProcessorGlobals.getSearchOptions(req.query.search, {\n        fields: ['name'],\n      }),\n      ...queryProcessorGlobals.getBasicOptions(req.query),\n      ...queryProcessor.getDateConditions(req.query.date),\n      ...queryProcessor.getPeriodConditions(req.query.period, req.query.periodStart, req.query.periodEnd),\n      ...queryProcessor.getPhaseConditions(req.query.phase),\n      // Tickets and Participants\n      queryProcessor.getTicketsLookupStage(),\n      queryProcessor.getParticipantsPhotosStage(),\n      queryProcessor.getNumberOfTicketsStage(),\n      ...queryProcessor.getHasTicketStage(req.query.user),\n      ...queryProcessor.getParticipantStages(req.query.participant),\n      // For creator\n      queryProcessorGlobals.getCreatorUserLookupStage(),\n      queryProcessorGlobals.getCreatorOrganizationLookupStage(),\n      // For owner\n      queryProcessorGlobals.getOwnerUserLookupStage(),\n      queryProcessorGlobals.getOwnerOrganizationLookupStage(),\n      queryProcessorGlobals.getAddFieldsCreatorOwnerStage(),\n      // Get object\n      // queryProcessor.getProjectStage(),\n      // Pagination\n      ...queryProcessorGlobals.getSortingOptions(req.query.sortParam, req.query.sortOrder),\n      ...queryProcessorGlobals.getPaginationOptions(req.query.skip, req.query.limit),\n    ];\n    try {\n      const events = await Event.aggregate(stages).exec();\n      res.status(200).send(events);\n    } catch (err) {\n      console.log(err);\n      return res.status(500).send({\n        message: err,\n      });\n    }\n  };\n  const create = async (req, res) => {\n    delete req.body._id;\n    try {\n      req.body.url = createFriendlyURL(req.body.name);\n      let event = new Event(req.body);\n      if (!event) {\n        return res.status(404).send({ message: 'Event is not created.' });\n      }\n      if (event.ticketsTypes && event.ticketsTypes.length > 0) {\n        const stripeProducts = await serviceStripe.createProducts(event._id.toString(), event.ticketsTypes, event.name);\n        event.ticketsTypes = event.ticketsTypes.map((ticket, index) => ({\n          ...ticket,\n          stripeProductId: stripeProducts[index].productId,\n          stripePriceId: stripeProducts[index].priceId,\n          stripePaymentLinkId: stripeProducts[index].paymentLinkId,\n          link: stripeProducts[index].paymentLink,\n        }));\n      }\n      await event.save();\n      res.status(200).send(event);\n    } catch (err) {\n      console.log(err);\n      return res.status(500).send({\n        message: err.message,\n      });\n    }\n  };\n  const update = async (req, res) => {\n    try {\n      let existingEvent = await Event.findOne({ url: req.body.url });\n      if (!existingEvent) {\n        return res.status(404).send({\n          message: 'Event not found.',\n        });\n      }\n      if (req.body.ticketsTypes && req.body.ticketsTypes.length > 0) {\n        const stripeUpdates = await serviceStripe.updateProducts(existingEvent._id.toString(), req.body.ticketsTypes, existingEvent.ticketsTypes || [], req.body.name);\n        req.body.ticketsTypes = req.body.ticketsTypes.map(ticket => {\n          const stripeData = stripeUpdates.find(update => update.name === ticket.name);\n          return {\n            ...ticket,\n            stripeProductId: stripeData?.productId,\n            stripePriceId: stripeData?.priceId,\n            stripePaymentLinkId: stripeData?.paymentLinkId,\n            link: stripeData?.paymentLink || ticket.link,\n          };\n        });\n      } else {\n        req.body.ticketsTypes = [];\n      }\n      await Event.updateOne({ _id: existingEvent._id }, { $set: req.body });\n      res.status(200).send(req.body);\n    } catch (err) {\n      console.log(err);\n      return res.status(500).send({\n        message: err.message,\n      });\n    }\n  };\n  const deleteMethod = async (req, res) => {\n    try {\n      const event = await Event.findOne({ _id: req.body._id });\n      if (!event) {\n        return res.status(404).send({\n          message: 'Event not found.',\n        });\n      }\n      if (event.ticketsTypes && event.ticketsTypes.length > 0) {\n        await serviceStripe.deactivateProduct(event._id.toString());\n      }\n      await Event.deleteOne({ _id: req.body._id });\n      res.status(200).send(event);\n    } catch (err) {\n      return res.status(500).send({\n        message: err.message,\n      });\n    }\n  };\n  return {\n    read,\n    create,\n    update,\n    delete: deleteMethod,\n  };\n};\nexport default middlewareFactory;\n",
              "name": "events.controller.js",
              "size": 5182,
              "type": "source"
            },
            {
              "path": "../../src/modules/events/controllers/tickets.controller.js",
              "relativePath": "modules/events/controllers/tickets.controller.js",
              "extension": ".js",
              "content": "import mailing from '@martyrs/src/modules/globals/controllers/utils/mailing.js';\nimport path from 'path';\nimport puppeteer from 'puppeteer';\nimport * as QRCode from 'qrcode';\nimport { renderTemplate as renderEmailTemplate } from './utils/templateEmail.js';\nimport { renderTemplate as renderTicketTemplate } from './utils/templateTicket.js';\nconst { sendEmail } = mailing;\nfunction formatDate(dateString) {\n  const date = new Date(dateString);\n  const options = { day: 'numeric', month: 'long' };\n  return date.toLocaleDateString('en-US', options);\n}\n// Функция для форматирования времени в формат \"16:30\"\nfunction formatTime(dateString) {\n  const date = new Date(dateString);\n  const options = { hour: '2-digit', minute: '2-digit', hour12: false };\n  return date.toLocaleTimeString('en-US', options);\n}\n// const createAndSendTicketWithRetry = async (paymentIntentId, ticketData, retries = 3, delay = 1000) => {\n//   try {\n//     const ticket = await saveAndSendTicket(ticketData);\n//     console.log(`Ticket created and sent successfully: ${ticket._id}`);\n//     await Payment.updateOne({ paymentIntentId }, { $set: { ticketId: ticket._id, status: 'success' } });\n//     return ticket;\n//   } catch (err) {\n//     if (retries > 0) {\n//       console.log(`Error creating and sending ticket: ${err.message}. Retrying in ${delay}ms...`);\n//       await new Promise(resolve => setTimeout(resolve, delay));\n//       return createAndSendTicketWithRetry(paymentIntentId, ticketData, retries - 1, delay * 2);\n//     } else {\n//       console.log(`Error creating and sending ticket: ${err.message}. No more retries.`);\n//       await Payment.updateOne({ paymentIntentId }, { $set: { status: 'failed', error: err.message } });\n//       throw err;\n//     }\n//   }\n// };\n// const createTicketJob = new Bull('createTicket', {\n//   attempts: 5, // Количество попыток\n//   backoff: {\n//     type: 'exponential',\n//     delay: 1000, // Начальная задержка между попытками (в миллисекундах)\n//   },\n// });\n// createTicketJob.process(async (job) => {\n//   const { payment } = job.data;\n//   try {\n//     const ticketData = {\n//       // Заполнить данные билета на основе информации из платежа\n//     };\n//     // Создать билет\n//     const ticket = await createTicket(ticketData);\n//     // Отправить билет\n//     await sendTicket(ticket);\n//     // Обновить статус платежа на 'success'\n//     await updatePaymentStatus(payment.id, 'success');\n//   } catch (err) {\n//     console.error(err);\n//     // Обновить статус платежа на 'failed'\n//     await updatePaymentStatus(payment.id, 'failed');\n//     throw err; // Вызвать ошибку для повторной попытки\n//   }\n// });\n// createTicketJob.on('failed', async (job, err) => {\n//   const { payment } = job.data;\n//   // Обновить статус платежа на 'failed'\n//   await updatePaymentStatus(payment.id, 'failed');\n//   // Отправить уведомление администратору о неудачном создании билета\n//   await notifyAdminFailedTicketCreation(payment);\n// });\nconst controllerFactory = (db, publicPath) => {\n  console.log('controllerFactory publicPath:', publicPath);\n  const Ticket = db.ticket;\n  const Event = db.event;\n  // Функция для создания билета, генерации QR-кода и сохранения билета\n  async function saveAndSendTicket(ticketData) {\n    console.log(ticketData);\n    console.log('Starting saveAndSendTicket');\n    const quantity = ticketData.quantity || 1; // Установим значение по умолчанию, если quantity не указано\n    const ticketIds = [];\n    const pdfFiles = [];\n    const event = await Event.findById(ticketData.target).exec();\n    if (!event) {\n      console.error('Event not found!');\n      return;\n    }\n    for (let i = 0; i < quantity; i++) {\n      console.log(`Processing ticket ${i + 1} of ${quantity}`);\n      const ticket = new Ticket(ticketData);\n      const data = await ticket.save();\n      ticketIds.push(data._id.toString()); // Сохраняем ID каждого билета для QR кода\n      const qrData = data._id.toString();\n      let qrCode;\n      try {\n        qrCode = await QRCode.toDataURL(qrData, {\n          errorCorrectionLevel: 'H',\n          type: 'image/png',\n        });\n      } catch (error) {\n        console.error('Error in saveAndSendTicket:', error);\n      }\n      console.log('qr code is', qrCode);\n      data.status = 'unused';\n      data.qrcode = qrCode;\n      data.client_refactor.name = ticketData.name;\n      data.client_refactor.email = ticketData.email;\n      const renderedHtml = renderTicketTemplate({\n        clientName: ticketData.name || 'No name',\n        qrCode: qrCode,\n        eventLocation: event.location || '-',\n        eventSeat: ticketData.seat || '-',\n        eventName: event.name,\n        eventDate: formatDate(event.date.start),\n        eventTime: formatTime(event.date.start),\n      });\n      if (!publicPath) {\n        console.error('publicPath is undefined');\n        throw new Error('publicPath must be defined');\n      }\n      const dirPath = path.join(publicPath, 'tickets');\n      const fileName = `ticket-${data._id.toString()}.pdf`;\n      const filePath = path.join(dirPath, fileName);\n      pdfFiles.push(filePath); // Сохраняем пути ко всем файлам PDF\n      let browser;\n      try {\n        browser = await puppeteer.launch({\n          args: ['--no-sandbox', '--disable-setuid-sandbox', '--disable-dev-shm-usage', '--disable-accelerated-2d-canvas', '--no-first-run', '--no-zygote', '--disable-gpu'],\n          headless: 'new',\n          protocolTimeout: 120000,\n          dumpio: true,\n        });\n      } catch (error) {\n        console.error('Error in saveAndSendTicket:', error);\n      }\n      // console.log(browser)\n      // console.log(browser.debugInfo.pendingProtocolErrors);\n      try {\n        const page = await browser.newPage();\n        await page.setContent(renderedHtml);\n        console.log('Rendering PDF to path:', filePath);\n        const pdfBuffer = await page.pdf({\n          path: filePath,\n          format: 'A4',\n        });\n        console.log('PDF created successfully:', filePath);\n        await browser.close();\n        data.image = `/tickets/${fileName}`;\n        await data.save(); // Обновление билета в базе данных\n      } catch (error) {\n        console.error('Error in saveAndSendTicket:', error);\n      }\n    }\n    // Отправка одного емейла с прикрепленными PDF файлами всех билетов\n    console.log('All tickets processed, sending email');\n    if (ticketData.email) {\n      const renderedHtmlEmail = renderEmailTemplate({\n        clientName: ticketData.name || 'No name',\n        eventLocation: event.location || process.env.APP_NAME,\n        eventName: event.name,\n        eventDate: formatDate(event.date.start),\n        eventTime: formatTime(event.date.start),\n        randomness: Date.now(),\n      });\n      try {\n        const emailSent = await sendEmail(ticketData.email, `Your Tickets for ${event.name}`, renderedHtmlEmail, pdfFiles);\n      } catch (err) {\n        console.error('Email sending failed:', err);\n      }\n    }\n    return {\n      tickets: ticketIds,\n    }; // Возвращаем ID всех созданных билетов\n  }\n  const create = async (req, res) => {\n    if (Array.isArray(req.body)) {\n      const ticketsData = req.body;\n      try {\n        const ticketsPromises = ticketsData.map(ticketData => saveAndSendTicket(ticketData));\n        const tickets = await Promise.all(ticketsPromises);\n        res.json(tickets);\n      } catch (err) {\n        console.log(err);\n        res.status(500).send({\n          errorCode: 'SERVER_ERROR',\n        });\n      }\n    } else {\n      try {\n        const data = await saveAndSendTicket(req.body);\n        res.json(data);\n      } catch (err) {\n        console.log(err);\n        res.status(500).send({\n          errorCode: 'SERVER_ERROR',\n        });\n      }\n    }\n  };\n  const read = async (req, res) => {\n    let query = {};\n    let options = {};\n    if (req.query.user) {\n      query.user = req.query.user;\n    }\n    if (req.query.type) {\n      query.type = req.query.type;\n    }\n    if (req.query.status) {\n      query.status = req.query.status;\n    }\n    if (req.query.target) {\n      query.target = req.query.target;\n    }\n    if (req.query.role) {\n      query.role = req.query.role;\n    }\n    options.limit = req.query.limit || 10;\n    options.skip = req.query.skip || 0;\n    const sortParam = req.query.sortParam || 'createdAt';\n    const sortOrder = req.query.sortOrder === 'asc' ? 1 : -1;\n    options.sort = {\n      [sortParam]: sortOrder,\n      _id: 1,\n    };\n    const search = req.query.search;\n    if (search) {\n      const parts = search.split('.');\n      let regexPattern = '';\n      if (parts.length === 2) {\n        // Создаем паттерн, который допускает замену одного символа в каждой части\n        regexPattern = parts.map(part => part.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&').replace(/\\*/g, '.*')).join('\\\\.');\n      } else {\n        // Если нет точки, применяем аналогичный подход к всей строке\n        regexPattern = search.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&').replace(/\\*/g, '.*');\n      }\n      query['client_refactor.name'] = { $regex: new RegExp(regexPattern, 'i') };\n    }\n    try {\n      const tickets = await Ticket.find(query, null, options).populate('user');\n      if (!tickets) {\n        return res.status(404).send({ errorCode: 'TICKETS_NOT_FOUND' });\n      }\n      res.send(tickets);\n    } catch (err) {\n      res.status(500).send({ errorCode: 'SERVER_ERROR' });\n    }\n  };\n  const update = async (req, res) => {\n    try {\n      const { _id } = req.body;\n      // Поиск билета по ID\n      const ticket = await Ticket.findById(_id);\n      // Если билет не найден\n      if (!ticket) {\n        return res.status(404).send({ errorCode: 'TICKET_NOT_FOUND' });\n      }\n      // Проверка статуса билета\n      if (ticket.status === 'used' && req.body.check) {\n        return res.status(500).send({ errorCode: 'TICKET_ALREADY_USED' });\n      }\n      if (ticket.status === 'deactivated' && req.body.check) {\n        return res.status(500).send({ errorCode: 'TICKET_DEACTIVATED' });\n      }\n      // Обновление билета\n      const updatedTicket = await Ticket.findOneAndUpdate({ _id: _id }, req.body, { new: true });\n      // Отправка обновленного билета\n      res.send(updatedTicket);\n    } catch (err) {\n      // Обработка ошибки сервера\n      res.status(500).send({ errorCode: 'SERVER_ERROR' });\n    }\n  };\n  const deleteTicket = async (req, res) => {\n    const { type, target, user } = req.body;\n    try {\n      const ticket = await Ticket.findOne({ type, target, user });\n      if (!ticket) {\n        return res.status(404).send({ errorCode: 'TICKET_NOT_FOUND' });\n      }\n      await Ticket.deleteOne({ _id: ticket._id });\n      res.status(200).send(ticket);\n    } catch (error) {\n      console.log(error);\n      res.status(500).send({ errorCode: 'SERVER_ERROR' });\n    }\n  };\n  return {\n    read,\n    create,\n    update,\n    delete: deleteTicket,\n    saveAndSendTicket,\n  };\n};\nexport default controllerFactory;\n",
              "name": "tickets.controller.js",
              "size": 10895,
              "type": "source"
            }
          ],
          "utils": {
            "_files": [
              {
                "path": "../../src/modules/events/controllers/utils/queryProcessor.js",
                "relativePath": "modules/events/controllers/utils/queryProcessor.js",
                "extension": ".js",
                "content": "import { Types } from 'mongoose';\nconst ObjectId = { Types }.Types.ObjectId;\nfunction getDateConditions(date) {\n  if (date) {\n    const dateString = date.toString(); // Just to ensure it's a string\n    const day = parseInt(dateString.substring(0, 2), 10);\n    const month = parseInt(dateString.substring(2, 4), 10) - 1; // months are 0-based in JavaScript\n    const year = parseInt(dateString.substring(4, 8), 10);\n    const customDate = new Date(year, month, day);\n    customDate.setHours(0, 0, 0, 0); // Set the start of the day\n    const customDateEnd = new Date(year, month, day);\n    customDateEnd.setHours(23, 59, 59, 999); // Set the end of the day\n    return [{ $match: { 'date.start': { $gte: customDate, $lte: customDateEnd } } }];\n  } else {\n    return [];\n  }\n}\nfunction getPeriodConditions(period, periodStart, periodEnd) {\n  const now = new Date();\n  let startDate, endDate;\n  if (periodStart && periodEnd) {\n    startDate = new Date(periodStart);\n    endDate = new Date(periodEnd);\n    return [\n      {\n        $match: {\n          'date.start': {\n            $gte: startDate,\n            $lte: endDate,\n          },\n        },\n      },\n    ];\n  } else if (period) {\n    startDate = new Date(now.getTime()); // Make a copy\n    endDate = new Date(now.getTime()); // New end date variable\n    switch (period) {\n      case 'today':\n        startDate.setHours(0, 0, 0, 0);\n        endDate.setHours(23, 59, 59, 999);\n        break;\n      case 'week':\n        endDate.setDate(now.getDate() + 7);\n        break;\n      case 'month':\n        endDate.setDate(now.getDate() + 30); // Or endDate.setMonth(now.getMonth() + 1); based on your requirement\n        break;\n      case 'year':\n        endDate.setFullYear(now.getFullYear() + 1);\n        break;\n      default:\n        break;\n    }\n    return [\n      {\n        $match: {\n          'date.start': {\n            $gte: startDate,\n            $lte: endDate,\n          },\n        },\n      },\n    ];\n  } else {\n    return [];\n  }\n}\nfunction getPhaseConditions(phase) {\n  const now = new Date();\n  const todayStart = new Date(now.getTime());\n  todayStart.setHours(0, 0, 0, 0);\n  const todayEnd = new Date(now.getTime());\n  todayEnd.setHours(23, 59, 59, 999);\n  let matchConditions = [];\n  switch (phase) {\n    case 'finished':\n      matchConditions.push({ 'date.start': { $lt: now } });\n      break;\n    case 'today':\n      matchConditions.push({ 'date.start': { $gte: todayStart, $lte: todayEnd } });\n      break;\n    case 'live':\n      matchConditions.push({ 'date.start': { $lte: now } });\n      matchConditions.push({ 'date.end': { $gte: now } });\n      break;\n    case 'planned':\n      matchConditions.push({ 'date.start': { $gt: now } });\n      break;\n    default:\n      break;\n  }\n  if (matchConditions && matchConditions.length > 0) {\n    return [{ $match: { $and: matchConditions } }];\n  } else {\n    return [];\n  }\n}\nfunction getTicketsLookupStage() {\n  return {\n    $lookup: {\n      from: 'tickets',\n      localField: '_id',\n      foreignField: 'target',\n      as: 'tickets',\n      pipeline: [\n        {\n          $lookup: {\n            from: 'users',\n            localField: 'user',\n            foreignField: '_id',\n            as: 'user',\n          },\n        },\n        {\n          $unwind: { path: '$user', preserveNullAndEmptyArrays: true },\n        },\n      ],\n    },\n  };\n}\nfunction getParticipantsPhotosStage() {\n  return {\n    $addFields: {\n      participantsPhotos: {\n        $map: {\n          input: '$tickets',\n          as: 'ticket',\n          in: '$$ticket.user.profile.photo',\n        },\n      },\n    },\n  };\n}\nfunction getNumberOfTicketsStage() {\n  return {\n    $addFields: {\n      numberOfTickets: { $size: '$tickets' },\n    },\n  };\n}\nfunction getHasTicketStage(user) {\n  if (user) {\n    return [\n      {\n        $addFields: {\n          hasTicket: {\n            $in: [new ObjectId(user), '$tickets.user._id'],\n          },\n        },\n      },\n    ];\n  } else {\n    return [];\n  }\n}\nfunction getProjectStage() {\n  return {\n    $project: {\n      _id: 1,\n      url: 1,\n      cover: 1,\n      name: 1,\n      phase: 1,\n      description: 1,\n      content: 1,\n      owner: 1,\n      creator: 1,\n      tags: 1,\n      date: 1,\n      numberOfTickets: 1,\n      participantsPhotos: 1,\n      special: 1,\n      specialData: 1,\n      hasTicket: 1,\n      tickets: 1,\n      createdAt: 1,\n    },\n  };\n}\nfunction getParticipantStages(participantQuery) {\n  const participantId = participantQuery ? new ObjectId(participantQuery) : null;\n  let stages = [];\n  if (participantId) {\n    stages.push({\n      $addFields: {\n        participantTickets: {\n          $filter: {\n            input: '$tickets',\n            as: 'ticket',\n            cond: { $eq: ['$$ticket.user._id', participantId] },\n          },\n        },\n      },\n    });\n    stages.push({\n      $match: {\n        'participantTickets.0': { $exists: true },\n      },\n    });\n  }\n  return stages;\n}\nexport {\n  getDateConditions,\n  getHasTicketStage,\n  getNumberOfTicketsStage,\n  getParticipantsPhotosStage,\n  getParticipantStages,\n  getPeriodConditions,\n  getPhaseConditions,\n  getProjectStage,\n  getTicketsLookupStage,\n};\nexport default {\n  getDateConditions,\n  getPhaseConditions,\n  getPeriodConditions,\n  getTicketsLookupStage,\n  getParticipantsPhotosStage,\n  getNumberOfTicketsStage,\n  getHasTicketStage,\n  getProjectStage,\n  getParticipantStages,\n};\n",
                "name": "queryProcessor.js",
                "size": 5370,
                "type": "source"
              },
              {
                "path": "../../src/modules/events/controllers/utils/templateEmail.js",
                "relativePath": "modules/events/controllers/utils/templateEmail.js",
                "extension": ".js",
                "content": "import Mustache from 'mustache';\n// Шаблон HTML и CSS в одной строке\nconst template = `\n<!DOCTYPE html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width,initial-scale=1\"><title>Ticket Confirmation</title></head><body style=\"font-family:'Helvetica Neue',Helvetica,Arial,sans-serif;margin:0;padding:0;color:#333;background-color:#f9f9f9\"><span style=\"opacity:0\">{{ randomness }}</span><div class=\"container\" style=\"border-radius:48px;width:100%;max-width:650px;background:#fff;margin:20px auto;overflow:hidden\"><div class=\"header\" style=\"background:#e31c25;color:#fff;text-align:left\"><img loading=\"lazy\" alt=\"NO MORE SNOW\" style=\"max-width:150px;height:auto;padding:20px\" src=\"https://nms.io/logo/logotype-white.png\"><h1 style=\"box-sizing:border-box;border-top:2px solid rgba(0,0,0,.1);padding:40px;text-align:center;margin:0;text-transform:uppercase;width:100%\">Confirmation of Your Ticket Purchase</h1></div><div class=\"content\" style=\"padding:20px;text-align:center\"><h2 style=\"color:#000\">Thank You, {{clientName}}!</h2><p style=\"color:#000;opacity:.5\">Your purchase has been confirmed. Please find your ticket attached to this email.</p><div class=\"details\" style=\"background-color:#f5f5f5;padding:10px;margin-top:20px;margin-bottom:20px;border-radius:24px\"><h3 style=\"color:#000;margin:0\">Event Details</h3><p style=\"display:flex;color:#000\"><strong style=\"display:block;width:100%;opacity:.5;text-align:right;margin-right:.5rem\">Event:</strong><span style=\"text-align:left;width:100%\">{{eventName}}</span></p><p style=\"display:flex;color:#000\"><strong style=\"display:block;width:100%;opacity:.5;text-align:right;margin-right:.5rem\">Location:</strong><span style=\"text-align:left;width:100%\">{{eventLocation}}</span></p><p style=\"display:flex;color:#000\"><strong style=\"display:block;width:100%;opacity:.5;text-align:right;margin-right:.5rem\">Date:</strong><span style=\"text-align:left;width:100%\">{{eventDate}}</span></p><p style=\"display:flex;color:#000\"><strong style=\"display:block;width:100%;opacity:.5;text-align:right;margin-right:.5rem\">Time:</strong><span style=\"text-align:left;width:100%\">{{eventTime}}</span></p></div><div class=\"social-links\" style=\"text-align:center\"><h3 style=\"color:#000\">Stay Connected</h3><p style=\"color:#000;opacity:.5\">Follow us on Instagram for the latest updates and exclusive content!</p><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"margin: 0 auto; border-collapse:separate;mso-table-lspace:0;mso-table-rspace:0;width:auto\"><tr><td style=\"font-family:sans-serif;font-size:14px;vertical-align:top;background-color:#e31c25;border-radius:48px;text-align:center\" valign=\"top\" bgcolor=\"#e31c25\" align=\"center\"><a href=\"https://www.instagram.com/no.more.snow/?hl=en\" target=\"_blank\" style=\"display:inline-block;color:#fff;background-color:#e31c25;border:solid 1px #e31c25;border-radius:48px;box-sizing:border-box;cursor:pointer;text-decoration:none;font-size:14px;font-weight:700;margin:0;padding:12px 25px;text-transform:capitalize;border-color:#e31c25\">Instagram</a></td></tr></table></div><div class=\"footer\" style=\"text-align:center;padding:10px 20px;border-radius:24px\"><p style=\"color:#000\">Need help? Contact us:<a href=\"https://t.me/thecommunebar\" style=\"color:#e31c25\">@thecommunebar</a></p></div><p class=\"details copyright\" style=\"color:#000;background-color:#f5f5f5;padding:20px;margin-top:20px;margin-bottom:20px;border-radius:24px;margin:0;box-sizing:border-box;text-align:center\">&copy; 2025 NO MORE SNOW Ltd. All Rights Reserved.</p></div></div><span style=\"opacity:0\">{{ randomness }}</span></body></html>\n`;\n// Функция для рендеринга шаблона с данными\nfunction renderTemplate(data) {\n  return Mustache.render(template, data);\n}\nexport { renderTemplate };\nexport default {\n  renderTemplate,\n};\n",
                "name": "templateEmail.js",
                "size": 3807,
                "type": "source"
              },
              {
                "path": "../../src/modules/events/controllers/utils/templateTicket.js",
                "relativePath": "modules/events/controllers/utils/templateTicket.js",
                "extension": ".js",
                "content": "import Mustache from 'mustache';\n// Шаблон HTML и CSS в одной строке\nconst template = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <style>\n      @media print {\n        body {-webkit-print-color-adjust: exact;}\n      }\n\n      body {\n          padding: 10%;\n          font-family: Arial,Helvetica,sans-serif\n      }\n      .ticket {\n           display: grid;\n           grid-template-columns: 100% 143px;\n           background: #f5f5f5;\n           border-radius: 48px;\n           cursor: default;\n      }\n      .ticket__main {\n           display: grid;\n           grid-template-columns: repeat(6, 1fr) 120px;\n           grid-template-rows: repeat(4, min-content) auto;\n           padding: 20px;\n      }\n      .header {\n           grid-area: title;\n           grid-column: span 7;\n           grid-row: 1;\n           display: flex;\n           align-items: center;\n           justify-content: center;\n           padding: 15px 20px 15px 20px;\n           width: 100%;\n           box-sizing: border-box;\n           background: #111;\n           border-radius: 24px 24px 0 0;\n      }\n      .header svg {\n          width: auto;\n          height: 48px;\n          margin-right: 8px;\n      }\n      .header p {\n          color: white;\n          border-radius: 48px;\n          padding: 5px 10px 5px 10px;\n          margin-left: auto;\n          line-height: 1;\n          font-weight: 400;\n          font-family: 'Helvetica Neue';\n          font-size: 10px;\n          text-transform: uppercase;\n      }\n      .header div {\n          color: white;\n          border-radius: 48px;\n          padding: 5px 10px 5px 10px;\n          margin-left: 0px;\n          line-height: 1;\n          text-transform: uppercase;\n          background: #E31C25;\n      }\n      .header  span {\n          display: block;\n      }\n      .info {\n           border: 1px solid;\n           border-width: 0 1px 1px 0;\n           border-color: rgba(0,0,0,0.1);\n           padding: 8px;\n      }\n       .info__item {\n           font-size: 9px;\n           margin-top: 4px;\n           text-transform: uppercase;\n           letter-spacing: 0.5px;\n           font-family: 'Helvetica Neue';\n      }\n      .info__detail {\n           font: 700 20px/1;\n           letter-spacing: 1px;\n           font-weight: 600;\n           text-transform: uppercase;\n           margin-top: 4px;\n           color: #e31c25;\n      }\n      .passenger {\n           grid-column: 1 / span 6;\n      }\n      .platform {\n           grid-column: 7 / span 1;\n           grid-row: 2 / span 3;\n           background: #e31c25;\n           color: #fff;\n           border-color: rgba(0,0,0,0.1);\n           text-align: center;\n           padding: 10px;\n           border-radius: 0 0 24px 0;\n           font-size: 18px;\n           line-height: 1;\n      }\n      .platform img {\n           width: 100%;\n           padding: 10%;\n           box-sizing: border-box;\n      }\n       .departure, .arrival {\n           grid-column-start: span 3;\n      }\n       .passenger, .departure, .date {\n           border-left: 1px solid;\n           border-color: rgba(0,0,0,0.1);\n      }\n       .date, .time {\n           grid-column-start: span 3;\n      }\n       .date {\n          border-radius: 0 0 0 24px;\n      }\n    </style>\n</head>\n<body>\n  <div class=\"main-content\">\n    <div class=\"ticket\">\n      <div class=\"ticket__main\">\n        <div class=\"header\">\n         <svg class=\"w-auto h-3r\" width=\"838\" height=\"259\" viewBox=\"0 0 838 259\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M118.019 23.4448C118.019 21.1861 119.85 19.355 122.109 19.355H135.784C138.043 19.355 139.874 21.1861 139.874 23.4448V129.185H118.019V23.4448Z\" fill=\"#E31C25\"/>\n          <path d=\"M90.5875 52.6748C89.338 51.9401 88.5708 50.5988 88.5708 49.1494L88.5708 36.7835C88.5708 33.6207 92.0073 31.6548 94.7338 33.2581L118.019 46.9512L118.019 68.8062L90.5875 52.6748Z\" fill=\"#E31C25\"/>\n          <path d=\"M167.306 52.6748C168.556 51.9401 169.323 50.5988 169.323 49.1494L169.323 36.7835C169.323 33.6207 165.886 31.6548 163.16 33.2581L139.874 46.9512L139.874 68.8062L167.306 52.6748Z\" fill=\"#E31C25\"/>\n          <path d=\"M139.917 234.911C139.917 237.169 138.085 239 135.827 239L122.151 239C119.893 239 118.062 237.169 118.062 234.911L118.062 129.17L139.917 129.17L139.917 234.911Z\" fill=\"#E31C25\"/>\n          <path d=\"M167.349 205.681C168.598 206.415 169.365 207.757 169.365 209.206L169.365 221.572C169.365 224.735 165.929 226.701 163.202 225.097L139.917 211.404L139.917 189.549L167.349 205.681Z\" fill=\"#E31C25\"/>\n          <path d=\"M90.6295 205.681C89.38 206.415 88.6128 207.757 88.6128 209.206L88.6128 221.572C88.6128 224.735 92.0493 226.701 94.7758 225.097L118.061 211.404L118.061 189.549L90.6295 205.681Z\" fill=\"#E31C25\"/>\n          <path d=\"M31.9262 85.7934C29.97 84.6641 29.2998 82.1628 30.4292 80.2066L37.2668 68.3635C38.3962 66.4074 40.8975 65.7371 42.8536 66.8665L134.428 119.737L123.5 138.664L31.9262 85.7934Z\" fill=\"#E31C25\"/>\n          <path d=\"M43.524 124.165C42.263 124.88 40.7178 124.874 39.4626 124.149L28.7535 117.966C26.0143 116.385 26.0301 112.426 28.7818 110.866L52.2832 97.5468L71.2102 108.474L43.524 124.165Z\" fill=\"#E31C25\"/>\n          <path d=\"M81.8838 57.7248C81.8722 56.2753 81.0943 54.9403 79.839 54.2155L69.1299 48.0326C66.3908 46.4512 62.97 48.4444 62.9953 51.6072L63.2111 78.6197L82.138 89.5472L81.8838 57.7248Z\" fill=\"#E31C25\"/>\n          <path d=\"M226.01 172.563C227.966 173.692 228.636 176.193 227.507 178.149L220.669 189.992C219.54 191.949 217.039 192.619 215.082 191.489L123.508 138.619L134.436 119.692L226.01 172.563Z\" fill=\"#E31C25\"/>\n          <path d=\"M214.412 134.191C215.673 133.476 217.218 133.482 218.473 134.207L229.182 140.39C231.921 141.971 231.905 145.93 229.154 147.49L205.652 160.809L186.725 149.882L214.412 134.191Z\" fill=\"#E31C25\"/>\n          <path d=\"M176.052 200.631C176.064 202.081 176.842 203.416 178.097 204.14L188.806 210.323C191.545 211.905 194.966 209.912 194.941 206.749L194.725 179.736L175.798 168.809L176.052 200.631Z\" fill=\"#E31C25\"/>\n          <path d=\"M42.8744 191.526C40.9183 192.656 38.417 191.986 37.2876 190.029L30.45 178.186C29.3206 176.23 29.9908 173.729 31.9469 172.599L123.521 119.729L134.448 138.656L42.8744 191.526Z\" fill=\"#E31C25\"/>\n          <path d=\"M81.9048 200.668C81.8932 202.117 81.1153 203.452 79.86 204.177L69.1509 210.36C66.4118 211.941 62.991 209.948 63.0163 206.785L63.232 179.773L82.159 168.845L81.9048 200.668Z\" fill=\"#E31C25\"/>\n          <path d=\"M43.5455 134.227C42.2845 133.513 40.7393 133.519 39.484 134.243L28.7749 140.426C26.0358 142.008 26.0516 145.967 28.8033 147.526L52.3047 160.846L71.2316 149.918L43.5455 134.227Z\" fill=\"#E31C25\"/>\n          <path d=\"M215.061 66.8296C217.017 65.7002 219.519 66.3704 220.648 68.3266L227.486 80.1697C228.615 82.1258 227.945 84.6271 225.989 85.7565L134.415 138.627L123.487 119.7L215.061 66.8296Z\" fill=\"#E31C25\"/>\n          <path d=\"M176.031 57.6877C176.042 56.2382 176.82 54.9032 178.076 54.1784L188.785 47.9955C191.524 46.4141 194.945 48.4073 194.919 51.5701L194.703 78.5826L175.777 89.5101L176.031 57.6877Z\" fill=\"#E31C25\"/>\n          <path d=\"M214.39 124.128C215.651 124.843 217.196 124.837 218.452 124.112L229.161 117.929C231.9 116.348 231.884 112.389 229.132 110.829L205.631 97.5097L186.704 108.437L214.39 124.128Z\" fill=\"#E31C25\"/>\n          <path d=\"M129 116.049L140.216 122.524V135.476L129 141.951L117.784 135.476V122.524L129 116.049Z\" fill=\"#E31C25\"/>\n          <path d=\"M820.446 72.9078V76.2201H822.534C823.443 76.2201 824.12 76.0902 824.566 75.8304C825.03 75.552 825.262 75.0974 825.262 74.4665C825.262 73.9284 825.057 73.5387 824.649 73.2975C824.26 73.0377 823.749 72.9078 823.118 72.9078H820.446ZM818.609 82.9836V71.2378H823.063C825.753 71.2378 827.099 72.3419 827.099 74.55C827.099 75.1067 827.015 75.5799 826.848 75.9695C826.7 76.3592 826.486 76.6839 826.208 76.9437C825.93 77.2035 825.605 77.4076 825.234 77.5561C824.881 77.686 824.501 77.7787 824.093 77.8344L827.46 82.9836H825.234L821.866 77.8901H820.446V82.9836H818.609ZM830.494 77.1107C830.494 75.9788 830.281 74.9119 829.854 73.9099C829.427 72.9078 828.852 72.0357 828.128 71.2935C827.405 70.5513 826.551 69.9667 825.568 69.54C824.584 69.0946 823.536 68.8719 822.423 68.8719C821.309 68.8719 820.261 69.0946 819.277 69.54C818.294 69.9667 817.44 70.5513 816.717 71.2935C815.993 72.0357 815.418 72.9078 814.991 73.9099C814.564 74.9119 814.351 75.9788 814.351 77.1107C814.351 78.2426 814.564 79.3096 814.991 80.3116C815.418 81.3136 815.993 82.1857 816.717 82.928C817.44 83.6702 818.294 84.264 819.277 84.7093C820.261 85.1361 821.309 85.3495 822.423 85.3495C823.536 85.3495 824.584 85.1361 825.568 84.7093C826.551 84.264 827.405 83.6702 828.128 82.928C828.852 82.1857 829.427 81.3136 829.854 80.3116C830.281 79.3096 830.494 78.2426 830.494 77.1107ZM812.347 77.1107C812.347 75.719 812.607 74.4109 813.126 73.1862C813.664 71.9615 814.388 70.8945 815.297 69.9853C816.206 69.0761 817.273 68.3617 818.498 67.8421C819.723 67.304 821.031 67.0349 822.423 67.0349C823.814 67.0349 825.122 67.304 826.347 67.8421C827.572 68.3617 828.639 69.0761 829.548 69.9853C830.457 70.8945 831.172 71.9615 831.691 73.1862C832.229 74.4109 832.498 75.719 832.498 77.1107C832.498 78.5024 832.229 79.8106 831.691 81.0353C831.172 82.26 830.457 83.3269 829.548 84.2362C828.639 85.1454 827.572 85.8691 826.347 86.4072C825.122 86.9268 823.814 87.1865 822.423 87.1865C821.031 87.1865 819.723 86.9268 818.498 86.4072C817.273 85.8691 816.206 85.1454 815.297 84.2362C814.388 83.3269 813.664 82.26 813.126 81.0353C812.607 79.8106 812.347 78.5024 812.347 77.1107Z\" fill=\"#FFFFFF\"/>\n          <path d=\"M282.366 171.672C281.589 171.672 281.201 171.197 281.201 170.248V88.3279C281.201 87.3788 281.589 86.9043 282.366 86.9043H297.249C297.939 86.9043 298.37 87.2494 298.543 87.9396L310.32 130.647C310.924 132.804 311.528 135.22 312.132 137.894C312.822 140.569 313.469 143.287 314.073 146.047C314.763 148.722 315.281 151.095 315.626 153.165H315.885C315.798 151.44 315.669 149.455 315.496 147.212C315.41 144.883 315.281 142.51 315.108 140.094C315.022 137.592 314.936 135.22 314.849 132.976C314.849 130.647 314.849 128.619 314.849 126.894V88.1985C314.849 87.3357 315.238 86.9043 316.014 86.9043H326.497C327.273 86.9043 327.662 87.3357 327.662 88.1985V170.248C327.662 171.197 327.273 171.672 326.497 171.672H311.743C311.139 171.672 310.708 171.37 310.449 170.766L298.672 128.965C297.551 124.91 296.559 120.898 295.696 116.929C294.833 112.874 294.056 109.121 293.366 105.67H293.107C293.28 108.172 293.409 111.105 293.496 114.47C293.668 117.835 293.798 121.2 293.884 124.564C293.97 127.843 294.013 130.733 294.013 133.235V170.248C294.013 171.197 293.668 171.672 292.978 171.672H282.366ZM354.879 172.448C347.201 172.448 341.334 170.205 337.279 165.719C333.31 161.232 331.326 154.546 331.326 145.659V113.046C331.326 104.074 333.31 97.3439 337.279 92.8575C341.334 88.371 347.201 86.1278 354.879 86.1278C362.472 86.1278 368.295 88.371 372.351 92.8575C376.406 97.3439 378.433 104.074 378.433 113.046V145.659C378.433 154.546 376.406 161.232 372.351 165.719C368.295 170.205 362.472 172.448 354.879 172.448ZM354.879 160.024C358.244 160.024 360.746 158.86 362.385 156.53C364.111 154.201 364.974 150.361 364.974 145.012V113.693C364.974 108.258 364.111 104.375 362.385 102.046C360.746 99.7165 358.244 98.5518 354.879 98.5518C351.515 98.5518 348.969 99.7165 347.244 102.046C345.605 104.375 344.785 108.258 344.785 113.693V145.012C344.785 150.361 345.605 154.201 347.244 156.53C348.969 158.86 351.515 160.024 354.879 160.024ZM391.969 171.672C391.193 171.672 390.804 171.197 390.804 170.248L391.84 88.3279C391.84 87.3788 392.271 86.9043 393.134 86.9043H407.24C408.103 86.9043 408.578 87.2494 408.664 87.9396L420.441 133.365L432.347 87.9396C432.433 87.2494 432.908 86.9043 433.771 86.9043H447.877C448.653 86.9043 449.042 87.3788 449.042 88.3279L450.206 170.248C450.206 171.197 449.818 171.672 449.042 171.672H438.041C437.265 171.672 436.877 171.197 436.877 170.248L436.488 128.317C436.402 124.521 436.402 120.941 436.488 117.576C436.661 114.125 436.833 110.976 437.006 108.129H436.877C436.273 110.803 435.582 113.521 434.806 116.282C434.029 118.956 433.21 121.631 432.347 124.306L421.994 159.766C421.821 160.456 421.39 160.801 420.7 160.801H420.182C419.578 160.801 419.19 160.456 419.017 159.766L408.534 124.306C407.672 121.631 406.852 118.956 406.076 116.282C405.385 113.521 404.738 110.803 404.134 108.129H403.875C404.134 110.976 404.307 114.125 404.393 117.576C404.566 120.941 404.609 124.521 404.523 128.317L404.134 170.248C404.134 171.197 403.746 171.672 402.97 171.672H391.969ZM476.51 172.448C468.832 172.448 462.965 170.205 458.91 165.719C454.941 161.232 452.957 154.546 452.957 145.659V113.046C452.957 104.074 454.941 97.3439 458.91 92.8575C462.965 88.371 468.832 86.1278 476.51 86.1278C484.103 86.1278 489.926 88.371 493.981 92.8575C498.036 97.3439 500.064 104.074 500.064 113.046V145.659C500.064 154.546 498.036 161.232 493.981 165.719C489.926 170.205 484.103 172.448 476.51 172.448ZM476.51 160.024C479.875 160.024 482.377 158.86 484.016 156.53C485.742 154.201 486.605 150.361 486.605 145.012V113.693C486.605 108.258 485.742 104.375 484.016 102.046C482.377 99.7165 479.875 98.5518 476.51 98.5518C473.145 98.5518 470.6 99.7165 468.875 102.046C467.235 104.375 466.416 108.258 466.416 113.693V145.012C466.416 150.361 467.235 154.201 468.875 156.53C470.6 158.86 473.145 160.024 476.51 160.024ZM504.8 171.672C504.023 171.672 503.635 171.197 503.635 170.248V88.3279C503.635 87.3788 504.023 86.9043 504.8 86.9043H522.4C530.597 86.9043 536.593 88.8887 540.389 92.8575C544.185 96.7399 546.084 102.909 546.084 111.364C546.084 117.662 545.178 122.709 543.366 126.506C541.64 130.216 539.138 132.847 535.86 134.4L535.73 134.529L549.19 169.989C549.448 171.111 549.103 171.672 548.154 171.672H535.989C535.385 171.672 534.954 171.37 534.695 170.766L523.048 137.118H517.224V170.248C517.224 171.197 516.836 171.672 516.059 171.672H504.8ZM517.224 125.6H522.53C526.067 125.6 528.612 124.478 530.165 122.235C531.718 119.992 532.495 116.584 532.495 112.011C532.495 107.525 531.675 104.289 530.036 102.305C528.397 100.234 525.808 99.1988 522.271 99.1988H517.224V125.6ZM551.539 171.672C550.676 171.672 550.245 171.197 550.245 170.248V88.3279C550.245 87.3788 550.633 86.9043 551.41 86.9043H585.835C586.611 86.9043 586.999 87.3788 586.999 88.3279V97.7753C586.999 98.7243 586.611 99.1988 585.835 99.1988H563.834V122.753H583.893C584.67 122.753 585.058 123.227 585.058 124.176V133.106C585.058 134.055 584.67 134.529 583.893 134.529H563.834V159.377H585.835C586.611 159.377 586.999 159.852 586.999 160.801V170.248C586.999 171.197 586.611 171.672 585.835 171.672H551.539ZM618.357 172.448C613.181 172.448 608.996 171.413 605.804 169.342C602.698 167.272 600.498 164.381 599.204 160.672C597.996 156.962 597.608 152.605 598.039 147.6C598.125 146.565 598.514 146.047 599.204 146.047H610.204C610.981 146.047 611.326 146.522 611.24 147.471C610.808 151.699 611.24 154.934 612.534 157.177C613.828 159.334 615.899 160.413 618.746 160.413C621.334 160.413 623.232 159.636 624.44 158.083C625.734 156.53 626.381 154.071 626.381 150.706C626.381 147.773 625.907 145.314 624.958 143.33C624.095 141.259 622.628 139.447 620.557 137.894L609.687 129.353C605.804 126.333 602.914 123.098 601.016 119.647C599.118 116.109 598.212 111.752 598.298 106.576C598.384 100.105 600.11 95.1007 603.475 91.5633C606.839 87.9396 611.757 86.1278 618.228 86.1278C625.648 86.1278 631.083 88.2416 634.534 92.4692C637.986 96.6968 639.366 102.607 638.676 110.199C638.589 111.407 638.201 112.011 637.511 112.011H626.381C625.518 112.011 625.173 111.407 625.346 110.199C625.691 106.576 625.303 103.685 624.181 101.528C623.06 99.2851 621.248 98.1635 618.746 98.1635C616.589 98.1635 614.906 98.8537 613.698 100.234C612.491 101.615 611.843 103.772 611.757 106.705C611.757 109.552 612.275 111.925 613.31 113.823C614.432 115.721 616.028 117.447 618.099 119L628.581 127.153C631.428 129.223 633.672 131.38 635.311 133.624C636.95 135.78 638.115 138.239 638.805 141C639.582 143.675 639.927 146.867 639.84 150.577C639.84 157.479 638.115 162.872 634.664 166.754C631.213 170.55 625.777 172.448 618.357 172.448ZM643.341 171.672C642.564 171.672 642.176 171.197 642.176 170.248V88.3279C642.176 87.3788 642.564 86.9043 643.341 86.9043H658.224C658.914 86.9043 659.345 87.2494 659.518 87.9396L671.295 130.647C671.899 132.804 672.503 135.22 673.106 137.894C673.797 140.569 674.444 143.287 675.048 146.047C675.738 148.722 676.256 151.095 676.601 153.165H676.86C676.773 151.44 676.644 149.455 676.471 147.212C676.385 144.883 676.256 142.51 676.083 140.094C675.997 137.592 675.911 135.22 675.824 132.976C675.824 130.647 675.824 128.619 675.824 126.894V88.1985C675.824 87.3357 676.212 86.9043 676.989 86.9043H687.472C688.248 86.9043 688.636 87.3357 688.636 88.1985V170.248C688.636 171.197 688.248 171.672 687.472 171.672H672.718C672.114 171.672 671.683 171.37 671.424 170.766L659.647 128.965C658.526 124.91 657.533 120.898 656.671 116.929C655.808 112.874 655.031 109.121 654.341 105.67H654.082C654.255 108.172 654.384 111.105 654.471 114.47C654.643 117.835 654.773 121.2 654.859 124.564C654.945 127.843 654.988 130.733 654.988 133.235V170.248C654.988 171.197 654.643 171.672 653.953 171.672H643.341ZM715.854 172.448C708.176 172.448 702.309 170.205 698.254 165.719C694.285 161.232 692.301 154.546 692.301 145.659V113.046C692.301 104.074 694.285 97.3439 698.254 92.8575C702.309 88.371 708.176 86.1278 715.854 86.1278C723.447 86.1278 729.27 88.371 733.325 92.8575C737.38 97.3439 739.408 104.074 739.408 113.046V145.659C739.408 154.546 737.38 161.232 733.325 165.719C729.27 170.205 723.447 172.448 715.854 172.448ZM715.854 160.024C719.219 160.024 721.721 158.86 723.36 156.53C725.086 154.201 725.949 150.361 725.949 145.012V113.693C725.949 108.258 725.086 104.375 723.36 102.046C721.721 99.7165 719.219 98.5518 715.854 98.5518C712.489 98.5518 709.944 99.7165 708.219 102.046C706.579 104.375 705.76 108.258 705.76 113.693V145.012C705.76 150.361 706.579 154.201 708.219 156.53C709.944 158.86 712.489 160.024 715.854 160.024ZM752.706 171.672C752.016 171.672 751.628 171.284 751.542 170.507L737.824 88.4573C737.651 87.422 737.953 86.9043 738.73 86.9043H749.989C750.765 86.9043 751.24 87.2926 751.412 88.0691L757.365 127.8C757.797 130.992 758.142 134.184 758.401 137.377C758.746 140.483 759.005 143.675 759.177 146.953C759.436 150.146 759.609 153.381 759.695 156.66H759.954C760.385 153.726 760.817 150.793 761.248 147.859C761.679 144.84 762.154 141.906 762.672 139.059L768.754 105.54L765.907 90.2691C765.648 89.1475 765.95 88.5867 766.813 88.5867H777.813C778.59 88.5867 779.021 88.975 779.107 89.7515L786.484 138.541C786.915 141.561 787.304 144.581 787.649 147.6C788.08 150.62 788.425 153.64 788.684 156.66H788.943C789.116 153.295 789.288 150.059 789.461 146.953C789.633 143.847 789.849 140.698 790.108 137.506C790.453 134.227 790.841 130.863 791.273 127.412L797.096 88.0691C797.183 87.2926 797.571 86.9043 798.261 86.9043H809.65C810.426 86.9043 810.728 87.422 810.556 88.4573L796.837 170.507C796.751 171.284 796.363 171.672 795.673 171.672H782.86C781.998 171.672 781.523 171.284 781.437 170.507L776.907 140.871C776.476 138.196 776.088 135.522 775.743 132.847C775.397 130.086 775.052 127.368 774.707 124.694H774.448C774.017 127.368 773.586 130.043 773.154 132.718C772.723 135.392 772.291 138.11 771.86 140.871L766.554 170.507C766.468 170.939 766.295 171.24 766.036 171.413C765.864 171.586 765.648 171.672 765.389 171.672H752.706Z\" fill=\"#FFFFFF\"/>\n        </svg>\n          <p>Valid for a single entry only</p>\n          <div>\n            <span style=\"text-wrap: nowrap;\">DIGITAL TICKET</span>\n          </div>\n        </div>\n        <div class=\"info passenger\">\n          <div class=\"info__item\">Customer</div>\n          <div class=\"info__detail\">{{clientName}}</div>\n        </div>\n        <div class=\"info platform\">\n          <span>SHOW </span><span>THIS </span><span>QR CODE</span>\n          <img src=\"{{qrCode}}\" alt=\"QR Code\" />\n        </div>\n        <div class=\"info departure\">\n          <div class=\"info__item\">Location</div>\n          <div class=\"info__detail\">{{eventLocation}} | {{eventSeat}}</div>\n        </div>\n        <div class=\"info arrival\">\n          <div class=\"info__item\">Event</div>\n          <div class=\"info__detail\">{{eventName}}</div>\n        </div>\n        <div class=\"info date\">\n          <div class=\"info__item\">Date</div>\n          <div class=\"info__detail\">{{eventDate}}</div>\n        </div>\n        <div class=\"info time\">\n          <div class=\"info__item\">Time</div>\n          <div class=\"info__detail\">{{eventTime}}</div>\n        </div>\n      </div>\n    </div>\n  </div>\n</body>\n</html>\n`;\n// Функция для рендеринга шаблона с данными\nfunction renderTemplate(data) {\n  return Mustache.render(template, data);\n}\nexport { renderTemplate };\nexport default {\n  renderTemplate,\n};\n",
                "name": "templateTicket.js",
                "size": 20826,
                "type": "source"
              }
            ]
          }
        },
        "_files": [
          {
            "path": "../../src/modules/events/events.client.js",
            "relativePath": "modules/events/events.client.js",
            "extension": ".js",
            "content": "// Store\nimport * as storeEvents from './store/events.js';\n\n// Router\nimport { createEventRoutes } from './router/events.js';\n\n// Views\nimport CardEvent from './components/blocks/CardEvent.vue';\nimport EventsLayout from './components/layouts/layoutEvents.vue';\nimport EditEvent from './components/pages/EditEvent.vue';\nimport Event from './components/pages/Event.vue';\nimport EventsPage from './components/pages/Events.vue';\nimport FeaturedEvents from './components/sections/FeaturedEvents.vue';\nimport Feed from './components/sections/Feed.vue';\nimport List from './components/sections/List.vue';\n\n// Пример функции инициализации для модуля событий\nfunction initializeEvents(app, store, router, options = {}) {\n  const route = options.route || 'Home';\n\n  const routesEvents = createEventRoutes('', options);\n\n  router.addRoute(route, routesEvents);\n  router.addRoute('Backoffice Root', createEventRoutes('Backoffice', options));\n\n  store.addStore('events', storeEvents);\n}\n\nconst ModuleEvents = {\n  initialize: initializeEvents,\n  views: {\n    store: {\n      storeEvents,\n    },\n    router: {\n      createEventRoutes,\n    },\n    components: {\n      // Blocks\n      CardEvent,\n      // Sections\n      Feed,\n      List,\n      FeaturedEvents,\n      // Layouts\n      EventsLayout,\n      // Pages\n      EditEvent,\n      Event,\n      EventsPage,\n    },\n  },\n};\n\nexport {\n  // Blocks\n  CardEvent,\n  createEventRoutes,\n  EditEvent,\n  Event,\n  EventsLayout,\n  EventsPage,\n  FeaturedEvents,\n  Feed,\n  initializeEvents,\n  List,\n  storeEvents,\n};\n\nexport default ModuleEvents;\n",
            "name": "events.client.js",
            "size": 1566,
            "type": "source"
          },
          {
            "path": "../../src/modules/events/events.server.js",
            "relativePath": "modules/events/events.server.js",
            "extension": ".js",
            "content": "import EventsController from './controllers/events.controller.js';\nimport TicketsController from './controllers/tickets.controller.js';\nimport createEventModel from './models/event.model.js';\nimport createTicketModel from './models/ticket.model.js';\nimport eventsRoutes from './routes/events.routes.js';\nimport ticketsRoutes from './routes/tickets.routes.js';\nfunction initializeEvent(app, db, origins, publicPath, options = {}) {\n  console.log('initializeEvent publicPath:', publicPath);\n  // Получаем дополнительные поля для моделей из options\n  const { eventFields = {}, ticketFields = {} } = options;\n  console.log('new fields is', eventFields);\n  // Инициализируем модели с дополнительными полями\n  db.event = createEventModel(db, eventFields);\n  db.ticket = createTicketModel(db, ticketFields);\n  // Настраиваем маршруты, если объект приложения передан\n  if (app) {\n    eventsRoutes(app, db, origins, publicPath);\n    ticketsRoutes(app, db, origins, publicPath);\n  }\n}\nexport const models = {\n  EventModel: createEventModel,\n  TicketModel: createTicketModel,\n};\nexport const routes = {\n  eventsRoutes,\n  ticketsRoutes,\n};\nexport const controllers = {\n  EventsController,\n  TicketsController,\n};\nexport { initializeEvent as initialize };\nexport default {\n  initialize: initializeEvent,\n  models,\n  routes,\n  controllers,\n};\n",
            "name": "events.server.js",
            "size": 1329,
            "type": "source"
          }
        ],
        "middlewares": {
          "server": {
            "_files": [
              {
                "path": "../../src/modules/events/middlewares/server/index.js",
                "relativePath": "modules/events/middlewares/server/index.js",
                "extension": ".js",
                "content": "import verifyEventModule from './verifyEvent.js';\n\nconst middlewareIndexFactory = db => {\n  const verifyEvent = verifyEventModule(db);\n  \n  return {\n    verifyEvent,\n  };\n};\n\nexport default middlewareIndexFactory;",
                "name": "index.js",
                "size": 213,
                "type": "source"
              },
              {
                "path": "../../src/modules/events/middlewares/server/verifyEvent.js",
                "relativePath": "modules/events/middlewares/server/verifyEvent.js",
                "extension": ".js",
                "content": "// middlewareFactory.js\nconst middlewareFactory = db => {\n  const Event = db.event; // Изменено с Blogpost на Event\n  const checkEventExistOrNot = async (req, res, next) => {\n    try {\n      // Обработка URL\n      const url = req.body.url\n        ? req.body.url\n        : req.body.name\n            .toLowerCase()\n            .replace(/ /g, '-')\n            .replace(/[^\\w-]+/g, '');\n      // Создание события\n      if (!req.body._id) {\n        // Логика создания события может отличаться от логики создания блога\n        const event = await Event.findOne({ url }); // Изменено с Blogpost на Event\n        if (event) {\n          // Изменено с blogpost на event\n          res.status(400).send({ errorCode: 'EVENT_URL_ALREADY_IN_USE', accessToken: null }); // Изменено с POST_URL_ALREADY_IN_USE на EVENT_URL_ALREADY_IN_USE\n          return;\n        }\n        next();\n        return;\n      }\n      // Обновление события\n      const updatingEventId = req.body._id; // Изменено с updatingBlogpostId на updatingEventId\n      const existingEvent = await Event.findById(updatingEventId); // Изменено с Blogpost на Event и с existingBlogpost на existingEvent\n      if (!existingEvent) {\n        // Изменено с existingBlogpost на existingEvent\n        res.status(404).send({ errorCode: 'EVENT_NOT_FOUND', accessToken: null }); // Изменено с BLOGPOST_NOT_FOUND на EVENT_NOT_FOUND\n        return;\n      }\n      if (existingEvent.url !== url) {\n        // Изменено с existingBlogpost на existingEvent\n        const event = await Event.findOne({ url }); // Изменено с Blogpost на Event и с blogpost на event\n        if (event) {\n          // Изменено с blogpost на event\n          res.status(400).send({ errorCode: 'EVENT_URL_ALREADY_IN_USE', accessToken: null }); // Изменено с POST_URL_ALREADY_IN_USE на EVENT_URL_ALREADY_IN_USE\n          return;\n        }\n      }\n      next();\n    } catch (err) {\n      console.log(err);\n      res.status(500).send({ message: err });\n    }\n  };\n  const checkNameNotEmpty = (req, res, next) => {\n    if (!req.body.name || req.body.name.trim() === '') {\n      res.status(400).send({ errorCode: 'NAME_CANNOT_BE_EMPTY', accessToken: null });\n      return;\n    }\n    next();\n  };\n  return {\n    checkEventExistOrNot, // Изменено с checkBlogpostExistOrNot на checkEventExistOrNot\n    checkNameNotEmpty,\n  };\n};\nexport default middlewareFactory;\n",
                "name": "verifyEvent.js",
                "size": 2361,
                "type": "source"
              }
            ]
          }
        },
        "models": {
          "_files": [
            {
              "path": "../../src/modules/events/models/event.model.js",
              "relativePath": "modules/events/models/event.model.js",
              "extension": ".js",
              "content": "import applyCommonSchema from '@martyrs/src/modules/globals/models/schemas/common.schema.js';\nimport applyEngagementSchema from '@martyrs/src/modules/globals/models/schemas/engagement.schema.js';\nimport applyMetadataSchema from '@martyrs/src/modules/globals/models/schemas/metadata.schema.js';\nimport applyOwnershipSchema from '@martyrs/src/modules/globals/models/schemas/ownership.schema.js';\nexport default (db, additionalFields = {}) => {\n  const baseSchema = {\n    cover: {\n      type: String,\n    },\n    name: {\n      type: String,\n      required: true,\n    },\n    description: {\n      type: String,\n      required: true,\n    },\n    location: {\n      type: String,\n    },\n    content: {\n      type: Array,\n    },\n    date: {\n      start: {\n        type: Date,\n        required: true,\n      },\n      end: {\n        type: Date,\n      },\n    },\n    ticketsTypes: {\n      type: Array,\n    },\n    // ticketsTypes: [{\n    //     image: String,\n    //     link: String,\n    //     price: Number,\n    //     name: String,\n    //     buttonText: String\n    //     stripeProductId\n    //     stripePriceId\n    //     stripePaymentLinkId\n    // }]\n  };\n  const EventSchema = new db.mongoose.Schema(\n    {\n      ...baseSchema,\n      ...additionalFields,\n    },\n    {\n      timestamps: {\n        currentTime: () => Date.now(),\n      },\n    }\n  );\n  EventSchema.index({\n    name: 1,\n    'date.start': 1,\n    'date.end': -1,\n  });\n  applyCommonSchema(EventSchema, db);\n  applyEngagementSchema(EventSchema, db);\n  applyOwnershipSchema(EventSchema, db);\n  applyMetadataSchema(EventSchema, db);\n  return db.mongoose.model('Event', EventSchema);\n};\n",
              "name": "event.model.js",
              "size": 1635,
              "type": "source"
            },
            {
              "path": "../../src/modules/events/models/ticket.model.js",
              "relativePath": "modules/events/models/ticket.model.js",
              "extension": ".js",
              "content": "export default db => {\n  const TicketSchema = new db.mongoose.Schema(\n    {\n      client: {\n        type: db.mongoose.Schema.Types.ObjectId,\n        ref: 'Client',\n      },\n      client_refactor: {\n        email: {\n          type: String,\n        },\n        name: {\n          type: String,\n        },\n      },\n      seat: {\n        type: String,\n      },\n      price: {\n        type: Number,\n      },\n      user: {\n        type: db.mongoose.Schema.Types.ObjectId,\n        ref: 'User',\n      },\n      type: {\n        type: String,\n        enum: ['event', 'parking'],\n        default: 'event',\n        required: true,\n      },\n      target: {\n        type: db.mongoose.Schema.Types.ObjectId,\n        ref: function (value) {\n          if (this.type === 'event') return 'Event';\n          if (this.type === 'parking') return 'Parking';\n        },\n        required: true,\n      },\n      role: {\n        type: String,\n        default: 'participant',\n      },\n      qrcode: {\n        type: String,\n      },\n      image: {\n        type: String,\n      },\n      status: {\n        type: String,\n        enum: ['unused', 'used', 'deactivated'],\n        deafult: 'unused',\n      },\n    },\n    {\n      timestamps: {\n        currentTime: () => Date.now(),\n      },\n    }\n  );\n  TicketSchema.index({ user: 1, type: 1, target: 1 });\n  const Ticket = db.mongoose.model('Ticket', TicketSchema);\n  return Ticket;\n};\n",
              "name": "ticket.model.js",
              "size": 1396,
              "type": "source"
            }
          ]
        },
        "router": {
          "_files": [
            {
              "path": "../../src/modules/events/router/events.js",
              "relativePath": "modules/events/router/events.js",
              "extension": ".js",
              "content": "import { defineAsyncComponent } from 'vue';\n\nimport * as validationAuth from '@martyrs/src/modules/auth/views/middlewares/auth.validation.js';\n\nexport function createEventRoutes(prefix = '', options = {}) {\n  const nameWithPrefix = name => (prefix ? `${prefix}${name}` : name);\n\n  const routes = {\n    path: options.basePath || 'events',\n    meta: {\n      title: {\n        en: 'Events',\n        ru: 'События',\n      },\n      title_hide: true,\n    },\n    children: [\n      {\n        path: '',\n        name: nameWithPrefix('Events'),\n        meta: {\n          title: {\n            en: 'Events',\n            ru: 'События',\n          },\n          title_hide: true,\n        },\n        component: () => import(/* webpackChunkName: 'Events' */ '../components/pages/Events.vue'),\n      },\n      {\n        path: 'search',\n        name: nameWithPrefix('Events Search'),\n        meta: {\n          title: {\n            en: 'Events',\n            ru: 'События',\n          },\n          title_hide: true,\n        },\n        component: () => import(/* webpackChunkName: 'Events' */ '../components/pages/EventsSearch.vue'),\n      },\n      {\n        path: 'backoffice',\n        name: nameWithPrefix('Events Backoffice'),\n        meta: {\n          title: {\n            en: 'Manage Events',\n            ru: 'Управление Событиями',\n          },\n          title_hide: false,\n        },\n\n        component: () => import(/* webpackChunkName: 'Events' */ '../components/pages/EventsBackoffice.vue'),\n      },\n      {\n        path: 'create',\n        name: nameWithPrefix('Create Event'),\n        meta: {\n          title: {\n            en: 'Create Event',\n            ru: 'Создать Событие',\n          },\n          title_hide: false,\n        },\n        beforeEnter: [validationAuth.requiresAuth],\n        component: () => import(/* webpackChunkName: 'Events' */ '../components/pages/EditEvent.vue'),\n      },\n      {\n        path: ':url',\n        name: nameWithPrefix('Event'),\n        meta: {\n          title: {\n            en: 'Event',\n            ru: 'Событие',\n          },\n          title_hide: false,\n        },\n        component: options.page_event || defineAsyncComponent(() => import(/* webpackChunkName: 'Events' */ '../components/pages/Event.vue')),\n      },\n      {\n        path: ':url/edit',\n        name: nameWithPrefix('Edit Event'),\n        meta: {\n          title: {\n            en: 'Edit Event',\n            ru: 'Редактировать Событие',\n          },\n          title_hide: false,\n        },\n        beforeEnter: [validationAuth.requiresAuth],\n        component: options.page_event_edit || defineAsyncComponent(() => import(/* webpackChunkName: 'Events' */ '../components/pages/EditEvent.vue')),\n      },\n      {\n        path: ':url/edit/tickets',\n        name: nameWithPrefix('Edit Event Tickets'),\n        meta: {\n          title: {\n            en: 'Event Tickets',\n            ru: 'Билеты События',\n          },\n          title_hide: false,\n        },\n        beforeEnter: [validationAuth.requiresAuth],\n        component: () => import(/* webpackChunkName: 'Events' */ '../components/pages/EditEventTickets.vue'),\n      },\n    ],\n  };\n\n  return routes;\n}\n",
              "name": "events.js",
              "size": 3145,
              "type": "source"
            }
          ]
        },
        "routes": {
          "_files": [
            {
              "path": "../../src/modules/events/routes/events.routes.js",
              "relativePath": "modules/events/routes/events.routes.js",
              "extension": ".js",
              "content": "import middlewareFactoryAuth from '@martyrs/src/modules/auth/controllers/middlewares/index.js';\nimport globalsabac from '@martyrs/src/modules/globals/controllers/classes/globals.abac.js';\nimport controllerFactory from '../controllers/events.controller.js';\nimport middlewareFactoryEvents from '../middlewares/server/index.js';\n// ABAC\nconst { getInstance } = globalsabac;\nexport default (function (app, db, origins) {\n  const controller = controllerFactory(db);\n  const abac = getInstance(db);\n  const { authJwt } = middlewareFactoryAuth(db);\n  const { verifyEvent } = middlewareFactoryEvents(db);\n  app.get(\n    '/api/events/read',\n    [\n      authJwt.verifyToken(true),\n      abac.middleware('events', 'read', {\n        allowPublished: true,\n        allowUnauthenticated: true,\n      }),\n    ],\n    controller.read\n  );\n  app.post('/api/events/create', [authJwt.verifyToken(), abac.middleware('events', 'create'), verifyEvent.checkNameNotEmpty, verifyEvent.checkEventExistOrNot], controller.create);\n  app.post('/api/events/update', [authJwt.verifyToken(), abac.middleware('events', 'edit'), verifyEvent.checkNameNotEmpty, verifyEvent.checkEventExistOrNot], controller.update);\n  app.post('/api/events/delete', [authJwt.verifyToken(), abac.middleware('events', 'delete')], controller.delete);\n});\n",
              "name": "events.routes.js",
              "size": 1299,
              "type": "source"
            },
            {
              "path": "../../src/modules/events/routes/tickets.routes.js",
              "relativePath": "modules/events/routes/tickets.routes.js",
              "extension": ".js",
              "content": "import controllerFactory from '../controllers/tickets.controller.js';\nexport default (function (app, db, origins, publicPath) {\n  const controller = controllerFactory(db, publicPath);\n  // Read all tickets\n  app.get('/api/tickets', controller.read);\n  // Create a new ticket\n  app.post('/api/tickets/create', controller.create);\n  // Update a ticket\n  app.post('/api/tickets/update', controller.update);\n  // Delete a ticket\n  app.post('/api/tickets/delete', controller.delete);\n});\n",
              "name": "tickets.routes.js",
              "size": 483,
              "type": "source"
            }
          ]
        },
        "store": {
          "_files": [
            {
              "path": "../../src/modules/events/store/events.js",
              "relativePath": "modules/events/store/events.js",
              "extension": ".js",
              "content": "// Vue modules\nimport { reactive, watch } from 'vue';\n// Setup Axios\nimport $axios from '@martyrs/src/modules/globals/views/utils/axios-instance.js';\n// Globals\nimport { setError } from '@martyrs/src/modules/globals/views/store/globals.js';\n// State\nconst state = reactive({\n  all: [],\n  filter: {\n    // query\n    tags: [],\n    period: '',\n    date: null,\n    date2: null,\n    // pagination\n  },\n  pagination: {\n    page: 1,\n    perPage: 18,\n  },\n  // Sort\n  sort: {\n    current: 'popularity',\n    ascending: false,\n  },\n  current: {\n    _id: '',\n    special: false,\n    specialData: {},\n    cover: '',\n    url: '',\n    status: '',\n    name: '',\n    tags: [],\n    ticketsTypes: [],\n    date: {\n      start: null,\n      false: null,\n    },\n    views: 0,\n    content: [],\n  },\n});\n\nasync function read(options = {}) {\n  try {\n    const response = await $axios.get('/api/events/read', { params: options });\n\n    if (options.url) {\n      set(response.data, 'current');\n    } else {\n      set(response.data, 'all');\n    }\n    return Promise.resolve(response.data);\n  } catch (err) {\n    setError(err);\n    return Promise.reject(err);\n  }\n}\nasync function create(eventData) {\n  return $axios.post('/api/events/create', eventData).then(\n    response => {\n      set(response.data, 'current');\n      return Promise.resolve(response.data);\n    },\n    error => {\n      setError(error);\n      return Promise.reject(error);\n    }\n  );\n}\n\nasync function update(eventData) {\n  return $axios.post('/api/events/update', eventData).then(\n    response => {\n      set(response.data, 'current');\n      return Promise.resolve(response.data);\n    },\n    error => {\n      setError(error);\n      return Promise.reject(error);\n    }\n  );\n}\n\nasync function remove(_id) {\n  return await $axios.post(`/api/events/delete`, { _id: _id }).then(\n    response => {\n      const index = state.all.findIndex(p => p._id === _id);\n      if (index !== -1) {\n        state.all.splice(index, 1);\n      }\n      return Promise.resolve(response.data);\n    },\n    error => {\n      setError(error);\n      return Promise.reject(error);\n    }\n  );\n}\n\nfunction set(eventData, property) {\n  state[property] = eventData;\n}\n\nfunction clean() {\n  state.current = {\n    _id: '',\n    cover: '',\n    url: '',\n    phase: '',\n    name: '',\n    ticketsTypes: [],\n    special: false,\n    specialData: {\n      subtitle: '',\n      logos: [],\n      video: '',\n      ticketImage: '',\n      ticketLinkStripe: '',\n      ticketPrice: '',\n      guestTitle: '',\n      guestDescription: '',\n      guestFacebook: '',\n      guestInstagram: '',\n      guestTwitter: '',\n      guestTelegram: '',\n      guestSoundcloud: '',\n      guestSpotify: '',\n      guestVideo: '',\n      guests: [],\n      lineup: [],\n      lineupBackground: '',\n      previousVideo: '',\n    },\n    tags: [],\n    date: {\n      start: null,\n      false: null,\n    },\n    views: 0,\n    content: [],\n  };\n}\n\nconst history = [];\nhistory.push(state); // push initial state\n\nwatch(state, (newState, oldState) => {\n  history.push(newState);\n});\n\nexport { clean, create, read, remove, set, state, update };\n",
              "name": "events.js",
              "size": 3094,
              "type": "source"
            },
            {
              "path": "../../src/modules/events/store/tickets.js",
              "relativePath": "modules/events/store/tickets.js",
              "extension": ".js",
              "content": "// Dependencies\nimport axios from 'axios';\n\n// Vue modules\nimport { reactive, watch } from 'vue';\n\n// Globals\nimport { setError } from '@martyrs/src/modules/globals/views/store/globals.js';\n\n// Setup Axios\nconst $axios = axios.create({\n  baseURL: process.env.API_URL,\n  withCredentials: true,\n});\n\n// State\nconst state = reactive({\n  tickets: [],\n  error: null,\n});\n\n// Methods\nconst actions = {\n  async read({ user, type, target, role, skip, limit, search }) {\n    try {\n      const response = await $axios.get(`/api/tickets`, {\n        params: { user, type, target, role, skip, limit, search },\n      });\n      state.error = null;\n      state.tickets = response.data;\n      return Promise.resolve(response.data);\n    } catch (error) {\n      setError(error);\n      return Promise.reject(error);\n    }\n  },\n  async create(ticket) {\n    try {\n      const response = await $axios.post(`/api/tickets/create`, ticket);\n      state.error = null;\n      return Promise.resolve(response.data);\n    } catch (error) {\n      setError(error);\n      return Promise.reject(error);\n    }\n  },\n  async update(ticket) {\n    try {\n      const response = await $axios.post(`/api/tickets/update`, ticket);\n      state.error = null;\n      return Promise.resolve(response.data);\n    } catch (error) {\n      setError(error);\n      return Promise.reject(error);\n    }\n  },\n  async delete(ticket) {\n    try {\n      const response = await $axios.post(`/api/tickets/delete`, ticket);\n      state.error = null;\n      return Promise.resolve(response.data);\n    } catch (error) {\n      setError(error);\n      return Promise.reject(error);\n    }\n  },\n};\n\nconst mutations = {\n  handleTicketUpdate(data, ticket, hasTicket) {\n    let entity;\n\n    if (Array.isArray(data)) {\n      entity = data.find(o => o._id === ticket.target);\n    } else if (typeof data === 'object' && data._id === ticket.target) {\n      entity = data;\n    }\n\n    if (entity) {\n      entity.hasTicket = hasTicket;\n\n      if (hasTicket) {\n        entity.tickets.push(ticket);\n        entity.numberOfTickets += 1;\n      } else {\n        const index = entity.tickets.findIndex(t => t._id === ticket._id);\n        if (index !== -1) {\n          entity.tickets.splice(index, 1);\n          entity.numberOfTickets -= 1;\n        }\n      }\n    }\n  },\n};\n\n// History\nconst history = [];\nhistory.push(state);\n\n// Watch\nwatch(state, newState => {\n  history.push(newState);\n});\n\n// Module Export\nexport { actions, mutations, state };\n",
              "name": "tickets.js",
              "size": 2457,
              "type": "source"
            }
          ]
        },
        "components": {
          "blocks": {
            "_files": [
              {
                "path": "../../src/modules/events/components/blocks/CardEvent.vue",
                "relativePath": "modules/events/components/blocks/CardEvent.vue",
                "extension": ".vue",
                "content": "<template>\n  <article \n\t  :class=\"{\n\t  \t'flex-nowrap flex-v-center flex': type === 'short'\n\t  }\"\n\t  class=\"pos-relative\"\n  >\n  \n    <CardHeader \n\t    :class=\"{\n\t    \t'mn-b-small pd-medium': type !== 'short',\n\t    \t'flex-child-order-last flex-child mn-l-small': type === 'short',\n\t    }\"\n\t    :entity=\"event\"\n\t    :entityType=\"'event'\"\n\t    :user=\"user\"\n\t    :owner=\"event.owner\" \n    \t:creator=\"event.creator\"\n    \t:members=\"event.numberOfTickets\"\n    \t:membersPhotos=\"event.participantsPhotos\"\n    \t:type=\"type\"\n    \t:dateFormatted=\"daysUntilEvent\"\n    />\n\n \t\t<div \n \t\t\tv-if=\"event.cover && type !== 'short'\" \n \t\t\tclass=\"o-hidden pos-relative bg-light mn-b-small w-100\"\n \t\t>\n\t    <img loading=\"lazy\" \n\t    \t:src=\"(FILE_SERVER_URL || '') + event.cover\" \n\t    \talt=\"Event image\" \n\t    \tclass=\"pos-relative z-index-1 d-block mn-auto w-max-100 object-fit-contain h-20r\"\n\t    />\n\n\t    <img loading=\"lazy\" \n\t    \t:src=\"(FILE_SERVER_URL || '') + event.cover\" \n\t    \talt=\"Event Background\" \n\t    \tclass=\"z-index-0 pos-absolute w-100 h-100 pos-t-0 pos-r-0\"\n\t    \tstyle=\"\n\t    \t\ttransform: scale(1.5);\n\t    \t\tfilter: blur(2rem);\n  \t\t\t\t-webkit-filter: blur(2rem);\"\n\t    />\n\t  </div>\n\n    <section \n    \tclass=\"pos-relative w-100\"\n    \t:class=\"{\n    \t\t'pd-t-zero pd-medium': type !== 'short',\n    \t\t'flex-nowrap flex flex-v-center': type === 'short'\n    \t}\"\n    >\n\n\t    <IconEdit\n\t\t\t\tv-if=\"user === event.creator.target._id\"\n\t\t\t\t@click.stop=\"$router.push({\n\t\t\t\t\tname: 'Edit Event', \n\t\t\t\t\tparams: {\n\t\t\t\t\t\turl: event.url\n\t\t\t\t\t}\n\t\t\t\t})\" \n\t\t\t\tclass=\"z-index-2 pos-absolute pos-t-regular pos-r-regular i-regular t-transp\"\n\t\t\t/>\n\n    \t<div\n    \t\t:class=\"{\n    \t\t\t'mn-b-small': type !== 'short',\n    \t\t\t'order-2 mn-l-thin': type === 'short'\n    \t\t}\"\n    \t\tclass=\"flex-v-center flex-nowrap flex\"\n    \t>\n\t\t\t\t \t<span \n\t\t\t    \tv-if=\"type === 'short'\" \n\t\t\t    \tclass=\"t-semi t-truncate uppercase\"\n\t\t\t    >\n\t        \t{{ event.name }}\n\t\t\t    </span>\n\t\t\t</div>\n\n      <div v-if=\"type !== 'short'\" class=\"cursor-pointer mn-b-thin flex-nowrap flex w-100\">\n\n\t\t\t\t<h3 \n\t      \tv-if=\"type !== 'short'\" \n\t      \tclass=\"\"\n\t      >\n\t    \t\t{{ event.name }}\n\t    \t</h3>\n\n\t\t\t\t<div v-if=\"event.status === 'draft'\" class=\"pd-micro t-white uppercase t-semi p-small flex-center flex pd-r-small pd-l-small mn-l-thin w-min bg-second radius-extra\">\n\t\t\t\t\t{{event.status}}\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</div>\n\n    \t<p \n    \t\tv-if=\"type !== 'short'\" \n    \t\tclass=\"mn-b-small p-big t-trim-3\"\n    \t>\n    \t\t{{ event.description }}\n    \t</p>\n\n      <slot></slot>\n      \n      <div \n      \tclass=\"flex-wrap flex-child-default gap-micro t-medium p-big justify-start align-center t-trim-2\"\n      \t:class=\"{\n\t    \t\t'order-1': type === 'short'\n    \t\t}\"\n      >\n        <span v-if=\"event.date?.start\" class=\"mn-r-nano d-inline-block w-max pd-b-micro pd-t-micro pd-r-thin pd-l-thin radius-small t-medium bg-white\">\n          <!-- <IconDate :fill=\"'rgb(var(--black))'\" class=\"w-1r h-auto\"/> -->\n          <!-- {{formatDate(event.date.start)}} -->\n\n\t\t\t\t\t\t<span \n\t\t\t\t     :class=\"{\n\t\t\t    \t\t'p-medium': type === 'short'\n\t\t    \t\t}\"\n\t\t\t\t    \tclass=\"t-semi\"\n\t\t\t\t    >\n\t\t\t\t    \t{{ formattedDate }}\n\t\t\t\t    </span>\n\t\t\t\t    <span \n\t\t\t\t    \t\tv-if=\"type !== 'short'\"\n\t\t\t\t    \tclass=\"t-semi \">\n\t\t\t\t        | {{ formattedTimeRange }}\n\t\t\t\t    </span>\n        </span>\n\n\n        <span\n        \tv-if=\"type !== 'short'\"\n          v-for=\"(chip, index) in event.tags\"\n          :key=\"index\"\n          class=\"d-inline-flex pd-b-micro   pd-t-micro pd-r-thin pd-l-thin radius-small bg-main\"\n        >\n          {{ chip }}\n        </span>\n      </div>\n\t\t\t<!-- <CardFooter\n\t\t\t\tv-if=\"type !== 'short'\"  \n\t\t\t\tclass=\"\" \n\t\t\t\t:entity=\"event\"\n\t\t\t\t:entityType=\"'event'\" \n\t\t\t\t:user=\"user\"\n\t\t\t/> -->\n\n    </section>\n    \n    <!-- <FooterBlogpost class=\"pd-t-zero pd-medium\" :event=\"event\" :owner=\"owner\"/> -->\n  </article>\n</template>\n\n<script setup=\"props\">\n\timport Chips  from '@martyrs/src/components/Chips/Chips.vue'\n\n\timport IconEdit from '@martyrs/src/modules/icons/navigation/IconEdit.vue'\n\n\timport CardHeader  from '@martyrs/src/modules/globals/views/components/blocks/CardHeader.vue'\n\timport CardFooter  from '@martyrs/src/modules/globals/views/components/blocks/CardFooter.vue'\n\timport { ref, computed } from 'vue'\n\timport { useRouter } from 'vue-router'\n\n\tconst date_now = ref(new Date())\n\n\tconst router = useRouter()\n\tconst props = defineProps(['event', 'user', 'short', 'type'])\n\n\tconst firstImage = computed(() => {\n\t\treturn props.event.content.find(block => block.type.name === 'ImageUpload');\n\t});\n\n\tconst firstText = computed(() => {\n\t\treturn props.event.content.find(block => block.type.name === 'Textarea');\n\t});\n\n  // Function to calculate days until event\n  const daysUntilEvent = computed(() => {\n    const now = new Date();\n    const nowUTC = Date.UTC(now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate(), now.getUTCHours(), now.getUTCMinutes(), now.getUTCSeconds());\n  \n    const start = new Date(props.event.date.start);\n    const startUTC = Date.UTC(start.getUTCFullYear(), start.getUTCMonth(), start.getUTCDate(), start.getUTCHours(), start.getUTCMinutes(), start.getUTCSeconds());\n  \n    const diffInTime = startUTC - nowUTC;\n\n    if (diffInTime < 0) {\n      return 'Finished';\n    }\n    else if (diffInTime === 0) {\n      return 'Starting Now';\n    }\n    else {\n      const diffInSeconds = Math.floor(diffInTime / 1000);\n      const diffInMinutes = Math.floor(diffInSeconds / 60);\n      const diffInHours = Math.floor(diffInMinutes / 60);\n      const diffInDays = Math.floor(diffInHours / 24);\n\n      if (diffInDays > 0) {\n        return `${diffInDays} days until event`;\n      }\n      else if (diffInHours > 0) {\n        return `${diffInHours} hours until event`;\n      }\n      else if (diffInMinutes > 0) {\n        return `${diffInMinutes} minutes until event`;\n      }\n      else {\n        return `${diffInSeconds} seconds until event`;\n      }\n    }\n});\n\n\n  /// Computed property for formatted date\n\tconst formattedDate = computed(() => {\n\t    const start = new Date(props.event.date.start);\n\t    const options = { day: '2-digit', month: '2-digit' };\n\t    return start.toLocaleDateString(undefined, options);\n\t});\n\n\t// Computed property for time range\n\tconst formattedTimeRange = computed(() => {\n\n\t\tconsole.log(props.event.date.start)\n\t\tconsole.log(props.event.date.end)\n    const start = new Date(props.event.date.start);\n    const end = new Date(props.event.date.end);\n\n    const startTime = new Intl.DateTimeFormat(undefined, { hour: '2-digit', minute: '2-digit', hourCycle: 'h23' }).format(start);\n    const endTime = new Intl.DateTimeFormat(undefined, { hour: '2-digit', minute: '2-digit', hourCycle: 'h23' }).format(end);\n    return `${startTime}-${endTime}`;\n\t});\n\n\n\t// Computed property for truncated event name\n\tconst truncatedEventName = computed(() => {\n\t  const eventName = props.event.name;\n\t  if (eventName.length > 26) {\n\t    return `${eventName.substring(0, 22)}…`; // Truncate to 37 characters and append \"...\"\n\t  }\n\t  return eventName; // If less than or equal to 40 characters, return the full string\n\t});\n\n\n</script>\n\n<style lang=\"scss\">\n</style>\n",
                "name": "CardEvent.vue",
                "size": 7103,
                "type": "source"
              }
            ]
          },
          "elements": {
            "_files": [
              {
                "path": "../../src/modules/events/components/elements/ButtonCheck.vue",
                "relativePath": "modules/events/components/elements/ButtonCheck.vue",
                "extension": ".vue",
                "content": "<template>\n  <div>\n    <Button @click=\"startScan\" class=\"bg-main button-small radius-extra button\">\n      Check Tickets\n    </Button>\n    \n    <teleport to=\"body\" v-if=\"isScanning\">\n      <div v-if=\"isScanning\" class=\"barcode-scanner-modal\">\n        <div class=\"square\"></div>\n        <div class=\"zoom-ratio-wrapper\" v-if=\"minZoomRatio !== undefined && maxZoomRatio !== undefined\">\n          <input type=\"range\" :min=\"minZoomRatio\" :max=\"maxZoomRatio\" @input=\"setZoomRatio\" />\n        </div>\n        <Button @click=\"stopScan\" class=\"bg-white t-black stop-scan-button\">Stop Scan</Button>\n        <Button v-if=\"isTorchAvailable\" @click=\"toggleTorch\" class=\"bg-white torch-button\">\n          Toggle Torch\n        </Button>\n      </div>\n    </teleport>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, onUnmounted } from 'vue'\nimport { BarcodeScanner } from '@capacitor-mlkit/barcode-scanning'\nimport Button from '@martyrs/src/components/Button/Button.vue'\nimport * as tickets from '@martyrs/src/modules/events/store/tickets.js'\n\nconst emits = defineEmits(['qrcodecheck'])\nconst error = ref('')\nconst isScanning = ref(false)\nconst isTorchAvailable = ref(false)\nconst minZoomRatio = ref(undefined)\nconst maxZoomRatio = ref(undefined)\nconst isProcessing = ref(false)\n\nonMounted(async () => {\n  const { supported } = await BarcodeScanner.isSupported()\n  if (!supported) {\n    error.value = 'Barcode scanning is not supported on this device'\n  }\n  const { available } = await BarcodeScanner.isTorchAvailable()\n  isTorchAvailable.value = available\n})\n\nonUnmounted(async () => {\n  // await stopScan()\n})\n\nconst SCAN_TIMEOUT = 1000 // 5 секунд (можно изменить по вашему усмотрению)\n\nasync function startScan() {\n  try {\n    const { camera } = await BarcodeScanner.checkPermissions()\n    if (camera !== 'granted') {\n      const { camera: newStatus } = await BarcodeScanner.requestPermissions()\n      if (newStatus !== 'granted') {\n        throw new Error('Camera permission is required to scan barcodes')\n      }\n    }\n    document.querySelector('body')?.classList.add('barcode-scanner-active')\n    document.querySelector('html')?.classList.add('barcode-scanner-active-html')\n    isScanning.value = true\n    await BarcodeScanner.addListener('barcodeScanned', async (result) => {\n      if (!isProcessing.value) {\n        await processBarcode(result.barcode)\n      }\n    })\n    await BarcodeScanner.startScan()\n    const { zoomRatio: min } = await BarcodeScanner.getMinZoomRatio()\n    const { zoomRatio: max } = await BarcodeScanner.getMaxZoomRatio()\n    minZoomRatio.value = min\n    maxZoomRatio.value = max\n  } catch (e) {\n    error.value = e.message\n    alert(`Error: ${error.value}`)\n  }\n}\n\nasync function stopScan() {\n  try {\n    document.querySelector('body')?.classList.remove('barcode-scanner-active')\n    document.querySelector('html')?.classList.remove('barcode-scanner-active-html')\n    isScanning.value = false\n    await BarcodeScanner.stopScan()\n    await BarcodeScanner.removeAllListeners()\n  } catch (e) {\n    error.value = e.message\n    alert(`Error stopping scan: ${error.value}`)\n  }\n}\n\nasync function processBarcode(barcode) {\n  if (isProcessing.value) return;\n  isProcessing.value = true;\n  \n  try {\n    if (!barcode || !barcode.rawValue) {\n      throw new Error('Invalid barcode data');\n    }\n    console.log('barcode is', barcode);\n\n    const response = await tickets.actions.update({\n      _id: barcode.rawValue,\n      status: 'used',\n      check: true\n    });\n\n    alert(\"Ticket checked. And it's all right!\");\n    emits('qrcodecheck');\n  } catch (e) {\n    console.error(e);\n    alert(`Ticket is not found, already used or deactivated!`);\n  } finally {\n    // Устанавливаем таймаут перед следующим сканированием\n    setTimeout(() => {\n      isProcessing.value = false;\n    }, SCAN_TIMEOUT);\n  }\n}\n\nasync function setZoomRatio(event) {\n  const zoomRatio = parseFloat(event.target.value)\n  await BarcodeScanner.setZoomRatio({ zoomRatio })\n}\n\nasync function toggleTorch() {\n  await BarcodeScanner.toggleTorch()\n}\n</script>\n\n<style>\n.barcode-scanner-modal {\n  visibility: visible;\n  position: fixed;\n  top: 0;\n  left: 0%;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n.square {\n  width: 200px;\n  height: 200px;\n  border: 2px solid white;\n  border-radius: 10px;\n}\n\n.zoom-ratio-wrapper {\n  width: 80%;\n  margin-top: 20px;\n}\n\n.stop-scan-button,\n.torch-button {\n  margin-top: 20px;\n}\n\n/* Existing styles */\nbody.barcode-scanner-active {\n  left: -100%;\n/*  visibility: hidden !important;*/\n  background: transparent !important;\n  --background: transparent;\n  --ion-background-color: transparent;\n}\n\nhtml.barcode-scanner-active-html {\n  background: transparent !important;\n}\n</style>\n",
                "name": "ButtonCheck.vue",
                "size": 4816,
                "type": "source"
              },
              {
                "path": "../../src/modules/events/components/elements/ButtonJoin.vue",
                "relativePath": "modules/events/components/elements/ButtonJoin.vue",
                "extension": ".vue",
                "content": "<template>\n  <Button\n    :submit=\"toggleJoin\"\n    class=\"bg-main button-small radius-extra button\"\n  >\n    {{ hasTicket ? 'Leave' : 'Join' }}\n  </Button>\n</template>\n\n<script setup>\n  import Button from \"@martyrs/src/components/Button/Button.vue\";\n  \n  import { ref } from 'vue'\n  import * as auth from '@martyrs/src/modules/auth/views/store/auth.js'\n  import * as tickets from '@martyrs/src/modules/events/store/tickets.js' // replace memberships with tickets\n\n  const emits = defineEmits(['updateTicket'])  // Rename the event to updateTicket\n\n  const props = defineProps({\n    type: {\n      type: String,\n      required: true\n    },\n    userId: {\n      type: String,\n      required: true\n    },\n    hasTicket: {  // Change isMember to hasTicket to represent ticket state\n      type: Boolean,\n      required: true\n    },\n    targetId: {\n      type: String,\n      required: true\n    }\n  });\n\n  const toggleJoin = async () => {  // Rename toggleFollow to toggleJoin\n    if (props.hasTicket) {\n      await leaveEventOrParking(props.targetId);\n    } else {\n      await joinEventOrParking(props.targetId);\n    }\n  }\n\n  async function joinEventOrParking(targetId) {  // Renamed followPublic to joinEventOrParking\n      try {\n        const ticketData = {  // Renamed membershipData to ticketData\n          type: props.type,\n          target: targetId,\n          user: props.userId\n        };\n\n        const response = await tickets.actions.create(ticketData); // Replace memberships.actions.create with tickets.actions.create\n        emits('updateTicket', { ticket: response, hasTicket: true, targetId: props.targetId });  // updateMembership to updateTicket\n      } catch (error) {\n        console.log(error)\n        throw error;\n      }\n  }\n\n  async function leaveEventOrParking(targetId) {  // Renamed unfollowPublic to leaveEventOrParking\n      const ticketData = {  // Renamed membershipData to ticketData\n        type: props.type,\n        target: targetId,\n        user: props.userId\n      };\n\n      try {\n        const response = await tickets.actions.delete(ticketData);  // Replace memberships.actions.delete with tickets.actions.delete\n        emits('updateTicket', { ticket: response, hasTicket: false, targetId: props.targetId });  // updateMembership to updateTicket\n      } catch (error) {\n        console.log(error)\n        throw error;\n      }\n  }\n\n</script>\n\n<style scoped>\n  /* Existing styles can stay unchanged */\n</style>\n",
                "name": "ButtonJoin.vue",
                "size": 2438,
                "type": "source"
              }
            ]
          },
          "layouts": {
            "_files": [
              {
                "path": "../../src/modules/events/components/layouts/layoutEvents.vue",
                "relativePath": "modules/events/components/layouts/layoutEvents.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"pd-thin h-min-100\">\n    <router-view v-slot=\"{ Component, route }\">\n      <transition name=\"scaleIn\" mode=\"out-in\">\n        <component ref=\"page\" :key=\"route.query\" :is=\"Component\" />\n      </transition>\n    </router-view>\n  </div>\n</template>\n\n<script setup=\"props\">\n  import { computed,onMounted, toRefs,ref, watch } from 'vue'\n  import { useRoute,useRouter } from 'vue-router';\n  // Router\n  const route = useRoute();\n  const router = useRouter()\n</script>\n\n<style lang=\"scss\">\n  \n</style>\n",
                "name": "layoutEvents.vue",
                "size": 518,
                "type": "source"
              }
            ]
          },
          "pages": {
            "_files": [
              {
                "path": "../../src/modules/events/components/pages/EditEvent.vue",
                "relativePath": "modules/events/components/pages/EditEvent.vue",
                "extension": ".vue",
                "content": "<template>\n  <article v-if=\"event\" class=\"h-min-100 pd-thin\">\n    <div class=\"pd-medium radius-semi mn-b-thin bg-light\">\n      <h4 class=\"mn-b-small\">Basic Info</h4>\n    \t<div class=\"mn-b-thin radius-small w-100 h-10r bg-white flex-center flex-column flex\">\n       \t<UploadImage \n          v-model:photo=\"event.cover\"\n          :uploadPath=\"'specials'\"\n          class=\"h-4r w-4r aspect-1x1 o-hidden mn-b-thin radius-extra\" \n        />\n        <h4>Upload Event Cover</h4>\n      </div>\n\n    \t<Field \n        v-model:field=\"event.name\" \n        label=\"Name\"\n        placeholder=\"Event name\" \n        class=\"mn-b-thin w-100 bg-white pd-medium radius-small\" \n      />\n      <Field \n        v-model:field=\"event.description\" \n        type=\"textarea\"  \n        placeholder=\"Enter short description\" \n        class=\"mn-b-thin w-100 bg-white pd-medium radius-small\" \n      />\n      <Field \n        v-model:field=\"event.location\" \n        label=\"Location\"\n        placeholder=\"Event location\" \n        class=\"mn-b-thin w-100 bg-white pd-medium radius-small\" \n      />\n      <VueDatePicker v-model=\"date\"  range class=\"z-index-3 radius-small mn-b-semi bg-white\" />\n    </div>\n\n   <!--    <Calendar\n        v-model:date=\"date\"\n        :locale=\"$i18n.locale\"\n        :allowRange=\"false\"\n        class=\"radius-semi w-100 o-hidden bg-light\"\n      /> -->\n\n    <Block\n      title=\"Tickets\"\n      placeholder=\"No line ups added yet\"\n      :actions=\"[{\n        label: '+',\n        function: () => event.ticketsTypes.push({name: null, description: null, photo: null, main: false})\n      }]\"\n      class=\"cols-1 mn-b-thin t-black gap-thin\"\n    >\n      <div \n        class=\"mn-b-thin gap-small flex-nowrap flex\" \n        v-for=\"(item, index) in event.ticketsTypes\" \n        :key=\"index\"\n      > \n        <Field\n          v-model:field=\"item.name\"\n          placeholder=\"Name\"\n          class=\"w-100  bg-white radius-small pd-medium\"\n        />  \n        <Field\n          v-model:field=\"item.price\"\n          placeholder=\"Price\"\n          class=\"w-100  bg-white radius-small pd-medium\"\n        />\n        <div @click=\"() => event.ticketsTypes.splice(index, 1)\" class=\"radius-small h-100 i-big flex-center flex aspect-1x1 bg-red\">\n          <IconDelete \n            class=\"i-medium\"\n          />\n        </div>\n      </div>\n    </Block>\n\n\t\t<section v-if=\"event\" class=\"pd-b-extra w-100 bg-light pd-big radius-medium\">\n      <Constructor \n        :content=\"event.content\"\n        @update=\"update => event.content = update\"\n      />\n    </section>\n\n    <section v-if=\"event\" class=\"pd-thin pos-sticky pos-l-0 pos-b-0 w-100 \">\n      <div class=\"pd-thin radius-big  bg-main w-100 flex-nowrap flex\">\n        <a v-if=\"route.params.url\" @click=\"onDelete()\" class=\"mn-r-auto bg-red t-white t-black button\"><span>Delete</span></a>\n        <a @click=\"onDrafts()\" class=\"mn-l-auto bg-white t-black button\"><span>To Drafts</span></a>\n        <a @click=\"openPublicationPopup()\" class=\"mn-l-thin bg-black t-white button\"><span>Publish</span></a>\n      </div>\n    </section>\n\n    <Popup \n      title=\"Final Touches\" \n      @close-popup=\"closePublicationPopup\" \n      :isPopupOpen=\"isPublicationPopup\"\n      class=\"w-m-33r t-left pd-big bg-white radius-big\"\n    > \n      <BlockTags\n        @tags-changed=\"newTags => event.tags = newTags\"\n        :tags=\"event.tags\"\n        class=\"mn-b-small\"\n      />\n\n      <h5 class=\"mn-b-small\">Add to public</h5>\n      <Card\n        v-if=\"selectedOrganization\"\n        :photo=\"selectedOrganization.profile?.photo\"\n        :title=\"selectedOrganization.profile?.name\"\n        @click=\"() => { \n          selectedOrganization = null\n        }\"\n        class=\"h-4r w-100 bg-light pd-thin radius-medium  mn-b-thin\"\n      />\n\n      <section v-else class=\"mn-b-thin h-25r o-x-hidden o-y-scroll bg-light radius-big pd-small \">\n        <Feed\n          :showLoadMore=\"false\" \n          :search=\"{\n            placeholder: 'Search organization...',\n            class: 'bg-white mn-b-thin'\n          }\"\n          :states=\"{\n            empty: {\n              title: 'No organizations Found',\n              description: 'Currently, there are no such organizations available.'\n            }\n          }\"\n          :store=\"{\n            read: (options) => organizations.actions.read(options),\n            state: null\n          }\"\n          :options=\"{\n            user: auth.state.user._id,\n            postable: auth.state.user._id,\n            lookup: ['memberships']\n          }\"\n          v-slot=\"{ \n            items \n          }\"\n        >\n          <Card\n            v-for=\"(organization, index) in items\" \n            v-memo=\"[organization._id, organization.profile.name]\"\n            :photo=\"organization.profile?.photo\"\n            :title=\"organization.profile?.name\"\n            @click=\"() => { \n              selectedOrganization = organization\n            }\"\n            class=\"h-4r bg-white pd-thin radius-medium w-100 mn-b-thin\"\n          />\n        </Feed>\n      </section>\n\n      \n      <h5 v-if=\"selectedOrganization\" class=\"mn-b-thin\">Options:</h5>\n      <div v-if=\"selectedOrganization\" class=\"mn-b-medium br-grey-transp-25 br-2px br-solid pd-small radius-big\">\n        <Checkbox \n          :label=\"'Hide Author'\"\n          :radio=\"event.creator.hidden\"\n          @update:radio=\"updateEvent => event.creator.hidden = updateEvent\"\n          name=\"prices\"\n          class=\"w-100\"\n        />\n      </div>\n      <Button :submit=\"onSubmit\" :callback=\"redirectTo\" class=\"w-100 bg-black t-white\">Publish</Button>\n    </Popup>\n  </article>\n\n</template>\n\n<script setup>\nimport Textarea from '@martyrs/src/modules/constructor/components/elements/Textarea.vue';\nimport Constructor from '@martyrs/src/modules/constructor/components/sections/Constructor.vue';\n\nimport VueDatePicker from '@vuepic/vue-datepicker';\nimport '@vuepic/vue-datepicker/dist/main.css'\n\n\n\nimport Calendar from '@martyrs/src/components/DatePicker/Calendar.vue'\n\nimport Block from '@martyrs/src/components/Block/Block.vue';\nimport Popup from '@martyrs/src/components/Popup/Popup.vue';\nimport Field from '@martyrs/src/components/Field/Field.vue'\nimport BlockTags from '@martyrs/src/components/FieldTags/BlockTags.vue';\nimport Checkbox from '@martyrs/src/components/Checkbox/Checkbox.vue';\nimport SelectMulti from '@martyrs/src/components/SelectMulti/SelectMulti.vue';\nimport Upload  from '@martyrs/src/components/Upload/Upload.vue';\nimport UploadImage from '@martyrs/src/components/UploadImage/UploadImage.vue';\nimport EditImages from '@martyrs/src/components/EditImages/EditImages.vue';\nimport Feed from '@martyrs/src/components/Feed/Feed.vue'\nimport Button from '@martyrs/src/components/Button/Button.vue';   \n\nimport Card from '@martyrs/src/modules/globals/views/components/blocks/Card.vue';\n\nimport IconDelete from '@martyrs/src/modules/icons/navigation/IconDelete.vue';\n\nimport { ref, onMounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\n\nimport { useGlobalMixins } from \"@martyrs/src/modules/globals/views/mixins/mixins.js\"\n\nimport * as events from '@martyrs/src/modules/events/store/events.js';\nimport * as auth from '@martyrs/src/modules/auth/views/store/auth.js';\nimport * as organizations from '@martyrs/src/modules/organizations/store/organizations.js';\n\nconst route = useRoute();\nconst router = useRouter();\n\nconst { hasAccess } = useGlobalMixins()\n\nlet event = ref(null);\nlet publics = ref(null);\n\nconst selectedTags = ref([]);\nconst selectedOrganization = ref(null);\n\nconst date = ref(new Date);\nconst customPosition = () => ({ top: 0, left: 0 });\n\nonMounted(async () =>{\n  \n  if (route.params.url) {\n    const data = await events.read({ user: auth.state.user._id, url: route.params.url });\n\n    event.value = data.pop();\n\n    if (!event.value) {\n     router.push({name: 'notfound'})\n    }\n\n    if (event.value.owner.type === 'organization') {\n      // Если пост принадлежит организации, проверяем права на редактирование через `hasAccess`\n      const isAccess = hasAccess(event.value.owner.target._id, 'events', 'edit', auth.state.accesses, auth.state.access.roles);\n\n      if (!isAccess) {\n        router.push({name: 'unauthorized'})\n      }\n    }\n\n     if (event.value.owner.type === 'user' && event.value.creator.target._id !== auth.state.user._id) {\n      console.log(event.value.creator.target)\n      console.log(auth.state.user._id)\n      router.push({name: 'unauthorized'})\n    }\n\n    const startDate = event.value.date.start;\n    const endDate = event.value.date.end;\n\n    date.value = [startDate, endDate];\n\n  } else {\n    events.clean();\n    event.value = events.state.current;\n\n    const startDate = new Date();\n    const endDate = new Date();\n    date.value = [startDate, endDate];\n  }\n\n  if (!event.value.owner) event.value.owner = {\n    target: auth.state.user._id,\n    type: 'user'\n  }\n\n  if (!event.value.creator) event.value.creator = {\n    target: auth.state.user._id,\n    type: 'user',\n    hidden: false\n  }\n\n  if (event.value.owner.type === 'organization') selectedOrganization.value = {\n    _id: event.value.owner.target._id,\n    profile: {\n      name: event.value.owner.target.profile.name,\n      photo: event.value.owner.target.profile.photo\n    }\n  }\n})\n\nconst isPublicationPopup = ref(false)\n\nfunction openPublicationPopup() {\n  isPublicationPopup.value = true;\n}\nfunction closePublicationPopup() {\n  isPublicationPopup.value = false;\n}\n\nfunction onDrafts() {\n\n  if (selectedTags.value.length > 0) selectedTags.value.map(tag => (tag.text))\n\n  event.value.status = \"draft\"\n  \n  event.value.date = {\n    start: date.value[0],\n    end: date.value[1]\n  }\n\n  if (route.params.url) {\n    events.update(event.value)\n      .then(response => {\n        router.push({ name: 'Event', params: { url: response.url } });\n      })\n      .catch(error => {\n        console.error(error);\n      })\n  } else {\n    events.create(event.value)\n      .then(response => {\n        router.push({ name: 'Event', params: { url: response.url } });\n      })\n      .catch(error => {\n        console.error(error);\n      })\n  }\n}\n\nfunction onSubmit() {\n\n  if (selectedOrganization.value) event.value.owner = {\n    target: selectedOrganization.value._id,\n    type: 'organization'\n  }\n\n  if (!selectedOrganization.value) event.value.creator.hidden = false\n  if (!selectedOrganization.value) event.value.organization = event.value.creator\n\n  event.value.status = \"published\"\n\n  event.value.date = {\n    start: date.value[0],\n    end: date.value[1]\n  }\n\n  console.log(date.value)\n  if (route.params.url) {\n    console.log(event.value)\n    events.update(event.value)\n      .then(response => {\n        router.push({ name: 'Event', params: { url: response.url } });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  } else {\n    events.create(event.value)\n      .then(response => {\n        router.push({ name: 'Event', params: { url: response.url } });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n}\n\nfunction onDelete() {\n  if (confirm('Are you sure you want to delete this event?')) {\n    events.remove(event.value._id)\n      .then(response => {\n        router.push({ name: 'User Events', params: { user: event.value.creator.target._id } });\n      })\n      .catch(error => {\n        console.error(error);\n      })\n  }\n}\n</script>\n\n<style lang=\"scss\">\n  .dp__input {\n    border: 0;\n    padding: var(--medium);\n    padding-left: 3rem;\n    background: rgb(var(--white)) !important;\n    border-radius: var(--small);\n  }\n</style>",
                "name": "EditEvent.vue",
                "size": 11457,
                "type": "source"
              },
              {
                "path": "../../src/modules/events/components/pages/EditEventTickets.vue",
                "relativePath": "modules/events/components/pages/EditEventTickets.vue",
                "extension": ".vue",
                "content": "<template>\n  <article v-if=\"event\" class=\"h-100 pd-thin\">\n    <header \n      class=\"mn-b-medium flex-v-center flex-nowrap flex\"\n    >\n      <h2 class=\"mn-r-medium\">Tickets</h2>\n      <button \n        @click=\"openTicketsPopup()\" \n        class=\"radius-extra uppercase button-small  flex-child flex-child-shrink-0 hover-scale-1 cursor-pointer t-white bg-second\">\n          Add Tickets\n      </button>\n      <ButtonCheck @qrcodecheck=\"fetchTickets = !fetchTickets \" class=\"w-100 pd-medium mn-auto\" />\n    </header>\n    \n    <Popup \n      @close-popup=\"closeTicketsPopup\" \n      :isPopupOpen=\"isOpenTicketsPopup\"\n      class=\"w-max-40r\"\n    >\n      <Block\n        title=\"Add tickets\"\n        placeholder=\"No parameters added yet\"\n        class=\"cols-1 mn-b-thin gap-thin\"\n      >\n        <div \n          class=\"gap-thin flex-nowrap flex\" \n          v-for=\"(item, index) in newTickets\" \n          :key=\"index\"\n        > \n          <Field\n            v-model:field=\"item.name\"\n            placeholder=\"Name\"\n            class=\"w-50 bg-white radius-small pd-medium\"\n          />  \n          <Field\n            v-model:field=\"item.seat\"\n            placeholder=\"Seat\"\n            class=\"w-50 bg-white radius-small pd-medium\"\n          />\n          <Field\n            v-model:field=\"item.email\"\n            placeholder=\"Email\"\n            class=\"w-100 bg-white radius-small pd-medium\"\n          />\n       \n          <Field\n            v-model:field=\"item.quantity\"\n            placeholder=\"Quantity\"\n            type=\"number\"\n            class=\"w-25 bg-white radius-small pd-medium\"\n          />\n         \n          <div v-if=\"index < 1\" @click=\"() => newTickets.push({name: '', value: '', target: event._id, type: 'event', quantity: 1})\"  class=\"radius-small h-100 i-big flex-center flex aspect-1x1 bg-green\">\n            <IconAdd \n              class=\"i-medium\"\n              :fill=\"'rgb(var(--white)'\"\n            />\n          </div>\n          <div v-else @click=\"() => newTickets.splice(index, 1)\"  class=\"radius-small h-100 i-big flex-center flex aspect-1x1 bg-red\">\n            <IconDelete \n              class=\"i-medium\"\n              :fill=\"'rgb(var(--white)'\"\n            />\n          </div>\n        </div>\n\n         <Button \n            :submit=\"onSubmit\" \n            :callback=\"closeTicketsPopup\" \n            class=\"w-100 bg-black t-white\"\n          >\n            Create Tickets\n          </Button>\n      </Block>\n    </Popup>\n\n    <Feed\n      :search=\"true\"\n      :states=\"{\n        empty: {\n          title: 'No Tickets Found',\n          description: 'Currently, there are no tickets.'\n        }\n      }\"\n      :store=\"{\n        read: (options) => tickets.actions.read(options),\n        state: null\n      }\"\n      :options=\"{\n        target: event._id\n      }\"\n      :external=\"fetchTickets\"\n      v-slot=\"{ \n        items \n      }\"\n    >\n      <div\n        v-for=\"(ticket, index) in items\" \n        class=\"radius-big bg-light gap-small pd-medium flex-v-center flex-nowrap flex pos-relative mn-b-thin\"\n      >\n        <a :href=\"ticket.image\" target=\"_blank\"><img loading=\"lazy\" :src=\"ticket.qrcode\" class=\"radius-small h-5r w-5r\"></a>\n\n        <div class=\"mn-r-auto \">\n           <p class=\"h4\">\n            {{ticket.client_refactor?.name || 'No name'}}, {{ticket.seat}}\n           </p>\n          <p class=\"h5 t-transp mn-b-thin\">\n            {{ticket.client_refactor?.email || 'No email'}}\n          </p>\n\n           <span class=\"pd-r-thin pd-l-thin pd-b-nano pd-t-nano bg-second radius-extra t-white t-medium d-block w-max uppercase\">\n            {{ticket.status}}\n          </span>\n        </div>\n\n        <Button \n          v-if=\"ticket.status !== 'deactivated'\"\n          :submit=\"() => changeStatus(ticket, 'deactivated')\" \n          :callback=\"redirectTo\" \n          class=\"w-min h-min pd-small bg-black t-white\"\n        >\n          Deactivate\n        </Button>\n\n        <Button \n          v-if=\"ticket.status === 'deactivated' || ticket.status === 'used' \"\n          :submit=\"() => changeStatus(ticket, 'unused')\" \n          :callback=\"redirectTo\" \n          class=\"w-min h-min pd-small bg-green t-white\"\n        >\n          Activate\n        </Button>\n      \n      </div>\n    </Feed>\n    \n  </article>\n</template>\n\n<script setup>\nimport Feed from '@martyrs/src/components/Feed/Feed.vue';\nimport Block from '@martyrs/src/components/Block/Block.vue';\nimport Popup from \"@martyrs/src/components/Popup/Popup.vue\";\nimport Field         from '@martyrs/src/components/Field/Field.vue'\nimport Button from '@martyrs/src/components/Button/Button.vue';   \n\nimport ButtonCheck from '@martyrs/src/modules/events/components/elements/ButtonCheck.vue'\n\nimport IconDelete from '@martyrs/src/modules/icons/navigation/IconDelete.vue';\nimport IconAdd from '@martyrs/src/modules/icons/navigation/IconAdd.vue';\n\nimport { ref, onMounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\n\nimport * as events from '@martyrs/src/modules/events/store/events.js';\nimport * as auth from '@martyrs/src/modules/auth/views/store/auth.js';\nimport * as organizations from '@martyrs/src/modules/organizations/store/organizations.js';\n\nimport * as tickets from '@martyrs/src/modules/events/store/tickets.js';\n\nimport { useGlobalMixins } from \"@martyrs/src/modules/globals/views/mixins/mixins.js\"\n\nconst { hasAccess } = useGlobalMixins()\n\nconst route = useRoute();\nconst router = useRouter();\n\nlet event = ref(null);\n\nconst newTickets = ref([{\n  name: '',\n  email: '',\n  target: event.value?._id, \n  type: 'event',\n  seat: '',\n  quantity: 1,\n}])\n\nconst isOpenTicketsPopup = ref(false);\n\nfunction openTicketsPopup(department) {\n  isOpenTicketsPopup.value = true;\n  \n  newTickets.value = [{\n    name: '',\n    email: '',\n    target: event.value?._id, \n    type: 'event',\n    seat: '',\n    quantity: 1,\n  }]\n}\n\nfunction closeTicketsPopup() {\n  isOpenTicketsPopup.value = false;\n}\n\nconst fetchTickets = ref(false)\n\n\nonMounted(async () =>{\n  const data = await events.read({ user: auth.state.user._id, url: route.params.url });\n\n  event.value = data.pop();\n\n  if (!event.value) {\n   router.push({name: 'notfound'})\n  }\n\n  if (event.value.owner.type === 'organization') {\n    // Если пост принадлежит организации, проверяем права на редактирование через `hasAccess`\n    const isAccess = hasAccess(event.value.owner.target._id, 'events', 'edit', auth.state.accesses, auth.state.access.roles);\n\n    if (!isAccess) {\n      router.push({name: 'unauthorized'})\n    }\n  } else {\n    // Если пост не принадлежит организации, проверяем авторство\n    if (event.value.creator.target._id !== userId) {\n      router.push({name: 'unauthorized'})\n    }\n  }\n})\n\nasync function onSubmit() {\n  try {\n    const response = await tickets.actions.create(newTickets.value);\n    fetchTickets.value = !fetchTickets.value\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function changeStatus(ticket, status) {\n  if (confirm('Are you sure you want to deactivate this event?')) {\n    try {\n      const response = await tickets.actions.update({ ...ticket, status: status});\n      fetchTickets.value = !fetchTickets.value\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n\n</script>\n\n<style lang=\"scss\">\n  .dp__input {\n    border: 0;\n    padding: var(--medium);\n    padding-left: 3rem;\n    background: rgb(var(--grey))\n  }\n</style>",
                "name": "EditEventTickets.vue",
                "size": 7306,
                "type": "source"
              },
              {
                "path": "../../src/modules/events/components/pages/Event.vue",
                "relativePath": "modules/events/components/pages/Event.vue",
                "extension": ".vue",
                "content": "<template>\n  <section id=\"eventPage\">\n    <TransitionGroup tag=\"ul\" name=\"fade\" class=\"bg-light\">\n      <SkeletonEvent\n        v-if=\"isLoading\"\n        v-for=\"i in 3\" :key=\"i\"\n      />\n\n      <HeroEvent\n        v-if=\"!isLoading && event &&event.cover\"\n        :content=\"{\n          title: event.name,\n          ticketLinkStripe: event.ticketLinkStripe,\n          cover: event.cover,\n          subtitle: event.subtitle,\n        }\"\n        :options=\"{\n          date: event.date.start,\n        }\"\n        class=\"o-hidden\"\n      />\n\n      <div class=\"cols-2-2_1 gap-small bg-white t-black pd-t-zero mobile:pd-small pd-extra\" v-if=\"!isLoading && event\"> \n        \n        <div class=\"bg-light mobile:pd-medium pd-big radius-big\">\n\n          <h1 class=\"z-index-1  mn-b-semi\">\n            {{event?.name}}\n          </h1>\n\n          <div class=\"flex flex-wrap gap-micro t-medium p-big mn-b-semi justify-start align-center\">\n            <span v-if=\"event.date?.start\" class=\"mn-r-nano d-inline-block w-max pd-b-micro pd-t-micro pd-r-thin pd-l-thin radius-small t-medium bg-white\">\n              <IconDate :fill=\"'rgb(var(--black))'\" class=\"w-1r h-auto\"/>\n              {{formatDate(event.date.start)}}\n            </span>\n\n\n            <span\n              v-for=\"(chip, index) in event.tags\"\n              :key=\"index\"\n              class=\"d-inline-flex pd-b-micro   pd-t-micro pd-r-thin pd-l-thin radius-small bg-main\"\n            >\n              {{ chip }}\n            </span>\n          </div>\n\n          <p class=\"z-index-1  p-big mn-b-semi\">\n            {{event?.description}}\n          </p>\n\n          <hr v-if=\"event?.content?.length > 0\" class=\"bg-black-transp-10 mn-b-semi mn-t-semi d-block\">\n\n          <Viewer\n            v-if=\"event && event.content\"\n            :content=\"event.content\"\n            :notitle=\"true\"\n          />\n\n        </div>\n\n        <div class=\"\">\n         \n          <div class=\"radius-semi pd-medium bg-light mn-b-thin\">\n\n            <div class=\"mn-b-small flex-nowrap flex-v-center flex pos-relative\">\n              <h4 class=\"mn-r-auto\">Tickets</h4>\n              <PhotoStack\n                :number=\"event.numberOfTickets\"\n                :photos=\"event.participantsPhotos\" \n              />\n            </div>\n            <div v-if=\"event?.ticketsTypes?.length > 0\" v-for=\"ticketType in event.ticketsTypes\" class=\"pd-medium w-100 radius-medium bg-white mn-b-small\">\n              <div class=\"flex-nowrap mn-b-small p-big flex\">\n                  <span class=\"mn-r-auto\">{{ticketType.name}}</span>\n                  <span class=\"t-medium\">{{ticketType.price}} {{returnCurrency()}}</span>\n              </div>\n              <a :href=\"ticketType.link\"  class=\"d-block t-center pd-l-medium pd-r-medium pd-t-small pd-b-small radius-extra uppercase t-medium t-white w-100 bg-second  \">\n                Buy Now\n              </a>\n            </div>\n\n            <ButtonJoin \n              v-if=\"auth.state.user._id && !event?.ticketsTypes?.length > 0\"\n              :type=\"'event'\" \n              :hasTicket=\"event.hasTicket\" \n              :targetId=\"event._id\" \n              :userId=\"auth.state.user._id\"\n              class=\" w-100 pd-medium mn-auto\"\n              @updateTicket=\"handleTicketUpdate\"\n            />\n\n            <p v-if=\"event?.ticketsTypes.length > 0\" class=\"z-index-1 t-transp p-small mn-t-small \">Buy ticket online with special price:</p>\n            <Countdown \n              v-if=\"event?.date?.start && event?.ticketsTypes?.length > 0\"\n              class=\"mn-t-thin radius-medium bg-white w-100\"\n              :date=\"event?.date?.start\"\n            />\n          </div>\n\n\n        </div>\n\n        <Comments \n          v-if=\"!isLoading && event\" \n          :type=\"'event'\" \n          :target=\"event._id\" \n          :owner=\"auth.state.user._id\"\n        />\n\n      </div>\n      \n  </TransitionGroup>  \n\n  </section>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue';\n\nimport Loader from '@martyrs/src/components/Loader/Loader.vue';\nimport Chips from '@martyrs/src/components/Chips/Chips.vue';\nimport EmptyState from '@martyrs/src/components/EmptyState/EmptyState.vue';\n\nimport Viewer from '@martyrs/src/modules/constructor/components/sections/Viewer.vue';\n\nimport Countdown from \"@martyrs/src/components/Countdown/Countdown.vue\";\n\nimport HeroEvent from '@martyrs/src/modules/events/components/sections/HeroEvent.vue';\n\nimport PhotoStack from \"@martyrs/src/modules/globals/views/components/elements/PhotoStack.vue\";\n\nimport { SkeletonEvent, IconDate } from '@martyrs/src/modules/icons/icons.client.js';\n\nimport ButtonJoin from '@martyrs/src/modules/events/components/elements/ButtonJoin.vue';\nimport Comments from '@martyrs/src/modules/community/components/sections/Comments.vue';\n\nimport Image from '@martyrs/src/modules/constructor/components/elements/Image.vue';\nimport User from '@martyrs/src/modules/auth/views/components/blocks/CardUser.vue';\n\nimport * as events from '@martyrs/src/modules/events/store/events.js';\nimport * as tickets from '@martyrs/src/modules/events/store/tickets.js';\nimport * as auth from '@martyrs/src/modules/auth/views/store/auth.js';\n\nimport { useRoute } from 'vue-router';\n\nconst route = useRoute();\nconst qrcode = ref(null);\n\nconst handleTicketUpdate = ({ ticket, hasTicket, targetId }) => {\n  tickets.mutations.handleTicketUpdate(event.value, ticket, hasTicket, targetId);\n  console.log('HANDLE TICKET UPDATE', ticket, event.value);\n  qrcode.value = ticket.qrcode;\n};\n\nfunction clickBuyTicket() {\n   gtag('event', 'buy_ticket', {\n      'event_category': 'conversion',\n      'event_label': 'Buy Ticket'\n   });\n}\n\nconst event = ref(null);\nconst isLoading = ref(true);\n\nonMounted(async () => {\n   isLoading.value = true;\n\n   const data = await events.read({\n      user: auth.state.user._id,\n      url: route.params.url\n   });\n\n   event.value = data[0];\n   isLoading.value = false;\n});\n</script>\n\n\n<style>\n  #eventPage {\n    display: block;\n  }\n</style>",
                "name": "Event.vue",
                "size": 5940,
                "type": "source"
              },
              {
                "path": "../../src/modules/events/components/pages/Events.vue",
                "relativePath": "modules/events/components/pages/Events.vue",
                "extension": ".vue",
                "content": "<template>\n  <section class=\"bg-white\"> \n    <div class=\"gap-medium pos-t-0 pos-sticky z-index-3 radius-medium \">\n      <DatePicker\n        @update:date=\"handleDatePickerChange\"\n        :locale=\"$i18n.locale\"\n        :options=\"{\n          dateStart: 0,\n          dateEnd: 30\n        }\"\n        class=\"bs-black-small br-b br-solid br-black-transp-10 o-hidden bg-white  pd-l-zero pd-r-zero pd-medium\"\n      />\n    </div>\n\n   <section class=\"pd-big mobile:pd-thin radius-tr-medium radius-tl-medium bg-white\"> \n\n    <div class=\"gap-medium radius-medium mn-b-semi\">\n      <h2\n        class=\"mn-b-small\"\n      >\n        Events in <p @click=\"openCitySelectionPopup\" class=\"d-inline-block hover-bg-second hover-t-white  cursor-pointer transition-elastic transition-timing-1 h2 pd-micro pd-t-thin pd-r-small pd-l-small br-solid br-1px br-black-transp-10 radius-extra\">Phuket</p>\n      </h2>\n\n      <Popup  \n        @close-popup=\"closeCitySelectionPopup\" \n        :isPopupOpen=\"isCitySelectionPopup\"\n        class=\"w-m-33r t-left pd-medium bg-white radius-semi\"\n\n      >\n        <CitySelection/>\n      </Popup>\n\n     <EventsHot \n      :options=\"{\n      }\"\n    />\n    </div>\n\n\n    <FeaturedEvents class=\"mn-b-semi\"/>\n    <SelectDate \n      class=\"mn-b-semi\"\n      @date-selected=\"handleDateSelection\" \n    />\n\n    <div class=\"gap-medium radius-medium mn-b-semi\">\n\n      <h3\n        class=\"mn-b-small\"\n      >\n         Most Happening Organizers\n      </h3>\n      <Feed\n        :showLoadMore=\"false\"\n        :LoadMore=\"false\"\n        :states=\"{\n          empty: {\n            title: 'No Organization Found',\n            description: 'Currently, there are no organization available.'\n          }\n        }\"\n        :store=\"{\n          read: (options) => organizations.actions.read(options),\n          state: organizations.state\n        }\"\n        :options=\"{\n            user: auth.state.user._id,\n            sort: 'numberOfMemberships',\n            contain: ['blogposts'],\n            lookup: ['blogposts'],\n            limit: 6\n        }\"\n        v-slot=\"{ \n          items \n        }\"\n        class=\"cols-2 gap-thin\"\n      >\n        <CardOrganization \n          v-for=\"organization in items\"\n          :key=\"organization._id\" \n          :organization=\"organization\"\n          :user=\"auth.state.user\"\n          :showProducts=\"false\"\n          :showRating=\"false\"\n          :showFeatured=\"false\"\n          :showFollowers=\"false\"\n          @updateMembership=\"handleMembershipUpdate\"\n          class=\"pd-small w-100 pd-0 bg-light radius-semi o-hidden\"\n        />\n      </Feed>\n\n    </div>\n    \n    <div class=\"gap-medium radius-medium\">\n\n      <h3\n        class=\"mn-b-small\"\n      >\n        All Events\n      </h3>\n\n      <Feed\n        :search=\"true\"\n         :showLoadMore=\"false\"\n        :states=\"{\n          empty: {\n            title: 'No Events Today',\n            description: 'Currently, there are no events available.'\n          }\n        }\"\n        :store=\"{\n          read: (options) => events.read(options),\n          state: events.state\n        }\"\n        :options=\"{\n            user: auth.state.user._id,\n            limit: 9\n        }\"\n        v-slot=\"{ \n          items \n        }\"\n        class=\"cols-3 mobile:cols-1 gap-thin\"\n      >\n         <CardEvent \n          @click=\"$router.push({name: 'Event', params: {url: event.url}})\" \n          v-for=\"(event,index) in items\" \n          :key=\"event._id\" \n          :event=\"event\" \n          :user=\"auth.state.user._id\" \n          :type=\"'normal'\"\n          class=\"bg-light radius-big\"\n        >\n        </CardEvent>\n      </Feed>\n\n    </div>\n\n    </section>\n  </section>\n</template>\n\n<script setup=\"props\">\n  import { computed, onMounted, watch, ref } from 'vue';\n  import { useRoute, useRouter } from 'vue-router';\n\n  import Breadcrumbs from '@martyrs/src/components/Breadcrumbs/Breadcrumbs.vue';\n  import Feed from '@martyrs/src/components/Feed/Feed.vue'\n  import Popup from '@martyrs/src/components/Popup/Popup.vue'\n  import DatePicker from '@martyrs/src/components/DatePicker/DatePicker.vue'\n\n  import CitySelection from '@martyrs/src/modules/globals/views/components/partials/CitySelection.vue';\n\n  import FeaturedEvents from '@martyrs/src/modules/events/components/sections/FeaturedEvents.vue';   \n  import SelectDate from '@martyrs/src/modules/events/components/sections/SelectDate.vue';   \n\n  import EventsHot from '@martyrs/src/modules/events/components/sections/EventsHot.vue';   \n  import CardEvent from '@martyrs/src/modules/events/components/blocks/CardEvent.vue';\n  import CardOrganization from '@martyrs/src/modules/organizations/components/blocks/CardOrganization.vue'\n\n  // Import state\n  import * as auth from '@martyrs/src/modules/auth/views/store/auth.js'\n  import * as organizations from '@martyrs/src/modules/organizations/store/organizations.js'\n  import * as memberships from '@martyrs/src/modules/organizations/store/memberships.js'\n\n\n  import * as events from '@martyrs/src/modules/events/store/events.js'; \n\n  const handleMembershipUpdate = ({ membership, status, target }, statusName, statusNumber) => {\n    memberships.mutations.handleMembershipUpdate(organizations.state.current, membership, status, target, statusName, statusNumber)\n  };\n  // State\n  const route = useRoute();\n  const router = useRouter();\n\n  // let baseDate = new Date();\n  // const formattedDate = formatDateForRouter(baseDate);\n  \n  // function formatDateForRouter(date) {\n  //   return `${date.getDate().toString().padStart(2, '0')}${(date.getMonth() + 1).toString().padStart(2, '0')}${date.getFullYear()}`;\n  // }\n\n  // if (route.query) {\n  //   const query = route.query;\n    \n  //   const newFilterValue = {\n  //     tags: query.tags ? query.tags.split(',') : null,\n  //     date: query.date ? query.date : null,\n  //   };\n\n  //   events.state.filter = newFilterValue;  // <-- Modified\n  // } else {\n  //   const newFilterValue = {\n  //     date: formattedDate,\n  //   };\n\n  //   events.state.filter = newFilterValue;\n  // }\n\n  // watch(() => events.state.filter, (newFilterValue, oldFilterValue) => {  // <-- Modified\n  //   const query = { ...route.query };\n\n  //   Object.keys(oldFilterValue).forEach(key => {\n  //     if (query[key]) {\n  //       delete query[key];\n  //     }\n  //   });\n\n  //   const newQueryValues = Object.fromEntries(\n  //     Object.entries(newFilterValue)\n  //       .filter(([key, value]) => (Array.isArray(value) && value.length > 0) || (typeof value === 'string' && value))\n  //       .map(([key, value]) => [key, Array.isArray(value) ? value.join(',') : value])\n  //   );\n  //   Object.assign(query, newQueryValues);\n\n  //   router.push({ query });\n  // }, { deep: true })\n\n  const isCitySelectionPopup = ref(false)\n\n  function openCitySelectionPopup() {\n    isCitySelectionPopup.value = true;\n  }\n  function closeCitySelectionPopup() {\n    isCitySelectionPopup.value = false;\n  }\n \n  const handleDatePickerChange = (date) => {\n    if (date) {\n      // Убедимся, что у нас действительно объект даты\n      const selectedDate = new Date(date);\n      \n      // Создаем начало дня в локальной временной зоне\n      const startOfDay = new Date(selectedDate);\n      startOfDay.setHours(0, 0, 0, 0);\n      \n      // Создаем конец дня в локальной временной зоне\n      const endOfDay = new Date(selectedDate);\n      endOfDay.setHours(23, 59, 59, 999);\n      \n      router.push({\n        name: 'Events Search',\n        query: {\n          period: 'day',\n          periodStart: startOfDay.toISOString(),\n          periodEnd: endOfDay.toISOString()\n        }\n      });\n    }\n  };\n\n  // Update the existing handleDateSelection method\n  const handleDateSelection = (dateData) => {\n    console.log('Selected date data:', dateData);\n    router.push({\n      name: 'Events Search',\n      query: {\n        periodStart: dateData.startDate.toISOString(),\n        periodEnd: dateData.endDate.toISOString()\n      }\n    });\n  };\n</script>\n\n<style lang=\"scss\">\n  \n</style>\n",
                "name": "Events.vue",
                "size": 7931,
                "type": "source"
              },
              {
                "path": "../../src/modules/events/components/pages/EventsBackoffice.vue",
                "relativePath": "modules/events/components/pages/EventsBackoffice.vue",
                "extension": ".vue",
                "content": "<template>\n\t<div \n\t\tclass=\"\"\n\t>\n\t\t<header \n\t\t\tclass=\"mn-b-medium pd-thin flex-v-center flex-nowrap flex\"\n\t\t>\n    \t<h2\n    \t\tclass=\"mn-r-medium\"\n    \t>\n    \t\tEvents\n    \t</h2>\n    \t\n    \t<button \n    \t\tv-if=\"auth.state.user._id === route.params.user || route.params._id\"\n    \t\t@click=\"router.push({name: 'Create Event'})\" \n    \t\tclass=\"radius-100 i-big hover-scale-1 cursor-pointer t-white bg-second\"\n    \t>\n    \t\t+\n    \t</button>\n\t\t</header>\n\n\t\t<section class=\"pd-thin rows-1 bg-white\">\n\n\t\t\t<Tab \n\t\t\t\tv-if=\"auth.state.user._id === route.params.user\"\n\t\t\t\tv-model:selected=\"tabEventOwner\"\n\t\t\t\t:tabs=\"[\n\t\t\t\t\t{ name: 'Organizer', \tvalue: 'owner' },\n\t\t\t\t\t{ name: 'Participant', \tvalue: 'participant' },\t\n\t\t\t\t]\"\n\t\t\t\tclass=\"\n\t\t\t\t\tmn-b-thin\n\t\t\t\t\tflex-child-default\n\t\t\t\t\th-max\n\t\t\t\t\to-hidden \n\t\t\t\t\th5 \n\t\t\t\t\tbg-white\n\t\t\t\t\tgap-micro pd-t-thin pd-b-thin\n\t\t\t\t\tbr-b br-solid br-black-transp\n\t\t\t\t\"\n\t\t\t\ttabClass=\"bg-light pd-small radius-small w-100\"\n\t\t\t/>\n\n\t\t\t<Feed\n\t\t\t\t:search=\"true\"\n\t\t\t\tv-model:sort=\"sort\"\n\t\t\t\tv-model:filter=\"filter\"\n\t      :states=\"{\n\t        empty: {\n\t          title: 'No Events Found',\n\t          description: 'Currently, there are no events available.'\n\t        }\n\t      }\"\n\t      :store=\"{\n\t        read: (options) => events.read(options),\n\t      }\"\n\t      :options=\"{\n\t        user: auth.state.user._id,\n\t        owner: route.params._id,\n\t        creator: route.params.user,\n\t        sortParam: 'date.start',\n\t        sortOrder: 'desc'\n\t      }\"\n\t      v-slot=\"{ \n\t        items \n\t      }\"\n\t      class=\"cols-1 gap-thin\"\n\t    >\n\t    \t<!-- <Table \n\t\t\t\t\t\tclass=\"radius-semi bg-white\"\n\t\t\t\t\t\t:items=\"items\"\n\t\t\t\t\t\t:columns=\"[{ \n\t\t\t\t\t    key: '_id', \n\t\t\t\t\t    label: 'ID',\n\t\t\t\t\t\t\tformatter: (value) => `#${value.slice(0, 4)}...${value.slice(-4)}` \n\t\t\t\t\t  },\n\t\t\t\t\t  { \n\t\t\t\t\t    key: 'name', \n\t\t\t\t\t    label: 'Name',\n\t\t\t\t\t    formatter: (value) => `${value}`\n\t\t\t\t\t  },\n\t\t\t\t\t  { \n\t\t\t\t\t    key: 'tickets', \n\t\t\t\t\t    label: 'Tickets',\n\t\t\t\t\t    formatter: (value) => value?.length || 0\n\t\t\t\t\t  },\n\t\t\t\t\t  {\n\t\t\t\t\t    key: 'status',\n\t\t\t\t\t    label: 'Status',\n\t\t\t\t\t    component: StatusBadge\n\t\t\t\t\t  },\n\t\t\t\t\t  {\n\t\t\t\t\t    key: 'date.start',\n\t\t\t\t\t    label: 'Date',\n\t\t\t\t\t    formatter: (value) => new Date(value).toLocaleDateString()\n\t\t\t\t\t  }]\" \n\t\t\t\t\t/> -->\n\t       <CardEvent \n\t        @click=\"$router.push({name: 'Event', params: {url: event.url}})\" \n\t        v-for=\"(event,index) in items\" \n\t        :key=\"event._id\" \n\t        :event=\"event\" \n\t        :user=\"auth.state.user._id\" \n\t        :type=\"'normal'\"\n\t        class=\"bg-light radius-big\"\n\t      >\n\n\t\t\t     <div \n\t\t\t      v-if=\"route.params._id || route.params.user && hasAccess(route.params._id, 'events', 'read', auth.state.accesses, auth.state.access.roles)\"\n\t\t\t      class=\"mn-b-semi w-100 bg-second button t-white uppercase\"\n\t\t\t      @click.stop=\"router.push({\n\t\t\t        name: 'Edit Event Tickets',\n\t\t\t        params: {\n\t\t\t          url: event.url\n\t\t\t        }\n\t\t\t      })\"\n\t\t\t    >\n\t\t\t      Manage Tickets\n\t\t\t    </div>\n\t      </CardEvent>\n\t    </Feed>\n\t  </section>\n\n   <!--  <Feed \n\t\t\tv-if=\"tabEventOwner ==='owner'\"\n\t  \t:user=\"auth.state.user._id\"\n\t\t\t:creator=\"route.params.user\"\n\t\t\t:owner=\"route.params._id\"\n\t\t\t:sortOrder=\"'asc'\"\n\t\t/> -->\n\n\n\t\t<!-- <Feed \n\t\t\tv-if=\"tabEventOwner ==='participant'\"\n  \t\t:user=\"auth.state.user._id\"\n  \t\t:participant=\"route.params.user\"\n  \t\t:owner=\"route.params._id\"\n\t\t\t:sortOrder=\"'desc'\"\n\t\t/> -->\n\t</div>\n</template>\n\n<script setup>\n\timport { watch, ref } from 'vue'\n\timport { useRoute, useRouter } from 'vue-router'\n\t// Components\n\timport Tab  \t\tfrom '@martyrs/src/components/Tab/Tab.vue'\n  import Feed from '@martyrs/src/components/Feed/Feed.vue'\n\nimport Table from '@martyrs/src/components/Table/Table.vue'\n\n  import CardEvent from '@martyrs/src/modules/events/components/blocks/CardEvent.vue';\n\n\timport * as auth from '@martyrs/src/modules/auth/views/store/auth.js';\n\timport * as events from '@martyrs/src/modules/events/store/events.js'; \n\t// Accessing router\n\tconst route = useRoute()\n\tconst router = useRouter()\n\t// State\n\tlet tab = route.query.tab ? route.query.tab : 'owner';\n\n\tconst tabEventOwner = ref(tab)\n\n\troute.query.tab = tabEventOwner.value\n\n\tlet filter = ref({\n    active: false,\n    class: '',\n    selected: {},\n    options: [{\n      title: 'Delivery',\n      value: 'delivery',\n      options: [\n        { label: 'Pickup', value: 'pickup' },\n        { label: 'Courier', value: 'courier' },\n        { label: 'Post', value: 'post' }\n      ]\n    },{\n      title: 'Prices',  \n      value: 'prices',\n      options: [\n        { label: 'Under 300฿',        value: '<300' },\n        { label: '300฿ to 600฿',      value: '300-600' },\n        { label: '600฿ to 1200฿',     value: '600-1200' },\n        { label: '$1200 and above',   value: '>1200' }\n      ]\n    }],\n  })\n\n  let sort = ref({\n    param: 'distance',\n    order: 'asc',\n    options: [{\n      label: 'Distance',\n      value: 'distance'\n    },{\n      label: 'Popularity',\n      value: 'views'\n    },{\n      label: 'Products',\n      value: 'numberOfProducts'\n    }]\n  })\n\n\twatch(tabEventOwner, (newValue) => {\n\t  router.replace({ query: { ...route.query, tab: newValue } });\n\t});\n</script>",
                "name": "EventsBackoffice.vue",
                "size": 5145,
                "type": "source"
              },
              {
                "path": "../../src/modules/events/components/pages/EventsSearch.vue",
                "relativePath": "modules/events/components/pages/EventsSearch.vue",
                "extension": ".vue",
                "content": "<template>\n  <section class=\"pd-big mobile:pd-thin bg-white\"> \n    <h3 class=\"mn-b-small\">\n      {{ pageTitle }}\n    </h3>\n    <Feed\n      :search=\"true\"\n      :showLoadMore=\"false\"\n      :states=\"{\n        empty: {\n          title: 'No Events',\n          description: 'Currently, there are no events available.'\n        }\n      }\"\n      :store=\"{\n        read: (options) => events.read(options),\n        state: events.state\n      }\"\n      :options=\"feedOptions\"\n      v-slot=\"{ items }\"\n      class=\"cols-1 gap-thin\"\n    >\n      <CardEvent \n        @click=\"$router.push({name: 'Event', params: {url: event.url}})\" \n        v-for=\"(event,index) in items\" \n        :key=\"event._id\" \n        :event=\"event\" \n        :user=\"auth.state.user._id\" \n        :type=\"'normal'\"\n        class=\"bg-light radius-big\"\n      >\n      </CardEvent>\n    </Feed>\n  </section>\n</template>\n\n<script setup=\"props\">\n  import { computed, onMounted, watch, ref } from 'vue';\n  import { useRoute, useRouter } from 'vue-router';\n  import Feed from '@martyrs/src/components/Feed/Feed.vue'\n  import DatePicker from '@martyrs/src/components/DatePicker/DatePicker.vue' \n  import CardEvent from '@martyrs/src/modules/events/components/blocks/CardEvent.vue';\n  // Import state\n  import * as auth from '@martyrs/src/modules/auth/views/store/auth.js'\n  import * as events from '@martyrs/src/modules/events/store/events.js'; \n\n  import { useI18n } from 'vue-i18n';\n\n  // State\n  const route = useRoute();\n  const router = useRouter();\n  const { locale, t } = useI18n();\n\n  // Generate feed options based on route query parameters\n  const feedOptions = computed(() => {\n    const options = {\n      user: auth.state.user._id,\n      limit: 9\n    };\n    \n    if (route.query.periodStart) {\n      options.periodStart = route.query.periodStart;\n    }\n    \n    if (route.query.periodEnd) {\n      options.periodEnd = route.query.periodEnd;\n    }\n\n    return options;\n  });\n\n  // Format date for display in title\n  const formatDate = (dateString, format = 'long') => {\n    try {\n      const date = new Date(dateString);\n      \n      if (isNaN(date.getTime())) {\n        return '';\n      }\n      \n      return new Intl.DateTimeFormat(locale.value, \n        format === 'long' ? \n          { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' } : \n          { year: 'numeric', month: 'short', day: 'numeric' }\n      ).format(date);\n    } catch (error) {\n      console.error('Error formatting date:', error);\n      return dateString;\n    }\n  };\n\n  // Generate page title based on query parameters\n const pageTitle = computed(() => {\n  const startDate = route.query.periodStart;\n  const endDate = route.query.periodEnd;\n  \n  if (startDate && endDate) {\n    // Check if the dates represent a single day by comparing just the date parts\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    \n    // Compare only the date portions (year, month, day)\n    const isSameDay = start.getFullYear() === end.getFullYear() &&\n                     start.getMonth() === end.getMonth() &&\n                     start.getDate() === end.getDate();\n    \n    if (isSameDay) {\n      return `Events on ${formatDate(startDate)}`;\n    }\n    \n    // Otherwise it's a date range\n    return `Events from ${formatDate(startDate, 'short')} to ${formatDate(endDate, 'short')}`;\n  }\n  \n  // Fallback case\n  return 'All Events';\n});\n</script>\n\n<style lang=\"scss\">\n  \n</style>",
                "name": "EventsSearch.vue",
                "size": 3429,
                "type": "source"
              }
            ]
          },
          "sections": {
            "_files": [
              {
                "path": "../../src/modules/events/components/sections/EventsHot.vue",
                "relativePath": "modules/events/components/sections/EventsHot.vue",
                "extension": ".vue",
                "content": "<template>\n  <SliderNative\n    :store=\"{\n      read: (options) => events.read({ \n        skip, \n        limit,\n        status \n      })\n    }\"\n    :text=\"{\n      en: {\n        title: 'No Featured Events Found',\n        description: 'Currently, there are no featured events available.'\n      }\n    }\"\n    v-slot=\"{ \n      item\n    }\"\n    class=\"slider-hotpost flex-child-default\"\n  >\n\n    <router-link \n      :to=\"{name: 'Event', params: {url: item.url}}\" \n      class=\"cursor-pointer pos-relative flex flex-justify-end flex-column h-25r bg-semi radius-medium o-hidden pd-medium t-white bg-dark\"\n    >\n      <Media \n        :url=\"(FILE_SERVER_URL || '') + item.cover\"\n        class=\"pos-absolute pos-t-0 pos-r-0 z-index-1 w-100 h-100 object-fit-cover bg-light\"\n      />\n\n      <div class=\"pos-relative z-index-2\">\n        <h3 \n          class=\"mn-b-small\"\n        >\n          {{ item.name }}\n        </h3>\n        <span v-if=\"item.date?.start\" class=\"mn-r-nano d-inline-block w-max pd-b-micro pd-t-micro pd-r-thin pd-l-thin radius-small t-medium bg-white\">\n          <span class=\"t-semi t-black\" > \n            {{item.location}} / {{formatDate(item.date.start, { language: $i18n.locale, monthName: true,  })}} \n          </span>\n        </span> \n      </div>\n    </router-link>\n\n  </SliderNative>\n</template>\n\n<script setup>\nimport { ref, onMounted, defineProps } from 'vue'\n\nimport Feed from '@martyrs/src/components/Feed/Feed.vue'\nimport SliderNative from '@martyrs/src/components/Slider/Slider.native.vue'\nimport Media from '@martyrs/src/components/Media/Media.vue'\n\nimport * as events from '@martyrs/src/modules/events/store/events.js'; \nimport * as auth from '@martyrs/src/modules/auth/views/store/auth.js'\n\nconst props = defineProps({\n  skip: {\n    type: Number,\n    default: 0\n  },\n  limit: {\n    type: Number,\n    default: 8\n  },\n  userId: {\n    type: String,\n    default: () => auth.state.user._id\n  },\n  period: {\n    type: String,\n    default: 'year'\n  },\n  status: {\n    type: String,\n    default: 'featured'\n  }\n})\n</script>\n\n<style lang=\"scss\">\n.slider-hotpost .embla__slide {\n  flex: 0 0 75%;\n}\n@media screen and (max-width: 1025px) {\n  .slider-hotpost .embla__slide {\n    flex: 0 0 75%;\n  }\n}\n</style>",
                "name": "EventsHot.vue",
                "size": 2216,
                "type": "source"
              },
              {
                "path": "../../src/modules/events/components/sections/FeaturedEvents.vue",
                "relativePath": "modules/events/components/sections/FeaturedEvents.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"columns-wrapper scroll-hide gap-thin\">\n    <div class=\"column flex flex-column flex-child-default\">\n      <h3\n        class=\"mn-b-small\"\n      >\n        Planned\n      </h3>\n      <List\n        :user=\"auth.state.user._id\"\n        class=\"bg-light o-hidden h-100    pd-thin radius-medium\"\n        :phase=\"'planned'\"\n      />\n    </div>\n\n    <div class=\"column flex flex-column flex-child-default\">\n      <h3\n        class=\"mn-b-small\"\n      >\n        Finished \n      </h3>\n      <List\n        :user=\"auth.state.user._id\"\n        class=\"bg-light o-hidden h-100  pd-thin radius-medium\"\n        :phase=\"'finished'\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup=\"props\">\n  import { computed, onMounted, watch } from 'vue';\n  import { useRoute, useRouter } from 'vue-router';\n\n  import List from '@martyrs/src/modules/events/components/sections/List.vue';   \n  // Import state\n  import * as events from '@martyrs/src/modules/events/store/events.js'; \n  import * as auth from '@martyrs/src/modules/auth/views/store/auth.js'\n\n  // State\n  const route = useRoute();\n  const router = useRouter();\n</script>\n\n<style lang=\"scss\" scoped>\n.columns-container {\n  width: 100%;\n  overflow: hidden;\n}\n\n.columns-wrapper {\n  display: flex;\n  width: 100%;\n  \n  @media (min-width: 768px) {\n    /* Десктоп: 2 колонки рядом */\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n  }\n  \n  @media (max-width: 767px) {\n    /* Мобильные устройства: горизонтальный скролл */\n    overflow-x: auto;\n    scroll-snap-type: x mandatory;\n    -webkit-overflow-scrolling: touch;\n  }\n}\n\n.column {\n  @media (max-width: 767px) {\n    /* Настройки для мобильных устройств */\n    max-width: 90%;\n    flex: 0 0 auto;\n    scroll-snap-align: start;\n    \n    &:last-child {\n      margin-right: 0;\n    }\n  }\n}\n</style> ",
                "name": "FeaturedEvents.vue",
                "size": 1807,
                "type": "source"
              },
              {
                "path": "../../src/modules/events/components/sections/Feed.vue",
                "relativePath": "modules/events/components/sections/Feed.vue",
                "extension": ".vue",
                "content": "<template>\n  <section class=\"feed\">\n    <TransitionGroup tag=\"ul\" name=\"scaleTransition\" class=\"o-hidden bg-light radius-big\">\n      <Loader v-if=\"isLoading\"/>\n    </TransitionGroup>\n\n    <transition \n      name=\"scaleTransition\"\n    >\n      <EmptyState \n        v-if=\"!isLoading && eventsList.length < 1\"\n        title=\"No Events Found\"\n        description=\"Currently, there are no events available. Please check back later.\"\n        class=\"pd-medium mn-b-thin bg-light radius-big\"\n      />\n    </transition>\n\n\n    <TransitionGroup tag=\"ul\" name=\"scaleTransition\" class=\"container\">\n      <CardEvent \n        v-if=\"!isLoading && eventsList.length > 0\"\n        @click=\"$router.push({name: 'Event', params: {url: event.url}})\" \n        v-for=\"(event,index) in eventsList\" \n        :key=\"event._id\" \n        :event=\"event\" \n        :user=\"user\" \n        :type=\"'normal'\"\n        class=\"bg-light radius-big mn-b-medium\"\n      />\n\n      <button v-if=\"hasMoreEvents && eventsList.length > 0\" @click=\"loadMoreEvents\" class=\"w-100 bg-main button\">Load more</button> \n      \n    </TransitionGroup>  \n  </section>\n</template>\n\n<script setup>\n  import { ref, onMounted } from 'vue';\n  \n  import Loader from '@martyrs/src/components/Loader/Loader.vue';\n  import EmptyState from '@martyrs/src/components/EmptyState/EmptyState.vue';\n  \n  import CardEvent from '@martyrs/src/modules/events/components/blocks/CardEvent.vue';\n  import SkeletonEvent from '@martyrs/src/modules/icons/skeletons/SkeletonEvent.vue'\n\n  import * as events from '@martyrs/src/modules/events/store/events.js';\n\n  const props = defineProps({\n    category: {\n      type: String,\n      default: null\n    },\n    selectedDate: {\n      type: String,\n      default: null\n    },\n    organization: {\n      type: String,\n      default: null\n    },\n    owner: {\n      type: String,\n      default: null\n    },\n    creator: {\n      type: String,\n      default: null\n    },\n    user: {\n      type: [String, Number],\n      default: null\n    },\n    sortOrder: {\n      type: String,\n      default: 'desc'\n    },\n    sortParam: {\n      type: String,\n      default: 'date.start'\n    },\n    participant: {\n      type: String,\n      default: null\n    },\n    period: {\n      type: String,\n      default: null\n    },\n    phase: {\n      type: String,\n      default: null\n    }\n  });\n\n  const eventsList = ref([]);\n  const hasMoreEvents = ref(false);\n  const isLoading = ref(true);\n\n  const skip = ref(0);\n  const limit = ref(20);\n\n  const loadMoreEvents = async () => {\n    if (hasMoreEvents.value) {\n      skip.value += limit.value;\n      \n      const data = await events.read({\n        skip: skip.value,\n        limit: limit.value,\n        category: props.category,\n        sortOrder: props.sortOrder,\n        sortParam: props.sortParam,\n        participant: props.participant,\n        creator: props.creator,\n        user: props.user,\n        date: props.selectedDate,\n        owner: props.owner,\n        organization: props.organization,\n        period: props.period,\n        phase: props.phase\n      });\n\n      if (data.length === 0) {\n        hasMoreEvents.value = false;\n      } else {\n        hasMoreEvents.value = true;\n      }\n\n      eventsList.value = [...eventsList.value, ...data];\n    }\n  };\n\n  onMounted(async () => {\n    isLoading.value = true;\n    console.log(props.selectedDate)\n\n    const data = await events.read({\n      skip: skip.value,\n      limit: limit.value,\n      category: props.category,\n      participant: props.participant,\n      sortOrder: props.sortOrder,\n      sortParam: props.sortParam,\n      user: props.user,\n      owner: props.owner,\n      creator: props.creator,\n      date: props.selectedDate,\n      organization: props.organization,\n      period: props.period,\n      phase: props.phase\n    });\n\n    if (data.length === 0) {\n      hasMoreEvents.value = false;\n    } else {\n      hasMoreEvents.value = true;\n    }\n\n    eventsList.value = data;\n    isLoading.value = false;\n  });\n</script>\n\n<style lang=\"scss\">\n\n</style>\n",
                "name": "Feed.vue",
                "size": 3995,
                "type": "source"
              },
              {
                "path": "../../src/modules/events/components/sections/HeroEvent.vue",
                "relativePath": "modules/events/components/sections/HeroEvent.vue",
                "extension": ".vue",
                "content": "<template>\n  <section \n  \tclass=\"\n\t  \tt-white\n\t  \tt-center\n\t  \tw-100 \n\t  \tpos-relative\n\t  \tgap-thin\n\t  \tcols-1\n\t  \tpos-relative\n\t  \th-min-20r\n\t  \"\n\t >\n   \t<div \n   \t\t\n   \t\tclass=\"pos-absolute bg-white w-100 h-100 z-index-0 bg-black\"\n   \t>\n\n   \t\t<div class=\"bg-white-overlay z-index-1 w-100 h-100 pos-absolute pos-t-0 pos-r-0\">\n   \t\t</div>\n\t    <img loading=\"lazy\"  v-if=\"content.cover && !content.video\" :src=\"content.cover\" \tclass=\" object-fit-cover pos-absolute z-index-0 pos-t-0 pos-l-0 w-100 h-100\">\n\n\t\t\t<video \n\t\t\t\tv-if=\"content.video\"\n\t\t\t\tstyle=\"object-fit: cover;\" \n\t\t\t\tref=\"videoElement\"  \n\t\t\t\tclass=\"pos-absolute pos-t-0 pos-l-0 w-100 h-100\" \n\t\t\t\tpreload autoplay muted loop playsinlineclass playsinline\n\t\t\t\titemprop=\"video\" \n\t\t\t\ttype=\"video/webm\"\n\t\t\t>\n\t\t\t\t <source :src=\"content.video\" :type=\"getVideoType(content.video)\" />\n\t\t\t</video>\n\t  </div>\n\n   \t<div \n   \t\tclass=\"\n\t  \to-hidden \n\t  \tpos-relative\n\t  \tz-index-1\n\t  \tpd-extra \n\t  \tpd-b-zero\n\t  \tmn-r-auto mn-l-auto \n\t  \tt-white  t-left\n\t  \tflex flex-justify-end flex-column\n\t  \to-hidden  \n\t  \tw-100 h-100 \n\t  \tgap-zero\"\n\t  >\n    \t\n    </div>\n  </section>\n</template>\n\n\n<script setup>\n\timport { ref, onMounted } from 'vue'\n\timport { useI18n } from 'vue-i18n'\n\n\tconst props = defineProps({\n\t\tcontent: {\n\t\t\ttype: Object\n\t\t},\n\t\toptions: {\n\t\t\ttype: Object\n\t\t}\n\t})\n\n\n\tconst videoElement = ref(null)\n\n\tvar isPlaying = false;\n\n\tconst targetDate = new Date(props.options.date).getTime();\n\tconst currentDate = ref(new Date().getTime());\n\tconst timeDifference = targetDate - currentDate.value;\n\n\tfunction checkAndPlayVideo() {\n\t\tif (videoElement.value) videoElement.value.onplaying = function() { isPlaying = true; };\n\t\tif (videoElement.value) videoElement.value.onpause = function() { isPlaying = false; };\t\n  }\n\n  function getVideoType(videoUrl) {\n    if (videoUrl.endsWith('.mp4')) {\n      return 'video/mp4';\n    } else if (videoUrl.endsWith('.webm')) {\n      return 'video/webm';\n    }\n    return '';\n  }\n\n\tasync function playVid() {      \n    if (videoElement.value?.paused && !isPlaying) {\n      return videoElement.value.play();\n    }\n\t} \n\n\tonMounted(() => {\n\t\t\tcheckAndPlayVideo()\n\t\t\tplayVid()\n\t})\n\n</script>\n\n<style lang=\"scss\" scoped>\n.bg-white-overlay {\n  background: linear-gradient(0deg, rgba(var(--white),1) 0%, rgba(var(--white),0) 100%);\n}\n</style>\n",
                "name": "HeroEvent.vue",
                "size": 2318,
                "type": "source"
              },
              {
                "path": "../../src/modules/events/components/sections/List.vue",
                "relativePath": "modules/events/components/sections/List.vue",
                "extension": ".vue",
                "content": "<template>\n  <section \n    class=\"today-events\"\n  >\n    <!-- <transition name=\"fade\">\n      <Loader v-if=\"isLoading\" class=\"z-index-5 pos-t-50 left-t-50 pos-absolute\"/>\n    </transition> -->\n\n    <TransitionGroup tag=\"ul\" name=\"fade\" class=\"o-hidden bg-white radius-medium\">\n      <SkeletonEventShort\n        v-if=\"isLoading\"\n        v-for=\"i in limit\" :key=\"i\"\n      />\n    </TransitionGroup>\n\n    <transition \n      name=\"fade\"\n    >\n      <EmptyState \n        v-if=\"!isLoading && eventsList.length < 1\"\n        title=\"No Planned Events \"\n        description=\"No events available. Please check back later.\"\n        class=\"pd-medium h-100 bg-white radius-medium\"\n      />\n    </transition>\n\n\n    <TransitionGroup tag=\"ul\" name=\"fade\" class=\"container\">\n      <CardEvent \n        v-if=\"!isLoading && eventsList.length > 0\"\n        @click=\"$router.push({name: 'Event', params: {url: event.url}})\" \n        v-for=\"(event,index) in eventsList\" \n        :key=\"event._id\" \n        :event=\"event\" \n        :owner=\"user\" \n        :type=\"'short'\"\n        class=\"pd-medium mobile:pd-thin\"\n        :class=\"{\n          'br-b br-solid br-black-transp-10': index !== eventsList.length - 1\n        }\"\n      />\n    </TransitionGroup>\n    \n  </section>\n</template>\n\n<script setup>\n  import { ref, onMounted } from 'vue';\n  \n\n  import Loader from '@martyrs/src/components/Loader/Loader.vue';\n  import EmptyState from '@martyrs/src/components/EmptyState/EmptyState.vue';\n\n  import CardEvent from '@martyrs/src/modules/events/components/blocks/CardEvent.vue';\n\n  import SkeletonEvent from '@martyrs/src/modules/icons/skeletons/SkeletonEvent.vue'\n  import SkeletonEventShort from '@martyrs/src/modules/icons/skeletons/SkeletonEventShort.vue'\n\n  import * as events from '@martyrs/src/modules/events/store/events.js';\n\n  const props = defineProps({\n    category: {\n      type: String,\n      default: null\n    },\n    status: {\n      type: String,\n      default: null\n    },\n    organization: {\n      type: String,\n      default: null\n    },\n    owner: {\n      type: String,\n      default: null\n    },\n    user: {\n      type: [String, Number],\n      default: null\n    },\n    period: {\n      type: String,\n      default: null\n    },\n    phase: {\n      type: String,\n      default: null\n    }\n  });\n\n  const eventsList = ref([]);\n  const isLoading = ref(true);\n\n  const skip = ref(0);\n  const limit = ref(3);\n\n  onMounted(async () => {\n    const data = await events.read({\n      skip: skip.value,\n      limit: limit.value,\n      sortOrder: 'desc',\n      category: props.category,\n      user: props.user,\n      owner: props.owner,\n      organization: props.organization,\n      period: props.period,\n      phase: props.phase,\n      status: props.status\n    });\n\n    eventsList.value = data;\n    isLoading.value = false;\n  });\n</script>\n\n<style lang=\"scss\">\n</style>\n",
                "name": "List.vue",
                "size": 2838,
                "type": "source"
              },
              {
                "path": "../../src/modules/events/components/sections/SelectDate.vue",
                "relativePath": "modules/events/components/sections/SelectDate.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"gap-medium radius-medium mn-b-semi\">\n    <h3 class=\"mn-b-small\">\n      {{ title }}\n    </h3>\n    \n    <div class=\"cols-3 mobile:cols-1 mobile:cols-2 gap-thin\">\n      <div \n        v-for=\"(date, index) in computedDateOptions\" \n        :key=\"index\"\n        class=\"bg-light radius-medium pd-medium cursor-pointer\"\n        @click=\"handleDateSelect(date)\"\n      >\n        <h4 class=\"t-medium\">{{ date.label }}</h4>\n        <div class=\"text-small text-muted\">{{ date.range }}</div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed, defineProps, defineEmits } from 'vue'\n\nconst props = defineProps({\n  title: {\n    type: String,\n    default: 'Explore by Date'\n  },\n  locale: {\n    type: String,\n    default: 'en-US'\n  },\n  labels: {\n    type: Object,\n    default: () => ({\n      today: 'Today',\n      tomorrow: 'Tomorrow',\n      thisWeekend: 'This Weekend',\n      thisWeek: 'This Week',\n      nextWeekend: 'Next Weekend',\n      nextWeek: 'Next Week',\n      thisMonth: 'This Month',\n      customDate: 'Custom Date',\n      pickRange: 'Pick Range'\n    })\n  },\n  customDateOptions: {\n    type: Array,\n    default: () => []\n  }\n});\n\nconst emit = defineEmits(['date-selected']);\n\n// Форматирование одиночной даты с месяцем после числа\nconst formatSingleDate = (date) => {\n  // Получаем отдельные форматированные части\n  const weekday = new Intl.DateTimeFormat(props.locale, { weekday: 'short' }).format(date);\n  const day = new Intl.DateTimeFormat(props.locale, { day: 'numeric' }).format(date);\n  const month = new Intl.DateTimeFormat(props.locale, { month: 'short' }).format(date);\n  \n  // Собираем в нужном порядке: день недели, число месяца\n  return `${weekday}, ${day} ${month}`;\n};\n\n// Форматирование диапазона дат с месяцем после числа\nconst formatDateRange = (startDate, endDate) => {\n  const sameMonth = startDate.getMonth() === endDate.getMonth();\n  \n  // Форматируем начало и конец диапазона\n  const startDay = new Intl.DateTimeFormat(props.locale, { day: 'numeric' }).format(startDate);\n  const endDay = new Intl.DateTimeFormat(props.locale, { day: 'numeric' }).format(endDate);\n  const startMonth = new Intl.DateTimeFormat(props.locale, { month: 'short' }).format(startDate);\n  const endMonth = new Intl.DateTimeFormat(props.locale, { month: 'short' }).format(endDate);\n  \n  if (sameMonth) {\n    // Если один и тот же месяц: \"1 - 2 Jan\"\n    return `${startDay} - ${endDay} ${startMonth}`;\n  } else {\n    // Если разные месяцы: \"30 Dec - 5 Jan\"\n    return `${startDay} ${startMonth} - ${endDay} ${endMonth}`;\n  }\n};\n\n// Вспомогательная функция для установки времени на начало дня (00:00:00)\nconst setStartOfDay = (date) => {\n  const result = new Date(date);\n  result.setHours(0, 0, 0, 0);\n  return result;\n};\n\n// Вспомогательная функция для установки времени на конец дня (23:59:59.999)\nconst setEndOfDay = (date) => {\n  const result = new Date(date);\n  result.setHours(23, 59, 59, 999);\n  return result;\n};\n\nconst computedDateOptions = computed(() => {\n  if (props.customDateOptions.length > 0) {\n    return props.customDateOptions;\n  }\n  \n  const today = new Date();\n  const tomorrow = new Date(today);\n  tomorrow.setDate(tomorrow.getDate() + 1);\n  \n  // Расчет текущих выходных (следующие суббота и воскресенье)\n  const thisWeekendStart = new Date(today);\n  const daysUntilWeekend = (6 - today.getDay()); // 6 - суббота\n  thisWeekendStart.setDate(today.getDate() + (daysUntilWeekend <= 0 ? daysUntilWeekend + 7 : daysUntilWeekend));\n  \n  const thisWeekendEnd = new Date(thisWeekendStart);\n  thisWeekendEnd.setDate(thisWeekendStart.getDate() + 1);\n  \n  // Расчет текущей недели (воскресенье - суббота)\n  const thisWeekStart = new Date(today);\n  thisWeekStart.setDate(today.getDate() - today.getDay());\n  \n  const thisWeekEnd = new Date(thisWeekStart);\n  thisWeekEnd.setDate(thisWeekStart.getDate() + 6);\n  \n  // Расчет следующих выходных\n  const nextWeekendStart = new Date(thisWeekendStart);\n  nextWeekendStart.setDate(nextWeekendStart.getDate() + 7);\n  \n  const nextWeekendEnd = new Date(nextWeekendStart);\n  nextWeekendEnd.setDate(nextWeekendStart.getDate() + 1);\n  \n  // Расчет следующей недели\n  const nextWeekStart = new Date(thisWeekStart);\n  nextWeekStart.setDate(nextWeekStart.getDate() + 7);\n  \n  const nextWeekEnd = new Date(nextWeekStart);\n  nextWeekEnd.setDate(nextWeekStart.getDate() + 6);\n  \n  // Расчет текущего месяца\n  const thisMonthStart = new Date(today.getFullYear(), today.getMonth(), 1);\n  const thisMonthEnd = new Date(today.getFullYear(), today.getMonth() + 1, 0);\n  \n  return [\n    { \n      label: props.labels.today, \n      range: formatSingleDate(today),\n      data: { \n        startDate: setStartOfDay(today), \n        endDate: setEndOfDay(today) \n      }\n    },\n    { \n      label: props.labels.tomorrow, \n      range: formatSingleDate(tomorrow),\n      data: { \n        startDate: setStartOfDay(tomorrow), \n        endDate: setEndOfDay(tomorrow) \n      }\n    },\n    { \n      label: props.labels.thisWeekend, \n      range: formatDateRange(thisWeekendStart, thisWeekendEnd),\n      data: { \n        startDate: setStartOfDay(thisWeekendStart), \n        endDate: setEndOfDay(thisWeekendEnd) \n      }\n    },\n    { \n      label: props.labels.thisWeek, \n      range: formatDateRange(thisWeekStart, thisWeekEnd),\n      data: { \n        startDate: setStartOfDay(thisWeekStart), \n        endDate: setEndOfDay(thisWeekEnd) \n      }\n    },\n    { \n      label: props.labels.nextWeekend, \n      range: formatDateRange(nextWeekendStart, nextWeekendEnd),\n      data: { \n        startDate: setStartOfDay(nextWeekendStart), \n        endDate: setEndOfDay(nextWeekendEnd) \n      }\n    },\n    { \n      label: props.labels.nextWeek, \n      range: formatDateRange(nextWeekStart, nextWeekEnd),\n      data: { \n        startDate: setStartOfDay(nextWeekStart), \n        endDate: setEndOfDay(nextWeekEnd) \n      }\n    },\n    // { \n    //   label: props.labels.thisMonth, \n    //   range: formatDateRange(thisMonthStart, thisMonthEnd),\n    //   data: { \n    //     startDate: setStartOfDay(thisMonthStart), \n    //     endDate: setEndOfDay(thisMonthEnd) \n    //   }\n    // },\n    // { \n    //   label: props.labels.customDate, \n    //   range: props.labels.pickRange,\n    //   data: { \n    //     startDate: null, \n    //     endDate: null,\n    //     isCustom: true\n    //   }\n    // }\n  ];\n});\n\nconst handleDateSelect = (date) => {\n  emit('date-selected', date.data);\n};\n</script>\n\n<style lang=\"scss\">\n/* Стили остаются неизменными */\n</style>",
                "name": "SelectDate.vue",
                "size": 6502,
                "type": "source"
              }
            ]
          }
        }
      },
      "files": {
        "controllers": {
          "_files": [
            {
              "path": "../../src/modules/files/controllers/files.controller.js",
              "relativePath": "modules/files/controllers/files.controller.js",
              "extension": ".js",
              "content": "const controllerFactory = (db, publicPath) => {\n  const uploadMultipleFileController = async (req, res, next) => {\n    if (!req.files || req.files.length === 0) {\n      return res.status(400).send({ message: 'No files uploaded.' });\n    }\n    const convertToRelativePath = absolutePath => {\n      if (!absolutePath.startsWith('/')) {\n        absolutePath = '/' + absolutePath;\n      }\n      return absolutePath;\n    };\n    req.files = req.files.map(file => convertToRelativePath(file));\n    console.log(req.files);\n    try {\n      const fileResponses = req.files.map(file => ({\n        message: 'File uploaded successfully.',\n        filepath: file,\n      }));\n      res.status(200).send(fileResponses);\n    } catch (error) {\n      console.error('Error in uploadMultipleFileController:', error);\n      return res.status(500).send({ message: 'Error during files processing.' });\n    }\n  };\n  return {\n    uploadMultipleFileController,\n  };\n};\nexport default controllerFactory;\n",
              "name": "files.controller.js",
              "size": 976,
              "type": "source"
            }
          ]
        },
        "_files": [
          {
            "path": "../../src/modules/files/files.client.js",
            "relativePath": "modules/files/files.client.js",
            "extension": ".js",
            "content": "// // Importing Vue components from the components directory\n// // import Profile from './components/pages/Profile.vue';\n// // import ProfileEdit from './components/pages/ProfileEdit.vue';\n\n// // Importing Vuex store modules from the store directory\n// import * as filesStore from './store/files.store.js';\n\n// // Importing Vue Router routes from the router directory\n// import filesRoutes from './router/files.router.js';\n\n// // Exporting components, store modules, and routes\n// export {\n//   Profile,\n//   ProfileEdit,\n//   filesStore,\n//   filesRoutes\n// };\n",
            "name": "files.client.js",
            "size": 562,
            "type": "source"
          },
          {
            "path": "../../src/modules/files/files.server.js",
            "relativePath": "modules/files/files.server.js",
            "extension": ".js",
            "content": "import filesController from './controllers/files.controller.js';\nimport filesRoutes from './routes/files.routes.js';\nfunction initializeFiles(app, db, origins, publicPath) {\n  // Настраиваем маршруты, если объект приложения передан\n  if (app) {\n    filesRoutes(app, db, origins, publicPath);\n  }\n}\nexport const routes = {\n  filesRoutes,\n};\nexport const controllers = {\n  filesController,\n};\nexport { initializeFiles as initialize };\nexport default {\n  initialize: initializeFiles,\n  routes,\n  controllers,\n};\n",
            "name": "files.server.js",
            "size": 509,
            "type": "source"
          }
        ],
        "middlewares": {
          "server": {
            "_files": [
              {
                "path": "../../src/modules/files/middlewares/server/index.js",
                "relativePath": "modules/files/middlewares/server/index.js",
                "extension": ".js",
                "content": "// Импортируем модуль middlewareBusboy\nimport middlewareBusboyModule from './middlewareBusboy.js';\n\nconst middlewareIndexFactory = (db, publicPath) => {\n  const middlewareBusboy = middlewareBusboyModule(db, publicPath);\n  \n  return {\n    middlewareBusboy,\n  };\n};\n\nexport default middlewareIndexFactory;",
                "name": "index.js",
                "size": 303,
                "type": "source"
              },
              {
                "path": "../../src/modules/files/middlewares/server/middlewareBusboy.js",
                "relativePath": "modules/files/middlewares/server/middlewareBusboy.js",
                "extension": ".js",
                "content": "import busboy from 'busboy';\nimport * as fs from 'node:fs';\nimport * as fsp from 'node:fs/promises';\nimport * as path from 'node:path';\nimport sharp from 'sharp';\nconst convertToJpg = async filePath => {\n  const metadata = await sharp(filePath).metadata();\n  if (metadata.format === 'heic' || metadata.format === 'heif' || metadata.format === 'tiff' || metadata.format === 'bmp') {\n    const jpgPath = filePath.replace(/\\.[^.]+$/, '.jpg');\n    await sharp(filePath).toFormat('jpeg').toFile(jpgPath);\n    await fsp.unlink(filePath);\n    filePath = jpgPath;\n  }\n  return filePath;\n};\nconst createThumbnail = async originalPath => {\n  const thumbnailPath = path.join(path.dirname(originalPath), 'thumbnail_' + path.basename(originalPath));\n  try {\n    const metadata = await sharp(originalPath).metadata();\n    const resizeOptions = {};\n    if (metadata.width > 512) {\n      resizeOptions.width = 512;\n    }\n    await sharp(originalPath).rotate().resize(resizeOptions).toFile(thumbnailPath);\n  } catch (error) {\n    console.error('Error creating thumbnail:', error);\n    throw error;\n  }\n};\nconst handleFileUpload = (req, res, next, publicPath, { folderNameDefault = 'unsorted', maxSize = 10 * 1024 * 1024, allowedTypes = null }) => {\n  let folderName = req.query.folderName || folderNameDefault;\n  folderName = decodeURIComponent(folderName);\n  folderName = folderName.startsWith('/') ? folderName : '/' + folderName;\n  const filePath = path.join(publicPath, folderName);\n  let files = [];\n  let filesWrongSize = [];\n  let filesWrongType = [];\n  let fileProcessingPromises = []; // Массив для отслеживания промисов обработки файлов\n  const bb = busboy({\n    headers: req.headers,\n    limits: { fileSize: maxSize },\n  });\n  bb.on('file', (name, file, info) => {\n    console.log(`Received file: ${info.filename}, Type: ${info.mimeType}`);\n    const isValidType = !allowedTypes || allowedTypes.includes(info.mimeType);\n    if (!isValidType) {\n      console.log(`File of wrong type: ${info.filename}`);\n      filesWrongType.push(info.filename);\n      file.resume();\n      return;\n    }\n    const normalizeFileName = filename => {\n      return (\n        filename\n          // Заменяем пробелы на подчеркивания\n          .replace(/\\s/g, '_')\n          // Удаляем или заменяем небезопасные символы\n          .replace(/[^a-zA-Z0-9-_.]/g, '')\n          // Опционально: сокращаем имя файла, если оно слишком длинное\n          .slice(0, 80)\n      );\n    };\n    // Применяем нормализацию к имени файла\n    const fileName = `${Math.floor(Math.random() * 10000)}-${normalizeFileName(info.filename)}`;\n    let fileFullPath = path.join(filePath, fileName);\n    const fileProcess = fsp.mkdir(path.dirname(fileFullPath), { recursive: true }).then(\n      () =>\n        new Promise((resolve, reject) => {\n          const stream = file.pipe(fs.createWriteStream(fileFullPath));\n          stream.on('finish', async () => {\n            files.push(path.relative(publicPath, fileFullPath));\n            resolve();\n          });\n          stream.on('error', reject);\n        })\n    );\n    fileProcessingPromises.push(fileProcess);\n    file.on('limit', () => {\n      filesWrongSize.push(info.filename);\n      fsp.unlink(fileFullPath).catch(err => console.error(`Error deleting oversized file: ${err.message}`));\n    });\n  });\n  bb.on('finish', () => {\n    Promise.all(fileProcessingPromises)\n      .then(() => {\n        console.log(`Upload finished. Files: ${files.length}, Wrong Size: ${filesWrongSize.length}, Wrong Type: ${filesWrongType.length}`);\n        req.files = files;\n        if (files.length === 0 && (filesWrongSize.length > 0 || filesWrongType.length > 0)) {\n          let errorMessage = 'No files uploaded.';\n          if (filesWrongSize.length > 0) {\n            errorMessage += ' Some files were too large.';\n          }\n          if (filesWrongType.length > 0) {\n            errorMessage += ' Some files were of an unsupported type.';\n          }\n          return res.status(400).json({ message: errorMessage });\n        }\n        next();\n      })\n      .catch(error => {\n        console.error('Failed processing one or more files', error);\n        res.status(500).json({ message: 'Error processing files' });\n      });\n  });\n  req.pipe(bb);\n};\nconst middlewareFactory = (db, publicPath) => {\n  const generatePreviewMiddleware = async (req, res, next) => {\n    const files = req.files;\n    if (!files || files.length === 0) {\n      return next();\n    }\n    try {\n      await Promise.all(files.map(file => createThumbnail(path.join(publicPath, file))));\n    } catch (error) {\n      console.error('Error generating previews:', error);\n      return res.status(500).json({ message: 'Internal server error while generating previews.' });\n    }\n    next();\n  };\n  const convertImagesMiddleware = async (req, res, next) => {\n    const files = req.files;\n    if (!files || files.length === 0) {\n      return next();\n    }\n    try {\n      req.files = await Promise.all(\n        files.map(async file => {\n          const convertedPath = await convertToJpg(path.join(publicPath, file));\n          return path.relative(publicPath, convertedPath);\n        })\n      );\n      next();\n    } catch (error) {\n      console.error('Error converting images or generating previews:', error);\n      return res.status(500).json({ message: 'Internal server error while processing images.' });\n    }\n  };\n  const uploadFilesMiddleware = (req, res, next) => {\n    const allowedTypes = [\n      // Images\n      'image/png',\n      'image/jpeg',\n      'image/jpg',\n      'image/gif',\n      'image/heic',\n      'image/heif',\n      'image/webp',\n      'image/tiff',\n      'image/bmp',\n      'image/svg+xml',\n      // Video\n      'video/mp4',\n      'video/quicktime',\n      'video/webm',\n      // Audito\n      'audio/mpeg',\n      'audio/wav',\n      'audio/ogg',\n      'audio/flac',\n      'audio/aac',\n      'audio/x-ms-wma',\n      'audio/aiff',\n    ];\n    handleFileUpload(req, res, next, publicPath, {\n      folderNameDefault: 'unsorted',\n      maxSize: 100 * 1024 * 1024,\n      allowedTypes,\n    });\n  };\n  const uploadAudioMiddleware = (req, res, next) => {\n    const allowedTypes = ['audio/mpeg', 'audio/wav', 'audio/ogg', 'audio/flac', 'audio/aac', 'audio/x-ms-wma', 'audio/aiff'];\n    handleFileUpload(req, res, next, publicPath, {\n      folderNameDefault: 'unsorted',\n      maxSize: 10 * 1024 * 1024,\n      allowedTypes,\n    });\n  };\n  const uploadImagesMiddleware = (req, res, next) => {\n    const allowedTypes = ['image/png', 'image/jpeg', 'image/jpg', 'image/gif', 'image/heic', 'image/heif', 'image/webp', 'image/tiff', 'image/bmp'];\n    handleFileUpload(req, res, next, publicPath, {\n      folderNameDefault: 'unsorted',\n      maxSize: 10 * 1024 * 1024,\n      allowedTypes,\n    });\n  };\n  return {\n    uploadImagesMiddleware,\n    uploadAudioMiddleware,\n    uploadFilesMiddleware,\n    generatePreviewMiddleware,\n    convertImagesMiddleware,\n  };\n};\nexport default middlewareFactory;\n",
                "name": "middlewareBusboy.js",
                "size": 6949,
                "type": "source"
              }
            ]
          }
        },
        "routes": {
          "_files": [
            {
              "path": "../../src/modules/files/routes/files.routes.js",
              "relativePath": "modules/files/routes/files.routes.js",
              "extension": ".js",
              "content": "import middlewareFactoryAuth from '@martyrs/src/modules/auth/controllers/middlewares/index.js';\nimport controllerFactory from '../controllers/files.controller.js';\nimport middlewareFactoryFiles from '../middlewares/server/index.js';\nexport default (function (app, db, origins, publicPath) {\n  const controller = controllerFactory(db, publicPath);\n  const { authJwt } = middlewareFactoryAuth(db);\n  const { middlewareBusboy } = middlewareFactoryFiles(db, publicPath);\n  app.post(\n    '/api/upload/image',\n    [middlewareBusboy.uploadImagesMiddleware, middlewareBusboy.convertImagesMiddleware, middlewareBusboy.generatePreviewMiddleware],\n    controller.uploadMultipleFileController\n  );\n  app.post('/api/upload/audio', [middlewareBusboy.uploadAudioMiddleware], controller.uploadMultipleFileController);\n  app.post(\n    '/api/upload/multiple',\n    [middlewareBusboy.uploadImagesMiddleware, middlewareBusboy.convertImagesMiddleware, middlewareBusboy.generatePreviewMiddleware],\n    controller.uploadMultipleFileController\n  );\n  // app.post(\n  //   \"/api/upload/videos\",\n  //   [\n  //     middlewareBusboy.uploadVideosMiddleware,\n  //     middlewareBusboy.generatePreviewMiddleware\n  //   ],\n  //   controller.uploadMultipleFileController\n  // );\n  app.post('/api/upload/file', [middlewareBusboy.uploadFilesMiddleware], controller.uploadMultipleFileController);\n});\n",
              "name": "files.routes.js",
              "size": 1363,
              "type": "source"
            }
          ]
        }
      },
      "gallery": {
        "controllers": {
          "_files": [
            {
              "path": "../../src/modules/gallery/controllers/gallery.controller.js",
              "relativePath": "modules/gallery/controllers/gallery.controller.js",
              "extension": ".js",
              "content": "import queryProcessorGlobals from '@martyrs/src/modules/globals/controllers/utils/queryProcessor.js';\nimport path from 'path';\n// --------------------------------------------------\n// METHODS\n// --------------------------------------------------\nconst controllerFactory = db => {\n  const Photo = db.photo;\n  const read = async (req, res) => {\n    let stages = [\n      ...queryProcessorGlobals.getBasicOptions(req.query),\n      // Date Filter\n      ...queryProcessorGlobals.getFilterDate(req.query.dateStart, req.query.dateEnd),\n      // Tags\n      ...queryProcessorGlobals.getTagsOptions(req.query.tags),\n      // For creator\n      queryProcessorGlobals.getCreatorUserLookupStage(),\n      queryProcessorGlobals.getCreatorOrganizationLookupStage(),\n      queryProcessorGlobals.getCreatorCustomerLookupStage(),\n      // For owner\n      queryProcessorGlobals.getOwnerUserLookupStage(),\n      queryProcessorGlobals.getOwnerOrganizationLookupStage(),\n      queryProcessorGlobals.getAddFieldsCreatorOwnerStage(),\n      queryProcessorGlobals.removeTempPropeties(),\n      // Pagination\n      ...queryProcessorGlobals.getSortingOptions(req.query.sortParam, req.query.sortOrder),\n      ...queryProcessorGlobals.getPaginationOptions(req.query.skip, req.query.limit),\n    ];\n    try {\n      const photos = await Photo.aggregate(stages);\n      if (!photos) {\n        return res.status(404).send({ errorCode: 'PHOTOS_NOT_FOUND', message: 'Photos not found.' });\n      }\n      res.status(200).send(photos);\n    } catch (err) {\n      console.log(err);\n      res.status(500).send({\n        errorCode: 'GET_PHOTOS_FAILED',\n        message: 'Error occurred while fetching photos.',\n        error: err,\n      });\n    }\n  };\n  const create = async (req, res) => {\n    try {\n      const { tags, creator, owner, status, images } = req.body;\n      if (!creator || !owner || !images || images.length === 0) {\n        return res.status(400).send({ message: 'All fields are required.' });\n      }\n      const photos = [];\n      for (let image of images) {\n        const filename = path.basename(image);\n        const directory = path.dirname(image);\n        const newPhoto = {\n          tags,\n          creator,\n          owner,\n          image,\n          status,\n          cover: path.join(directory, 'thumbnail_' + filename), // создаем путь для миниатюры\n        };\n        let photo = await Photo.create(newPhoto);\n        if (!photo) {\n          return res.status(404).send({ message: `Photo with link ${image} is not created.` });\n        }\n        photo = await Photo.findOne({ _id: photo._id }).populate('creator.target').populate('owner.target');\n        photos.push(photo);\n      }\n      res.status(200).send(photos);\n    } catch (error) {\n      console.log(error);\n      res.status(500).send({ message: error });\n    }\n  };\n  const update = async (req, res) => {\n    try {\n      const updatedPhoto = await Photo.findOneAndUpdate({ _id: req.body._id }, req.body, {\n        new: true,\n      })\n        .populate('creator.target')\n        .populate('owner.target');\n      if (!updatedPhoto) {\n        return res.status(404).send({ message: 'Something went wrong when updating photo.' });\n      }\n      res.status(200).send(updatedPhoto);\n    } catch (err) {\n      console.log(err);\n      return res.status(500).send({ message: err.message });\n    }\n  };\n  const deletePhoto = async (req, res) => {\n    try {\n      const deletedPhoto = await Photo.findOneAndDelete({ _id: req.body._id }).populate('creator.target').populate('owner.target');\n      if (!deletedPhoto) {\n        return res.status(404).send({ message: 'Photo is not deleted.' });\n      }\n      res.status(200).send(deletedPhoto);\n    } catch (err) {\n      console.log(err);\n      return res.status(500).send({ message: err.message });\n    }\n  };\n  return {\n    read,\n    create,\n    update,\n    delete: deletePhoto,\n  };\n};\nexport default controllerFactory;\n",
              "name": "gallery.controller.js",
              "size": 3901,
              "type": "source"
            }
          ]
        },
        "_files": [
          {
            "path": "../../src/modules/gallery/gallery.client.js",
            "relativePath": "modules/gallery/gallery.client.js",
            "extension": ".js",
            "content": "// Store\nimport * as storeGallery from './store/gallery.js';\n\n// Router\nimport routerGallery from './router/gallery.router.js';\n// import { createGalleryBackofficeRoutes } from './router/gallery.backoffice.router.js';\n\n// Views\n// Pages\nimport Gallery from './components/pages/Gallery.vue';\n\n// Sections\nimport BackofficeGallery from './components/sections/BackofficeGallery.vue';\n\n// Пример функции инициализации для модуля галереи\nfunction initializeGallery(app, store, router, options = {}) {\n  const route = options.route || 'Home';\n\n  // const routesGallery = createGalleryRoutes();\n  // const routesGalleryBackoffice = createGalleryBackofficeRoutes();\n\n  router.addRoute(route, routerGallery);\n  // router.addRoute('Backoffice', routesGalleryBackoffice);\n\n  store.addStore('gallery', storeGallery);\n}\n\nconst ModuleGallery = {\n  initialize: initializeGallery,\n  views: {\n    store: {\n      storeGallery,\n    },\n    router: {\n      routerGallery,\n    },\n    components: {\n      // Pages\n      Gallery,\n      // Sections\n      BackofficeGallery,\n    },\n  },\n};\n\nexport default ModuleGallery;\n",
            "name": "gallery.client.js",
            "size": 1095,
            "type": "source"
          },
          {
            "path": "../../src/modules/gallery/gallery.server.js",
            "relativePath": "modules/gallery/gallery.server.js",
            "extension": ".js",
            "content": "import GalleryController from './controllers/gallery.controller.js';\nimport PhotoModel from './models/photo.model.js';\nimport galleryRoutes from './routes/gallery.routes.js';\nfunction initializeGallery(app, db, origins, publicPath) {\n  // Настраиваем модели в объекте базы данных\n  db.photo = PhotoModel(db);\n  // Настраиваем маршруты, если объект приложения передан\n  if (app) {\n    galleryRoutes(app, db, origins, publicPath);\n  }\n}\nexport const models = {\n  PhotoModel,\n};\nexport const routes = {\n  galleryRoutes,\n};\nexport const controllers = {\n  GalleryController,\n};\nexport { initializeGallery as initialize };\nexport default {\n  initialize: initializeGallery,\n  models,\n  routes,\n  controllers,\n};\n",
            "name": "gallery.server.js",
            "size": 705,
            "type": "source"
          }
        ],
        "models": {
          "_files": [
            {
              "path": "../../src/modules/gallery/models/photo.model.js",
              "relativePath": "modules/gallery/models/photo.model.js",
              "extension": ".js",
              "content": "import applyCommonSchema from '@martyrs/src/modules/globals/models/schemas/common.schema.js';\nimport applyEngagementSchema from '@martyrs/src/modules/globals/models/schemas/engagement.schema.js';\nimport applyOwnershipSchema from '@martyrs/src/modules/globals/models/schemas/ownership.schema.js';\nexport default db => {\n  const PhotoSchema = new db.mongoose.Schema(\n    {\n      cover: {\n        type: String,\n        required: true,\n      },\n      tags: {\n        type: Array,\n      },\n      image: {\n        type: String,\n        required: true,\n      },\n    },\n    {\n      timestamps: {\n        currentTime: () => Date.now(),\n      },\n    }\n  );\n  applyCommonSchema(PhotoSchema, db);\n  applyEngagementSchema(PhotoSchema, db);\n  applyOwnershipSchema(PhotoSchema, db);\n  const Photo = db.mongoose.model('Photo', PhotoSchema);\n  Photo.collection.dropIndexes(function (err, results) {\n    // Handle errors\n  });\n  return Photo;\n};\n",
              "name": "photo.model.js",
              "size": 928,
              "type": "source"
            }
          ]
        },
        "router": {
          "_files": [
            {
              "path": "../../src/modules/gallery/router/gallery.backoffice.router.js",
              "relativePath": "modules/gallery/router/gallery.backoffice.router.js",
              "extension": ".js",
              "content": "import * as validationOwnership from '@martyrs/src/modules/auth/views/middlewares/ownership.validation.js';\n\nconst gallery = [\n  {\n    path: 'gallery',\n    name: 'Backoffice Gallery',\n    meta: {\n      title: {\n        en: 'Backoffice Gallery',\n        ru: 'Управление Галерей',\n      },\n    },\n    beforeEnter: [validationOwnership.requiresAccess('gallery', 'read')],\n    component: () => import(/* webpackChunkName: 'BackofficeGallery' */ '@martyrs/src/modules/gallery/components/sections/BackofficeGallery.vue'),\n  },\n];\n\nexport default gallery;\n",
              "name": "gallery.backoffice.router.js",
              "size": 549,
              "type": "source"
            },
            {
              "path": "../../src/modules/gallery/router/gallery.router.js",
              "relativePath": "modules/gallery/router/gallery.router.js",
              "extension": ".js",
              "content": "const gallery = {\n  name: 'Gallery',\n  path: 'gallery',\n  meta: {\n    title_hide: true,\n  },\n  component: () => import(/* webpackChunkName: 'Gallery' */ '@martyrs/src/modules/gallery/components/pages/Gallery.vue'),\n};\n\nexport default gallery;\n",
              "name": "gallery.router.js",
              "size": 243,
              "type": "source"
            }
          ]
        },
        "routes": {
          "_files": [
            {
              "path": "../../src/modules/gallery/routes/gallery.routes.js",
              "relativePath": "modules/gallery/routes/gallery.routes.js",
              "extension": ".js",
              "content": "import middlewareFactoryAuth from '@martyrs/src/modules/auth/controllers/middlewares/index.js';\nimport middlewareFactoryAccesses from '@martyrs/src/modules/organizations/middlewares/verifyAccesses.js';\nimport controllerFactory from '../controllers/gallery.controller.js';\nexport default (function (app, db, origins) {\n  const controller = controllerFactory(db);\n  const { authJwt } = middlewareFactoryAuth(db);\n  const { verifyAccess, handleAccessResult } = middlewareFactoryAccesses(db);\n  app.get('/api/gallery/read', [authJwt.verifyToken(true), verifyAccess('gallery', 'read'), handleAccessResult({ allowPublished: true, allowUnauthenticated: true })], controller.read);\n  app.post('/api/gallery/create', [authJwt.verifyToken(), verifyAccess('gallery', 'create'), handleAccessResult()], controller.create);\n  app.put(\n    '/api/gallery/update',\n    [\n      authJwt.verifyToken(),\n      verifyAccess('gallery', 'edit'),\n      handleAccessResult({\n        allowOwnResources: true,\n      }),\n    ],\n    controller.update\n  );\n  app.delete('/api/gallery/delete', [authJwt.verifyToken(), verifyAccess('gallery', 'delete'), handleAccessResult()], controller.delete);\n});\n",
              "name": "gallery.routes.js",
              "size": 1168,
              "type": "source"
            }
          ]
        },
        "store": {
          "_files": [
            {
              "path": "../../src/modules/gallery/store/gallery.js",
              "relativePath": "modules/gallery/store/gallery.js",
              "extension": ".js",
              "content": "import Store from '@martyrs/src/modules/globals/views/classes/globals.store.js';\n\nconst gallery = new Store(`${process.env.API_URL}/api/gallery`);\n\nexport default gallery;\n",
              "name": "gallery.js",
              "size": 172,
              "type": "source"
            }
          ]
        },
        "components": {
          "pages": {
            "_files": [
              {
                "path": "../../src/modules/gallery/components/pages/Gallery.vue",
                "relativePath": "modules/gallery/components/pages/Gallery.vue",
                "extension": ".vue",
                "content": "<template>\n\t<div class=\"cols-1 bg-white gap-thin pd-thin\">\n\t\t<SectionPageTitle\n      :title=\"$t('gallery.title')\"\n      @update:tabs_current=\"(update) => tab = update\"\n      :tabs_current=\"tab\"\n      :tabs=\"[\n        { name: 'All', value: 'all' },\n        { name: 'Place', value: 'place' },\n        { name: 'Drinks', value: 'drinks' },\n        { name: 'People', value: 'people' },\n        { name: 'Events', value: 'events' }\n      ]\"\n      class=\"mn-b-small bg-light bg-light radius-big\"\n    />\n    <Popup \n      @close-popup=\"closePreviewPopup\" \n      :isPopupOpen=\"isOpenPreviewPopup\"\n      class=\"bg-black o-hidden w-100 h-100 radius-big\"\n    >\n      <PhotoViewer\n        :photoUrl=\"((FILE_SERVER_URL || '') + selectedPhoto.image)\"\n      />\n    </Popup>\n\n\t\t<Feed\n      v-model:items=\"photos\"\n      v-model:sort=\"sort\"\n      v-model:date=\"date\"\n      :showLoadMore=\"false\"\n      :states=\"{\n        empty: {\n          title: 'No Photos Found',\n          description: 'Currently, there are no photos in gallery.'\n        },\n      }\"\n      :store=\"{\n        read: (options) => gallery.read(options)\n      }\"\n      :options=\"{\n        limit: 15,\n        status: 'published',\n        ...(tab !== 'all' && { tags: tab })\n      }\"\n      v-slot=\"{ \n        items \n      }\"\n      class=\"cols-4 gap-thin\"\n    >\n      <div v-for=\"item in items\"  :key=\"item._id\" class=\"bg-light radius-medium o-hidden flex-column pos-relative flex-wrap\">\n        <div class=\"w-100 h-100 h-min-10r h-max-20r pos-relative\">\n          <img loading=\"lazy\" \n            :src=\"((FILE_SERVER_URL || '') + item.cover)\" \n            class=\"w-100 h-100 object-fit-cover bg-black \" @click=\"openPreviewPopup(item)\" \n          />\n        </div>\n     \t</div>\n    </Feed>\n\t</div>\n</template>\n\n<script setup>\n\timport { ref, onMounted, reactive, computed } from 'vue'\n\n\timport Title from '@martyrs/src/modules/globals/views/components/sections/Title.vue';\n\n\timport Feed from '@martyrs/src/components/Feed/Feed.vue'\n\timport Popup from '@martyrs/src/components/Popup/Popup.vue'\n\timport PhotoViewer from '@martyrs/src/components/PhotoViewer/PhotoViewer.vue'\n\n\timport SectionPageTitle from '@martyrs/src/modules/globals/views/components/sections/SectionPageTitle.vue'\n\n\timport gallery from '@martyrs/src/modules/gallery/store/gallery.js';\n\n\tconst photos = ref([])\n\n\tconst tab = ref('all')\n\n\tlet sort = ref({\n\t  param: 'createdAt',\n\t  order: 'desc',\n\t  options: [{\n\t    label: 'Date',\n\t    value: 'createdAt'\n\t  },{\n\t    label: 'Popularity',\n\t    value: 'views'\n\t  },{\n\t    label: 'Creator',\n\t    value: 'creator'\n\t  }]\n\t})\n\t// Date\n\tlet date = ref({\n\t  start: null,\n\t  end: null\n\t})\n\n\tconst selectedPhoto = ref(null);\n\n\t// Preview Photo\n\tconst isOpenPreviewPopup = ref(false);\n\tfunction openPreviewPopup(photo) {\n\t  isOpenPreviewPopup.value = true;\n\t  selectedPhoto.value = photo;\n\t}\n\tfunction closePreviewPopup() {\n\t  isOpenPreviewPopup.value = false;\n\t  selectedPhoto.value = null;\n\t}\n\n</script>",
                "name": "Gallery.vue",
                "size": 2950,
                "type": "source"
              }
            ]
          },
          "sections": {
            "_files": [
              {
                "path": "../../src/modules/gallery/components/sections/BackofficeGallery.vue",
                "relativePath": "modules/gallery/components/sections/BackofficeGallery.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"cols-1 gap-thin pd-thin\">\n    <SectionPageTitle\n      title=\"Gallery\"\n      @update:tabs_current=\"(update) => tab = update\"\n      :tabs_current=\"tab\"\n      :tabs=\"[\n        { name: 'All', value: 'all' },\n        { name: 'Featured', value: 'featured' },\n        { name: 'Published', value: 'published' },\n        { name: 'Draft', value: 'draft' },\n        { name: 'Archived', value: 'archived' }\n      ]\"\n      :actions=\"[\n        ...(hasAccess(route.params._id, 'gallery', 'create', auth.state.accesses, auth.state.access.roles) ? [{ method: () => openPhotoPopup(null), label: 'Add Photo' }] : [])\n      ]\"\n      class=\"mn-b-small bg-light bg-light radius-big\"\n    />\n\n    <Feed\n      v-model:items=\"photos\"\n      v-model:sort=\"sort\"\n      v-model:date=\"date\"\n      :states=\"{\n        empty: {\n          title: 'No Photos Found',\n          description: 'Currently, there are no photos in gallery.'\n        },\n      }\"\n      :store=\"{\n        read: (options) => gallery.read(options)\n      }\"\n      :options=\"{\n        limit: 15,\n        owner: route.params._id,\n        ...(tab !== 'all' && { status: tab })\n      }\"\n      v-slot=\"{ \n        items \n      }\"\n      class=\"cols-3 mobile:cols-1 gap-thin\"\n    >\n      <div v-for=\"item in items\"  :key=\"item._id\" class=\"bg-light radius-small flex-column pos-relative flex-wrap\">\n\n        <CardHeader \n          :entity=\"item\"\n          :entityType=\"'photo'\"\n          :user=\"auth.state.user._id\"\n          :owner=\"item.creator\" \n          :creator=\"item.creator\"\n          :date=\"item.createdAt\"\n          :actions=\"[\n            ...(hasAccess(route.params._id, 'gallery', 'delete', auth.state.accesses, auth.state.access.roles) ? [{ method: () => deletePhoto(item), label: 'Delete' }] : []),\n            ...(hasAccess(route.params._id, 'gallery', 'edit', auth.state.accesses, auth.state.access.roles) ? [\n                ...(item.status !== 'archived' ? [{ method: () => changeStatus(item, 'archived'), label: 'Archive' }] : []),\n                ...(item.status !== 'published' ? [{ method: () => changeStatus(item, 'published'), label: 'Publish' }] : []),\n                ...(item.status !== 'draft' ? [{ method: () => changeStatus(item, 'draft'), label: 'Draft' }] : [])\n            ] : [])\n          ]\"\n          class=\"pd-small mn-b-small\"\n        />\n\n        <div class=\"pos-relative\">\n          <img loading=\"lazy\" \n            :src=\"(FILE_SERVER_URL || '') + item.cover\" \n            class=\"w-100 h-20r object-fit-contain bg-black \" @click=\"openPreviewPopup(item)\" \n          />\n          <div \n            class=\"pos-absolute pos-t-0 pos-r-0 pd-micro t-white uppercase t-semi p-small flex-center flex pd-r-small pd-l-small mn-r-small mn-t-small w-min bg-second radius-extra\"\n          >\n            {{item.status}}\n          </div>\n        </div>\n        \n        <div class=\"pd-small\">\n          <Chips \n            v-if=\"item.tags?.length > 0\" \n            :chips=\"item.tags\"\n          />\n        </div>\n     </div>\n    </Feed>\n\n    <Popup \n      @close-popup=\"closePreviewPopup\" \n      :isPopupOpen=\"isOpenPreviewPopup\"\n      class=\"bg-black o-hidden w-100 h-100 radius-big\"\n    >\n      <PhotoViewer\n        :photoUrl=\"selectedPhoto.image\"\n      />\n    </Popup>\n\n    <Popup \n      title=\"Add Photo\" \n      @close-popup=\"closePhotoPopup\" \n      :isPopupOpen=\"isOpenPhotoPopup\"\n      class=\"bg-white w-max-30r radius-big pd-big\"\n    >\n      <img loading=\"lazy\" \n        v-if=\"selectedImage.cover\" \n        :src=\"selectedImage.cover\" \n        class=\"radius-small w-100 mn-b-small h-20r object-fit-cover \" \n      />\n\n      <EditImages \n        :images=\"uploadedImages\" \n        :uploadPath=\"'/photos'\" \n        @update:images=\"onUpdatedImages\" \n        class=\"mn-b-semi bg-light radius-medium\"\n      />\n\n      <BlockTags\n        @tags-changed=\"newTags => selectedImage.tags = newTags\"\n        :tags=\"selectedImage.tags\"\n        :tagsSuggested=\"[\n          {text: 'people' },\n          {text: 'events' },\n          {text: 'place' },\n          {text: 'food' },\n          {text: 'drinks' },\n          {text: 'special' },\n        ]\"\n        class=\"mn-b-semi\"\n      />\n\n      <div class=\"flex-nowrap flex gap-thin\">\n        <Button \n          :submit=\"() => createPhoto('draft')\" \n          :callback=\"closePhotoPopup\" \n          class=\"t-nowrap bg-second w-100\"\n        >\n          To drafts\n        </Button>\n         <Button \n          :submit=\"() => createPhoto('published')\" \n          :callback=\"closePhotoPopup\" \n          class=\"bg-main w-100\"\n        >\n          Publish\n        </Button>\n      </div>\n    </Popup>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, reactive, computed } from 'vue'\nimport { useRoute } from 'vue-router'\n\nimport Field from '@martyrs/src/components/Field/Field.vue'\nimport Button from '@martyrs/src/components/Button/Button.vue'\nimport Select from '@martyrs/src/components/Select/Select.vue'\nimport Chips  from '@martyrs/src/components/Chips/Chips.vue'\nimport Checkbox from '@martyrs/src/components/Checkbox/Checkbox.vue';\nimport SelectMulti from '@martyrs/src/components/SelectMulti/SelectMulti.vue';\nimport Popup from '@martyrs/src/components/Popup/Popup.vue'\nimport Feed from '@martyrs/src/components/Feed/Feed.vue'\nimport PhotoViewer from '@martyrs/src/components/PhotoViewer/PhotoViewer.vue'\n\nimport * as auth from '@martyrs/src/modules/auth/views/store/auth.js';\nimport * as organizations from '@martyrs/src/modules/organizations/store/organizations.js';\n  \nimport gallery from '@martyrs/src/modules/gallery/store/gallery.js';\n\nimport CardHeader  from '@martyrs/src/modules/globals/views/components/blocks/CardHeader.vue'\nimport SectionPageTitle from '@martyrs/src/modules/globals/views/components/sections/SectionPageTitle.vue'\n\nimport EditImages from '@martyrs/src/components/EditImages/EditImages.vue';\nimport BlockTags from '@martyrs/src/components/FieldTags/BlockTags.vue';\n\nconst route = useRoute();\n\n// Tabs\nconst tab = ref('all')\n// Sort\nlet sort = ref({\n  param: 'createdAt',\n  order: 'desc',\n  options: [{\n    label: 'Date',\n    value: 'createdAt'\n  },{\n    label: 'Popularity',\n    value: 'views'\n  },{\n    label: 'Creator',\n    value: 'creator'\n  }]\n})\n// Date\nlet date = ref({\n  start: null,\n  end: null\n})\n// Popup\n// Preview Photo\nconst isOpenPreviewPopup = ref(false);\nfunction openPreviewPopup(photo) {\n  isOpenPreviewPopup.value = true;\n  selectedPhoto.value = photo;\n}\nfunction closePreviewPopup() {\n  isOpenPreviewPopup.value = false;\n  selectedPhoto.value = null;\n}\n// Add Photo\nconst isOpenPhotoPopup = ref(false);\nfunction openPhotoPopup(photo) {\n  isOpenPhotoPopup.value = true;\n  selectedPhoto.value = photo;\n}\nfunction closePhotoPopup() {\n  isOpenPhotoPopup.value = false;\n  selectedPhoto.value = null;\n  uploadedImages.value = [];\n  selectedImage.value = { tags: null, image: null };\n}\n// Selected Photo\nconst selectedPhoto = ref(null);\nconst selectedCategory = ref('all')\nconst selectedImage = ref({\n  tags: null,\n  image: null\n})\nconst uploadedImages = ref([])\nconst onUpdatedImages = (newImages) => {\n  uploadedImages.value = newImages\n}\n// Gallery Grid\nconst photos = ref([])\n\nconst deletePhoto = async (item) => {\n  let deletedPhoto = JSON.parse(JSON.stringify(item));\n\n  deletedPhoto.owner.target = deletedPhoto.owner.target._id\n  deletedPhoto.creator.target = deletedPhoto.creator.target._id\n\n  await gallery.delete(deletedPhoto);\n\n  gallery.removeItem(deletedPhoto, photos.value)\n};\n\nconst changeStatus = async (item, status) => {\n  let updatedPhoto = JSON.parse(JSON.stringify(item));\n\n  updatedPhoto.status = status\n\n  updatedPhoto.owner.target = updatedPhoto.owner.target._id\n  updatedPhoto.creator.target = updatedPhoto.creator.target._id\n\n  updatedPhoto = await gallery.update(updatedPhoto)\n  gallery.updateItem(updatedPhoto, photos.value)\n}\n\nconst createPhoto = async (status) => {\n  if (uploadedImages.length < 1) {\n    alert('Upload at least 1 image')\n    return\n  }\n\n  let createdPhotos = await gallery.create({\n    images: uploadedImages.value,\n    tags: selectedImage.value.tags,\n    status: status,\n    owner: {\n      type: 'Organization',\n      target: route.params._id\n    },\n    creator: {\n      type: 'User',\n      target: auth.state.user._id\n    }\n  })\n\n  for (let createdPhoto of createdPhotos) {\n    gallery.addItem(createdPhoto, photos.value)\n  }\n}\n</script>\n\n<style scoped>\n</style>",
                "name": "BackofficeGallery.vue",
                "size": 8368,
                "type": "source"
              }
            ]
          }
        }
      },
      "globals": {
        "controllers": {
          "classes": {
            "_files": [
              {
                "path": "../../src/modules/globals/controllers/classes/globals.abac.js",
                "relativePath": "modules/globals/controllers/classes/globals.abac.js",
                "extension": ".js",
                "content": "class GlobalABAC {\n  constructor(db, options = {}) {\n    // Основные политики и обработчики\n    this.policies = {\n      global: {}, // Глобальные политики\n      resources: {}, // Политики для ресурсов\n      extensions: {}, // Расширения от внешних модулей\n    };\n    // Настройки по умолчанию\n    this.options = {\n      strictMode: false,\n      defaultDeny: false,\n      serviceKey: process.env.SERVICE_KEY, // Добавляем ключ сервиса из env\n      ...options,\n    };\n    // Сохраняем ссылку на базу данных\n    this.db = db;\n  }\n  // Регистрация глобальной политики\n  registerGlobalPolicy(name, policyFn) {\n    this.policies.global[name] = policyFn;\n    return this;\n  }\n  // Регистрация политики для ресурса\n  registerResourcePolicy(resourceName, policyFn) {\n    this.policies.resources[resourceName] = policyFn;\n    return this;\n  }\n  // Метод для регистрации расширений от внешних модулей\n  registerExtension(moduleName, extensionFn) {\n    // Если расширение уже существует, объединяем функции\n    if (this.policies.extensions[moduleName]) {\n      const existingExtension = this.policies.extensions[moduleName];\n      this.policies.extensions[moduleName] = async context => {\n        const existingResult = await existingExtension(context);\n        if (existingResult) return existingResult;\n        return await extensionFn(context);\n      };\n    } else {\n      this.policies.extensions[moduleName] = extensionFn;\n    }\n    return this;\n  }\n  // Автоматическое определение модели по имени ресурса\n  getResourceModel(resourceName) {\n    if (resourceName === 'posts') resourceName = 'blogposts';\n    // Преобразуем название ресурса в singural форму модели\n    const modelName = resourceName.endsWith('s') ? resourceName.slice(0, -1) : resourceName;\n    // Ищем модель в базе данных\n    const model = this.db[modelName];\n    if (!model) {\n      throw new Error(`Model for resource ${resourceName} not found`);\n    }\n    return model;\n  }\n  /**\n   * Нормализация результата политики для единообразной обработки\n   * @param {any} result - Результат выполнения политики\n   * @param {string} policyName - Имя политики для формирования причины\n   * @returns {Object} Нормализованный результат\n   */\n  _normalizeResult(result, policyName) {\n    // Результат уже в формате объекта с нужными полями\n    if (result && typeof result === 'object' && ('allow' in result || 'force' in result)) {\n      return {\n        allow: !!result.allow,\n        force: !!result.force,\n        reason: result.reason || `POLICY_${policyName.toUpperCase()}`,\n      };\n    }\n    // Boolean результаты\n    if (result === true) {\n      return { allow: true, force: false, reason: `ALLOWED_BY_${policyName.toUpperCase()}` };\n    }\n    if (result === false) {\n      return { allow: false, force: false, reason: `DENIED_BY_${policyName.toUpperCase()}` };\n    }\n    // Специальные случаи для adminAccessGranted и подобных\n    if (result === undefined && policyName === 'AdminModeratorAccessPolicy' && this._context && this._context.adminAccessGranted) {\n      return { allow: true, force: true, reason: 'ADMIN_MODERATOR_ACCESS_GRANTED' };\n    }\n    // Нейтральный результат (пропуск политики)\n    return { allow: true, force: false, reason: `NEUTRAL_${policyName.toUpperCase()}` };\n  }\n  // Базовый метод проверки доступа\n  async checkAccess(context) {\n    this._context = context; // Сохраняем контекст для использования в _normalizeResult\n    const {\n      user, // Пользователь\n      resource, // Тип ресурса\n      action, // Действие\n      data, // Данные ресурса\n      options = {}, // Добавляем опции\n      isServiceRequest, // Флаг сервисного запроса\n    } = context;\n    // Если это сервисный запрос, пропускаем проверки\n    if (isServiceRequest) {\n      return {\n        allow: true,\n        reason: 'SERVICE_REQUEST_ALLOWED',\n      };\n    }\n    // Проверка базовой аутентификации\n    if (!user && !options.allowUnauthenticated) {\n      return {\n        allow: false,\n        reason: 'UNAUTHENTICATED_ACCESS_DENIED',\n      };\n    }\n    // Предзагрузка ресурса\n    if (data._id || data.params?._id || data.url) {\n      try {\n        const resourceModel = this.getResourceModel(resource);\n        let currentResource;\n        if (data._id || data.params?._id) {\n          currentResource = await resourceModel.findById(data._id || data.params._id);\n        } else if (data.url) {\n          currentResource = await resourceModel.findOne({ url: data.url });\n        }\n        if (!currentResource) {\n          return {\n            allow: false,\n            reason: 'RESOURCE_NOT_FOUND',\n          };\n        }\n        // Добавляем загруженный ресурс в контекст\n        context.currentResource = currentResource;\n        // Добавляем модель ресурса в контекст\n        context.resourceModel = resourceModel;\n      } catch (error) {\n        console.error('Resource loading error:', error);\n        return {\n          allow: false,\n          reason: 'RESOURCE_LOAD_ERROR',\n        };\n      }\n    }\n    // Выполнение всех глобальных политик параллельно\n    const policyEntries = Object.entries(this.policies.global);\n    const policyPromises = policyEntries.map(async ([policyName, policyFn]) => {\n      try {\n        const result = await policyFn(context);\n        return { policyName, result };\n      } catch (error) {\n        console.error(`Error in policy ${policyName}:`, error);\n        // При ошибке возвращаем нейтральный результат\n        return { policyName, result: undefined, error };\n      }\n    });\n    // Ожидаем выполнения всех политик\n    const policyResults = await Promise.all(policyPromises);\n    // Обработка результатов глобальных политик\n    let hasForceAllow = false;\n    let hasForceDisallow = false;\n    let hasDeny = false;\n    let denyReason = '';\n    let allowReason = '';\n    for (const { policyName, result, error } of policyResults) {\n      if (error) continue; // Пропускаем политики с ошибками\n      // Нормализуем результат для унифицированной обработки\n      const normalizedResult = this._normalizeResult(result, policyName);\n      if (normalizedResult.force) {\n        if (normalizedResult.allow) {\n          hasForceAllow = true;\n          allowReason = normalizedResult.reason;\n        } else {\n          hasForceDisallow = true;\n          denyReason = normalizedResult.reason;\n        }\n      } else if (!normalizedResult.allow) {\n        hasDeny = true;\n        if (!denyReason) denyReason = normalizedResult.reason;\n      }\n    }\n    // Принятие решения на основе результатов\n    // 1. Проверка на стопроцентный запрет\n    if (hasForceDisallow) {\n      return {\n        allow: false,\n        reason: denyReason || 'FORCE_DENIED_BY_POLICY',\n      };\n    }\n    // 2. Проверка на стопроцентный доступ\n    if (hasForceAllow) {\n      return {\n        allow: true,\n        reason: allowReason || 'FORCE_ALLOWED_BY_POLICY',\n      };\n    }\n    // 3. Проверка на обычный запрет\n    if (hasDeny) {\n      return {\n        allow: false,\n        reason: denyReason || 'DENIED_BY_POLICY',\n      };\n    }\n    // 4. Проверка политик ресурсов (возможно асинхронное выполнение)\n    if (this.policies.resources[resource]) {\n      try {\n        const resourceResult = await this.policies.resources[resource](context);\n        const normalizedResult = this._normalizeResult(resourceResult, `RESOURCE_${resource}`);\n        if (normalizedResult.force) {\n          return {\n            allow: normalizedResult.allow,\n            reason: normalizedResult.reason,\n          };\n        }\n        if (!normalizedResult.allow) {\n          return {\n            allow: false,\n            reason: normalizedResult.reason,\n          };\n        }\n        if (normalizedResult.allow) {\n          return {\n            allow: true,\n            reason: normalizedResult.reason,\n          };\n        }\n      } catch (error) {\n        console.error(`Error in resource policy for ${resource}:`, error);\n      }\n    }\n    // 5. Выполнение расширений от внешних модулей\n    const extensionPromises = Object.entries(this.policies.extensions).map(async ([moduleName, extensionFn]) => {\n      try {\n        const extensionResult = await extensionFn(context);\n        return { moduleName, result: extensionResult };\n      } catch (error) {\n        console.error(`Error in extension ${moduleName}:`, error);\n        return { moduleName, result: null, error };\n      }\n    });\n    const extensionResults = await Promise.all(extensionPromises);\n    for (const { moduleName, result, error } of extensionResults) {\n      if (error) continue;\n      if (result && result.allow) {\n        return {\n          allow: true,\n          reason: `ALLOWED_BY_${moduleName.toUpperCase()}_EXTENSION`,\n        };\n      }\n    }\n    // 6. Финальное решение на основе настроек\n    return {\n      allow: !this.options.defaultDeny,\n      reason: this.options.defaultDeny ? 'ACCESS_DENIED' : 'ACCESS_ALLOWED',\n    };\n  }\n  // Проверка сервисного ключа\n  validateServiceKey(providedKey) {\n    return providedKey && providedKey === this.options.serviceKey;\n  }\n  // Middleware для Express\n  middleware(resource, action, options = {}) {\n    return async (req, res, next) => {\n      try {\n        // Проверка сервисного ключа\n        const serviceKey = req.headers['x-service-key'];\n        if (serviceKey && this.validateServiceKey(serviceKey)) {\n          req.isServiceRequest = true; // Помечаем, что это запрос от другого сервиса\n          return next();\n        }\n        const context = {\n          user: req.userId,\n          resource,\n          action,\n          data: {\n            ...req.body,\n            ...req.query,\n            params: req.params,\n          },\n          options, // Передаем опции в контекст\n          req, // Передаем весь объект запроса для максимальной гибкости\n          res, // И объект ответа\n          isServiceRequest: req.isServiceRequest, // Передаем флаг сервисного запроса\n        };\n        const accessResult = await this.checkAccess(context);\n        if (context.req?.body) req.body = context.req.body;\n        if (context.req?.query) req.query = context.req.query;\n        if (context.data?.params) req.params = context.data.params;\n        if (accessResult.allow) {\n          req.accessResult = accessResult;\n          return next();\n        }\n        return res.status(403).json({\n          errorCode: accessResult.reason,\n          message: 'Access Denied',\n        });\n      } catch (error) {\n        console.error('Access control error:', error);\n        return res.status(500).json({\n          errorCode: 'INTERNAL_ACCESS_CONTROL_ERROR',\n          message: 'Internal Server Error',\n        });\n      }\n    };\n  }\n}\n// Экспорт синглтона\nlet instance = null;\nexport const getInstance = (db, options) => {\n  if (!instance) {\n    instance = new GlobalABAC(db, options);\n  }\n  return instance;\n};\nexport default {\n  getInstance,\n};\n",
                "name": "globals.abac.js",
                "size": 10812,
                "type": "source"
              },
              {
                "path": "../../src/modules/globals/controllers/classes/globals.cache.js",
                "relativePath": "modules/globals/controllers/classes/globals.cache.js",
                "extension": ".js",
                "content": "import NodeCache from 'node-cache';\nclass Cache {\n  constructor(options = {}) {\n    const { ttlSeconds = 60 * 5 } = options; // По умолчанию 5 минут\n    this.cache = new NodeCache({ stdTTL: ttlSeconds });\n    this.tagStore = new Map(); // Хранилище тегов: tag -> Set(key)\n  }\n  /**\n   * Получение значения по ключу\n   * @param {string} key - Ключ\n   * @returns {Promise<any>} Значение из кэша\n   */\n  async get(key) {\n    return this.cache.get(key);\n  }\n  /**\n   * Установка значения по ключу\n   * @param {string} key - Ключ\n   * @param {any} value - Значение\n   * @returns {Promise<boolean>} Успешность операции\n   */\n  async set(key, value) {\n    return this.cache.set(key, value);\n  }\n  /**\n   * Установка значения с тегами\n   * @param {string} key - Ключ\n   * @param {any} value - Значение\n   * @param {string[]} tags - Массив тегов\n   * @returns {Promise<boolean>} Успешность операции\n   */\n  async setWithTags(key, value, tags = []) {\n    const success = this.cache.set(key, value);\n    if (success && tags.length > 0) {\n      for (const tag of tags) {\n        if (!this.tagStore.has(tag)) {\n          this.tagStore.set(tag, new Set());\n        }\n        this.tagStore.get(tag).add(key);\n      }\n    }\n    return success;\n  }\n  /**\n   * Удаление по ключу или ключам\n   * @param {string|string[]} keys - Ключ или массив ключей\n   * @returns {Promise<number>} Количество удаленных элементов\n   */\n  async del(keys) {\n    const keyArray = Array.isArray(keys) ? keys : [keys];\n    const deletedCount = this.cache.del(keyArray);\n    // Обновляем tagStore\n    for (const key of keyArray) {\n      for (const [tag, keySet] of this.tagStore.entries()) {\n        if (keySet.has(key)) {\n          keySet.delete(key);\n          if (keySet.size === 0) {\n            this.tagStore.delete(tag);\n          }\n        }\n      }\n    }\n    return deletedCount;\n  }\n  /**\n   * Удаление всех ключей, связанных с тегом\n   * @param {string} tag - Тег\n   * @returns {Promise<number>} Количество удаленных элементов\n   */\n  async delByTag(tag) {\n    if (!this.tagStore.has(tag)) return 0;\n    const keys = Array.from(this.tagStore.get(tag));\n    const deletedCount = await this.del(keys);\n    this.tagStore.delete(tag); // Тег больше не нужен\n    return deletedCount;\n  }\n  /**\n   * Удаление всех ключей, связанных с массивом тегов\n   * @param {string[]} tags - Массив тегов\n   * @returns {Promise<number>} Количество удаленных элементов\n   */\n  async delByTags(tags) {\n    let totalDeleted = 0;\n    for (const tag of tags) {\n      totalDeleted += await this.delByTag(tag);\n    }\n    return totalDeleted;\n  }\n  /**\n   * Полная очистка кэша\n   * @returns {Promise<void>}\n   */\n  async flush() {\n    this.cache.flushAll();\n    this.tagStore.clear();\n  }\n  /**\n   * Получение всех ключей в кэше\n   * @returns {Promise<string[]>} Массив ключей\n   */\n  async keys() {\n    return this.cache.keys();\n  }\n  /**\n   * Получение тегов для ключа\n   * @param {string} key - Ключ\n   * @returns {Promise<string[]>} Массив тегов\n   */\n  async getTagsForKey(key) {\n    const tags = [];\n    for (const [tag, keySet] of this.tagStore.entries()) {\n      if (keySet.has(key)) {\n        tags.push(tag);\n      }\n    }\n    return tags;\n  }\n  /**\n   * Получение статистики кэша\n   * @returns {Promise<object>} Статистика\n   */\n  async stats() {\n    return {\n      keys: this.cache.keys().length,\n      tags: this.tagStore.size,\n      ...this.cache.getStats(),\n    };\n  }\n}\nexport default Cache;\n",
                "name": "globals.cache.js",
                "size": 3450,
                "type": "source"
              },
              {
                "path": "../../src/modules/globals/controllers/classes/globals.crud.js",
                "relativePath": "modules/globals/controllers/classes/globals.crud.js",
                "extension": ".js",
                "content": "import Cache from '@martyrs/src/modules/globals/controllers/classes/globals.cache.js';\nimport Logger from '@martyrs/src/modules/globals/controllers/classes/globals.logger.js';\nimport globalsQuery from '@martyrs/src/modules/globals/controllers/utils/queryProcessor.js';\nclass CRUD {\n  constructor(basePath, app, db, model, options) {\n    this.model = model;\n    this.cache = new Cache();\n    this.logger = new Logger(db);\n    this.app = app;\n    this.basePath = basePath;\n    if (!options || (options && !options.disableDefaultRoutes)) this.registerRoutes();\n  }\n  registerRoutes() {\n    this.app.post(`${this.basePath}/create`, this.create.bind(this));\n    this.app.get(`${this.basePath}/read`, this.read.bind(this));\n    this.app.put(`${this.basePath}/update`, this.update.bind(this));\n    this.app.delete(`${this.basePath}/delete`, this.delete.bind(this));\n  }\n  async create(req, res) {\n    try {\n      const createdData = await this.model.create(req.body);\n      await this.cache.flush();\n      res.status(201).json(createdData);\n    } catch (error) {\n      console.log(error);\n      this.logger.error('Ошибка создания данных', error);\n      res.status(500).json({ error: error.message });\n    }\n  }\n  async read(req, res) {\n    try {\n      let stages = [];\n      stages = [\n        ...globalsQuery.getBasicOptions(req.query),\n        // For creator\n        globalsQuery.getCreatorUserLookupStage(),\n        globalsQuery.getCreatorOrganizationLookupStage(),\n        // For owner\n        globalsQuery.getOwnerUserLookupStage(),\n        globalsQuery.getOwnerOrganizationLookupStage(),\n        globalsQuery.getAddFieldsCreatorOwnerStage(),\n        // Pagination\n        ...globalsQuery.getSortingOptions(req.query.sortParam, req.query.sortOrder),\n        ...globalsQuery.getPaginationOptions(req.query.skip, req.query.limit),\n        globalsQuery.removeTempPropeties(),\n      ];\n      const cacheKey = JSON.stringify({ stages });\n      let data = await this.cache.get(cacheKey);\n      if (!data) {\n        data = await this.model.aggregate(stages).exec();\n        await this.cache.set(cacheKey, data);\n      }\n      res.json(data);\n    } catch (error) {\n      this.logger.error(error);\n      res.status(500).json({ error: error.message });\n    }\n  }\n  async update(req, res) {\n    try {\n      const updatedData = await this.model.findOneAndUpdate({ _id: req.body._id }, req.body, {\n        new: true,\n        runValidators: true,\n      });\n      if (!updatedData) {\n        throw new Error('Документ не найден.');\n      }\n      await this.cache.flush();\n      res.json(updatedData);\n    } catch (error) {\n      this.logger.error('Ошибка обновления данных', error);\n      res.status(404).json({ error: error.message });\n    }\n  }\n  async delete(req, res) {\n    try {\n      const deletedData = await this.model.findOneAndDelete({ _id: req.body._id });\n      if (!deletedData) {\n        throw new Error('Документ не найден.');\n      }\n      await this.cache.flush();\n      res.status(204).send();\n    } catch (error) {\n      this.logger.error('Ошибка удаления данных', error);\n      res.status(404).json({ error: error.message });\n    }\n  }\n}\nexport default CRUD;\n",
                "name": "globals.crud.js",
                "size": 3162,
                "type": "source"
              },
              {
                "path": "../../src/modules/globals/controllers/classes/globals.logger.js",
                "relativePath": "modules/globals/controllers/classes/globals.logger.js",
                "extension": ".js",
                "content": "// Переделанный класс Logger\nclass Logger {\n  constructor(db) {\n    // Теперь просто используем модель, которая уже определена в db\n    this.LogModel = db.log;\n  }\n  async log(level, message) {\n    const logEntry = new this.LogModel({\n      level,\n      message,\n    });\n    try {\n      await logEntry.save();\n      console.info(`Logged: ${level} - ${message}`);\n    } catch (err) {\n      console.error('Logging error:', err);\n    }\n  }\n  // Удобные методы для различных уровней логирования\n  async info(message) {\n    await this.log('info', message);\n  }\n  async error(message) {\n    await this.log('error', message);\n  }\n}\nexport default Logger;\n",
                "name": "globals.logger.js",
                "size": 648,
                "type": "source"
              },
              {
                "path": "../../src/modules/globals/controllers/classes/globals.observer.js",
                "relativePath": "modules/globals/controllers/classes/globals.observer.js",
                "extension": ".js",
                "content": "class Observer {\n  constructor() {\n    this.listeners = {};\n  }\n  subscribe(eventType, callback, once = false) {\n    if (!this.listeners[eventType]) {\n      this.listeners[eventType] = new Map();\n    }\n    this.listeners[eventType].set(callback, { once });\n  }\n  async notify(eventType, data) {\n    if (this.listeners[eventType]) {\n      const promises = [];\n      const callbacksToRemove = [];\n      // Create a list of promises for all callbacks\n      for (const [callback, { once }] of this.listeners[eventType]) {\n        const promise = Promise.resolve()\n          .then(() => callback(data))\n          .catch(error => {\n            console.error('Error executing callback:', error);\n          });\n        promises.push(promise);\n        if (once) {\n          callbacksToRemove.push(callback);\n        }\n      }\n      // Wait for all promises to settle\n      await Promise.all(promises);\n      // Remove callbacks that are set to run only once\n      for (const callback of callbacksToRemove) {\n        this.listeners[eventType].delete(callback);\n        if (this.listeners[eventType].size === 0) {\n          delete this.listeners[eventType];\n        }\n      }\n    }\n  }\n  remove(eventType, callback) {\n    if (this.listeners[eventType]?.has(callback)) {\n      this.listeners[eventType].delete(callback);\n      if (this.listeners[eventType].size === 0) {\n        delete this.listeners[eventType];\n      }\n    }\n  }\n}\nexport default Observer;\n",
                "name": "globals.observer.js",
                "size": 1446,
                "type": "source"
              },
              {
                "path": "../../src/modules/globals/controllers/classes/globals.validator.js",
                "relativePath": "modules/globals/controllers/classes/globals.validator.js",
                "extension": ".js",
                "content": "// validator.js\n/**\n * @typedef {Object} ValidationResult\n * @property {boolean} isValid - Успешность валидации\n * @property {string[]} errors - Список ошибок\n */\n/**\n * @typedef {Object} ValidationOptions\n * @property {Object} [messages] - Пользовательские сообщения об ошибках\n * @property {string} [context] - Контекст для сообщений об ошибках\n */\n/**\n * @typedef {Object} Rule\n * @property {string} type - Тип проверки\n * @property {(value: any) => boolean} check - Функция проверки\n * @property {any} [param] - Дополнительный параметр\n * @property {string} [message] - Сообщение об ошибке\n */\n/**\n * Класс валидации значений\n */\nclass Validator {\n  /**\n   * @param {ValidationOptions} [options] - Опции валидации\n   */\n  constructor(options = {}) {\n    this.rules = [];\n    this.errors = [];\n    this.options = {\n      messages: {},\n      context: '',\n      ...options,\n    };\n  }\n  /**\n   * Создает новый экземпляр валидатора\n   * @param {ValidationOptions} [options] - Опции валидации\n   * @returns {Validator}\n   */\n  static schema(options) {\n    return new Validator(options);\n  }\n  /**\n   * Проверяет, что значение является строкой\n   * @param {string} [message] - Пользовательское сообщение об ошибке\n   * @returns {Validator}\n   */\n  string(message) {\n    this.rules.push({\n      type: 'string',\n      check: value => typeof value === 'string',\n      message,\n    });\n    return this;\n  }\n  /**\n   * Проверяет, что значение является числом\n   * @param {string} [message] - Пользовательское сообщение об ошибке\n   * @returns {Validator}\n   */\n  number(message) {\n    this.rules.push({\n      type: 'number',\n      check: value => {\n        if (typeof value === 'string' && value.trim() !== '') {\n          if (!/^-?\\d+$/.test(value.trim())) return false; // Проверяем, является ли строка целым числом\n          value = Number(value);\n        }\n        return Number.isInteger(value);\n      },\n      message,\n    });\n    return this;\n  }\n  /**\n   * Проверяет, что значение является целым числом (integer)\n   * @param {string} [message] - Пользовательское сообщение об ошибке\n   * @returns {Validator}\n   */\n  integer(message) {\n    this.rules.push({\n      type: 'integer',\n      check: value => {\n        if (typeof value === 'string' && value.trim() !== '' && /^-?\\d+$/.test(value.trim())) {\n          value = Number(value);\n        }\n        return Number.isInteger(value);\n      },\n      message,\n    });\n    return this;\n  }\n  /**\n   * Проверяет, что значение является булевым\n   * @param {string} [message] - Пользовательское сообщение об ошибке\n   * @returns {Validator}\n   */\n  boolean(message) {\n    this.rules.push({\n      type: 'boolean',\n      check: value => typeof value === 'boolean',\n      message,\n    });\n    return this;\n  }\n  /**\n   * Проверяет, что значение является массивом\n   * @param {string} [message] - Пользовательское сообщение об ошибке\n   * @returns {Validator}\n   */\n  array(message) {\n    this.rules.push({\n      type: 'array',\n      check: value => Array.isArray(value),\n      message,\n    });\n    return this;\n  }\n  /**\n   * Проверяет, что значение является объектом Date или строкой в ISO-формате\n   * @param {string} [message] - Пользовательское сообщение об ошибке\n   * @returns {Validator}\n   */\n  date(message) {\n    this.rules.push({\n      type: 'date',\n      check: value => {\n        const dateObj = value instanceof Date ? value : new Date(value);\n        return dateObj instanceof Date && !isNaN(dateObj.getTime());\n      },\n      message,\n    });\n    return this;\n  }\n  /**\n   * Проверяет, что значение не пустое\n   * @param {string} [message] - Пользовательское сообщение об ошибке\n   * @returns {Validator}\n   */\n  required(message) {\n    this.rules.push({\n      type: 'required',\n      check: value => {\n        if (value === undefined || value === null || value === '') return false;\n        if (Array.isArray(value) && value.length === 0) return false;\n        if (typeof value === 'object' && Object.keys(value).length === 0) return false;\n        return true;\n      },\n      message,\n    });\n    return this;\n  }\n  /**\n   * Проверяет минимальное значение или длину\n   * @param {number|Date} limit - Минимальное значение\n   * @param {string} [message] - Пользовательское сообщение об ошибке\n   * @returns {Validator}\n   */\n  min(limit, message) {\n    this.rules.push({\n      type: 'min',\n      check: value => {\n        if (value === undefined || value === null) return true;\n        if (typeof value === 'string' && value.trim() !== '' && /^-?\\d+$/.test(value.trim())) {\n          value = Number(value);\n        }\n        if (typeof value === 'number') return value >= limit;\n        if (value?.length !== undefined) return value.length >= limit;\n        if (value instanceof Date && limit instanceof Date) {\n          return value.getTime() >= limit.getTime();\n        }\n        return true;\n      },\n      param: limit,\n      message,\n    });\n    return this;\n  }\n  max(limit, message) {\n    this.rules.push({\n      type: 'max',\n      check: value => {\n        if (value === undefined || value === null) return true;\n        if (typeof value === 'string' && value.trim() !== '' && /^-?\\d+$/.test(value.trim())) {\n          value = Number(value);\n        }\n        if (typeof value === 'number') return value <= limit;\n        if (value?.length !== undefined) return value.length <= limit;\n        if (value instanceof Date && limit instanceof Date) {\n          return value.getTime() <= limit.getTime();\n        }\n        return true;\n      },\n      param: limit,\n      message,\n    });\n    return this;\n  }\n  /**\n   * Проверяет соответствие регулярному выражению\n   * @param {RegExp} regex - Регулярное выражение\n   * @param {string} [message] - Пользовательское сообщение об ошибке\n   * @returns {Validator}\n   */\n  pattern(regex, message) {\n    // Защита от ReDoS - ограничение сложности регулярного выражения\n    if (regex.toString().length > 1000) {\n      throw new Error('Regular expression is too complex');\n    }\n    this.rules.push({\n      type: 'pattern',\n      check: value => typeof value === 'string' && regex.test(value),\n      param: regex,\n      message,\n    });\n    return this;\n  }\n  /**\n   * Проверяет, что значение является email-адресом\n   * @param {string} [message] - Пользовательское сообщение об ошибке\n   * @returns {Validator}\n   */\n  email(message) {\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    this.rules.push({\n      type: 'email',\n      check: value => typeof value === 'string' && emailRegex.test(value),\n      message,\n    });\n    return this;\n  }\n  /**\n   * Проверяет, что значение входит в список допустимых\n   * @param {any[]} values - Массив допустимых значений\n   * @param {string} [message] - Пользовательское сообщение об ошибке\n   * @returns {Validator}\n   */\n  oneOf(values, message) {\n    this.rules.push({\n      type: 'oneOf',\n      check: value =>\n        values.some(\n          item =>\n            // Использование глубокого сравнения для объектов\n            JSON.stringify(item) === JSON.stringify(value)\n        ),\n      param: values,\n      message,\n    });\n    return this;\n  }\n  /**\n   * Проверяет, что значение соответствует одному из указанных типов через уже существующие правила валидатора\n   * @param {string[]} types - Массив допустимых типов (например: ['string', 'number', 'null', 'array'])\n   * @param {string} [message] - Сообщение об ошибке\n   * @returns {Validator}\n   */\n  oneOfTypes(types, message) {\n    const validators = types.map(type => {\n      const schema = Validator.schema();\n      if (type === 'string') return schema.string();\n      if (type === 'number') return schema.number();\n      if (type === 'integer') return schema.integer();\n      if (type === 'boolean') return schema.boolean();\n      if (type === 'array') return schema.array();\n      if (type === 'object') return schema.object({});\n      if (type === 'date') return schema.date();\n      if (type === 'null') {\n        // Кастомный валидатор для null\n        return Validator.schema().custom(val => val === null, 'Значение должно быть null');\n      }\n      throw new Error(`Unsupported type in oneOfTypes: ${type}`);\n    });\n    this.rules.push({\n      type: 'oneOfTypes',\n      check: value => {\n        return validators.some(validator => validator.validate(value).isValid);\n      },\n      param: types,\n      message,\n    });\n    return this;\n  }\n  /**\n   * Добавляет пользовательскую проверку\n   * @param {function} fn - Функция проверки\n   * @param {string} [errorMessage='Custom validation failed'] - Сообщение об ошибке\n   * @returns {Validator}\n   */\n  custom(fn, errorMessage = 'Custom validation failed') {\n    this.rules.push({\n      type: 'custom',\n      check: fn,\n      param: errorMessage,\n    });\n    return this;\n  }\n  /**\n   * Добавляет валидацию для элементов массива\n   * @param {Validator} validator - Валидатор для элементов массива\n   * @param {string} [message] - Пользовательское сообщение об ошибке\n   * @returns {Validator}\n   */\n  items(validator, message) {\n    if (!(validator instanceof Validator)) {\n      throw new TypeError('items() expects a Validator instance');\n    }\n    this.rules.push({\n      type: 'items',\n      check: value => {\n        if (!Array.isArray(value)) return true;\n        for (let i = 0; i < value.length; i++) {\n          const result = validator.validate(value[i]);\n          if (!result.isValid) {\n            this.errors.push(`Item at index ${i}: ${result.errors.join(', ')}`);\n            return false;\n          }\n        }\n        return true;\n      },\n      message,\n    });\n    return this;\n  }\n  object(schema, message) {\n    if (typeof schema !== 'object' || Array.isArray(schema)) {\n      throw new TypeError('object() expects a schema object');\n    }\n    this.rules.push({\n      type: 'object',\n      check: value => {\n        if (typeof value !== 'object' || value === null || Array.isArray(value)) {\n          return false;\n        }\n        for (const [key, validator] of Object.entries(schema)) {\n          if (!(validator instanceof Validator)) {\n            throw new TypeError(`Property \"${key}\" must be a Validator instance`);\n          }\n          const result = validator.validate(value[key]);\n          if (!result.isValid) {\n            this.errors.push(`Property \"${key}\": ${result.errors.join(', ')}`);\n            return false;\n          }\n        }\n        return true;\n      },\n      message,\n    });\n    return this;\n  }\n  /**\n   * Добавляет валидацию для свойств объекта\n   * @param {Object<string, Validator>} schema - Схема объекта\n   * @param {string} [message] - Пользовательское сообщение об ошибке\n   * @returns {Validator}\n   */\n  shape(schema, message) {\n    this.rules.push({\n      type: 'shape',\n      check: value => {\n        if (typeof value !== 'object' || value === null) return true;\n        for (const [key, validator] of Object.entries(schema)) {\n          if (!(validator instanceof Validator)) {\n            throw new TypeError(`Property \"${key}\" must have a Validator instance`);\n          }\n          const result = validator.validate(value[key]);\n          if (!result.isValid) {\n            this.errors.push(`Property \"${key}\": ${result.errors.join(', ')}`);\n            return false;\n          }\n        }\n        return true;\n      },\n      message,\n    });\n    return this;\n  }\n  /**\n   * Получает сообщение об ошибке для правила\n   * @param {Rule} rule - Правило\n   * @returns {string} - Сообщение об ошибке\n   * @private\n   */\n  _getErrorMessage(rule) {\n    // Приоритет: сообщение в правиле > пользовательские сообщения > стандартные сообщения\n    if (rule.message) return rule.message;\n    // Проверка наличия пользовательского сообщения\n    if (this.options.messages[rule.type]) {\n      const message = this.options.messages[rule.type];\n      if (typeof message === 'function') {\n        return message(rule.param);\n      }\n      return message;\n    }\n    // Стандартные сообщения\n    const context = this.options.context ? `${this.options.context} ` : '';\n    switch (rule.type) {\n      case 'string':\n        return `${context}должно быть строкой`;\n      case 'number':\n        return `${context}должно быть числом`;\n      case 'integer':\n        return `${context}должно быть целым числом`;\n      case 'boolean':\n        return `${context}должно быть логическим значением`;\n      case 'array':\n        return `${context}должно быть массивом`;\n      case 'date':\n        return `${context}должно быть корректной датой`;\n      case 'required':\n        return `${context}обязательное поле`;\n      case 'min':\n        if (rule.param instanceof Date) return `${context}должно быть не ранее ${rule.param.toLocaleDateString()}`;\n        return `${context}должно быть не менее ${rule.param}`;\n      case 'max':\n        if (rule.param instanceof Date) return `${context}должно быть не позднее ${rule.param.toLocaleDateString()}`;\n        return `${context}должно быть не более ${rule.param}`;\n      case 'pattern':\n        return `${context}не соответствует требуемому формату`;\n      case 'email':\n        return `${context}должно быть корректным email-адресом`;\n      case 'oneOf':\n        return `${context}должно быть одним из: ${rule.param.join(', ')}`;\n      case 'oneOfTypes':\n        return `${context}должно быть одного из типов: ${rule.param.join(', ')}`;\n      case 'custom':\n        return rule.param;\n      case 'items':\n        return `${context}содержит невалидные элементы`;\n      case 'object':\n        return `${context}не соответствует типу объекта`;\n      case 'shape':\n        return `${context}содержит невалидные свойства`;\n      default:\n        return 'Ошибка валидации';\n    }\n  }\n  /**\n   * Выполняет валидацию значения\n   * @param {any} value - Значение для валидации\n   * @returns {ValidationResult} - Результат валидации\n   */\n  validate(value) {\n    this.errors = [];\n    for (const rule of this.rules) {\n      if (!rule.check(value)) {\n        // Для правил с вложенной валидацией ошибки уже добавлены\n        if (rule.type !== 'items' && rule.type !== 'shape') {\n          this.errors.push(this._getErrorMessage(rule));\n        }\n        // Для типов, где проверка типа важна, прерываем валидацию\n        if (['string', 'number', 'object', 'integer', 'boolean', 'array', 'date'].includes(rule.type)) {\n          break;\n        }\n      }\n    }\n    return {\n      isValid: this.errors.length === 0,\n      errors: [...this.errors],\n    };\n  }\n}\nexport default Validator;\n",
                "name": "globals.validator.js",
                "size": 14453,
                "type": "source"
              },
              {
                "path": "../../src/modules/globals/controllers/classes/globals.verifier.js",
                "relativePath": "modules/globals/controllers/classes/globals.verifier.js",
                "extension": ".js",
                "content": "/**\n * @typedef {Object} ParamConfig\n * @property {('required'|'optional'|'forbidden'|Function)} rule - Правило доступа к параметру\n * @property {any} [default] - Значение по умолчанию\n * @property {Validator} [validator] - Валидатор для значений\n */\n/**\n * @typedef {Object} VerifyOptions\n * @property {boolean} [applyDefaults=true] - Применять ли значения по умолчанию\n * @property {boolean} [removeInvalid=true] - Удалять ли невалидные параметры\n * @property {string[]} [only=null] - Валидировать только указанные параметры\n * @property {string[]} [except=null] - Исключить указанные параметры из валидации\n */\n/**\n * @typedef {Object} VerifyResult\n * @property {Object} verifiedData - Проверенные данные\n * @property {Object} appliedDefaults - Примененные значения по умолчанию\n * @property {Object} removedParams - Удаленные параметры\n * @property {Object} untouchedParams - Нетронутые параметры\n * @property {boolean} isValid - Результат валидации\n * @property {Object<string, string[]>} verificationErrors - Ошибки валидации\n */\n/**\n * Класс валидации query-параметров\n */\nclass Verifier {\n  /**\n   * @param {Object<string, ParamConfig>} config - Конфигурация параметров\n   */\n  constructor(config = {}) {\n    this.config = config;\n  }\n\n  /**\n   * Получает правило доступа для параметра\n   * @param {string} paramName - Имя параметра\n   * @param {Object} context - Контекст для функции rule\n   * @returns {string|Promise<string>} - Правило доступа\n   */\n  getRule(paramName, context = {}) {\n    if (!this.config.hasOwnProperty(paramName)) {\n      return 'optional';\n    }\n\n    const paramConfig = this.config[paramName];\n    if (typeof paramConfig.rule === 'function') {\n      return paramConfig.rule(context);\n    }\n\n    return paramConfig.rule;\n  }\n\n  /**\n   * Проверяет отдельный параметр на соответствие конфигурации\n   * @param {string} paramName - Имя параметра\n   * @param {any} value - Значение для проверки\n   * @param {Object} context - Контекст для функции rule\n   * @returns {Object|Promise<Object>} - Результат проверки\n   */\n  verifyParam(paramName, value, context = {}) {\n    const ruleResult = this.getRule(paramName, context);\n\n    const processRule = (rule) => {\n      if (rule === 'forbidden') {\n        return { isValid: false, errors: [`Parameter '${paramName}' is forbidden`] };\n      }\n\n      if (rule === 'required' && value === undefined) {\n        return { isValid: false, errors: [`Parameter '${paramName}' is required`] };\n      }\n\n      if (value === undefined) {\n        return { isValid: true, errors: [] };\n      }\n\n      const paramConfig = this.config[paramName];\n      if (paramConfig && paramConfig.validator) {\n        return paramConfig.validator.validate(value);\n      }\n\n      return { isValid: true, errors: [] };\n    };\n\n    if (ruleResult instanceof Promise) {\n      return ruleResult.then(processRule);\n    }\n\n    return processRule(ruleResult);\n  }\n\n  /**\n   * Метод валидации входящего объекта\n   * @param {Object} query - Объект параметров\n   * @param {VerifyOptions} options - Опции проверки\n   * @param {Object} context - Контекст для функции rule\n   * @returns {VerifyResult|Promise<VerifyResult>} - Результат проверки\n   */\n  verify(query, options = {}, context = {}) {\n    const { applyDefaults = true, removeInvalid = true, only = null, except = null } = options;\n\n    const result = {\n      verifiedData: {},\n      appliedDefaults: {},\n      removedParams: {},\n      untouchedParams: {},\n      isValid: true,\n      verificationErrors: {},\n    };\n\n    const shouldVerifyParam = paramName => {\n      if (only && Array.isArray(only)) return only.includes(paramName);\n      if (except && Array.isArray(except)) return !except.includes(paramName);\n      return true;\n    };\n\n    const paramPromises = [];\n    const paramResults = {};\n\n    for (const [paramName, paramConfig] of Object.entries(this.config)) {\n      if (!shouldVerifyParam(paramName)) continue;\n\n      const hasParam = query.hasOwnProperty(paramName);\n      const value = hasParam ? query[paramName] : undefined;\n\n      const verifyPromiseOrResult = this.verifyParam(paramName, value, context);\n\n      if (verifyPromiseOrResult instanceof Promise) {\n        paramPromises.push(\n          verifyPromiseOrResult.then(validationResult => {\n            paramResults[paramName] = {\n              paramName,\n              validationResult,\n              hasParam,\n              value,\n              paramConfig\n            };\n          })\n        );\n      } else {\n        paramResults[paramName] = {\n          paramName,\n          validationResult: verifyPromiseOrResult,\n          hasParam,\n          value,\n          paramConfig\n        };\n      }\n    }\n\n    const processResults = () => {\n      for (const { paramName, validationResult, hasParam, value, paramConfig } of Object.values(paramResults)) {\n        if (!validationResult.isValid) {\n          result.isValid = false;\n          result.verificationErrors[paramName] = validationResult.errors;\n\n          if (hasParam) {\n            if (applyDefaults && paramConfig.default !== undefined) {\n              result.verifiedData[paramName] = paramConfig.default;\n              result.appliedDefaults[paramName] = paramConfig.default;\n            } else if (removeInvalid) {\n              result.removedParams[paramName] = value;\n            } else {\n              result.verifiedData[paramName] = value;\n            }\n          } else if (applyDefaults && paramConfig.default !== undefined) {\n            result.verifiedData[paramName] = paramConfig.default;\n            result.appliedDefaults[paramName] = paramConfig.default;\n          }\n        } else {\n          if (hasParam) {\n            result.verifiedData[paramName] = value;\n          } else if (applyDefaults && paramConfig.default !== undefined) {\n            result.verifiedData[paramName] = paramConfig.default;\n            result.appliedDefaults[paramName] = paramConfig.default;\n          }\n        }\n      }\n\n      for (const [paramName, paramValue] of Object.entries(query)) {\n        if (!this.config.hasOwnProperty(paramName)) {\n          result.untouchedParams[paramName] = paramValue;\n          result.verifiedData[paramName] = paramValue;\n        }\n      }\n\n      if (Object.keys(result.verificationErrors).length === 0) {\n        result.verificationErrors = null;\n      }\n\n      console.log('Verification result:', result);\n      return result;\n    };\n\n    if (paramPromises.length > 0) {\n      return Promise.all(paramPromises).then(() => processResults());\n    }\n\n    return processResults();\n  }\n\n  /**\n   * Middleware для Express\n   * @param {VerifyOptions} options - Опции проверки\n   * @param {Function} [contextResolver] - Функция для получения контекста\n   * @returns {function} - Middleware функция\n   */\n  middleware(options = {}, contextResolver = null) {\n    return (req, res, next) => {\n      try {\n        const context = contextResolver ? contextResolver(req) : {};\n        const result = this.verify(req.query, options, context);\n\n        const processResult = (validationResult) => {\n          req.queryValidation = validationResult;\n          req.query = validationResult.verifiedData;\n          next();\n        };\n\n        if (result instanceof Promise) {\n          result.then(processResult).catch(next);\n        } else {\n          processResult(result);\n        }\n      } catch (error) {\n        next(error);\n      }\n    };\n  }\n}\n\nexport default Verifier;",
                "name": "globals.verifier.js",
                "size": 7422,
                "type": "source"
              },
              {
                "path": "../../src/modules/globals/controllers/classes/globals.webhook.js",
                "relativePath": "modules/globals/controllers/classes/globals.webhook.js",
                "extension": ".js",
                "content": "class Webhook {\n  constructor(app, db, observer, path, handlerMethod, middlewares = []) {\n    this.app = app;\n    this.db = db;\n    this.observer = observer;\n    // Ensure that the handlerMethod is bound and middlewares are correctly spread.\n    this.app.post(path, [...middlewares, handlerMethod.bind(this)]);\n  }\n  // Abstract method, must be implemented in derived classes\n  handleWebhook(req, res) {\n    throw new Error('handleWebhook() must be implemented by subclasses');\n  }\n}\nexport default Webhook;\n",
                "name": "globals.webhook.js",
                "size": 508,
                "type": "source"
              },
              {
                "path": "../../src/modules/globals/controllers/classes/globals.websocket.js",
                "relativePath": "modules/globals/controllers/classes/globals.websocket.js",
                "extension": ".js",
                "content": "import * as cookie from 'cookie';\nimport jwt from 'jsonwebtoken';\nimport uWS from 'uWebSockets.js';\nclass WebSocketManager {\n  constructor() {\n    // Создаем uWebSockets.js приложение внутри класса\n    this.app = uWS.App();\n    this.modules = new Map();\n    this.userConnections = new Map();\n    // Добавляем контейнер для RPC методов\n    this.rpcMethods = new Map();\n    // Настраиваем WebSocket обработчик\n    this.app.ws('/api/ws', {\n      maxPayloadLength: 16 * 1024 * 1024,\n      idleTimeout: 120,\n      compression: uWS.SHARED_COMPRESSOR,\n      maxBackpressure: 1024 * 1024,\n      // Обработчик аутентификации и апгрейда соединения\n      upgrade: (res, req, context) => {\n        let userId = null;\n        // Получаем cookies и все необходимые заголовки из HTTP-запроса\n        const headers = {};\n        req.forEach((key, value) => {\n          headers[key.toLowerCase()] = value;\n        });\n        // Собираем заголовки для WebSocket-протокола один раз\n        const secWebSocketKey = headers['sec-websocket-key'] || '';\n        const secWebSocketProtocol = headers['sec-websocket-protocol'] || '';\n        const secWebSocketExtensions = headers['sec-websocket-extensions'] || '';\n        try {\n          if (headers.cookie) {\n            const cookies = cookie.parse(headers.cookie);\n            if (cookies.user) {\n              const token = JSON.parse(decodeURIComponent(cookies.user));\n              const decoded = jwt.verify(token.accessToken, process.env.SECRET_KEY);\n              userId = decoded._id;\n            }\n          }\n        } catch (err) {\n          console.error('Invalid token:', err);\n        }\n        // Если авторизация требуется, но userId не найден - отклоняем соединение\n        if (process.env.REQUIRE_AUTH === 'true' && !userId) {\n          res.writeStatus('401 Unauthorized').end('Authentication required');\n          return;\n        }\n        const userData = { userId };\n        res.upgrade(userData, secWebSocketKey, secWebSocketProtocol, secWebSocketExtensions, context);\n      },\n      // Обработчик открытия соединения\n      open: ws => {\n        // Инициализация свойств клиента\n        ws.userId = ws.getUserData().userId;\n        ws.subscriptions = new Set();\n        // Отслеживаем соединение, если есть userId\n        if (ws.userId) {\n          this._trackUserConnection(ws.userId, ws);\n        }\n      },\n      // Обработчик входящих сообщений\n      message: async (ws, message, isBinary) => {\n        if (!isBinary) {\n          try {\n            // Более эффективная обработка ArrayBuffer\n            const msgStr = new TextDecoder().decode(message);\n            const msg = JSON.parse(msgStr);\n            // Обработка подписки и отписки на модуль\n            if (msg.type === 'subscribe' && msg.module && this.modules.has(msg.module)) {\n              ws.subscriptions.add(msg.module);\n              return;\n            } else if (msg.type === 'unsubscribe' && msg.module) {\n              ws.subscriptions.delete(msg.module);\n              return;\n            }\n            // Обработка RPC вызова\n            if (msg.type === 'rpc') {\n              await this._handleRpcCall(ws, msg);\n              return;\n            }\n            // Маршрутизация сообщения к соответствующему обработчику модуля\n            const moduleName = msg.module;\n            if (moduleName && this.modules.has(moduleName)) {\n              const handler = this.modules.get(moduleName);\n              Promise.resolve(handler(ws, msg)).catch(err => {\n                console.error(`Error in handler for module ${moduleName}:`, err);\n              });\n            }\n          } catch (err) {\n            console.error('Invalid message or handler error:', err);\n            // Отправляем ошибку обратно клиенту\n            if (err instanceof Error) {\n              try {\n                ws.send(\n                  JSON.stringify({\n                    type: 'error',\n                    error: {\n                      message: err.message,\n                      code: err.code || 'INTERNAL_ERROR',\n                    },\n                  }),\n                  false\n                );\n              } catch (sendErr) {\n                console.error('Error sending error response:', sendErr);\n              }\n            }\n          }\n        }\n      },\n      // Обработчик закрытия соединения\n      close: (ws, code, message) => {\n        const userId = ws.userId;\n        if (userId && this.userConnections.has(userId)) {\n          this.userConnections.get(userId).delete(ws);\n          if (this.userConnections.get(userId).size === 0) {\n            this.userConnections.delete(userId);\n          }\n        }\n        // Очищаем подписки для предотвращения утечки памяти\n        if (ws.subscriptions && typeof ws.subscriptions.clear === 'function') {\n          ws.subscriptions.clear();\n        }\n      },\n    });\n    // Запускаем сервер на порту, если порт указан\n    this.listenSocket = null;\n  }\n  // Метод для запуска сервера\n  listen(port, callback) {\n    this.app.listen(port, listenSocket => {\n      if (listenSocket) {\n        this.listenSocket = listenSocket;\n        if (callback) callback(null, this.app);\n      } else {\n        if (callback) callback(new Error('Failed to listen'), null);\n      }\n    });\n    return this;\n  }\n  _trackUserConnection(userId, ws) {\n    if (!this.userConnections.has(userId)) {\n      this.userConnections.set(userId, new Set());\n    }\n    this.userConnections.get(userId).add(ws);\n  }\n  registerModule(moduleName, handler) {\n    this.modules.set(moduleName, handler);\n  }\n  // Добавляем методы для регистрации RPC\n  registerRpcMethod(moduleName, methodName, handler, options = {}) {\n    const fullMethodName = `${moduleName}.${methodName}`;\n    if (!this.rpcMethods.has(moduleName)) {\n      this.rpcMethods.set(moduleName, new Map());\n    }\n    this.rpcMethods.get(moduleName).set(methodName, {\n      handler,\n      options: {\n        requireAuth: options.requireAuth !== false, // По умолчанию true\n        validateParams: options.validateParams || null,\n        rateLimit: options.rateLimit || null,\n        ...options,\n      },\n    });\n    console.log(`RPC method registered: ${fullMethodName}`);\n    return this;\n  }\n  // Метод для регистрации группы RPC методов из модуля\n  registerRpcMethods(moduleName, methodsMap) {\n    for (const [methodName, config] of Object.entries(methodsMap)) {\n      const handler = typeof config === 'function' ? config : config.handler;\n      const options = typeof config === 'function' ? {} : config.options || {};\n      this.registerRpcMethod(moduleName, methodName, handler, options);\n    }\n    return this;\n  }\n  // Обработчик RPC вызовов\n  async _handleRpcCall(ws, message) {\n    const { module, method, params, id } = message;\n    // Проверяем, что такой метод зарегистрирован\n    if (!this.rpcMethods.has(module) || !this.rpcMethods.get(module).has(method)) {\n      this._sendRpcResponse(ws, id, null, {\n        code: -32601,\n        message: `Method ${module}.${method} not found`,\n      });\n      return;\n    }\n    const { handler, options } = this.rpcMethods.get(module).get(method);\n    // Проверка авторизации\n    if (options.requireAuth && !ws.userId) {\n      this._sendRpcResponse(ws, id, null, {\n        code: -32000,\n        message: 'Authentication required',\n      });\n      return;\n    }\n    // Валидация параметров\n    if (options.validateParams && !options.validateParams(params)) {\n      this._sendRpcResponse(ws, id, null, {\n        code: -32602,\n        message: 'Invalid params',\n      });\n      return;\n    }\n    // Выполняем метод\n    try {\n      // Создаем контекст для выполнения метода\n      const context = {\n        userId: ws.userId,\n        ws,\n        sendResponse: result => this._sendRpcResponse(ws, id, result),\n        sendError: error => this._sendRpcResponse(ws, id, null, error),\n      };\n      const result = await handler.call(context, params, context);\n      // Отправляем ответ, если он не был отправлен внутри обработчика\n      if (!context.responseSent) {\n        this._sendRpcResponse(ws, id, result);\n      }\n    } catch (error) {\n      console.error(`Error executing RPC method ${module}.${method}:`, error);\n      this._sendRpcResponse(ws, id, null, {\n        code: -32603,\n        message: error.message || 'Internal error',\n      });\n    }\n  }\n  // Отправка ответа на RPC запрос\n  _sendRpcResponse(ws, id, result, error = null) {\n    // Предотвращаем повторную отправку ответа\n    if (ws.context?.responseSent) return;\n    if (ws.context) ws.context.responseSent = true;\n    // Формируем и отправляем ответ\n    const response = {\n      type: 'rpc_response',\n      id,\n    };\n    if (error) {\n      response.error = {\n        code: error.code || -32603,\n        message: error.message || 'Internal error',\n        data: error.data,\n      };\n    } else {\n      response.result = result;\n    }\n    try {\n      ws.send(JSON.stringify(response), false);\n    } catch (err) {\n      console.error('Error sending RPC response:', err);\n    }\n  }\n  sendToUserInModule(moduleName, userId, data) {\n    const userIdStr = userId.toString();\n    const sockets = this.userConnections.get(userIdStr);\n    if (!sockets) {\n      console.log(`No sockets found for user ${userIdStr}`);\n      return false;\n    }\n    let sent = false;\n    const message = JSON.stringify(data);\n    for (const ws of sockets) {\n      if (ws.subscriptions.has(moduleName)) {\n        try {\n          const ok = ws.send(message, false); // false = not binary\n          if (!ok) {\n            console.warn('WebSocket backpressure exceeded for user:', userIdStr);\n            // Можно здесь добавить логику для обработки перегрузки соединения\n          } else {\n            sent = true;\n          }\n        } catch (err) {\n          console.warn('Failed to send message to user:', userIdStr, err);\n          // Возможно, сокет уже закрыт, но не удален из списка\n        }\n      }\n    }\n    return sent;\n  }\n  broadcastToModule(moduleName, data) {\n    const message = JSON.stringify(data);\n    let failedSends = 0;\n    // Итерируем через наши отслеживаемые соединения\n    for (const sockets of this.userConnections.values()) {\n      for (const ws of sockets) {\n        if (ws.subscriptions.has(moduleName)) {\n          try {\n            const ok = ws.send(message, false);\n            if (!ok) {\n              failedSends++;\n            }\n          } catch (err) {\n            failedSends++;\n            console.warn('Failed to broadcast message:', err);\n          }\n        }\n      }\n    }\n    if (failedSends > 0) {\n      console.warn(`Failed to send broadcast to ${failedSends} connections due to backpressure or closed sockets`);\n    }\n    return true;\n  }\n  broadcastToModuleWithFilter(moduleName, filterFn, data) {\n    const message = JSON.stringify(data);\n    let failedSends = 0;\n    for (const sockets of this.userConnections.values()) {\n      for (const ws of sockets) {\n        if (!ws.subscriptions.has(moduleName)) continue;\n        if (!filterFn(ws)) continue;\n        try {\n          const ok = ws.send(message, false);\n          if (!ok) {\n            failedSends++;\n          }\n        } catch (err) {\n          failedSends++;\n          console.warn('Failed to send filtered broadcast:', err);\n        }\n      }\n    }\n    if (failedSends > 0) {\n      console.warn(`Failed to send filtered broadcast to ${failedSends} connections due to backpressure or closed sockets`);\n    }\n    return true;\n  }\n  getServer() {\n    return this.app;\n  }\n}\nexport default WebSocketManager;\n",
                "name": "globals.websocket.js",
                "size": 11506,
                "type": "source"
              },
              {
                "path": "../../src/modules/globals/controllers/classes/globals.websocket.ws.js",
                "relativePath": "modules/globals/controllers/classes/globals.websocket.ws.js",
                "extension": ".js",
                "content": "import jwt from 'jsonwebtoken';\nimport { WebSocketServer } from 'ws';\nclass WebSocketManager {\n  constructor(server) {\n    this.wss = new WebSocketServer({\n      server,\n      verifyClient: this.verifyClient.bind(this),\n    });\n    this.modules = new Map();\n    this.userConnections = new Map();\n    this.wss.on('connection', (ws, req) => {\n      ws.userId = req.userId || null;\n      ws.subscriptions = new Set();\n      if (ws.userId) {\n        this._trackUserConnection(ws.userId, ws);\n      }\n      ws.on('message', async rawMessage => {\n        try {\n          const msg = JSON.parse(rawMessage);\n          // обработка подписки на модуль\n          if (msg.type === 'subscribe' && msg.module && this.modules.has(msg.module)) {\n            ws.subscriptions.add(msg.module);\n            return;\n          }\n          // нормальная маршрутизация\n          const moduleName = msg.module;\n          if (moduleName && this.modules.has(moduleName)) {\n            const handler = this.modules.get(moduleName);\n            await handler(ws, msg);\n          }\n        } catch (err) {\n          console.error('Invalid message or handler error:', err);\n        }\n      });\n      ws.on('close', () => {\n        if (ws.userId && this.userConnections.has(ws.userId)) {\n          this.userConnections.get(ws.userId).delete(ws);\n          if (this.userConnections.get(ws.userId).size === 0) {\n            this.userConnections.delete(ws.userId);\n          }\n        }\n      });\n    });\n  }\n  verifyClient(info, done) {\n    try {\n      const userCookie = info.req.headers.cookie?.split('; ').find(c => c.startsWith('user='));\n      if (!userCookie) return done(true);\n      const token = JSON.parse(decodeURIComponent(userCookie.replace('user=', '')));\n      const decoded = jwt.verify(token.accessToken, process.env.SECRET_KEY);\n      info.req.userId = decoded._id;\n    } catch (err) {\n      console.error('Invalid token:', err);\n    }\n    done(true);\n  }\n  _trackUserConnection(userId, ws) {\n    if (!this.userConnections.has(userId)) {\n      this.userConnections.set(userId, new Set());\n    }\n    this.userConnections.get(userId).add(ws);\n  }\n  registerModule(moduleName, handler) {\n    this.modules.set(moduleName, handler);\n  }\n  sendToUserInModule(moduleName, userId, data) {\n    const userIdStr = userId.toString();\n    const sockets = this.userConnections.get(userIdStr);\n    if (!sockets) {\n      console.log(`No sockets found for user ${userIdStr}`);\n      return false;\n    }\n    let sent = false;\n    for (const ws of sockets) {\n      if (ws.readyState === 1 && ws.subscriptions.has(moduleName)) {\n        ws.send(JSON.stringify(data));\n        sent = true;\n      }\n    }\n    return sent;\n  }\n  broadcastToModule(moduleName, data) {\n    for (const ws of this.wss.clients) {\n      if (ws.readyState === 1 && ws.subscriptions.has(moduleName)) {\n        ws.send(JSON.stringify(data));\n      }\n    }\n  }\n  broadcastToModuleWithFilter(moduleName, filterFn, data) {\n    const sockets = this.userConnections;\n    for (const ws of this.wss.clients) {\n      if (ws.readyState !== 1) continue;\n      if (!ws.subscriptions.has(moduleName)) continue;\n      if (!filterFn(ws)) continue;\n      ws.send(JSON.stringify(data));\n    }\n  }\n  getServer() {\n    return this.wss;\n  }\n}\nexport default WebSocketManager;\n",
                "name": "globals.websocket.ws.js",
                "size": 3294,
                "type": "source"
              }
            ]
          },
          "policies": {
            "_files": [
              {
                "path": "../../src/modules/globals/controllers/policies/globals.policies.js",
                "relativePath": "modules/globals/controllers/policies/globals.policies.js",
                "extension": ".js",
                "content": "export default (function initializeDefaultPolicies(abacAccessControl) {\n  // Политика личного владения ресурсом\n  abacAccessControl.registerGlobalPolicy('AdminModeratorAccessPolicy', async context => {\n    const { user, req } = context;\n    // Если пользователь не указан, политика не применяется\n    if (!user) {\n      return { allow: true, force: false };\n    }\n    try {\n      // Вариант 3: загружаем пользователя из базы данных\n      const userModel = abacAccessControl.db.user;\n      const userDoc = await userModel.findById(user).populate('roles');\n      let userRoles = [];\n      if (userDoc && userDoc.roles) {\n        // Сохраняем документ пользователя в контексте для других политик\n        context.userDoc = userDoc;\n        // Извлекаем роли из документа\n        userRoles = userDoc.roles.map(role => (typeof role === 'string' ? role : role.name || role));\n      }\n      // Проверяем наличие ролей администратора или модератора\n      const isAdmin = userRoles.includes('admin');\n      const isModerator = userRoles.includes('moderator');\n      \n      if (isAdmin || isModerator) {\n        // Возвращаем стопроцентный доступ\n        return {\n          allow: true,\n          force: true,\n          reason: isAdmin ? 'ADMIN_ACCESS_GRANTED' : 'MODERATOR_ACCESS_GRANTED',\n        };\n      }\n      // Для обычных пользователей не влияем на решение\n      return { allow: true, force: false };\n    } catch (error) {\n      console.error('Error in AdminModeratorPolicy:', error);\n      // При ошибке не блокируем доступ, продолжаем другие проверки\n      return { allow: true, force: false };\n    }\n  });\n  abacAccessControl.registerGlobalPolicy('PersonalResourceOwnerPolicy', async context => {\n    let { user, action, data, currentResource, options } = context;\n    const ObjectId = abacAccessControl.db.mongoose.Types.ObjectId;\n    // Для create операций с владением пользователя\n    if (action === 'create' && data.owner?.type === 'user') {\n      // Проверяем, что пользователь создает ресурс от своего имени\n      if (data.owner.target === user && data.creator.target === user) {\n        return { allow: true, force: false };\n      } else {\n        return {\n          allow: false,\n          force: false,\n          reason: 'UNAUTHORIZED_RESOURCE_CREATION',\n        };\n      }\n    }\n    if (action === 'read') {\n      // Список разрешенных статусов для неавторизованных пользователей\n      const allowedPublicStatuses = ['published', 'active', 'featured'];\n      // Для неавторизованных пользователей или не владельцев\n      if (!user || (currentResource && currentResource.creator && !currentResource.creator.target.equals(new ObjectId(user)))) {\n        if (context.req && context.req.query) {\n          // Если статус указан в запросе, проверяем его\n          if (context.req.query.status) {\n            // Проверка массива статусов\n            if (Array.isArray(context.req.query.status)) {\n              // Проверяем, что каждый статус из массива находится в списке разрешенных\n              for (const queryStatus of context.req.query.status) {\n                if (!allowedPublicStatuses.includes(queryStatus)) {\n                  return {\n                    allow: false,\n                    force: true, // Стопроцентный запрет для неразрешенных статусов\n                    reason: 'UNAUTHORIZED_STATUS_ACCESS',\n                  };\n                }\n              }\n            } else {\n              // Проверка одиночного статуса\n              if (!allowedPublicStatuses.includes(context.req.query.status)) {\n                return {\n                  allow: false,\n                  force: true, // Стопроцентный запрет для неразрешенных статусов\n                  reason: 'UNAUTHORIZED_STATUS_ACCESS',\n                };\n              }\n            }\n          }\n        }\n        // Для единичного ресурса\n        if (currentResource && !allowedPublicStatuses.includes(currentResource.status)) {\n          return {\n            allow: false,\n            force: true, // Стопроцентный запрет для неразрешенных статусов\n            reason: 'UNAUTHORIZED_RESOURCE_ACCESS',\n          };\n        }\n      }\n      // По умолчанию не влияем на решение для read\n      return { allow: true, force: false };\n    }\n    // Для update и delete операций\n    if ((action === 'edit' || action === 'delete') && currentResource && currentResource.owner?.type === 'user') {\n      // Проверяем владельца\n      if (currentResource.creator.target.equals(new ObjectId(user))) {\n        return { allow: true, force: false };\n      } else {\n        return {\n          allow: false,\n          force: false,\n          reason: 'NOT_RESOURCE_OWNER',\n        };\n      }\n    }\n    // По умолчанию не влияем на решение\n    return { allow: true, force: false };\n  });\n  return abacAccessControl;\n});\n",
                "name": "globals.policies.js",
                "size": 4788,
                "type": "source"
              }
            ]
          },
          "utils": {
            "_files": [
              {
                "path": "../../src/modules/globals/controllers/utils/mailing.js",
                "relativePath": "modules/globals/controllers/utils/mailing.js",
                "extension": ".js",
                "content": "import axios from 'axios';\nimport { config } from 'dotenv';\nimport * as nodemailer from 'nodemailer';\n({ config }).config();\nasync function sendEmail(to, subject, text, files = []) {\n  const transporter = nodemailer.createTransport({\n    host: process.env.SMTP_HOST,\n    port: process.env.SMTP_PORT,\n    secure: process.env.SMTP_SECURE === 'true', // Ensure the secure option is a boolean\n    auth: {\n      user: process.env.SMTP_USER,\n      pass: process.env.SMTP_PASSWORD,\n    },\n    requireTLS: true,\n    tls: {\n      ciphers: 'SSLv3',\n    },\n  });\n  // Prepare the attachments array from the file paths\n  const attachments = files.map(file => ({\n    filename: file.split('/').pop(), // Extract filename from path\n    path: file, // Full path to the file\n  }));\n  const mailOptions = {\n    from: `${process.env.SMTP_NAME} <${process.env.SMTP_EMAIL}>`,\n    to: to,\n    subject: subject,\n    text: text,\n    attachments: attachments, // Add attachments to mail options\n  };\n  try {\n    const info = await transporter.sendMail(mailOptions);\n    console.log('Email sent: ' + info.response);\n    return true;\n  } catch (error) {\n    console.log(error);\n    return false;\n  }\n}\nasync function sendSms(phone, message) {\n  const sessionUrl = `https://api.sms.to/sms/send?api_key=${process.env.SMS_API_KEY}&to=${phone}&message=${encodeURIComponent(message)}&sender_id=${encodeURIComponent(process.env.APP_NAME)}`;\n  //\n  console.log(`Phone:${phone} message:${message} session: ${sessionUrl}`);\n  try {\n    const response = await axios.get(sessionUrl);\n    console.log(response);\n    console.log('SMS sent');\n    return true;\n  } catch (error) {\n    console.log(error);\n    return false;\n  }\n}\nasync function sendChatMessageTelegram(chatIds, text) {\n  const telegramToken = process.env.TELEGRAM_BOT_TOKEN; // Токен Telegram Bot хранится в переменных окружения\n  const telegramUrl = `https://api.telegram.org/bot${telegramToken}/sendMessage`;\n  // Используем Promise.all для параллельной отправки сообщений\n  const sendPromises = chatIds.map(chatId => {\n    return axios\n      .post(telegramUrl, {\n        chat_id: chatId,\n        text: text,\n        // reply_markup: inlineKeyboard\n      })\n      .catch(error => {\n        // Логируем ошибку для конкретного чата, но не прерываем процесс\n        console.log(`Failed to send message to chat ${chatId}:`, error.message);\n        // Возвращаем false или null, чтобы Promise.all мог продолжить\n        return false;\n      });\n  });\n  try {\n    // Ждем завершения всех промисов, но ошибки не прерывают выполнение\n    const results = await Promise.all(sendPromises);\n    console.log('Telegram messages processing completed');\n    // Возвращаем true, даже если некоторые сообщения не были отправлены\n    return true;\n  } catch (error) {\n    // Логируем общую ошибку, но не прерываем выполнение\n    console.log('Error in sending Telegram messages:', error.message);\n    return false;\n  }\n}\nexport { sendChatMessageTelegram, sendEmail, sendSms };\nexport default {\n  sendEmail,\n  sendSms,\n  sendChatMessageTelegram,\n};\n",
                "name": "mailing.js",
                "size": 3052,
                "type": "source"
              },
              {
                "path": "../../src/modules/globals/controllers/utils/parseCookie.js",
                "relativePath": "modules/globals/controllers/utils/parseCookie.js",
                "extension": ".js",
                "content": "function parseCookie(cookieString) {\n  const cookieObject = {};\n  const keyValuePairs = cookieString.split('; ');\n  keyValuePairs.forEach(keyValuePair => {\n    const [key, value] = keyValuePair.split('=');\n    cookieObject[key] = decodeURIComponent(value);\n  });\n  return cookieObject;\n}\nexport default parseCookie;\n",
                "name": "parseCookie.js",
                "size": 316,
                "type": "source"
              },
              {
                "path": "../../src/modules/globals/controllers/utils/queryProcessor.js",
                "relativePath": "modules/globals/controllers/utils/queryProcessor.js",
                "extension": ".js",
                "content": "import { Types } from 'mongoose';\nconst ObjectId = { Types }.Types.ObjectId;\n\nfunction getBasicOptions(query) {\n  console.log(query);\n  const { _id, url, status, notstatus, type, organization, owner, customer, creator } = query;\n  const stages = [];\n  const conditions = [];\n  if (_id) {\n    conditions.push({ _id: new ObjectId(_id) });\n  }\n  if (url) {\n    conditions.push({ url: url });\n  }\n  // Handle status parameter\n  if (status) {\n    if (Array.isArray(status)) {\n      // If status is an array, use $in operator to match any of the specified statuses\n      conditions.push({ status: { $in: status } });\n    } else {\n      // If status is a single value, use regular equality match\n      conditions.push({ status: status });\n    }\n  }\n  // Handle notstatus parameter\n  if (notstatus) {\n    if (Array.isArray(notstatus)) {\n      // If notstatus is an array, use $nin operator to exclude all specified statuses\n      conditions.push({ status: { $nin: notstatus } });\n    } else {\n      // If notstatus is a single value, use $ne operator\n      conditions.push({ status: { $ne: notstatus } });\n    }\n  }\n  if (type) {\n    conditions.push({ type: type });\n  }\n  if (owner) {\n    conditions.push({ 'owner.target': new ObjectId(owner) });\n  }\n  if (organization) {\n    conditions.push({ organization: new ObjectId(organization) });\n  }\n  if (customer) {\n    conditions.push({ 'customer.target': new ObjectId(customer) });\n  }\n  if (creator) {\n    conditions.push({ 'creator.target': new ObjectId(creator) });\n  }\n  if (conditions.length > 0) {\n    stages.push({ $match: { $and: conditions } });\n  }\n  return stages;\n}\nfunction getFilterDate(dateStart, dateEnd, fieldNames = { start: 'createdAt', end: 'createdAt' }) {\n  if (!dateStart && !dateEnd) {\n    return [];\n  }\n  const matchStage = { $and: [] };\n  if (dateStart && dateStart !== 'null') {\n    matchStage.$and.push({ [fieldNames.end || 'endDate']: { $gte: new Date(dateStart) } });\n  }\n  if (dateEnd && dateEnd !== 'null') {\n    matchStage.$and.push({ [fieldNames.start || 'startDate']: { $lte: new Date(dateEnd) } });\n  }\n  return matchStage.$and.length > 0 ? [{ $match: matchStage }] : [];\n}\nfunction createSearchQuery(search, options = {}) {\n  if (!search) {\n    return {};\n  }\n  const fields = options.fields || ['name'];\n  const allowDotNotation = options.allowDotNotation || false;\n  let regexPattern = '';\n  if (allowDotNotation) {\n    const parts = search.split('.');\n    if (parts.length === 2) {\n      regexPattern = parts\n        .map(function (part) {\n          return part.substr(0, part.length - 1) + '.{1}';\n        })\n        .join('\\\\.');\n    } else {\n      regexPattern = search.substr(0, search.length - 1) + '.{1}';\n    }\n  } else {\n    regexPattern = search.substr(0, search.length - 1) + '.{1}';\n  }\n  if (fields.length === 1) {\n    return {\n      [fields[0]]: { $regex: regexPattern, $options: 'i' },\n    };\n  }\n  return {\n    $or: fields.map(function (field) {\n      return {\n        [field]: { $regex: regexPattern, $options: 'i' },\n      };\n    }),\n  };\n}\nfunction getSearchOptions(search, options) {\n  const query = createSearchQuery(search, options);\n  if (Object.keys(query).length) {\n    return [{ $match: query }];\n  }\n  return [];\n}\nfunction getTagsOptions(tags) {\n  if (tags) {\n    const tagsArray = Array.isArray(tags) ? tags : [tags];\n    return [{ $match: { tags: { $in: tagsArray } } }];\n  } else {\n    return [];\n  }\n}\nfunction getSortingOptions(param = 'createdAt', order = 'desc') {\n  let sort = {\n    [param]: order === 'desc' ? -1 : 1,\n    _id: 1,\n  };\n  return [{ $sort: sort }];\n}\nfunction getPaginationOptions(skip, limit) {\n  let pagination = {\n    skip: parseInt(skip) || 0,\n    limit: parseInt(limit) || 20,\n  };\n  return [{ $skip: pagination.skip }, { $limit: pagination.limit }];\n}\nfunction getCreatorUserLookupStage() {\n  return {\n    $lookup: {\n      from: 'users',\n      let: { creatorId: '$creator.target' },\n      pipeline: [\n        {\n          $match: {\n            $expr: { $eq: ['$_id', '$$creatorId'] },\n          },\n        },\n        {\n          $project: {\n            username: 1,\n            profile: 1,\n            _id: 1,\n          },\n        },\n      ],\n      as: 'creatorUser',\n    },\n  };\n}\nfunction getCreatorOrganizationLookupStage() {\n  return {\n    $lookup: {\n      from: 'organizations',\n      let: { creatorId: '$creator.target' },\n      pipeline: [\n        {\n          $match: {\n            $expr: { $eq: ['$_id', '$$creatorId'] },\n          },\n        },\n        {\n          $project: {\n            name: 1, // если нужно, можешь оставить только нужные поля\n            profile: 1,\n            _id: 1,\n          },\n        },\n      ],\n      as: 'creatorOrganization',\n    },\n  };\n}\nfunction getCreatorCustomerLookupStage() {\n  return {\n    $lookup: {\n      from: 'customers',\n      let: { creatorId: '$creator.target' },\n      pipeline: [\n        {\n          $match: {\n            $expr: { $eq: ['_id', '$$creatorId'] },\n          },\n        },\n        {\n          $project: {\n            username: 1, // если есть, можно заменить на нужные поля у customer\n            profile: 1,\n            _id: 1,\n          },\n        },\n      ],\n      as: 'creatorCustomer',\n    },\n  };\n}\nfunction getOwnerUserLookupStage() {\n  return {\n    $lookup: {\n      from: 'users',\n      let: { ownerId: '$owner.target' },\n      pipeline: [\n        {\n          $match: {\n            $expr: { $eq: ['$_id', '$$ownerId'] },\n          },\n        },\n        {\n          $project: {\n            username: 1,\n            profile: 1,\n            email: 1,\n            phone: 1,\n            _id: 1,\n          },\n        },\n      ],\n      as: 'ownerUser',\n    },\n  };\n}\nfunction getOwnerOrganizationLookupStage() {\n  return {\n    $lookup: {\n      from: 'organizations',\n      let: { ownerId: '$owner.target' },\n      pipeline: [\n        {\n          $match: {\n            $expr: { $eq: ['$_id', '$$ownerId'] },\n          },\n        },\n        {\n          $project: {\n            official: 1, // если нужно\n            owner: 1, // если нужно\n            profile: 1,\n            _id: 1,\n          },\n        },\n      ],\n      as: 'ownerOrganization',\n    },\n  };\n}\nfunction getAddFieldsCreatorOwnerStage() {\n  return {\n    $addFields: {\n      'creator.target': {\n        $switch: {\n          branches: [\n            {\n              case: { $eq: [{ $toLower: '$creator.type' }, 'user'] },\n              then: { $arrayElemAt: ['$creatorUser', 0] },\n            },\n            {\n              case: { $eq: [{ $toLower: '$creator.type' }, 'organization'] },\n              then: { $arrayElemAt: ['$creatorOrganization', 0] },\n            },\n            {\n              case: { $eq: [{ $toLower: '$creator.type' }, 'customer'] },\n              then: { $arrayElemAt: ['$creatorCustomer', 0] },\n            },\n          ],\n          default: 'Unknown type', // или любое другое значение по умолчанию, которое вы хотите использовать\n        },\n      },\n      'owner.target': {\n        $cond: [{ $eq: ['$owner.type', 'user'] }, { $arrayElemAt: ['$ownerUser', 0] }, { $arrayElemAt: ['$ownerOrganization', 0] }],\n      },\n    },\n  };\n}\n\n\n/**\n * Получает запрошенные лукапы из параметров запроса\n * @param {Object} query - параметры запроса\n * @returns {Array} массив запрошенных лукапов\n */\nfunction getRequestedLookups(query) {\n  return query.lookup ? (Array.isArray(query.lookup) ? query.lookup : query.lookup.split(',')) : [];\n}\n\n/**\n * Генерирует этапы агрегации для запрошенных лукапов\n * @param {Array} requestedLookups - запрошенные лукапы\n * @param {Object} configs - конфигурации лукапов\n * @returns {Array} этапы агрегации\n */\nfunction getLookupStages(requestedLookups, configs) {\n  if (!requestedLookups || requestedLookups.length === 0) return [];\n  \n  return requestedLookups\n    .map(lookup => configs[lookup])\n    .filter(Boolean)\n    .flatMap(config => [\n      { $lookup: config.lookup },\n      ...(config.additionalStages || [])\n    ]);\n}\n\n/**\n * Checks if specified lookup is requested\n * @param {String} lookupName - Name of the lookup to check\n * @param {Array} requestedLookups - Array of requested lookups\n * @returns {Boolean} True if lookup is requested\n */\nfunction isLookupRequested(lookupName, requestedLookups) {\n  return requestedLookups.includes(lookupName);\n};\n\n// @martyrs/src/modules/products/controllers/utils/priceProcessor.js\n/**\n * Обрабатывает фильтрацию по ценам\n * @param {string} prices - строка с ценовыми диапазонами\n * @returns {Array} массив этапов агрегации для фильтрации по ценам\n */\nfunction getPriceConditions(prices) {\n  if (!prices) return [];\n  \n  const priceRanges = prices.split(',');\n  const priceConditions = priceRanges.map(priceRange => {\n    if (priceRange.startsWith('<')) {\n      return { price: { $lt: parseInt(priceRange.slice(1)) } };\n    }\n    if (priceRange.startsWith('>')) {\n      return { price: { $gt: parseInt(priceRange.slice(1)) } };\n    }\n    const [min, max] = priceRange.split('-').map(Number);\n    return { price: { $gte: min, $lte: max } };\n  });\n  \n  return priceConditions.length > 0 ? [{ $match: { $or: priceConditions } }] : [];\n}\n\n\n\nfunction removeTempPropeties() {\n  return {\n    $project: {\n      creatorOrganization: 0,\n      creatorUser: 0,\n      ownerOrganization: 0,\n      ownerUser: 0,\n      creatorCustomer: 0,\n      ownerCustomer: 0,\n    },\n  };\n}\nexport {\n  getAddFieldsCreatorOwnerStage,\n  getBasicOptions,\n  getCreatorCustomerLookupStage,\n  getCreatorOrganizationLookupStage,\n  getCreatorUserLookupStage,\n  getFilterDate,\n  getOwnerOrganizationLookupStage,\n  getOwnerUserLookupStage,\n  getPaginationOptions,\n  getSearchOptions,\n  getSortingOptions,\n  getTagsOptions,\n  removeTempPropeties,\n  getRequestedLookups,\n  getLookupStages,\n  getPriceConditions,\n};\nexport default {\n  getBasicOptions,\n  getSortingOptions,\n  getPaginationOptions,\n  getTagsOptions,\n  getFilterDate,\n  getSearchOptions,\n  getCreatorUserLookupStage,\n  getCreatorOrganizationLookupStage,\n  getCreatorCustomerLookupStage,\n  getOwnerUserLookupStage,\n  getOwnerOrganizationLookupStage,\n  getAddFieldsCreatorOwnerStage,\n  removeTempPropeties,\n  getRequestedLookups,\n  getLookupStages,\n  getPriceConditions,\n};\n",
                "name": "queryProcessor.js",
                "size": 10165,
                "type": "source"
              },
              {
                "path": "../../src/modules/globals/controllers/utils/seo-friendly-url.js",
                "relativePath": "modules/globals/controllers/utils/seo-friendly-url.js",
                "extension": ".js",
                "content": "/**\n * Функция для создания ЧПУ (человеко-понятного URL) из строки.\n * Обрабатывает Unicode-символы и специальные символы.\n * Для необработанных символов генерирует случайный идентификатор.\n * @param {string} str - строка, которую нужно преобразовать.\n * @returns {string} - строка, представляющая собой ЧПУ.\n */\nfunction createFriendlyURL(str) {\n  if (typeof str !== 'string') {\n    throw new Error('Входные данные должны быть строкой');\n  }\n  // Карта замен для распространенных Unicode символов\n  const unicodeMap = {\n    // Числа в разных стилях Unicode\n    '𝟬': '0',\n    '𝟭': '1',\n    '𝟮': '2',\n    '𝟯': '3',\n    '𝟰': '4',\n    '𝟱': '5',\n    '𝟲': '6',\n    '𝟳': '7',\n    '𝟴': '8',\n    '𝟵': '9',\n    '０': '0',\n    '１': '1',\n    '２': '2',\n    '３': '3',\n    '４': '4',\n    '５': '5',\n    '６': '6',\n    '７': '7',\n    '８': '8',\n    '９': '9',\n    // Латинские буквы в различных стилях\n    '𝐀': 'a',\n    '𝐁': 'b',\n    '𝐂': 'c',\n    '𝐃': 'd',\n    '𝐄': 'e',\n    '𝐅': 'f',\n    '𝐆': 'g',\n    '𝐇': 'h',\n    '𝐈': 'i',\n    '𝐉': 'j',\n    '𝐊': 'k',\n    '𝐋': 'l',\n    '𝐌': 'm',\n    '𝐍': 'n',\n    '𝐎': 'o',\n    '𝐏': 'p',\n    '𝐐': 'q',\n    '𝐑': 'r',\n    '𝐒': 's',\n    '𝐓': 't',\n    '𝐔': 'u',\n    '𝐕': 'v',\n    '𝐖': 'w',\n    '𝐗': 'x',\n    '𝐘': 'y',\n    '𝐙': 'z',\n    '𝐚': 'a',\n    '𝐛': 'b',\n    '𝐜': 'c',\n    '𝐝': 'd',\n    '𝐞': 'e',\n    '𝐟': 'f',\n    '𝐠': 'g',\n    '𝐡': 'h',\n    '𝐢': 'i',\n    '𝐣': 'j',\n    '𝐤': 'k',\n    '𝐥': 'l',\n    '𝐦': 'm',\n    '𝐧': 'n',\n    '𝐨': 'o',\n    '𝐩': 'p',\n    '𝐪': 'q',\n    '𝐫': 'r',\n    '𝐬': 's',\n    '𝐭': 't',\n    '𝐮': 'u',\n    '𝐯': 'v',\n    '𝐰': 'w',\n    '𝐱': 'x',\n    '𝐲': 'y',\n    '𝐳': 'z',\n    '𝗔': 'a',\n    '𝗕': 'b',\n    '𝗖': 'c',\n    '𝗗': 'd',\n    '𝗘': 'e',\n    '𝗙': 'f',\n    '𝗚': 'g',\n    '𝗛': 'h',\n    '𝗜': 'i',\n    '𝗝': 'j',\n    '𝗞': 'k',\n    '𝗟': 'l',\n    '𝗠': 'm',\n    '𝗡': 'n',\n    '𝗢': 'o',\n    '𝗣': 'p',\n    '𝗤': 'q',\n    '𝗥': 'r',\n    '𝗦': 's',\n    '𝗧': 't',\n    '𝗨': 'u',\n    '𝗩': 'v',\n    '𝗪': 'w',\n    '𝗫': 'x',\n    '𝗬': 'y',\n    '𝗭': 'z',\n    '𝗮': 'a',\n    '𝗯': 'b',\n    '𝗰': 'c',\n    '𝗱': 'd',\n    '𝗲': 'e',\n    '𝗳': 'f',\n    '𝗴': 'g',\n    '𝗵': 'h',\n    '𝗶': 'i',\n    '𝗷': 'j',\n    '𝗸': 'k',\n    '𝗹': 'l',\n    '𝗺': 'm',\n    '𝗻': 'n',\n    '𝗼': 'o',\n    '𝗽': 'p',\n    '𝗾': 'q',\n    '𝗿': 'r',\n    '𝘀': 's',\n    '𝘁': 't',\n    '𝘂': 'u',\n    '𝘃': 'v',\n    '𝘄': 'w',\n    '𝘅': 'x',\n    '𝘆': 'y',\n    '𝘇': 'z',\n    // Кириллица (основные буквы)\n    а: 'a',\n    б: 'b',\n    в: 'v',\n    г: 'g',\n    д: 'd',\n    е: 'e',\n    ё: 'e',\n    ж: 'zh',\n    з: 'z',\n    и: 'i',\n    й: 'y',\n    к: 'k',\n    л: 'l',\n    м: 'm',\n    н: 'n',\n    о: 'o',\n    п: 'p',\n    р: 'r',\n    с: 's',\n    т: 't',\n    у: 'u',\n    ф: 'f',\n    х: 'h',\n    ц: 'ts',\n    ч: 'ch',\n    ш: 'sh',\n    щ: 'sch',\n    ъ: '',\n    ы: 'y',\n    ь: '',\n    э: 'e',\n    ю: 'yu',\n    я: 'ya',\n    // Другие специальные символы\n    '/': '-',\n    '\\\\': '-',\n    '|': '-',\n    ':': '-',\n    ';': '-',\n    '.': '-',\n    ',': '-',\n    '!': '',\n    '?': '',\n    '(': '',\n    ')': '',\n    '[': '',\n    ']': '',\n    '{': '',\n    '}': '',\n    '<': '',\n    '>': '',\n    '@': 'at',\n    '#': '',\n    $: '',\n    '%': 'percent',\n    '^': '',\n    '&': 'and',\n    '*': '',\n    '+': 'plus',\n    '=': 'equals',\n    \"'\": '',\n    '\"': '',\n    '`': '',\n    '~': '-',\n    '—': '-',\n    '–': '-',\n    '―': '-',\n    '‒': '-', // различные типы тире\n    '•': '-',\n    '·': '-',\n    '…': '-', // маркеры списков и другие спецсимволы\n  };\n  // Кэш для хранения сгенерированных идентификаторов для неизвестных символов\n  const unknownCharCache = {};\n  // Функция для генерации случайного идентификатора для символа\n  function generateRandomId() {\n    // Генерируем 6-значный буквенно-цифровой идентификатор\n    const chars = 'abcdefghijklmnopqrstuvwxyz0123456789';\n    let result = '';\n    for (let i = 0; i < 6; i++) {\n      result += chars.charAt(Math.floor(Math.random() * chars.length));\n    }\n    return 'x' + result; // Добавляем 'x' в начало, чтобы гарантировать, что ID начинается с буквы\n  }\n  // Функция для транслитерации символов\n  function transliterateChar(char) {\n    // Если символ есть в карте, используем его преобразование\n    if (unicodeMap[char] !== undefined) {\n      return unicodeMap[char];\n    }\n    // Если это латинская буква, цифра или дефис, оставляем как есть\n    if (/[a-z0-9-]/.test(char)) {\n      return char;\n    }\n    // Для необработанного символа генерируем или используем существующий ID\n    if (!unknownCharCache[char]) {\n      unknownCharCache[char] = generateRandomId();\n    }\n    return unknownCharCache[char];\n  }\n  // Преобразуем строку посимвольно\n  let result = '';\n  for (let i = 0; i < str.length; i++) {\n    result += transliterateChar(str[i]);\n  }\n  // Преобразуем строку: удаляем пробелы по краям, приводим к нижнему регистру\n  result = result.trim().toLowerCase();\n  // Заменяем пробелы на дефисы\n  result = result.replace(/ /g, '-');\n  // Удаляем нежелательные символы, оставляем только буквы, цифры, дефисы\n  // Note: больше не нужно, так как мы уже обработали все символы\n  // Удаляем множественные дефисы\n  result = result.replace(/-+/g, '-');\n  // Удаляем дефисы в начале и в конце строки\n  result = result.replace(/^-+|-+$/g, '');\n  return result;\n}\nexport default createFriendlyURL;\n",
                "name": "seo-friendly-url.js",
                "size": 5307,
                "type": "source"
              },
              {
                "path": "../../src/modules/globals/controllers/utils/sitemap.js",
                "relativePath": "modules/globals/controllers/utils/sitemap.js",
                "extension": ".js",
                "content": "import sitemap from 'sitemap.js';\nimport { createGzip } from 'zlib';\nconst { SitemapStream, streamToPromise } = sitemap;\nasync function generateSitemap(db, req, res) {\n  const Blogpost = db.blogpost;\n  // Set HTTP headers\n  res.setHeader('Content-Type', 'application/xml');\n  res.setHeader('Content-Encoding', 'gzip');\n  const posts = await Blogpost.find();\n  const languages = ['', 'en', 'ru', 'fr', 'de', 'it', 'zh']; // Add or remove languages as needed\n  const smStream = new SitemapStream({ hostname: 'https://thecommunephuket.com/' });\n  const pipeline = smStream.pipe(createGzip());\n  const routes = ['/', '/about', '/gallery', '/contacts', '/community'];\n  languages.forEach(lang => {\n    const prefix = lang ? `${lang}` : '';\n    routes.forEach(route => {\n      smStream.write({ url: `${prefix}${route}`, changefreq: 'monthly', priority: 0.7 });\n    });\n    posts.forEach(post => {\n      smStream.write({\n        url: `${prefix}/community/posts/${post.url}`,\n        changefreq: 'weekly',\n        priority: 0.5,\n      });\n    });\n  });\n  smStream.end();\n  // Handle the stream error explicitly\n  pipeline.pipe(res).on('error', e => {\n    console.error(e);\n    res.status(500).send('An error occurred while generating the sitemap.');\n  });\n}\nexport default generateSitemap;\n",
                "name": "sitemap.js",
                "size": 1282,
                "type": "source"
              }
            ]
          }
        },
        "_files": [
          {
            "path": "../../src/modules/globals/globals.client.js",
            "relativePath": "modules/globals/globals.client.js",
            "extension": ".js",
            "content": "// Components\n// import Client from \"./components/layouts/Client.vue\"\n\nimport getBrowserLocale from './views/localization/get-browser-locale.js';\nimport scrollBehavior from './views/router/scrollBehavior.js';\n\nimport layoutApp from './views/components/layouts/App.vue';\nimport layoutClient from './views/components/layouts/Client.vue';\n\nimport BlockSearch from '@martyrs/src/modules/globals/views/components/blocks/BlockSearch.vue';\n\nimport BottomNavigationBar from '@martyrs/src/modules/globals/views/components/partials/BottomNavigationBar.vue';\nimport Header from '@martyrs/src/modules/globals/views/components/partials/Header.vue';\nimport Navigation from '@martyrs/src/modules/globals/views/components/partials/Navigation.vue';\nimport NavigationBar from '@martyrs/src/modules/globals/views/components/partials/NavigationBar.vue';\nimport Sidebar from '@martyrs/src/modules/globals/views/components/partials/Sidebar.vue';\n\nimport * as mixins from './views/mixins/mixins.js';\nimport * as storeGlobals from './views/store/globals.js';\nimport * as appRenderer from './views/utils/vue-app-renderer.js';\n\nimport alertPlugin from './views/plugins/alert.plugin.js';\nimport datePickerPlugin from './views/plugins/date-picker.plugin.js';\nimport storeDebuggerPlugin from './views/plugins/store-debugger/store-debugger.plugin.js';\n\nimport store from './views/classes/store.js';\n\nimport websockets from './views/classes/globals.websocket.js';\n\n// Пример функции инициализации для модуля заказов\nfunction initializeGlobals(app, store, router, config, options = {}) {\n  const route = options.route || 'Home';\n\n  const envVariables = ['NODE_ENV', 'PORT', 'APP_NAME', 'DOMAIN_URL', 'API_URL', 'WSS_URL', 'FILE_SERVER_URL', 'WDT_TOKEN', 'WDM_URL_PROD', 'GOOGLE_MAPS_API_KEY', 'MOBILE_APP'];\n\n  app.config.globalProperties.DOMAIN_URL = process.env.DOMAIN_URL;\n  app.config.globalProperties.API_URL = process.env.API_URL;\n  app.config.globalProperties.MOBILE_APP = process.env.MOBILE_APP;\n  app.config.globalProperties.FILE_SERVER_URL = process.env.FILE_SERVER_URL;\n  app.config.globalProperties.GOOGLE_MAPS_API_KEY = process.env.GOOGLE_MAPS_API_KEY;\n\n  app.mixin(mixins.globalMixins);\n\n  app.use(alertPlugin);\n  app.use(datePickerPlugin);\n  app.use(storeDebuggerPlugin, store);\n\n  // Change Locale to Route Locale if available\n  router.beforeEach((to, from, next) => {\n    const locale = to.params.locale;\n\n    if (locale) {\n      if (!app.config.globalProperties.$i18n.availableLocales.includes(locale)) {\n        return next({ path: '/404' });\n      } else {\n        app.config.globalProperties.$i18n.locale = locale;\n        return next();\n      }\n    }\n\n    return next();\n  });\n\n  if (config && config.modules) storeGlobals.state.options = config.modules;\n\n  store.addStore('globals', storeGlobals);\n\n  router.addRoute(route, {\n    path: '404',\n    name: 'notfound',\n    component: () => import('@martyrs/src/modules/globals/views/components/pages/404.vue'),\n  });\n  router.addRoute(route, {\n    path: '401',\n    name: 'unauthorized',\n    component: () => import('@martyrs/src/modules/globals/views/components/pages/401.vue'),\n  });\n  router.addRoute(route, {\n    path: ':pathMatch(.*)*',\n    name: 'NotFound',\n    redirect: { name: 'notfound' },\n  });\n}\n\nconst ModuleGlobals = {\n  initialize: initializeGlobals,\n  views: {\n    store: {\n      storeGlobals,\n    },\n    router: {\n      // routerOrders\n    },\n    components: {\n      // Pages\n      BlockSearch,\n      layoutClient,\n      layoutApp,\n      Header,\n      Navigation,\n      Sidebar,\n      BottomNavigationBar,\n      NavigationBar,\n    },\n  },\n};\n\nexport {\n  BlockSearch,\n  Header,\n  Navigation,\n  NavigationBar,\n  Sidebar,\n  appRenderer,\n  getBrowserLocale,\n  layoutApp,\n  // Components\n  layoutClient,\n  // Client,\n  mixins,\n  scrollBehavior,\n  store,\n  // Store\n  storeGlobals,\n  websockets,\n};\n\nexport default ModuleGlobals;\n",
            "name": "globals.client.js",
            "size": 3877,
            "type": "source"
          },
          {
            "path": "../../src/modules/globals/globals.server.js",
            "relativePath": "modules/globals/globals.server.js",
            "extension": ".js",
            "content": "import globalsabac from '@martyrs/src/modules/globals/controllers/classes/globals.abac.js';\nimport WebSocketManager from '@martyrs/src/modules/globals/controllers/classes/globals.websocket.js';\nimport initGlobalsPolicies from './controllers/policies/globals.policies.js';\n// globals.server.js (добавляем определение модели Log сюда)\nconst { getInstance } = globalsabac;\nfunction initializeGlobals(app, db, origins, publicPath) {\n  // Определяем модель Log только здесь\n  db.log =\n    db.mongoose.models.Log ||\n    db.mongoose.model(\n      'Log',\n      new db.mongoose.Schema(\n        {\n          timestamp: { type: Date, default: Date.now },\n          level: String,\n          message: String,\n        },\n        { versionKey: false }\n      )\n    );\n  const abac = getInstance(db);\n  const globalsPolicies = initGlobalsPolicies(abac);\n}\nexport { WebSocketManager, initializeGlobals as initialize };\nexport default {\n  initialize: initializeGlobals,\n  WebSocketManager,\n};\n",
            "name": "globals.server.js",
            "size": 972,
            "type": "source"
          }
        ],
        "models": {
          "schemas": {
            "_files": [
              {
                "path": "../../src/modules/globals/models/schemas/common.schema.js",
                "relativePath": "modules/globals/models/schemas/common.schema.js",
                "extension": ".js",
                "content": "export default (function applyCommonSchema(schema, db) {\n  schema.add({\n    status: {\n      type: String,\n      enum: ['draft', 'published', 'featured', 'archived', 'removed'],\n      default: 'draft',\n      required: true,\n    },\n  });\n});\n",
                "name": "common.schema.js",
                "size": 240,
                "type": "source"
              },
              {
                "path": "../../src/modules/globals/models/schemas/credentials.schema.js",
                "relativePath": "modules/globals/models/schemas/credentials.schema.js",
                "extension": ".js",
                "content": "export default (function applyCredentialsSchema(schema, db) {\n  schema.add({\n    phone: String,\n    email: String,\n    apple_id: String,\n  });\n});\n",
                "name": "credentials.schema.js",
                "size": 147,
                "type": "source"
              },
              {
                "path": "../../src/modules/globals/models/schemas/engagement.schema.js",
                "relativePath": "modules/globals/models/schemas/engagement.schema.js",
                "extension": ".js",
                "content": "export default (function applyEngagementSchema(schema, db) {\n  // Добавление нового поля в схему\n  schema.add({ views: { type: Number, default: 0 } });\n  // Middleware после агрегации\n  schema.post('aggregate', async function (docs) {\n    // Если документы отсутствуют, выход из функции\n    if (docs.length === 0) return;\n    console.log('Post-aggregate hook in engagement schema triggered');\n    const model = this._model;\n    if (!model) {\n      console.error('No model is associated with this schema!');\n      return;\n    }\n    // Обновление просмотров с обработкой ошибок\n    try {\n      await updateDocumentViews(docs, model);\n    } catch (error) {\n      console.error('Error updating views:', error);\n    }\n  });\n  // Функция для обновления просмотров документов\n  async function updateDocumentViews(docs, model) {\n    const updateViewsPromises = docs.map(doc => model.findOneAndUpdate({ _id: doc._id }, { $inc: { views: 1 } }).exec());\n    await Promise.all(updateViewsPromises);\n  }\n});\n",
                "name": "engagement.schema.js",
                "size": 995,
                "type": "source"
              },
              {
                "path": "../../src/modules/globals/models/schemas/metadata.schema.js",
                "relativePath": "modules/globals/models/schemas/metadata.schema.js",
                "extension": ".js",
                "content": "import createFriendlyURL from '@martyrs/src/modules/globals/controllers/utils/seo-friendly-url.js';\nexport default (function applyMetadataSchema(schema, db) {\n  schema.add({\n    url: {\n      type: String,\n      unique: true,\n      required: true,\n    },\n    tags: [\n      {\n        type: String,\n      },\n    ],\n  });\n  schema.pre('save', function (next) {\n    // Генерируем URL только если он не задан.\n    if (!this.url) {\n      const name = this.name || this.title || (this.profile ? this.profile.name : '');\n      if (name) {\n        this.url = createFriendlyURL(name);\n      }\n    }\n    next();\n  });\n  schema.index({\n    url: 1,\n    tags: 1,\n  });\n});\n",
                "name": "metadata.schema.js",
                "size": 658,
                "type": "source"
              },
              {
                "path": "../../src/modules/globals/models/schemas/ownership.schema.js",
                "relativePath": "modules/globals/models/schemas/ownership.schema.js",
                "extension": ".js",
                "content": "export default (function applyOwnershipSchema(schema, db) {\n  \n  schema.add({\n    owner: {\n      type: {\n        type: String,\n        required: true,\n        enum: ['user', 'organization', 'platform'],\n      },\n      target: {\n        type: db.mongoose.Schema.Types.ObjectId,\n        refPath: 'owner.type',\n        required: function () {\n          return this.owner.type !== 'platform';\n        },\n      },\n    },\n    creator: {\n      hidden: {\n        type: Boolean,\n        default: false,\n      },\n      type: {\n        type: String,\n        required: true,\n        enum: ['user', 'organization', 'customer', 'platform'],\n      },\n      target: {\n        type: db.mongoose.Schema.Types.ObjectId,\n        refPath: 'creator.type',\n        required: function () {\n          return this.creator.type !== 'platform';\n        },\n      },\n    },\n  });\n\n  schema.index({\n    'owner.target': 1,\n    'creator.target': 1,\n  });\n\n});\n",
                "name": "ownership.schema.js",
                "size": 927,
                "type": "source"
              },
              {
                "path": "../../src/modules/globals/models/schemas/profile.schema.js",
                "relativePath": "modules/globals/models/schemas/profile.schema.js",
                "extension": ".js",
                "content": "export default (function applyProfileSchema(schema, db) {\n  schema.add({\n    profile: {\n      photo: {\n        type: String,\n        default: null,\n      },\n      name: {\n        type: String,\n        default: null,\n      },\n      description: {\n        type: String,\n        default: null,\n      },\n    },\n  });\n});\n",
                "name": "profile.schema.js",
                "size": 317,
                "type": "source"
              },
              {
                "path": "../../src/modules/globals/models/schemas/socials.schema.js",
                "relativePath": "modules/globals/models/schemas/socials.schema.js",
                "extension": ".js",
                "content": "export default (function applySocialsSchema(schema, db) {\n  schema.add({\n    socials: {\n      telegram: {\n        type: String,\n        default: '',\n      },\n      twitter: {\n        type: String,\n        default: '',\n      },\n      facebook: {\n        type: String,\n        default: '',\n      },\n      instagram: {\n        type: String,\n        default: '',\n      },\n    },\n  });\n});\n",
                "name": "socials.schema.js",
                "size": 385,
                "type": "source"
              }
            ]
          }
        },
        "views": {
          "classes": {
            "_files": [
              {
                "path": "../../src/modules/globals/views/classes/globals.store.js",
                "relativePath": "modules/globals/views/classes/globals.store.js",
                "extension": ".js",
                "content": "import { reactive } from 'vue';\n// Globals\nimport { setError } from '@martyrs/src/modules/globals/views/store/globals.js';\n\nclass Store {\n  constructor(apiUrl) {\n    this.state = reactive({\n      items: [],\n      current: {},\n    });\n    this.apiUrl = apiUrl;\n    // console.log(`Store initialized with API URL: ${apiUrl}`);\n  }\n\n  // Simplified request method with enhanced debugging\n  async request(endpoint, options = {}) {\n    const url = endpoint.startsWith('http') ? endpoint : `${this.apiUrl}${endpoint}`;\n    console.log(`Making request to: ${url}`, { method: options.method || 'GET' });\n\n    const defaultOptions = {\n      credentials: 'include', // Assumes credentials needed for each request\n      headers: {},\n    };\n    const finalOptions = {\n      ...defaultOptions,\n      ...options,\n    };\n\n    // Set default headers if content type is not explicitly set\n    if (!finalOptions.headers['Content-Type'] && options.body) {\n      finalOptions.headers['Content-Type'] = 'application/json';\n      finalOptions.body = JSON.stringify(options.body);\n    }\n\n    try {\n      console.log(\n        'Request options:',\n        JSON.stringify({\n          method: finalOptions.method,\n          headers: finalOptions.headers,\n          bodyLength: finalOptions.body ? JSON.stringify(finalOptions.body).length : 0,\n        })\n      );\n\n      const response = await fetch(url, finalOptions);\n      console.log(`Response status: ${response.status}`);\n\n      // Log response headers for debugging\n      const responseHeaders = {};\n      response.headers.forEach((value, key) => {\n        responseHeaders[key] = value;\n      });\n      console.log('Response headers:', responseHeaders);\n\n      if (!response.ok) {\n        let errorData;\n        try {\n          errorData = await response.json();\n        } catch (jsonError) {\n          console.error('Failed to parse error response as JSON:', jsonError);\n          errorData = { message: 'Failed to parse server response' };\n        }\n\n        console.error('Server returned error:', errorData);\n        const error = new Error(errorData.message || `Server returned ${response.status}`);\n        error.status = response.status;\n        error.errorCode = errorData.errorCode || 'UNKNOWN_ERROR';\n        error.responseText = await response.text().catch(() => 'Unable to get response text');\n        throw error;\n      }\n\n      const data = await response.json();\n      console.log('Response data received successfully');\n      return data;\n    } catch (error) {\n      console.error('Request failed:', error);\n      if (error.name === 'TypeError' && error.message.includes('Failed to fetch')) {\n        console.error('Network error detected. This might indicate a CORS issue, network connectivity problem, or the server is down.');\n        const enhancedError = new Error('Network error: Unable to connect to the server');\n        enhancedError.originalError = error;\n        setError(enhancedError);\n        throw enhancedError;\n      }\n\n      setError(error);\n      throw error;\n    }\n  }\n\n  async create(item) {\n    console.log('Creating item:', item);\n    try {\n      const result = await this.request('/create', {\n        method: 'POST',\n        body: item,\n      });\n      console.log('Create operation succeeded:', result);\n      return result;\n    } catch (error) {\n      console.error('Create operation failed:', error);\n      // Log specific error details\n      if (error.status) {\n        console.error(`HTTP Status: ${error.status}`);\n      }\n      if (error.errorCode) {\n        console.error(`Error Code: ${error.errorCode}`);\n      }\n      setError(error);\n      throw error;\n    }\n  }\n\n  async read(options = {}) {\n    console.log('Reading items with options:', options);\n    try {\n      const queryParams = new URLSearchParams(options).toString();\n      const result = await this.request(`/read?${queryParams}`);\n      console.log(`Read operation returned ${result.length || 0} items`);\n      return result;\n    } catch (error) {\n      console.error('Read operation failed:', error);\n      setError(error);\n      throw error;\n    }\n  }\n\n  async update(item) {\n    console.log('Updating item:', item);\n    try {\n      const result = await this.request('/update', {\n        method: 'PUT',\n        body: item,\n      });\n      console.log('Update operation succeeded:', result);\n      return result;\n    } catch (error) {\n      console.error('Update operation failed:', error);\n      setError(error);\n      throw error;\n    }\n  }\n\n  async delete(item) {\n    console.log('Deleting item:', item);\n    try {\n      const result = await this.request(`/delete`, {\n        method: 'DELETE',\n        body: item,\n      });\n      console.log('Delete operation succeeded');\n      return result;\n    } catch (error) {\n      console.error('Delete operation failed:', error);\n      setError(error);\n      throw error;\n    }\n  }\n\n  // Enhanced Mutations utilizing Vue reactivity system efficiently\n  setItems(items, state) {\n    console.log(`Setting ${items.length} items in state`);\n    const targetState = state || this.state.items;\n    if (Array.isArray(targetState)) {\n      targetState.splice(0, targetState.length, ...items);\n    } else {\n      console.error('Target state is not an array in setItems');\n    }\n  }\n\n  addItem(item, state, property = '_id') {\n    const targetState = state || this.state.items;\n    const existingItemIndex = targetState.findIndex(i => i[property] === item[property]);\n\n    if (existingItemIndex === -1) {\n      console.log('Adding new item to state');\n      targetState.splice(0, 0, item);\n    } else {\n      console.log('Updating existing item in state');\n      Object.assign(targetState[existingItemIndex], item);\n    }\n  }\n\n  updateItem(item, state, property = '_id') {\n    const targetState = state || this.state.items;\n    const index = targetState.findIndex(i => i[property] === item[property]);\n    if (index !== -1) {\n      console.log('Replacing item in state');\n      targetState.splice(index, 1, item);\n    } else {\n      console.log('Item not found for update in state');\n    }\n  }\n\n  removeItem(item, state, property = '_id') {\n    const targetState = state || this.state.items;\n    // Поиск и удаление элемента по указанному ключу\n    const index = targetState.findIndex(i => i[property] === item[property]);\n    if (index !== -1) {\n      console.log('Removing item from state');\n      targetState.splice(index, 1);\n    } else {\n      console.log('Item not found for removal from state');\n    }\n  }\n}\n\nexport default Store;\n",
                "name": "globals.store.js",
                "size": 6515,
                "type": "source"
              },
              {
                "path": "../../src/modules/globals/views/classes/globals.websocket.js",
                "relativePath": "modules/globals/views/classes/globals.websocket.js",
                "extension": ".js",
                "content": "class GlobalWebSocket {\n  constructor() {\n    this.socket = null;\n    this.isConnected = false;\n    this.reconnectAttempts = 0;\n    this.maxReconnectAttempts = 5;\n    this.reconnectDelay = 3000;\n    this.baseUrl = null;\n    this.pingInterval = null;\n    this.pingIntervalTime = 30000;\n    this.listeners = {};\n    this.userId = null;\n    this.connectPromise = null;\n    this.subscribedModules = new Set();\n\n    // RPC-специфичные свойства\n    this.rpcCallbacks = new Map();\n    this.rpcTimeout = 30000; // 30 секунд таймаут по умолчанию\n    this.rpcIdCounter = 0;\n  }\n\n  initialize(options = {}) {\n    this.maxReconnectAttempts = options.maxReconnectAttempts || this.maxReconnectAttempts;\n    this.reconnectDelay = options.reconnectDelay || this.reconnectDelay;\n    this.baseUrl = options.wsUrl || this._getDefaultWsUrl();\n    this.pingIntervalTime = options.pingInterval || this.pingIntervalTime;\n    this.rpcTimeout = options.rpcTimeout || this.rpcTimeout;\n  }\n\n  _getDefaultWsUrl() {\n    if (typeof window === 'undefined') return '/api/ws';\n    const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\n    const host = window.location.host;\n    return `${protocol}//${host}/api/ws`;\n  }\n\n  connect(userId) {\n    if (typeof window === 'undefined') return Promise.resolve(false);\n    this.userId = userId;\n\n    // Проверяем существующее соединение\n    if (this.isConnected && this.socket?.readyState === WebSocket.OPEN) {\n      return Promise.resolve(this.socket);\n    }\n\n    // Предотвращаем создание множества промисов при параллельных вызовах\n    if (this.connectPromise) {\n      return this.connectPromise;\n    }\n\n    this.connectPromise = new Promise((resolve, reject) => {\n      this.disconnect();\n\n      // Используем baseUrl без параметров, так как аутентификация через cookie\n      this.socket = new WebSocket(this.baseUrl);\n\n      this.socket.onopen = () => {\n        this._handleOpen();\n        resolve(this.socket);\n      };\n\n      this.socket.onmessage = this._handleMessage.bind(this);\n      this.socket.onerror = err => {\n        this._handleError(err);\n        reject(err);\n      };\n      this.socket.onclose = this._handleClose.bind(this);\n\n      setTimeout(() => {\n        if (!this.isConnected) {\n          reject(new Error('WebSocket connection timeout'));\n        }\n      }, 10000);\n    }).finally(() => {\n      this.connectPromise = null;\n    });\n\n    return this.connectPromise;\n  }\n\n  disconnect() {\n    if (typeof window === 'undefined') return;\n\n    if (this.socket) {\n      this.socket.onopen = null;\n      this.socket.onmessage = null;\n      this.socket.onerror = null;\n      this.socket.onclose = null;\n      if (this.socket.readyState === WebSocket.OPEN || this.socket.readyState === WebSocket.CONNECTING) {\n        this.socket.close();\n      }\n      this.socket = null;\n    }\n\n    if (this.pingInterval) {\n      clearInterval(this.pingInterval);\n      this.pingInterval = null;\n    }\n\n    // Отменяем все ожидающие RPC вызовы\n    for (const [id, { reject }] of this.rpcCallbacks.entries()) {\n      reject(new Error('WebSocket disconnected'));\n      this.rpcCallbacks.delete(id);\n    }\n\n    this.isConnected = false;\n    this.userId = null;\n    this.subscribedModules.clear(); // Очищаем подписки при отключении\n  }\n\n  async send(data) {\n    if (!this.socket || this.socket.readyState !== WebSocket.OPEN) {\n      console.error('Cannot send message: WebSocket is not connected');\n      return false;\n    }\n\n    try {\n      const msg = typeof data === 'string' ? data : JSON.stringify(data);\n      this.socket.send(msg);\n      return true;\n    } catch (err) {\n      console.error('Error sending message:', err);\n      return false;\n    }\n  }\n\n  /**\n   * Выполняет RPC вызов на сервере\n   * @param {string} module - Имя модуля\n   * @param {string} method - Имя метода\n   * @param {object} params - Параметры метода\n   * @param {object} [options] - Опции вызова\n   * @param {number} [options.timeout] - Таймаут в миллисекундах\n   * @returns {Promise<any>} - Результат вызова\n   */\n  rpc(module, method, params = {}, options = {}) {\n    if (!this.isConnected || this.socket?.readyState !== WebSocket.OPEN) {\n      return Promise.reject(new Error('WebSocket is not connected'));\n    }\n\n    if (!module || !method) {\n      return Promise.reject(new Error('Module and method are required'));\n    }\n\n    // Генерируем уникальный ID для вызова\n    const id = `${++this.rpcIdCounter}`;\n    const timeout = options.timeout || this.rpcTimeout;\n\n    return new Promise((resolve, reject) => {\n      // Записываем информацию о вызове для последующей обработки ответа\n      this.rpcCallbacks.set(id, {\n        resolve,\n        reject,\n        timeoutId: setTimeout(() => {\n          if (this.rpcCallbacks.has(id)) {\n            this.rpcCallbacks.delete(id);\n            reject(new Error(`RPC call to ${module}.${method} timed out after ${timeout}ms`));\n          }\n        }, timeout),\n      });\n\n      // Отправляем RPC запрос\n      this.send({\n        type: 'rpc',\n        module,\n        method,\n        params,\n        id,\n      }).catch(err => {\n        if (this.rpcCallbacks.has(id)) {\n          clearTimeout(this.rpcCallbacks.get(id).timeoutId);\n          this.rpcCallbacks.delete(id);\n          reject(err);\n        }\n      });\n    });\n  }\n\n  addEventListener(eventType, callback, options = {}) {\n    const listenerId = `${options.module || 'global'}_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    if (!this.listeners[eventType]) this.listeners[eventType] = {};\n    this.listeners[eventType][listenerId] = callback;\n    return listenerId;\n  }\n\n  removeEventListener(eventType, listenerId) {\n    if (this.listeners[eventType]?.[listenerId]) {\n      delete this.listeners[eventType][listenerId];\n    }\n  }\n\n  removeModuleListeners(moduleName) {\n    Object.keys(this.listeners).forEach(eventType => {\n      Object.keys(this.listeners[eventType]).forEach(listenerId => {\n        if (listenerId.startsWith(`${moduleName}_`)) {\n          delete this.listeners[eventType][listenerId];\n        }\n      });\n    });\n  }\n\n  async subscribeModule(moduleName) {\n    if (!moduleName || this.subscribedModules.has(moduleName)) return;\n    const success = await this.send({ type: 'subscribe', module: moduleName });\n    if (success) {\n      this.subscribedModules.add(moduleName);\n    }\n  }\n\n  async unsubscribeModule(moduleName) {\n    if (!moduleName || !this.subscribedModules.has(moduleName)) return;\n    const success = await this.send({ type: 'unsubscribe', module: moduleName });\n    if (success) {\n      this.subscribedModules.delete(moduleName);\n    }\n  }\n\n  _resubscribeAllModules() {\n    for (const moduleName of this.subscribedModules) {\n      this.send({ type: 'subscribe', module: moduleName });\n    }\n  }\n\n  _handleOpen() {\n    this.isConnected = true;\n    this.reconnectAttempts = 0;\n\n    this.pingInterval = setInterval(() => {\n      if (this.socket?.readyState === WebSocket.OPEN) {\n        this.socket.send(JSON.stringify({ type: 'ping' }));\n      }\n    }, this.pingIntervalTime);\n\n    this._resubscribeAllModules();\n    this._notifyListeners('open', { isConnected: true });\n  }\n\n  _handleMessage(event) {\n    // Проверка на типы сообщений - пропускаем бинарные сообщения\n    if (typeof event.data !== 'string') {\n      console.warn('Received binary message, but only JSON is supported');\n      return;\n    }\n\n    try {\n      const data = JSON.parse(event.data);\n\n      // Обрабатываем ответы на RPC вызовы\n      if (data.type === 'rpc_response' && data.id && this.rpcCallbacks.has(data.id)) {\n        const { resolve, reject, timeoutId } = this.rpcCallbacks.get(data.id);\n        clearTimeout(timeoutId);\n        this.rpcCallbacks.delete(data.id);\n\n        if (data.error) {\n          reject(Object.assign(new Error(data.error.message), data.error));\n        } else {\n          resolve(data.result);\n        }\n\n        return;\n      }\n\n      // Обрабатываем обычные сообщения\n      this._notifyListeners('message', data);\n      if (data.type) {\n        this._notifyListeners(data.type, data);\n      }\n    } catch (err) {\n      console.error('WebSocket message error:', err);\n    }\n  }\n\n  _handleError(error) {\n    console.error('WebSocket error:', error);\n    this._notifyListeners('error', { error });\n\n    // Отменяем все RPC вызовы с ошибкой соединения\n    for (const [id, { reject, timeoutId }] of this.rpcCallbacks.entries()) {\n      clearTimeout(timeoutId);\n      reject(new Error('WebSocket connection error'));\n      this.rpcCallbacks.delete(id);\n    }\n  }\n\n  _handleClose(event) {\n    this.isConnected = false;\n    if (this.pingInterval) {\n      clearInterval(this.pingInterval);\n      this.pingInterval = null;\n    }\n\n    // Отменяем все RPC вызовы при закрытии соединения\n    for (const [id, { reject, timeoutId }] of this.rpcCallbacks.entries()) {\n      clearTimeout(timeoutId);\n      reject(new Error('WebSocket connection closed'));\n      this.rpcCallbacks.delete(id);\n    }\n\n    this._notifyListeners('close', { code: event.code, reason: event.reason });\n\n    if (event.code !== 1000 && this.userId && this.reconnectAttempts < this.maxReconnectAttempts) {\n      this.reconnectAttempts++;\n      const delay = this.reconnectDelay * this.reconnectAttempts;\n      setTimeout(() => {\n        this.connect(this.userId).catch(err => {\n          console.error('Reconnection failed:', err);\n        });\n      }, delay);\n    }\n  }\n\n  _notifyListeners(eventType, data) {\n    Object.values(this.listeners[eventType] || {}).forEach(fn => {\n      try {\n        fn(data);\n      } catch (err) {\n        console.error(`Listener for ${eventType} failed:`, err);\n      }\n    });\n  }\n\n  isSocketConnected() {\n    return this.isConnected && this.socket?.readyState === WebSocket.OPEN;\n  }\n}\n\nconst globalWebSocket = new GlobalWebSocket();\nexport default globalWebSocket;\n",
                "name": "globals.websocket.js",
                "size": 9822,
                "type": "source"
              },
              {
                "path": "../../src/modules/globals/views/classes/globals.websocket.ws.js",
                "relativePath": "modules/globals/views/classes/globals.websocket.ws.js",
                "extension": ".js",
                "content": "class GlobalWebSocket {\n  constructor() {\n    this.socket = null;\n    this.isConnected = false;\n    this.reconnectAttempts = 0;\n    this.maxReconnectAttempts = 5;\n    this.reconnectDelay = 3000;\n    this.baseUrl = null;\n    this.pingInterval = null;\n    this.pingIntervalTime = 30000;\n    this.listeners = {};\n    this.userId = null;\n    this.connectPromise = null;\n    this.subscribedModules = new Set(); // <--- ключевое изменение\n  }\n\n  initialize(options = {}) {\n    this.maxReconnectAttempts = options.maxReconnectAttempts || this.maxReconnectAttempts;\n    this.reconnectDelay = options.reconnectDelay || this.reconnectDelay;\n    this.baseUrl = options.wsUrl || this._getDefaultWsUrl();\n    this.pingIntervalTime = options.pingInterval || this.pingIntervalTime;\n  }\n\n  _getDefaultWsUrl() {\n    if (typeof window === 'undefined') return '/api/ws';\n    const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\n    const host = window.location.host;\n    return `${protocol}//${host}/api/ws`;\n  }\n\n  connect(userId) {\n    if (typeof window === 'undefined') return Promise.resolve(false);\n    this.userId = userId;\n\n    if (this.isConnected && this.socket?.readyState === WebSocket.OPEN) {\n      return Promise.resolve(this.socket);\n    }\n\n    this.connectPromise = new Promise((resolve, reject) => {\n      this.disconnect();\n\n      const wsUrl = userId ? `${this.baseUrl}?userId=${encodeURIComponent(userId)}` : this.baseUrl;\n      this.socket = new WebSocket(wsUrl);\n\n      this.socket.onopen = () => {\n        this._handleOpen();\n        resolve(this.socket);\n      };\n\n      this.socket.onmessage = this._handleMessage.bind(this);\n      this.socket.onerror = err => {\n        this._handleError(err);\n        reject(err);\n      };\n      this.socket.onclose = this._handleClose.bind(this);\n\n      setTimeout(() => {\n        if (!this.isConnected) {\n          reject(new Error('WebSocket connection timeout'));\n        }\n      }, 10000);\n    }).finally(() => {\n      this.connectPromise = null;\n    });\n\n    return this.connectPromise;\n  }\n\n  disconnect() {\n    if (typeof window === 'undefined') return;\n\n    if (this.socket) {\n      this.socket.onopen = null;\n      this.socket.onmessage = null;\n      this.socket.onerror = null;\n      this.socket.onclose = null;\n      if (this.socket.readyState === WebSocket.OPEN || this.socket.readyState === WebSocket.CONNECTING) {\n        this.socket.close();\n      }\n      this.socket = null;\n    }\n\n    if (this.pingInterval) {\n      clearInterval(this.pingInterval);\n      this.pingInterval = null;\n    }\n\n    this.isConnected = false;\n    this.userId = null;\n  }\n\n  async send(data) {\n    if (!this.socket || this.socket.readyState !== WebSocket.OPEN) {\n      console.error('Cannot send message: WebSocket is not connected');\n      return false;\n    }\n\n    try {\n      const msg = typeof data === 'string' ? data : JSON.stringify(data);\n      this.socket.send(msg);\n      return true;\n    } catch (err) {\n      console.error('Error sending message:', err);\n      return false;\n    }\n  }\n\n  addEventListener(eventType, callback, options = {}) {\n    const listenerId = `${options.module || 'global'}_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    if (!this.listeners[eventType]) this.listeners[eventType] = {};\n    this.listeners[eventType][listenerId] = callback;\n    return listenerId;\n  }\n\n  removeEventListener(eventType, listenerId) {\n    if (this.listeners[eventType]?.[listenerId]) {\n      delete this.listeners[eventType][listenerId];\n    }\n  }\n\n  removeModuleListeners(moduleName) {\n    Object.keys(this.listeners).forEach(eventType => {\n      Object.keys(this.listeners[eventType]).forEach(listenerId => {\n        if (listenerId.startsWith(`${moduleName}_`)) {\n          delete this.listeners[eventType][listenerId];\n        }\n      });\n    });\n  }\n\n  async subscribeModule(moduleName) {\n    if (!moduleName || this.subscribedModules.has(moduleName)) return;\n    const success = await this.send({ type: 'subscribe', module: moduleName });\n    if (success) {\n      this.subscribedModules.add(moduleName);\n    }\n  }\n\n  _resubscribeAllModules() {\n    for (const moduleName of this.subscribedModules) {\n      this.send({ type: 'subscribe', module: moduleName });\n    }\n  }\n\n  _handleOpen() {\n    this.isConnected = true;\n    this.reconnectAttempts = 0;\n\n    this.pingInterval = setInterval(() => {\n      if (this.socket?.readyState === WebSocket.OPEN) {\n        this.socket.send(JSON.stringify({ type: 'ping' }));\n      }\n    }, this.pingIntervalTime);\n\n    this._resubscribeAllModules(); // <--- ВАЖНО\n    this._notifyListeners('open', { isConnected: true });\n  }\n\n  _handleMessage(event) {\n    try {\n      const data = JSON.parse(event.data);\n      this._notifyListeners('message', data);\n      if (data.type) {\n        this._notifyListeners(data.type, data);\n      }\n    } catch (err) {\n      console.error('WebSocket message error:', err);\n    }\n  }\n\n  _handleError(error) {\n    console.error('WebSocket error:', error);\n    this._notifyListeners('error', { error });\n  }\n\n  _handleClose(event) {\n    this.isConnected = false;\n    if (this.pingInterval) {\n      clearInterval(this.pingInterval);\n      this.pingInterval = null;\n    }\n\n    this._notifyListeners('close', { code: event.code, reason: event.reason });\n\n    if (event.code !== 1000 && this.userId && this.reconnectAttempts < this.maxReconnectAttempts) {\n      this.reconnectAttempts++;\n      const delay = this.reconnectDelay * this.reconnectAttempts;\n      setTimeout(() => {\n        this.connect(this.userId).catch(err => {\n          console.error('Reconnection failed:', err);\n        });\n      }, delay);\n    }\n  }\n\n  _notifyListeners(eventType, data) {\n    Object.values(this.listeners[eventType] || {}).forEach(fn => {\n      try {\n        fn(data);\n      } catch (err) {\n        console.error(`Listener for ${eventType} failed:`, err);\n      }\n    });\n  }\n\n  isSocketConnected() {\n    return this.isConnected && this.socket?.readyState === WebSocket.OPEN;\n  }\n}\n\nconst globalWebSocket = new GlobalWebSocket();\nexport default globalWebSocket;\n",
                "name": "globals.websocket.ws.js",
                "size": 6096,
                "type": "source"
              },
              {
                "path": "../../src/modules/globals/views/classes/store.js",
                "relativePath": "modules/globals/views/classes/store.js",
                "extension": ".js",
                "content": "import { isReactive, reactive } from 'vue';\n\nclass Store {\n  constructor() {\n    if (!Store.instance) {\n      this.store = reactive({\n        modules: [], // Инициализация пустого объекта для модулей\n        addStore: this.addStore.bind(this), // Привязка контекста\n        getInitialState: this.getInitialState.bind(this), // Метод получения начального состояния\n        setInitialState: this.setInitialState.bind(this), // Метод установки начального состояния\n      });\n\n      Store.instance = this;\n    }\n    return Store.instance;\n  }\n\n  addStore(name, storage) {\n    this.store[name] = storage;\n    this.store.modules.push(name);\n  }\n\n  async getInitialState() {\n    const initialState = {};\n    for (const [moduleName, moduleStore] of Object.entries(this.store)) {\n      if (moduleName !== 'modules' && moduleName !== 'addStore' && moduleName !== 'getInitialState' && moduleName !== 'setInitialState') {\n        if (moduleStore.state) {\n          initialState[moduleName] = JSON.parse(JSON.stringify(moduleStore.state));\n        }\n      }\n    }\n    return initialState;\n  }\n\n  async setInitialState(initialState) {\n    for (const [moduleName, moduleState] of Object.entries(initialState)) {\n      if (this.store[moduleName] && this.store[moduleName].state) {\n        this.mergeReactive(this.store[moduleName].state, moduleState);\n      }\n    }\n  }\n\n  mergeReactive(target, source) {\n    for (const key in source) {\n      if (isReactive(target[key]) && typeof source[key] === 'object') {\n        this.mergeReactive(target[key], source[key]);\n      } else {\n        target[key] = source[key];\n      }\n    }\n  }\n}\n\nconst instance = new Store();\n\nObject.freeze(instance);\n\nexport function useStore() {\n  return instance.store;\n}\n\nexport default instance.store;\n",
                "name": "store.js",
                "size": 1763,
                "type": "source"
              }
            ]
          },
          "localization": {
            "_files": [
              {
                "path": "../../src/modules/globals/views/localization/get-browser-locale.js",
                "relativePath": "modules/globals/views/localization/get-browser-locale.js",
                "extension": ".js",
                "content": "export default function getBrowserLocale(options = {}) {\n  const defaultOptions = { countryCodeOnly: false };\n\n  const opt = { ...defaultOptions, ...options };\n\n  const navigatorLocale = navigator.languages !== undefined ? navigator.languages[0] : navigator.language;\n\n  if (!navigatorLocale) {\n    return undefined;\n  }\n\n  const trimmedLocale = opt.countryCodeOnly ? navigatorLocale.trim().split(/-|_/)[0] : navigatorLocale.trim();\n\n  return trimmedLocale;\n}\n",
                "name": "get-browser-locale.js",
                "size": 460,
                "type": "source"
              }
            ]
          },
          "middlewares": {
            "_files": [
              {
                "path": "../../src/modules/globals/views/middlewares/localization.js",
                "relativePath": "modules/globals/views/middlewares/localization.js",
                "extension": ".js",
                "content": "function setLocale(to, from, next) {\n  const locale = to.params.locale;\n\n  if (locale && this.$i18n.availableLocales.includes(locale)) {\n    console.log('true');\n    app.config.globalProperties.$i18n.locale = locale;\n    return next();\n  }\n\n  next();\n}\n\nexport { setLocale };\n",
                "name": "localization.js",
                "size": 276,
                "type": "source"
              }
            ]
          },
          "mixins": {
            "_files": [
              {
                "path": "../../src/modules/globals/views/mixins/mixins.js",
                "relativePath": "modules/globals/views/mixins/mixins.js",
                "extension": ".js",
                "content": "import * as globals from '@martyrs/src/modules/globals/views/store/globals.js';\n\n// useGlobalMixins.js\nexport function useGlobalMixins() {\n  const isAdmin = roles => {\n    if (roles) {\n      const isAdmin = roles.includes('ROLE_ADMIN') ? roles.includes('ROLE_ADMIN') : false;\n\n      if (isAdmin !== true) {\n        return false;\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const hasAccess = (organizationId, rightCategory = null, rightType = null, accesses, roles) => {\n    // Если пользователь админ, то сразу даем доступ\n    if (isAdmin(roles)) {\n      return true;\n    }\n\n    const accessArray = accesses;\n\n    // Проверяем существование записи для организации\n    const organizationAccess = accessArray.find(access => access.organization === organizationId);\n\n    // Если переданы только organizationId и accesses - проверяем только членство\n    if (rightCategory === null && rightType === null) {\n      return Boolean(organizationAccess); // если организация найдена - значит член\n    }\n\n    // Для проверки прав сначала проверяем существование организации\n    if (!organizationAccess) {\n      return false;\n    }\n\n    const categoryAccess = organizationAccess.rights[rightCategory];\n    if (!categoryAccess) {\n      return false;\n    }\n    return categoryAccess[rightType] === true;\n  };\n\n  const returnCurrency = () => {\n    const currency = globals.state.options.currency || '$';\n    return currency;\n  };\n\n   const formatPrice = number => {\n  try {\n    if (number == null) {\n      throw new TypeError('formatPrice: ожидается число, но получено null или undefined');\n    }\n\n    const currency = returnCurrency();\n    const absNumber = Math.abs(number)\n      .toFixed(2)\n      .replace('.', ',')\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\n    const sign = number < 0 ? '-' : '';\n    return `${sign} ${currency}${absNumber}`;\n  } catch (err) {\n    console.error(err);\n    return 'null';\n  }\n};\n\n\n  const formatDate = (d, options = {}) => {\n    var fixedDate = new Date(d);\n\n    // Определяем параметры локализации\n    const formatOptions = {\n      year: 'numeric',\n      month: 'long', // название месяца\n      day: '2-digit', // день с ведущим нулем\n      hour: '2-digit', // часы с ведущим нулем\n      minute: '2-digit', // минуты с ведущим нулем\n      hour12: false, // 24-часовой формат времени\n      ...options, // дополнительные настройки\n    };\n\n    // Язык, по умолчанию \"ru\" (русский)\n    const locale = options.language || 'ru';\n\n    // Используем Intl.DateTimeFormat для локализации\n    const dateFormatter = new Intl.DateTimeFormat(locale, formatOptions);\n\n    var format = {\n      dateOnly: options.dateOnly || false,\n      timeOnly: options.timeOnly || false,\n      dayMonth: options.dayMonth || false,\n      dayTime: options.dayTime || false,\n      monthYear: options.monthYear || false,\n      yearOnly: options.yearOnly || false,\n      custom: options.custom || '',\n      monthName: options.monthName || false, // Новый параметр для вывода названия месяца\n      language: options.language || 'ru', // Язык, по умолчанию русский\n    };\n\n    if (format.dateOnly) {\n      return dateFormatter.format(fixedDate).split(',')[0]; // Выводим только дату\n    } else if (format.timeOnly) {\n      return new Intl.DateTimeFormat(locale, {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: false,\n      }).format(fixedDate); // Выводим только время\n    } else if (format.dayMonth) {\n      return new Intl.DateTimeFormat(locale, { day: '2-digit', month: 'short' }).format(fixedDate); // день и месяц\n    } else if (format.dayTime) {\n      return new Intl.DateTimeFormat(locale, {\n        day: '2-digit',\n        month: 'short',\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: false,\n      }).format(fixedDate); // день и время\n    } else if (format.monthYear) {\n      return new Intl.DateTimeFormat(locale, { month: 'long', year: 'numeric' }).format(fixedDate); // месяц и год\n    } else if (format.yearOnly) {\n      return new Intl.DateTimeFormat(locale, { year: 'numeric' }).format(fixedDate); // только год\n    } else if (format.custom) {\n      // Для пользовательского формата с подстановкой\n      return format.custom\n        .replace('yyyy', fixedDate.getFullYear())\n        .replace('mm', ('0' + (fixedDate.getMonth() + 1)).slice(-2)) // добавление ведущего нуля\n        .replace('dd', ('0' + fixedDate.getDate()).slice(-2)) // добавление ведущего нуля\n        .replace('hh', ('0' + fixedDate.getHours()).slice(-2)) // добавление ведущего нуля\n        .replace('min', ('0' + fixedDate.getMinutes()).slice(-2)); // добавление ведущего нуля\n    }\n\n    // Вернуть полную дату в стандартном формате\n    return dateFormatter.format(fixedDate);\n  };\n\n  const formateText = (text, maxLength = 16) => {\n    // Return empty string if text is undefined or null\n    if (!text) return '';\n\n    // If text is shorter than or equal to maxLength, return it as is\n    if (text.length <= maxLength) {\n      return text;\n    }\n\n    // Otherwise truncate and add ellipsis\n    return text.substring(0, maxLength) + '...';\n  };\n\n  const normalizeUrlParam = param => {\n    if (!param) param = '';\n\n    return param\n      .toLowerCase()\n      .replace(/ /g, '-')\n      .replace(/[^a-z0-9-]/g, '');\n  };\n\n  const joinArrayToUrl = arr => {\n    return arr.join('/');\n  };\n\n  function generateFilters(selectedFilters) {\n    const filters = [];\n\n    // Process all selected filters\n    for (const [key, values] of Object.entries(selectedFilters)) {\n      if (values && values.length > 0) {\n        // Skip special filters (these are handled separately)\n        if (key !== 'prices' && key !== 'delivery' && key !== 'categories') {\n          filters.push({\n            parameter: key,\n            caseSensitive: false,\n            values: Array.isArray(values) ? values : [values],\n          });\n        }\n      }\n    }\n\n    return filters.length > 0 ? JSON.stringify(filters) : undefined;\n  }\n\n  const getMarketplaceLink = (categories, country, state, city) => {\n    let country_normalized = country ? normalizeUrlParam(country) : '';\n    let state_normalized = state ? normalizeUrlParam(state) : '';\n    let city_normalized = city ? normalizeUrlParam(city) : '';\n\n    let base = '/marketplace';\n    base += country_normalized ? `/${country_normalized}` : '';\n    base += country_normalized && state_normalized ? `/${state_normalized}` : '';\n    base += country_normalized && state_normalized && city_normalized ? `/${city_normalized}` : '';\n\n    if (categories && categories.length) {\n      base += `?categories=${categories.join(',')}`;\n    }\n\n    return base;\n  };\n\n  const getSpotsLink = (country, state, city) => {\n    let country_normalized = country ? normalizeUrlParam(country) : '';\n    let state_normalized = state ? normalizeUrlParam(state) : '';\n    let city_normalized = city ? normalizeUrlParam(city) : '';\n\n    let base = '/spots';\n    base += country_normalized ? `/${country_normalized}` : '';\n    base += country_normalized && state_normalized ? `/${state_normalized}` : '';\n    base += country_normalized && state_normalized && city_normalized ? `/${city_normalized}` : '';\n\n    return base;\n  };\n\n  const isClientSide = typeof window !== 'undefined' && typeof document !== 'undefined';\n\n  const getCssVar = name => {\n    if (!isClientSide) return ''; // SSR fallback\n    return getComputedStyle(document.documentElement).getPropertyValue(name).trim();\n  };\n\n  const matchMediaSafe = query => {\n    if (!isClientSide) return { matches: false };\n    return window.matchMedia(query);\n  };\n\n  const isMediaMax = varName => {\n    const maxWidth = getCssVar(varName);\n    return matchMediaSafe(`(max-width: ${maxWidth})`).matches;\n  };\n\n  const isMediaMin = varName => {\n    const minWidth = getCssVar(varName);\n    return matchMediaSafe(`(min-width: ${minWidth})`).matches;\n  };\n\n  const isFlipPhone = () => isMediaMax('--flip-phone-max');\n  const isPhone = () => isMediaMax('--phone-landscape-max');\n\n  const isTabletPortrait = () => {\n    const min = getCssVar('--tablet-portrait-min');\n    const max = getCssVar('--tablet-portrait-max');\n    return matchMediaSafe(`(min-width: ${min}) and (max-width: ${max})`).matches;\n  };\n\n  const isTabletLandscape = () => {\n    const min = getCssVar('--tablet-landscape-min');\n    const max = getCssVar('--tablet-landscape-max');\n    return matchMediaSafe(`(min-width: ${min}) and (max-width: ${max})`).matches;\n  };\n\n  const isTablet = () => isTabletPortrait() || isTabletLandscape();\n\n  const isDesktop = () => {\n    const min = getCssVar('--desktop-min');\n    const max = getCssVar('--desktop-max');\n    return matchMediaSafe(`(min-width: ${min}) and (max-width: ${max})`).matches;\n  };\n\n  const isXLDesktop = () => {\n    const min = getCssVar('--xl-desktop-min');\n    const max = getCssVar('--xl-desktop-max');\n    return matchMediaSafe(`(min-width: ${min}) and (max-width: ${max})`).matches;\n  };\n\n  const isXXLDesktop = () => isMediaMin('--xxl-desktop-min');\n\n  return {\n    isAdmin,\n    hasAccess,\n    returnCurrency,\n    formatPrice,\n    formatDate,\n    formateText,\n    normalizeUrlParam,\n    joinArrayToUrl,\n    getMarketplaceLink,\n    getSpotsLink,\n    generateFilters,\n    // Брейкпоинты\n    getCssVar,\n    isMediaMax,\n    isMediaMin,\n    isFlipPhone,\n    isPhone,\n    isTabletPortrait,\n    isTabletLandscape,\n    isTablet,\n    isDesktop,\n    isXLDesktop,\n    isXXLDesktop,\n  };\n}\n\n// Экспорт для глобальной регистрации\nexport const globalMixins = {\n  methods: useGlobalMixins(),\n};\n",
                "name": "mixins.js",
                "size": 9511,
                "type": "source"
              }
            ]
          },
          "plugins": {
            "_files": [
              {
                "path": "../../src/modules/globals/views/plugins/alert.plugin.js",
                "relativePath": "modules/globals/views/plugins/alert.plugin.js",
                "extension": ".js",
                "content": "// alertPlugin.js\nimport { h, reactive, render } from 'vue';\n  \nimport AlertDialog from '@martyrs/src/modules/globals/views/components/blocks/AlertDialog.vue';\n\n// Глобальное реактивное состояние для алерта\nconst alertState = reactive({\n  visible: false,\n  title: '',\n  message: '',\n  actions: [],\n});\n\nlet resolvePromise = null;\n\nfunction closeAlert(result = null) {\n  alertState.visible = false;\n\n  // Гарантируем, что промис всегда будет резолвлен\n  if (resolvePromise) {\n    resolvePromise(result);\n    resolvePromise = null;\n  }\n}\n\nfunction showAlert({ title = '', message = '', actions = null } = {}) {\n  return new Promise(resolve => {\n    resolvePromise = resolve;\n\n    if (!actions || !actions.length) {\n      actions = [{ label: 'OK', value: true }];\n    }\n\n    alertState.title = title;\n    alertState.message = message;\n    alertState.actions = actions;\n    alertState.visible = true;\n  });\n}\n\nfunction handleAction(action) {\n  if (action && typeof action.handler === 'function') {\n    action.handler();\n  }\n\n  const result = action.value === undefined ? action.label : action.value;\n\n  closeAlert(result);\n}\n\nexport default {\n  install(app) {\n    app.config.globalProperties.$alert = showAlert;\n\n    // Avoid running DOM operations during SSR\n    if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n      const container = document.createElement('div');\n      document.body.appendChild(container);\n      const vnode = h(AlertDialog, { alertState, handleAction, closeAlert });\n      render(vnode, container);\n    }\n  },\n};\n\nexport { closeAlert, handleAction, showAlert };\n",
                "name": "alert.plugin.js",
                "size": 1604,
                "type": "source"
              },
              {
                "path": "../../src/modules/globals/views/plugins/date-picker.plugin.js",
                "relativePath": "modules/globals/views/plugins/date-picker.plugin.js",
                "extension": ".js",
                "content": "// date-selector.plugin.js\nimport { reactive, markRaw, defineComponent, h, render } from 'vue'\nimport PopupDateSelector from '@martyrs/src/modules/globals/views/components/blocks/PopupDateSelector.vue'\nimport * as globals from '@martyrs/src/modules/globals/views/store/globals.js'\n\n// 1) Общее состояние и API\nconst state = reactive({\n  isOpen: false,\n  product: null,\n  options: { showFees: false, feesRate: 0.15, showVat: false, vatRate: 0 },\n  resolve: null,\n  reject: null\n})\n\nfunction getDefaultOptions() {\n  return {\n    showFees: globals.state.options?.orders?.showFees || false,\n    feesRate: globals.state.options?.orders?.feesRate || 0.15,\n    showVat: globals.state.options?.orders?.showVat || false,\n    vatRate: globals.state.options?.orders?.vatRate || 0\n  }\n}\n\nexport function showDateSelector(product, customOptions = {}) {\n  return new Promise((res, rej) => {\n    state.resolve = res\n    state.reject  = rej\n    state.product = markRaw(product)\n    state.options = { ...getDefaultOptions(), ...customOptions }\n    state.isOpen  = true\n  })\n}\n\nfunction confirmSelection(dates) {\n  state.isOpen = false\n  state.resolve?.(dates)\n  state.resolve = state.reject = null\n}\n\nfunction cancelSelection() {\n  state.isOpen = false\n  state.reject?.(new Error('Date selection cancelled'))\n  state.resolve = state.reject = null\n}\n\n// 2) Хост-компонент\nconst DateSelectorHost = defineComponent({\n  name: 'DateSelectorHost',\n  setup() {\n    return () =>\n      state.isOpen\n        ? h(PopupDateSelector, {\n            product: state.product,\n            isOpen: state.isOpen,\n            showFees: state.options.showFees,\n            feesRate: state.options.feesRate,\n            showVat: state.options.showVat,\n            vatRate: state.options.vatRate,\n            onConfirm: confirmSelection,\n            onCancel: cancelSelection,\n            'onClose-popup': cancelSelection\n          })\n        : null\n  }\n})\n\n// 3) Плагин\nexport default {\n  install(app) {\n    // 3.1) Глобальный метод\n    app.config.globalProperties.$dateSelector = showDateSelector\n\n    // 3.2) Контейнер в body\n    if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n      const container = document.createElement('div')\n      container.id = 'date-selector-host'\n      document.body.appendChild(container)\n\n      // 3.3) Рендерим VNode в контексте основного app\n      const vnode = h(DateSelectorHost)\n      vnode.appContext = app._context    // <-- ключевой момент\n      render(vnode, container)\n    }\n  }\n}\n",
                "name": "date-picker.plugin.js",
                "size": 2506,
                "type": "source"
              }
            ],
            "store-debugger": {
              "_files": [
                {
                  "path": "../../src/modules/globals/views/plugins/store-debugger/store-debugger.plugin.js",
                  "relativePath": "modules/globals/views/plugins/store-debugger/store-debugger.plugin.js",
                  "extension": ".js",
                  "content": "// src/plugins/storeDebuggerPlugin.js\nimport { createVNode, render } from 'vue'\nimport StoreDebugger from './StoreDebugger.vue'\n\nexport default {\n  install(app, store) {\n    if (!store || typeof store !== 'object') {\n      console.warn('[storeDebuggerPlugin] please pass a valid store instance')\n      return\n    }\n    if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n      // создаём контейнер и встраиваем его в тело документа\n      const container = document.createElement('div')\n      document.body.appendChild(container)\n\n      // создаём vnode компонента и привязываем к контексту вашего приложения\n      const vnode = createVNode(StoreDebugger, { store })\n      vnode.appContext = app._context\n\n      // монтируем\n      render(vnode, container)\n    }\n  }\n}\n",
                  "name": "store-debugger.plugin.js",
                  "size": 787,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/globals/views/plugins/store-debugger/StoreDebugger.vue",
                  "relativePath": "modules/globals/views/plugins/store-debugger/StoreDebugger.vue",
                  "extension": ".vue",
                  "content": "<template>\n  <div :class=\"[`store-debugger`, theme]\">\n    <button class=\"debug-btn\" @click=\"toggleOpen\" :aria-expanded=\"open\" :title=\"open ? 'Close debugger' : 'Open debugger'\">\n      🐞\n    </button>\n\n    <transition name=\"fade\">\n      <aside v-if=\"open\" class=\"debug-panel\">\n        <header class=\"panel-header\">\n          <div class=\"header-left\">\n            <strong>Store Debugger</strong>\n            <span class=\"timestamp\">{{ lastUpdated }}</span>\n          </div>\n          <div class=\"header-controls\">\n            <input v-model=\"filterText\" class=\"search-input\" placeholder=\"Filter modules...\" />\n            <button @click=\"toggleTheme\" :title=\"theme === 'light' ? 'Switch to dark' : 'Switch to light'\">\n              {{ theme === 'light' ? '🌙' : '☀️' }}\n            </button>\n            <button @click=\"refreshState\" title=\"Refresh state\">🔄</button>\n            <button @click=\"toggleOpen\" class=\"close-btn\" title=\"Close\">✕</button>\n          </div>\n        </header>\n\n        <div class=\"panel-body\">\n          <div class=\"module-controls\">\n            <button @click=\"expandAll\" :disabled=\"allExpanded\" title=\"Expand all\">➕ All</button>\n            <button @click=\"collapseAll\" :disabled=\"allCollapsed\" title=\"Collapse all\">➖ All</button>\n          </div>\n\n          <section\n            v-for=\"mod in filteredModules\"\n            :key=\"mod.name\"\n            class=\"module\">\n            <header class=\"module-header\" @click=\"mod.expanded = !mod.expanded\">\n              <span>{{ mod.name }}</span>\n              <span>{{ mod.expanded ? '▼' : '▶' }}</span>\n            </header>\n\n            <div v-show=\"mod.expanded\" class=\"module-content\">\n              <div class=\"module-actions\">\n                <button @click.stop=\"copyJSON(mod.name)\" title=\"Copy JSON\">📋</button>\n                <button @click.stop=\"downloadJSON(mod.name)\" title=\"Download JSON\">⬇️</button>\n              </div>\n              <pre class=\"json-view\">{{ prettyJSON(mod.state) }}</pre>\n            </div>\n          </section>\n\n          <div v-if=\"!filteredModules.length\" class=\"no-results\">No modules match filter.</div>\n        </div>\n      </aside>\n    </transition>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, computed, watch } from 'vue'\nimport { format } from 'date-fns'\n\nconst props = defineProps({\n  store: { type: Object, required: true }\n})\n\n// panel open/close\nconst open = ref(false)\nconst toggleOpen = () => { open.value = !open.value }\n\n// theme\nconst theme = ref('light')\nconst toggleTheme = () => { theme.value = theme.value === 'light' ? 'dark' : 'light' }\n\n// capture timestamp\nconst lastUpdated = ref('')\nfunction updateTimestamp() {\n  lastUpdated.value = format(new Date(), 'PPpp')\n}\n\n// modules state for UI\nconst modules = reactive([])\n\n// обновляем список модулей: добавляем новые, удаляем ушедшие, обновляем state, сохраняя expanded\nfunction updateModules() {\n  const prevMap = new Map(modules.map(m => [m.name, m]))\n  const next = []\n\n  // для каждого модуля в сторе\n  props.store.modules.forEach(name => {\n    const rawState = props.store[name]?.state ?? props.store[name]\n    const snapshot = JSON.parse(JSON.stringify(rawState))\n    const prev = prevMap.get(name)\n\n    next.push({\n      name,\n      state: snapshot,\n      expanded: prev ? prev.expanded : false\n    })\n  })\n\n  // заменить содержимое reactive-массива modules\n  modules.splice(0, modules.length, ...next)\n}\n\nfunction refreshState() {\n  updateTimestamp()\n  updateModules()\n}\n\n// initial load\nrefreshState()\n\n// filtered modules\nconst filterText = ref('')\nconst filteredModules = computed(() => {\n  const term = filterText.value.toLowerCase()\n  return modules.filter(m => m.name.toLowerCase().includes(term))\n})\n\n// expand/collapse\nconst allExpanded = computed(() => filteredModules.value.every(m => m.expanded))\nconst allCollapsed = computed(() => filteredModules.value.every(m => !m.expanded))\nconst expandAll   = () => filteredModules.value.forEach(m => m.expanded = true)\nconst collapseAll = () => filteredModules.value.forEach(m => m.expanded = false)\n\n// JSON helpers\nconst prettyJSON = obj => JSON.stringify(obj, null, 2)\nfunction copyJSON(name) {\n  const mod = modules.find(m => m.name === name)\n  navigator.clipboard.writeText(prettyJSON(mod.state))\n}\nfunction downloadJSON(name) {\n  const mod = modules.find(m => m.name === name)\n  const blob = new Blob([prettyJSON(mod.state)], { type: 'application/json' })\n  const url = URL.createObjectURL(blob)\n  const a = document.createElement('a')\n  a.href = url\n  a.download = `${name}-state.json`\n  a.click()\n  URL.revokeObjectURL(url)\n}\n\n// watch for store/state changes, обновляем лишь если панель открыта\nwatch(\n  () => props.store.modules.map(name => props.store[name]?.state),\n  () => { if (open.value) refreshState() },\n  { deep: true }\n)\n</script>\n\n\n<style scoped>\n.store-debugger.light { }\n.store-debugger.dark {\n  --bg: #2e2e2e;\n  --fg: #eee;\n  --panel-bg: #1e1e1e;\n  --border: #444;\n  --input-bg: #333;\n}\n\n.store-debugger {\n  position: fixed;\n  bottom: 1rem;\n  right: 1rem;\n  z-index: 10000;\n  font-family: sans-serif;\n  z-index: 200;\n}\n\n.debug-btn {\n  width: 3rem;\n  height: 3rem;\n  border: none;\n  border-radius: 50%;\n  background: var(--bg, #333);\n  color: var(--fg, #fff);\n  font-size: 1.2rem;\n  cursor: pointer;\n  box-shadow: 0 2px 6px rgba(0,0,0,0.3);\n}\n\n.debug-panel {\n  position: fixed;\n  bottom: 4rem;\n  right: 1rem;\n  width: calc(100% - 2rem);\n  max-width: 30rem;\n  min-height: 80vh;\n  max-height: 80vh;\n  background: var(--panel-bg, #fff);\n  color: var(--fg, #111);\n  border: 1px solid var(--border, #ccc);\n  border-radius: .5rem;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.2);\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n}\n.panel-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.5rem;\n  background: var(--panel-bg, #f5f5f5);\n  border-bottom: 1px solid var(--border, #ddd);\n}\n.header-left {\n  display: flex;\n  align-items: baseline;\n  gap: 1rem;\n}\n.timestamp {\n  font-size: 0.75rem;\n  color: var(--fg, #666);\n}\n.header-controls {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n.search-input {\n  padding: 0.25rem 0.5rem;\n  border: 1px solid var(--border, #ccc);\n  background: var(--input-bg, #fff);\n  color: var(--fg, #111);\n  border-radius: .25rem;\n}\n.close-btn {\n  background: transparent;\n  border: none;\n  font-size: 1rem;\n  cursor: pointer;\n}\n.panel-body {\n  flex: 1;\n  overflow-y: auto;\n  padding: 0.5rem;\n}\n.module-controls {\n  display: flex;\n  gap: 0.5rem;\n  margin-bottom: 0.5rem;\n}\n.module {\n  border: 1px solid var(--border, #ddd);\n  border-radius: .25rem;\n  margin-bottom: 0.5rem;\n  overflow: hidden;\n}\n.module-header {\n  background: var(--panel-bg, #eaeaea);\n  padding: 0.5rem;\n  display: flex;\n  justify-content: space-between;\n  cursor: pointer;\n}\n.module-content {\n  padding: 0.5rem;\n  background: var(--bg, #fafafa);\n}\n.module-actions {\n  display: flex;\n  gap: 0.5rem;\n  margin-bottom: 0.25rem;\n}\n.json-view {\n  font-size: 0.85rem;\n  line-height: 1.2;\n  max-height: 60rem;\n  overflow: auto;\n  background: var(--panel-bg, #f6f8fa);\n  padding: 0.5rem;\n  border-radius: .25rem;\n}\n.no-results {\n  text-align: center;\n  color: var(--fg, #666);\n  margin-top: 1rem;\n}\n.fade-enter-active, .fade-leave-active {\n  transition: opacity .2s;\n}\n.fade-enter-from, .fade-leave-to {\n  opacity: 0;\n}\n</style>\n",
                  "name": "StoreDebugger.vue",
                  "size": 7351,
                  "type": "source"
                }
              ]
            }
          },
          "router": {
            "_files": [
              {
                "path": "../../src/modules/globals/views/router/addRoutes.js",
                "relativePath": "modules/globals/views/router/addRoutes.js",
                "extension": ".js",
                "content": "import layoutEmpty from '@martyrs/src/modules/globals/views/components/layouts/Empty.vue';\nimport NotFound from '@martyrs/src/modules/globals/views/components/pages/404.vue'; // Предполагаемый компонент 404\n\nfunction addRoutes(router, config) {\n  const {\n    basePath, // Путь для корневого или промежуточного маршрута\n    parentName, // Имя существующего родительского маршрута (опционально)\n    routes, // Массив маршрутов\n    routeNamePrefix = '', // Префикс для имен маршрутов\n    filterConfig = {}, // Конфигурация фильтрации\n    meta = {}, // Мета-данные для маршрутов\n    component = layoutEmpty, // Компонент по умолчанию (layout)\n    emptyRootBehavior = {\n      // Поведение для пустого корневого маршрута\n      type: 'redirect', // 'redirect' или 'fallback'\n      fallbackComponent: NotFound, // Компонент для заглушки, если type: 'fallback'\n      redirectPath: '/404', // Пользовательский путь для редиректа (опционально)\n    },\n  } = config;\n\n  const { include = [], exclude = [], match } = filterConfig;\n\n  // Рекурсивная функция для обработки маршрутов и их вложенных children\n  function processRoutes(routesArray, prefix = routeNamePrefix) {\n    return routesArray\n      .filter(route => {\n        if (include.length > 0 && !include.includes(route.name)) return false;\n        if (exclude.length > 0 && exclude.includes(route.name)) return false;\n        if (match && !match(route)) return false;\n        return true;\n      })\n      .map(route => {\n        const processedRoute = {\n          ...route,\n          name: `${prefix}${route.name}`,\n          meta: { ...meta, ...route.meta },\n        };\n        if (route.children && Array.isArray(route.children)) {\n          processedRoute.children = processRoutes(route.children, prefix);\n        }\n        return processedRoute;\n      });\n  }\n\n  // Обрабатываем маршруты\n  const filteredRoutes = processRoutes(routes);\n  const hasRootRoute = filteredRoutes.some(route => route.path === '');\n\n  // Определяем дочерние маршруты с учётом поведения для пустого корня\n  let finalChildren = filteredRoutes;\n  if (!hasRootRoute && filteredRoutes.length > 0) {\n    if (emptyRootBehavior.type === 'redirect') {\n      // Используем пользовательский redirectPath или первый дочерний маршрут\n      const redirectTo = emptyRootBehavior.redirectPath || filteredRoutes[0].path;\n      finalChildren = [{ path: '', redirect: redirectTo, meta: { ...meta, isAutoRedirect: true } }, ...filteredRoutes];\n    } else if (emptyRootBehavior.type === 'fallback') {\n      finalChildren = [\n        {\n          path: '',\n          component: emptyRootBehavior.fallbackComponent || NotFound,\n          meta: { ...meta, isFallback: true },\n        },\n        ...filteredRoutes,\n      ];\n    }\n  }\n\n  if (parentName) {\n    const parentRoute = router.getRoutes().find(route => route.name === parentName);\n    if (!parentRoute) {\n      throw new Error(`Родительский маршрут \"${parentName}\" не найден`);\n    }\n\n    if (basePath) {\n      const intermediateRoute = {\n        path: basePath,\n        component,\n        name: `${routeNamePrefix}Intermediate`,\n        meta,\n        children: finalChildren,\n      };\n      router.addRoute(parentName, intermediateRoute);\n    } else {\n      filteredRoutes.forEach(route => {\n        router.addRoute(parentName, route);\n      });\n    }\n  } else if (basePath) {\n    const rootRouteName = `${routeNamePrefix}Root`;\n    const existingRoute = router.getRoutes().find(route => route.name === rootRouteName);\n    if (existingRoute) {\n      throw new Error(`Маршрут \"${rootRouteName}\" уже существует`);\n    }\n\n    const rootRoute = {\n      path: basePath,\n      component,\n      name: rootRouteName,\n      meta,\n      children: finalChildren,\n    };\n    router.addRoute(rootRoute);\n  } else {\n    throw new Error('Необходимо указать basePath');\n  }\n}\n\nexport default addRoutes;\n",
                "name": "addRoutes.js",
                "size": 3844,
                "type": "source"
              },
              {
                "path": "../../src/modules/globals/views/router/scrollBehavior.js",
                "relativePath": "modules/globals/views/router/scrollBehavior.js",
                "extension": ".js",
                "content": "export default async function scrollBehavior(to, from, savedPosition) {\n  if (to.hash) {\n    const findEl = async (hash, x) => {\n      return (\n        document.querySelector(hash) ||\n        new Promise((resolve, reject) => {\n          if (x > 50) {\n            return resolve();\n          }\n          setTimeout(() => {\n            resolve(findEl(hash, ++x || 1));\n          }, 1000);\n        })\n      );\n    };\n\n    if (to.hash) {\n      let el = await findEl(to.hash);\n      let screen = await findEl('#screen');\n\n      if ('scrollBehavior' in document.documentElement.style) {\n        return screen.scrollTo({ top: el.offsetTop, behavior: 'smooth' });\n      } else {\n        return screen.scrollTo(0, el.offsetTop);\n      }\n    }\n  } else if (to.matched.some(m => m.meta.scrollTo)) {\n    return { top: m.meta.scrollTo.top, left: m.meta.scrollTo.left };\n  } else if (savedPosition) {\n    return { savedPosition };\n  } else {\n    return { top: 0 };\n  }\n}\n",
                "name": "scrollBehavior.js",
                "size": 957,
                "type": "source"
              }
            ]
          },
          "store": {
            "_files": [
              {
                "path": "../../src/modules/globals/views/store/globals.js",
                "relativePath": "modules/globals/views/store/globals.js",
                "extension": ".js",
                "content": "// Vue modules\nimport { Preferences } from '@capacitor/preferences';\nimport { reactive } from 'vue';\n\n// import i18n from \"@/localization.js\";\n\n// State\nconst state = reactive({\n  loading: false,\n\n  isOpenLocationPopup: false,\n  isOpenSidebar: false,\n\n  position: null,\n  search: null,\n\n  theme: {\n    darkmode: false,\n  },\n\n  navigation_bar: {\n    name: null,\n    actions: null,\n  },\n\n  error: {\n    status: '',\n    headers: '',\n    data: '',\n    show: false,\n    name: '',\n    message: '',\n  },\n});\n\n// Actions\nconst actions = {\n  setLoading(status) {\n    state.loading = status;\n  },\n\n  // Black/White Theme\n  async setTheme(isDarkMode) {\n    let root = document.querySelector(':root');\n\n    state.theme.darkmode = isDarkMode;\n\n    await Preferences.set({\n      key: 'darkmode',\n      value: JSON.stringify(state.theme.darkmode),\n    });\n\n    if (isDarkMode) {\n      root.classList.add('dark-theme');\n    } else {\n      root.classList.remove('dark-theme');\n    }\n\n    const variableNames = ['--white', '--light', '--grey', '--dark', '--black'];\n\n    // Проверяем, сохранены ли оригинальные цвета\n    if (!state.theme.originalColors) {\n      // Сохраняем оригинальные цвета\n      state.theme.originalColors = {};\n      variableNames.forEach(variableName => {\n        const currentColor = getComputedStyle(document.documentElement).getPropertyValue(variableName).trim();\n        state.theme.originalColors[variableName] = currentColor;\n      });\n    }\n\n    if (isDarkMode) {\n      invertColors(variableNames, state.theme.originalColors);\n    } else {\n      // Восстанавливаем оригинальные цвета\n      variableNames.forEach(variableName => {\n        document.documentElement.style.setProperty(variableName, state.theme.originalColors[variableName]);\n      });\n    }\n  },\n\n  toggleTheme() {\n    this.setTheme(!state.theme.darkmode);\n  },\n\n  add(array, item) {\n    const existingItemIndex = array.findIndex(i => i._id === item._id);\n\n    if (existingItemIndex === -1) {\n      array.push(item);\n    } else {\n      array[existingItemIndex] = item;\n    }\n  },\n\n  update(array, item) {\n    const existingItemIndex = array.findIndex(i => i._id === item._id);\n    if (existingItemIndex === -1) {\n      // If the item doesn't exist, push it to the array\n      array.push(item);\n    } else {\n      // Update the item in the array without creating a new array\n      Object.assign(array[existingItemIndex], item);\n    }\n  },\n\n  delete(array, item) {\n    const existingItemIndex = array.findIndex(c => c._id === item._id);\n\n    if (existingItemIndex !== -1) {\n      array.splice(existingItemIndex, 1);\n    }\n  },\n\n  increment(array, item) {\n    console.log(array);\n    console.log(item);\n    const arrayItem = array.find(i => i._id === item._id);\n\n    if (arrayItem) {\n      arrayItem.quantity++;\n    }\n  },\n\n  decrement(array, item) {\n    const arrayItem = array.find(i => i._id === item._id);\n\n    const arrayItemIndex = array.indexOf(arrayItem);\n\n    if (arrayItemIndex > -1) {\n      arrayItem.quantity--;\n\n      if (arrayItem.quantity < 1) array.splice(arrayItemIndex, 1);\n    }\n  },\n\n  reset(array) {\n    array = [];\n  },\n};\n\nconst errorMessages = {\n  ru: {\n    errors: {\n      USER_ALREADY_REGISTERED: 'Такой пользователь уже зарегистрирован!',\n      USER_NOT_REGISTERED_YET: 'Такой пользователь еще не зарегистрирован!',\n      USER_PHONE_OR_PASSWORD_NOT_FOUND: 'Пользователь с таким телефоном или паролем не найден!',\n      INCORRECT_PASSWORD_ENTERED: 'Вы ввели неверный пароль!',\n      INVALID_INVITATION_CODE: 'Неверный код приглашения',\n      MISSING_REQUIRED_PARAMETERS: 'Отсутствуют необходимые параметры.',\n      ERROR_UPDATING_USER: 'Произошла ошибка при обновлении пользователя.',\n      PASSWORDS_DO_NOT_MATCH: 'Введенные вами пароли не совпадают. Исправьте ошибки и попробуйте еще раз.',\n      CODE_NOT_SENT: 'Что-то пошло не так и код не был отправлен. Попробуйте еще раз.',\n      INPUT_ERROR: 'Вставьте только четырехзначный код.',\n      WRONG_CODE: 'Вы ввели неверный код. Попробуйте еще раз.',\n      POST_URL_ALREADY_IN_USE: 'Ошибка! Публикация с этим URL уже используется!',\n      NAME_CANNOT_BE_EMPTY: 'Ошибка: Название не может быть пустым. Пожалуйста, введите название.',\n    },\n  },\n  en: {\n    errors: {\n      USER_ALREADY_REGISTERED: 'Such user is already registered!',\n      USER_NOT_REGISTERED_YET: 'This user has not been registered yet!',\n      USER_PHONE_OR_PASSWORD_NOT_FOUND: 'User with such phone or password not found!',\n      INCORRECT_PASSWORD_ENTERED: 'You entered an incorrect password!',\n      INVALID_INVITATION_CODE: 'Incorrect invitation code.',\n      MISSING_REQUIRED_PARAMETERS: 'Missing required parameters.',\n      ERROR_UPDATING_USER: 'Something wrong when updating user.',\n      PASSWORDS_DO_NOT_MATCH: 'The passwords you entered do not match. Please correct the errors and try again.',\n      CODE_NOT_SENT: 'Something went wrong and the code was not sent. Please try again.',\n      INPUT_ERROR: 'Please enter only a four-digit code.',\n      WRONG_CODE: 'You entered an incorrect code. Please try again.',\n      POST_URL_ALREADY_IN_USE: 'Failed! Blogpost with this URL is already in use!',\n      NAME_CANNOT_BE_EMPTY: 'Error: Name cannot be empty. Please enter a name.',\n    },\n  },\n};\n\n// i18n.global.mergeLocaleMessage('ru', errorMessages.ru);\n// i18n.global.mergeLocaleMessage('en', errorMessages.en);\n\n// Mutations\nfunction setError(error) {\n  state.error.show = true;\n  let errorData;\n\n  errorData = error;\n\n  if (error?.response?.data) errorData = error.response.data;\n\n  if (error && errorData.errorCode) {\n    // state.error.message = i18n.global.t(`errors.${errorData.errorCode}`);\n    state.error.message = errorData.errorCode;\n  } else {\n    state.error.message = errorData.message || 'Unknown error';\n  }\n\n  state.error.show = true;\n\n  setTimeout(() => (state.error.show = false), 3000);\n}\n\nfunction invertColors(variableNames, originalColors) {\n  variableNames.forEach(variableName => {\n    const baseColor = originalColors[variableName];\n    const colorArray = baseColor.split(',').map(Number);\n\n    let invertedColor;\n\n    if (variableName === '--white') {\n      invertedColor = colorArray.map(value => 255 - value / 1.075);\n    } else if (variableName === '--black') {\n      invertedColor = colorArray.map(value => 255 - value);\n    } else if (variableName === '--grey') {\n      invertedColor = colorArray.map(value => 255 - value * 2);\n    } else {\n      invertedColor = colorArray.map(value => 255 - value / 1.075);\n    }\n    // Устанавливаем новые значения переменных CSS\n    document.documentElement.style.setProperty(variableName, state.theme.darkmode ? invertedColor.join(', ') : baseColor);\n  });\n}\n\nexport { actions, setError, state };\n",
                "name": "globals.js",
                "size": 6697,
                "type": "source"
              }
            ]
          },
          "utils": {
            "_files": [
              {
                "path": "../../src/modules/globals/views/utils/axios-instance.js",
                "relativePath": "modules/globals/views/utils/axios-instance.js",
                "extension": ".js",
                "content": "// axiosInstance.js\nimport axios from 'axios';\n// Создаем один экземпляр axios\nconst $axios = axios.create({\n  baseURL: process.env.API_URL,\n  withCredentials: true,\n});\n\n// Функция для установки токена в заголовки\nexport function setAuthToken(token) {\n  if (token) {\n    $axios.defaults.headers.common['x-access-token'] = token; // Устанавливаем токен в заголовок\n  } else {\n    delete $axios.defaults.headers.common['x-access-token']; // Удаляем токен из заголовка\n  }\n}\n\nexport default $axios;\n",
                "name": "axios-instance.js",
                "size": 497,
                "type": "source"
              },
              {
                "path": "../../src/modules/globals/views/utils/vue-app-renderer.js",
                "relativePath": "modules/globals/views/utils/vue-app-renderer.js",
                "extension": ".js",
                "content": "import { setAuthToken } from '@martyrs/src/modules/globals/views/utils/axios-instance.js';\nimport { renderSSRHead } from '@unhead/ssr';\nimport { renderToString } from '@vue/server-renderer';\n\nexport function renderAndMountApp({ createApp }) {\n  const start = async () => {\n    const { app, router, store } = createApp();\n\n    let initialState;\n\n    try {\n      const initialStateElement = document.querySelector('[data-state]');\n\n      if (initialStateElement && initialStateElement.innerHTML.trim() !== '') {\n        initialState = JSON.parse(initialStateElement.innerHTML.trim());\n      }\n    } catch (error) {\n      console.error('Failed to parse user state', error);\n    }\n\n    if (initialState) {\n      // Применяем начальное состояние ко всем модулям\n      store.setInitialState(initialState);\n    }\n\n    console.log('auth', initialState.auth);\n    if (initialState?.auth?.access?.token) {\n      setAuthToken(initialState.auth.access.token);\n    } else {\n      store.auth.actions.resetState();\n      // await store.auth.removeCookie('user');\n      await store.auth.actions.logout();\n    }\n\n    // app.config.globalProperties.$i18n.locale = router.currentRoute.value.params.locale\n    // app.config.globalProperties.$i18n.locale = router.currentRoute.value.params.locale\n    // If user browser locae supported then change locale\n    // if (i18n.global.availableLocales.includes(browserLocale)) {\n    //   app.config.globalProperties.$i18n.locale = browserLocale;\n    // }\n\n    await router.isReady();\n    app.mount('#app');\n  };\n  start();\n}\n\nexport async function render({ url, cookies, createApp }) {\n  const { app, router, store, meta } = createApp();\n\n  await router.push(url);\n  await router.isReady();\n\n  // If user's language is supported, change the locale\n  // if (language === 'en' || language === 'ru') {\n  //   app.config.globalProperties.$i18n.locale = language\n  // }\n\n  // console.log(router.currentRoute.value.params.locale)\n  // app.config.globalProperties.$i18n.locale = router.currentRoute.value.params.locale\n\n  const sharedContext = {};\n\n  if (router.currentRoute.value.name?.toLowerCase() === 'notfound') {\n    sharedContext.notFound = true;\n  }\n\n  let user = null;\n\n  if (cookies.user) {\n    user = JSON.parse(cookies.user);\n  }\n\n  if (user) {\n    await store.auth.actions.initialize(user);\n  } else {\n    store.auth.actions.resetState();\n  }\n\n  const html = await renderToString(app, sharedContext);\n  const payload = await renderSSRHead(meta, {});\n  const initialState = await store.getInitialState();\n\n  return {\n    html,\n    meta: payload,\n    state: initialState,\n    statusCode: router.currentRoute?.value?.name?.toLowerCase() === 'notfound' ? 404 : 200,\n  };\n}\n",
                "name": "vue-app-renderer.js",
                "size": 2697,
                "type": "source"
              }
            ]
          },
          "components": {
            "blocks": {
              "_files": [
                {
                  "path": "../../src/modules/globals/views/components/blocks/AlertDialog.vue",
                  "relativePath": "modules/globals/views/components/blocks/AlertDialog.vue",
                  "extension": ".vue",
                  "content": "<template>\n  <Popup \n    :title=\"alertState.title\" \n    :isPopupOpen=\"alertState.visible\"\n    @close-popup=\"closeAlert\" \n    class=\"bg-white w-min-20r w-max-30r w-max-100 radius-medium pd-medium\"\n  >\n    <p class=\"mn-b-medium\">{{ alertState.message }}</p>\n\n    <footer class=\"flex-nowrap flex-justify-end flex gap-thin\">\n      <button\n        v-for=\"(action, index) in alertState.actions\"\n        :key=\"index\"\n        @click=\"handleAction(action)\"\n        class=\"button pd-small radius-medium bg-main\"\n      >\n        {{ action.label }}\n      </button>\n    </footer>\n\n  </Popup>\n</template>\n\n<script setup>\nimport { toRefs } from 'vue'\nimport Popup from \"@martyrs/src/components/Popup/Popup.vue\";\n\nconst props = defineProps({\n  alertState: { type: Object, required: true },\n  handleAction: { type: Function, required: true },\n  closeAlert: { type: Function, required: true }\n})\n\nconst { alertState } = toRefs(props)\n</script>",
                  "name": "AlertDialog.vue",
                  "size": 925,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/globals/views/components/blocks/BlockFilter.vue",
                  "relativePath": "modules/globals/views/components/blocks/BlockFilter.vue",
                  "extension": ".vue",
                  "content": "<script setup>\nimport { ref } from 'vue';\n\nimport Checkbox from \"@martyrs/src/components/Checkbox/Checkbox.vue\";\nimport Spoiler from \"@martyrs/src/components/Spoiler/Spoiler.vue\"\n\nimport IconChevronBottom from '@martyrs/src/modules/icons/navigation/IconChevronBottom.vue'\n\nconst props = defineProps({\n  title: {\n    type: String,\n    default: 'Sorting Options'\n  },\n  options: {\n    type: Array\n  }\n});\n\nconst emits = defineEmits([\n  'click_filter'\n])\n\nconst filter = defineModel('filter')\n</script>\n\n<template>\n  <div class=\"w-100 o-scroll\">\n    <Spoiler \n      v-for=\"filterOption in options\"\n      class=\"o-hidden\"\n      :status=\"true\"\n    >\n      <template  #header=\"{ isOpen }\">\n        <div class=\"cursor-pointer w-100 flex-v-center flex-nowrap flex\">\n          <h4 class=\"w-100\" >{{ filterOption.title }}</h4>\n          <div class=\"h-2r w-2r flex-child-auto aspect-1x1 flex-center flex bg-light radius-extra\">\n             <IconChevronBottom :class=\"{ 'rotate-180 mn-t-micro-negative': isOpen }\" fill=\"rgb(var(--black))\" class=\"i-regular\"/>\n          </div>\n         \n        </div>\n      </template>\n\n      <template #content>\n        <Checkbox \n          v-for=\"(checkbox, index) in  filterOption.options\"\n          :key=\"index\"\n          :label=\"checkbox.label\"\n          :value=\"checkbox.value\"\n          class=\"w-100 mn-t-small mn-b-small br-1px br-solid br-light  radius-small pd-small\"\n          :radio=\"filter.selected[filterOption.value]\"\n          @update:radio=\"event =>  { filter.selected[filterOption.value] = event; emits('click_filter', filterOption.value) } \"\n        />\n      </template>\n\n      \n    </Spoiler>\n\n    <button @click=\"() => filter.selected = {}\"  class=\"bg-main w-100 button\">Reset Filters</button>\n  </div>\n</template>\n",
                  "name": "BlockFilter.vue",
                  "size": 1758,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/globals/views/components/blocks/BlockMultiselect.vue",
                  "relativePath": "modules/globals/views/components/blocks/BlockMultiselect.vue",
                  "extension": ".vue",
                  "content": "<template>\n  <div class=\"pos-relative\">\n    <!-- Single selected item -->\n    <div\n      v-if=\"single && modelValue\"\n      class=\"mn-b-thin\"\n    >\n      <div\n        @click=\"clearSelection\"\n        class=\"cursor-pointer\"\n        :class=\"classSelected\"\n      >\n        <slot \n          name=\"selected\" \n          :item=\"modelValue\"\n          :clear=\"clearSelection\"\n        >\n          {{ getItemLabel(modelValue) }}\n        </slot>\n      </div>\n    </div>\n\n    <!-- Multiple selected items -->\n    <div \n      v-if=\"multiple && modelValue?.length > 0\"\n      class=\"flex flex-wrap gap-thin mn-b-thin\"\n    >\n      <div\n        v-for=\"(item, index) in modelValue\"\n        :key=\"getItemKey(item)\"\n        @click=\"() => removeItem(index)\"\n        class=\"cursor-pointer\"\n        :class=\"classSelected\"\n      >\n        <slot \n          name=\"selected\" \n          :item=\"item\"\n          :clear=\"() => removeItem(index)\"\n        >\n          {{ getItemLabel(item) }}\n        </slot>\n      </div>\n    </div>\n\n    <!-- Search always visible -->\n    <BlockSearch \n      v-click-outside=\"closeDropdown\" \n      v-model=\"searchQuery\"\n      :placeholder=\"placeholder\"\n      :class=\"classSearch\"\n      @focus=\"showDropdown = true\"\n    />\n    \n    <!-- Dropdown -->\n    <div \n      v-if=\"showDropdown && (searchQuery || showOnFocus)\" \n      class=\"mn-t-thin pos-absolute w-100 pos-t-100 pos-l-0 z-index-3\"\n      :class=\"classDropdown\"\n    >\n      <Feed\n        :states=\"states\"\n        :store=\"store\"\n        :skeleton=\"skeleton\"\n        :options=\"{\n          ...options,\n          search: searchQuery\n        }\"\n        :showLoadMore=\"false\"\n        v-slot=\"{ items }\"\n        :class=\"classFeed\"\n      >\n        <!-- Показываем все результаты если есть поиск, иначе фильтруем -->\n        <template v-if=\"filteredItems(items).length > 0\">\n          <div\n            v-for=\"item in filteredItems(items)\"\n            :key=\"getItemKey(item)\"\n            @click=\"selectItem(item)\"\n            class=\"cursor-pointer\"\n            :class=\"[\n              classItem,\n              isItemSelected(item) ? 'opacity-50' : ''\n            ]\"\n          >\n            <slot \n              name=\"item\" \n              :item=\"item\"\n              :selected=\"isItemSelected(item)\"\n            >\n              <Card\n                :photo=\"getCardField(item, 'photo')\"\n                :title=\"getCardField(item, 'title')\"\n                :subtitle=\"getCardField(item, 'subtitle')\"\n              />\n            </slot>\n          </div>\n        </template>\n        <!-- Если все результаты отфильтрованы, показываем сообщение -->\n        <div v-else-if=\"items?.length > 0\" class=\"pd-thin text-center text-muted\">\n          Все найденные элементы уже выбраны\n        </div>\n      </Feed>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, watch } from 'vue'\nimport Feed from '@martyrs/src/components/Feed/Feed.vue'\nimport BlockSearch from '@martyrs/src/modules/globals/views/components/blocks/BlockSearch.vue'\nimport Card from '@martyrs/src/modules/globals/views/components/blocks/Card.vue'\nimport clickOutside from '@martyrs/src/components/FieldPhone/click-outside.js'\n\n// Directives\nconst vClickOutside = clickOutside\n\n// Props\nconst props = defineProps({\n  // Model value - single item or array of items\n  modelValue: {\n    type: [Object, Array],\n    default: null\n  },\n  // Mode\n  multiple: {\n    type: Boolean,\n    default: false\n  },\n  // Search\n  placeholder: {\n    type: String,\n    default: 'Search...'\n  },\n  showOnFocus: {\n    type: Boolean,\n    default: false\n  },\n  // Allow selecting already selected items in search\n  allowReselect: {\n    type: Boolean,\n    default: false\n  },\n  // Feed configuration\n  store: {\n    type: Object,\n    required: true\n  },\n  options: {\n    type: Object,\n    default: () => ({})\n  },\n  states: {\n    type: Object,\n    default: () => ({\n      empty: {\n        title: 'No items found',\n        description: 'Try different search terms'\n      }\n    })\n  },\n  skeleton: {\n    type: Object,\n    default: () => ({\n      hide: false,\n      horizontal: true,\n      structure: [\n        { block: 'text', size: 'large' }\n      ]\n    })\n  },\n  // Item configuration\n  key: {\n    type: [String, Function],\n    default: '_id'\n  },\n  label: {\n    type: [String, Function],\n    default: 'name'\n  },\n  // Card fields mapping\n  labels: {\n    type: Object,\n    default: () => ({\n      photo: 'profile.photo',\n      title: 'profile.name',\n      subtitle: 'profile.description'\n    })\n  },\n  // Styling\n  classSearch: {\n    type: String,\n    default: 'bg-white'\n  },\n  classSelected: {\n    type: String,\n    default: 'bg-white pd-thin radius-medium'\n  },\n  classDropdown: {\n    type: String,\n    default: 'bg-light pd-small radius-small'\n  },\n  classItem: {\n    type: String,\n    default: 'bg-white pd-thin radius-medium mn-b-thin'\n  },\n  classFeed: {\n    type: String,\n    default: 'h-max-20r o-scroll'\n  }\n})\n\n// Emits\nconst emit = defineEmits(['update:modelValue', 'select', 'remove', 'clear'])\n\n// State\nconst searchQuery = ref('')\nconst showDropdown = ref(false)\n\n// Computed\nconst single = computed(() => !props.multiple)\n\n// Methods\nconst getItemKey = (item) => {\n  if (!item) return null\n  if (typeof props.key === 'function') {\n    return props.key(item)\n  }\n  return item[props.key]\n}\n\nconst getItemLabel = (item) => {\n  if (!item) return ''\n  if (typeof props.label === 'function') {\n    return props.label(item)\n  }\n  return item[props.label] || ''\n}\n\n// Get nested field value from item using dot notation\nconst getCardField = (item, fieldType) => {\n  const path = props.labels[fieldType]\n  if (!path) return null\n  \n  return path.split('.').reduce((obj, key) => obj?.[key], item)\n}\n\n// Check if item is already selected\nconst isItemSelected = (item) => {\n  if (!item) return false\n  \n  const itemKey = getItemKey(item)\n  \n  if (props.multiple && props.modelValue?.length) {\n    return props.modelValue.some(selectedItem => getItemKey(selectedItem) === itemKey)\n  }\n  \n  if (single.value && props.modelValue) {\n    return getItemKey(props.modelValue) === itemKey\n  }\n  \n  return false\n}\n\n// Filter items - более гибкая логика\nconst filteredItems = (items) => {\n  if (!items) return []\n  \n  // Если есть активный поиск и allowReselect = true, показываем все результаты\n  if (searchQuery.value && props.allowReselect) {\n    return items\n  }\n  \n  // Если есть активный поиск, показываем все результаты, но помечаем выбранные\n  if (searchQuery.value) {\n    return items\n  }\n  \n  // Если нет поиска, исключаем уже выбранные элементы\n  return items.filter(item => !isItemSelected(item))\n}\n\nconst selectItem = (item) => {\n  // Проверяем, не выбран ли уже этот элемент\n  if (isItemSelected(item) && !props.allowReselect) {\n    return\n  }\n  \n  if (props.multiple) {\n    // Если элемент уже выбран и allowReselect = false, не добавляем его снова\n    if (isItemSelected(item)) {\n      return\n    }\n    const newValue = props.modelValue ? [...props.modelValue, item] : [item]\n    emit('update:modelValue', newValue)\n  } else {\n    emit('update:modelValue', item)\n    closeDropdown()\n  }\n  emit('select', item)\n  searchQuery.value = ''\n}\n\nconst removeItem = (index) => {\n  if (!props.multiple || !props.modelValue) return\n  \n  const newValue = [...props.modelValue]\n  const removed = newValue.splice(index, 1)[0]\n  emit('update:modelValue', newValue)\n  emit('remove', removed)\n}\n\nconst clearSelection = () => {\n  emit('update:modelValue', props.multiple ? [] : null)\n  emit('clear')\n  searchQuery.value = ''\n}\n\nconst closeDropdown = () => {\n  showDropdown.value = false\n}\n\n// Reset dropdown when search changes\nwatch(searchQuery, (val) => {\n  showDropdown.value = true\n})\n</script>\n\n<style scoped>\n.opacity-50 {\n  opacity: 0.5;\n}\n.text-center {\n  text-align: center;\n}\n.text-muted {\n  color: #6c757d;\n}\n</style>",
                  "name": "BlockMultiselect.vue",
                  "size": 7815,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/globals/views/components/blocks/BlockSearch.vue",
                  "relativePath": "modules/globals/views/components/blocks/BlockSearch.vue",
                  "extension": ".vue",
                  "content": "<script setup>\nimport { ref, watch } from 'vue';\n\nimport IconSearch from '@martyrs/src/modules/icons/navigation/IconSearch.vue';\nimport Field from '@martyrs/src/components/Field/Field.vue';\n\nconst emits = defineEmits(['search', 'update:modelValue']);\nconst props = defineProps({\n  modelValue: {\n    type: String,\n    default: ''\n  },\n  placeholder: {\n    type: String,\n    default: 'Enter shop or product name'\n  },\n  autofocus: {\n    type: Boolean,\n    default: false\n  },\n  button: {\n    type: String,\n    default: 'Search'\n  },\n});\n\nconst stateSearch = ref(props.modelValue);\n\n// Обновлять поле при изменении modelValue извне\nwatch(() => props.modelValue, (newVal) => {\n  stateSearch.value = newVal;\n});\n\n// Когда пользователь вводит новое значение\nconst updateSearch = (search) => {\n  stateSearch.value = search;\n  emits('update:modelValue', search); // уведомим родителя\n  emits('search', search);            // при необходимости\n};\n</script>\n\n\n<template>\n  <div class=\"flex-v-center flex-nowrap flex pd-small bg-light w-100 radius-medium\">\n    <IconSearch class=\"i-medium t-transp mn-r-thin\" />\n\n    <Field\n      v-model:field=\"stateSearch\"\n      :placeholder=\"placeholder\"\n      :autofocus=\"autofocus\"\n      class=\"w-100\"\n      @update:field=\"updateSearch\"\n    />\n  </div>\n</template>\n",
                  "name": "BlockSearch.vue",
                  "size": 1292,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/globals/views/components/blocks/BlockSorting.vue",
                  "relativePath": "modules/globals/views/components/blocks/BlockSorting.vue",
                  "extension": ".vue",
                  "content": "<script setup>\nimport { ref } from 'vue';\n\nimport Radio from \"@martyrs/src/components/Radio/Radio.vue\";\n\nimport ButtonSort  from '@martyrs/src/modules/globals/views/components/elements/ButtonSort.vue'\nimport IconSort from '@martyrs/src/modules/icons/navigation/IconSort.vue'\n\nconst props = defineProps({\n  title: {\n    type: String,\n    default: 'Sorting Options'\n  },\n  options: {\n    type: Array,\n    default: [{\n      label: 'Date',\n      value: 'createdAt'\n    },{\n      label: 'Popularity',\n      value: 'popularity'\n    },{\n      label: 'Creator',\n      value: 'creator'\n    }]\n  }\n});\n\nconst param = defineModel('param')\nconst order = defineModel('order')\n</script>\n\n<template>\n  <div class=\"w-100 o-hidden\">\n    <h4 class=\"mn-b-thin\">{{title}}</h4>\n\n    <Radio \n      v-for=\"option in options\"\n      v-model:radio=\"param\"\n      :label=\"option.label\"\n      :value=\"option.value\"\n      class=\"w-100 mn-b-thin\"\n    />\n\n    <div class=\"w-100 flex-nowrap flex gap-micro\">\n      <button \n        @click.stop=\"() => order = 'asc'\"\n        :class=\"{\n          'bg-white t-black': order === 'asc'\n        }\"\n        class=\"radius-semi flex-center w-100 uppercase p-small flex-nowrap flex gap-thin pd-thin br-solid br-1px br-grey-transp-25 w-100\"\n      >\n        <IconSort\n          :order=\"'asc'\"\n          :fill=\"order === 'asc' ? 'rgb(var(--black))' : 'rgb(var(--white))'\"\n          class=\"i-small\"\n        />\n        Ascending\n      </button>\n\n      <button \n        @click.stop=\"() => order = 'desc'\"\n        :class=\"{\n          'bg-white t-black': order === 'desc'\n        }\"\n        class=\"radius-semi flex-center w-100 uppercase p-small flex-nowrap flex gap-thin pd-thin br-solid br-1px br-grey-transp-25 w-100\"\n      >\n        <IconSort\n          :order=\"'desc'\"\n          :fill=\"order === 'desc' ? 'rgb(var(--black))' : 'rgb(var(--white))'\"\n          class=\"i-small\"\n        />\n        Descending\n      </button>\n    </div>\n  </div>\n</template>\n",
                  "name": "BlockSorting.vue",
                  "size": 1953,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/globals/views/components/blocks/Card.vue",
                  "relativePath": "modules/globals/views/components/blocks/Card.vue",
                  "extension": ".vue",
                  "content": "<template>\n  <component :is=\"tag || 'div'\" @click=\"handleClick\">\n    <!-- Skeleton режим -->\n    <Skeleton\n      v-if=\"loading\"\n      :structure=\"skeletonStructure\"\n      :horizontal=\"true\"\n      :loading=\"true\"\n    />\n    \n    <!-- Обычный режим -->\n    <template v-else>\n      <!-- Изображение -->\n      <slot name=\"image\">\n        <img\n          v-if=\"photo\"\n          :src=\"(FILE_SERVER_URL || '') + photo\"\n          :alt=\"title\"\n          loading=\"lazy\"\n        />\n        <component\n          v-else-if=\"placeholder\"\n          :is=\"placeholder\"\n        />\n        <PlaceholderUserpic v-else />\n      </slot>\n\n      <!-- Контент -->\n      <div>\n        <slot name=\"header\">\n          <p v-if=\"title\">{{ title }}</p>\n          <span v-if=\"subtitle\">{{ subtitle }}</span>\n        </slot>\n        \n        <slot />\n        \n        <slot name=\"footer\" />\n      </div>\n\n      <!-- Действия -->\n      <slot name=\"actions\">\n        <button\n          v-if=\"action\"\n          @click.stop=\"action.method\"\n        >\n          <component \n            v-if=\"action.label?.is\" \n            :is=\"action.label.is\" \n            v-bind=\"action.label.props\"\n          />\n          <template v-else>\n            {{ action.label }}\n          </template>\n        </button>\n      </slot>\n    </template>\n  </component>\n</template>\n\n<script setup>\nimport { useSlots } from 'vue'\nimport Skeleton from '@martyrs/src/components/Skeleton/Skeleton.vue'\nimport PlaceholderUserpic from '@martyrs/src/modules/icons/placeholders/PlaceholderUserpic.vue'\n\nconst props = defineProps({\n  // Данные\n  photo: String,\n  title: String,\n  subtitle: String,\n  action: Object,\n  \n  // Функционал\n  tag: String,\n  placeholder: [String, Object],\n  loading: Boolean,\n  skeletonStructure: Array\n})\n\nconst emit = defineEmits(['click'])\nconst slots = useSlots()\n\nconst handleClick = () => {\n  emit('click')\n}\n</script>",
                  "name": "Card.vue",
                  "size": 1874,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/globals/views/components/blocks/CardFooter.vue",
                  "relativePath": "modules/globals/views/components/blocks/CardFooter.vue",
                  "extension": ".vue",
                  "content": "<template>\n  <footer class=\"t-semi br-top-dark flex-nowrap flex-nojustify flex\">\n    👁️ {{ views }}\n    <span class=\"mn-r-small mn-l-small d-block\">·</span>\n    <div class=\"cursor-pointer\">\n      <div class=\"cursor-pointer\" @click=\"addReaction('like')\" v-if=\"!isReacted\">\n        👍 {{ reactionsCount }}\n      </div>\n      <div class=\"cursor-pointer\" @click=\"deleteReaction('like')\" v-if=\"isReacted\">\n        👍 {{ reactionsCount }}\n      </div>\n    </div>\n    <span class=\"mn-r-small mn-l-small d-block\">·</span>\n    💬 {{ commentsCount }}\n  </footer>\n</template>\n\n<script setup=\"props\">\n  import { computed, ref } from 'vue'\n\n  import * as reactions from '@martyrs/src/modules/community/store/reactions.js';\n\n  const props = defineProps(['entity', 'entityType', 'user']);\n \n  const reactionsCount = ref(props.entity.numberOfReactions);\n  const isReacted = ref(props.entity.isReacted);\n  const reactionId = ref(props.entity.reactionId);\n\n   async function addReaction(type) {\n    if (!props.user) {\n      alert('Please login to add a reaction');\n      return;\n    }\n\n    try {\n      const reaction = {\n        target: props.entity._id,\n        type: props.entityType,\n        user: props.user,\n        class: 'like'\n      };\n      const res = await reactions.actions.create(reaction);\n\n      if (res.reaction.class === 'like') {\n        reactionsCount.value += 1;\n        isReacted.value = true;\n        reactionId.value = res.reaction._id;\n      }\n    } catch (err) {\n      console.error(err);\n      alert('Error adding reaction. Please try again later.');\n    }\n  }\n\n  async function deleteReaction(type) {\n    if (!props.user) {\n      alert('Please login to add a reaction');\n      return;\n    }\n\n    try {\n      const reaction = { _id: reactionId.value };\n\n      await reactions.actions.delete(reaction);\n\n      reactionsCount.value -= 1;\n      isReacted.value = false;\n      reactionId.value = null;\n    } catch (err) {\n      alert('Error adding reaction. Please try again later.');\n    }\n  }\n</script>\n\n<style lang=\"scss\">\n</style>\n",
                  "name": "CardFooter.vue",
                  "size": 2040,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/globals/views/components/blocks/CardHeader.vue",
                  "relativePath": "modules/globals/views/components/blocks/CardHeader.vue",
                  "extension": ".vue",
                  "content": "<template>\n\t<header \n\t\tv-if=\"owner\" \n\t\tclass=\"pd-b-zero \"\n\t>\n\t\t<div \n\t\t\tclass=\"w-100 flex-v-center flex-nojustify flex\"\n\t\t>\n\n\t\t\t<div\n\t\t\t\tclass=\"w-100 p-medium t-nowrap flex-nowrap flex-v-center flex\"\n\t\t\t>\n\t\t\t\t<img loading=\"lazy\" \n\t\t\t\t\tv-if=\"owner.target?.profile?.photo?.length > 0 && type !== 'short'\" \n\t\t\t\t\t:src=\"(FILE_SERVER_URL || '') + owner.target.profile.photo\" \n\t\t\t\t\tclass=\"radius-medium flex-child-default object-fit-cover mn-r-thin i-thin\" \n\n\t\t\t\t\t@click.stop=\"$router.push({\n\t\t\t\t\t\tname: owner.type === 'user' ? 'User Profile' : 'Organization', \n\t\t\t\t\t\tparams: {\n\t\t\t\t\t\t\t_id: owner.target._id\n\t\t\t\t\t\t}\n\t\t\t\t\t})\" \n\t\t\t\t/>\n\t\t\t\t<component\n\t\t\t\t\tv-if=\"!owner.target?.profile?.photo && type !== 'short'\"\n\t\t\t\t\t:is=\"owner.type === 'user' ? PlaceholderUserpic : PlaceholderOrganizationPic\"\n\t\t\t\t\tclass=\"radius-medium flex-child-default cursor-pointer mn-r-thin i-thin\"\n\n\t\t\t\t\t@click.stop=\"$router.push({\n\t\t\t\t\t\tname: owner.type === 'user' ? 'User Profile' : 'Organization', \n\t\t\t\t\t\tparams: {\n\t\t\t\t\t\t\t_id: owner.target._id\n\t\t\t\t\t\t}\n\t\t\t\t\t})\" \n\t\t\t\t/>\n\n\t\t\t\t<div \n\t\t\t\t\tv-if=\"type !== 'short'\"\n\t\t\t\t\tclass=\"flex flex-nowrap t-medium w-100 o-hidden pos-relative\"\n\t\t\t\t>\n\t\t\t\t\t<span \n\t\t\t\t\t\t@click.stop=\"$router.push({\n\t\t\t\t\t\t\tname: owner.type === 'user' ? 'User Profile' : 'Organization', \n\t\t\t\t\t\t\tparams: {\n\t\t\t\t\t\t\t\t_id: owner.target._id\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\" \n\t\t\t\t\t\tclass=\"cursor-pointer w-max t-trim\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{{owner.target?.profile?.name || creator.target?.username || 'Anonymous'}}\n\t\t\t\t\t</span>\n\n\t\t\t\t\t<span v-if=\"!creator.hidden && owner.target?.profile?.name !== creator.target?.profile?.name\"class=\"mn-l-micro mn-r-micro \">·</span> \n\n\t\t\t\t\t<span\n\t\t\t\t\t\tv-if=\"!creator.hidden && owner.target?.profile?.name !== creator.target?.profile?.name\"\n\t\t\t\t\t\t@click.stop=\"$router.push({\n\t\t\t\t\t\t\tname: 'User Profile', \n\t\t\t\t\t\t\tparams: {\n\t\t\t\t\t\t\t\t_id: creator.target?._id\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\" \n\t\t\t\t\t\tclass=\"cursor-pointer w-max t-trim\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div>by {{creator.target?.profile?.name || creator.target?.username || 'Anonymous'}}</div>\n\t\t\t\t\t</span>\n\n\t\t\t\t\t<span v-if=\"date\" class=\"mn-l-micro mn-r-micro \">·</span> \n\n\t\t\t\t\t<span v-if=\"date\" class=\"pos-relative w-max\">\n\t\t\t\t\t\t<Tooltip v-if=\"date\" :text=\"formatDate(date)\">\n\t\t\t\t\t \t\t{{getTimeElapsed(date)}}\n\t\t\t\t\t \t</Tooltip>\n\t\t\t\t\t</span>\n\n\t\t\t\t\t<span v-if=\"dateFormatted\">\n\t\t\t\t\t\t· {{dateFormatted}}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t\n\n\t\t\t\t<!-- Participaters avatar -->\n\n\t\t\t\t<div class=\"d-block mn-l-auto flex-nowrap flex flex-v-center\">\n\t\t\t\t\t\n\t\t\t\t\t<PhotoStack\n\t\t\t\t\t\tv-if=\"members\"\n\t\t\t\t\t\t:number=\"members\"\n\t\t\t    \t:photos=\"membersPhotos\" \n\t\t\t    />\n\t\t\t\t</div>\n\n\t\t\t\t<!-- Report -->\n\t\t\t\t<Dropdown \n\t\t\t\t\tv-if=\"type !== 'short' && user && (user !== creator.target?._id || (actions && actions.length > 0))\"\n\t\t\t\t\t:label=\"{ component: IconEllipsis, class: 't-transp i-regular' }\"\n\t\t\t\t\t:align=\"'right'\"\n\t\t\t\t\tclass=\"cursor-pointer z-index-2\"\n\t\t\t\t>\n\t\t\t\t\t<section \n\t\t\t\t\t\tclass=\"bg-black flex-column flex gap-thin pd-thin radius-small\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<FormReport \n\t\t\t\t\t\t\tv-if=\"user !== creator.target?._id\"\n\t\t\t\t\t\t\t:user=\"user\"\n\t\t\t\t\t\t\t:type=\"entityType\" \n\t\t\t\t\t\t\t:target=\"entity._id\" \n\t\t\t\t\t\t\t:text=\"'Report'\" \n\t\t\t\t\t\t\tclass=\"w-100\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<button \n\t\t\t\t\t\t\t\tclass=\"w-100 bg-black br-solid br-1px br-white-transp-20 t-white button-small button\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tReport\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</FormReport>\n\n\t\t\t\t\t\t<template  \n\t\t\t        v-for=\"action in actions\"   \n\t\t\t        v-if=\"actions && actions.length > 0\"\n\t\t\t      >\n\t\t\t        <router-link\n\t\t\t          v-if=\"action.to\"\n\t\t\t          :key=\"action.to\"\n\t\t\t          :to=\"action.to\"\n\t\t\t          :class=\"action.class || 'w-100 bg-black br-solid br-1px br-white-transp-20 t-white button-small button'\"\n\t\t\t        >\n\t\t\t          {{ action.label }}\n\t\t\t        </router-link>\n\n\t\t\t        <button\n\t\t\t          v-if=\"action.method\"\n\t\t\t          @click=\"action.method\"\n\t\t\t          :class=\"action.class || 'w-100 bg-black br-solid br-1px br-white-transp-20 t-white button-small button'\"\n\t\t\t        >\n\t\t\t          {{ action.label }}\n\t\t\t        </button>\n\t\t\t      </template>\n\t\t\t\t\t</section>\n\t\t    </Dropdown>\t\n\t\t\t</div>\n\t\t</div>\n\t</header>\n</template>\n\n\n<script setup=\"props\">\n\timport { computed,ref } from 'vue'\n\n\timport { useRouter } from 'vue-router'\n\n\timport Tooltip from '@martyrs/src/components/Tooltip/Tooltip.vue'\n\timport Dropdown from \"@martyrs/src/components/Dropdown/Dropdown.vue\";\n\n\timport PlaceholderUserpic from '@martyrs/src/modules/icons/placeholders/PlaceholderUserpic.vue'\n\timport PlaceholderOrganizationPic from '@martyrs/src/modules/icons/placeholders/PlaceholderOrganizationPic.vue'\n\timport IconEllipsis from '@martyrs/src/modules/icons/navigation/IconEllipsis.vue'\n\n\timport FormReport from '@martyrs/src/modules/reports/components/sections/FormReport.vue'   \n\timport ButtonToggleMembership from '@martyrs/src/modules/organizations/components/elements/ButtonToggleMembership.vue'\n\n\timport PhotoStack from \"@martyrs/src/modules/globals/views/components/elements/PhotoStack.vue\"\n\n\n\tconst props = defineProps([\n\t\t'user',\n\t\t'entity',\n\t\t'entityType',\n\t\t'date',\n\t\t'dateFormatted',\n\t\t'owner',\n\t\t'creator',\n\t\t'members',\n\t\t'membersPhotos',\n\t\t'type',\n\t\t'actions'\n\t])\n\n\tconst router = useRouter()\n\n\tfunction getTimeElapsed(timestamp) {\n\t  const now = new Date();\n\t  const createdAt = new Date(timestamp);\n\t  const timeDiff = Math.abs(now - createdAt);\n\t  const seconds = Math.floor(timeDiff / 1000);\n\t  const minutes = Math.floor(seconds / 60);\n\t  const hours = Math.floor(minutes / 60);\n\t  const days = Math.floor(hours / 24);\n\t  const weeks = Math.floor(days / 7);\n\t  \n\t  if (weeks > 0) {\n\t    return `${weeks} week${weeks > 1 ? 's' : ''} ago`;\n\t  } else if (days > 0) {\n\t    return `${days} day${days > 1 ? 's' : ''} ago`;\n\t  } else if (hours > 0) {\n\t    return `${hours} hour${hours > 1 ? 's' : ''} ago`;\n\t  } else if (minutes > 0) {\n\t    return `${minutes} minute${minutes > 1 ? 's' : ''} ago`;\n\t  } else {\n\t    return 'Just now';\n\t  }\n\t}\n\n</script>\n\n<style lang=\"scss\">\n</style>\n\n\n",
                  "name": "CardHeader.vue",
                  "size": 5935,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/globals/views/components/blocks/PopupDateSelector.vue",
                  "relativePath": "modules/globals/views/components/blocks/PopupDateSelector.vue",
                  "extension": ".vue",
                  "content": "<template>\n  <Popup @close-popup=\"closePopup\" :isPopupOpen=\"isOpen\" class=\"radius-medium tablet:w-min-30r pd-medium bg-white o-hidden\">\n    <h5 class=\"w-100 t-center mn-b-small\">Select Rent Period</h5>\n    <Calendar\n      v-model:date=\"selectedDates\"\n      :allowRange=\"true\"\n      :disablePastDates=\"true\"\n      :availabilityData=\"availabilityData\"\n      :showAvailability=\"true\"\n      :lowAvailabilityThreshold=\"3\"\n      class=\"bg-light radius-small\"\n      :disabled=\"isLoading\"\n    />\n    <div v-if=\"isLoading\" class=\"flex w-100 mn-t-thin bg-light radius-small flex-center pd-thin mn-b-thin\">\n      <Loader :centered=\"false\" />\n      <span>Loading availability data...</span>\n    </div>\n\n    <div v-if=\"availabilityError\" class=\"pd-small t-error\">\n      {{ availabilityError }}\n    </div>\n    \n    <PriceTotal\n      :totalPrice=\"totalAmount\"\n      :currency=\"returnCurrency()\"\n      :showFees=\"showFees\"\n      :feesRate=\"feesRate\"\n      :showVat=\"showVat\"\n      :vatRate=\"vatRate\"\n    />\n    <Button\n      @click=\"confirmSelection\"\n      :disabled=\"!selectedDates.start || !selectedDates.end || isLoading || !isAvailable\"\n      class=\"h-3r w-100 bg-main button\"\n    >\n      <div class=\"gap-thin flex flex-center flex-nowrap\">\n        <IconShopcartAdd class=\"i-semi icon-button-main\" />\n        <span>{{t('addtoorder')}}</span>\n      </div>\n    </Button>\n      <Button\n        v-if=\"showCancelButton\"\n        @click=\"cancelSelection\"\n        class=\"mn-t-thin h-3r w-100 t-white bg-red button\"\n      >\n        <span>{{ t('remove') }}</span>\n      </Button>\n  </Popup>\n</template>\n\n<script setup>\nimport { ref, computed, watch, onMounted } from 'vue'\nimport { useI18n } from 'vue-i18n'\nimport Popup from '@martyrs/src/components/Popup/Popup.vue'\nimport Loader from '@martyrs/src/components/Loader/Loader.vue'\nimport Calendar from '@martyrs/src/components/DatePicker/Calendar.vue'\nimport Button from '@martyrs/src/components/Button/Button.vue'\nimport IconShopcartAdd from '@martyrs/src/modules/icons/actions/IconShopcartAdd.vue'\nimport PriceTotal from '@martyrs/src/modules/orders/components/elements/PriceTotal.vue'\n// Import the store actions\nimport * as rents from '@martyrs/src/modules/rents/views/store/rents.store.js'\n\nconst props = defineProps({\n  product: { type: Object, required: true },\n  isOpen: { type: Boolean, required: true },\n  showFees: { type: Boolean, default: false },\n  showVat: { type: Boolean, default: false },\n  feesRate: { type: Number, default: 0 },\n  vatRate: { type: Number, default: 0 },\n  onConfirm: { type: Function, required: true },\n  onCancel: { type: Function, default: null },\n  showCancelButton: { type: Boolean, default: false }\n})\n\nconst emit = defineEmits(['close'])\nconst { t } = useI18n({\n  messages: {\n    en: {\n      addtoorder: 'Add to Shopcart'\n    }\n  }\n})\n\nconst selectedDates = ref({ start: null, end: null })\nconst availabilityData = ref([])\nconst isLoading = ref(false)\nconst availabilityError = ref(null)\nconst isAvailable = ref(true)\n\n// Load availability data for the current month and next month\nasync function loadAvailabilityData() {\n  if (!props.product || !props.product._id) return;\n  \n  isLoading.value = true;\n  availabilityError.value = null;\n  \n  try {\n    const today = new Date();\n    const start = new Date(today.getFullYear(), today.getMonth(), 1);\n    const end = new Date(today.getFullYear(), today.getMonth() + 2, 0);\n    \n    const data = await rents.loadAvailability({\n      productId: props.product._id,\n      startDate: start.toISOString().split('T')[0],\n      endDate: end.toISOString().split('T')[0]\n    });\n    \n    if (data && data.availability) {\n      availabilityData.value = data.availability;\n    }\n  } catch (error) {\n    console.error('Error loading availability data:', error);\n    availabilityError.value = 'Failed to load availability data. Please try again.';\n  } finally {\n    isLoading.value = false;\n  }\n}\n\n// Check availability for selected date range\nasync function checkAvailability() {\n  if (!selectedDates.value.start || !selectedDates.value.end || !props.product || !props.product._id) {\n    isAvailable.value = false;\n    return;\n  }\n  \n  isLoading.value = true;\n  availabilityError.value = null;\n  \n  try {\n    const data = await rents.loadAvailability({\n      productId: props.product._id,\n      startDate: selectedDates.value.start.split('T')[0],\n      endDate: selectedDates.value.end.split('T')[0]\n    });\n    \n    isAvailable.value = data.available > 0;\n    \n    if (!isAvailable.value) {\n      availabilityError.value = 'Product is not available for the selected dates.';\n    }\n  } catch (error) {\n    console.error('Error checking availability:', error);\n    availabilityError.value = 'Failed to check availability. Please try again.';\n    isAvailable.value = false;\n  } finally {\n    isLoading.value = false;\n  }\n}\n\nfunction calculateDays(start, end) {\n  if (!start || !end) return 0\n  const startDate = new Date(start)\n  const endDate = new Date(end)\n  const diffTime = endDate - startDate\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24)) + 1\n  return diffDays > 0 ? diffDays : 0\n}\n\nconst numberOfDays = computed(() => calculateDays(selectedDates.value.start, selectedDates.value.end))\nconst totalAmount = computed(() => props.product.price * numberOfDays.value)\n\nfunction closePopup() {\n  emit('close')\n}\n\nfunction confirmSelection() {\n  if (selectedDates.value.start && selectedDates.value.end && isAvailable.value) {\n    props.onConfirm(selectedDates.value)\n    closePopup()\n  }\n}\n\nfunction cancelSelection() {\n  if (props.onCancel) {\n    props.onCancel()\n  }\n  closePopup()\n}\n\nwatch([() => selectedDates.value.start, () => selectedDates.value.end], ([newStart, newEnd]) => {\n  if (newStart && newEnd) {\n    // checkAvailability();\n  }\n}, { immediate: false });\n\nwatch(() => props.isOpen, (newVal) => {\n  if (newVal) {\n    loadAvailabilityData();\n  } else {\n    selectedDates.value = { start: null, end: null };\n    availabilityError.value = null;\n  }\n}, { immediate: true });\n\nonMounted(() => {\n  if (props.isOpen) {\n    loadAvailabilityData();\n  }\n});\n</script>",
                  "name": "PopupDateSelector.vue",
                  "size": 6091,
                  "type": "source"
                }
              ]
            },
            "elements": {
              "_files": [
                {
                  "path": "../../src/modules/globals/views/components/elements/ButtonDate.vue",
                  "relativePath": "modules/globals/views/components/elements/ButtonDate.vue",
                  "extension": ".vue",
                  "content": "<template>\n  <div \n    @click=\"handleClick\"\n    class=\"cursor-pointer flex-center flex\"\n  >\n    <IconDate class=\"w-1r h-auto\"/>\n    <span class=\"desktop-only mn-l-thin t-semi\">{{ formattedDate }}</span>\n  </div>\n</template>\n\n<script setup>\nimport { toRefs, computed } from 'vue';\nimport IconDate from '@martyrs/src/modules/icons/entities/IconDate.vue'\n\nconst props = defineProps({\n  action: {\n    type: Function,\n  },\n  date: {\n    type: Object\n  }\n});\n\nconst { action, date } = toRefs(props);\n\nconst formattedDate = computed(() => formatDate(date.value));\n\nconst handleClick = () => {\n  if (action.value) action.value();\n};\n\nfunction formatDate(dateObj) {\n  const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  \n  const { start, end } = dateObj;\n\n  if (start === null && end === null) {\n    return `All Time`;\n  }\n\n  const startDate = new Date(start);\n  const startDay = startDate.getUTCDate(); // Используем getUTCDate() для дня\n  const startMonth = months[startDate.getUTCMonth()]; // Используем getUTCMonth() для месяца\n  const startYear = startDate.getUTCFullYear(); // Используем getUTCFullYear() для года\n\n  if (!end) {\n    // Если нет end, выводим полную дату для start\n    return `${startDay} ${startMonth} ${startYear}`;\n  }\n\n  const endDate = new Date(end);\n  const endDay = endDate.getUTCDate(); // Используем getUTCDate() для дня\n  const endMonth = months[endDate.getUTCMonth()]; // Используем getUTCMonth() для месяца\n  const endYear = endDate.getUTCFullYear(); // Используем getUTCFullYear() для года\n\n  // Если есть start и end, для start не выводим год, а для end выводим\n  return `${startDay} ${startMonth} - ${endDay} ${endMonth} ${endYear}`;\n}\n\n</script>",
                  "name": "ButtonDate.vue",
                  "size": 1724,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/globals/views/components/elements/ButtonSort.vue",
                  "relativePath": "modules/globals/views/components/elements/ButtonSort.vue",
                  "extension": ".vue",
                  "content": "<template>\n  <div \n    @click=\"handleClick\"\n    class=\"\n      cursor-pointer\n      t-center\n      t-black\n      radius-small \n      flex-center\n      flex\n      aspect-1x1\n    \"\n  >\n    <IconSort\n      :order=\"order\"\n      class=\"w-100 h-auto\"\n    />\n  </div>\n</template>\n\n<script setup>\nimport { toRefs } from 'vue';\n\nimport IconSort from '@martyrs/src/modules/icons/navigation/IconSort.vue'\n\nconst props = defineProps({\n  action: {\n    type: Function,\n  },\n  order: {\n    type: String,\n    required: true\n  }\n});\n\nconst { action, order } = toRefs(props);\n\nconst handleClick = () => {\n  if (action.value) action.value();\n};\n</script>\n",
                  "name": "ButtonSort.vue",
                  "size": 635,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/globals/views/components/elements/PhotoStack.vue",
                  "relativePath": "modules/globals/views/components/elements/PhotoStack.vue",
                  "extension": ".vue",
                  "content": "<script setup>\nimport PlaceholderUserpic from '@martyrs/src/modules/icons/placeholders/PlaceholderUserpic.vue'\n\ndefineProps({\n  number: {\n    type: Number,\n    required: true\n  },\n  photos: {\n    type: Array,\n    required: true\n  },\n})\n</script>\n\n<template>\n  <div v-if=\"number\" class=\"w-4r pos-relative i-thin\">\n    <span \n      :style=\"{ \n        position: 'absolute', \n        top: '0px', \n        right: '0px' \n      }\"\n      class=\"br-solid br-2px br-white z-index-1 radius-big i-thin bg-second flex flex-center t-white p-small t-semi\"\n    >\n      {{number}}\n    </span>\n    \n    <template v-if=\"photos.length > 0 \" v-for=\"(photo, index) in photos.slice(0,2)\">\n      <img\n        v-if=\"photo\"\n        loading=\"lazy\"\n        :key=\"index\"\n        :src=\"(FILE_SERVER_URL || '') + photo\"\n        :style=\"{ \n          position: 'absolute', \n          top: '0px', \n          right: (index * 20 + 20) + '%', \n          zIndex: 1 - index \n        }\"\n        class=\"br-solid br-2px br-white i-thin bg-light radius-big\"\n      />\n\n      <PlaceholderUserpic\n        v-else\n        :style=\"{ \n          position: 'absolute', \n          top: '0px', \n          right: (index * 20 + 20) + '%', \n          zIndex: 1 - index \n        }\"\n        class=\"br-solid br-2px br-white i-thin bg-light radius-big\"\n      />\n    </template>\n  </div>\n</template>",
                  "name": "PhotoStack.vue",
                  "size": 1337,
                  "type": "source"
                }
              ]
            },
            "layouts": {
              "_files": [
                {
                  "path": "../../src/modules/globals/views/components/layouts/App.vue",
                  "relativePath": "modules/globals/views/components/layouts/App.vue",
                  "extension": ".vue",
                  "content": "<template>\n  <router-view \n    v-slot=\"{ Component }\"\n  >\n    <component \n      ref=\"page\" \n      :env=\"env\"\n      :app=\"app\"\n      :modules=\"modules\"\n      :is=\"Component\"\n    />\n  </router-view>\n</template>\n\n<script setup>\n  import { computed, ref, onMounted, defineAsyncComponent, onBeforeMount } from 'vue'\n  import { Preferences } from '@capacitor/preferences';\n  import { Keyboard } from '@capacitor/keyboard';\n\n  import { useHead } from '@unhead/vue'\n  import { useI18n } from 'vue-i18n'\n  import { useRoute } from 'vue-router'\n\n  import * as globals from '@martyrs/src/modules/globals/views/store/globals.js'\n  import * as auth from '@martyrs/src/modules/auth/views/store/auth.js'\n\n  const props = defineProps({\n    env: {\n      type: Object,\n      required: true\n    },\n    app: {\n      type: Object,\n      required: true\n    },\n    modules: {\n      type: Object,\n      required: true\n    }\n  })\n  /////////////////////////////\n  // LOADING\n  /////////////////////////////\n    // State\n  let show = ref(false)\n  // Preloader\n  const page = ref(null)\n  /////////////////////////////\n  // META\n  /////////////////////////////\n  const { t, locale, availableLocales } = useI18n({\n    messages: props.app.messages\n  })\n\n  const route = useRoute();\n\n  const languages = availableLocales;\n  const base_url = process.env.FILE_SERVER_URL;\n\n  function removeTrailingSlash(url) {\n    return url.endsWith('/') ? url.slice(0, -1) : url;\n  }\n  // Используйте эту функцию, чтобы удалить слэш в конце URL\n  const metadata = computed(() => {return {\n    title: t('meta.title'),\n    description: t('meta.description'),\n    meta: [\n        { charset: 'utf-8' },\n        { name: 'viewport', content: 'width=device-width, initial-scale=1, shrink-to-fit=no' },\n        { hid: 'description', name: 'description', content: t('meta.description') },\n        { hid: 'keywords', name: 'keywords', content: t('meta.keywords') },\n        { hid: 'og:title', property: 'og:title', content: t('meta.og.title') },\n        { hid: 'og:description', property: 'og:description', content: t('meta.og.description') },\n        { hid: 'og:image', property: 'og:image', content: base_url + '/favicon/cover.jpg' },\n        { hid: 'og:url', property: 'og:url', content: removeTrailingSlash(`${base_url}${route.path}`) },\n        { hid: 'twitter:title', name: 'twitter:title', content: t('meta.twitter.title') },\n        { hid: 'twitter:description', name: 'twitter:description', content: t('meta.twitter.description') },\n        { hid: 'twitter:image', name: 'twitter:image', content: base_url + '/favicon/cover.jpg' },\n        { hid: 'twitter:card', name: 'twitter:card', content: t('meta.twitter.card') },\n        ],\n    link: [\n      { hid: 'canonical', rel: 'canonical', href: removeTrailingSlash(`${base_url}${route.path}`) },\n      ...generateAlternateLinks.value,\n    ],\n    htmlAttrs: { lang: t('meta.htmlAttrs.lang') }\n  }});\n\n  const generateAlternateLinks = computed(() => {\n    return languages.map(lang => {\n      let newPath = route.path;\n\n      if (route.params.locale) {\n        newPath = newPath.replace(`/${route.params.locale}`, `/${lang}`);\n      } else {\n        newPath = `/${lang}${newPath}`;\n      }\n      const href = removeTrailingSlash(`${base_url}${newPath}`);\n      return { \n        hid: 'alternate', \n        rel: 'alternate', \n        hreflang: lang, \n        href: href\n      };\n    });\n  });\n\n  useHead(metadata)\n\n  onBeforeMount(async()=>{\n    if (process.env.MOBILE_APP === 'ios') Keyboard.setAccessoryBarVisible({ isVisible: false }) \n\n    const { value } = await Preferences.get({ key: 'darkmode' });\n\n    const isDarkMode = value ? JSON.parse(value) : false;\n    \n    globals.actions.setTheme(isDarkMode);\n  })\n</script>",
                  "name": "App.vue",
                  "size": 3723,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/globals/views/components/layouts/Client.vue",
                  "relativePath": "modules/globals/views/components/layouts/Client.vue",
                  "extension": ".vue",
                  "content": "<template>\n\t<div \n\t\tid=\"app-wrapper\"\n\t\tclass=\"flex flex-column h-100 w-100 pos-relative o-hidden\"\n\t\t:class=\"{\n  \t\t'pd-t-extra': MOBILE_APP === 'ios',  \n\t\t\t'bg-white': headerTheme === 'light',\n\t\t\t'bg-black': headerTheme === 'dark' \n  \t}\"\n\t>\n\t\t<transition name=\"moveFromTop\" appear>\n\t\t\t<Loader v-if=\"!page || isPageLoading\" class=\"pos-fixed\"/>\n\t\t</transition>\n\n\n\t  <transition \n\t    name=\"moveFromTop\" \n\t    mode=\"out-in\"\n\t  >\n\t    <section \n\t      v-if=\"FirstUse && route.meta.walkthrough\"\n\t      class=\"w-100 h-100\" \n\t     >\n\t      <component \n\t        :is=\"route.meta.walkthrough\"\n\t        name=\"Walkthrough\"\n\t        @updateFirstUse=\"updateFirstUse\" \n\t        :slides=\"[1,2,3]\" \n\t        class=\"tab\"\n\t      >\n\t      </component>\n\t    </section>\n\t  </transition>\n\n    <component\n\t\t\tv-if=\"!MOBILE_APP && route.meta.header\"\n      ref=\"header\" \n      :is=\"route.meta.header\"\n      :theme=\"headerTheme\"\n      :logotype=\"route.meta.logotype\"\n      :location=\"route.meta.location\"\n    >\n    \t<component\n\t\t    v-if=\"route.meta?.header_navigation\"\n\t\t    :is=\"route.meta.header_navigation\"\n\t\t    :horizontal=\"true\"\n\t\t\t\t:navigationItems=\"route.meta.header_navigation_items\"\n\t\t\t\t:stateSidebar=\"globals.state.isOpenSidebar\" \n\t\t\t\t:theme=\"headerTheme\"\n\t\t  />\n  \t</component>\n\n\t\t<transition name=\"moveFromTop\" mode=\"out-in\" appear>\n\t\t\t<component\n       \tv-if=\"MOBILE_APP && !route.meta.hideNavigationBar\"\n        :is=\"route.meta.navigationbar\"\n        :logotype=\"route.meta.logotype\"\n        :navigationItems=\"route.meta.sidebar_navigation_items\"\n\t      :stateSidebar=\"globals.state.isOpenSidebar\" \n      />\n\t\t</transition>\n\n\t  <Popup \n\t  \t@close-popup=\"closeLocationPopup\" \n\t  \t:isPopupOpen=\"globals.state.isOpenLocationPopup\"\n\t  \tclass=\"bg-white pd-semi w-m-33r radius-big\"\n\t  >\t\n\t  \t<LocationSelection />\n\t  </Popup>\n\n\t  <!-- class=\"flex flex-nowrap transition-ease-in-out o-hidden pos-relative\" -->\n\t\t<section \n\t\t\tid=\"screen\" \n\t\t\tref=\"screen\"\n\t\t\t@scroll=\"handleScroll\"\n\t\t\tclass=\"flex flex-nowrap h-100 pos-relative o-hidden  transition-ease-in-out\"\n\t\t\t:class=\"{\n\t\t\t\t'': MOBILE_APP === 'ios',\n      }\"\n\t\t>\n\t\t\t<ShopCart \n\t\t\t\t:class=\"{\n\t\t\t\t\t'mobile:pd-t-extra': MOBILE_APP === 'ios',  \n\t\t\t\t}\"\n\t\t\t/>\n\n\t\t\t<!-- <section v-if=\"!route.meta?.breadcrumbs?.hide\" class=\"pd-thin pd-b-zero\">\n\t\t\t\t<Breadcrumbs \n\t\t\t\t\tv-if=\"!MOBILE_APP\"\n\t\t\t\t\tclass=\"bg-light pd-small radius-big\"\n\t\t\t\t/>\n\t\t\t</section> -->\n\n\t    <component\n\t      v-if=\"route.meta?.sidebar && !MOBILE_APP\"\n\t      v-slot=\"{ Component }\"\n\t      :is=\"route.meta.sidebar\"\n\t      :stateSidebar=\"globals.state.isOpenSidebar\" \n\t      :widthHidden='route.meta?.sidebar_width_hidden'\n\t      :width=\"route.meta?.sidebar_width\"\n\t      :theme=\"headerTheme\"\n\t      @closeSidebar=\"() => globals.state.isOpenSidebar = false\"\n\t    >\n\t    \t<transition name=\"moveFromTop\"  mode=\"out-in\">\n\t\t      <component\n\t\t        v-if=\"route.meta?.sidebar_navigation\"\n\t\t        :is=\"route.meta.sidebar_navigation\"\n\t\t        :key=\"route.meta.sidebar_navigation\"\n\t\t        :navigationItems=\"route.meta.sidebar_navigation_items\"\n\t\t\t      :stateSidebar=\"globals.state.isOpenSidebar\" \n\t\t\t\t\t\t:theme=\"headerTheme\"\n\t\t      />\n\t      </transition>\n\t    </component>\n\t\t  <!-- rows-1-min0_max1 z-index-1 pos-relative w-100 h-100 -->\n\t\t  <div class=\"rows-1-min0_max1 z-index-1 pos-relative w-100 h-100\">\n  \t\t\t<Status \n\t\t\t\t\tv-if=\"globals.state.error.show\" \n\t\t\t\t\t:data=\"globals.state.error\"\n\t\t\t\t\t@close=\"globals.state.error.show = false\"\n\t\t\t\t\tclass=\"z-index-7\" \n\t\t\t\t/>\n\t\t\t\t <Suspense @resolve=\"onSuspenseResolved\">\n\t\t\t\t\t<router-view  \n\t\t\t\t\t\tid=\"view\"\n\t\t\t\t\t\tv-slot=\"{ Component, route }\" \n\t\t\t\t\t\t:class=\"{\n\t\t\t\t\t\t\t'scroll-hide': MOBILE_APP,\n\t\t\t\t\t\t}\"\n\t\t\t\t\t\tclass=\"o-y-scroll o-x-hidden flex flex-column pos-relative h-100\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<transition @before-enter=\"scrollTop\" name=\"scaleTransition\" mode=\"out-in\" appear>\n\t\t\t      \t<component \n\t\t\t      \t\tref=\"page\"  \n\t\t\t      \t\t:is=\"Component\" \n\t\t\t      \t\t:key=\"route.path\"\n\t\t\t      \t\tclass=\"w-100 h-min-100\"\n\t\t      \t\t \t@page-loading=\"handlePageLoading\"\n\t              @page-loaded=\"handlePageLoaded\"\n\t\t\t      \t/>\n\t\t\t      \t<!-- Key пока выключил непонятно какие проблемы это вызовет -->\n\t\t\t      \t<!--  -->\n\t\t\t      </transition>\n\n\t\t\t      <!-- <Footer /> -->\n\t\t\t\t\t</router-view>\n\t\t\t\t</Suspense>\n\t\t\t</div>\n\t\t</section>\n\n\t\t<router-view  \n\t\t\tname=\"defaultBottom\"\n\t\t\tv-slot=\"{ Component, route }\" \n\t\t>\n\t\t\t<component \n    \t\t:is=\"Component\" \n    \t/>\n\t\t</router-view>\n\n\t  <component\n\t\t\tv-if=\"!MOBILE_APP && route.meta.footer?.component && !route.meta.hideFooter\"\n      ref=\"footer\" \n      :is=\"route.meta.footer.component\"\n      :theme=\"headerTheme\"\n      :logotype=\"route.meta.footer.logotype\"\n      :location=\"route.meta.footer.location\"\n    />\n\n    <component \n      v-if=\"MOBILE_APP && route.meta.title_hide\"\n      class=\"z-index-2\"\n    \t:is=\"route.meta.bottombar\"\n    />\n\t</div>\n</template>\n\n\n\n<script setup>\n\timport { computed, ref, onMounted, watch  } from 'vue';\n\t// Router\n\timport { useRoute } from 'vue-router';\n\t// Store\n\timport * as globals from '@martyrs/src/modules/globals/views/store/globals.js';\n\t// Partials\n\timport Status from '@martyrs/src/components/Status/Status.vue';\n\timport Popup from '@martyrs/src/components/Popup/Popup.vue';\n\t// import Breadcrumbs from '@martyrs/src/components/Breadcrumbs/Breadcrumbs.vue'\n\timport Loader from '@martyrs/src/components/Loader/Loader.vue';\n\n\timport NavigationBar from '@martyrs/src/modules/globals/views/components/partials/NavigationBar.vue';\n\timport LocationSelection from '@martyrs/src/modules/globals/views/components/partials/LocationSelection.vue';\n\t// import Footer from '@martyrs/src/modules/globals/views/components/partials/Footer.vue'\n\n\timport ShopCart from '@martyrs/src/modules/orders/components/partials/ShopCart.vue';\n\t// PROPS\n\tconst props = defineProps({\n    env: {\n      type: Object,\n      required: true\n    },\n    app: {\n      type: Object,\n      required: true\n    },\n    modules: {\n      type: Object,\n      required: true\n    }\n  })\n\n\t/////////////////////////////\n  // LOADING\n  /////////////////////////////\n    // State\n  let show = ref(false)\n  // Preloader\n  const page = ref(null)\n\n  const isPageLoading = ref(true);\n  \n  // Обработчики событий загрузки\n  function handlePageLoading() {\n    isPageLoading.value = true;\n  }\n  \n  function handlePageLoaded() {\n    isPageLoading.value = false;\n  }\n  \n  // Обработка события разрешения Suspense (когда async setup компонента завершается)\n  function onSuspenseResolved() {\n    // Если страница не отправляет событие page-loaded, этот обработчик \n    // может служить запасным вариантом для отключения лоадера\n    // Можно оставить закомментированным, если все страницы будут явно вызывать handlePageLoaded\n    isPageLoading.value = false;\n  }\n\t/////////////////////////////\n\t// CREATED\n\t/////////////////////////////\n\tconst route = useRoute()\n\t// const router = useRouter()\n\t// Ref Code\n\tconst referalCode = ref(route.query.referalCode);\n\t/////////////////////////////\n\t// Methods\n\t/////////////////////////////\n\tfunction closeLocationPopup() {\n\t  globals.state.isOpenLocationPopup = false;\n\t}\n\tfunction scrollTop(){\n\t\tdocument.getElementById('app').scrollIntoView();\n\t}\n\t// Scrolling header\n\tconst scrollOffset = ref(0)\n\tlet isScrolled = false\n\tconst header = ref(null)\n\n\tconst headerTheme = computed(() => {\n\t\tif (scrollOffset.value > 50) {\n\t\t\treturn route.meta.header_theme  || 'light'\n\t\t} else {\n\t\t\treturn route.meta.header_theme || 'light'\n\t\t}\n\t})\n\n\tconst handleScroll = () => {\n\t  scrollOffset.value = event.target.scrollTop\n\t};\n/////////////////////////////\n  // FIRST USE\n  /////////////////////////////\n  const FirstUse = ref(false);\n\n  import { Preferences } from '@capacitor/preferences';\n\n  async function getFirstUse() {\n    const ret = await Preferences.get({ key: 'first-use' });\n    FirstUse.value = ret.value ? JSON.parse(ret.value) : true;\n  }\n\n  const updateFirstUse = (value) => {\n    FirstUse.value = value;\n  }\n\n\tonMounted(async () => {\n\t  await getFirstUse()\n\n\t\t// if ('serviceWorker' in navigator) {\n\t  //  \twindow.addEventListener('load', () => {\n\t  //    \tnavigator.serviceWorker.register('/service-worker.js').then(registration => {\n\t  //      \tconsole.log('SW registered: ', registration);\n\t  //    \t}).catch(registrationError => {\n\t  //      \tconsole.log('SW registration failed: ', registrationError);\n\t  //    \t});\n\t  //  });\n\t \t// }\n\t\t\n\t\tconst savedPosition = localStorage.getItem('position');\n\n\t  if (savedPosition) {\n\t    globals.state.position = JSON.parse(savedPosition);\n\t  } else if (route.meta.location) {\n  \t\tglobals.state.isOpenLocationPopup = true;\n\t  } else {\n\t  \tglobals.state.isOpenLocationPopup = false;\n\t  }\n\n\t\tif (referalCode.value) {\n\t\t  localStorage.setItem('referalCode', referalCode.value);\n\t\t}\n\n\t\tif (page.value) show.value = true\n\t});\n</script>\n\n<style lang=\"scss\">\n\t.fade-enter-active, .fade-leave-active {\n\t  transition: opacity .5s;\n\t}\n\t.fade-enter, .fade-leave-to /* .fade-leave-active в версии 2.1.8+ */ {\n\t  opacity: 0;\n\t}\n\n\t\n  .fade-move,\n  .fade-enter-active,\n  .fade-leave-active {\n    transition: all 0.5s cubic-bezier(0.55, 0, 0.1, 1);\n  }\n\n  /* 2. declare enter from and leave to state */\n  .fade-enter-from,\n  .fade-leave-to {\n    opacity: 0;\n    transform: translate(30px, 0);\n  }\n\n  /* 3. ensure leaving items are taken out of layout flow so that moving\n        animations can be calculated correctly. */\n  .fade-leave-active {\n    position: absolute;\n  }\n\n.moveFromTop-enter-active,\n.moveFromTop-leave-active {\n  transition: all 0.3s ease, max-height 0.2s ease;\n  overflow: hidden;\n}\n\n.moveFromTop-enter-from,\n.moveFromTop-leave-to {\n  transform: translateY(-1rem);\n  opacity: 0;\n  // max-height: 0;\n}\n\n.moveFromTop-enter-to,\n.moveFromTop-leave-from {\n  // max-height: 100vh; \n}\n\n\t.moveFromTopAbsolute-enter-active,\n\t.moveFromTopAbsolute-leave-active {\n\t\ttransform: translateY(0);\n\t\topacity: 1;\n\t\ttransition: all 0.5s ease; \n\t\t\n\t}\n\t.moveFromTopAbsolute-enter-from,\n\t.moveFromTopAbsolute-leave-to {\n\t\tposition: absolute;\n\t\ttransform: translateY(-1rem);\n\t\topacity: 0;\n\t\ttransition: all 0.5s ease;\n\t}\n\t.ScaleOut-enter-active,\n\t.ScaleOut-leave-active {\n\t\topacity: 1;\n\t\ttransform: scale(1);\n\t\ttransition: all 0.3s ease; \n\t\t\n\t}\n\t.ScaleOut-enter-from,\n\t.ScaleOut-leave-to {\n\t\topacity: 0;\n\t\ttransform: scale(0.9);\n\t\ttransition: all 0.3s ease;\n\t}\n\t.slide-fade-enter-active {\n\t\t// min-height: 100vh;\n\t  transition: all  0.3s cubic-bezier(0.4, 0, 0.2, 1);\n\t}\n\n\t.slide-fade-leave-active {\n\t\t// min-height: 100vh;\n\t  transition: all  0.3s cubic-bezier(0.4, 0, 0.2, 1);\n\t}\n\n\t.slide-fade-enter-from,\n\t.slide-fade-leave-to {\n\t\tmin-height: 0;\n\t  transform: translateX(20px);\n\t  opacity: 0;\n\t  left: 0;\n\t  top: 0;\n\t}\n\n\t.scaleTransition-5px-enter-active,\n  .scaleTransition-5px-leave-active {\n    transform: translateY(0px);  \n    opacity: 1;\n    z-index: 1;\n    transition: all 0.2s ease;\n  }\n\n  .scaleTransition-5px-enter-from,\n  .scaleTransition-5px-leave-to {\n    opacity: 0;\n    z-index: 0;\n    position: absolute;\n    transform: translateY(-30px); \n    transition: all 0.2s ease;\n  }\n\n  .scaleTransition-enter-from,\n  .scaleTransition-leave-to {\n    opacity: 0;\n    z-index: 0;\n    position: absolute;\n    width: inherit;\n    height: inherit;\n    display: block;\n    transform: translateY(30px); \n    transition: all 0.5s ease;\n  }\n\n  .scaleTransition-enter-active,\n  .scaleTransition-leave-active {\n    transform: translateY(0px);  \n    opacity: 1;\n    z-index: 1;\n    transition: all 0.5s ease;\n  }\n  .scaleTransition-enter-from,\n  .scaleTransition-leave-to {\n    opacity: 0;\n    z-index: 0;\n    position: absolute;\n    width: inherit;\n    height: inherit;\n    display: block;\n    transform: translateY(30px); \n    transition: all 0.5s ease;\n  }\n\n  .scaleIn-enter-active,\n  .scaleIn-leave-active {\n    // background: red;\n    transition: all 0.5s ease;\n    > section,div { transform-origin: 0 0; transform: translateZ(0px);  transition: all 0.5s ease; }\n  }\n  .scaleIn-enter-from,\n  .scaleIn-leave-to {\n    opacity: 0;\n    transform: scale(0.95);\n    > section,div { transform: translateZ(-30px);  transition: all 0.5s ease; }\n  }\n</style>",
                  "name": "Client.vue",
                  "size": 12066,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/globals/views/components/layouts/Empty.vue",
                  "relativePath": "modules/globals/views/components/layouts/Empty.vue",
                  "extension": ".vue",
                  "content": "<template>\n\t<router-view v-slot=\"{ Component, route }\">\n\t\t<component :is=\"Component\" />\n\t</router-view>\n</template>",
                  "name": "Empty.vue",
                  "size": 115,
                  "type": "source"
                }
              ]
            },
            "pages": {
              "_files": [
                {
                  "path": "../../src/modules/globals/views/components/pages/401.vue",
                  "relativePath": "modules/globals/views/components/pages/401.vue",
                  "extension": ".vue",
                  "content": "<template>\n  <div class=\"\">\n    401 Unauthorized\n  </div>\n</template>\n",
                  "name": "401.vue",
                  "size": 70,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/globals/views/components/pages/404.vue",
                  "relativePath": "modules/globals/views/components/pages/404.vue",
                  "extension": ".vue",
                  "content": "<template>\n  <div class=\"\">\n    404 Not Found\n  </div>\n</template>",
                  "name": "404.vue",
                  "size": 66,
                  "type": "source"
                }
              ]
            },
            "partials": {
              "_files": [
                {
                  "path": "../../src/modules/globals/views/components/partials/BottomNavigationBar.vue",
                  "relativePath": "modules/globals/views/components/partials/BottomNavigationBar.vue",
                  "extension": ".vue",
                  "content": "<template>\n    <footer ref=\"navRef\" class=\"pos-relative pd-medium bg-white\">\n        <nav class=\"t-black w-100 flex-justify-between flex-v-center flex\">\n          <!-- Home -->\n          <router-link \n            class=\"no-hover-color t-center t-medium\" \n            :class=\"{ 't-second': $route.path === '/', 't-transp': $route.path !== '/' }\"\n            to=\"/\"\n          >\n            <IconHome \n              class=\"mn-r-auto mn-l-auto i-big mn-b-thin\"\n              :fill=\"$route.path === '/' ? 'rgb(var(--second))' : 'currentColor'\"\n            />\n            <p class=\"t-semi p-small w-100\">{{t('navigation.home')}}</p>\n          </router-link>\n\n          <!-- Gallery -->\n          <router-link \n            class=\"no-hover-color t-center t-medium\"\n            :class=\"{ 't-second': $route.path === '/marketplac', 't-transp': $route.path !== '/marketplac' }\"\n            to=\"/marketplac\"\n          >\n            <IconCatalog \n              class=\"mn-r-auto mn-l-auto i-big mn-b-thin\"\n              :fill=\"$route.path === '/catalog' ? 'rgb(var(--second))' : 'currentColor'\"\n            />\n            <p class=\" t-semi p-small w-100\">{{t('navigation.marketplac')}}</p>\n          </router-link>\n\n          <!-- Events -->\n          <router-link \n            class=\"no-hover-color t-center t-medium\"\n            :class=\"{ 't-second': $route.path === '/rents', 't-transp': $route.path !== '/rents' }\"\n            to=\"/rents\"\n          >\n            <IconShopcart \n              class=\"mn-r-auto mn-l-auto i-big mn-b-thin\"\n              :fill=\"$route.path === '/rents' ? 'rgb(var(--second))' : 'currentColor'\"\n            />\n            <p class=\" t-semi p-small w-100\">{{t('navigation.rents')}}</p>\n          </router-link>\n\n          <!-- Community -->\n          <router-link \n            class=\"no-hover-color t-center t-medium\"\n            :class=\"{ 't-second': $route.path === '/community', 't-transp': $route.path !== '/community' }\"\n            to=\"/community\"\n          >\n            <IconCommunity \n              class=\"mn-r-auto mn-l-auto i-big mn-b-thin\"\n              :fill=\"$route.path === '/community' ? 'rgb(var(--second))' : 'currentColor'\"\n            />\n            <p class=\" t-semi p-small w-100\">{{t('navigation.community')}}</p>\n          </router-link>\n\n          <!-- Account -->\n          <router-link \n            class=\"no-hover-color t-center t-medium\"\n            :class=\"{ \n              't-second': $route.path.startsWith('/auth/') || $route.path.startsWith('/users/'),\n              't-transp': !$route.path.startsWith('/auth/') && !$route.path.startsWith('/users/')\n            }\"\n            :to=\"auth.state.access.status === false ? {name: 'Sign In'} : { name: 'User Profile', params: { _id: auth.state.user._id }}\"\n          >\n            <IconProfile \n              class=\"mn-r-auto mn-l-auto i-big mn-b-thin\"\n              :fill=\"$route.path.startsWith('/auth/') || $route.path.startsWith('/users/') ? 'rgb(var(--second))' : 'currentColor'\"\n            />\n            <p class=\"t-semi p-small w-100\">{{t('navigation.profile')}}</p>\n          </router-link>\n        </nav>\n    </footer>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { useI18n } from 'vue-i18n'\n\nimport IconHome from '@martyrs/src/modules/icons/entities/IconHome.vue'\nimport IconCatalog from '@martyrs/src/modules/icons/entities/IconCatalog.vue'\nimport IconShopcart from '@martyrs/src/modules/icons/entities/IconShopcart.vue'\nimport IconCommunity from '@martyrs/src/modules/icons/entities/IconCommunity.vue'\nimport IconProfile from '@martyrs/src/modules/icons/entities/IconProfile.vue'\n\nimport * as auth from '@martyrs/src/modules/auth/views/store/auth.js';\n\nconst route = useRoute();\nconst navRef = ref(null);\n\n\n\nconst { t, te } = useI18n({ messages: {\n  \"en\": {\n    \"navigation\": {\n      \"home\": \"Home\",\n      \"catalog\": \"Catalog\",\n      \"rents\": \"My Rents\",\n      \"community\": \"Community\",\n      \"profile\": \"Profile\"\n    }\n  }\n}})\n</script>",
                  "name": "BottomNavigationBar.vue",
                  "size": 4014,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/globals/views/components/partials/CitySelection.vue",
                  "relativePath": "modules/globals/views/components/partials/CitySelection.vue",
                  "extension": ".vue",
                  "content": "<template>\n  <div class=\"select-country\">\n    <p class=\"h1\">🌍</p>\n    <br>\n    <h3 class=\"mn-b-semi\">{{t('title')}}</h3>\n    <!-- Select city -->\n    <div class=\"mn-b-semi\">\n      <!-- Description -->\n      <p class=\"mn-b-small t-transp p-medium\">{{t('description')}}</p> \n      <!-- Input -->\n      <div class=\"flex-nowrap flex mn-b-small pd-small radius-small bg-light\">\n        <span class=\"d-block mn-r-auto\">{{t('cities[0]')}}</span>\n        <a @click=\"closePopup()\">{{t('choose')}}</a>\n      </div>\n    </div>\n    <!-- Coming soon cities -->\n    <p class=\"mn-b-small\">{{t('comingsoon')}}</p>\n    \n    <div class=\"cols-4 gap-small mn-b-semi\">\n      <!-- Input -->\n      <div class=\"flex-nowrap flex pd-small radius-small bg-light\">\n        <span class=\"d-block\">{{t('cscities[0]')}}</span>\n      </div>\n      <div class=\"flex-nowrap flex pd-small radius-small bg-light\">\n        <span class=\"d-block\">{{t('cscities[1]')}}</span>\n      </div>\n      <div class=\"flex-nowrap flex pd-small radius-small bg-light\">\n        <span class=\"d-block\">{{t('cscities[2]')}}</span>\n      </div>\n      <div class=\"flex-nowrap flex pd-small radius-small bg-light\">\n        <span class=\"d-block\">{{t('cscities[3]')}}</span>\n      </div>\n    </div>\n    <!-- Description -->\n    <p class=\"mn-b-small t-transp\">{{t('helpus')}}</p> \n    <div class=\"pd-small p-big radius-small bg-light\">\n      <a class=\"\">hello@nms.network</a>\n    </div>\n  </div>\n</template>\n<script setup>\n// Import libs\nimport { computed, onMounted } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\nimport { useI18n } from 'vue-i18n'\n// Define props\nconst props = defineProps({\n  isPopupOpen: {\n    type: Boolean,\n    default: false\n  },\n});\nconst emits = defineEmits(['close-popup'])\nfunction closePopup() {\n  emits(\"close-popup\");\n} \n// Accessing router and store\nconst route = useRoute()\nconst router = useRouter()\n// Localization\nconst text = {\n  messages: {\n    en: {\n      title: \"Choose Your City\",\n      description: \"Please select your city from the list below to see rental options and other relevant information:\",\n      choose: \"Current\",\n      cities: [\n        \"Phuket\"\n      ],\n      comingsoon: \"Coming soon:\",\n      cscities: [\n        \"Bangkok\",\n        \"Chiang Mai\",\n        \"Pha-ngan\",\n        \"Pattaya\",\n      ],\n      helpus: \"NMS is your ultimate entertainment and lifestyle guide. Want to partner with us or share ideas? Reach out at:\",\n      cultivate: \"Let's create unforgettable moments together! 🎵🌴\"\n    },\n  }\n}\nconst { t } = useI18n(text)\n</script>\n<style lang=\"scss\">\n  .select-country {\n    max-width: 100%;\n  }\n</style>",
                  "name": "CitySelection.vue",
                  "size": 2621,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/globals/views/components/partials/Footer.vue",
                  "relativePath": "modules/globals/views/components/partials/Footer.vue",
                  "extension": ".vue",
                  "content": "<template>\n  <footer \n    class=\"pd-thin pd-t-zero\"\n    :class=\"{\n      't-black bg-white': route.meta.footer_theme === 'light',\n      't-white bg-black': route.meta.footer_theme === 'dark'  \n    }\"\n  >\n<!-- \n    <div id=\"top-footer\" class=\"cols-3 mobile:cols-1 section\">\n     \n    <a href=\"mailto:hello@weeder.delivery\" class=\"w-100 radius-small contact col\">\n      <img loading=\"lazy\" class=\"mn-b-small h-3r\" src=\"/logo/logotype.svg\">  \n      <p class=\"t-transp \">{{t('description')}}</p>\n    </a>\n\n      <div @click=\"this.$router.push({ name: 'Home' } )\" class=\"flex-v-center flex logo-link col\">\n         <p class=\"h4 mn-b-small\">{{t('app')}}</p>\n        <div class=\"store-buttons\">\n        <img loading=\"lazy\" class=\"h-3r\" src=\"/assets/images/landing/appsvg\" alt=\"Download on App Store\">\n        <img loading=\"lazy\" class=\"h-3r\"  src=\"/assets/images/landing/googleplay.svg\" alt=\"Download on Google Play\">\n        </div>\n      </div>\n      \n      <a href=\"https://t.me/weeder_support\" target=\"_blank\" class=\"w-100 radius-small contact col\">\n        <p class=\"h4 mn-b-small\">{{t('socials')}}</p>\n\n        <div class=\"socials flex-nojustify flex\">\n          <a class=\"mn-r-small\" href=\"https://t.me/weederdelivery\" target=\"_blank\"> \n            <img loading=\"lazy\" src=\"@/assets/icons/Telegram_blue.svg\">\n          </a> \n          <a class=\"mn-r-small\" href=\"https://t.me/weederdelivery\" target=\"_blank\"> \n            <img loading=\"lazy\" src=\"@/assets/icons/Telegram_blue.svg\">\n          </a> \n          <a class=\"mn-r-small\" href=\"https://t.me/weederdelivery\" target=\"_blank\"> \n            <img loading=\"lazy\" src=\"@/assets/icons/Telegram_blue.svg\">\n          </a> \n        </div>\n      </a>\n      \n    </div>\n\n    <div class=\"cols-3 mobile:cols-1 section\">\n      \n      <ul class=\"lh-semi nav-footer col\">\n        <li class=\"mn-b-small t-semi h5\">\n          {{t('store')}}\n        </li>\n\n        <div class=\"mn-b-medium ol\">\n          <li v-for=\"(category,index) in categories.state.all\">\n            <router-link :to=\"getMarketplaceLink([category.url])\">\n              <span v-html=\"t('categories[' + index + ']')\"></span>\n            </router-link>  \n          </li>\n        </div>\n\n        <a href=\"https://ozdao.dev\" target=\"_blank\">\n          <img loading=\"lazy\" src=\"/icons/ozdao.svg\">\n        </a>\n      </ul>\n      \n\n      <ul class=\"lh-semi nav-footer col\">\n        <li class=\"mn-b-small t-semi h5\">\n          {{t('information')}}\n        </li>\n       \n      </ul>\n      \n      <ul class=\"lh-semi col\">\n        <li class=\"mn-b-small t-semi h5\">{{t('email')}}</li>\n        <div class=\"mn-b-medium\">\n          <li>Phuket,</li>\n          <li>43 283 Soi Boathouse,</li>\n          <li>Rawai</li>\n        </div>\n        \n        \n\n      </ul>\n\n    </div>  -->\n <!-- <li  v-for=\"(page,index) in pages\"> -->\n\n          <!-- <router-link :to=\"{ name: 'Page', params: { url: page.url}}\" class=\"col nav-link\"> -->\n             <!-- <span v-html=\"t('pages[' + index + ']')\"></span> -->\n          <!-- </router-link> -->\n        <!-- </li> -->\n    \n    <p class=\"t-semi uppercase t-center\">\n      {{ t('year') }} \n      <span class=\"t-main copyleft\">{{ t('heart') }}</span> \n      {{ t('name') }}, {{ t('tagline') }} \n      <a href=\"https://ozdao.dev\" class=\"t-main\" target=\"_blank\" rel=\"noopener\" >OZ DAO.</a>\n    </p>\n  </footer>\n</template>\n\n<script setup=\"props\">\n  import { computed,onMounted, toRefs,ref } from 'vue'\n  import { useRouter, useRoute } from 'vue-router'\n  import { useI18n }    from 'vue-i18n'\n  \n  import * as categories from '@martyrs/src/modules/products/store/categories.js';\n\n  // Props\n  const props = defineProps({\n    theme: {\n      type: String,\n      default: \"light\"\n    }\n  });\n\n  const router = useRouter()\n  const route = useRoute()\n    \n  const text = {\n    locale: 'en',\n    messages: {\n      en: {\n        store: 'Online Store',\n        information: \"Information\",\n        description: \"Weeder Delivery stocks a wide range of quality!\",\n        app: 'Get Our App',\n        adress: 'Adress',\n        support: 'Get Online Support',\n        socials: 'Find Us in Socials',\n        email: 'Contact by email',\n        // request: 'hello@weeder.delivery',\n        time: \"24 / 7 Seven days a week\",\n        copyright: \"2024 © Weeder Delivery. Proudly created with OZ DAO.\",\n        pages: [],\n        categories: [],\n        year: \"2024\",\n        heart: \"❤\",\n        name: \"Weeder\",\n        tagline: \"Builded with love in\"\n      },\n      ru: {\n        store: 'Онлайн Каталог',\n        information: \"Информация\",\n        description: \"Weeder Delivery предлагает широкий ассортимент качественных!\",\n        app: 'Скачайте Наше Приложение',\n        adress: 'Адрес',\n        support: 'Онлайн Поддержка',\n        socials: 'Найдите Нас в Социальных Сетях',\n        email: 'Связаться по email',\n        // request: 'hello@weeder.delivery',\n        time: \"24 / 7 без перерывов\",\n        copyright: \"2024 © Weeder Delivery. С гордостью создано OZ DAO.\",\n        pages: [],\n        categories: []\n      }\n    }\n  };\n\n  categories.state.all.forEach( category => {\n    category.localization.forEach( localization => {\n      text.messages[localization.locale].categories.push(localization.text)\n    })\n  })\n\n  onMounted(async() => {\n\n    await categories.actions.read()\n\n  })\n\n\n  // state.pages.all.forEach( page => {\n  //   page.localization.forEach( localization => {\n  //     text.messages[localization.locale].pages.push(localization.text)\n  //   })\n  // })\n\n  const { t } = useI18n(text)\n  // const pages = computed(() => state.pages.all.filter(page => (page.groups.includes('all') || page.groups.includes('footer'))))\n</script>\n\n<style lang=\"scss\">\n</style>",
                  "name": "Footer.vue",
                  "size": 5679,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/globals/views/components/partials/Header.vue",
                  "relativePath": "modules/globals/views/components/partials/Header.vue",
                  "extension": ".vue",
                  "content": "<script setup=\"props\">\n\timport { computed, onMounted, toRefs, ref, inject } from 'vue'\n\n\timport { useRouter,useRoute } from 'vue-router'\n\timport { useI18n } from 'vue-i18n'\n\t\n\timport * as globals from '@martyrs/src/modules/globals/views/store/globals.js'\n\timport * as shopcart from '@martyrs/src/modules/orders/store/shopcart.js'\n\timport * as auth from '@martyrs/src/modules/auth/views/store/auth.js'\n\t\n\t// Globasls Component\n\n\timport NotificationBadge from '@martyrs/src/modules/notifications/components/elements/NotificationBadge.vue';\n\t// import Navigation from '@martyrs/src/modules/globals/views/components/partials/Navigation.vue'\n\t// Martyrs Component\n\timport Button from '@martyrs/src/components/Button/Button.vue'\n\timport Select from '@martyrs/src/components/Select/Select.vue'\n\timport Checkbox from '@martyrs/src/components/Checkbox/Checkbox.vue'\n\t// Icons module\n\timport IconShopcart from '@martyrs/src/modules/icons/entities/IconShopcart.vue'\n\timport IconProfile from '@martyrs/src/modules/icons/entities/IconProfile.vue'\n\timport IconSearch from '@martyrs/src/modules/icons/navigation/IconSearch.vue';\n\t// Props\n\tconst props = defineProps({\n    theme: {\n    \ttype: String,\n\t    default: \"light\"\n    },\n    logotype: {\n\t    type: Object\n\t  },\n\t  location: {\n\t    type: Boolean,\n\t\t  default: true\n\t  },\n\t  theme_switcher: {\n\t    type: Boolean,\n\t\t  default: true\n\t  },\n  });\n\t// Accessing state\n\tconst router = useRouter()\n\tconst route = useRoute()\n\t// Localization\n\tconst { t } = useI18n()\n\t// const search = computed(() => store.products.state.search)\n\n\tfunction openLocationPopup() {\n\t  globals.state.isOpenLocationPopup = true;\n\t}\n\t/////////////////////////////\n\t// MOUNTED\n\t/////////////////////////////\n\tonMounted(() => {\n    shopcart.actions.setShopcart()\n  });\n</script>\n\n<template>\n\t<header \n\t\tid=\"header\" \n\t\tclass=\"\n\t\t\tpd-thin \n\t\t\tgap-micro\n\t\t\tflex-justify-between\n\t\t\tflex-nowrap\n\t\t\tflex\n\t\t\th-4r\n\t\t\tw-100\n\t\t\tz-index-2 \n\t\t\tpos-relative pos-t-0\n\t\t\tbr-b\n\t\t\tbr-solid\n\t\t\"\n\t\t:class=\"{\n  \t\t't-black br-light': theme === 'light',\n  \t\t't-white br-dark': theme === 'dark'  \n  \t}\"\n\t>\n\t<div class=\"flex-nowrap flex-v-center flex-justify-start flex gap-micro \">\n\t\t<!-- MENU -->\n\t\t<button  \n\t\t\taria-label=\"menu\"\n\t\t\t@click=\"() => globals.state.isOpenSidebar = !globals.state.isOpenSidebar\" \n\t\t\tclass=\"cursor-pointer menu-btn\"\n\t\t\t:class=\"{\n\t\t\t\t'menu-btn_active': globals.state.isOpenSidebar\n\t\t\t}\"\n\t\t>\n\t    <span\n\t    \tclass=\"no-events\"\n\t\t    :class=\"{\n\t\t      'bg-black': theme === 'light',\n\t\t      'bg-white': theme === 'dark'\n\t\t    }\"\n\t\t  >\n\t\t    <span class=\"menu-btn__before\" :class=\"{ 'bg-black': theme === 'light', 'bg-white': theme === 'dark' }\"></span>\n\t\t    <span class=\"menu-btn__after\" :class=\"{ 'bg-black': theme === 'light', 'bg-white': theme === 'dark' }\"></span>\n\t\t  </span>\n\t  </button>\n\n\t\t<!-- LOGO -->\n\t\t<component\n\t\t\tv-if=\"logotype\"\n\t\t  :is=\"logotype\"\n\t\t  @click=\"router.push({ path: '/' })\" \n\t\t  :theme=\"theme\"\n\t\t  class=\"cursor-pointer\"\n\t\t/>\n\n\t\t<button\n\t\t\tv-if=\"location\"\n\t\t\taria-label=\"button_location\"\n    \tclass=\"\n    \t\tcursor-pointer\n    \t\tbg-transp \n    \t\tpd-l-micro pd-r-micro\n    \t\tradius-extra \n    \t\tuppercase \n    \t\tt-semi\n    \t\tbr-solid \n    \t\tbr-2px \n    \t\ttransition-linear\n    \t\tt-nowrap\n    \t\n    \t\"\n    \t:class=\"{\n    \t\t'fill-black br-black t-black hover-bg-black hover-t-white hover-fill-white': theme === 'light',\n    \t\t'fill-white br-white t-white hover-bg-white hover-t-black hover-fill-black': theme === 'dark'  \n    \t}\"\n    \t@click=\"openLocationPopup()\"\n    >\n    \t<svg class=\"i-small\" :fill=\"'inherit'\" xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"67\" viewBox=\"0 0 50 67\" fill=\"none\">\n\t\t\t  <path d=\"M25 0C11.207 0 0 11.207 0 25C0 38.793 20.832 66.668 25 66.668C29.168 66.668 50 38.793 50 25C50 11.207 38.793 0 25 0ZM25 33.332C20.418 33.332 16.668 29.582 16.668 25C16.668 20.418 20.418 16.668 25 16.668C29.582 16.668 33.332 20.418 33.332 25C33.332 29.582 29.582 33.332 25 33.332Z\" :fill=\"'inherit'\"/>\n\t\t\t</svg>\n    \t {{globals.state.position?.country ? globals.state.position.country : 'World'}}\n    </button>\n  </div>\n\n \t<slot></slot>\n\n\t<div class=\"flex-justify-end flex-v-center flex-nowrap flex gap-micro\">\n\t\t<Button \n\t\t\tv-if=\"router.hasRoute('Search') && route.meta.header_search\"\n\t\t\taria-label=\"search\"\n\t\t\tclass=\"pd-zero bg-transp\"\n\t\t\t:class=\"route.meta.header_search_class\"\n\t\t\t:submit=\"() => router.push({name: 'Search'})\"\n\t\t\t:showSucces=\"false\"\n\t\t\t:showLoader=\"false\"\n\t\t>\n\t\t\t<IconSearch \n\t\t\t\tclass=\"i-semi\"\n\t\t\t\t:fill=\"theme === 'light' ? 'rgb(var(--black))' : 'rgb(var(--white))'\" \n\t\t\t/>\n\t\t</Button>\n\t\n\t\t<Button\n\t\t\taria-label=\"shopcart\"\n\t\t\t:submit=\"a => shopcart.actions.toggleShopcart()\" \n\t\t\t:counter=\"shopcart.getters.cartTotalAmount\" \n\t\t\t:showSucces=\"false\"\n\t\t\t:showLoader=\"false\"\n\t\t\tclass=\"pd-zero mn-r-micro\"\n\t\t\t> \n\t\t\t<IconShopcart \n\t\t\t\tclass=\"i-semi\"\n\t\t\t\t:fill=\"theme === 'light' ? 'rgb(var(--black))' : 'rgb(var(--white))'\" \n\t\t\t/>\n\t\t\t<!-- <div class=\"w-max p-small pos-absolute pos-t-100 pos-r-0\">Product Added to Shopcart</div> -->\n\t\t</Button>\n\n\n\t\t<NotificationBadge\n\t\t\tv-if=\"auth.state.user._id\"\n\t\t\t:fill=\"theme === 'light' ? 'rgb(var(--black))' : 'rgb(var(--white))'\" \n\t\t/>\n\n\t\t<Button \n\t\t\taria-label=\"profile\"\n\t\t\tclass=\"pd-zero bg-transp\"\n\t\t\t:submit=\"\n\t\t\t\tauth.state.access.status === false \n\t\t\t\t? \n\t\t\t\ta => router.push({name: 'Sign In'}) \n\t\t\t\t: \n\t\t\t\ta => router.push({ name: 'User Profile', params: { _id: auth.state.user._id }})\n\t\t\t\"\n\t\t\t:showSucces=\"false\"\n\t\t\t:showLoader=\"false\"\n\t\t>\n\t\t\t<IconProfile \n\t\t\t\tclass=\"i-semi\"\n\t\t\t\t:fill=\"theme === 'light' ? 'rgb(var(--black))' : 'rgb(var(--white))'\" \n\t\t\t/>\n\t\t</Button>\n\n\n\n\t\t<Select \n\t\t\tv-if=\"$i18n.availableLocales.length > 1\"\n\t\t\tv-model:select=\"$i18n.locale\"\n\t\t  :options=\"$i18n.availableLocales\"\n\t\t  :property=\"'value'\"\n      class=\"pos-relative flex flex-column gap-small uppercase pd-thin t-semi radius-thin\"\n      :class=\"{\n    \t\t'bg-light t-black': theme === 'light',\n    \t\t'bg-dark t-white': theme === 'dark'  \n    \t}\"\n    />\n  </div>\n</header>\n  \n</template>\n\n<style lang=\"scss\">\n.location-button { \n\t&:hover {\n\t\tbox-shadow: inset 0 0 0 2px rgb(var(--main));\n\t}\n}\n\n.menu-btn {\n  display: block;\n  width: 2rem;\n  height: 2rem;\n  border-radius: 50%;\n  position: relative;\n}\n.menu-btn span,\n.menu-btn__before,\n.menu-btn__after {\n  position: absolute;\n  top: 50%;\n  margin-top: -1px;\n  left: 50%;\n  margin-left: -10px;\n  width: 20px;\n  height: 2px;\n}\n.menu-btn__before,\n.menu-btn__after {\n  display: block;\n  transition: 0.2s;\n}\n.menu-btn__before {\n  transform: translateY(-5px);\n}\n.menu-btn__after {\n  transform: translateY(5px);\n}\n.menu-btn_active .menu-btn__before {\n  transform: rotate(-35deg);\n  width: 10px;\n  transform-origin: left bottom;\n}\n.menu-btn_active .menu-btn__after {\n  transform: rotate(35deg);\n  width: 10px;\n  transform-origin: left top;\n}\n\n.menu-btn_active span:before {\n  transform: rotate(-35deg);\n  width: 10px;\n  transform-origin: left bottom;\n}\n.menu-btn_active span:after {\n  transform: rotate(35deg);\n  width: 10px;\n  transform-origin: left top;\n}\n\n.menu-block {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.menu-nav {\n  background-color: #fff;\n  height: 50px;\n  \n}\n.menu-nav__link {\n  display: inline-block;\n  text-decoration: none;\n  color: #fff;\n  margin-right: 20px;\n}\n.menu-nav__link {\n  transition: 0.5s;\n  transform-origin: right center;\n  transform: translateX(50%);\n  opacity: 0;\n}\n.menu-nav__link_active {\n  transform: translateX(0%);\n  opacity: 1;\n}\n\n</style>",
                  "name": "Header.vue",
                  "size": 7445,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/globals/views/components/partials/LocationSelection.vue",
                  "relativePath": "modules/globals/views/components/partials/LocationSelection.vue",
                  "extension": ".vue",
                  "content": "<template>\n\t<div class=\"t-center flex-center\">\n\t\t<p class=\"h1 mn-b-medium\">🌍</p>\n\t\t\n\t\t<h3 class=\"mn-b-semi\">{{t('title')}}</h3>\n\t\t<p class=\"mn-b-small t-transp p-medium\">{{t('description')}}</p> \n\t\t\n\t\t<Address\n\t\t\t:key=\"$i18n.locale\"\n      :apiKey=\"GOOGLE_MAPS_API_KEY\" \n\n      :locale=\"$i18n.locale\"\n      \n      :address=\"position.address\" \n      :location=\"position.location\"  \n      \n      placeholder=\"Enter your address\"  \n\n      class=\"\n        bg-white radius-tl-medium radius-tr-medium  t-black br-grey-transp-25 br-solid br-2px pd-medium\n      \"\n\n      @update:country=\"newCountry => {\n        position.country = newCountry;\n      }\"\n\t\t  @update:state=\"newState => {\n        position.state = newState;\n      }\"\n\t\t  @update:city=\"newCity => {\n        position.city = newCity;\n      }\"\n      @update:location=\"newLocation => {\n        position.location = newLocation;\n      }\"\n      @update:address=\"newAddress => {\n        position.address = newAddress;\n      }\"\n    />\n\n    <LocationMarker \n    \t:key=\"$i18n.locale\"\n      :apiKey=\"GOOGLE_MAPS_API_KEY\" \n      :locale=\"$i18n.locale\"\n\n\n      :address=\"position.address\" \n      :location=\"position.location\" \n\n      class=\"bg-light radius-bl-medium radius-br-medium h-15r o-hidden\"\n\n      @update:country=\"newCountry => {\n        position.country = newCountry;\n      }\"\n\t\t  @update:state=\"newState => {\n        position.state = newState;\n      }\"\n\t\t  @update:city=\"newCity => {\n        position.city = newCity;\n      }\"\n      @update:location=\"newLocation => {\n        position.location = newLocation;\n      }\"\n      @update:address=\"newAddress => {\n        position.address = newAddress;\n      }\"\n    />\n\t\t\n\t\t<button @click=\"savePosition()\" class=\"w-100 mn-t-medium bg-main radius-extra button\">Save Position</button>\n\t</div>\n</template>\n\n<script setup>\nimport { computed, onMounted, ref } from 'vue'\n// Import components\nimport Address from \"@martyrs/src/components/Address/Address.vue\";\nimport LocationMarker from \"@martyrs/src/components/LocationMarker/LocationMarker.vue\";\n// Import libs\nimport { useRoute, useRouter } from 'vue-router'\nimport { useI18n } from 'vue-i18n'\n\nimport * as globals from '@martyrs/src/modules/globals/views/store/globals.js'\n\n// Accessing router and store\nconst route = useRoute()\nconst router = useRouter()\n\nconst position = ref({\n\tcountry: null,\n  state: null,\n  city: null,\n  address: null,\n  location: null,\n})\n\nfunction savePosition() {\n\tglobals.state.position = { ...position.value };\n\tglobals.state.isOpenLocationPopup = false\n\n\tlocalStorage.setItem('position', JSON.stringify(globals.state.position));\n}\n\nonMounted(() => {\n\tposition.value = { ...globals.state.position }\n})\n\n// Localization\nconst text = {\n  messages: {\n    en: {\n\t    title: \"Choose Your Location\",\n\t    description: \"Enter your address or select it on the map to see the nearest offers to you.\",\n    },\n    ru: {\n\t\t  title: \"Выбор Локации\",\n\t    description: \"Пожалуйста, выберите вашу страну из списка ниже, чтобы увидеть варианты доставки и другую актуальную информацию:\"\n\t  }\n\t}\n}\nconst { t } = useI18n(text)\n</script>\n\n<style lang=\"scss\">\n</style>\n",
                  "name": "LocationSelection.vue",
                  "size": 3117,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/globals/views/components/partials/Navigation.vue",
                  "relativePath": "modules/globals/views/components/partials/Navigation.vue",
                  "extension": ".vue",
                  "content": "<script setup>\nimport { ref, watch, computed } from 'vue'\nimport { useRouter, useRoute } from 'vue-router'\n\nimport IconChevronBottom from '@martyrs/src/modules/icons/navigation/IconChevronBottom.vue'\n\nimport * as globals from '@martyrs/src/modules/globals/views/store/globals.js'\nimport * as auth from '@martyrs/src/modules/auth/views/store/auth.js'\n\nconst router = useRouter()\nconst route = useRoute()\n\nimport Dropdown from '@martyrs/src/components/Dropdown/Dropdown.vue'\nimport Spoiler from '@martyrs/src/components/Spoiler/Spoiler.vue'\n\nconst props = defineProps({\n  navigationItems: Array,\n  theme: {\n    type: String,\n    default: \"light\"\n  },\n  stateSidebar: {\n    type: Boolean,\n    default: false\n  },\n  horizontal: {\n    type: Boolean,\n    default: false\n  }\n})\n\nconst emits = defineEmits([\n  'closeSidebar'\n])\n\nconst expandedSections = ref([])\n\nconst toggleSection = (title) => {\n  if (!props.stateSidebar) {\n    if (menuItems.value.flatMap(section => section.items).find(item => item.title === title && item.subItems)) {\n      emits('closeSidebar')\n      setTimeout(() => {\n        expandedSections.value.push(title)\n      }, 50)\n    }\n    return\n  }\n  \n  const index = expandedSections.value.indexOf(title)\n\n  if (index === -1) {\n    expandedSections.value.push(title)\n  } else {\n    expandedSections.value.splice(index, 1)\n  }\n}\n\nconst isSectionExpanded = (title) => {\n  return expandedSections.value.includes(title)\n}\n\n// Process route functions with auth data and route\nconst processRoute = (routeFn) => {\n  if (typeof routeFn === 'function') {\n    return routeFn(auth.state, route)\n  }\n  return routeFn\n}\n</script>\n\n<template>\n  <nav\n    class=\"transition-quint-out o-x-hidden h-100\"\n    :class=\"[\n      stateSidebar ? 'pd-small' : 'pd-micro',\n      horizontal ? 'w-100 desktop-only flex flex-center flex-nowrap o-y-hidden' : 'o-y-scroll rows-1',\n    ]\"\n  >\n    <div \n      v-for=\"section in props.navigationItems\" \n      v-show=\"!section.visible || (typeof section.visible === 'function' ? section.visible(auth.state, route) : true)\"\n      :key=\"section.category\" \n      class=\"transition-quint-out\"\n      :class=\"[\n        horizontal ? 'w-max flex-child-default flex flex-nowrap' : '',\n        stateSidebar && !horizontal ? 'mn-t-medium' : '',\n      ]\"\n    >\n      <div \n        class=\"uppercase t-medium t-transp p-small\"\n        :class=\"{ \n          'hidden': !stateSidebar || horizontal, \n          'visible': stateSidebar && !horizontal,\n          't-black': theme === 'light',\n          't-white':  theme === 'dark'\n        }\"\n      >\n        {{ section.category }}\n      </div>\n\n      <ul \n        :class=\"[\n          horizontal ? 'w-100 gap-micro flex flex-nowrap' : 'flex flex-column gap-micro',\n        ]\"\n      >\n        <li \n          v-for=\"item in section.items\" \n          v-show=\"!item.visible || (typeof item.visible === 'function' ? item.visible(auth.state, route) : true)\"\n          class=\"w-100 pos-relative\"\n          :key=\"item.title\"\n           \n        >\n        <button\n          class=\"transition-quint-out w-100 flex radius-small flex-nowrap cursor-pointer flex-v-center\"\n          @click=\"item.route ? (isPhone ? (stateSidebar = false) : null, route.path !== processRoute(item.route) ? router.push(processRoute(item.route)) : null) : null\"\n          :class=\"[\n              horizontal ? 'pd-thin' : '',\n              item.route && route.path === processRoute(item.route) ? theme === 'light' ? 'bg-light' : 'bg-dark' : '',\n              theme === 'light' ? 'hover-bg-light' : 'hover-bg-dark'\n            ]\"\n        >\n          <div v-if=\"!horizontal\" class=\"w-100 flex-child-default w-max-big flex flex-center aspect-1x1\">\n            <component \n              v-if=\"item.iconComponent\" \n              :is=\"item.iconComponent\" \n              class=\"i-medium flex-child-default\" \n              :fill=\"globals.state.theme.darkmode || theme === 'dark' ? 'rgba(255,255,255,0.7)' : 'rgba(0,0,0,0.25)'\"\n            />\n            <span \n              v-if=\"!item.iconComponent \" \n              class=\"p-medium\"\n            >\n              {{ item.icon }}\n            </span>\n          </div>\n          \n          <span\n            class=\"transition-quint-out w-100 t-left t-medium\"\n            :class=\"{ 'hidden': !stateSidebar && !horizontal, 'visible': stateSidebar || horizontal }\"\n          >\n            {{ item.title }}\n          </span>\n          \n          <span\n            v-if=\"item.subItems && stateSidebar && !horizontal\"\n            class=\"mn-l-auto mn-r-small sidebar-dropdown-icon\"\n            :class=\"{ 'rotate-180': isSectionExpanded(item.title) }\"\n            @click.stop=\"toggleSection(item.title)\" \n          >\n             <IconChevronBottom :class=\"{ 'rotate-180 mn-t-micro-negative': isOpen }\" :fill=\" theme === 'dark' ? 'rgb(var(--white))': 'rgb(var(--black))'\" class=\"i-small\"/>\n          </span>\n        </button>\n        <transition\n          enter-active-class=\"dropdown-enter\"\n          leave-active-class=\"dropdown-leave\"\n          enter-from-class=\"dropdown-enter-from\"\n          enter-to-class=\"dropdown-enter-to\"\n          leave-from-class=\"dropdown-leave-from\"\n          leave-to-class=\"dropdown-leave-to\"\n        >\n          <ul\n            v-if=\"item.subItems && isSectionExpanded(item.title) && stateSidebar && !horizontal\"\n            class=\"mn-l-small mn-t-thin\"\n          >\n            <li v-for=\"subItem in item.subItems\" :key=\"subItem.title\">\n              \n              <a \n               @click=\"subItem.route ? (isPhone ? (stateSidebar = false) : null, route.path !== processRoute(subItem.route) ? router.push(processRoute(subItem.route)) : null) : null\"\n                href=\"#\" \n                class=\"transition-quint-out flex flex-v-center flex-nowrap gap-thin pd-thin radius-small\"\n                :class=\"[\n                  subItem.route && route.path === processRoute(subItem.route) ? theme === 'light' ? 'bg-light' : 'bg-dark' : '',\n                    theme === 'light' ? 'hover-bg-light' : 'hover-bg-dark'\n                    ]\"\n              >\n                <component \n                  v-if=\"subItem.iconComponent\" \n                  :is=\"subItem.iconComponent\" \n                  class=\"i-medium\" \n                 :fill=\"globals.state.theme.darkmode || theme === 'dark' ? 'rgba(255,255,255,0.7)' : 'rgba(0,0,0,0.25)'\"\n                />\n                <span v-else class=\"\">{{ subItem.icon }}</span>\n                <span class=\"w-100\">{{ subItem.title }}</span>\n              </a>\n            </li>\n          </ul>\n        </transition> \n        </li>\n      </ul>\n    </div>\n  </nav>\n</template>\n\n<style scoped>\n\n.rotate-180 {\n  transform: rotate(180deg);\n}\n\n.hidden {\n/*  opacity: 0;*/\n  width: 0;\n  display: none;\n}\n\n.visible {\n/*  opacity: 1;*/\n  display: block;\n}\n\n/* Dropdown animations */\n.dropdown-enter, .dropdown-leave {\n  transition: all 0.3s ease-in-out;\n}\n\n.dropdown-enter-from, .dropdown-leave-to {\n  opacity: 0;\n  transform: translateY(-0.5rem);\n}\n\n.dropdown-enter-to, .dropdown-leave-from {\n  opacity: 1;\n  transform: translateY(0);\n}\n</style>",
                  "name": "Navigation.vue",
                  "size": 7063,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/globals/views/components/partials/NavigationBar.vue",
                  "relativePath": "modules/globals/views/components/partials/NavigationBar.vue",
                  "extension": ".vue",
                  "content": "<template>\n\t<header \n\t\tclass=\"pos-sticky w-100 z-index-3 flex-center flex t-center pd-medium\"\n\t>\n\t\t<transition name=\"slideIn\"  mode=\"out-in\">\n\t\t\t<svg \n\t\t\t\tv-if=\"!route.meta.title_hide\"\n\t\t\t\t@click=\"handleBackNavigation()\" \n\t\t\t\tclass=\"pos-absolute cursor-pointer i-semi pos-l-medium\"\n\t\t\t\twidth=\"12\"\n\t\t\t\theight=\"22\"\n\t\t\t\tviewBox=\"0 0 12 22\"\n\t\t\t\tfill=\"none\"\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t>\n\t\t\t\t<path fill=\"rgb(var(--main))\" d=\"M9.70312 20.7969C10.125 21.2188 10.8281 21.2188 11.2969 20.7969C11.7188 20.375 11.7188 19.6719 11.2969 19.2031L3.42188 11L11.2969 2.79688C11.7188 2.32813 11.7188 1.625 11.2969 1.20313C10.8281 0.734377 10.125 0.781252 9.70312 1.20313L1.07812 10.2031C0.84375 10.4375 0.75 10.7188 0.75 11C0.75 11.2813 0.84375 11.5625 1.07812 11.7969L9.70312 20.7969Z\" />\n\t\t\t</svg>\n\t\t</transition>\n\n\t\t<transition name=\"slideIn\"  mode=\"out-in\">\n\t\t\t<div :key=\"route.meta.title\" class=\"header-title\">\n\t\t\t\t<component\n\t\t\t\t\tv-if=\"props.logotype && route.meta.title_hide\"\n\t\t\t\t  :is=\"props.logotype\"\n\t\t\t\t  :theme=\"theme\"\n\t\t\t\t/>\n\n\t\t\t\t<p v-else class=\"t-semi h-2r lh-semi h4 d-block\" >\n\t\t\t\t\t{{ formateText(globals.state.navigation_bar.name || route.meta?.title?.[locale.toLowerCase()] || route.name) }}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</transition>\n\n\t\t<div class=\"flex-nowrap flex gap-regular pos-absolute pos-r-medium\">\n\t\t\t<transition name=\"slideIn\"  mode=\"out-in\">\n\t\t\t\t<Button\n\t\t\t\t\tv-if=\"route.meta.title_hide || route.meta.showShopCart\"\n\t\t\t\t\t:submit=\"a => shopcart.actions.toggleShopcart()\" \n\t\t\t\t\t:counter=\"shopcart.getters.cartTotalAmount\" \n\t\t\t\t\t:showSucces=\"false\"\n\t\t\t\t\t:showLoader=\"false\"\n\t\t\t\t\tclass=\"cursor-pointer pd-zero \"\n\t\t\t\t\t> \n\t\t\t\t\t<IconShopcart class=\"i-semi\" fill=\"rgb(var(--main))\" />\n\t\t\t\t</Button>\n\t\t\t</transition>\n\n\t    <transition-group v-if=\"actions.length > 0\" name=\"slideIn\" class=\"i-semi\" tag=\"div\">\n\t      <template v-for=\"(item, index) in actions\" :key=\"index\">\n\t        <component\n\t\t\t\t\t\tv-if=\"typeof item.condition === 'function' ? item.condition(router, route) : item.condition\"\n\t          :is=\"item.component\"\n\t          v-bind=\"item.props\"\n\t          @click=\"item.action(router, route)\"\n\t          class=\"i-semi cursor-pointer \"\n\t        />\n\t      </template>\n\t    </transition-group>\n\n\t\t\t<transition name=\"slideIn\"  mode=\"out-in\">\n\t\t\t\t<IconProfile \n\t\t\t\t\tv-if=\"route.meta.title_hide\"\n\t\t\t\t\t@click=\"handleToggle()\" \n\t\t\t\t\tclass=\"cursor-pointer i-semi\"\n\t\t\t\t\tfill=\"rgb(var(--main))\" \n\t\t\t\t/>\n\t\t\t</transition>\n\t\t</div>\n\t</header>\n</template>\n\n<script setup>\n\timport { ref, onMounted, onUnmounted, computed } from 'vue' \n\timport { useRoute, useRouter } from 'vue-router'\n\timport { useI18n } from 'vue-i18n'\n\t\n  import IconShopcart from '@martyrs/src/modules/icons/entities/IconShopcart.vue'\n\timport IconProfile from '@martyrs/src/modules/icons/entities/IconProfile.vue'\n\n\timport Button \t\t\t\tfrom '@martyrs/src/components/Button/Button.vue'\n\n\timport * as globals from '@martyrs/src/modules/globals/views/store/globals.js'\n\timport * as shopcart from '@martyrs/src/modules/orders/store/shopcart.js'\n\timport * as auth from '@martyrs/src/modules/auth/views/store/auth.js'\n\n\t\t// Props\n\tconst props = defineProps({\n    theme: {\n    \ttype: String,\n\t    default: \"light\"\n    },\n    logotype: {\n\t    type: Object\n\t  }\n  });\n\n\tconst router = useRouter()\n\tconst route = useRoute()\n\n\tconst { t, mergeLocaleMessage, locale } = useI18n();\n\n\tconst actions = computed(() => globals.state.navigation_bar.actions || route.meta?.actions || [])\n\n\tfunction handleBackNavigation() {\n\t    if (route.query?.afterAuth)  { \n\t    \trouter.push({name: 'Home'}) \n\t    } else {\n\t    \trouter.back();\n\t    }\n\t}\n\n\tfunction handleToggle() {\n\t\tif (auth.state.access.status === false) {\n\t\t\trouter.push({name: 'Sign In'}) \n\t\t} else {\n\t\t\trouter.push({ name: 'User Profile', params: { _id: auth.state.user._id }})\n\t\t}\n\t}\n</script>\n\n<style lang=\"scss\">\n\t.header-shopcart {\n\t\tposition: absolute;\n\t\tright: 4.25rem;\n\t}\n\n\t.header-title {\n\t\tpointer-events: none;\n\t}\n\n\t.slideIn-enter-active,\n\t.slideIn-leave-active {\n\t\ttransition: all  0.33s cubic-bezier(0.4, 0, 0.2, 1);\n\t}\n\n\t.slideIn-enter-from,\n\t.slideIn-leave-to {\n\t\topacity: 0;\n\t\ttransform: translateX(10px);\n\n\t\tspan {\tposition: absolute; } \n\t}\n\n\t.slideY-enter-active,\n\t.slideY-leave-active {\n\t\ttransition: all  0.33s cubic-bezier(0.4, 0, 0.2, 1);\n\t}\n\n\t.slideY-enter-from,\n\t.slideY-leave-to {\n\t\topacity: 0;\n\t\ttransform: translateY(50px);\n\n\t\tspan {\tposition: absolute; } \n\t}\n</style>",
                  "name": "NavigationBar.vue",
                  "size": 4402,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/globals/views/components/partials/SearchBar.vue",
                  "relativePath": "modules/globals/views/components/partials/SearchBar.vue",
                  "extension": ".vue",
                  "content": "<template>\n  <BlockSearch\n    :collapsible=\"isMobile\"\n    class=\"mn-r-big mn-l-big\"\n  />\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { useI18n } from 'vue-i18n'\nimport BlockSearch from '@martyrs/src/modules/globals/views/components/blocks/BlockSearch.vue'\n\nconst { t, te } = useI18n({ messages: {\n  \"en\": {\n    \"navigation\": {\n      \"home\": \"Home\",\n      \"catalog\": \"Catalog\",\n      \"rents\": \"My Rents\",\n      \"community\": \"Community\",\n      \"profile\": \"Profile\"\n    }\n  }\n}})\n\nconst isMobile = ref(false)\n\n// For SSR environment, we need to check client-side only\nif (typeof window !== 'undefined') {\n  isMobile.value = window.matchMedia('(max-width: 767px)').matches\n}\n</script>",
                  "name": "SearchBar.vue",
                  "size": 747,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/globals/views/components/partials/Sidebar.vue",
                  "relativePath": "modules/globals/views/components/partials/Sidebar.vue",
                  "extension": ".vue",
                  "content": "<script setup>\nimport { ref, watch } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useGlobalMixins } from \"@martyrs/src/modules/globals/views/mixins/mixins.js\"\n\nimport * as globals from '@martyrs/src/modules/globals/views/store/globals.js'\n\nconst props = defineProps({\n  theme: {\n    type: String,\n    default: \"light\"\n  },\n  stateSidebar: {\n    type: Boolean,\n    default: false\n  },\n  width: {\n    type: String,\n    default: 'w-15r'\n  },\n  widthHidden:{\n    type: String,\n    default: 'w-3r '\n  },\n})\n\nconst emits = defineEmits([\n  'closeSidebar'\n])\n\nconst { isPhone, isTablet } = useGlobalMixins()\n\nconst router = useRouter()\n\nconst toggleSidebar = () => {\n  emit('closeSidebar')\n}\n\nrouter.beforeEach((to, from) => {\n   if (isPhone() || isTablet()) {\n    emits('closeSidebar')\n  }\n})\n\n</script>\n\n<template>\n  <aside\n    class=\"transition-quint-out w-min-0 o-hidden flex-child-default z-index-2  br-r br-solid  flex flex-column h-100\"\n    :class=\"[\n      stateSidebar\n      ? `${width} w-min-10 tablet:w-min-100 tablet:w-100 mobile:w-min-100 mobile:w-100`\n      : `${widthHidden} mobile:w-0 br-zero`,\n      // \n      theme === 'light' \n      ? 't-black bg-white br-light'\n      : 't-white bg-black br-dark'\n    ]\"\n  >\n\n    <!-- Slot for navigation content -->\n    <slot></slot>\n\n    <div \n      class=\"br-solid w-100 br-t\"\n      :class=\"{ \n        'pd-micro': !stateSidebar, \n        'pd-small': stateSidebar,\n        'br-light': theme === 'light',\n        'br-dark':  theme === 'dark'\n      }\"\n    >\n      <button\n        @click=\"() => globals.actions.toggleTheme()\"\n        class=\"transition-quint-out flex w-100 flex-center radius-small cursor-pointer flex-nowrap\"\n        :class=\"[\n          stateSidebar ? 'pd-thin justify-between' : 'w-100 justify-center',\n          theme === 'light' ? 'hover-bg-light' : 'hover-bg-dark'\n        ]\"\n      >\n        <span \n          class=\"w-100 t-nowrap transition-quint-out  t-left t-medium mn-r-thin\"\n          :class=\"{ 'hidden': !stateSidebar, 'visible': stateSidebar }\"\n        >\n          Dark Mode\n        </span>\n        <span class=\"aspect-1x1 flex-child-default w-max-big w-100 flex flex-center \">\n          {{ globals.state.theme.darkmode ? '🌙' : '☀️' }}\n        </span>\n      </button>\n    </div>\n  </aside>\n</template>\n\n<style scoped>\n.hidden {\n  opacity: 0;\n  width: 0;\n  display: none;\n}\n\n.visible {\n  opacity: 1;\n  display: block;\n}\n\n/* Scrollbar styles */\n::-webkit-scrollbar {\n  width: 6px;\n}\n\n::-webkit-scrollbar-track {\n  background: transparent;\n}\n\n::-webkit-scrollbar-thumb {\n  background-color: var(--grey-micro);\n  border-radius: 3px;\n}\n\n::-webkit-scrollbar-thumb:hover {\n  background-color: var(--grey-small);\n}\n</style>  ",
                  "name": "Sidebar.vue",
                  "size": 2703,
                  "type": "source"
                }
              ]
            },
            "sections": {
              "_files": [
                {
                  "path": "../../src/modules/globals/views/components/sections/SectionPageTitle.vue",
                  "relativePath": "modules/globals/views/components/sections/SectionPageTitle.vue",
                  "extension": ".vue",
                  "content": "<template>\n  <div>\n    <header class=\"flex-v-center flex-nowrap flex\">\n      <h1 class=\"h2 mn-r-auto\">{{ title }}</h1>\n\n      <template  \n        v-for=\"action in actions\"   \n        v-if=\"actions && actions.length > 0\"\n      >\n        <router-link\n          v-if=\"action.to\"\n          :key=\"action.to\"\n          :to=\"action.to\"\n          :class=\"action.class || 'radius-extra pd-small pd-r-medium pd-l-medium p-medium uppercase t-medium hover-scale-1 transition-ease cursor-pointer t-white bg-second flex-center flex'\"\n        >\n          {{ action.label }}\n        </router-link>\n\n        <button\n          v-if=\"action.method\"\n          @click=\"action.method\"\n          :class=\"action.class || 'radius-extra pd-thin uppercase t-medium hover-scale-1 transition-ease cursor-pointer t-white bg-second flex-center flex'\"\n        >\n          {{ action.label }}\n        </button>\n      </template>\n    </header>\n\n    <Tab\n      v-if=\"tabs\"\n      :selected=\"tabs_current\"\n      @update:selected=\"updateTabsCurrent\"\n      :tabs=\"tabs\"\n      class=\"mn-t-small pd-thin bg-light radius-small w-max t-nowrap o-scroll p-medium\"\n    />\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nimport Tab from '@martyrs/src/components/Tab/Tab.vue'\n\nconst emits = defineEmits([\n  'update:tabs_current'\n])\n\nconst props = defineProps({\n  title: String,\n  actions: Array,\n  tabs: Array,\n  tabs_current: [Object, String]\n});\n\nconst updateTabsCurrent = (newValue) => {\n  emits('update:tabs_current', newValue); // Emitting to parent component\n}\n</script>\n\n<style scoped>\n</style>\n",
                  "name": "SectionPageTitle.vue",
                  "size": 1570,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/globals/views/components/sections/Title.vue",
                  "relativePath": "modules/globals/views/components/sections/Title.vue",
                  "extension": ".vue",
                  "content": "<template>\n  <header class=\"w-100\" itemprop=\"name\">\n      <h2 class=\"h1\" itemprop=\"headline\">\n        <span class=\"text-fade-in\">\n          <span class=\"text-splitted\">{{ text }}</span>\n        </span>\n      </h2>\n    </header>\n</template>\n\n<script setup>\nimport { ref, toRefs } from 'vue'\n\nconst props = defineProps({\n  text: {\n    type: String,\n    default: 'Dreamy Moments Captured'\n  }\n})\n\nconst { text } = toRefs(props)\n</script>",
                  "name": "Title.vue",
                  "size": 434,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/globals/views/components/sections/Walkthrough.vue",
                  "relativePath": "modules/globals/views/components/sections/Walkthrough.vue",
                  "extension": ".vue",
                  "content": "<template>\n\t<div class=\"pos-fixed pos-t-0 pos-l-0 w-100 h-100vh z-index-6 bg-light flex embla\" ref=\"emblaNode\">\n    <div class=\"w-100 embla__container z-index-1\">\n      <div\n        v-for=\"(slide, index) in walkthrough\"\n        :key=\"index\"\n        class=\"flex-center pd-thin t-center flex-column flex embla__slide\"\n        :style=\"{ opacity: tweenSlides.length ? tweenSlides[index] : undefined, transform: tweenSlides[index] ? `scale(${tweenSlides[index]})` : '' }\"\n      >\n        <img loading=\"lazy\" class=\"w-100\" :src=\"require(`@/assets/images/walkthrough/walkthrough_${index}.png`).default\">\n      \t<h2 class=\"mn-b-small\">{{slide.title}}</h2>\n      \t<p class=\"p-big t-transp\">{{slide.subtitle}}</p>\n      </div>\n\n      <div\n      \tclass=\"flex-center flex-column flex pd-big embla__slide\"\n      >\n      \t<img loading=\"lazy\" \n      \t\t:src=\"'/logo/logo_square.svg'\" \n      \t\tclass=\"i-extra radius-medium mn-b-small\"\n      \t>\n      \t<h2 class=\"t-center mn-b-small\">Welcome to The&nbsp;Commune</h2>\n      \t<p class=\"p-medium t-transp mn-b-semi mn-r-auto mn-l-auto t-center\">Join our community to connect, share, and learn from the best. Discover new opportunities and grow with us!</p>\n    \n      \t<button @click=\"openFirstRoute('Sign Up')\" class=\"w-100 bg-main button mn-b-thin\">Sign Up</button> \n      \t<button @click=\"openFirstRoute('Sign In')\" class=\"w-100 bg-white button mn-b-semi\">Sign In</button>\n\n\t      <p class=\"p-medium text-center\">Or explore as a guest:</p> \n      \t<button @click=\"setFirstUseFalse()\" class=\"button bg-white w-100\">Continue without registration</button>\n\t    </div>\n\n    </div>\n    \n    <!-- <WavesBackground\n\t    :style=\"{ transform: tweenValues[0] ? `translateX(${tweenValues[0]}%)` : '' }\"\n    \tclass=\"pos-fixed pos-t-0 pos-l-0 z-index-0\"\n    /> -->\n    <!-- <ColorsBackground \n\t    :style=\"{ transform: tweenValues[0] ? `translateX(${tweenValues[0]}%)` : '' }\"\n    \tclass=\"pos-fixed pos-t-0 pos-l-0 z-index-0\"\n    /> -->\n    \n    <div class=\"z-index-5 h-4r pos-absolute pos-b-1r pd-small flex-nowrap flex flex-center gap-small w-100 embla__dots\">\n\t    <div\n\t      v-for=\"(snap, index) in scrollSnaps\"\n\t      :key=\"index\"\n\t      @click=\"scrollTo(index)\"\n\t      :class=\"[\n\t        'embla__dot i-small radius-extra br-solid br-main br-2px',\n\t\t\t\t\t{ 'bg-light': index !== selectedIndex },\n\t        { 'bg-main': index === selectedIndex }\n\t      ]\"\n\t    >\n\t\t  </div>\n\n\t\t  <div @click.native=\"setFirstUseFalse()\" class=\"h-100 w-6r pos-b-0r flex-nowrap flex flex-center pos-r-1r pos-relative radius-small br-solid br-main br-2px uppercase t-semi p-big t-main pos-absolute\"> \n\t\t  \tskip\n\t\t  </div>\n\t  </div>\n\t</div>\n\n</template>\n\n<script setup>\n\timport { ref, onMounted } from 'vue';\n\timport { useRoute, useRouter } from 'vue-router'\n\n\timport emblaCarouselVue from 'embla-carousel-vue'; // Assuming a Vue version exists\n\n\t// import WavesBackground from '@/components/icons/backgrounds/WavesBackground.vue'\n\t// import ColorsBackground from '@/components/icons/backgrounds/ColorsBackground.vue'\n\n\tconst props = defineProps(['slides', 'options']);\n\tconst emits = defineEmits(['updateFirstUse'])\n\tconst router = useRouter()\n\n\t// Set firstUse\n\timport { Preferences } from '@capacitor/preferences';\n\n\tasync function setFirstUseFalse() {\n    await Preferences.set({\n      key: 'first-use',\n      value: JSON.stringify(false),\n    });\n\n    emits('updateFirstUse', false);\n  }\n\n  async function openFirstRoute(routeName) {\n\t\tawait router.push({name: routeName})\n\n\t\tawait Preferences.set({\n      key: 'first-use',\n      value: JSON.stringify(false),\n    });\n\n\t\temits('updateFirstUse', false);\n\t}\n\t// Set Slider\n\tlet walkthrough = [{\n\t\ttitle: 'Communicate',\n\t\tsubtitle: 'Write posts, comments and put likes.'\n\t},{\n\t\ttitle: 'Party & Fun',\n\t\tsubtitle: 'Check the calendar for new events.'\n\t},{\n\t\ttitle: 'Discover',\n\t\tsubtitle: 'Browse the gallery of photos.'\n\t}]\n\n\tconst [emblaNode, emblaApi] = emblaCarouselVue({ loop: false })\n\n\tconst selectedIndex = ref(0);\n\tconst scrollSnaps = ref([]);\n\tconst TWEEN_FACTOR = 3\n\tconst tweenValues = ref([])\n\tconst tweenSlides = ref([])\n\n\tconst scrollTo = (index) => emblaApi.value && emblaApi.value.scrollTo(index);\n\n\tconst onInit = (embla) => {\n\t  scrollSnaps.value = emblaApi.value.scrollSnapList();\n\t};\n\n\tconst onSelect = (embla) => {\n\t  selectedIndex.value = emblaApi.value.selectedScrollSnap();\n\t};\n\n\tconst onScroll = (embla) => {\n    const engine = emblaApi.value.internalEngine()\n    const scrollProgress = emblaApi.value.scrollProgress()\n\n    const stylesOpacity = emblaApi.value.scrollSnapList().map((scrollSnap, index) => {\n\t    let diffToTarget = scrollSnap - scrollProgress\n\n\t    if (engine.options.loop) {\n\t      engine.slideLooper.loopPoints.forEach((loopItem) => {\n\t        const target = loopItem.target()\n\t        if (index === loopItem.index && target !== 0) {\n\t          const sign = Math.sign(target)\n\t          if (sign === -1) diffToTarget = scrollSnap - (1 + scrollProgress)\n\t          if (sign === 1) diffToTarget = scrollSnap + (1 - scrollProgress)\n\t        }\n\t      })\n\t    }\n\t    const tweenValue = 1 - Math.abs(diffToTarget * TWEEN_FACTOR)\n\t    return  Math.min(Math.max(tweenValue, 0), 1)\n\t  })\n\n\t\ttweenSlides.value = stylesOpacity\n\n    const styles = emblaApi.value.scrollSnapList().map((scrollSnap, index) => {\n      let diffToTarget = scrollSnap - scrollProgress\n\n      if (engine.options.loop) {\n        engine.slideLooper.loopPoints.forEach((loopItem) => {\n          const target = loopItem.target()\n          if (index === loopItem.index && target !== 0) {\n            const sign = Math.sign(target)\n            if (sign === -1) diffToTarget = scrollSnap - (1 + scrollProgress)\n            if (sign === 1) diffToTarget = scrollSnap + (1 - scrollProgress)\n          }\n        })\n      }\n      return diffToTarget * (1 / TWEEN_FACTOR) * 100\n    })\n\n    tweenValues.value = styles\n  }\n\n\n\tonMounted(async() => {\n\t  onInit(emblaApi);\n\t  onSelect(emblaApi);\n\t  onScroll(emblaApi);\n\n\t  emblaApi.value.on('reInit', onInit);\n\t  emblaApi.value.on('reInit', onSelect);\n\t  emblaApi.value.on('select', onSelect);\n\t  emblaApi.value.on('scroll', onScroll)\n\t});\n</script>\n\n<style lang=\"scss\">\n\t.embla {\n    overflow: hidden;\n  }\n  .embla__container {\n    display: flex;\n  }\n  .embla__slide {\n    flex: 0 0 100%;\n    min-width: 0;\n  }\n</style>\n",
                  "name": "Walkthrough.vue",
                  "size": 6310,
                  "type": "source"
                }
              ]
            }
          }
        }
      },
      "governance": {
        "controllers": {
          "factories": {
            "_files": [
              {
                "path": "../../src/modules/governance/controllers/factories/initiatives.controller.js",
                "relativePath": "modules/governance/controllers/factories/initiatives.controller.js",
                "extension": ".js",
                "content": "export default (function (db) {\n  return {\n    getAllInitiatives: async (req, res) => {\n      try {\n        const initiatives = await db.initiative.find();\n        res.json(initiatives);\n      } catch (error) {\n        console.log(error);\n        res.status(500).json({ message: 'Error fetching initiatives', error });\n      }\n    },\n    getInitiativeById: async (req, res) => {\n      try {\n        const initiative = await db.initiative.findByPk(req.params.id);\n        if (initiative) {\n          res.json(initiative);\n        } else {\n          res.status(404).json({ message: 'Initiative not found' });\n        }\n      } catch (error) {\n        res.status(500).json({ message: 'Error fetching initiative', error });\n      }\n    },\n    createInitiative: async (req, res) => {\n      try {\n        const newInitiative = await db.initiative.create(req.body);\n        res.status(201).json(newInitiative);\n      } catch (error) {\n        console.log(error);\n        res.status(400).json({ message: 'Error creating initiative', error });\n      }\n    },\n    updateInitiative: async (req, res) => {\n      try {\n        const updated = await db.initiative.update(req.body, {\n          where: { id: req.params.id },\n        });\n        if (updated[0] === 1) {\n          res.json({ message: 'Initiative updated successfully' });\n        } else {\n          res.status(404).json({ message: 'Initiative not found' });\n        }\n      } catch (error) {\n        res.status(400).json({ message: 'Error updating initiative', error });\n      }\n    },\n    deleteInitiative: async (req, res) => {\n      try {\n        const deleted = await db.initiative.destroy({\n          where: { id: req.params.id },\n        });\n        if (deleted) {\n          res.json({ message: 'Initiative deleted successfully' });\n        } else {\n          res.status(404).json({ message: 'Initiative not found' });\n        }\n      } catch (error) {\n        res.status(500).json({ message: 'Error deleting initiative', error });\n      }\n    },\n    approveInitiative: async (req, res) => {\n      try {\n        const initiative = await db.initiative.findByPk(req.params.id);\n        if (initiative) {\n          initiative.status = 'approved';\n          await initiative.save();\n          res.json({ message: 'Initiative approved successfully' });\n        } else {\n          res.status(404).json({ message: 'Initiative not found' });\n        }\n      } catch (error) {\n        res.status(500).json({ message: 'Error approving initiative', error });\n      }\n    },\n    rejectInitiative: async (req, res) => {\n      try {\n        const initiative = await db.initiative.findByPk(req.params.id);\n        if (initiative) {\n          initiative.status = 'rejected';\n          await initiative.save();\n          res.json({ message: 'Initiative rejected successfully' });\n        } else {\n          res.status(404).json({ message: 'Initiative not found' });\n        }\n      } catch (error) {\n        res.status(500).json({ message: 'Error rejecting initiative', error });\n      }\n    },\n  };\n});\n",
                "name": "initiatives.controller.js",
                "size": 3042,
                "type": "source"
              },
              {
                "path": "../../src/modules/governance/controllers/factories/tasks.controller.js",
                "relativePath": "modules/governance/controllers/factories/tasks.controller.js",
                "extension": ".js",
                "content": "export default (function (db) {\n  return {\n    getAllTasks: async (req, res) => {\n      try {\n        const tasks = await db.task.findAll();\n        res.json(tasks);\n      } catch (error) {\n        res.status(500).json({ message: 'Error fetching tasks', error });\n      }\n    },\n    getTaskById: async (req, res) => {\n      try {\n        const task = await db.task.findByPk(req.params.id);\n        if (task) {\n          res.json(task);\n        } else {\n          res.status(404).json({ message: 'Task not found' });\n        }\n      } catch (error) {\n        res.status(500).json({ message: 'Error fetching task', error });\n      }\n    },\n    createTask: async (req, res) => {\n      try {\n        const newTask = await db.task.create(req.body);\n        res.status(201).json(newTask);\n      } catch (error) {\n        res.status(400).json({ message: 'Error creating task', error });\n      }\n    },\n    updateTask: async (req, res) => {\n      try {\n        const updated = await db.task.update(req.body, {\n          where: { id: req.params.id },\n        });\n        if (updated[0] === 1) {\n          res.json({ message: 'Task updated successfully' });\n        } else {\n          res.status(404).json({ message: 'Task not found' });\n        }\n      } catch (error) {\n        res.status(400).json({ message: 'Error updating task', error });\n      }\n    },\n    deleteTask: async (req, res) => {\n      try {\n        const deleted = await db.task.destroy({\n          where: { id: req.params.id },\n        });\n        if (deleted) {\n          res.json({ message: 'Task deleted successfully' });\n        } else {\n          res.status(404).json({ message: 'Task not found' });\n        }\n      } catch (error) {\n        res.status(500).json({ message: 'Error deleting task', error });\n      }\n    },\n    assignTask: async (req, res) => {\n      try {\n        const task = await db.task.findByPk(req.params.id);\n        if (task) {\n          task.assignedTo = req.body.userId;\n          await task.save();\n          res.json({ message: 'Task assigned successfully' });\n        } else {\n          res.status(404).json({ message: 'Task not found' });\n        }\n      } catch (error) {\n        res.status(500).json({ message: 'Error assigning task', error });\n      }\n    },\n    completeTask: async (req, res) => {\n      try {\n        const task = await db.task.findByPk(req.params.id);\n        if (task) {\n          task.status = 'completed';\n          await task.save();\n          res.json({ message: 'Task completed successfully' });\n        } else {\n          res.status(404).json({ message: 'Task not found' });\n        }\n      } catch (error) {\n        res.status(500).json({ message: 'Error completing task', error });\n      }\n    },\n  };\n});\n",
                "name": "tasks.controller.js",
                "size": 2732,
                "type": "source"
              },
              {
                "path": "../../src/modules/governance/controllers/factories/votes.controller.js",
                "relativePath": "modules/governance/controllers/factories/votes.controller.js",
                "extension": ".js",
                "content": "export default (function (db) {\n  return {\n    castVote: async (req, res) => {\n      try {\n        const newVote = await db.vote.create({\n          votingId: req.params.votingId,\n          userId: req.body.userId,\n          choice: req.body.choice,\n        });\n        res.status(201).json(newVote);\n      } catch (error) {\n        res.status(400).json({ message: 'Error casting vote', error });\n      }\n    },\n    getVotesForVoting: async (req, res) => {\n      try {\n        const votes = await db.vote.findAll({\n          where: { votingId: req.params.votingId },\n        });\n        res.json(votes);\n      } catch (error) {\n        res.status(500).json({ message: 'Error fetching votes', error });\n      }\n    },\n    getUserVotes: async (req, res) => {\n      try {\n        const votes = await db.vote.findAll({\n          where: { userId: req.params.userId },\n        });\n        res.json(votes);\n      } catch (error) {\n        res.status(500).json({ message: 'Error fetching user votes', error });\n      }\n    },\n    updateVote: async (req, res) => {\n      try {\n        const updated = await db.vote.update(req.body, {\n          where: { id: req.params.id },\n        });\n        if (updated[0] === 1) {\n          res.json({ message: 'Vote updated successfully' });\n        } else {\n          res.status(404).json({ message: 'Vote not found' });\n        }\n      } catch (error) {\n        res.status(400).json({ message: 'Error updating vote', error });\n      }\n    },\n    deleteVote: async (req, res) => {\n      try {\n        const deleted = await db.vote.destroy({\n          where: { id: req.params.id },\n        });\n        if (deleted) {\n          res.json({ message: 'Vote deleted successfully' });\n        } else {\n          res.status(404).json({ message: 'Vote not found' });\n        }\n      } catch (error) {\n        res.status(500).json({ message: 'Error deleting vote', error });\n      }\n    },\n  };\n});\n",
                "name": "votes.controller.js",
                "size": 1918,
                "type": "source"
              },
              {
                "path": "../../src/modules/governance/controllers/factories/votings.controller.js",
                "relativePath": "modules/governance/controllers/factories/votings.controller.js",
                "extension": ".js",
                "content": "export default (function (db) {\n  return {\n    getAllVotings: async (req, res) => {\n      try {\n        const votings = await db.voting.findAll();\n        res.json(votings);\n      } catch (error) {\n        res.status(500).json({ message: 'Error fetching votings', error });\n      }\n    },\n    getVotingById: async (req, res) => {\n      try {\n        const voting = await db.voting.findByPk(req.params.id);\n        if (voting) {\n          res.json(voting);\n        } else {\n          res.status(404).json({ message: 'Voting not found' });\n        }\n      } catch (error) {\n        res.status(500).json({ message: 'Error fetching voting', error });\n      }\n    },\n    createVoting: async (req, res) => {\n      try {\n        const newVoting = await db.voting.create(req.body);\n        res.status(201).json(newVoting);\n      } catch (error) {\n        res.status(400).json({ message: 'Error creating voting', error });\n      }\n    },\n    updateVoting: async (req, res) => {\n      try {\n        const updated = await db.voting.update(req.body, {\n          where: { id: req.params.id },\n        });\n        if (updated[0] === 1) {\n          res.json({ message: 'Voting updated successfully' });\n        } else {\n          res.status(404).json({ message: 'Voting not found' });\n        }\n      } catch (error) {\n        res.status(400).json({ message: 'Error updating voting', error });\n      }\n    },\n    deleteVoting: async (req, res) => {\n      try {\n        const deleted = await db.voting.destroy({\n          where: { id: req.params.id },\n        });\n        if (deleted) {\n          res.json({ message: 'Voting deleted successfully' });\n        } else {\n          res.status(404).json({ message: 'Voting not found' });\n        }\n      } catch (error) {\n        res.status(500).json({ message: 'Error deleting voting', error });\n      }\n    },\n    startVoting: async (req, res) => {\n      try {\n        const voting = await db.voting.findByPk(req.params.id);\n        if (voting) {\n          voting.status = 'active';\n          voting.startDate = new Date();\n          await voting.save();\n          res.json({ message: 'Voting started successfully' });\n        } else {\n          res.status(404).json({ message: 'Voting not found' });\n        }\n      } catch (error) {\n        res.status(500).json({ message: 'Error starting voting', error });\n      }\n    },\n    endVoting: async (req, res) => {\n      try {\n        const voting = await db.voting.findByPk(req.params.id);\n        if (voting) {\n          voting.status = 'completed';\n          voting.endDate = new Date();\n          await voting.save();\n          res.json({ message: 'Voting ended successfully' });\n        } else {\n          res.status(404).json({ message: 'Voting not found' });\n        }\n      } catch (error) {\n        res.status(500).json({ message: 'Error ending voting', error });\n      }\n    },\n    getVotingResults: async (req, res) => {\n      try {\n        const voting = await db.voting.findByPk(req.params.id, {\n          include: [{ model: db.vote }],\n        });\n        if (voting) {\n          // Здесь вы можете добавить логику для подсчета результатов\n          res.json({ voting, results: 'Результаты голосования' });\n        } else {\n          res.status(404).json({ message: 'Voting not found' });\n        }\n      } catch (error) {\n        res.status(500).json({ message: 'Error fetching voting results', error });\n      }\n    },\n  };\n});\n",
                "name": "votings.controller.js",
                "size": 3422,
                "type": "source"
              }
            ]
          },
          "routes": {
            "_files": [
              {
                "path": "../../src/modules/governance/controllers/routes/initiatives.routes.js",
                "relativePath": "modules/governance/controllers/routes/initiatives.routes.js",
                "extension": ".js",
                "content": "import initiativeFactory from '../factories/initiatives.controller.js';\nexport default (function (app, db, origins, publicPath) {\n  const controller = initiativeFactory(db);\n  app.get('/api/initiatives', controller.getAllInitiatives);\n  app.get('/api/initiatives/:id', controller.getInitiativeById);\n  app.post('/api/initiatives', controller.createInitiative);\n  app.put('/api/initiatives/:id', controller.updateInitiative);\n  app.delete('/api/initiatives/:id', controller.deleteInitiative);\n  app.post('/api/initiatives/:id/approve', controller.approveInitiative);\n  app.post('/api/initiatives/:id/reject', controller.rejectInitiative);\n});\n",
                "name": "initiatives.routes.js",
                "size": 642,
                "type": "source"
              },
              {
                "path": "../../src/modules/governance/controllers/routes/tasks.routes.js",
                "relativePath": "modules/governance/controllers/routes/tasks.routes.js",
                "extension": ".js",
                "content": "import taskFactory from '../factories/tasks.controller.js';\nexport default (function (app, db, origins, publicPath) {\n  const controller = taskFactory(db);\n  app.get('/api/tasks', controller.getAllTasks);\n  app.get('/api/tasks/:id', controller.getTaskById);\n  app.post('/api/tasks', controller.createTask);\n  app.put('/api/tasks/:id', controller.updateTask);\n  app.delete('/api/tasks/:id', controller.deleteTask);\n  app.post('/api/tasks/:id/assign', controller.assignTask);\n  app.post('/api/tasks/:id/complete', controller.completeTask);\n});\n",
                "name": "tasks.routes.js",
                "size": 542,
                "type": "source"
              },
              {
                "path": "../../src/modules/governance/controllers/routes/votes.routes.js",
                "relativePath": "modules/governance/controllers/routes/votes.routes.js",
                "extension": ".js",
                "content": "import voteFactory from '../factories/votes.controller.js';\nexport default (function (app, db, origins, publicPath) {\n  const controller = voteFactory(db);\n  app.post('/api/votings/:votingId/vote', controller.castVote);\n  app.get('/api/votings/:votingId/votes', controller.getVotesForVoting);\n  app.get('/api/users/:userId/votes', controller.getUserVotes);\n  app.put('/api/votes/:id', controller.updateVote);\n  app.delete('/api/votes/:id', controller.deleteVote);\n});\n",
                "name": "votes.routes.js",
                "size": 468,
                "type": "source"
              },
              {
                "path": "../../src/modules/governance/controllers/routes/votings.routes.js",
                "relativePath": "modules/governance/controllers/routes/votings.routes.js",
                "extension": ".js",
                "content": "import votingFactory from '../factories/votings.controller.js';\nexport default (function (app, db, origins, publicPath) {\n  const controller = votingFactory(db);\n  app.get('/api/votings', controller.getAllVotings);\n  app.get('/api/votings/:id', controller.getVotingById);\n  app.post('/api/votings', controller.createVoting);\n  app.put('/api/votings/:id', controller.updateVoting);\n  app.delete('/api/votings/:id', controller.deleteVoting);\n  app.post('/api/votings/:id/start', controller.startVoting);\n  app.post('/api/votings/:id/end', controller.endVoting);\n  app.get('/api/votings/:id/results', controller.getVotingResults);\n});\n",
                "name": "votings.routes.js",
                "size": 632,
                "type": "source"
              }
            ]
          }
        },
        "_files": [
          {
            "path": "../../src/modules/governance/governance.client.js",
            "relativePath": "modules/governance/governance.client.js",
            "extension": ".js",
            "content": "import * as storeInitiatives from './views/store/initiatives.js';\nimport * as storeTasks from './views/store/tasks.js';\nimport * as storeVotes from './views/store/votes.js';\nimport * as storeVotings from './views/store/votings.js';\n\n// Router\nimport { createGovernanceRoutes } from './views/router/goverance.router.js';\n\n// Example initialization function for the Governance module\nfunction initializeGovernance(app, store, router, options = {}) {\n  const route = options.route || 'Home';\n  const routesGovernance = createGovernanceRoutes('', options);\n\n  router.addRoute(route, routesGovernance);\n\n  store.addStore('initiatives', storeInitiatives);\n  store.addStore('tasks', storeTasks);\n  store.addStore('votings', storeVotings);\n  store.addStore('votes', storeVotes);\n}\n\nconst ModuleGovernance = {\n  initialize: initializeGovernance,\n  views: {\n    store: {\n      storeInitiatives,\n      storeTasks,\n      storeVotings,\n      storeVotes,\n    },\n    router: {\n      createGovernanceRoutes,\n    },\n    // components: {\n    //   // Pages\n    //   Initiatives,\n    //   Initiative,\n    //   InitiativeCreate,\n    //   Tasks,\n    //   Task,\n    //   TaskCreate,\n    //   Votings,\n    //   Voting,\n    //   VotingCreate,\n    //   // Blocks\n    //   CardInitiativeItem,\n    //   CardTaskItem,\n    //   CardVotingItem,\n    //   // Sections\n    //   FormInitiativeDetails,\n    //   FormTaskDetails,\n    //   FormVotingDetails,\n    //   VoteForm,\n    //   // Partials\n    //   RewardDisplay,\n    //   VotingResult,\n    //   VoteDisplay,\n    // }\n  },\n};\n\nexport default ModuleGovernance;\n",
            "name": "governance.client.js",
            "size": 1581,
            "type": "source"
          },
          {
            "path": "../../src/modules/governance/governance.server.js",
            "relativePath": "modules/governance/governance.server.js",
            "extension": ".js",
            "content": "import FactoryInitiative from './controllers/factories/initiatives.controller.js';\nimport FactoryTask from './controllers/factories/tasks.controller.js';\nimport FactoryVote from './controllers/factories/votes.controller.js';\nimport FactoryVoting from './controllers/factories/votings.controller.js';\nimport RoutesInitiative from './controllers/routes/initiatives.routes.js';\nimport RoutesTask from './controllers/routes/tasks.routes.js';\nimport RoutesVote from './controllers/routes/votes.routes.js';\nimport RoutesVoting from './controllers/routes/votings.routes.js';\nimport ModelInitiative from './models/initiative.model.js';\nimport ModelTask from './models/task.model.js';\nimport ModelVote from './models/vote.model.js';\nimport ModelVoting from './models/voting.model.js';\nfunction initializeGovernance(app, db, origins, publicPath) {\n  // Setup models in the database object\n  db.initiative = ModelInitiative(db);\n  db.task = ModelTask(db);\n  db.voting = ModelVoting(db);\n  db.vote = ModelVote(db);\n  // Setup routes if the app object is provided\n  if (app) {\n    RoutesInitiative(app, db, origins, publicPath);\n    RoutesTask(app, db, origins, publicPath);\n    RoutesVoting(app, db, origins, publicPath);\n    RoutesVote(app, db, origins, publicPath);\n  }\n}\nexport const models = {\n  ModelInitiative,\n  ModelTask,\n  ModelVoting,\n  ModelVote,\n};\nexport const routes = {\n  RoutesInitiative,\n  RoutesTask,\n  RoutesVoting,\n  RoutesVote,\n};\nexport const controllers = {\n  FactoryInitiative,\n  FactoryTask,\n  FactoryVoting,\n  FactoryVote,\n};\nexport { initializeGovernance as initialize };\nexport default {\n  initialize: initializeGovernance,\n  models,\n  routes,\n  controllers,\n};\n",
            "name": "governance.server.js",
            "size": 1678,
            "type": "source"
          }
        ],
        "models": {
          "_files": [
            {
              "path": "../../src/modules/governance/models/initiative.model.js",
              "relativePath": "modules/governance/models/initiative.model.js",
              "extension": ".js",
              "content": "export default db => {\n  const InitiativeSchema = new db.mongoose.Schema(\n    {\n      title: { type: String, required: true },\n      description: { type: String, required: true },\n      status: {\n        type: String,\n        enum: ['draft', 'active', 'completed', 'cancelled'],\n        default: 'draft',\n      },\n      createdBy: {\n        type: db.mongoose.Schema.Types.ObjectId,\n        ref: 'User',\n        required: true,\n      },\n      tasks: [\n        {\n          type: db.mongoose.Schema.Types.ObjectId,\n          ref: 'Task',\n        },\n      ],\n    },\n    {\n      timestamps: { currentTime: () => Date.now() },\n    }\n  );\n  const Initiative = db.mongoose.model('Initiative', InitiativeSchema);\n  return Initiative;\n};\n",
              "name": "initiative.model.js",
              "size": 728,
              "type": "source"
            },
            {
              "path": "../../src/modules/governance/models/milestone.model.js",
              "relativePath": "modules/governance/models/milestone.model.js",
              "extension": ".js",
              "content": "export default db => {\n  const MilestoneSchema = new db.mongoose.Schema(\n    {\n      name: {\n        type: String,\n        required: true,\n      },\n      description: {\n        type: String,\n      },\n      status: {\n        type: String,\n        enum: ['not_started', 'in_progress', 'completed', 'blocked', 'cancelled'],\n        default: 'not_started',\n      },\n      startDate: {\n        type: Date,\n        required: true,\n      },\n      dueDate: {\n        type: Date,\n        required: true,\n      },\n      completedDate: {\n        type: Date,\n      },\n      progress: {\n        type: Number,\n        min: 0,\n        max: 100,\n        default: 0,\n      },\n      owner: {\n        type: db.mongoose.Schema.Types.ObjectId,\n        ref: 'User',\n        required: true,\n      },\n      contributors: [\n        {\n          type: db.mongoose.Schema.Types.ObjectId,\n          ref: 'User',\n        },\n      ],\n      initiative: {\n        type: db.mongoose.Schema.Types.ObjectId,\n        ref: 'Initiative',\n        required: true,\n      },\n      priority: {\n        type: String,\n        enum: ['low', 'medium', 'high', 'urgent'],\n        default: 'medium',\n      },\n      tags: [\n        {\n          type: String,\n        },\n      ],\n      dependencies: [\n        {\n          milestone: {\n            type: db.mongoose.Schema.Types.ObjectId,\n            ref: 'Milestone',\n          },\n          type: {\n            type: String,\n            enum: ['blocks', 'blocked_by', 'related_to'],\n            required: true,\n          },\n        },\n      ],\n      metadata: {\n        estimatedHours: Number,\n        actualHours: Number,\n        budget: Number,\n        actualCost: Number,\n        notes: String,\n      },\n    },\n    {\n      timestamps: {\n        currentTime: () => Date.now(),\n      },\n      toJSON: { virtuals: true },\n      toObject: { virtuals: true },\n    }\n  );\n  // Virtuals\n  MilestoneSchema.virtual('isOverdue').get(function () {\n    return this.dueDate && this.dueDate < new Date() && this.status !== 'completed';\n  });\n  MilestoneSchema.virtual('duration').get(function () {\n    return this.dueDate ? Math.ceil((this.dueDate - this.startDate) / (1000 * 60 * 60 * 24)) : null;\n  });\n  // Indexes\n  MilestoneSchema.index({ initiative: 1, status: 1 });\n  MilestoneSchema.index({ owner: 1 });\n  MilestoneSchema.index({ dueDate: 1 });\n  MilestoneSchema.index({ 'dependencies.milestone': 1 });\n  const Milestone = db.mongoose.model('Milestone', MilestoneSchema);\n  return Milestone;\n};\n",
              "name": "milestone.model.js",
              "size": 2489,
              "type": "source"
            },
            {
              "path": "../../src/modules/governance/models/task.model.js",
              "relativePath": "modules/governance/models/task.model.js",
              "extension": ".js",
              "content": "export default db => {\n  const TaskSchema = new db.mongoose.Schema(\n    {\n      title: {\n        type: String,\n        required: true,\n      },\n      description: {\n        type: String,\n      },\n      status: {\n        type: String,\n        enum: ['not_started', 'in_progress', 'completed', 'blocked', 'cancelled'],\n        default: 'not_started',\n      },\n      assignedTo: {\n        type: db.mongoose.Schema.Types.ObjectId,\n        ref: 'User',\n      },\n      dueDate: {\n        type: Date,\n      },\n      // Reference to milestone\n      milestone: {\n        type: db.mongoose.Schema.Types.ObjectId,\n        ref: 'Milestone',\n      },\n      initiative: {\n        type: db.mongoose.Schema.Types.ObjectId,\n        ref: 'Initiative',\n      },\n      // Added priority\n      priority: {\n        type: String,\n        enum: ['low', 'medium', 'high', 'urgent'],\n        default: 'medium',\n      },\n      // Added tags\n      tags: [\n        {\n          type: String,\n        },\n      ],\n    },\n    {\n      timestamps: { currentTime: () => Date.now() },\n    }\n  );\n  // Add indexes\n  TaskSchema.index({ milestone: 1 });\n  TaskSchema.index({ assignedTo: 1 });\n  TaskSchema.index({ status: 1 });\n  TaskSchema.index({ dueDate: 1 });\n  const Task = db.mongoose.model('Task', TaskSchema);\n  return Task;\n};\n",
              "name": "task.model.js",
              "size": 1296,
              "type": "source"
            },
            {
              "path": "../../src/modules/governance/models/vote.model.js",
              "relativePath": "modules/governance/models/vote.model.js",
              "extension": ".js",
              "content": "export default db => {\n  const VoteSchema = new db.mongoose.Schema(\n    {\n      value: { type: Number, required: true },\n      voter: {\n        type: db.mongoose.Schema.Types.ObjectId,\n        ref: 'User',\n        required: true,\n      },\n      voting: {\n        type: db.mongoose.Schema.Types.ObjectId,\n        ref: 'Voting',\n        required: true,\n      },\n    },\n    {\n      timestamps: { currentTime: () => Date.now() },\n    }\n  );\n  const Vote = db.mongoose.model('Vote', VoteSchema);\n  return Vote;\n};\n",
              "name": "vote.model.js",
              "size": 509,
              "type": "source"
            },
            {
              "path": "../../src/modules/governance/models/voting.model.js",
              "relativePath": "modules/governance/models/voting.model.js",
              "extension": ".js",
              "content": "export default db => {\n  const VotingSchema = new db.mongoose.Schema(\n    {\n      title: { type: String, required: true },\n      description: { type: String },\n      startDate: { type: Date, required: true },\n      endDate: { type: Date, required: true },\n      status: {\n        type: String,\n        enum: ['pending', 'active', 'closed'],\n        default: 'pending',\n      },\n      votes: [\n        {\n          type: db.mongoose.Schema.Types.ObjectId,\n          ref: 'Vote',\n        },\n      ],\n    },\n    {\n      timestamps: { currentTime: () => Date.now() },\n    }\n  );\n  const Voting = db.mongoose.model('Voting', VotingSchema);\n  return Voting;\n};\n",
              "name": "voting.model.js",
              "size": 654,
              "type": "source"
            }
          ]
        },
        "views": {
          "router": {
            "_files": [
              {
                "path": "../../src/modules/governance/views/router/goverance.router.js",
                "relativePath": "modules/governance/views/router/goverance.router.js",
                "extension": ".js",
                "content": "import { defineAsyncComponent } from 'vue';\n\nimport * as validationAuth from '@martyrs/src/modules/auth/views/middlewares/auth.validation.js';\n\nexport function createGovernanceRoutes(prefix = '', options = {}) {\n  const nameWithPrefix = name => (prefix ? `${prefix}${name}` : name);\n\n  const routes = {\n    path: options.basePath || 'governance',\n    meta: {\n      title: {\n        en: 'Governance',\n        ru: 'Управление',\n      },\n      title_hide: true,\n    },\n    children: [\n      // Initiatives routes\n      {\n        path: 'initiatives',\n        name: nameWithPrefix('Initiatives'),\n        meta: {\n          title: {\n            en: 'Initiatives',\n            ru: 'Инициативы',\n          },\n          title_hide: false,\n        },\n        children: [\n          {\n            path: '',\n            name: nameWithPrefix('Initiatives'),\n            meta: {\n              title: {\n                en: 'Initiatives',\n                ru: 'Инициативы',\n              },\n              title_hide: false,\n            },\n            component: () => import(/* webpackChunkName: 'Governance' */ '../components/pages/Initiatives.vue'),\n          },\n          {\n            path: 'create',\n            name: nameWithPrefix('Create Initiative'),\n            meta: {\n              title: {\n                en: 'Create Initiative',\n                ru: 'Создать Инициативу',\n              },\n              title_hide: false,\n            },\n            beforeEnter: [validationAuth.requiresAuth],\n            component: () => import(/* webpackChunkName: 'Governance' */ '../components/pages/InitiativeCreate.vue'),\n          },\n          {\n            path: ':id',\n            name: nameWithPrefix('Initiative'),\n            meta: {\n              title: {\n                en: 'Initiative',\n                ru: 'Инициатива',\n              },\n              title_hide: false,\n            },\n            component: options.page_initiative || defineAsyncComponent(() => import(/* webpackChunkName: 'Governance' */ '../components/pages/Initiative.vue')),\n          },\n          {\n            path: ':id/edit',\n            name: nameWithPrefix('Edit Initiative'),\n            meta: {\n              title: {\n                en: 'Edit Initiative',\n                ru: 'Редактировать Инициативу',\n              },\n              title_hide: false,\n            },\n            beforeEnter: [validationAuth.requiresAuth],\n            component: options.page_initiative_edit || defineAsyncComponent(() => import(/* webpackChunkName: 'Governance' */ '../components/pages/InitiativeCreate.vue')),\n          },\n        ],\n      },\n\n      // Tasks routes\n      {\n        path: 'tasks',\n        name: nameWithPrefix('Tasks'),\n        meta: {\n          title: {\n            en: 'Tasks',\n            ru: 'Задачи',\n          },\n          title_hide: false,\n        },\n        component: () => import(/* webpackChunkName: 'Governance' */ '../components/pages/Tasks.vue'),\n        children: [\n          {\n            path: 'create',\n            name: nameWithPrefix('Create Task'),\n            meta: {\n              title: {\n                en: 'Create Task',\n                ru: 'Создать Задачу',\n              },\n              title_hide: false,\n            },\n            beforeEnter: [validationAuth.requiresAuth],\n            component: () => import(/* webpackChunkName: 'Governance' */ '../components/pages/TaskCreate.vue'),\n          },\n          {\n            path: ':id',\n            name: nameWithPrefix('Task'),\n            meta: {\n              title: {\n                en: 'Task',\n                ru: 'Задача',\n              },\n              title_hide: false,\n            },\n            component: options.page_task || defineAsyncComponent(() => import(/* webpackChunkName: 'Governance' */ '../components/pages/Task.vue')),\n          },\n          {\n            path: ':id/edit',\n            name: nameWithPrefix('Edit Task'),\n            meta: {\n              title: {\n                en: 'Edit Task',\n                ru: 'Редактировать Задачу',\n              },\n              title_hide: false,\n            },\n            beforeEnter: [validationAuth.requiresAuth],\n            component: options.page_task_edit || defineAsyncComponent(() => import(/* webpackChunkName: 'Governance' */ '../components/pages/TaskCreate.vue')),\n          },\n        ],\n      },\n\n      // Votings routes\n      {\n        path: 'votings',\n        name: nameWithPrefix('Votings'),\n        meta: {\n          title: {\n            en: 'Votings',\n            ru: 'Голосования',\n          },\n          title_hide: false,\n        },\n        component: () => import(/* webpackChunkName: 'Governance' */ '../components/pages/Votings.vue'),\n        children: [\n          {\n            path: 'create',\n            name: nameWithPrefix('Create Voting'),\n            meta: {\n              title: {\n                en: 'Create Voting',\n                ru: 'Создать Голосование',\n              },\n              title_hide: false,\n            },\n            beforeEnter: [validationAuth.requiresAuth],\n            component: () => import(/* webpackChunkName: 'Governance' */ '../components/pages/VotingCreate.vue'),\n          },\n          {\n            path: ':id',\n            name: nameWithPrefix('Voting'),\n            meta: {\n              title: {\n                en: 'Voting',\n                ru: 'Голосование',\n              },\n              title_hide: false,\n            },\n            component: options.page_voting || defineAsyncComponent(() => import(/* webpackChunkName: 'Governance' */ '../components/pages/Voting.vue')),\n          },\n          {\n            path: ':id/edit',\n            name: nameWithPrefix('Edit Voting'),\n            meta: {\n              title: {\n                en: 'Edit Voting',\n                ru: 'Редактировать Голосование',\n              },\n              title_hide: false,\n            },\n            beforeEnter: [validationAuth.requiresAuth],\n            component: options.page_voting_edit || defineAsyncComponent(() => import(/* webpackChunkName: 'Governance' */ '../components/pages/VotingCreate.vue')),\n          },\n        ],\n      },\n    ],\n  };\n\n  return routes;\n}\n\n// Navigation guards\nexport function setupGovernanceNavigationGuards(router) {\n  // Check voting status before allowing votes or edits\n  router.beforeEach(async (to, from, next) => {\n    if (to.name?.includes('Voting') && to.params.id) {\n      try {\n        const response = await fetch(`/api/votings/${to.params.id}`);\n        const voting = await response.json();\n\n        // Prevent voting on closed votings\n        if (voting.status === 'closed' && to.name?.includes('Edit')) {\n          next({ name: 'Votings' });\n          return;\n        }\n      } catch (error) {\n        console.error('Error checking voting status:', error);\n      }\n    }\n    next();\n  });\n\n  // Check initiative status before allowing edits\n  router.beforeEach(async (to, from, next) => {\n    if (to.name?.includes('Initiative') && to.params.id && to.name?.includes('Edit')) {\n      try {\n        const response = await fetch(`/api/initiatives/${to.params.id}`);\n        const initiative = await response.json();\n\n        // Only allow editing draft initiatives\n        if (initiative.status !== 'draft') {\n          next({ name: 'Initiatives' });\n          return;\n        }\n      } catch (error) {\n        console.error('Error checking initiative status:', error);\n      }\n    }\n    next();\n  });\n}\n\n// Example usage:\n// const governanceRoutes = createGovernanceRoutes('Admin', { basePath: 'admin/governance' });\n// export { governanceRoutes, setupGovernanceNavigationGuards };\n",
                "name": "goverance.router.js",
                "size": 7620,
                "type": "source"
              }
            ]
          },
          "store": {
            "_files": [
              {
                "path": "../../src/modules/governance/views/store/initiatives.js",
                "relativePath": "modules/governance/views/store/initiatives.js",
                "extension": ".js",
                "content": "import { reactive, watch } from 'vue';\n\nimport { setError } from '@martyrs/src/modules/globals/views/store/globals.js';\n\nimport $axios from '@martyrs/src/modules/globals/views/utils/axios-instance.js';\n\n// Initiatives Store\nconst initiativesState = reactive({\n  all: [],\n  current: {\n    name: '',\n    description: '',\n    status: '',\n    createdBy: '',\n    createdAt: null,\n    updatedAt: null,\n  },\n});\n\nconst initiativesActions = {\n  async getAllInitiatives() {\n    try {\n      const response = await $axios.get('/api/initiatives');\n      initiativesState.all = response.data;\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n  async getInitiativeById(id) {\n    try {\n      const response = await $axios.get(`/api/initiatives/${id}`);\n      initiativesState.current = response.data;\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n  async createInitiative(initiative) {\n    try {\n      const response = await $axios.post('/api/initiatives', initiative);\n      initiativesState.all.push(response.data);\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n  async updateInitiative(initiative) {\n    try {\n      const response = await $axios.put(`/api/initiatives/${initiative.id}`, initiative);\n      const index = initiativesState.all.findIndex(i => i.id === initiative.id);\n      if (index !== -1) {\n        initiativesState.all[index] = response.data;\n      }\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n  async deleteInitiative(id) {\n    try {\n      await $axios.delete(`/api/initiatives/${id}`);\n      initiativesState.all = initiativesState.all.filter(i => i.id !== id);\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n  async approveInitiative(id) {\n    try {\n      const response = await $axios.post(`/api/initiatives/${id}/approve`);\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n  async rejectInitiative(id) {\n    try {\n      const response = await $axios.post(`/api/initiatives/${id}/reject`);\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n};\n\nconst initiativesHistory = [];\n\nwatch(initiativesState, newState => {\n  initiativesHistory.push(JSON.parse(JSON.stringify(newState)));\n});\n\nexport { initiativesActions, initiativesState };\n",
                "name": "initiatives.js",
                "size": 2505,
                "type": "source"
              },
              {
                "path": "../../src/modules/governance/views/store/projects.js",
                "relativePath": "modules/governance/views/store/projects.js",
                "extension": ".js",
                "content": "const isProd = process.env.NODE_ENV === 'production';\n// Dependencies\nimport axios from 'axios';\n\nconst clientUrl = process.env.API_URL;\n\nconst $axios = axios.create({ baseURL: clientUrl });\n// Vue modules\nimport { computed, reactive, watch } from 'vue';\n// Globals\nimport { setError } from '@martyrs/src/modules/globals/views/store/globals.js';\n// State\nconst state = reactive({\n  all: [],\n  editor: true,\n  project: {\n    name: '',\n    description: '',\n    url: '',\n\n    video: '',\n    size: '',\n\n    services: [],\n    client: '',\n    cover: {},\n    published: {},\n\n    structure: {\n      blocks: [],\n      type: '',\n      style: '',\n      new: {\n        order: 1,\n        type: '',\n        style: '',\n        content: '',\n      },\n      current: {\n        order: 1,\n        type: '',\n        style: '',\n        content: '',\n      },\n      currentArray: [],\n    },\n  },\n});\n\n// Update existing categoryZzzz\nasync function fetchProjects() {\n  return await $axios.get(`/projects`).then(response => {\n    setProjects(response.data);\n    return Promise.resolve(response.data);\n  });\n}\n\nasync function addProject(project) {\n  console.log(project);\n  return $axios.post('/projects/add', project).then(\n    response => {\n      setProject(response.data);\n      return Promise.resolve(response.data);\n    },\n    error => {\n      setError(error);\n      return Promise.reject(error);\n    }\n  );\n}\n\nasync function updateProject(project) {\n  return $axios.post('/projects/' + project.url, project).then(\n    response => {\n      setProject(response.data);\n      return Promise.resolve(response.data);\n    },\n    error => {\n      setError(error);\n      return Promise.reject(error);\n    }\n  );\n}\n// Actions\nasync function loadProject(url) {\n  return await $axios.get('/projects/' + url).then(\n    response => {\n      setProject(response.data);\n      return Promise.resolve(response.data);\n    },\n    error => {\n      setError(error);\n      return Promise.resolve(error);\n    }\n  );\n}\n\nfunction blockAdd(block) {\n  const blockNew = {\n    order: state.project.structure.blocks.length + 1,\n    type: block.type,\n    data: block.data,\n    class: block.class,\n    content: block.content,\n  };\n  state.project.structure.blocks.push(blockNew);\n}\n\n// Mutations\nfunction setProjects(projects) {\n  state.all = projects;\n}\nfunction setProject(project) {\n  state.project = project;\n}\n// Gettes\nconst getProject = computed(() => state.project);\n\nconst history = [];\nhistory.push(state); // push initial state\n\nwatch(state, (newState, oldState) => {\n  history.push(newState);\n});\n\nexport function filterProjects(filter, projects) {\n  let filteredList = [...projects];\n\n  // Filter status\n  if (filter.status == 'all') {\n    const filtered = filteredList;\n    filteredList = filtered;\n  }\n  if (filter.status !== 'all') {\n    const filtered = filteredList.filter(project => {\n      var projectsArr = project.status.toString().split(' ');\n      return (\n        projectsArr.filter(function (category) {\n          return category.indexOf(filter.status) > -1;\n        }).length === 1\n      );\n    });\n    filteredList = filtered;\n  }\n  return filteredList;\n}\n\nexport { addProject, blockAdd, fetchProjects, getProject, loadProject, state, updateProject };\n",
                "name": "projects.js",
                "size": 3224,
                "type": "source"
              },
              {
                "path": "../../src/modules/governance/views/store/tasks.js",
                "relativePath": "modules/governance/views/store/tasks.js",
                "extension": ".js",
                "content": "import { reactive, watch } from 'vue';\n\nimport { setError } from '@martyrs/src/modules/globals/views/store/globals.js';\n\nimport $axios from '@martyrs/src/modules/globals/views/utils/axios-instance.js';\n\nconst tasksState = reactive({\n  all: [],\n  current: {\n    name: '',\n    description: '',\n    status: '',\n    assignedTo: '',\n    createdBy: '',\n    createdAt: null,\n    updatedAt: null,\n  },\n});\n\nconst tasksActions = {\n  async getAllTasks() {\n    try {\n      const response = await $axios.get('/api/tasks');\n      tasksState.all = response.data;\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n  async getTaskById(id) {\n    try {\n      const response = await $axios.get(`/api/tasks/${id}`);\n      tasksState.current = response.data;\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n  async createTask(task) {\n    try {\n      const response = await $axios.post('/api/tasks', task);\n      tasksState.all.push(response.data);\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n  async updateTask(task) {\n    try {\n      const response = await $axios.put(`/api/tasks/${task.id}`, task);\n      const index = tasksState.all.findIndex(t => t.id === task.id);\n      if (index !== -1) {\n        tasksState.all[index] = response.data;\n      }\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n  async deleteTask(id) {\n    try {\n      await $axios.delete(`/api/tasks/${id}`);\n      tasksState.all = tasksState.all.filter(t => t.id !== id);\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n  async assignTask(id, userId) {\n    try {\n      const response = await $axios.post(`/api/tasks/${id}/assign`, { userId });\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n  async completeTask(id) {\n    try {\n      const response = await $axios.post(`/api/tasks/${id}/complete`);\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n};\n\nconst tasksHistory = [];\n\nwatch(tasksState, newState => {\n  tasksHistory.push(JSON.parse(JSON.stringify(newState)));\n});\n\nexport { tasksActions, tasksState };\n",
                "name": "tasks.js",
                "size": 2322,
                "type": "source"
              },
              {
                "path": "../../src/modules/governance/views/store/votes.js",
                "relativePath": "modules/governance/views/store/votes.js",
                "extension": ".js",
                "content": "import { reactive, watch } from 'vue';\n\nimport { setError } from '@martyrs/src/modules/globals/views/store/globals.js';\n\nimport $axios from '@martyrs/src/modules/globals/views/utils/axios-instance.js';\n\n// Votings Store\nconst votingsState = reactive({\n  all: [],\n  current: {\n    title: '',\n    description: '',\n    status: '',\n    startDate: null,\n    endDate: null,\n    createdBy: '',\n    createdAt: null,\n    updatedAt: null,\n  },\n});\n\nconst votingsActions = {\n  async getAllVotings() {\n    try {\n      const response = await $axios.get('/api/votings');\n      votingsState.all = response.data;\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n  async getVotingById(id) {\n    try {\n      const response = await $axios.get(`/api/votings/${id}`);\n      votingsState.current = response.data;\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n  async createVoting(voting) {\n    try {\n      const response = await $axios.post('/api/votings', voting);\n      votingsState.all.push(response.data);\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n  async updateVoting(voting) {\n    try {\n      const response = await $axios.put(`/api/votings/${voting.id}`, voting);\n      const index = votingsState.all.findIndex(v => v.id === voting.id);\n      if (index !== -1) {\n        votingsState.all[index] = response.data;\n      }\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n  async deleteVoting(id) {\n    try {\n      await $axios.delete(`/api/votings/${id}`);\n      votingsState.all = votingsState.all.filter(v => v.id !== id);\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n  async startVoting(id) {\n    try {\n      const response = await $axios.post(`/api/votings/${id}/start`);\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n  async endVoting(id) {\n    try {\n      const response = await $axios.post(`/api/votings/${id}/end`);\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n  async getVotingResults(id) {\n    try {\n      const response = await $axios.get(`/api/votings/${id}/results`);\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n};\n\nconst votingsHistory = [];\n\nwatch(votingsState, newState => {\n  votingsHistory.push(JSON.parse(JSON.stringify(newState)));\n});\n\nexport { votingsActions, votingsState };\n",
                "name": "votes.js",
                "size": 2611,
                "type": "source"
              },
              {
                "path": "../../src/modules/governance/views/store/votings.js",
                "relativePath": "modules/governance/views/store/votings.js",
                "extension": ".js",
                "content": "import { reactive, watch } from 'vue';\n\nimport { setError } from '@martyrs/src/modules/globals/views/store/globals.js';\n\nimport $axios from '@martyrs/src/modules/globals/views/utils/axios-instance.js';\n\n// Votes Store\nconst votesState = reactive({\n  all: [],\n  current: {\n    votingId: '',\n    userId: '',\n    choice: '',\n    createdAt: null,\n  },\n});\n\nconst votesActions = {\n  async castVote(votingId, vote) {\n    try {\n      const response = await $axios.post(`/api/votings/${votingId}/vote`, vote);\n      votesState.all.push(response.data);\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n  async getVotesForVoting(votingId) {\n    try {\n      const response = await $axios.get(`/api/votings/${votingId}/votes`);\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n  async getUserVotes(userId) {\n    try {\n      const response = await $axios.get(`/api/users/${userId}/votes`);\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n  async updateVote(id, vote) {\n    try {\n      const response = await $axios.put(`/api/votes/${id}`, vote);\n      const index = votesState.all.findIndex(v => v.id === id);\n      if (index !== -1) {\n        votesState.all[index] = response.data;\n      }\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n  async deleteVote(id) {\n    try {\n      await $axios.delete(`/api/votes/${id}`);\n      votesState.all = votesState.all.filter(v => v.id !== id);\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n};\n\nconst votesHistory = [];\n\nwatch(votesState, newState => {\n  votesHistory.push(JSON.parse(JSON.stringify(newState)));\n});\n\nexport { votesActions, votesState };\n",
                "name": "votings.js",
                "size": 1828,
                "type": "source"
              }
            ]
          },
          "components": {
            "blocks": {
              "_files": [
                {
                  "path": "../../src/modules/governance/views/components/blocks/CardInitiativeItem.vue",
                  "relativePath": "modules/governance/views/components/blocks/CardInitiativeItem.vue",
                  "extension": ".vue",
                  "content": "<script setup>\nimport { defineProps } from 'vue';\n\nconst props = defineProps({\n  initiative: {\n    type: Object,\n    required: true\n  }\n});\n</script>\n\n<template>\n  <div class=\"card\">\n    <h2>{{ initiative.name }}</h2>\n    <p>{{ initiative.description }}</p>\n    <p>Status: {{ initiative.status }}</p>\n  </div>\n</template>",
                  "name": "CardInitiativeItem.vue",
                  "size": 321,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/governance/views/components/blocks/CardTaskItem.vue",
                  "relativePath": "modules/governance/views/components/blocks/CardTaskItem.vue",
                  "extension": ".vue",
                  "content": "<script setup>\nimport { defineProps } from 'vue';\n\nconst props = defineProps({\n  task: {\n    type: Object,\n    required: true\n  }\n});\n</script>\n\n<template>\n  <div class=\"card\">\n    <h2>{{ task.name }}</h2>\n    <p>{{ task.description }}</p>\n    <p>Status: {{ task.status }}</p>\n    <p>Assigned to: {{ task.assignedTo }}</p>\n  </div>\n</template>\n",
                  "name": "CardTaskItem.vue",
                  "size": 344,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/governance/views/components/blocks/CardVotingItem.vue",
                  "relativePath": "modules/governance/views/components/blocks/CardVotingItem.vue",
                  "extension": ".vue",
                  "content": "<script setup>\nimport { defineProps } from 'vue';\n\nconst props = defineProps({\n  vote: {\n    type: Object,\n    required: true\n  }\n});\n</script>\n\n<template>\n  <div class=\"vote-display\">\n    <h3>Your Vote</h3>\n    <p>Choice: {{ vote.choice }}</p>\n    <p>Cast on: {{ new Date(vote.createdAt).toLocaleString() }}</p>\n  </div>\n</template>\n",
                  "name": "CardVotingItem.vue",
                  "size": 334,
                  "type": "source"
                }
              ]
            },
            "pages": {
              "_files": [
                {
                  "path": "../../src/modules/governance/views/components/pages/Initiative.vue",
                  "relativePath": "modules/governance/views/components/pages/Initiative.vue",
                  "extension": ".vue",
                  "content": "<script setup>\nimport { onMounted, ref } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { initiativesActions, initiativesState } from '../../store/initiatives';\n\nconst route = useRoute();\nconst initiative = ref(null);\n\nonMounted(async () => {\n  const id = route.params.id;\n  await initiativesActions.getInitiativeById(id);\n  initiative.value = initiativesState.current;\n});\n</script>\n\n<template>\n  <div v-if=\"initiative\">\n    <h1>{{ initiative.name }}</h1>\n    <p>{{ initiative.description }}</p>\n    <p>Status: {{ initiative.status }}</p>\n  </div>\n</template>",
                  "name": "Initiative.vue",
                  "size": 571,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/governance/views/components/pages/InitiativeCreate.vue",
                  "relativePath": "modules/governance/views/components/pages/InitiativeCreate.vue",
                  "extension": ".vue",
                  "content": "<script setup>\nimport { ref } from 'vue';\nimport { initiativesActions } from '../../store/initiatives';\nimport FormInitiativeDetails from '../sections/FormInitiativeDetails.vue';\n\nconst newInitiative = ref({\n  name: '',\n  description: '',\n  status: 'draft'\n});\n\nconst createInitiative = async () => {\n  await initiativesActions.createInitiative(newInitiative.value);\n  // Redirect or show success message\n};\n</script>\n\n<template>\n  <div>\n    <h1>Create New Initiative</h1>\n    <FormInitiativeDetails v-model=\"newInitiative\" />\n    <button @click=\"createInitiative\">Create Initiative</button>\n  </div>\n</template>",
                  "name": "InitiativeCreate.vue",
                  "size": 612,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/governance/views/components/pages/Initiatives.vue",
                  "relativePath": "modules/governance/views/components/pages/Initiatives.vue",
                  "extension": ".vue",
                  "content": "<script setup>\nimport { onMounted, ref } from 'vue';\nimport { initiativesActions, initiativesState } from '../../store/initiatives';\nimport CardInitiativeItem from '../blocks/CardInitiativeItem.vue';\n\nconst initiatives = ref([]);\n\nonMounted(async () => {\n  await initiativesActions.getAllInitiatives();\n  initiatives.value = initiativesState.all;\n});\n</script>\n\n<template>\n  <div>\n    <h1>Initiatives</h1>\n    <router-link :to=\"{name:'Create Initiative' }\">Create Initiative</router-link>\n    <CardInitiativeItem v-for=\"initiative in initiatives\" :key=\"initiative.id\" :initiative=\"initiative\" />\n  </div>\n</template>",
                  "name": "Initiatives.vue",
                  "size": 616,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/governance/views/components/pages/Task.vue",
                  "relativePath": "modules/governance/views/components/pages/Task.vue",
                  "extension": ".vue",
                  "content": "<script setup>\nimport { onMounted, ref } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { tasksActions, tasksState } from '../../store/tasks';\n\nconst route = useRoute();\nconst task = ref(null);\n\nonMounted(async () => {\n  const id = route.params.id;\n  await tasksActions.getTaskById(id);\n  task.value = tasksState.current;\n});\n</script>\n\n<template>\n  <div v-if=\"task\">\n    <h1>{{ task.name }}</h1>\n    <p>{{ task.description }}</p>\n    <p>Status: {{ task.status }}</p>\n    <p>Assigned to: {{ task.assignedTo }}</p>\n  </div>\n</template>",
                  "name": "Task.vue",
                  "size": 545,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/governance/views/components/pages/TaskCreate.vue",
                  "relativePath": "modules/governance/views/components/pages/TaskCreate.vue",
                  "extension": ".vue",
                  "content": "<script setup>\nimport { ref } from 'vue';\nimport { tasksActions } from '../../store/tasks';\nimport FormTaskDetails from '../sections/FormTaskDetails.vue';\n\nconst newTask = ref({\n  name: '',\n  description: '',\n  status: 'todo',\n  assignedTo: ''\n});\n\nconst createTask = async () => {\n  await tasksActions.createTask(newTask.value);\n  // Redirect or show success message\n};\n</script>\n\n<template>\n  <div>\n    <h1>Create New Task</h1>\n    <FormTaskDetails v-model=\"newTask\" />\n    <button @click=\"createTask\">Create Task</button>\n  </div>\n</template>",
                  "name": "TaskCreate.vue",
                  "size": 545,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/governance/views/components/pages/Tasks.vue",
                  "relativePath": "modules/governance/views/components/pages/Tasks.vue",
                  "extension": ".vue",
                  "content": "<script setup>\nimport { onMounted, ref } from 'vue';\nimport { tasksActions, tasksState } from '../../store/tasks';\nimport CardTaskItem from '../blocks/CardTaskItem.vue';\n\nconst tasks = ref([]);\n\nonMounted(async () => {\n  await tasksActions.getAllTasks();\n  tasks.value = tasksState.all;\n});\n</script>\n\n<template>\n  <div>\n    <h1>Tasks</h1>\n    <CardTaskItem v-for=\"task in tasks\" :key=\"task.id\" :task=\"task\" />\n  </div>\n</template>",
                  "name": "Tasks.vue",
                  "size": 431,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/governance/views/components/pages/Voting.vue",
                  "relativePath": "modules/governance/views/components/pages/Voting.vue",
                  "extension": ".vue",
                  "content": "<script setup>\nimport { onMounted, ref } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { votingsActions, votingsState } from '../../store/votings';\nimport VoteForm from '../sections/VoteForm.vue';\nimport VotingResult from '../partials/VotingResult.vue';\n\nconst route = useRoute();\nconst voting = ref(null);\nconst results = ref(null);\n\nonMounted(async () => {\n  const id = route.params.id;\n  await votingsActions.getVotingById(id);\n  voting.value = votingsState.current;\n  if (voting.value.status === 'ended') {\n    results.value = await votingsActions.getVotingResults(id);\n  }\n});\n</script>\n\n<template>\n  <div v-if=\"voting\">\n    <h1>{{ voting.title }}</h1>\n    <p>{{ voting.description }}</p>\n    <p>Status: {{ voting.status }}</p>\n    <VoteForm v-if=\"voting.status === 'active'\" :votingId=\"voting.id\" />\n    <VotingResult v-if=\"results\" :results=\"results\" />\n  </div>\n</template>",
                  "name": "Voting.vue",
                  "size": 893,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/governance/views/components/pages/VotingCreate.vue",
                  "relativePath": "modules/governance/views/components/pages/VotingCreate.vue",
                  "extension": ".vue",
                  "content": "<script setup>\nimport { ref } from 'vue';\nimport { votingsActions } from '../../store/votings';\nimport FormVotingDetails from '../sections/FormVotingDetails.vue';\n\nconst newVoting = ref({\n  title: '',\n  description: '',\n  startDate: null,\n  endDate: null\n});\n\nconst createVoting = async () => {\n  await votingsActions.createVoting(newVoting.value);\n  // Redirect or show success message\n};\n</script>\n\n<template>\n  <div>\n    <h1>Create New Voting</h1>\n    <FormVotingDetails v-model=\"newVoting\" />\n    <button @click=\"createVoting\">Create Voting</button>\n  </div>\n</template>",
                  "name": "VotingCreate.vue",
                  "size": 574,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/governance/views/components/pages/Votings.vue",
                  "relativePath": "modules/governance/views/components/pages/Votings.vue",
                  "extension": ".vue",
                  "content": "<script setup>\nimport { onMounted, ref } from 'vue';\nimport { votingsActions, votingsState } from '../../store/votings';\nimport CardVotingItem from '../blocks/CardVotingItem.vue';\n\nconst votings = ref([]);\n\nonMounted(async () => {\n  await votingsActions.getAllVotings();\n  votings.value = votingsState.all;\n});\n</script>\n\n<template>\n  <div>\n    <h1>Votings</h1>\n    <CardVotingItem v-for=\"voting in votings\" :key=\"voting.id\" :voting=\"voting\" />\n  </div>\n</template>",
                  "name": "Votings.vue",
                  "size": 465,
                  "type": "source"
                }
              ]
            },
            "partials": {
              "_files": [
                {
                  "path": "../../src/modules/governance/views/components/partials/RewardDisplay.vue",
                  "relativePath": "modules/governance/views/components/partials/RewardDisplay.vue",
                  "extension": ".vue",
                  "content": "<script setup>\nimport { defineProps } from 'vue';\n\nconst props = defineProps({\n  reward: {\n    type: Object,\n    required: true\n  }\n});\n</script>\n\n<template>\n  <div class=\"reward-display\">\n    <h3>Reward</h3>\n    <p>Type: {{ reward.type }}</p>\n    <p>Amount: {{ reward.amount }}</p>\n    <p v-if=\"reward.description\">Description: {{ reward.description }}</p>\n  </div>\n</template>",
                  "name": "RewardDisplay.vue",
                  "size": 378,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/governance/views/components/partials/VoteDisplay.vue",
                  "relativePath": "modules/governance/views/components/partials/VoteDisplay.vue",
                  "extension": ".vue",
                  "content": "<script setup>\nimport { defineProps } from 'vue';\n\nconst props = defineProps({\n  results: {\n    type: Object,\n    required: true\n  }\n});\n</script>\n\n<template>\n  <div class=\"voting-result\">\n    <h3>Voting Results</h3>\n    <ul>\n      <li v-for=\"(count, option) in results\" :key=\"option\">\n        {{ option }}: {{ count }} votes\n      </li>\n    </ul>\n  </div>\n</template>",
                  "name": "VoteDisplay.vue",
                  "size": 368,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/governance/views/components/partials/VotingResult.vue",
                  "relativePath": "modules/governance/views/components/partials/VotingResult.vue",
                  "extension": ".vue",
                  "content": "<script setup>\nimport { defineProps } from 'vue';\n\nconst props = defineProps({\n  results: {\n    type: Object,\n    required: true\n  }\n});\n</script>\n\n<template>\n  <div class=\"voting-result\">\n    <h3>Voting Results</h3>\n    <ul>\n      <li v-for=\"(count, option) in results\" :key=\"option\">\n        {{ option }}: {{ count }} votes\n      </li>\n    </ul>\n  </div>\n</template>",
                  "name": "VotingResult.vue",
                  "size": 368,
                  "type": "source"
                }
              ]
            },
            "sections": {
              "_files": [
                {
                  "path": "../../src/modules/governance/views/components/sections/FormInitiativeDetails.vue",
                  "relativePath": "modules/governance/views/components/sections/FormInitiativeDetails.vue",
                  "extension": ".vue",
                  "content": "<script setup>\nimport { defineProps, defineEmits } from 'vue';\n\nconst props = defineProps({\n  modelValue: {\n    type: Object,\n    required: true\n  }\n});\n\nconst emit = defineEmits(['update:modelValue']);\n\nconst updateField = (field, value) => {\n  emit('update:modelValue', { ...props.modelValue, [field]: value });\n};\n</script>\n\n<template>\n  <form>\n    <div>\n      <label for=\"name\">Name:</label>\n      <input id=\"name\" v-model=\"modelValue.name\" @input=\"updateField('name', $event.target.value)\" />\n    </div>\n    <div>\n      <label for=\"description\">Description:</label>\n      <textarea id=\"description\" v-model=\"modelValue.description\" @input=\"updateField('description', $event.target.value)\"></textarea>\n    </div>\n    <div>\n      <label for=\"status\">Status:</label>\n      <select id=\"status\" v-model=\"modelValue.status\" @change=\"updateField('status', $event.target.value)\">\n        <option value=\"draft\">Draft</option>\n        <option value=\"active\">Active</option>\n        <option value=\"completed\">Completed</option>\n      </select>\n    </div>\n  </form>\n</template>",
                  "name": "FormInitiativeDetails.vue",
                  "size": 1070,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/governance/views/components/sections/FormTaskDetails.vue",
                  "relativePath": "modules/governance/views/components/sections/FormTaskDetails.vue",
                  "extension": ".vue",
                  "content": "<script setup>\nimport { defineProps, defineEmits } from 'vue';\n\nconst props = defineProps({\n  modelValue: {\n    type: Object,\n    required: true\n  }\n});\n\nconst emit = defineEmits(['update:modelValue']);\n\nconst updateField = (field, value) => {\n  emit('update:modelValue', { ...props.modelValue, [field]: value });\n};\n</script>\n\n<template>\n  <form>\n    <div>\n      <label for=\"name\">Name:</label>\n      <input id=\"name\" v-model=\"modelValue.name\" @input=\"updateField('name', $event.target.value)\" />\n    </div>\n    <div>\n      <label for=\"description\">Description:</label>\n      <textarea id=\"description\" v-model=\"modelValue.description\" @input=\"updateField('description', $event.target.value)\"></textarea>\n    </div>\n    <div>\n      <label for=\"status\">Status:</label>\n      <select id=\"status\" v-model=\"modelValue.status\" @change=\"updateField('status', $event.target.value)\">\n        <option value=\"todo\">To Do</option>\n        <option value=\"inProgress\">In Progress</option>\n        <option value=\"done\">Done</option>\n      </select>\n    </div>\n    <div>\n      <label for=\"assignedTo\">Assigned To:</label>\n      <input id=\"assignedTo\" v-model=\"modelValue.assignedTo\" @input=\"updateField('assignedTo', $event.target.value)\" />\n    </div>\n  </form>\n</template>",
                  "name": "FormTaskDetails.vue",
                  "size": 1260,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/governance/views/components/sections/FormVotingDetails.vue",
                  "relativePath": "modules/governance/views/components/sections/FormVotingDetails.vue",
                  "extension": ".vue",
                  "content": "<script setup>\nimport { defineProps, defineEmits } from 'vue';\n\nconst props = defineProps({\n  modelValue: {\n    type: Object,\n    required: true\n  }\n});\n\nconst emit = defineEmits(['update:modelValue']);\n\nconst updateField = (field, value) => {\n  emit('update:modelValue', { ...props.modelValue, [field]: value });\n};\n</script>\n\n<template>\n  <form>\n    <div>\n      <label for=\"title\">Title:</label>\n      <input id=\"title\" v-model=\"modelValue.title\" @input=\"updateField('title', $event.target.value)\" />\n    </div>\n    <div>\n      <label for=\"description\">Description:</label>\n      <textarea id=\"description\" v-model=\"modelValue.description\" @input=\"updateField('description', $event.target.value)\"></textarea>\n    </div>\n    <div>\n      <label for=\"startDate\">Start Date:</label>\n      <input id=\"startDate\" type=\"datetime-local\" v-model=\"modelValue.startDate\" @input=\"updateField('startDate', $event.target.value)\" />\n    </div>\n    <div>\n      <label for=\"endDate\">End Date:</label>\n      <input id=\"endDate\" type=\"datetime-local\" v-model=\"modelValue.endDate\" @input=\"updateField('endDate', $event.target.value)\" />\n    </div>\n  </form>\n</template>",
                  "name": "FormVotingDetails.vue",
                  "size": 1151,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/governance/views/components/sections/VoteForm.vue",
                  "relativePath": "modules/governance/views/components/sections/VoteForm.vue",
                  "extension": ".vue",
                  "content": "<script setup>\nimport { ref } from 'vue';\nimport { defineProps } from 'vue';\nimport { votesActions } from '../../store/votes';\n\nconst props = defineProps({\n  votingId: {\n    type: String,\n    required: true\n  }\n});\n\nconst choice = ref('');\n\nconst castVote = async () => {\n  await votesActions.castVote(props.votingId, { choice: choice.value });\n  // Show success message or update UI\n};\n</script>\n\n<template>\n  <form @submit.prevent=\"castVote\">\n    <div>\n      <label for=\"choice\">Your Choice:</label>\n      <input id=\"choice\" v-model=\"choice\" required />\n    </div>\n    <button type=\"submit\">Cast Vote</button>\n  </form>\n</template>",
                  "name": "VoteForm.vue",
                  "size": 633,
                  "type": "source"
                }
              ]
            }
          }
        }
      },
      "icons": {
        "_files": [
          {
            "path": "../../src/modules/icons/icons.client.js",
            "relativePath": "modules/icons/icons.client.js",
            "extension": ".js",
            "content": "// Entities\nimport IconBell from './entities/IconBell.vue';\nimport IconCalendar from './entities/IconCalendar.vue';\nimport IconCatalog from './entities/IconCatalog.vue';\nimport IconCommunity from './entities/IconCommunity.vue';\nimport IconDate from './entities/IconDate.vue';\nimport IconEarn from './entities/IconEarn.vue';\nimport IconEvents from './entities/IconEvents.vue';\nimport IconFeatured from './entities/IconFeatured.vue';\nimport IconFollowing from './entities/IconFollowing.vue';\nimport IconGallery from './entities/IconGallery.vue';\nimport IconGroups from './entities/IconGroups.vue';\nimport IconHome from './entities/IconHome.vue';\nimport IconEntityInfo from './entities/IconInfo.vue';\nimport IconLeftovers from './entities/IconLeftovers.vue';\nimport IconOrders from './entities/IconOrders.vue';\nimport IconPayments from './entities/IconPayments.vue';\nimport IconPopular from './entities/IconPopular.vue';\nimport IconPrice from './entities/IconPrice.vue';\nimport IconProducts from './entities/IconProducts.vue';\nimport IconProfile from './entities/IconProfile.vue';\nimport IconRecent from './entities/IconRecent.vue';\nimport IconShopcart from './entities/IconShopcart.vue';\nimport IconTime from './entities/IconTime.vue';\n\n// Labels\nimport LabelAppStore from './labels/LabelAppStore.vue';\nimport LabelGooglePlay from './labels/LabelGooglePlay.vue';\n\n// Actions\nimport IconShopcartAdd from './actions/IconShopcartAdd.vue';\n\n// Navigation\nimport IconAdd from './navigation/IconAdd.vue';\nimport IconArrow from './navigation/IconArrow.vue';\nimport IconCheckmark from './navigation/IconCheckmark.vue';\nimport IconChevronBottom from './navigation/IconChevronBottom.vue';\nimport IconChevronLeft from './navigation/IconChevronLeft.vue';\nimport IconChevronRight from './navigation/IconChevronRight.vue';\nimport IconCross from './navigation/IconCross.vue';\nimport IconDelete from './navigation/IconDelete.vue';\nimport IconEdit from './navigation/IconEdit.vue';\nimport IconEllipsis from './navigation/IconEllipsis.vue';\nimport IconFilter from './navigation/IconFilter.vue';\nimport IconInfo from './navigation/IconInfo.vue';\nimport IconLike from './navigation/IconLike.vue';\nimport IconMinus from './navigation/IconMinus.vue';\nimport IconMute from './navigation/IconMute.vue';\nimport IconPlus from './navigation/IconPlus.vue';\nimport IconSearch from './navigation/IconSearch.vue';\nimport IconSort from './navigation/IconSort.vue';\nimport IconUnMute from './navigation/IconUnMute.vue';\nimport IconUpload from './navigation/IconUpload.vue';\n\n// Placeholders\nimport PlaceholderChat from './placeholders/PlaceholderChat.vue';\nimport PlaceholderImage from './placeholders/PlaceholderImage.vue';\nimport PlaceholderOrganizationPic from './placeholders/PlaceholderOrganizationPic.vue';\nimport PlaceholderUserpic from './placeholders/PlaceholderUserpic.vue';\n\n// Skeletons\nimport SkeletonBlogpost from './skeletons/SkeletonBlogpost.vue';\nimport SkeletonEvent from './skeletons/SkeletonEvent.vue';\nimport SkeletonEventShort from './skeletons/SkeletonEventShort.vue';\nimport SkeletonOrganization from './skeletons/SkeletonOrganization.vue';\n\n// Socials\nimport Dribbble from './socials/dribbble.vue';\nimport Facebook from './socials/facebook.vue';\nimport Instagram from './socials/instagram.vue';\nimport Line from './socials/line.vue';\nimport Linkedin from './socials/linkedin.vue';\nimport Reddit from './socials/reddit.vue';\nimport Telegram from './socials/telegram.vue';\nimport Twitter from './socials/twitter.vue';\nimport Vk from './socials/vk.vue';\nimport Youtube from './socials/youtube.vue';\n\nexport {\n  Dribbble,\n  Facebook,\n  IconAdd,\n  IconArrow,\n  IconBell,\n  IconCalendar,\n  IconCatalog,\n  IconCheckmark,\n  IconChevronBottom,\n  IconChevronLeft,\n  IconChevronRight,\n  // Entities\n  IconCommunity,\n  // Navigation\n  IconCross,\n  IconDate,\n  IconDelete,\n  IconEarn,\n  IconEdit,\n  IconEllipsis,\n  IconEntityInfo,\n  IconEvents,\n  IconFeatured,\n  IconFilter,\n  IconFollowing,\n  IconGallery,\n  IconGroups,\n  IconHome,\n  IconInfo,\n  IconLeftovers,\n  IconLike,\n  IconMinus,\n  IconMute,\n  IconOrders,\n  IconPayments,\n  IconPlus,\n  IconPopular,\n  IconPrice,\n  IconProducts,\n  IconProfile,\n  IconRecent,\n  IconSearch,\n  IconShopcart,\n  // Actions\n  IconShopcartAdd,\n  IconSort,\n  IconTime,\n  IconUnMute,\n  IconUpload,\n  Instagram,\n  LabelAppStore,\n  // Labels\n  LabelGooglePlay,\n  Line,\n  Linkedin,\n  PlaceholderChat,\n  PlaceholderImage,\n  PlaceholderOrganizationPic,\n  // Placeholders\n  PlaceholderUserpic,\n  Reddit,\n  SkeletonBlogpost,\n  SkeletonEvent,\n  // Skeletons\n  SkeletonEventShort,\n  SkeletonOrganization,\n  Telegram,\n  Twitter,\n  // Socials\n  Vk,\n  Youtube,\n};\n\nimport iconsRouter from './router/icons.router.js';\n\n// Icons page component\nimport IconsPage from './pages/IconsPage.vue';\n\n\nfunction initializeIcons(app, store, router, options = {}) {\n  const route = options.route || 'Home';\n\n  // Регистрация маршрута для галереи иконок\n  router.addRoute(route, iconsRouter);\n}\n\nconst ModuleIcons = {\n  initialize: initializeIcons,\n  views: {\n    router: {\n      iconsRouter,\n    },\n    components: {\n      IconsPage,\n    },\n  },\n};\n\nexport default ModuleIcons;",
            "name": "icons.client.js",
            "size": 5158,
            "type": "source"
          }
        ],
        "router": {
          "_files": [
            {
              "path": "../../src/modules/icons/router/icons.router.js",
              "relativePath": "modules/icons/router/icons.router.js",
              "extension": ".js",
              "content": "// Router configuration for the icons module\n\nimport * as validationAuth from '@martyrs/src/modules/auth/views/middlewares/auth.validation.js';\n\nconst iconsRouter = {\n  path: 'icons',\n  meta: {\n    title: {\n      en: 'Icons Gallery',\n      ru: 'Галерея иконок'\n    },\n    breadcrumbs: {\n      hidden: false,\n    }\n  },\n  children: [\n    {\n      path: '',\n      name: 'Icons',\n      meta: {\n        title: {\n          en: 'Icons Gallery',\n          ru: 'Галерея иконок'\n        },\n        breadcrumbs: {\n          hidden: false,\n        }\n      },\n      component: () => import('@martyrs/src/modules/icons/pages/IconsPage.vue')\n    }\n  ]\n};\n\nexport default iconsRouter;",
              "name": "icons.router.js",
              "size": 668,
              "type": "source"
            }
          ]
        },
        "actions": {
          "_files": [
            {
              "path": "../../src/modules/icons/actions/IconDuplicate.vue",
              "relativePath": "modules/icons/actions/IconDuplicate.vue",
              "extension": ".vue",
              "content": "<template>\n<svg width=\"86\" height=\"86\" viewBox=\"0 0 86 86\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M34.668 35.7539C36.3895 35.7539 37.75 37.1209 37.75 38.8359V48.2539H47.168C48.8895 48.2539 50.25 49.6209 50.25 51.3359C50.25 53.0574 48.883 54.418 47.168 54.418H37.75V63.8359C37.75 65.5574 36.383 66.918 34.668 66.918C32.9464 66.918 31.586 65.551 31.5859 63.8359V54.418H22.168C20.4464 54.418 19.086 53.051 19.0859 51.3359C19.0859 49.6144 20.4529 48.2539 22.168 48.2539H31.5859V38.8359C31.5859 37.1144 32.9529 35.7539 34.668 35.7539Z\" :fill=\"fill\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M71.457 0.335938C79.3025 0.335971 85.6641 6.7019 85.6641 14.543V59C85.664 66.8454 79.2981 73.207 71.457 73.207H70.457V73.168H69V74.25C69 77.3115 67.8096 80.1416 65.6709 82.3232L65.6719 82.3242C63.5165 84.5269 60.629 85.668 57.582 85.668H11.75C8.6943 85.668 5.81359 84.482 3.66699 82.3311C1.52225 80.1855 0.332031 77.3059 0.332031 74.25V28.418C0.332039 25.3623 1.51796 22.4816 3.66895 20.335C5.81451 18.1899 8.69388 17 11.75 17H12.793V14.543C12.793 6.69749 19.1589 0.335938 27 0.335938H71.457ZM11.75 23.168C10.351 23.168 9.02163 23.7279 8.03809 24.708C7.05668 25.6899 6.50001 27.0179 6.5 28.418V74.25C6.5 75.6486 7.05958 76.9775 8.03906 77.9609L8.22754 78.1396C9.18775 79.01 10.4369 79.5 11.75 79.5H57.582C58.9417 79.5 60.313 78.9375 61.2939 77.96C62.2728 76.9806 62.832 75.6108 62.832 74.25V28.418C62.832 27.0194 62.2725 25.6905 61.293 24.707L61.1045 24.5283C60.1443 23.658 58.8951 23.168 57.582 23.168H11.75ZM27 6.5C22.5922 6.5 18.957 10.0983 18.957 14.543V17H57.582C60.6374 17 63.5175 18.1854 65.6641 20.3359L66.0557 20.7471C67.9556 22.8485 69 25.5947 69 28.418V67.0039H71.457C75.9047 67.0039 79.5 63.4086 79.5 58.9609V14.543C79.5 10.1352 75.9016 6.50003 71.457 6.5H27Z\" :fill=\"fill\"/>\n</svg>\n\n</template>\n\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  }\n\t})\n</script>",
              "name": "IconDuplicate.vue",
              "size": 1949,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/actions/IconShopcartAdd.vue",
              "relativePath": "modules/icons/actions/IconShopcartAdd.vue",
              "extension": ".vue",
              "content": "<template>\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"21\" viewBox=\"0 0 25 21\" fill=\"none\">\n  <path d=\"M7.69141 15.582C6.99414 15.582 6.45638 15.3861 6.07812 14.9941C5.69987 14.6022 5.45833 14.0622 5.35352 13.374L4.02734 4.30957H1.4502C1.18587 4.30957 0.958008 4.21387 0.766602 4.02246C0.575195 3.8265 0.479492 3.59408 0.479492 3.3252C0.479492 3.05632 0.575195 2.82617 0.766602 2.63477C0.958008 2.4388 1.18587 2.34082 1.4502 2.34082H4.41699C4.93197 2.34082 5.29655 2.44564 5.51074 2.65527C5.72493 2.86035 5.86393 3.16797 5.92773 3.57812L6.05078 4.42578H14.2471C14.2288 4.5625 14.2152 4.69922 14.2061 4.83594C14.1969 4.97266 14.1924 5.10938 14.1924 5.24609C14.1924 6.04362 14.3405 6.79102 14.6367 7.48828C14.9329 8.18555 15.3454 8.80306 15.874 9.34082C16.4072 9.87858 17.0247 10.3024 17.7266 10.6123C18.4284 10.9176 19.1826 11.0771 19.9893 11.0908L19.9209 11.248C19.7432 11.5671 19.5016 11.8132 19.1963 11.9863C18.891 12.1595 18.5127 12.2461 18.0615 12.2461H7.17188L7.30859 13.1963C7.34049 13.3831 7.40885 13.5335 7.51367 13.6475C7.61849 13.7614 7.75977 13.8184 7.9375 13.8184H17.959C18.196 13.8184 18.4056 13.8981 18.5879 14.0576C18.7702 14.2171 18.8613 14.429 18.8613 14.6934C18.8613 14.9622 18.7702 15.1787 18.5879 15.3428C18.4056 15.5023 18.196 15.582 17.959 15.582H7.69141ZM6.84375 18.4873C6.84375 18.1865 6.91667 17.9108 7.0625 17.6602C7.21289 17.4141 7.41113 17.2181 7.65723 17.0723C7.90788 16.9264 8.18359 16.8535 8.48438 16.8535C8.78516 16.8535 9.05859 16.9264 9.30469 17.0723C9.55534 17.2181 9.75358 17.4141 9.89941 17.6602C10.0452 17.9108 10.1182 18.1865 10.1182 18.4873C10.1182 18.7926 10.0452 19.0684 9.89941 19.3145C9.75358 19.5651 9.55534 19.7611 9.30469 19.9023C9.05859 20.0482 8.78516 20.1211 8.48438 20.1211C8.18359 20.1211 7.90788 20.0482 7.65723 19.9023C7.41113 19.7611 7.21289 19.5651 7.0625 19.3145C6.91667 19.0684 6.84375 18.7926 6.84375 18.4873ZM14.8555 18.4873C14.8555 18.1865 14.9284 17.9108 15.0742 17.6602C15.2246 17.4141 15.4229 17.2181 15.6689 17.0723C15.9196 16.9264 16.1953 16.8535 16.4961 16.8535C16.8014 16.8535 17.0771 16.9264 17.3232 17.0723C17.5693 17.2181 17.7653 17.4141 17.9111 17.6602C18.0615 17.9108 18.1367 18.1865 18.1367 18.4873C18.1367 18.7926 18.0615 19.0684 17.9111 19.3145C17.7653 19.5651 17.5693 19.7611 17.3232 19.9023C17.0771 20.0482 16.8014 20.1211 16.4961 20.1211C16.1953 20.1211 15.9196 20.0482 15.6689 19.9023C15.4229 19.7611 15.2246 19.5651 15.0742 19.3145C14.9284 19.0684 14.8555 18.7926 14.8555 18.4873ZM20.0439 9.82617C19.415 9.82617 18.8226 9.70768 18.2666 9.4707C17.7152 9.23372 17.2275 8.90332 16.8037 8.47949C16.3799 8.05566 16.0472 7.56803 15.8057 7.0166C15.5687 6.46061 15.4502 5.86816 15.4502 5.23926C15.4502 4.61035 15.5687 4.02018 15.8057 3.46875C16.0472 2.91732 16.3799 2.42969 16.8037 2.00586C17.2275 1.58203 17.7152 1.25163 18.2666 1.01465C18.8226 0.773112 19.415 0.652344 20.0439 0.652344C20.6729 0.652344 21.263 0.773112 21.8145 1.01465C22.3704 1.25163 22.8581 1.58203 23.2773 2.00586C23.7012 2.42513 24.0316 2.91276 24.2686 3.46875C24.5055 4.02018 24.624 4.61035 24.624 5.23926C24.624 5.86361 24.5033 6.45378 24.2617 7.00977C24.0247 7.5612 23.6943 8.04883 23.2705 8.47266C22.8467 8.89648 22.3568 9.22917 21.8008 9.4707C21.2493 9.70768 20.6637 9.82617 20.0439 9.82617ZM20.0439 8.19922C20.2445 8.19922 20.404 8.13997 20.5225 8.02148C20.641 7.89844 20.7002 7.73893 20.7002 7.54297V5.89551H22.3408C22.5368 5.89551 22.694 5.83626 22.8125 5.71777C22.9355 5.59928 22.9971 5.44206 22.9971 5.24609C22.9971 5.04557 22.9355 4.88607 22.8125 4.76758C22.694 4.64453 22.5368 4.58301 22.3408 4.58301H20.7002V2.95605C20.7002 2.75553 20.641 2.59603 20.5225 2.47754C20.404 2.35905 20.2445 2.2998 20.0439 2.2998C19.8434 2.2998 19.6839 2.36133 19.5654 2.48438C19.4469 2.60286 19.3877 2.76009 19.3877 2.95605V4.58301H17.7539C17.5534 4.58301 17.3916 4.64453 17.2686 4.76758C17.1501 4.88607 17.0908 5.04557 17.0908 5.24609C17.0908 5.44206 17.1523 5.59928 17.2754 5.71777C17.3984 5.83626 17.5579 5.89551 17.7539 5.89551H19.3877V7.54297C19.3877 7.73893 19.4469 7.89844 19.5654 8.02148C19.6839 8.13997 19.8434 8.19922 20.0439 8.19922Z\" :fill=\"fill\" :class=\"$attrs.class\"/>\n</svg>\n</template>\n\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  }\n\t})\n</script>",
              "name": "IconShopcartAdd.vue",
              "size": 4282,
              "type": "source"
            }
          ]
        },
        "entities": {
          "_files": [
            {
              "path": "../../src/modules/icons/entities/IconBell.vue",
              "relativePath": "modules/icons/entities/IconBell.vue",
              "extension": ".vue",
              "content": "<template>\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"21\" viewBox=\"0 0 18 21\" fill=\"none\">\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5.04279 3.17383C5.62885 2.72962 6.29908 2.40915 7.01279 2.23188C6.98005 1.95157 7.00701 1.66752 7.0919 1.39838C7.17678 1.12924 7.31767 0.881108 7.5053 0.670301C7.69293 0.459493 7.92306 0.290781 8.18055 0.175254C8.43804 0.0597268 8.71707 0 8.99929 0C9.28151 0 9.56054 0.0597268 9.81803 0.175254C10.0755 0.290781 10.3056 0.459493 10.4933 0.670301C10.6809 0.881108 10.8218 1.12924 10.9067 1.39838C10.9916 1.66752 11.0185 1.95157 10.9858 2.23188C11.6998 2.40902 12.3704 2.7295 12.9568 3.17383C13.9328 3.92379 14.4978 4.92875 14.8318 5.9317C15.1638 6.92665 15.2838 7.9636 15.3418 8.83655C15.3658 9.19154 15.3808 9.53252 15.3928 9.83351L15.4018 10.0365C15.4168 10.3965 15.4328 10.6665 15.4598 10.8645C15.6548 12.3264 15.8978 13.3513 16.2438 14.1713C16.5818 14.9723 17.0338 15.6172 17.7068 16.2902C17.8466 16.43 17.9418 16.6082 17.9804 16.8021C18.0189 16.9961 17.9991 17.1971 17.9235 17.3798C17.8478 17.5625 17.7197 17.7186 17.5552 17.8285C17.3908 17.9384 17.1975 17.9971 16.9998 17.9971H10.7318C10.9071 18.3011 10.9994 18.646 10.9993 18.997C10.9992 19.3479 10.9067 19.6927 10.7311 19.9966C10.5555 20.3005 10.3031 20.5529 9.99909 20.7284C9.6951 20.9038 9.35028 20.9962 8.99929 20.9962C8.64829 20.9962 8.30347 20.9038 7.99948 20.7284C7.69549 20.5529 7.44303 20.3005 7.26746 19.9966C7.09189 19.6927 6.99941 19.3479 6.99929 18.997C6.99917 18.646 7.09143 18.3011 7.26679 17.9971H0.999787C0.802037 17.9971 0.608738 17.9384 0.444328 17.8285C0.279918 17.7186 0.151779 17.5625 0.076109 17.3798C0.000438951 17.1971 -0.0193641 16.9961 0.0192035 16.8021C0.057771 16.6082 0.152977 16.43 0.292787 16.2902C0.966787 15.6162 1.41879 14.9763 1.75579 14.1783C2.09979 13.3613 2.34279 12.3364 2.53979 10.8645C2.56679 10.6655 2.58279 10.3965 2.59779 10.0355L2.60679 9.83351C2.61879 9.53352 2.63379 9.19154 2.65679 8.83655C2.71579 7.9636 2.83579 6.92665 3.16679 5.9317C3.50179 4.92875 4.06679 3.92279 5.04279 3.17383V3.17383ZM3.06879 15.9972C3.26579 15.6712 3.44079 15.3272 3.59779 14.9563C4.04279 13.9033 4.31579 12.6774 4.52279 11.1304C4.56136 10.796 4.58571 10.46 4.59579 10.1235L4.60579 9.9075C4.61779 9.60752 4.63079 9.29753 4.65279 8.97055C4.70679 8.15659 4.81279 7.31863 5.06479 6.56367C5.31479 5.8167 5.69079 5.19773 6.26079 4.75975C6.82479 4.32678 7.67179 3.99779 8.99979 3.99779C10.3278 3.99779 11.1748 4.32678 11.7388 4.75975C12.3088 5.19773 12.6858 5.8167 12.9348 6.56367C13.1868 7.31863 13.2928 8.15659 13.3468 8.97055C13.3688 9.29753 13.3818 9.60752 13.3938 9.9065L13.4038 10.1225C13.4188 10.4725 13.4368 10.8295 13.4768 11.1304C13.6828 12.6684 13.9558 13.8933 14.4008 14.9483C14.5578 15.3212 14.7348 15.6682 14.9328 15.9972H3.06979H3.06879Z\" :fill=\"fill\"/>\n</svg></template>\n\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  },\n\t  theme: {\n    \ttype: String,\n\t    default: \"light\"\n    }\n\t})\n</script>\n",
              "name": "IconBell.vue",
              "size": 3007,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/entities/IconCalendar.vue",
              "relativePath": "modules/icons/entities/IconCalendar.vue",
              "extension": ".vue",
              "content": "<template>\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"15\" viewBox=\"0 0 16 15\" fill=\"none\">\n    <path :fill=\"fill\" :class=\"$attrs.class\" d=\"M2.73242 14.9238C1.89648 14.9238 1.25781 14.7051 0.816406 14.2676C0.375 13.8301 0.154297 13.1953 0.154297 12.3633V3.1875C0.154297 2.35938 0.375 1.72656 0.816406 1.28906C1.25781 0.851562 1.89648 0.632812 2.73242 0.632812H13.2617C14.0977 0.632812 14.7363 0.851562 15.1777 1.28906C15.6191 1.72656 15.8398 2.35938 15.8398 3.1875V12.3633C15.8398 13.1953 15.6191 13.8301 15.1777 14.2676C14.7363 14.7051 14.0977 14.9238 13.2617 14.9238H2.73242ZM2.83203 13.1895H13.1562C13.4648 13.1895 13.6992 13.1113 13.8594 12.9551C14.0234 12.8027 14.1055 12.5645 14.1055 12.2402V5.48438C14.1055 5.16016 14.0234 4.92188 13.8594 4.76953C13.6992 4.61328 13.4648 4.53516 13.1562 4.53516H2.83203C2.52344 4.53516 2.28906 4.61328 2.12891 4.76953C1.96875 4.92188 1.88867 5.16016 1.88867 5.48438V12.2402C1.88867 12.5645 1.96875 12.8027 2.12891 12.9551C2.28906 13.1113 2.52344 13.1895 2.83203 13.1895ZM6.55859 7.03125C6.42578 7.03125 6.33203 7.00781 6.27734 6.96094C6.22656 6.91016 6.20117 6.81836 6.20117 6.68555V6.24023C6.20117 6.10742 6.22656 6.01562 6.27734 5.96484C6.33203 5.91406 6.42578 5.88867 6.55859 5.88867H7.00391C7.14062 5.88867 7.23438 5.91406 7.28516 5.96484C7.33984 6.01562 7.36719 6.10742 7.36719 6.24023V6.68555C7.36719 6.81836 7.33984 6.91016 7.28516 6.96094C7.23438 7.00781 7.14062 7.03125 7.00391 7.03125H6.55859ZM8.99609 7.03125C8.86328 7.03125 8.76953 7.00781 8.71484 6.96094C8.66406 6.91016 8.63867 6.81836 8.63867 6.68555V6.24023C8.63867 6.10742 8.66406 6.01562 8.71484 5.96484C8.76953 5.91406 8.86328 5.88867 8.99609 5.88867H9.44141C9.57812 5.88867 9.67188 5.91406 9.72266 5.96484C9.77344 6.01562 9.79883 6.10742 9.79883 6.24023V6.68555C9.79883 6.81836 9.77344 6.91016 9.72266 6.96094C9.67188 7.00781 9.57812 7.03125 9.44141 7.03125H8.99609ZM11.4395 7.03125C11.3027 7.03125 11.207 7.00781 11.1523 6.96094C11.1016 6.91016 11.0762 6.81836 11.0762 6.68555V6.24023C11.0762 6.10742 11.1016 6.01562 11.1523 5.96484C11.207 5.91406 11.3027 5.88867 11.4395 5.88867H11.8789C12.0117 5.88867 12.1035 5.91406 12.1543 5.96484C12.209 6.01562 12.2363 6.10742 12.2363 6.24023V6.68555C12.2363 6.81836 12.209 6.91016 12.1543 6.96094C12.1035 7.00781 12.0117 7.03125 11.8789 7.03125H11.4395ZM4.12695 9.43359C3.99023 9.43359 3.89453 9.4082 3.83984 9.35742C3.78906 9.30664 3.76367 9.21484 3.76367 9.08203V8.63672C3.76367 8.50391 3.78906 8.41406 3.83984 8.36719C3.89453 8.31641 3.99023 8.29102 4.12695 8.29102H4.56641C4.69922 8.29102 4.79102 8.31641 4.8418 8.36719C4.89648 8.41406 4.92383 8.50391 4.92383 8.63672V9.08203C4.92383 9.21484 4.89648 9.30664 4.8418 9.35742C4.79102 9.4082 4.69922 9.43359 4.56641 9.43359H4.12695ZM6.55859 9.43359C6.42578 9.43359 6.33203 9.4082 6.27734 9.35742C6.22656 9.30664 6.20117 9.21484 6.20117 9.08203V8.63672C6.20117 8.50391 6.22656 8.41406 6.27734 8.36719C6.33203 8.31641 6.42578 8.29102 6.55859 8.29102H7.00391C7.14062 8.29102 7.23438 8.31641 7.28516 8.36719C7.33984 8.41406 7.36719 8.50391 7.36719 8.63672V9.08203C7.36719 9.21484 7.33984 9.30664 7.28516 9.35742C7.23438 9.4082 7.14062 9.43359 7.00391 9.43359H6.55859ZM8.99609 9.43359C8.86328 9.43359 8.76953 9.4082 8.71484 9.35742C8.66406 9.30664 8.63867 9.21484 8.63867 9.08203V8.63672C8.63867 8.50391 8.66406 8.41406 8.71484 8.36719C8.76953 8.31641 8.86328 8.29102 8.99609 8.29102H9.44141C9.57812 8.29102 9.67188 8.31641 9.72266 8.36719C9.77344 8.41406 9.79883 8.50391 9.79883 8.63672V9.08203C9.79883 9.21484 9.77344 9.30664 9.72266 9.35742C9.67188 9.4082 9.57812 9.43359 9.44141 9.43359H8.99609ZM11.4395 9.43359C11.3027 9.43359 11.207 9.4082 11.1523 9.35742C11.1016 9.30664 11.0762 9.21484 11.0762 9.08203V8.63672C11.0762 8.50391 11.1016 8.41406 11.1523 8.36719C11.207 8.31641 11.3027 8.29102 11.4395 8.29102H11.8789C12.0117 8.29102 12.1035 8.31641 12.1543 8.36719C12.209 8.41406 12.2363 8.50391 12.2363 8.63672V9.08203C12.2363 9.21484 12.209 9.30664 12.1543 9.35742C12.1035 9.4082 12.0117 9.43359 11.8789 9.43359H11.4395ZM4.12695 11.8301C3.99023 11.8301 3.89453 11.8066 3.83984 11.7598C3.78906 11.709 3.76367 11.6152 3.76367 11.4785V11.0391C3.76367 10.9023 3.78906 10.8105 3.83984 10.7637C3.89453 10.7129 3.99023 10.6875 4.12695 10.6875H4.56641C4.69922 10.6875 4.79102 10.7129 4.8418 10.7637C4.89648 10.8105 4.92383 10.9023 4.92383 11.0391V11.4785C4.92383 11.6152 4.89648 11.709 4.8418 11.7598C4.79102 11.8066 4.69922 11.8301 4.56641 11.8301H4.12695ZM6.55859 11.8301C6.42578 11.8301 6.33203 11.8066 6.27734 11.7598C6.22656 11.709 6.20117 11.6152 6.20117 11.4785V11.0391C6.20117 10.9023 6.22656 10.8105 6.27734 10.7637C6.33203 10.7129 6.42578 10.6875 6.55859 10.6875H7.00391C7.14062 10.6875 7.23438 10.7129 7.28516 10.7637C7.33984 10.8105 7.36719 10.9023 7.36719 11.0391V11.4785C7.36719 11.6152 7.33984 11.709 7.28516 11.7598C7.23438 11.8066 7.14062 11.8301 7.00391 11.8301H6.55859ZM8.99609 11.8301C8.86328 11.8301 8.76953 11.8066 8.71484 11.7598C8.66406 11.709 8.63867 11.6152 8.63867 11.4785V11.0391C8.63867 10.9023 8.66406 10.8105 8.71484 10.7637C8.76953 10.7129 8.86328 10.6875 8.99609 10.6875H9.44141C9.57812 10.6875 9.67188 10.7129 9.72266 10.7637C9.77344 10.8105 9.79883 10.9023 9.79883 11.0391V11.4785C9.79883 11.6152 9.77344 11.709 9.72266 11.7598C9.67188 11.8066 9.57812 11.8301 9.44141 11.8301H8.99609Z\"/>\n  </svg>\n</template>\n\n<script setup>\n  const props = defineProps({\n    fill: {\n      type: String,\n      default: 'rgb(var(--black))'\n    },\n    order: {\n      type: String,\n      default: 'desc'\n    }\n  })\n</script>\n\n<style>\n.icon-custom { \n  background: white;\n}\n</style>",
              "name": "IconCalendar.vue",
              "size": 5608,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/entities/IconCatalog.vue",
              "relativePath": "modules/icons/entities/IconCatalog.vue",
              "extension": ".vue",
              "content": "<template>\n<svg width=\"27\" height=\"27\" viewBox=\"0 0 27 27\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5.27637 12.5625C4.51465 12.5625 3.94336 12.375 3.5625 12C3.1875 11.625 3 11.042 3 10.251V5.30273C3 4.52344 3.1875 3.94629 3.5625 3.57129C3.94336 3.19043 4.51465 3 5.27637 3H10.2861C11.042 3 11.6104 3.19043 11.9912 3.57129C12.3721 3.94629 12.5625 4.52344 12.5625 5.30273V10.251C12.5625 11.042 12.3721 11.625 11.9912 12C11.6104 12.375 11.042 12.5625 10.2861 12.5625H5.27637ZM5.28516 10.9102H10.2686C10.4854 10.9102 10.6465 10.8574 10.752 10.752C10.8574 10.6465 10.9102 10.4795 10.9102 10.251V5.30273C10.9102 5.08008 10.8574 4.91602 10.752 4.81055C10.6465 4.69922 10.4854 4.64355 10.2686 4.64355H5.28516C5.0625 4.64355 4.89844 4.69922 4.79297 4.81055C4.69336 4.91602 4.64355 5.08008 4.64355 5.30273V10.251C4.64355 10.4795 4.69336 10.6465 4.79297 10.752C4.89844 10.8574 5.0625 10.9102 5.28516 10.9102ZM16.6582 12.5625C15.8965 12.5625 15.3281 12.375 14.9531 12C14.5781 11.625 14.3906 11.042 14.3906 10.251V5.30273C14.3906 4.52344 14.5781 3.94629 14.9531 3.57129C15.3281 3.19043 15.8965 3 16.6582 3H21.6768C22.4326 3 22.998 3.19043 23.373 3.57129C23.7539 3.94629 23.9443 4.52344 23.9443 5.30273V10.251C23.9443 11.042 23.7539 11.625 23.373 12C22.998 12.375 22.4326 12.5625 21.6768 12.5625H16.6582ZM16.6846 10.9102H21.6592C21.876 10.9102 22.0371 10.8574 22.1426 10.752C22.248 10.6465 22.3008 10.4795 22.3008 10.251V5.30273C22.3008 5.08008 22.248 4.91602 22.1426 4.81055C22.0371 4.69922 21.876 4.64355 21.6592 4.64355H16.6846C16.4561 4.64355 16.2891 4.69922 16.1836 4.81055C16.084 4.91602 16.0342 5.08008 16.0342 5.30273V10.251C16.0342 10.4795 16.084 10.6465 16.1836 10.752C16.2891 10.8574 16.4561 10.9102 16.6846 10.9102ZM5.27637 23.9443C4.51465 23.9443 3.94336 23.7568 3.5625 23.3818C3.1875 23.0127 3 22.4326 3 21.6416V16.6934C3 15.9082 3.1875 15.3281 3.5625 14.9531C3.94336 14.5781 4.51465 14.3906 5.27637 14.3906H10.2861C11.042 14.3906 11.6104 14.5781 11.9912 14.9531C12.3721 15.3281 12.5625 15.9082 12.5625 16.6934V21.6416C12.5625 22.4326 12.3721 23.0127 11.9912 23.3818C11.6104 23.7568 11.042 23.9443 10.2861 23.9443H5.27637ZM5.28516 22.3008H10.2686C10.4854 22.3008 10.6465 22.2451 10.752 22.1338C10.8574 22.0283 10.9102 21.8643 10.9102 21.6416V16.6934C10.9102 16.4707 10.8574 16.3066 10.752 16.2012C10.6465 16.0898 10.4854 16.0342 10.2686 16.0342H5.28516C5.0625 16.0342 4.89844 16.0898 4.79297 16.2012C4.69336 16.3066 4.64355 16.4707 4.64355 16.6934V21.6416C4.64355 21.8643 4.69336 22.0283 4.79297 22.1338C4.89844 22.2451 5.0625 22.3008 5.28516 22.3008ZM16.6582 23.9443C15.8965 23.9443 15.3281 23.7568 14.9531 23.3818C14.5781 23.0127 14.3906 22.4326 14.3906 21.6416V16.6934C14.3906 15.9082 14.5781 15.3281 14.9531 14.9531C15.3281 14.5781 15.8965 14.3906 16.6582 14.3906H21.6768C22.4326 14.3906 22.998 14.5781 23.373 14.9531C23.7539 15.3281 23.9443 15.9082 23.9443 16.6934V21.6416C23.9443 22.4326 23.7539 23.0127 23.373 23.3818C22.998 23.7568 22.4326 23.9443 21.6768 23.9443H16.6582ZM16.6846 22.3008H21.6592C21.876 22.3008 22.0371 22.2451 22.1426 22.1338C22.248 22.0283 22.3008 21.8643 22.3008 21.6416V16.6934C22.3008 16.4707 22.248 16.3066 22.1426 16.2012C22.0371 16.0898 21.876 16.0342 21.6592 16.0342H16.6846C16.4561 16.0342 16.2891 16.0898 16.1836 16.2012C16.084 16.3066 16.0342 16.4707 16.0342 16.6934V21.6416C16.0342 21.8643 16.084 22.0283 16.1836 22.1338C16.2891 22.2451 16.4561 22.3008 16.6846 22.3008Z\" :fill=\"fill\"/>\n</svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  },\n\t  theme: {\n    \ttype: String,\n\t    default: \"light\"\n    }\n\t})\n</script>\n",
              "name": "IconCatalog.vue",
              "size": 3648,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/entities/IconCommunity.vue",
              "relativePath": "modules/icons/entities/IconCommunity.vue",
              "extension": ".vue",
              "content": "<template>\n<svg width=\"56\" height=\"56\" viewBox=\"0 0 56 56\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M28.2899 50C24.4282 50.007 20.6332 48.9927 17.2899 47.06L12.5299 49.17C11.6317 49.567 10.6307 49.6695 9.67068 49.4627C8.71061 49.2558 7.84068 48.7503 7.1856 48.0186C6.53051 47.2869 6.12391 46.3666 6.02409 45.3896C5.92426 44.4126 6.13634 43.4291 6.62991 42.58L8.96991 38.58C6.65145 34.3531 5.78562 29.4816 6.50556 24.7147C7.22549 19.9478 9.49132 15.5493 12.9546 12.1956C16.418 8.84187 20.887 6.71863 25.6747 6.15233C30.4623 5.58604 35.3034 6.60805 39.4536 9.06121C43.6037 11.5144 46.8332 15.2629 48.6454 19.7303C50.4576 24.1977 50.7522 29.1367 49.4839 33.7879C48.2155 38.4391 45.4545 42.5448 41.6254 45.4739C37.7962 48.403 33.1109 49.9932 28.2899 50ZM20.2898 26C19.7594 26 19.2507 26.2107 18.8756 26.5858C18.5005 26.9609 18.2898 27.4696 18.2898 28C18.2898 28.5304 18.5005 29.0391 18.8756 29.4142C19.2507 29.7893 19.7594 30 20.2898 30C20.8202 30 21.3289 29.7893 21.704 29.4142C22.0791 29.0391 22.2898 28.5304 22.2898 28C22.2898 27.4696 22.0791 26.9609 21.704 26.5858C21.3289 26.2107 20.8202 26 20.2898 26ZM28.2898 26C27.7594 26 27.2507 26.2107 26.8756 26.5858C26.5005 26.9609 26.2898 27.4696 26.2898 28C26.2898 28.5304 26.5005 29.0391 26.8756 29.4142C27.2507 29.7893 27.7594 30 28.2898 30C28.8202 30 29.3289 29.7893 29.704 29.4142C30.0791 29.0391 30.2898 28.5304 30.2898 28C30.2898 27.4696 30.0791 26.9609 29.704 26.5858C29.3289 26.2107 28.8202 26 28.2898 26ZM36.2898 26C35.7594 26 35.2507 26.2107 34.8756 26.5858C34.5005 26.9609 34.2898 27.4696 34.2898 28C34.2898 28.5304 34.5005 29.0391 34.8756 29.4142C35.2507 29.7893 35.7594 30 36.2898 30C36.8202 30 37.3289 29.7893 37.704 29.4142C38.0791 29.0391 38.2898 27.4696 38.2898 28C38.2898 28.5304 38.0791 29.0391 37.704 29.4142C37.3289 29.7893 36.8202 30 36.2898 30Z\" :fill=\"fill\"/>\n</svg>\n\n</template>\n\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  }\n\t})\n</script>",
              "name": "IconCommunity.vue",
              "size": 2034,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/entities/IconDate.vue",
              "relativePath": "modules/icons/entities/IconDate.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\">\n    <path :fill=\"fill\" d=\"M3 43.5V18H45V43.5C45 45.9375 42.9375 48 40.5 48H7.5C5.0625 48 3 45.9375 3 43.5ZM33 25.5V28.5C33 29.3438 33.6562 30 34.5 30H37.5C38.3438 30 39 29.3438 39 28.5V25.5C39 24.6562 38.3438 24 37.5 24H34.5C33.6562 24 33 24.6562 33 25.5ZM33 37.5V40.5C33 41.3438 33.6562 42 34.5 42H37.5C38.3438 42 39 41.3438 39 40.5V37.5C39 36.6562 38.3438 36 37.5 36H34.5C33.6562 36 33 36.6562 33 37.5ZM21 25.5V28.5C21 29.3438 21.6562 30 22.5 30H25.5C26.3438 30 27 29.3438 27 28.5V25.5C27 24.6562 26.3438 24 25.5 24H22.5C21.6562 24 21 24.6562 21 25.5ZM21 37.5V40.5C21 41.3438 21.6562 42 22.5 42H25.5C26.3438 42 27 41.3438 27 40.5V37.5C27 36.6562 26.3438 36 25.5 36H22.5C21.6562 36 21 36.6562 21 37.5ZM9 25.5V28.5C9 29.3438 9.65625 30 10.5 30H13.5C14.3438 30 15 29.3438 15 28.5V25.5C15 24.6562 14.3438 24 13.5 24H10.5C9.65625 24 9 24.6562 9 25.5ZM9 37.5V40.5C9 41.3438 9.65625 42 10.5 42H13.5C14.3438 42 15 41.3438 15 40.5V37.5C15 36.6562 14.3438 36 13.5 36H10.5C9.65625 36 9 36.6562 9 37.5ZM40.5 6C42.9375 6 45 8.0625 45 10.5V15H3V10.5C3 8.0625 5.0625 6 7.5 6H12V1.5C12 0.65625 12.6562 0 13.5 0H16.5C17.3438 0 18 0.65625 18 1.5V6H30V1.5C30 0.65625 30.6562 0 31.5 0H34.5C35.3438 0 36 0.65625 36 1.5V6H40.5Z\"/>\n  </svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  }\n\t})\n</script>",
              "name": "IconDate.vue",
              "size": 1467,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/entities/IconDiscount.vue",
              "relativePath": "modules/icons/entities/IconDiscount.vue",
              "extension": ".vue",
              "content": "<template>\n<svg width=\"88\" height=\"88\" viewBox=\"0 0 88 88\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M55.2285 45.417C57.7435 45.417 60.2635 46.3714 62.1729 48.2803L62.5195 48.6455C65.8743 52.362 65.8844 58.0959 62.5293 61.8135L62.1826 62.1777C58.4846 65.8751 52.4798 65.9908 48.6377 62.5244L48.2734 62.1777C44.4557 58.3601 44.472 52.0959 48.2881 48.2803L48.6533 47.9336C50.512 46.2559 52.8704 45.417 55.2285 45.417ZM55.043 51.4453C54.2067 51.4833 53.3776 51.8056 52.7002 52.4189L52.5576 52.5547C51.0646 54.0475 51.0646 56.4017 52.5576 57.8945L52.7002 58.0293C54.1972 59.3851 56.452 59.3406 57.8984 57.8945L58.0342 57.752C59.3441 56.3061 59.3344 54.1568 58.0195 52.707L57.8838 52.5645C57.1343 51.8151 56.1781 51.4443 55.2217 51.4414L55.043 51.4453Z\" :fill=\"fill\"/>\n<path d=\"M57.501 27.8018C58.1896 27.8752 58.8356 28.1834 59.3281 28.6787L59.5283 28.9004C59.9671 29.4386 60.21 30.1141 60.21 30.8145C60.21 31.6149 59.8925 32.3826 59.3281 32.9502L32.9414 59.3369L32.9404 59.3389C32.4437 59.8325 31.7935 60.1368 31.1025 60.2051L30.8047 60.2197C30.0042 60.2197 29.2357 59.9032 28.668 59.3389C28.3851 59.0574 28.1601 58.722 28.0068 58.3535C27.8536 57.985 27.7754 57.5896 27.7754 57.1904C27.7754 56.7913 27.8536 56.3959 28.0068 56.0273C28.1601 55.6588 28.385 55.3244 28.668 55.043L55.0527 28.6777C55.334 28.3952 55.668 28.1707 56.0361 28.0176C56.4048 27.8643 56.8009 27.7852 57.2002 27.7852H57.2041L57.501 27.8018Z\" :fill=\"fill\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M33.0244 22.9697C35.4584 23.0344 37.875 23.9907 39.7207 25.8359L40.0674 26.2012C43.4225 29.9174 43.4225 35.6383 40.0674 39.3545L39.7207 39.7188C36.0239 43.4154 30.0336 43.547 26.1914 40.0811L25.8262 39.7344C22.0089 35.9178 22.009 29.6389 25.8262 25.8223L26.1797 25.4854C27.979 23.857 30.2506 23.0198 32.5371 22.9688L33.0244 22.9697ZM32.5957 28.9961C31.7594 29.034 30.9303 29.3564 30.2529 29.9697L30.1104 30.1055C28.6173 31.5983 28.6173 33.9525 30.1104 35.4453L30.2529 35.5811C31.7477 36.9351 33.9887 36.8831 35.4365 35.4355L35.5723 35.293C36.8843 33.8459 36.8846 31.7096 35.5723 30.2627L35.4365 30.1211C34.686 29.3707 33.7293 28.9951 32.7744 28.9922L32.5957 28.9961Z\" :fill=\"fill\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M44.375 0.510742C46.223 0.618055 47.4774 1.5037 48.6826 2.34961L49.1758 2.70605C50.3241 3.55872 51.4566 4.55326 52.5498 5.53906L54.3789 7.20117C54.9647 7.7327 55.5217 8.23267 56.0342 8.67383L56.4062 8.98633C56.773 9.28602 57.1186 9.54617 57.4014 9.74902C57.5897 9.88414 57.7495 9.99227 57.8672 10.0693C57.961 10.1308 58.0122 10.1619 58.0303 10.1729C58.0517 10.1782 58.1057 10.1909 58.2041 10.2119C58.3385 10.2406 58.5245 10.2769 58.75 10.3145C59.201 10.3896 59.8033 10.4709 60.4639 10.5205L61.5293 10.5889C61.9005 10.6099 62.2867 10.6294 62.6836 10.6484L65.1611 10.7666L66.4268 10.8398C67.6932 10.9237 68.9553 11.0448 70.1436 11.2529L70.7246 11.3564C72.0874 11.6083 73.4798 11.9702 74.7539 13.2441L75.0127 13.5186C76.2435 14.9013 76.5021 16.4147 76.7559 17.8643L76.8525 18.4648C77.0619 19.8806 77.1601 21.389 77.2363 22.8594L77.3574 25.3262C77.3967 26.1154 77.4379 26.8621 77.4883 27.5361L77.5303 28.0195C77.5776 28.4898 77.6378 28.9155 77.6943 29.2559C77.732 29.4825 77.7681 29.6692 77.7969 29.8047C77.8304 29.9627 77.8448 30.0067 77.8369 29.9873C77.8285 29.9671 77.8485 30.008 77.9375 30.1455C78.0137 30.2632 78.1221 30.4224 78.2568 30.6113C78.5264 30.9892 78.8981 31.4788 79.3301 31.9805L80.0322 32.7793C80.7719 33.6069 81.6132 34.515 82.4648 35.459L83.3076 36.4043C84.1454 37.3575 84.9568 38.3334 85.6504 39.3213L85.9893 39.8066C86.7754 40.9537 87.5 42.2095 87.5 44.0098L87.4893 44.3877C87.3962 45.9889 86.718 47.144 85.9883 48.208L85.6504 48.6943C84.9572 49.6815 84.1516 50.6559 83.3164 51.6094L82.4746 52.5557C81.3298 53.8248 80.2003 54.9968 79.3154 56.0244C78.8841 56.5252 78.5172 57.0119 78.2529 57.3867C78.1211 57.5738 78.0156 57.7312 77.9414 57.8477L77.8418 58.0078V58.0098C77.8496 57.991 77.8329 58.0369 77.7979 58.1963C77.7677 58.3336 77.7308 58.5231 77.6914 58.752C77.6323 59.0956 77.5699 59.5243 77.5215 59.9951L77.4785 60.4785C77.4281 61.1536 77.3917 61.8953 77.3574 62.6807L77.2461 65.1455C77.1702 66.6159 77.0718 68.1282 76.8623 69.5449L76.7656 70.1465C76.5113 71.599 76.2436 73.1054 75.0127 74.4863L74.7539 74.7607C73.4806 76.0338 72.0976 76.4004 70.7354 76.6533L70.1533 76.7578C68.9644 76.9664 67.6905 77.0836 66.4189 77.166L65.1514 77.2383C63.4621 77.3249 61.8223 77.3878 60.4736 77.4883L60.4746 77.4893C59.8144 77.5398 59.2056 77.624 58.748 77.7012C58.5196 77.7397 58.331 77.7762 58.1943 77.8057C58.1258 77.8205 58.0724 77.8332 58.0352 77.8428C57.9943 77.8533 57.9901 77.856 58.0039 77.8506C57.9864 77.8609 57.938 77.8904 57.8486 77.9473C57.7327 78.021 57.5752 78.1256 57.3887 78.2568C57.1086 78.454 56.7655 78.709 56.4004 79.0059L56.0293 79.3164C55.5163 79.758 54.9618 80.2604 54.3779 80.7949L52.5498 82.4658C51.4563 83.452 50.327 84.4421 49.1797 85.2939L48.6875 85.6504C47.4818 86.4971 46.2232 87.3821 44.375 87.4893L43.9971 87.5C41.939 87.4999 40.6022 86.5522 39.3174 85.6504C38.3297 84.9571 37.3487 84.1437 36.3926 83.3047L35.4453 82.4609C34.5009 81.6093 33.5925 80.7679 32.7646 80.0283L31.9658 79.3262C31.4642 78.8945 30.9764 78.524 30.5996 78.2549C30.4113 78.1204 30.2515 78.0122 30.1338 77.9355C30.0371 77.8726 29.9855 77.8411 29.9688 77.8311C29.9466 77.8254 29.8919 77.8132 29.7939 77.792C29.6591 77.7628 29.4729 77.7266 29.2471 77.6885C28.9078 77.6312 28.4833 77.5702 28.0137 77.5225L27.5312 77.4795C26.8557 77.429 26.1079 77.3944 25.3164 77.3613L22.8389 77.2529C21.3667 77.1769 19.8696 77.0746 18.457 76.8643L17.8564 76.7676C16.4051 76.5135 14.8971 76.2509 13.5156 75.0205L13.2412 74.7607C11.7858 73.3055 11.5098 71.6821 11.2393 70.1367L11.1426 69.5371C10.9314 68.1262 10.8254 66.6334 10.749 65.1602C10.6833 63.8857 10.6418 62.6518 10.583 61.5449L10.5166 60.4834C10.4672 59.8237 10.3834 59.2143 10.3057 58.7559C10.2669 58.5269 10.2299 58.3376 10.2002 58.2002C10.166 58.0421 10.1502 57.9947 10.1572 58.0117C10.1468 57.9946 10.1169 57.9472 10.0596 57.8594C9.98397 57.7436 9.87633 57.5869 9.74219 57.4004C9.54094 57.1205 9.28185 56.7779 8.98242 56.4121L8.66992 56.04C8.22869 55.5276 7.7296 54.9722 7.19922 54.3877L5.54004 52.5605C4.55253 51.4658 3.55823 50.323 2.70605 49.1729L2.34961 48.6797C1.50447 47.4764 0.618272 46.2343 0.510742 44.3877L0.5 44.0098C0.500053 41.9517 1.45299 40.6101 2.35449 39.3262L2.70996 38.833C3.55798 37.6862 4.53706 36.5548 5.52539 35.459L7.19922 33.6279C7.73474 33.0433 8.2382 32.4883 8.67969 31.9756L8.99121 31.6035C9.28854 31.2381 9.54407 30.8943 9.74219 30.6133C9.87405 30.4262 9.97956 30.2687 10.0537 30.1523C10.1399 30.017 10.1601 29.9733 10.1523 29.9922L10.1533 29.9912L10.1982 29.8037C10.2287 29.6684 10.2668 29.4819 10.3066 29.2559C10.3865 28.8032 10.4723 28.1994 10.5215 27.541L10.5879 26.4785C10.6466 25.3689 10.6878 24.1296 10.7539 22.8545L10.8271 21.5889C10.9111 20.3213 11.0313 19.0572 11.2393 17.8691L11.3438 17.2861C11.5976 15.9195 11.9674 14.5129 13.2412 13.2393L13.5156 12.9795C14.8966 11.7498 16.3969 11.4966 17.8467 11.2432L18.4473 11.1455C19.8636 10.9358 21.3732 10.8379 22.8438 10.7617L25.3154 10.6504C26.1046 10.6161 26.8502 10.5806 27.5254 10.5303L28.0088 10.4873C28.479 10.4392 28.9047 10.3783 29.2451 10.3213C29.4719 10.2833 29.6587 10.2468 29.7939 10.2178C29.8618 10.2032 29.9145 10.1911 29.9512 10.1816C29.963 10.1786 29.9715 10.1755 29.9775 10.1738C29.9948 10.1634 30.0446 10.1342 30.1357 10.0752C30.2534 9.99901 30.4128 9.89138 30.6016 9.75684C30.9796 9.48734 31.4688 9.11535 31.9707 8.68359L32.7705 7.98145C33.5984 7.24316 34.5072 6.40421 35.4502 5.55371L36.3965 4.71094C37.3496 3.87359 38.3249 3.06263 39.3125 2.36914L39.7969 2.03125C40.9403 1.24301 42.1943 0.500033 43.9971 0.5L44.375 0.510742ZM44.0059 6.6543C43.726 6.77455 43.2949 6.96414 42.792 7.31738C42.0933 7.8078 41.2674 8.49325 40.3926 9.26074L39.5049 10.0518C38.6148 10.8545 37.7017 11.7024 36.8105 12.499L35.9287 13.2754C34.8503 14.2035 33.8659 15.0527 32.5645 15.6445L32.2998 15.7588C31.2236 16.2041 30.1866 16.3718 29.0967 16.4756L27.9854 16.5664C27.2202 16.6234 26.409 16.6648 25.5898 16.7021L23.1465 16.8145C21.7373 16.8873 20.4082 16.9831 19.3467 17.1377L18.9082 17.207C18.313 17.3114 17.8723 17.4814 17.5908 17.5938C17.4992 17.829 17.3684 18.171 17.2666 18.626L17.21 18.9111C17.0626 19.7525 16.9585 20.8241 16.8809 21.9863L16.8115 23.1729C16.7496 24.3744 16.6975 25.6232 16.627 26.8184L16.5488 27.9912C16.4432 29.4048 16.3622 30.701 15.8623 32.041L15.7559 32.3105C15.3096 33.3875 14.6854 34.2413 13.9844 35.085L13.2617 35.9326C12.7612 36.5138 12.2214 37.1115 11.6729 37.7119L10.0332 39.5088C9.08987 40.5546 8.20556 41.5872 7.56055 42.4541L7.29883 42.8154C6.9519 43.3094 6.76016 43.7348 6.64062 44.0098C6.76034 44.2835 6.95234 44.7067 7.29883 45.2002L7.55957 45.5596C8.20307 46.4219 9.08332 47.4397 10.0283 48.4873C11.1006 49.676 12.2552 50.9139 13.2568 52.0771L13.9805 52.9238C14.6852 53.7668 15.32 54.6222 15.7666 55.7002L15.8721 55.9688C16.3717 57.31 16.4482 58.6117 16.5537 60.0234C16.668 61.5529 16.7147 63.2498 16.7969 64.8418L16.8682 66.0254C16.9499 67.1835 17.0623 68.2516 17.21 69.0947L17.2666 69.3799C17.3675 69.8344 17.4954 70.1786 17.5859 70.417C17.8676 70.5252 18.3038 70.6887 18.8984 70.793L19.3379 70.8633C20.4053 71.0198 21.7548 71.1236 23.1621 71.1963L25.5889 71.3027C26.4014 71.3377 27.2062 71.3767 27.9707 71.4336L29.0859 71.5254C30.1805 71.632 31.2246 71.8059 32.2998 72.251L32.5645 72.3652C33.8645 72.9561 34.8398 73.7956 35.9189 74.7246L36.8047 75.5029C37.7025 76.3034 38.628 77.16 39.5195 77.9639L40.4062 78.7529C41.2794 79.5175 42.1036 80.1968 42.8027 80.6875C43.2986 81.0354 43.7212 81.23 44 81.3555C44.2792 81.2284 44.7036 81.0327 45.2021 80.6826L45.5625 80.4219C46.4273 79.7802 47.4499 78.9109 48.4951 77.9688L50.2871 76.3232C50.8874 75.7702 51.4858 75.2256 52.0664 74.7256L52.917 74.0029C53.7627 73.3044 54.6181 72.6866 55.6943 72.2412L55.9629 72.1357C57.3015 71.6343 58.5953 71.54 60.0137 71.4336L61.1904 71.3584C62.3914 71.292 63.6516 71.2473 64.8477 71.1855L66.0322 71.1172C67.1894 71.0409 68.2497 70.9404 69.0908 70.793L69.376 70.7363C69.8315 70.6351 70.1733 70.5057 70.4111 70.415C70.5211 70.134 70.6859 69.7041 70.79 69.1094L70.8604 68.6699C71.0169 67.6027 71.1197 66.2537 71.1924 64.8467L71.3096 62.4121C71.3494 61.5987 71.393 60.7938 71.4502 60.0283L71.5381 58.917C71.6373 57.8217 71.7969 56.768 72.2432 55.6904L72.3584 55.4248C72.953 54.1243 73.814 53.1594 74.7373 52.0869L75.5127 51.2021C76.3086 50.3065 77.1562 49.3855 77.9619 48.4922L78.751 47.6045C79.5155 46.7317 80.195 45.9089 80.6855 45.21L80.8486 44.9658C81.1015 44.5682 81.252 44.2326 81.3564 43.999C81.2565 43.7669 81.1087 43.4311 80.8613 43.04L80.7012 42.8008C80.2107 42.1022 79.5255 41.276 78.7578 40.4014L77.9668 39.5137C77.1626 38.6221 76.3114 37.7023 75.5137 36.8076L74.7373 35.9229C73.815 34.8517 72.9447 33.8818 72.3486 32.5801L72.2334 32.3154C71.7868 31.2373 71.6301 30.182 71.5322 29.0869L71.4453 27.9766C71.3881 27.2116 71.3469 26.4057 71.3096 25.5918L71.1973 23.1582C71.1249 21.7543 71.014 20.4123 70.8555 19.3457L70.7842 18.9062C70.679 18.3058 70.5172 17.8731 70.4102 17.5918C70.1775 17.4983 69.8336 17.3652 69.3828 17.2637L69.1006 17.207C68.2604 17.06 67.1933 16.9652 66.0312 16.8916L64.8428 16.8242C63.6411 16.7623 62.3924 16.7092 61.1973 16.6387L60.0234 16.5615C58.6094 16.4559 57.3129 16.3748 55.9727 15.875L55.7041 15.7686C54.627 15.3224 53.7725 14.6989 52.9287 13.998L52.0811 13.2754C51.4992 12.7745 50.8976 12.2369 50.293 11.6904L48.4854 10.0518C47.436 9.1055 46.4183 8.21892 45.5566 7.57422L45.1973 7.3125C44.7052 6.96714 44.2796 6.77395 44.0059 6.6543Z\" :fill=\"fill\"/>\n</svg>\n\n</template>\n\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  },\n\t  theme: {\n    \ttype: String,\n\t    default: \"light\"\n    }\n\t})\n</script>\n",
              "name": "IconDiscount.vue",
              "size": 11809,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/entities/IconEarn.vue",
              "relativePath": "modules/icons/entities/IconEarn.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 64 64\" fill=\"none\">\n\t  <path d=\"M47.1874 25.0592C47.1874 16.6721 40.3871 9.8718 32 9.8718C23.6129 9.8718 16.8126 16.6721 16.8126 25.0592C16.8126 33.4463 23.6129 40.2466 32 40.2466C40.3871 40.2466 47.1874 33.4463 47.1874 25.0592ZM32 37.9798C24.8975 37.9798 19.0794 32.1618 19.0794 25.0592C19.0794 17.9566 24.8975 12.063 32 12.063C39.1026 12.063 44.9206 17.8811 44.9206 24.9836C44.9206 32.0862 39.1026 37.9798 32 37.9798Z\" :fill=\"fill\"/>\n\t  <path d=\"M36.8934 18.8634C36.9528 18.4954 37.2704 18.2249 37.6431 18.2249H38.6709C39.1489 18.2249 39.5081 18.6613 39.416 19.1305L38.7213 22.6708H38.8343C39.2537 22.6708 39.5937 23.0108 39.5937 23.4302V23.4519C39.5937 23.8713 39.2537 24.2113 38.8343 24.2113H38.4041L38.1067 25.7712H38.8343C39.2537 25.7712 39.5937 26.1112 39.5937 26.5306V26.5718C39.5937 26.9912 39.2537 27.3312 38.8343 27.3312H37.7895L36.9789 31.419C36.9084 31.7745 36.5965 32.0306 36.234 32.0306H34.6637C34.3022 32.0306 33.9908 31.7758 33.9193 31.4214L33.0905 27.3117H30.8897L30.0609 31.4214C29.9894 31.7758 29.678 32.0306 29.3165 32.0306H27.7462C27.3837 32.0306 27.0718 31.7745 27.0013 31.419L26.1907 27.3312H25.1657C24.7463 27.3312 24.4063 26.9912 24.4063 26.5718V26.5306C24.4063 26.1112 24.7463 25.7712 25.1657 25.7712H25.8933L25.5761 24.2113H25.1657C24.7463 24.2113 24.4063 23.8713 24.4063 23.4519V23.4302C24.4063 23.0108 24.7463 22.6708 25.1657 22.6708H25.2787L24.584 19.1305C24.492 18.6613 24.8511 18.2249 25.3292 18.2249H26.4164C26.7891 18.2249 27.1067 18.4954 27.1661 18.8634L27.7769 22.6513H29.7397L30.4737 18.8406C30.5425 18.4832 30.8554 18.2249 31.2194 18.2249H32.8401C33.2041 18.2249 33.517 18.4832 33.5858 18.8406L34.3198 22.6513H36.2826L36.8934 18.8634ZM32.1388 22.6513L32 21.9298L31.8414 22.6513H32.1388ZM29.1053 25.9272L29.4622 24.0553H27.995L28.2924 25.9272H29.1053ZM31.5638 24.0553L31.1871 25.9272H32.7931L32.4164 24.0553H31.5638ZM35.7671 25.9272L36.0645 24.0553H34.5973L34.9542 25.9272H35.7671ZM28.5105 27.3117L28.6493 28.1892L28.8277 27.3117H28.5105ZM35.4102 28.1892L35.549 27.3117H35.2318L35.4102 28.1892Z\" :fill=\"fill\"/>\n\t  <path d=\"M32 8.96056C32.6075 8.96056 33.1391 8.42901 33.1391 7.82151V1.13905C33.1391 0.531559 32.6075 0 32 0C31.3925 0 30.861 0.531559 30.861 1.13905V7.82151C30.861 8.42901 31.3925 8.96056 32 8.96056Z\" :fill=\"fill\"/>\n\t  <path d=\"M27.0641 10.1756C27.6716 10.1756 28.2032 9.644 28.2032 9.0365V4.63216C28.2032 4.02466 27.6716 3.4931 27.0641 3.4931C26.4566 3.4931 25.925 4.02466 25.925 4.63216V9.0365C25.925 9.644 26.4566 10.1756 27.0641 10.1756Z\" :fill=\"fill\"/>\n\t  <path d=\"M36.9359 10.1756C37.5434 10.1756 38.075 9.644 38.075 9.0365V4.63216C38.075 4.02466 37.5434 3.4931 36.9359 3.4931C36.3284 3.4931 35.7969 4.02466 35.7969 4.63216V9.0365C35.7969 9.644 36.3284 10.1756 36.9359 10.1756Z\" :fill=\"fill\"/>\n\t  <path d=\"M56.864 26.8367C56.2094 26.1822 55.264 25.8186 54.3912 25.8186C54.3912 25.8186 54.3185 25.8186 54.2458 25.8186C52.864 25.8913 51.7004 26.8367 51.264 28.1458L48.064 37.673C47.4095 37.2366 46.6095 36.9457 45.8095 37.0185C44.7914 37.0912 43.9186 37.5275 43.2641 38.2548L36.646 45.8184C35.1914 47.4183 34.3915 49.4547 34.246 51.6365L33.5187 62.8364C33.5187 63.1273 33.5915 63.4182 33.8096 63.6364C34.0278 63.8545 34.3187 64 34.6096 64H45.2277C45.7368 64 46.1732 63.6364 46.3186 63.1273L47.1186 58.6182L53.3004 54.1819C54.9731 53.0183 56.064 51.0547 56.2821 48.9456L57.8094 29.4549C57.8821 28.5095 57.5185 27.564 56.864 26.8367ZM54.1003 48.8002C53.9549 50.2547 53.2276 51.5638 52.064 52.4365L45.5186 57.1637C45.3004 57.3092 45.155 57.6001 45.0823 57.8182L44.355 61.8909H35.7733L36.4278 51.8547C36.5005 50.182 37.2278 48.582 38.3187 47.3456L44.9368 39.7821C45.2277 39.4912 45.5913 39.273 46.0277 39.273C46.3913 39.273 46.6822 39.3457 46.9731 39.5639C47.1913 39.7093 47.4095 40.0002 47.4822 40.2912V40.3639C47.6277 40.873 47.555 41.382 47.1913 41.7457L41.8096 48.5092C41.4459 48.9456 41.5187 49.6729 41.955 50.0365C42.3914 50.4001 43.1186 50.3274 43.4823 49.891L48.864 43.1275C49.5186 42.2548 49.8095 41.1639 49.5913 40.1457L53.3004 28.9458C53.4458 28.5095 53.8822 28.1458 54.3912 28.1458C54.7549 28.1458 55.0458 28.2913 55.264 28.5095C55.4821 28.7276 55.6276 29.0913 55.6276 29.3822L54.1003 48.8002Z\" :fill=\"fill\"/>\n\t  <path d=\"M7.13605 26.8367C7.79059 26.1822 8.73603 25.8186 9.60875 25.8186C9.60875 25.8186 9.68148 25.8186 9.7542 25.8186C11.136 25.8913 12.2996 26.8367 12.736 28.1458L15.936 37.673C16.5905 37.2366 17.3905 36.9457 18.1905 37.0185C19.2086 37.0912 20.0814 37.5275 20.7359 38.2548L27.354 45.8184C28.8086 47.4183 29.6085 49.4547 29.754 51.6365L30.4813 62.8364C30.4813 63.1273 30.4085 63.4182 30.1904 63.6364C29.9722 63.8545 29.6813 64 29.3904 64H18.7723C18.2632 64 17.8268 63.6364 17.6814 63.1273L16.8814 58.6182L10.6996 54.1819C9.02694 53.0183 7.93604 51.0547 7.71786 48.9456L6.1906 29.4549C6.11788 28.5095 6.48151 27.564 7.13605 26.8367ZM9.89966 48.8002C10.0451 50.2547 10.7724 51.5638 11.936 52.4365L18.4814 57.1637C18.6996 57.3092 18.845 57.6001 18.9177 57.8182L19.645 61.8909H28.2267L27.5722 51.8547C27.4995 50.182 26.7722 48.582 25.6813 47.3456L19.0632 39.7821C18.7723 39.4912 18.4087 39.273 17.9723 39.273C17.6087 39.273 17.3178 39.3457 17.0269 39.5639C16.8087 39.7093 16.5905 40.0002 16.5178 40.2912V40.3639C16.3723 40.873 16.445 41.382 16.8087 41.7457L22.1904 48.5092C22.5541 48.9456 22.4813 49.6729 22.045 50.0365C21.6086 50.4001 20.8814 50.3274 20.5177 49.891L15.136 43.1275C14.4814 42.2548 14.1905 41.1639 14.4087 40.1457L10.6996 28.9458C10.5542 28.5095 10.1178 28.1458 9.60875 28.1458C9.24512 28.1458 8.95421 28.2913 8.73603 28.5095C8.51785 28.7276 8.3724 29.0913 8.3724 29.3822L9.89966 48.8002Z\" :fill=\"fill\"/>\n\t</svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  }\n\t})\n</script>",
              "name": "IconEarn.vue",
              "size": 5833,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/entities/IconEvents.vue",
              "relativePath": "modules/icons/entities/IconEvents.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg width=\"80\" height=\"80\" viewBox=\"0 0 80 80\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<path :fill=\"fill\" :class=\"$attrs.class\" d=\"M12 66V32H68V66C68 69.25 65.25 72 62 72H18C14.75 72 12 69.25 12 66ZM52 42V46C52 47.125 52.875 48 54 48H58C59.125 48 60 47.125 60 46V42C60 40.875 59.125 40 58 40H54C52.875 40 52 40.875 52 42ZM52 58V62C52 63.125 52.875 64 54 64H58C59.125 64 60 63.125 60 62V58C60 56.875 59.125 56 58 56H54C52.875 56 52 56.875 52 58ZM36 42V46C36 47.125 36.875 48 38 48H42C43.125 48 44 47.125 44 46V42C44 40.875 43.125 40 42 40H38C36.875 40 36 40.875 36 42ZM36 58V62C36 63.125 36.875 64 38 64H42C43.125 64 44 63.125 44 62V58C44 56.875 43.125 56 42 56H38C36.875 56 36 56.875 36 58ZM20 42V46C20 47.125 20.875 48 22 48H26C27.125 48 28 47.125 28 46V42C28 40.875 27.125 40 26 40H22C20.875 40 20 40.875 20 42ZM20 58V62C20 63.125 20.875 64 22 64H26C27.125 64 28 63.125 28 62V58C28 56.875 27.125 56 26 56H22C20.875 56 20 56.875 20 58ZM62 16C65.25 16 68 18.75 68 22V28H12V22C12 18.75 14.75 16 18 16H24V10C24 8.875 24.875 8 26 8H30C31.125 8 32 8.875 32 10V16H48V10C48 8.875 48.875 8 50 8H54C55.125 8 56 8.875 56 10V16H62Z\"/>\n\t</svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  }\n\t})\n</script>",
              "name": "IconEvents.vue",
              "size": 1295,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/entities/IconFeatured.vue",
              "relativePath": "modules/icons/entities/IconFeatured.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"22\" viewBox=\"0 0 24 22\" fill=\"none\">\n  \t<path :fill=\"fill\" :class=\"$attrs.class\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M22.995 17.6566V7.19019L23.0751 7.12914C23.6296 6.70673 24 6.0191 24 5.25224C24 3.92888 22.9425 2.87139 21.6191 2.87139C20.2958 2.87139 19.2383 3.92888 19.2383 5.25224C19.2383 5.96713 19.5563 6.63066 20.0606 7.08192L20.2377 7.24032L16.8614 10.0056L13.3296 4.44682L13.4952 4.33645C14.1276 3.91482 14.5244 3.20311 14.5244 2.38086C14.5244 1.05749 13.3234 0 12 0C10.6766 0 9.47557 1.05749 9.47557 2.38086C9.47557 3.20311 9.8724 3.91482 10.5048 4.33645L10.6704 4.44682L7.13856 10.0056L3.76232 7.24032L3.93936 7.08192C4.44371 6.63066 4.76171 5.96713 4.76171 5.25224C4.76171 3.92888 3.70422 2.87139 2.38086 2.87139C1.05749 2.87139 0 3.92888 0 5.25224C0 6.0191 0.370441 6.70673 0.924858 7.12914L1.00498 7.19019V17.6566C1.00498 17.72 0.994431 17.7727 0.987409 17.8077L0.986678 17.8114C0.979315 17.8482 0.976271 17.8659 0.976271 17.8863C0.976271 18.5977 1.35868 19.1932 2.03869 19.6955C2.72194 20.2002 3.68669 20.5948 4.79574 20.8952C7.01147 21.4953 9.97081 21.7029 12 21.7029C14.0292 21.7029 16.9885 21.4953 19.2043 20.8952C20.3133 20.5948 21.2781 20.2002 21.9613 19.6955C22.6413 19.1932 23.0237 18.5977 23.0237 17.8863C23.0237 17.8659 23.0207 17.8482 23.0133 17.8114L23.0126 17.8077C23.0056 17.7727 22.995 17.72 22.995 17.6566ZM21.1531 17.8863L21.02 17.7463C20.855 17.5725 20.5426 17.3799 20.1089 17.1888C19.6687 16.9947 19.0839 16.7939 18.3555 16.6122C16.8982 16.2488 14.8571 15.9601 12.2297 15.9601H11.7703C9.14285 15.9601 7.10181 16.2488 5.64451 16.6122C4.91606 16.7939 4.33134 16.9947 3.89111 17.1888C3.45743 17.3799 3.14505 17.5725 2.97996 17.7463L2.84688 17.8863L2.97996 18.0264C3.14505 18.2002 3.45743 18.3928 3.89111 18.5839C4.33134 18.7779 4.91606 18.9788 5.64451 19.1605C7.10181 19.5239 9.37256 19.8126 12 19.8126C14.6274 19.8126 16.8982 19.5239 18.3555 19.1605C19.0839 18.9788 19.6687 18.7779 20.1089 18.5839C20.5426 18.3928 20.855 18.2002 21.02 18.0264L21.1531 17.8863ZM12 14.0698C14.578 14.0698 18.4759 14.4149 20.8185 15.4591L21.1047 15.5867V8.95685L17.2426 12.1282C17.031 12.2919 16.7711 12.366 16.4774 12.3437C16.2142 12.2934 15.9859 12.1509 15.8498 11.9241L15.8471 11.9197L12.0266 5.90312H11.9734L8.15293 11.9197C7.85183 12.4075 7.19522 12.467 6.75741 12.1282L2.89531 8.95685V15.5867L3.18152 15.4591C5.52406 14.4149 9.42204 14.0698 12 14.0698Z\"/>\n\t</svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  }\n\t})\n</script>",
              "name": "IconFeatured.vue",
              "size": 2598,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/entities/IconFile.vue",
              "relativePath": "modules/icons/entities/IconFile.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"80\" height=\"80\" viewBox=\"0 0 80 80\" fill=\"none\">\n\t\t<path :fill=\"fill\" :class=\"$attrs.class\" d=\"M40.4192 33.6535H40.4231C44.2049 33.6535 47.2716 36.7242 47.2716 40.506C47.2716 44.2917 44.2049 47.3584 40.4192 47.3584C36.6374 47.3584 33.5667 44.2917 33.5667 40.506C33.5667 36.7362 36.6136 33.6774 40.3794 33.6575L40.3913 33.6535H40.3953L40.4192 33.6535ZM56.0983 44.5582H56.1063C57.0835 44.5582 58.0607 44.9316 58.8035 45.6784L68.8299 55.7049C69.4417 56.3166 69.4417 57.3057 68.8339 57.9215H68.8299C68.5241 58.2274 68.1228 58.3783 67.7217 58.3783C67.3244 58.3783 66.9312 58.2313 66.6253 57.9334H66.6174L66.6134 57.9215L56.5909 47.899V47.895C56.4559 47.76 56.2771 47.6925 56.0984 47.6925C55.9315 47.6925 55.7647 47.752 55.6336 47.8752L41.3171 62.1876C41.0112 62.4935 40.61 62.6484 40.2088 62.6484C39.8077 62.6484 39.4104 62.4935 39.1045 62.1916V62.1955L39.1006 62.1876C38.4888 61.5759 38.4888 60.5828 39.1006 59.971L40.9954 58.0761V57.9768L38.8582 55.8396C38.7232 55.7045 38.5484 55.633 38.3696 55.633C38.2028 55.633 38.0359 55.6926 37.9048 55.8158L37.9485 55.8277L37.9009 55.8158L29.3602 64.3564C29.0543 64.6623 28.6491 64.8173 28.2479 64.8173C27.8586 64.8173 27.4613 64.6663 27.1594 64.3763H27.1555L27.1396 64.3565C26.5278 63.7447 26.5278 62.7516 27.1396 62.1398L35.6644 53.619L35.6684 53.611H35.6723C36.3993 52.8881 37.3447 52.5186 38.2981 52.5028H38.314C38.3299 52.4988 38.3537 52.4988 38.3696 52.4988C39.3468 52.4988 40.328 52.8722 41.0748 53.6191L43.212 55.7563L43.3114 55.7602L53.3974 45.6742C54.1283 44.9473 55.0777 44.5739 56.0351 44.5619H56.051H56.047C56.0669 44.5579 56.0825 44.5582 56.0983 44.5582ZM52.6543 8.00019V8.00416H52.6384C52.2967 8.00416 51.9512 8.04786 51.6016 8.13922L7.01895 20.0842C7.00703 20.0882 6.99511 20.0921 6.98319 20.0961L6.97922 20.1001C4.83012 20.696 3.56291 22.9165 4.13891 25.0735L14.0818 62.1837C14.5704 64.0031 16.219 65.2028 18.0146 65.2028C18.1417 65.2028 18.2688 65.1988 18.3959 65.1869L18.4038 29.5066C18.4038 25.975 21.2203 23.099 24.732 23.0037L24.7399 23.0077C24.7955 23.0037 24.8511 22.9998 24.9067 22.9998V23.0037H59.8L56.5903 11.0191C56.1017 9.19968 54.4537 8.00019 52.6543 8.00019ZM24.9071 25.4356H24.8912H24.8713H24.8673C22.6348 25.4595 20.8354 27.2749 20.8354 29.5074V67.9243C20.8354 70.1727 22.6587 71.996 24.9071 72H71.067C73.3154 71.996 75.1348 70.1727 75.1388 67.9243V29.5074C75.1348 27.259 73.3154 25.4356 71.067 25.4356H24.9071Z\"/>\n\t</svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  }\n\t})\n</script>",
              "name": "IconFile.vue",
              "size": 2591,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/entities/IconFollowing.vue",
              "relativePath": "modules/icons/entities/IconFollowing.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n\t  <path d=\"M11.1827 2.81817C11.0057 3.18929 11.1073 3.63324 11.428 3.89139C11.876 4.25177 12.544 4.10005 12.7911 3.58142C13.3276 2.45686 14.511 1.69595 15.8586 1.78091C17.4586 1.88127 18.7431 3.18369 18.8199 4.78067C18.9065 6.59333 17.453 8.09554 15.6541 8.09554C15.4065 8.09554 15.1654 8.06707 14.9341 8.01292C14.3719 7.88174 13.8336 8.30374 13.8364 8.87933C13.8383 9.28919 14.1257 9.64678 14.5213 9.7392C14.9168 9.83163 15.3306 9.87645 15.7561 9.86805C18.4538 9.81343 20.6249 7.58158 20.602 4.89131C20.5791 2.1861 18.3724 0 15.6541 0C13.6805 0 11.9771 1.1521 11.1827 2.81817Z\" :fill=\"fill\" :class=\"$attrs.class\"/>\n\t  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.13109 3.61267C5.39826 3.61267 3.18317 5.82212 3.18317 8.54739C3.18317 11.2727 5.39873 13.4821 8.13109 13.4821C10.8634 13.4821 13.0795 11.2727 13.0795 8.54739C13.0795 5.82212 10.8639 3.61267 8.13109 3.61267ZM8.13109 5.38658C9.87854 5.38658 11.3007 6.8043 11.3007 8.54739C11.3007 10.2905 9.87901 11.7082 8.13109 11.7082C6.38317 11.7082 4.96198 10.2905 4.96198 8.54739C4.96198 6.8043 6.38363 5.38658 8.13109 5.38658Z\" :fill=\"fill\" :class=\"$attrs.class\"/>\n\t  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.50649 14.6678H8.51773L8.51726 14.6669C10.1004 14.6669 12.6362 14.7257 13.6585 14.834C14.3546 14.9082 15.0109 15.2285 15.5057 15.7214C16.0005 16.2153 16.3122 16.8595 16.3848 17.5504C16.3848 17.5504 16.4775 18.4453 16.4775 19.0339C16.4775 19.6226 16.3853 20.4792 16.3853 20.4792C16.3127 21.1813 16.0019 21.8745 15.5094 22.4375C15.0165 22.9991 14.363 23.4024 13.6674 23.5485C12.6699 23.774 10.217 23.9957 8.62305 23.9957H8.51211C8.39836 23.9985 8.27665 23.9999 8.14886 23.9999C6.48754 23.9999 3.72896 23.7717 2.78151 23.5471C2.0859 23.401 1.43242 22.9972 0.939497 22.4356C0.446577 21.8731 0.135752 21.1794 0.063663 20.4778C0.063663 20.4778 0 20.0203 0 19.153C0 18.2856 0.0650673 17.5504 0.0650673 17.5504C0.137156 16.8595 0.449386 16.2158 0.944178 15.7219C1.43897 15.2289 2.09479 14.9087 2.79134 14.8345C3.81369 14.7266 6.92194 14.6678 8.50649 14.6678ZM13.4694 16.5976C12.5823 16.5038 10.1922 16.4408 8.51726 16.4408L8.51773 16.4417H8.50603C6.85875 16.4417 3.88672 16.5029 2.97812 16.5986C2.69585 16.6284 2.4117 16.7666 2.20012 16.9771C1.99649 17.1807 1.86729 17.444 1.83499 17.7194C1.8261 17.8272 1.77882 18.4476 1.77882 19.153C1.77882 19.8168 1.82095 20.1917 1.82657 20.2379C1.82938 20.2558 1.83034 20.2652 1.83184 20.2799L1.83359 20.2967C1.86776 20.63 2.03066 20.9843 2.2797 21.2691C2.52499 21.5492 2.8419 21.7471 3.14804 21.8115C3.16302 21.8143 3.178 21.8176 3.19298 21.8213C3.92229 21.9945 6.50626 22.226 8.14886 22.226C8.26355 22.226 8.37074 22.2246 8.46811 22.2223C8.48262 22.2218 8.4976 22.2218 8.51211 22.2218H8.62305C10.1664 22.2218 12.4709 22.0001 13.2747 21.8185L13.3009 21.8129C13.607 21.7485 13.9244 21.5506 14.1706 21.2695C14.4187 20.9862 14.5816 20.6319 14.6158 20.2981L14.6167 20.2897C14.6392 20.0773 14.6987 19.4382 14.6987 19.0339C14.6987 18.6297 14.6392 17.9617 14.6158 17.7343C14.5863 17.4524 14.4557 17.1825 14.2474 16.9748C14.0377 16.7661 13.7535 16.628 13.4694 16.5976Z\" :fill=\"fill\" :class=\"$attrs.class\"/>\n\t  <path d=\"M13.7615 11.079C13.4914 11.0846 13.2386 11.2116 13.0739 11.4249L13.0734 11.424C12.6184 12.0135 13.05 12.866 13.7962 12.8515C14.6074 12.8356 15.4107 12.8272 16.0281 12.8272H16.0398C17.7152 12.8272 20.1053 12.8902 20.9919 12.9841C21.2761 13.0139 21.5602 13.1521 21.7699 13.3612C21.9778 13.569 22.1088 13.8388 22.1383 14.1208C22.1617 14.3481 22.2212 15.0184 22.2212 15.4204C22.2212 15.8223 22.1622 16.4632 22.1393 16.6761L22.1383 16.6845C22.1037 17.0178 21.9413 17.3726 21.6932 17.656C21.4465 17.937 21.1296 18.1349 20.8234 18.1993L20.7972 18.2049C20.2982 18.3179 19.2201 18.4463 18.1051 18.527C17.6515 18.5597 17.2953 18.9266 17.2789 19.3799C17.2602 19.9079 17.7049 20.3346 18.2329 20.2963C19.4102 20.2113 20.5758 20.0741 21.1899 19.9354C21.8856 19.7893 22.539 19.386 23.032 18.8244C23.5249 18.2619 23.8357 17.5682 23.9078 16.8661C23.9078 16.8661 24 16.009 24 15.4208C24 14.8327 23.9073 13.9373 23.9073 13.9373C23.8352 13.2464 23.523 12.6022 23.0282 12.1083C22.5334 11.6154 21.8776 11.2951 21.1811 11.2209C20.1587 11.1126 17.6229 11.0538 16.0398 11.0538H16.0286C15.4266 11.0538 14.605 11.0626 13.7615 11.079Z\" :fill=\"fill\" :class=\"$attrs.class\"/>\n\t</svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  }\n\t})\n</script>",
              "name": "IconFollowing.vue",
              "size": 4520,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/entities/IconGallery.vue",
              "relativePath": "modules/icons/entities/IconGallery.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"80\" height=\"80\" viewBox=\"0 0 80 80\" fill=\"none\">\n\t\t<path :fill=\"fill\" :class=\"$attrs.class\" d=\"M40.4192 33.6535H40.4231C44.2049 33.6535 47.2716 36.7242 47.2716 40.506C47.2716 44.2917 44.2049 47.3584 40.4192 47.3584C36.6374 47.3584 33.5667 44.2917 33.5667 40.506C33.5667 36.7362 36.6136 33.6774 40.3794 33.6575L40.3913 33.6535H40.3953L40.4192 33.6535ZM56.0983 44.5582H56.1063C57.0835 44.5582 58.0607 44.9316 58.8035 45.6784L68.8299 55.7049C69.4417 56.3166 69.4417 57.3057 68.8339 57.9215H68.8299C68.5241 58.2274 68.1228 58.3783 67.7217 58.3783C67.3244 58.3783 66.9312 58.2313 66.6253 57.9334H66.6174L66.6134 57.9215L56.5909 47.899V47.895C56.4559 47.76 56.2771 47.6925 56.0984 47.6925C55.9315 47.6925 55.7647 47.752 55.6336 47.8752L41.3171 62.1876C41.0112 62.4935 40.61 62.6484 40.2088 62.6484C39.8077 62.6484 39.4104 62.4935 39.1045 62.1916V62.1955L39.1006 62.1876C38.4888 61.5759 38.4888 60.5828 39.1006 59.971L40.9954 58.0761V57.9768L38.8582 55.8396C38.7232 55.7045 38.5484 55.633 38.3696 55.633C38.2028 55.633 38.0359 55.6926 37.9048 55.8158L37.9485 55.8277L37.9009 55.8158L29.3602 64.3564C29.0543 64.6623 28.6491 64.8173 28.2479 64.8173C27.8586 64.8173 27.4613 64.6663 27.1594 64.3763H27.1555L27.1396 64.3565C26.5278 63.7447 26.5278 62.7516 27.1396 62.1398L35.6644 53.619L35.6684 53.611H35.6723C36.3993 52.8881 37.3447 52.5186 38.2981 52.5028H38.314C38.3299 52.4988 38.3537 52.4988 38.3696 52.4988C39.3468 52.4988 40.328 52.8722 41.0748 53.6191L43.212 55.7563L43.3114 55.7602L53.3974 45.6742C54.1283 44.9473 55.0777 44.5739 56.0351 44.5619H56.051H56.047C56.0669 44.5579 56.0825 44.5582 56.0983 44.5582ZM52.6543 8.00019V8.00416H52.6384C52.2967 8.00416 51.9512 8.04786 51.6016 8.13922L7.01895 20.0842C7.00703 20.0882 6.99511 20.0921 6.98319 20.0961L6.97922 20.1001C4.83012 20.696 3.56291 22.9165 4.13891 25.0735L14.0818 62.1837C14.5704 64.0031 16.219 65.2028 18.0146 65.2028C18.1417 65.2028 18.2688 65.1988 18.3959 65.1869L18.4038 29.5066C18.4038 25.975 21.2203 23.099 24.732 23.0037L24.7399 23.0077C24.7955 23.0037 24.8511 22.9998 24.9067 22.9998V23.0037H59.8L56.5903 11.0191C56.1017 9.19968 54.4537 8.00019 52.6543 8.00019ZM24.9071 25.4356H24.8912H24.8713H24.8673C22.6348 25.4595 20.8354 27.2749 20.8354 29.5074V67.9243C20.8354 70.1727 22.6587 71.996 24.9071 72H71.067C73.3154 71.996 75.1348 70.1727 75.1388 67.9243V29.5074C75.1348 27.259 73.3154 25.4356 71.067 25.4356H24.9071Z\"/>\n\t</svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  }\n\t})\n</script>",
              "name": "IconGallery.vue",
              "size": 2591,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/entities/IconGroups.vue",
              "relativePath": "modules/icons/entities/IconGroups.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg width=\"80\" height=\"80\" viewBox=\"0 0 80 80\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<path d=\"M9 19C9 17.1435 9.7375 15.363 11.0503 14.0503C12.363 12.7375 14.1435 12 16 12C17.8565 12 19.637 12.7375 20.9497 14.0503C22.2625 15.363 23 17.1435 23 19C23 20.8565 22.2625 22.637 20.9497 23.9497C19.637 25.2625 17.8565 26 16 26C14.1435 26 12.363 25.2625 11.0503 23.9497C9.7375 22.637 9 20.8565 9 19ZM8 38.7125C6.75 40.1125 6 41.975 6 44C6 46.025 6.75 47.8875 8 49.2875V38.7125ZM26.05 32.55C22.3375 35.8375 20 40.65 20 46C20 50.2875 21.5 54.225 24 57.3125V60C24 62.2125 22.2125 64 20 64H12C9.7875 64 8 62.2125 8 60V56.65C3.275 54.4 0 49.5875 0 44C0 36.2625 6.2625 30 14 30H18C21 30 23.775 30.9375 26.05 32.5375V32.55ZM56 60V57.3125C58.5 54.225 60 50.2875 60 46C60 40.65 57.6625 35.8375 53.95 32.5375C56.225 30.9375 59 30 62 30H66C73.7375 30 80 36.2625 80 44C80 49.5875 76.725 54.4 72 56.65V60C72 62.2125 70.2125 64 68 64H60C57.7875 64 56 62.2125 56 60ZM57 19C57 17.1435 57.7375 15.363 59.0503 14.0503C60.363 12.7375 62.1435 12 64 12C65.8565 12 67.637 12.7375 68.9497 14.0503C70.2625 15.363 71 17.1435 71 19C71 20.8565 70.2625 22.637 68.9497 23.9497C67.637 25.2625 65.8565 26 64 26C62.1435 26 60.363 25.2625 59.0503 23.9497C57.7375 22.637 57 20.8565 57 19ZM72 38.7125V49.3C73.25 47.8875 74 46.0375 74 44.0125C74 41.9875 73.25 40.125 72 38.725V38.7125ZM40 12C42.1217 12 44.1566 12.8429 45.6569 14.3431C47.1571 15.8434 48 17.8783 48 20C48 22.1217 47.1571 24.1566 45.6569 25.6569C44.1566 27.1571 42.1217 28 40 28C37.8783 28 35.8434 27.1571 34.3431 25.6569C32.8429 24.1566 32 22.1217 32 20C32 17.8783 32.8429 15.8434 34.3431 14.3431C35.8434 12.8429 37.8783 12 40 12ZM30 46C30 48.025 30.75 49.875 32 51.2875V40.7125C30.75 42.125 30 43.975 30 46ZM48 40.7125V51.3C49.25 49.8875 50 48.0375 50 46.0125C50 43.9875 49.25 42.125 48 40.725V40.7125ZM56 46C56 51.5875 52.725 56.4 48 58.65V64C48 66.2125 46.2125 68 44 68H36C33.7875 68 32 66.2125 32 64V58.65C27.275 56.4 24 51.5875 24 46C24 38.2625 30.2625 32 38 32H42C49.7375 32 56 38.2625 56 46Z\" :fill=\"fill\"/>\n\t</svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  }\n\t})\n</script>",
              "name": "IconGroups.vue",
              "size": 2209,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/entities/IconHome.vue",
              "relativePath": "modules/icons/entities/IconHome.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg width=\"29\" height=\"28\" viewBox=\"0 0 29 28\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t<path d=\"M11.248 23.2363V16.0117C11.248 15.7598 11.3242 15.5576 11.4766 15.4053C11.6289 15.2529 11.8311 15.1768 12.083 15.1768H16.9258C17.1777 15.1768 17.377 15.2529 17.5234 15.4053C17.6758 15.5576 17.752 15.7598 17.752 16.0117V23.2363H11.248ZM1.94922 12.7949C1.63281 12.7949 1.38379 12.7012 1.20215 12.5137C1.02051 12.3203 0.929688 12.0977 0.929688 11.8457C0.929688 11.7051 0.961914 11.5674 1.02637 11.4326C1.09082 11.292 1.19043 11.166 1.3252 11.0547L13.0322 1.22852C13.4893 0.841797 13.9785 0.648438 14.5 0.648438C15.0215 0.648438 15.5107 0.841797 15.9678 1.22852L27.6748 11.0547C27.8096 11.166 27.9092 11.292 27.9736 11.4326C28.0381 11.5674 28.0703 11.7051 28.0703 11.8457C28.0703 12.0977 27.9795 12.3203 27.7979 12.5137C27.6221 12.7012 27.373 12.7949 27.0508 12.7949C26.8984 12.7949 26.7549 12.7598 26.6201 12.6895C26.4912 12.6191 26.3652 12.5342 26.2422 12.4346L14.9834 2.98633C14.8311 2.85742 14.6699 2.79297 14.5 2.79297C14.3301 2.79297 14.1689 2.85742 14.0166 2.98633L2.75781 12.4346C2.63477 12.5342 2.50586 12.6191 2.37109 12.6895C2.24219 12.7598 2.10156 12.7949 1.94922 12.7949ZM21.8213 6.72168V3.98828C21.8213 3.75977 21.8916 3.57812 22.0322 3.44336C22.1787 3.30273 22.3662 3.23242 22.5947 3.23242H23.9834C24.2178 3.23242 24.4053 3.30273 24.5459 3.44336C24.6865 3.57812 24.7568 3.75977 24.7568 3.98828V9.18262L21.8213 6.72168ZM6.84473 24.6514C6.01855 24.6514 5.37988 24.4287 4.92871 23.9834C4.47754 23.5439 4.25195 22.9199 4.25195 22.1113V9.5166L6.18555 8.18945V21.54C6.18555 21.9209 6.28223 22.2109 6.47559 22.4102C6.6748 22.6152 6.96484 22.7178 7.3457 22.7178H21.6455C22.0322 22.7178 22.3223 22.6152 22.5156 22.4102C22.7148 22.2109 22.8145 21.9209 22.8145 21.54V8.18066L24.7568 9.5166V22.1113C24.7568 22.9141 24.5283 23.5381 24.0713 23.9834C23.6201 24.4287 22.9814 24.6514 22.1553 24.6514H6.84473Z\" :fill=\"fill\"/>\n\t</svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  },\n\t  theme: {\n    \ttype: String,\n\t    default: \"light\"\n    }\n\t})\n</script>",
              "name": "IconHome.vue",
              "size": 2144,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/entities/IconInfo.vue",
              "relativePath": "modules/icons/entities/IconInfo.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"mn-b-small i-extra\" f width=\"64\" height=\"64\" viewBox=\"0 0 64 64\" fill=\"none\">\n    <circle cx=\"32\" cy=\"32\" r=\"22.875\"  :stroke=\"fill\" stroke-width=\"2.25\"/>\n    <path d=\"M34.207 22.4192L33.436 21.6L34.207 22.4192C34.8678 21.7973 35.173 20.9832 35.173 20.088C35.173 19.1688 34.8535 18.3301 34.1341 17.7234C33.4511 17.123 32.5912 16.875 31.672 16.875C30.7602 16.875 29.912 17.1319 29.2341 17.7338C28.5388 18.3482 28.243 19.1854 28.243 20.088C28.243 20.9931 28.5391 21.8248 29.209 22.4552L29.2337 22.4785L29.2598 22.5002C29.9451 23.0714 30.8001 23.301 31.708 23.301C32.6422 23.301 33.5294 23.057 34.207 22.4192ZM33.012 26.631H28.8847C27.8742 26.631 27.055 27.4502 27.055 28.4607C27.055 29.3486 27.6924 30.1083 28.5668 30.2626L29.503 30.4279V42.2561L28.2191 42.643C27.4211 42.8835 26.875 43.6184 26.875 44.4518C26.875 45.4952 27.7208 46.341 28.7642 46.341H35.7727C36.8134 46.341 37.657 45.4974 37.657 44.4567C37.657 43.6154 37.0993 42.8761 36.2904 42.6449L35.137 42.3154V28.756C35.137 27.5824 34.1856 26.631 33.012 26.631Z\"  :stroke=\"fill\" stroke-width=\"2.25\"/>\n  </svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  }\n\t})\n</script>",
              "name": "IconInfo.vue",
              "size": 1263,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/entities/IconLeftovers.vue",
              "relativePath": "modules/icons/entities/IconLeftovers.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"80\" height=\"80\" viewBox=\"0 0 80 80\" fill=\"none\">\n  \t<path :fill=\"fill\" :class=\"$attrs.class\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.45094 37.2842V58.457L38.8294 75.9966V45.8995L35.7538 51.2271C35.3171 51.9814 34.3507 52.2391 33.5964 51.8023L8.45094 37.2842ZM41.9962 4V22.8185L54.5056 30.0408L70.8026 20.6316L41.9962 4ZM38.8302 22.8219V4L10.0229 20.6316L26.3234 30.0425L38.8302 22.8219ZM31.3351 36.5831L38.255 40.5786L33.8084 48.279L3 30.4911L7.44657 22.7898L31.3351 36.5831ZM40.4098 25.5495L51.3472 31.8637L40.4124 38.1771L29.475 31.862L40.4098 25.5495ZM41.9945 45.8986V76L72.3738 58.4604V37.2842L47.2292 51.8023C46.4749 52.2391 45.5085 51.9814 45.0718 51.2271L41.9945 45.8986ZM73.0715 33.2355L47.0155 48.279L42.5689 40.5778L73.3782 22.7898L77.8247 30.4911L73.0715 33.2355Z\" />\n\t</svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  }\n\t})\n</script>",
              "name": "IconLeftovers.vue",
              "size": 991,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/entities/IconMusic.vue",
              "relativePath": "modules/icons/entities/IconMusic.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"80\" height=\"80\" viewBox=\"0 0 80 80\" fill=\"none\">\n\t\t<path :fill=\"fill\" :class=\"$attrs.class\" d=\"M40.4192 33.6535H40.4231C44.2049 33.6535 47.2716 36.7242 47.2716 40.506C47.2716 44.2917 44.2049 47.3584 40.4192 47.3584C36.6374 47.3584 33.5667 44.2917 33.5667 40.506C33.5667 36.7362 36.6136 33.6774 40.3794 33.6575L40.3913 33.6535H40.3953L40.4192 33.6535ZM56.0983 44.5582H56.1063C57.0835 44.5582 58.0607 44.9316 58.8035 45.6784L68.8299 55.7049C69.4417 56.3166 69.4417 57.3057 68.8339 57.9215H68.8299C68.5241 58.2274 68.1228 58.3783 67.7217 58.3783C67.3244 58.3783 66.9312 58.2313 66.6253 57.9334H66.6174L66.6134 57.9215L56.5909 47.899V47.895C56.4559 47.76 56.2771 47.6925 56.0984 47.6925C55.9315 47.6925 55.7647 47.752 55.6336 47.8752L41.3171 62.1876C41.0112 62.4935 40.61 62.6484 40.2088 62.6484C39.8077 62.6484 39.4104 62.4935 39.1045 62.1916V62.1955L39.1006 62.1876C38.4888 61.5759 38.4888 60.5828 39.1006 59.971L40.9954 58.0761V57.9768L38.8582 55.8396C38.7232 55.7045 38.5484 55.633 38.3696 55.633C38.2028 55.633 38.0359 55.6926 37.9048 55.8158L37.9485 55.8277L37.9009 55.8158L29.3602 64.3564C29.0543 64.6623 28.6491 64.8173 28.2479 64.8173C27.8586 64.8173 27.4613 64.6663 27.1594 64.3763H27.1555L27.1396 64.3565C26.5278 63.7447 26.5278 62.7516 27.1396 62.1398L35.6644 53.619L35.6684 53.611H35.6723C36.3993 52.8881 37.3447 52.5186 38.2981 52.5028H38.314C38.3299 52.4988 38.3537 52.4988 38.3696 52.4988C39.3468 52.4988 40.328 52.8722 41.0748 53.6191L43.212 55.7563L43.3114 55.7602L53.3974 45.6742C54.1283 44.9473 55.0777 44.5739 56.0351 44.5619H56.051H56.047C56.0669 44.5579 56.0825 44.5582 56.0983 44.5582ZM52.6543 8.00019V8.00416H52.6384C52.2967 8.00416 51.9512 8.04786 51.6016 8.13922L7.01895 20.0842C7.00703 20.0882 6.99511 20.0921 6.98319 20.0961L6.97922 20.1001C4.83012 20.696 3.56291 22.9165 4.13891 25.0735L14.0818 62.1837C14.5704 64.0031 16.219 65.2028 18.0146 65.2028C18.1417 65.2028 18.2688 65.1988 18.3959 65.1869L18.4038 29.5066C18.4038 25.975 21.2203 23.099 24.732 23.0037L24.7399 23.0077C24.7955 23.0037 24.8511 22.9998 24.9067 22.9998V23.0037H59.8L56.5903 11.0191C56.1017 9.19968 54.4537 8.00019 52.6543 8.00019ZM24.9071 25.4356H24.8912H24.8713H24.8673C22.6348 25.4595 20.8354 27.2749 20.8354 29.5074V67.9243C20.8354 70.1727 22.6587 71.996 24.9071 72H71.067C73.3154 71.996 75.1348 70.1727 75.1388 67.9243V29.5074C75.1348 27.259 73.3154 25.4356 71.067 25.4356H24.9071Z\"/>\n\t</svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  }\n\t})\n</script>",
              "name": "IconMusic.vue",
              "size": 2591,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/entities/IconOrders.vue",
              "relativePath": "modules/icons/entities/IconOrders.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"80\" height=\"80\" viewBox=\"0 0 80 80\" fill=\"none\">\n\t  <path :fill=\"fill\" :class=\"$attrs.class\" d=\"M22.8663 7.57143C22.2034 7.57143 21.7143 8.07429 21.7143 8.69143V15.5943C21.7143 15.7426 21.7437 15.8893 21.8008 16.0261C21.858 16.1629 21.9417 16.2869 22.0472 16.3912C22.1526 16.4953 22.2777 16.5775 22.4152 16.633C22.5527 16.6885 22.6997 16.7161 22.848 16.7143H57.152C57.4503 16.7143 57.7366 16.5967 57.9489 16.3871C58.1611 16.1774 58.2821 15.8926 58.2857 15.5943V8.69143C58.2857 8.06514 57.7692 7.57143 57.1337 7.57143H53.7143L49.1429 3H30.8572L26.2857 7.57143H22.8663Z\" />\n\t  <path :fill=\"fill\" :class=\"$attrs.class\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8 16.6778C8 11.6583 12.0858 7.5862 17.1429 7.57153V19.0229C17.1429 20.3029 18.1851 21.2858 19.4743 21.2858H60.5257C61.8149 21.2858 62.8571 20.2709 62.8571 19.0229V7.57148H62.8297C65.253 7.5642 67.58 8.51922 69.2995 10.2268C71.019 11.9343 71.9903 14.2545 72 16.6778V67.0367C72 72.0652 67.8994 76.1429 62.8297 76.1429H17.1703C14.747 76.1502 12.42 75.1952 10.7005 73.4877C8.98098 71.7802 8.00968 69.4599 8 67.0367V16.6778ZM21.7143 37.2858C21.7143 38.5109 22.7383 39.5715 24 39.5715H56C57.2343 39.5715 58.2857 38.5475 58.2857 37.2858C58.2857 36.0607 57.2617 35.0001 56 35.0001H24C22.7657 35.0001 21.7143 36.0241 21.7143 37.2858ZM21.7143 55.5715C21.7143 56.7967 22.7383 57.8572 24 57.8572H56C57.2343 57.8572 58.2857 56.8332 58.2857 55.5715C58.2857 54.3464 57.2617 53.2858 56 53.2858H24C22.7657 53.2858 21.7143 54.3098 21.7143 55.5715ZM56 44.1429H24C22.7376 44.1429 21.7143 45.1662 21.7143 46.4286C21.7143 47.691 22.7376 48.7143 24 48.7143H56C57.2624 48.7143 58.2857 47.691 58.2857 46.4286C58.2857 45.1662 57.2624 44.1429 56 44.1429Z\"/>\n\t</svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  }\n\t})\n</script>",
              "name": "IconOrders.vue",
              "size": 1897,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/entities/IconPayments.vue",
              "relativePath": "modules/icons/entities/IconPayments.vue",
              "extension": ".vue",
              "content": "<template>\n  <svg width=\"56\" height=\"56\" viewBox=\"0 0 56 56\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 14C9.87827 14 7.84344 14.8429 6.34315 16.3431C4.84285 17.8434 4 19.8783 4 22V38C4 40.1217 4.84285 42.1566 6.34315 43.6569C7.84344 45.1571 9.87827 46 12 46H44C46.1217 46 48.1566 45.1571 49.6569 43.6569C51.1571 42.1566 52 40.1217 52 38V22C52 19.8783 51.1571 17.8434 49.6569 16.3431C48.1566 14.8429 46.1217 14 44 14H12ZM4 26H52V30H4V26ZM42 34H36V38H42V34Z\" :fill=\"fill\"/>\n  </svg>\n</template>\n\n<script setup>\nconst props = defineProps({\n  fill: {\n    type: String,\n    default: 'rgb(var(--black))'\n  }\n})\n</script>",
              "name": "IconPayments.vue",
              "size": 677,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/entities/IconPopular.vue",
              "relativePath": "modules/icons/entities/IconPopular.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n  \t<path :fill=\"fill\" :class=\"$attrs.class\"  d=\"M5.81366 6.91304C5.54037 6.68944 5.68944 6.21739 6.03727 6.19255L7.95031 6.04348L8.67081 4.25466C8.81987 3.90683 9.29192 3.90683 9.41615 4.25466L10.1366 6.04348L12.0497 6.19255C12.4224 6.21739 12.5466 6.6646 12.2733 6.91304L10.8075 8.15528L11.2795 10.0186C11.354 10.3665 10.9814 10.6398 10.6832 10.4658L9.06832 9.44721L7.42857 10.4658C7.13043 10.6646 6.73292 10.3665 6.8323 10.0186L7.30435 8.15528L5.81366 6.91304ZM0 11.4099V3.58385C0 2.14286 1.1677 1 2.58385 1H15.5031C16.9441 1 18.087 2.1677 18.087 3.58385V11.4099C18.087 12.8509 16.9193 13.9938 15.5031 13.9938H6.65838L3.72671 16.9503C3.5528 17.1242 3.30435 17.2236 3.0559 17.2236C2.80745 17.2236 2.58385 17.1242 2.38509 16.9503C2.18634 16.7764 2.08696 16.5031 2.08696 16.2298V13.9193C0.89441 13.6957 0 12.6522 0 11.4099ZM1.81366 11.4099C1.81366 11.8323 2.16149 12.205 2.6087 12.205H3.90062V14.2422L5.93789 12.205H15.5528C15.9752 12.205 16.3478 11.8571 16.3478 11.4099V3.58385C16.3478 3.16149 16 2.78882 15.5528 2.78882H2.63354C2.21118 2.78882 1.83851 3.13665 1.83851 3.58385V11.4099H1.81366ZM24 9.2236C24 7.78261 22.8323 6.63975 21.4161 6.63975H19.8509V8.45342H21.4161C21.8385 8.45342 22.2112 8.80124 22.2112 9.24845V17.0745C22.2112 17.4969 21.8634 17.8696 21.4161 17.8696H20.1242V19.882L18.087 17.8447H8.47205C8.04969 17.8447 7.67702 17.4969 7.67702 17.0497V15.7081H7.37888L5.8882 17.1988C5.96273 18.5652 7.10559 19.6335 8.47205 19.6335H17.3416L20.2733 22.5652C20.4472 22.7391 20.6957 22.8385 20.9689 22.8385C21.5155 22.8385 21.9379 22.3913 21.9379 21.8696V19.559C23.1056 19.3106 24 18.2671 24 17.0248V9.2236Z\"/>\n\t</svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  }\n\t})\n</script>",
              "name": "IconPopular.vue",
              "size": 1871,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/entities/IconPrice.vue",
              "relativePath": "modules/icons/entities/IconPrice.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"27\" height=\"27\" viewBox=\"0 0 27 27\" fill=\"none\">\n\t  <path :fill=\"fill\" :class=\"$attrs.class\" d=\"M14.2208 24.915C13.4005 25.7295 12.5655 26.1367 11.7159 26.1367C10.8721 26.1426 10.0342 25.7324 9.20221 24.9062L1.96002 17.6816C1.13385 16.8555 0.723695 16.0176 0.729554 15.168C0.735413 14.3184 1.14557 13.4834 1.96002 12.6631L13.1221 1.53613C13.4034 1.24902 13.6583 1.04102 13.8868 0.912109C14.1153 0.783203 14.3672 0.698242 14.6426 0.657227C14.9239 0.616211 15.2755 0.595703 15.6973 0.595703H20.004C20.4024 0.595703 20.7305 0.630859 20.9883 0.701172C21.2462 0.771484 21.4864 0.891602 21.709 1.06152C21.9317 1.22559 22.1954 1.45996 22.5001 1.76465L25.1104 4.38379C25.4151 4.68262 25.6495 4.94629 25.8135 5.1748C25.9835 5.39746 26.1036 5.6377 26.1739 5.89551C26.2442 6.14746 26.2794 6.47266 26.2794 6.87109V11.1777C26.2794 11.5996 26.2589 11.9512 26.2178 12.2324C26.1827 12.5078 26.1006 12.7627 25.9717 12.9971C25.8428 13.2256 25.6348 13.4805 25.3477 13.7617L14.2208 24.915ZM18.0528 9.77148C18.4864 9.77148 18.8497 9.625 19.1426 9.33203C19.4356 9.0332 19.5821 8.66992 19.5821 8.24219C19.5821 7.81445 19.4356 7.4541 19.1426 7.16113C18.8497 6.8623 18.4864 6.71289 18.0528 6.71289C17.6192 6.71289 17.2559 6.8623 16.963 7.16113C16.67 7.4541 16.5235 7.81445 16.5235 8.24219C16.5235 8.66992 16.67 9.0332 16.963 9.33203C17.2559 9.625 17.6192 9.77148 18.0528 9.77148Z\"/>\n\t</svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  }\n\t})\n</script>",
              "name": "IconPrice.vue",
              "size": 1564,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/entities/IconProducts.vue",
              "relativePath": "modules/icons/entities/IconProducts.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"80\" height=\"80\" viewBox=\"0 0 80 80\" fill=\"none\">\n\t  <path d=\"M73 26.6401H62.44L49.84 11.1601C48.76 9.84015 46.96 9.72015 45.64 10.6802C44.32 11.7602 44.2 13.6801 45.16 14.8802L54.64 26.5202H25.36L34.84 14.8802C35.92 13.5601 35.68 11.7602 34.48 10.6802C33.16 9.60015 31.24 9.84015 30.28 11.1601L17.56 26.6401H7C5.32 26.6401 4 27.9601 4 29.6401C4 31.3201 5.32 32.6401 7 32.6401H8.92L13.48 62.5201C14.2 66.9601 17.92 70.2002 22.36 70.2002H57.64C62.08 70.2002 65.92 66.9601 66.52 62.5201L71.08 32.6401H73C74.68 32.6401 76 31.3201 76 29.6401C76 27.9601 74.68 26.6401 73 26.6401ZM25 53.6402V43.0802C25 41.4002 26.32 40.0802 28 40.0802C29.68 40.0802 31 41.4002 31 43.0802V53.6402C31 55.3202 29.68 56.6402 28 56.6402C26.32 56.6402 25 55.2002 25 53.6402ZM37 53.6402V43.0802C37 41.4002 38.32 40.0802 40 40.0802C41.68 40.0802 43 41.4002 43 43.0802V53.6402C43 55.3202 41.68 56.6402 40 56.6402C38.32 56.6402 37 55.2002 37 53.6402ZM55 53.6402C55 55.3202 53.68 56.6402 52 56.6402C50.32 56.6402 49 55.3202 49 53.6402V43.0802C49 41.4002 50.32 40.0802 52 40.0802C53.68 40.0802 55 41.4002 55 43.0802V53.6402Z\" :fill=\"fill\" :class=\"$attrs.class\" />\n\t</svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  }\n\t})\n</script>",
              "name": "IconProducts.vue",
              "size": 1335,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/entities/IconProfile.vue",
              "relativePath": "modules/icons/entities/IconProfile.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<path :fill=\"fill\" :class=\"$attrs.class\" d=\"M13.875 14.375H10.125C6.33594 14.375 3.25 17.4609 3.25 21.25C3.25 21.9531 3.79688 22.5 4.5 22.5H19.5C20.2031 22.5 20.75 21.9531 20.75 21.25C20.75 17.4609 17.6641 14.375 13.875 14.375ZM5.16406 20.625C5.47656 18.1641 7.58594 16.25 10.125 16.25H13.875C16.4141 16.25 18.5234 18.1641 18.8359 20.625H5.16406ZM12 12.5C14.7734 12.5 17 10.2734 17 7.5C17 4.72656 14.7734 2.5 12 2.5C9.22656 2.5 7 4.72656 7 7.5C7 10.2734 9.22656 12.5 12 12.5ZM12 4.375C13.7188 4.375 15.125 5.78125 15.125 7.5C15.125 9.21875 13.7188 10.625 12 10.625C10.2812 10.625 8.875 9.21875 8.875 7.5C8.875 5.78125 10.2812 4.375 12 4.375Z\"/>\n\t</svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  }\n\t})\n</script>",
              "name": "IconProfile.vue",
              "size": 902,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/entities/IconRecent.vue",
              "relativePath": "modules/icons/entities/IconRecent.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"24\" viewBox=\"0 0 25 24\" fill=\"none\">\n\t  <path d=\"M20.5045 10.7065L19.5981 15.4534C19.5674 15.6007 19.4929 15.7246 19.3771 15.8221C19.2599 15.9208 19.1222 15.9707 18.9686 15.9707H18.0779C17.9281 15.9707 17.7947 15.9199 17.6825 15.8202C17.5704 15.7205 17.504 15.5938 17.4853 15.4447L17.4852 15.4433L17.1796 12.7158L16.8738 15.4447C16.8551 15.5938 16.7887 15.7205 16.6766 15.8202C16.5644 15.9199 16.431 15.9707 16.2812 15.9707H15.3905C15.237 15.9707 15.0978 15.9209 14.9765 15.8238L14.9743 15.8221C14.8579 15.7241 14.7855 15.599 14.7604 15.4504L13.855 10.7083C13.8228 10.5642 13.8534 10.4302 13.9468 10.3167L13.9492 10.3138C14.0461 10.204 14.1704 10.1462 14.3156 10.1462H14.9913C15.1411 10.1462 15.2745 10.1971 15.3866 10.2968C15.4987 10.3965 15.5652 10.5232 15.5838 10.6723L15.584 10.6737L15.8802 13.3172L16.1258 10.6768C16.1385 10.5261 16.2028 10.3973 16.3158 10.2968C16.428 10.1971 16.5614 10.1462 16.7112 10.1462H17.6786C17.8285 10.1462 17.9619 10.1971 18.074 10.2968C18.187 10.3973 18.2513 10.5255 18.264 10.6762L18.5096 13.3172L18.806 10.6723C18.8246 10.5232 18.8911 10.3965 19.0032 10.2968C19.1153 10.1971 19.2487 10.1462 19.3986 10.1462H20.0435C20.189 10.1462 20.3122 10.2044 20.4046 10.3167C20.4972 10.4291 20.5306 10.5627 20.5045 10.7065Z\" :fill=\"fill\" :class=\"$attrs.class\"/>\n\t  <path d=\"M13.5162 10.3089C13.4097 10.2023 13.2798 10.1462 13.1315 10.1462H10.3213C10.173 10.1462 10.0431 10.2023 9.93658 10.3089C9.83003 10.4155 9.77393 10.5453 9.77393 10.6936V15.4234C9.77393 15.5716 9.83003 15.7015 9.93658 15.8081C10.0431 15.9146 10.173 15.9707 10.3213 15.9707H13.1315C13.2798 15.9707 13.4097 15.9146 13.5162 15.8081C13.6228 15.7015 13.6789 15.5716 13.6789 15.4234V15.0702C13.6789 14.9219 13.6228 14.792 13.5162 14.6855C13.4097 14.5789 13.2798 14.5228 13.1315 14.5228H11.529V13.6673H12.9779C13.1262 13.6673 13.2561 13.6112 13.3626 13.5046C13.4692 13.3981 13.5253 13.2682 13.5253 13.1199V12.8435C13.5253 12.6952 13.4692 12.5654 13.3626 12.4588C13.2561 12.3523 13.1262 12.2961 12.9779 12.2961H11.529V11.5941H13.1315C13.2798 11.5941 13.4097 11.538 13.5162 11.4315C13.6228 11.3249 13.6789 11.195 13.6789 11.0468V10.6936C13.6789 10.5453 13.6228 10.4155 13.5162 10.3089Z\" :fill=\"fill\" :class=\"$attrs.class\"/>\n\t  <path d=\"M6.26485 13.2336L7.40037 15.5177C7.47177 15.6633 7.56912 15.7784 7.69431 15.8563C7.81956 15.9342 7.96586 15.9707 8.12847 15.9707H8.71202C8.86028 15.9707 8.99016 15.9146 9.09671 15.8081C9.20327 15.7015 9.25937 15.5716 9.25937 15.4234V10.6936C9.25937 10.5453 9.20327 10.4155 9.09671 10.3089C8.99016 10.2023 8.86028 10.1462 8.71202 10.1462H8.12847C7.98021 10.1462 7.85034 10.2023 7.74378 10.3089C7.63723 10.4155 7.58112 10.5453 7.58112 10.6936V12.8834L6.44561 10.5992C6.37421 10.4537 6.27687 10.3385 6.15167 10.2607C6.02642 10.1828 5.88012 10.1462 5.7175 10.1462H5.13396C4.9857 10.1462 4.85582 10.2023 4.74927 10.3089C4.64271 10.4155 4.58661 10.5453 4.58661 10.6936V15.4234C4.58661 15.5716 4.64271 15.7015 4.74927 15.8081C4.85582 15.9146 4.9857 15.9707 5.13396 15.9707H5.7175C5.86577 15.9707 5.99564 15.9146 6.1022 15.8081C6.20875 15.7015 6.26485 15.5716 6.26485 15.4234V13.2336Z\" :fill=\"fill\" :class=\"$attrs.class\"/>\n\t  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.62497 0C8.23077 0 8.72186 0.491095 8.72186 1.09689V2.74225H15.3032V1.09689C15.3032 0.491095 15.7943 0 16.4001 0C17.0059 0 17.497 0.491095 17.497 1.09689V2.74225H19.0655C22.0945 2.74225 24.55 5.19773 24.55 8.22671V17.7697C24.55 20.7987 22.0945 23.2541 19.0655 23.2541H6.03445C3.00546 23.2541 0.549988 20.7987 0.549988 17.7697V8.22671C0.549988 5.19772 3.00546 2.74225 6.03445 2.74225H6.52808V1.09689C6.52808 0.491095 7.01917 0 7.62497 0ZM15.3032 4.93603V6.58135C15.3032 7.18715 15.7943 7.67824 16.4001 7.67824C17.0059 7.67824 17.497 7.18715 17.497 6.58135V4.93603H19.0655C20.8829 4.93603 22.3562 6.40932 22.3562 8.22671V17.7697C22.3562 19.5871 20.8829 21.0604 19.0655 21.0604H6.03445C4.21706 21.0604 2.74377 19.5871 2.74377 17.7697V8.22671C2.74377 6.40932 4.21706 4.93603 6.03445 4.93603H6.52808V6.58135C6.52808 7.18715 7.01917 7.67824 7.62497 7.67824C8.23077 7.67824 8.72186 7.18715 8.72186 6.58135V4.93603H15.3032Z\" :fill=\"fill\" :class=\"$attrs.class\"/>\n\t</svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  }\n\t})\n</script>",
              "name": "IconRecent.vue",
              "size": 4362,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/entities/IconSettings.vue",
              "relativePath": "modules/icons/entities/IconSettings.vue",
              "extension": ".vue",
              "content": "<template>\n<svg height=\"800px\" width=\"800px\" version=\"1.1\" id=\"_x32_\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 512 512\"  xml:space=\"preserve\">\n\t<path :fill=\"fill\"  d=\"M502.325,307.303l-39.006-30.805c-6.215-4.908-9.665-12.429-9.668-20.348c0-0.084,0-0.168,0-0.252\n\t\tc-0.014-7.936,3.44-15.478,9.667-20.396l39.007-30.806c8.933-7.055,12.093-19.185,7.737-29.701l-17.134-41.366\n\t\tc-4.356-10.516-15.167-16.86-26.472-15.532l-49.366,5.8c-7.881,0.926-15.656-1.966-21.258-7.586\n\t\tc-0.059-0.06-0.118-0.119-0.177-0.178c-5.597-5.602-8.476-13.36-7.552-21.225l5.799-49.363\n\t\tc1.328-11.305-5.015-22.116-15.531-26.472L337.004,1.939c-10.516-4.356-22.646-1.196-29.701,7.736l-30.805,39.005\n\t\tc-4.908,6.215-12.43,9.665-20.349,9.668c-0.084,0-0.168,0-0.252,0c-7.935,0.014-15.477-3.44-20.395-9.667L204.697,9.675\n\t\tc-7.055-8.933-19.185-12.092-29.702-7.736L133.63,19.072c-10.516,4.356-16.86,15.167-15.532,26.473l5.799,49.366\n\t\tc0.926,7.881-1.964,15.656-7.585,21.257c-0.059,0.059-0.118,0.118-0.178,0.178c-5.602,5.598-13.36,8.477-21.226,7.552\n\t\tl-49.363-5.799c-11.305-1.328-22.116,5.015-26.472,15.531L1.939,174.996c-4.356,10.516-1.196,22.646,7.736,29.701l39.006,30.805\n\t\tc6.215,4.908,9.665,12.429,9.668,20.348c0,0.084,0,0.167,0,0.251c0.014,7.935-3.44,15.477-9.667,20.395L9.675,307.303\n\t\tc-8.933,7.055-12.092,19.185-7.736,29.701l17.134,41.365c4.356,10.516,15.168,16.86,26.472,15.532l49.366-5.799\n\t\tc7.882-0.926,15.656,1.965,21.258,7.586c0.059,0.059,0.118,0.119,0.178,0.178c5.597,5.603,8.476,13.36,7.552,21.226l-5.799,49.364\n\t\tc-1.328,11.305,5.015,22.116,15.532,26.472l41.366,17.134c10.516,4.356,22.646,1.196,29.701-7.736l30.804-39.005\n\t\tc4.908-6.215,12.43-9.665,20.348-9.669c0.084,0,0.168,0,0.251,0c7.936-0.014,15.478,3.44,20.396,9.667l30.806,39.007\n\t\tc7.055,8.933,19.185,12.093,29.701,7.736l41.366-17.134c10.516-4.356,16.86-15.168,15.532-26.472l-5.8-49.366\n\t\tc-0.926-7.881,1.965-15.656,7.586-21.257c0.059-0.059,0.119-0.119,0.178-0.178c5.602-5.597,13.36-8.476,21.225-7.552l49.364,5.799\n\t\tc11.305,1.328,22.117-5.015,26.472-15.531l17.134-41.365C514.418,326.488,511.258,314.358,502.325,307.303z M281.292,329.698\n\t\tc-39.68,16.436-85.172-2.407-101.607-42.087c-16.436-39.68,2.407-85.171,42.087-101.608c39.68-16.436,85.172,2.407,101.608,42.088\n\t\tC339.815,267.771,320.972,313.262,281.292,329.698z\"/>\n</svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  }\n\t})\n</script>",
              "name": "IconSettings.vue",
              "size": 2457,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/entities/IconShopcart.vue",
              "relativePath": "modules/icons/entities/IconShopcart.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"27\" height=\"23\" viewBox=\"0 0 27 23\" fill=\"none\">\n\t  <path d=\"M25.77 5.15977C25.24 4.38977 24.39 3.91977 23.46 3.86977L7.42 3.02977L7.3 2.41977C7.02 1.01977 5.78 0.00976562 4.36 0.00976562H1C0.45 0.00976562 0 0.459766 0 1.00977C0 1.55977 0.45 2.00977 1 2.00977H4.36C4.84 2.00977 5.25 2.34977 5.34 2.80977L7.54 13.7898C7.91 15.6498 9.56 17.0098 11.46 17.0098H20.28C22.02 17.0098 23.56 15.8898 24.09 14.2298L26.16 7.78977C26.45 6.89977 26.31 5.93977 25.77 5.16977V5.15977ZM24.25 7.16977L22.18 13.6098C21.91 14.4398 21.15 14.9998 20.28 14.9998H11.46C10.51 14.9998 9.69 14.3198 9.5 13.3898L7.83 5.03977L23.36 5.85977C23.67 5.87977 23.95 6.02977 24.13 6.28977C24.31 6.54977 24.35 6.86977 24.26 7.15977L24.25 7.16977Z\"  :fill=\"fill\" :class=\"$attrs.class\"/>\n\t  <path d=\"M12 23C13.1046 23 14 22.1046 14 21C14 19.8954 13.1046 19 12 19C10.8954 19 10 19.8954 10 21C10 22.1046 10.8954 23 12 23Z\"  :fill=\"fill\" :class=\"$attrs.class\"/>\n\t  <path d=\"M20 23C21.1046 23 22 22.1046 22 21C22 19.8954 21.1046 19 20 19C18.8954 19 18 19.8954 18 21C18 22.1046 18.8954 23 20 23Z\"  :fill=\"fill\" :class=\"$attrs.class\"/>\n\t</svg>\n</template>\n\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  }\n\t})\n</script>",
              "name": "IconShopcart.vue",
              "size": 1299,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/entities/IconTime.vue",
              "relativePath": "modules/icons/entities/IconTime.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg width=\"50\" height=\"49\" viewBox=\"0 0 50 49\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t<path d=\"M24.7274 45.2266C13.2178 45.2266 3.85356 35.8624 3.85356 24.3528C3.85356 12.8432 13.2178 3.47897 24.7274 3.47897C36.237 3.47897 45.6012 12.8432 45.6012 24.3528C45.6012 35.8624 36.237 45.2266 24.7274 45.2266ZM24.7274 0C11.2777 0 0.374592 10.9031 0.374592 24.3528C0.374592 37.8025 11.2777 48.7056 24.7274 48.7056C38.1771 48.7056 49.0802 37.8025 49.0802 24.3528C49.0802 10.9031 38.1771 0 24.7274 0ZM34.0047 23.773H26.4669V11.5966C26.4669 11.1352 26.2836 10.6928 25.9574 10.3666C25.6312 10.0404 25.1887 9.85709 24.7274 9.85709C24.2661 9.85709 23.8236 10.0404 23.4974 10.3666C23.1712 10.6928 22.9879 11.1352 22.9879 11.5966V25.5125C22.9879 25.9738 23.1712 26.4162 23.4974 26.7425C23.8236 27.0687 24.2661 27.2519 24.7274 27.2519H34.0047C34.2331 27.2519 34.4593 27.207 34.6703 27.1195C34.8814 27.0321 35.0731 26.904 35.2347 26.7425C35.3962 26.5809 35.5243 26.3892 35.6117 26.1781C35.6991 25.9671 35.7441 25.7409 35.7441 25.5125C35.7441 25.284 35.6991 25.0578 35.6117 24.8468C35.5243 24.6357 35.3962 24.444 35.2347 24.2825C35.0731 24.1209 34.8814 23.9928 34.6703 23.9054C34.4593 23.818 34.2331 23.773 34.0047 23.773Z\"  :class=\"$attrs.class\" fill=\"rgb(var(--black))\"/>\n\t</svg>\n</template>\n",
              "name": "IconTime.vue",
              "size": 1298,
              "type": "source"
            }
          ]
        },
        "labels": {
          "_files": [
            {
              "path": "../../src/modules/icons/labels/LabelAppStore.vue",
              "relativePath": "modules/icons/labels/LabelAppStore.vue",
              "extension": ".vue",
              "content": "<template>\n<svg width=\"205\" height=\"59\" viewBox=\"0 0 205 59\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t<path d=\"M203.096 52.1958C203.096 55.34 200.496 57.8869 197.281 57.8869H6.9581C3.74381 57.8869 1.13477 55.34 1.13477 52.1958V6.81174C1.13477 3.66904 3.74381 1.11328 6.9581 1.11328H197.279C200.496 1.11328 203.095 3.66904 203.095 6.81174L203.096 52.1958Z\" fill=\"rgb(var(--black))\"/>\n\t<path d=\"M196.667 1.18185C200.169 1.18185 203.019 3.96038 203.019 7.375V51.625C203.019 55.0396 200.169 57.8182 196.667 57.8182H7.5641C4.06192 57.8182 1.21215 55.0396 1.21215 51.625V7.375C1.21215 3.96038 4.06192 1.18185 7.5641 1.18185H196.667ZM196.667 5.4802e-06H7.5641C3.40574 5.4802e-06 0 3.3206 0 7.375V51.625C0 55.6794 3.40574 59 7.5641 59H196.667C200.825 59 204.231 55.6794 204.231 51.625V7.375C204.231 3.3206 200.825 5.4802e-06 196.667 5.4802e-06Z\" fill=\"#A6A6A6\"/>\n\t<path d=\"M45.578 29.1812C45.5341 24.4273 49.5703 22.1145 49.7549 22.0068C47.469 18.7574 43.926 18.3134 42.6809 18.278C39.7052 17.9727 36.8187 20.0141 35.3029 20.0141C33.7568 20.0141 31.4225 18.3075 28.9067 18.3577C25.6692 18.4064 22.6406 20.2339 20.9795 23.0718C17.5515 28.8582 20.1081 37.3616 23.3925 42.0388C25.0354 44.3295 26.9551 46.8871 29.4679 46.7972C31.9263 46.6983 32.8446 45.2691 35.8112 45.2691C38.7506 45.2691 39.6129 46.7972 42.1756 46.7396C44.814 46.6983 46.4751 44.4386 48.0605 42.1273C49.9591 39.5018 50.7216 36.9161 50.7518 36.7834C50.6898 36.7627 45.6279 34.8792 45.578 29.1812Z\" fill=\"rgb(var(--white))\"/>\n\t<path d=\"M40.7369 15.2012C42.0591 13.589 42.9638 11.3957 42.7127 9.16992C40.799 9.25252 38.4057 10.4605 37.0275 12.0373C35.8082 13.4268 34.7189 15.7042 35.0003 17.8459C37.15 18.0022 39.3572 16.7883 40.7369 15.2012Z\" fill=\"rgb(var(--white))\"/>\n\t<path d=\"M81.1547 46.4691H77.7191L75.8372 40.7034H69.2957L67.503 46.4691H64.1582L70.6391 26.8398H74.642L81.1547 46.4691ZM75.2699 38.2844L73.5679 33.1587C73.3879 32.6351 73.0506 31.402 72.5528 29.4609H72.4923C72.2941 30.2958 71.9749 31.5289 71.5362 33.1587L69.8646 38.2844H75.2699V38.2844Z\" fill=\"rgb(var(--white))\"/>\n\t<path d=\"M97.8218 39.218C97.8218 41.6252 97.1546 43.5279 95.8203 44.9248C94.6252 46.1682 93.1411 46.7892 91.3696 46.7892C89.4574 46.7892 88.0837 46.1195 87.2472 44.7802H87.1866V52.2363H83.9613V36.9745C83.9613 35.4612 83.9205 33.908 83.8418 32.315H86.6783L86.8584 34.5585H86.9189C87.9945 32.8681 89.6268 32.0244 91.8174 32.0244C93.5299 32.0244 94.9595 32.6837 96.1032 34.0039C97.2499 35.3255 97.8218 37.063 97.8218 39.218ZM94.5359 39.333C94.5359 37.9554 94.2182 36.8196 93.5798 35.9258C92.8824 34.9936 91.946 34.5275 90.772 34.5275C89.9763 34.5275 89.2532 34.7871 88.6072 35.2989C87.9597 35.8152 87.5361 36.4892 87.3379 37.3241C87.2381 37.7135 87.1882 38.0321 87.1882 38.2828V40.6428C87.1882 41.6724 87.5119 42.5412 88.1594 43.2506C88.8069 43.9601 89.648 44.3141 90.6828 44.3141C91.8976 44.3141 92.8431 43.8569 93.5193 42.9453C94.1971 42.0323 94.5359 40.8287 94.5359 39.333Z\" fill=\"rgb(var(--white))\"/>\n\t<path d=\"M114.518 39.218C114.518 41.6252 113.85 43.5279 112.515 44.9248C111.321 46.1682 109.837 46.7892 108.065 46.7892C106.153 46.7892 104.779 46.1195 103.944 44.7802H103.884V52.2363H100.659V36.9745C100.659 35.4612 100.618 33.908 100.539 32.315H103.376L103.556 34.5585H103.616C104.69 32.8681 106.323 32.0244 108.515 32.0244C110.226 32.0244 111.655 32.6837 112.802 34.0039C113.944 35.3255 114.518 37.063 114.518 39.218ZM111.232 39.333C111.232 37.9554 110.912 36.8196 110.274 35.9258C109.577 34.9936 108.643 34.5275 107.468 34.5275C106.671 34.5275 105.949 34.7871 105.301 35.2989C104.654 35.8152 104.232 36.4892 104.034 37.3241C103.935 37.7135 103.884 38.0321 103.884 38.2828V40.6428C103.884 41.6724 104.208 42.5412 104.852 43.2506C105.5 43.9586 106.341 44.3141 107.379 44.3141C108.593 44.3141 109.539 43.8569 110.215 42.9453C110.893 42.0323 111.232 40.8287 111.232 39.333Z\" fill=\"rgb(var(--white))\"/>\n\t<path d=\"M133.187 40.964C133.187 42.6337 132.593 43.9922 131.399 45.0409C130.087 46.187 128.261 46.7593 125.915 46.7593C123.749 46.7593 122.012 46.3522 120.697 45.5365L121.445 42.9154C122.861 43.7503 124.414 44.1692 126.107 44.1692C127.322 44.1692 128.267 43.9007 128.947 43.3668C129.623 42.8328 129.96 42.116 129.96 41.2221C129.96 40.4256 129.682 39.7545 129.124 39.2102C128.568 38.6659 127.641 38.16 126.346 37.6924C122.821 36.4107 121.06 34.533 121.06 32.0638C121.06 30.4502 121.678 29.1271 122.914 28.0976C124.145 27.0665 125.788 26.5518 127.842 26.5518C129.674 26.5518 131.196 26.863 132.411 27.484L131.605 30.0475C130.47 29.4457 129.187 29.1448 127.752 29.1448C126.617 29.1448 125.73 29.4177 125.095 29.9605C124.558 30.4458 124.289 31.0372 124.289 31.7379C124.289 32.5137 124.596 33.1553 125.213 33.6598C125.75 34.1259 126.726 34.6303 128.142 35.1746C129.874 35.8546 131.146 36.6496 131.965 37.5612C132.78 38.4698 133.187 39.607 133.187 40.964Z\" fill=\"rgb(var(--white))\"/>\n\t<path d=\"M143.851 34.6748H140.296V41.5468C140.296 43.2947 140.922 44.1679 142.178 44.1679C142.754 44.1679 143.232 44.1192 143.61 44.0219L143.699 46.4099C143.064 46.6415 142.227 46.758 141.191 46.758C139.917 46.758 138.922 46.3789 138.203 45.6223C137.488 44.8641 137.128 43.5927 137.128 41.8064V34.6719H135.01V32.3119H137.128V29.7203L140.296 28.7881V32.3119H143.851V34.6748Z\" fill=\"rgb(var(--white))\"/>\n\t<path d=\"M159.891 39.275C159.891 41.4506 159.252 43.2369 157.979 44.6337C156.643 46.0718 154.87 46.7887 152.66 46.7887C150.53 46.7887 148.834 46.0998 147.569 44.7222C146.304 43.3445 145.672 41.6055 145.672 39.5095C145.672 37.3162 146.322 35.5197 147.628 34.1228C148.93 32.7245 150.688 32.0254 152.899 32.0254C155.029 32.0254 156.743 32.7142 158.036 34.0933C159.274 35.4312 159.891 37.1584 159.891 39.275ZM156.545 39.3768C156.545 38.0714 156.259 36.9519 155.679 36.0182C155.003 34.8884 154.036 34.3249 152.784 34.3249C151.487 34.3249 150.502 34.8898 149.826 36.0182C149.247 36.9534 148.961 38.0906 148.961 39.4358C148.961 40.7412 149.247 41.8607 149.826 42.7929C150.523 43.9227 151.498 44.4862 152.755 44.4862C153.986 44.4862 154.953 43.9109 155.65 42.7634C156.245 41.812 156.545 40.6807 156.545 39.3768Z\" fill=\"rgb(var(--white))\"/>\n\t<path d=\"M170.374 35.0806C170.055 35.0231 169.715 34.9936 169.358 34.9936C168.223 34.9936 167.346 35.411 166.728 36.2473C166.191 36.9848 165.922 37.917 165.922 39.0425V46.4691H162.698L162.728 36.7724C162.728 35.1411 162.688 33.6558 162.607 32.3165H165.417L165.535 35.0246H165.624C165.964 34.0938 166.501 33.3445 167.237 32.7826C167.955 32.2766 168.731 32.0244 169.568 32.0244C169.866 32.0244 170.135 32.0451 170.374 32.0819V35.0806Z\" fill=\"rgb(var(--white))\"/>\n\t<path d=\"M184.8 38.7216C184.8 39.285 184.762 39.76 184.682 40.1479H175.006C175.044 41.5462 175.511 42.6156 176.41 43.3531C177.225 44.0124 178.28 44.3428 179.574 44.3428C181.007 44.3428 182.314 44.1201 183.49 43.6732L183.995 45.8562C182.621 46.4403 181 46.7308 179.128 46.7308C176.877 46.7308 175.11 46.0848 173.824 44.7942C172.541 43.5035 171.898 41.7704 171.898 39.5963C171.898 37.4619 172.496 35.6846 173.693 34.2671C174.945 32.7537 176.638 31.9971 178.768 31.9971C180.86 31.9971 182.444 32.7537 183.52 34.2671C184.372 35.4692 184.8 36.956 184.8 38.7216ZM181.724 37.9059C181.745 36.9737 181.535 36.1684 181.098 35.4884C180.54 34.6137 179.682 34.1771 178.528 34.1771C177.473 34.1771 176.615 34.6034 175.96 35.4589C175.423 36.1389 175.104 36.9545 175.006 37.9044H181.724V37.9059Z\" fill=\"rgb(var(--white))\"/>\n\t<path d=\"M74.2041 14.7631C74.2041 16.4992 73.6701 17.806 72.6036 18.6836C71.6157 19.4934 70.2118 19.899 68.3934 19.899C67.4917 19.899 66.7202 19.8607 66.0742 19.784V10.2983C66.9169 10.1655 67.8246 10.0977 68.8049 10.0977C70.537 10.0977 71.8426 10.4649 72.7231 11.1995C73.7094 12.0299 74.2041 13.2173 74.2041 14.7631ZM72.5325 14.8059C72.5325 13.6804 72.2269 12.8176 71.6157 12.2158C71.0045 11.6154 70.1119 11.3145 68.9365 11.3145C68.4372 11.3145 68.0121 11.347 67.6597 11.4148V18.6261C67.8548 18.6556 68.2118 18.6689 68.7307 18.6689C69.944 18.6689 70.8805 18.34 71.54 17.6821C72.1996 17.0243 72.5325 16.0655 72.5325 14.8059Z\" fill=\"rgb(var(--white))\"/>\n\t<path d=\"M83.0687 16.2794C83.0687 17.3488 82.7555 18.2249 82.1292 18.9123C81.4727 19.6188 80.6028 19.9713 79.5166 19.9713C78.4697 19.9713 77.6361 19.6335 77.0144 18.955C76.3941 18.278 76.084 17.424 76.084 16.3944C76.084 15.3177 76.4032 14.4342 77.0446 13.7483C77.6861 13.0624 78.5484 12.7188 79.6346 12.7188C80.6814 12.7188 81.5226 13.0565 82.1595 13.7335C82.7646 14.3914 83.0687 15.241 83.0687 16.2794ZM81.4242 16.3295C81.4242 15.6879 81.282 15.1377 80.9991 14.679C80.6663 14.1244 80.1928 13.8471 79.5771 13.8471C78.9402 13.8471 78.4561 14.1244 78.1233 14.679C77.8389 15.1377 77.6982 15.6968 77.6982 16.3576C77.6982 16.9992 77.8404 17.5494 78.1233 18.0081C78.4667 18.5627 78.9447 18.84 79.562 18.84C80.1671 18.84 80.6421 18.5583 80.984 17.9933C81.2775 17.5258 81.4242 16.9712 81.4242 16.3295Z\" fill=\"rgb(var(--white))\"/>\n\t<path d=\"M94.9517 12.8604L92.7203 19.8135H91.268L90.3437 16.7942C90.1092 16.0405 89.9185 15.2912 89.7703 14.5478H89.7415C89.6039 15.3118 89.4133 16.0596 89.1682 16.7942L88.1864 19.8135H86.7174L84.6191 12.8604H86.2484L87.0548 16.1658C87.2499 16.9476 87.4103 17.6925 87.5389 18.3975H87.5676C87.6856 17.8164 87.8808 17.0759 88.1561 16.1806L89.1682 12.8618H90.4601L91.4299 16.1098C91.6643 16.9019 91.855 17.6644 92.0017 18.399H92.0456C92.153 17.6836 92.3149 16.921 92.5297 16.1098L93.395 12.8618H94.9517V12.8604Z\" fill=\"rgb(var(--white))\"/>\n\t<path d=\"M103.171 19.813H101.585V15.8305C101.585 14.6033 101.107 13.9897 100.148 13.9897C99.6778 13.9897 99.2981 14.1579 99.0031 14.4957C98.7111 14.8334 98.5628 15.2317 98.5628 15.6875V19.8116H96.9774V14.8467C96.9774 14.2361 96.9577 13.5738 96.9199 12.8569H98.3132L98.3874 13.944H98.4312C98.6158 13.6062 98.8911 13.3275 99.2527 13.1047C99.6823 12.8451 100.163 12.7139 100.69 12.7139C101.355 12.7139 101.909 12.9233 102.349 13.3437C102.897 13.8585 103.171 14.6269 103.171 15.6476V19.813V19.813Z\" fill=\"rgb(var(--white))\"/>\n\t<path d=\"M107.543 19.8135H105.959V9.66992H107.543V19.8135Z\" fill=\"rgb(var(--white))\"/>\n\t<path d=\"M116.877 16.2794C116.877 17.3488 116.564 18.2249 115.938 18.9123C115.281 19.6188 114.41 19.9713 113.325 19.9713C112.277 19.9713 111.443 19.6335 110.823 18.955C110.203 18.278 109.893 17.424 109.893 16.3944C109.893 15.3177 110.212 14.4342 110.853 13.7483C111.495 13.0624 112.357 12.7188 113.442 12.7188C114.49 12.7188 115.33 13.0565 115.968 13.7335C116.573 14.3914 116.877 15.241 116.877 16.2794ZM115.231 16.3295C115.231 15.6879 115.089 15.1377 114.806 14.679C114.475 14.1244 114 13.8471 113.386 13.8471C112.747 13.8471 112.263 14.1244 111.932 14.679C111.647 15.1377 111.507 15.6968 111.507 16.3576C111.507 16.9992 111.649 17.5494 111.932 18.0081C112.275 18.5627 112.753 18.84 113.371 18.84C113.976 18.84 114.449 18.5583 114.791 17.9933C115.086 17.5258 115.231 16.9712 115.231 16.3295Z\" fill=\"rgb(var(--white))\"/>\n\t<path d=\"M124.55 19.8135H123.126L123.008 19.0126H122.964C122.477 19.6512 121.783 19.9713 120.881 19.9713C120.208 19.9713 119.664 19.7604 119.254 19.3415C118.881 18.9609 118.695 18.4875 118.695 17.9255C118.695 17.0759 119.058 16.4284 119.789 15.98C120.518 15.5316 121.544 15.3118 122.865 15.3221V15.1923C122.865 14.2763 122.371 13.8191 121.384 13.8191C120.68 13.8191 120.06 13.9917 119.524 14.3339L119.202 13.3191C119.865 12.9193 120.683 12.7188 121.648 12.7188C123.512 12.7188 124.447 13.6775 124.447 15.595V18.1556C124.447 18.8503 124.482 19.4034 124.55 19.8135ZM122.904 17.424V16.3517C121.155 16.3222 120.281 16.7897 120.281 17.7529C120.281 18.1158 120.381 18.3872 120.585 18.5686C120.789 18.75 121.049 18.84 121.359 18.84C121.707 18.84 122.033 18.7323 122.329 18.5184C122.627 18.3031 122.81 18.0302 122.878 17.6954C122.895 17.6202 122.904 17.5287 122.904 17.424Z\" fill=\"rgb(var(--white))\"/>\n\t<path d=\"M133.56 19.8135H132.153L132.079 18.6969H132.035C131.585 19.5465 130.82 19.9713 129.744 19.9713C128.885 19.9713 128.169 19.6424 127.602 18.9845C127.035 18.3267 126.752 17.4727 126.752 16.4239C126.752 15.2985 127.059 14.387 127.676 13.6908C128.274 13.0418 129.006 12.7173 129.877 12.7173C130.835 12.7173 131.505 13.0314 131.886 13.6613H131.917V9.66992H133.504V17.9402C133.504 18.6173 133.522 19.2412 133.56 19.8135ZM131.917 16.8812V15.7218C131.917 15.5212 131.902 15.359 131.873 15.2351C131.784 14.8634 131.591 14.5507 131.299 14.2985C131.004 14.0462 130.649 13.9194 130.239 13.9194C129.647 13.9194 129.185 14.148 128.844 14.6067C128.507 15.0655 128.336 15.651 128.336 16.3664C128.336 17.0538 128.498 17.6113 128.823 18.0405C129.166 18.4978 129.629 18.7264 130.209 18.7264C130.729 18.7264 131.145 18.5361 131.461 18.1541C131.767 17.8016 131.917 17.3768 131.917 16.8812Z\" fill=\"rgb(var(--white))\"/>\n\t<path d=\"M147.119 16.2794C147.119 17.3488 146.806 18.2249 146.18 18.9123C145.523 19.6188 144.655 19.9713 143.567 19.9713C142.522 19.9713 141.688 19.6335 141.065 18.955C140.445 18.278 140.135 17.424 140.135 16.3944C140.135 15.3177 140.454 14.4342 141.095 13.7483C141.737 13.0624 142.599 12.7188 143.687 12.7188C144.732 12.7188 145.575 13.0565 146.21 13.7335C146.815 14.3914 147.119 15.241 147.119 16.2794ZM145.477 16.3295C145.477 15.6879 145.334 15.1377 145.051 14.679C144.717 14.1244 144.245 13.8471 143.628 13.8471C142.992 13.8471 142.508 14.1244 142.174 14.679C141.89 15.1377 141.749 15.6968 141.749 16.3576C141.749 16.9992 141.891 17.5494 142.174 18.0081C142.517 18.5627 142.996 18.84 143.613 18.84C144.218 18.84 144.694 18.5583 145.036 17.9933C145.328 17.5258 145.477 16.9712 145.477 16.3295Z\" fill=\"rgb(var(--white))\"/>\n\t<path d=\"M155.644 19.813H154.06V15.8305C154.06 14.6033 153.582 13.9897 152.621 13.9897C152.151 13.9897 151.771 14.1579 151.478 14.4957C151.184 14.8334 151.037 15.2317 151.037 15.6875V19.8116H149.451V14.8467C149.451 14.2361 149.432 13.5738 149.395 12.8569H150.786L150.86 13.944H150.904C151.09 13.6062 151.366 13.3275 151.726 13.1047C152.157 12.8451 152.637 12.7139 153.164 12.7139C153.829 12.7139 154.382 12.9233 154.823 13.3437C155.372 13.8585 155.644 14.6269 155.644 15.6476V19.813V19.813Z\" fill=\"rgb(var(--white))\"/>\n\t<path d=\"M166.314 14.0184H164.568V17.3962C164.568 18.2546 164.878 18.6839 165.493 18.6839C165.777 18.6839 166.013 18.6603 166.199 18.6116L166.24 19.7842C165.927 19.8993 165.515 19.9568 165.008 19.9568C164.382 19.9568 163.895 19.7709 163.543 19.3992C163.189 19.0275 163.013 18.4021 163.013 17.5245V14.0184H161.971V12.8606H163.013V11.5862L164.567 11.1289V12.8591H166.312V14.0184H166.314Z\" fill=\"rgb(var(--white))\"/>\n\t<path d=\"M174.707 19.8135H173.12V15.8605C173.12 14.6141 172.642 13.9902 171.685 13.9902C170.949 13.9902 170.447 14.3516 170.172 15.0743C170.125 15.2262 170.098 15.4121 170.098 15.6304V19.812H168.514V9.66992H170.098V13.8604H170.128C170.627 13.0978 171.343 12.7173 172.27 12.7173C172.927 12.7173 173.47 12.9267 173.901 13.3471C174.438 13.8707 174.707 14.6495 174.707 15.6791V19.8135V19.8135Z\" fill=\"rgb(var(--white))\"/>\n\t<path d=\"M183.366 16.0076C183.366 16.2849 183.344 16.518 183.307 16.7082H178.552C178.573 17.3956 178.8 17.9192 179.24 18.2821C179.643 18.6066 180.161 18.7688 180.797 18.7688C181.5 18.7688 182.142 18.6597 182.72 18.4399L182.968 19.5137C182.292 19.7998 181.496 19.9429 180.574 19.9429C179.47 19.9429 178.6 19.6258 177.971 18.9915C177.339 18.3573 177.025 17.5062 177.025 16.4383C177.025 15.3896 177.317 14.5164 177.906 13.8202C178.52 13.0768 179.351 12.7051 180.399 12.7051C181.425 12.7051 182.204 13.0768 182.73 13.8202C183.155 14.4102 183.366 15.1403 183.366 16.0076ZM181.853 15.6079C181.865 15.1492 181.761 14.7539 181.546 14.4205C181.27 13.9913 180.851 13.7759 180.284 13.7759C179.767 13.7759 179.345 13.9854 179.022 14.4058C178.759 14.7406 178.603 15.1403 178.552 15.6079H181.853Z\" fill=\"rgb(var(--white))\"/>\n</svg>\n</template>",
              "name": "LabelAppStore.vue",
              "size": 15601,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/labels/LabelGooglePlay.vue",
              "relativePath": "modules/icons/labels/LabelGooglePlay.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg width=\"204\" height=\"59\" viewBox=\"0 0 204 59\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<path d=\"M196.396 59H7.55371C3.40106 59 0 55.6794 0 51.625V7.375C0 3.32059 3.40106 7.56029e-07 7.55371 7.56029e-07H196.396C200.549 7.56029e-07 203.95 3.32059 203.95 7.375V51.625C203.95 55.6794 200.549 59 196.396 59Z\" fill=\"rgb(var(--black))\"/>\n\t\t<path d=\"M196.396 1.18184C199.894 1.18184 202.74 3.96038 202.74 7.375V51.625C202.74 55.0396 199.894 57.8182 196.396 57.8182H7.55371C4.05634 57.8182 1.21048 55.0396 1.21048 51.625V7.375C1.21048 3.96038 4.05634 1.18184 7.55371 1.18184H196.396ZM196.396 7.56029e-07H7.55371C3.40106 7.56029e-07 0 3.32059 0 7.375V51.625C0 55.6794 3.40106 59 7.55371 59H196.396C200.549 59 203.95 55.6794 203.95 51.625V7.375C203.95 3.32059 200.549 7.56029e-07 196.396 7.56029e-07Z\" fill=\"#A6A6A6\"/>\n\t\t<path d=\"M71.6353 15.1096C71.6353 16.3413 71.2576 17.3277 70.5136 18.0633C69.6581 18.9354 68.5439 19.3742 67.1786 19.3742C65.8737 19.3742 64.7595 18.928 63.8455 18.0486C62.9297 17.1562 62.4727 16.061 62.4727 14.7501C62.4727 13.4392 62.9297 12.344 63.8455 11.459C64.7595 10.5722 65.8737 10.126 67.1786 10.126C67.8282 10.126 68.4476 10.2569 69.0387 10.5003C69.6279 10.7455 70.1076 11.0774 70.455 11.4867L69.6657 12.2647C69.0595 11.5659 68.2342 11.2212 67.1786 11.2212C66.2268 11.2212 65.4016 11.5457 64.701 12.2002C64.0079 12.8566 63.6605 13.7065 63.6605 14.7501C63.6605 15.7937 64.0079 16.651 64.701 17.3074C65.4016 17.9545 66.2268 18.2864 67.1786 18.2864C68.1889 18.2864 69.0387 17.9545 69.7091 17.3C70.151 16.8667 70.4022 16.2694 70.4683 15.506H67.1786V14.4404H71.5673C71.6202 14.6708 71.6353 14.8939 71.6353 15.1096V15.1096Z\" fill=\"rgb(var(--white))\" stroke=\"rgb(var(--white))\" stroke-width=\"0.16\" stroke-miterlimit=\"10\"/>\n\t\t<path d=\"M78.5981 11.4151H74.4756V14.2176H78.1921V15.2833H74.4756V18.0858H78.5981V19.1717H73.3086V10.3291H78.5981V11.4151Z\" fill=\"rgb(var(--white))\" stroke=\"rgb(var(--white))\" stroke-width=\"0.16\" stroke-miterlimit=\"10\"/>\n\t\t<path d=\"M83.5121 19.1717H82.345V11.4151H79.8164V10.3291H86.0425V11.4151H83.5121V19.1717V19.1717Z\" fill=\"rgb(var(--white))\" stroke=\"rgb(var(--white))\" stroke-width=\"0.16\" stroke-miterlimit=\"10\"/>\n\t\t<path d=\"M90.5488 19.1717V10.3291H91.714V19.1717H90.5488Z\" fill=\"rgb(var(--white))\" stroke=\"rgb(var(--white))\" stroke-width=\"0.16\" stroke-miterlimit=\"10\"/>\n\t\t<path d=\"M96.8773 19.1717H95.7197V11.4151H93.1816V10.3291H99.4153V11.4151H96.8773V19.1717Z\" fill=\"rgb(var(--white))\" stroke=\"rgb(var(--white))\" stroke-width=\"0.16\" stroke-miterlimit=\"10\"/>\n\t\t<path d=\"M111.203 18.0338C110.31 18.928 109.203 19.3742 107.883 19.3742C106.556 19.3742 105.449 18.928 104.556 18.0338C103.664 17.1414 103.221 16.0463 103.221 14.7501C103.221 13.4539 103.664 12.3588 104.556 11.4664C105.449 10.5722 106.556 10.126 107.883 10.126C109.196 10.126 110.302 10.5722 111.196 11.4738C112.094 12.3735 112.538 13.4613 112.538 14.7501C112.538 16.0463 112.094 17.1414 111.203 18.0338ZM105.419 17.2926C106.091 17.9545 106.909 18.2864 107.883 18.2864C108.85 18.2864 109.675 17.9545 110.34 17.2926C111.01 16.6307 111.35 15.7808 111.35 14.7501C111.35 13.7194 111.01 12.8695 110.34 12.2076C109.675 11.5457 108.85 11.2138 107.883 11.2138C106.909 11.2138 106.091 11.5457 105.419 12.2076C104.748 12.8695 104.409 13.7194 104.409 14.7501C104.409 15.7808 104.748 16.6307 105.419 17.2926V17.2926Z\" fill=\"rgb(var(--white))\" stroke=\"rgb(var(--white))\" stroke-width=\"0.16\" stroke-miterlimit=\"10\"/>\n\t\t<path d=\"M114.176 19.1717V10.3291H115.592L119.996 17.2063H120.047L119.996 15.5063V10.3291H121.161V19.1717H119.945L115.333 11.9553H115.282L115.333 13.6626V19.1717H114.176V19.1717Z\" fill=\"rgb(var(--white))\" stroke=\"rgb(var(--white))\" stroke-width=\"0.16\" stroke-miterlimit=\"10\"/>\n\t\t<path d=\"M102.934 32.0853C99.3852 32.0853 96.4864 34.7218 96.4864 38.3596C96.4864 41.9678 99.3852 44.632 102.934 44.632C106.489 44.632 109.388 41.9678 109.388 38.3596C109.388 34.7218 106.489 32.0853 102.934 32.0853ZM102.934 42.1614C100.987 42.1614 99.3115 40.5923 99.3115 38.3596C99.3115 36.0973 100.987 34.5559 102.934 34.5559C104.88 34.5559 106.563 36.0973 106.563 38.3596C106.563 40.5923 104.88 42.1614 102.934 42.1614V42.1614ZM88.8666 32.0853C85.3107 32.0853 82.4195 34.7218 82.4195 38.3596C82.4195 41.9678 85.3107 44.632 88.8666 44.632C92.4206 44.632 95.3137 41.9678 95.3137 38.3596C95.3137 34.7218 92.4206 32.0853 88.8666 32.0853ZM88.8666 42.1614C86.9178 42.1614 85.2371 40.5923 85.2371 38.3596C85.2371 36.0973 86.9178 34.5559 88.8666 34.5559C90.8136 34.5559 92.4886 36.0973 92.4886 38.3596C92.4886 40.5923 90.8136 42.1614 88.8666 42.1614ZM72.1276 34.0083V36.6744H78.6484C78.4576 38.1641 77.9478 39.2593 77.1659 40.0226C76.2142 40.9445 74.7318 41.9678 72.1276 41.9678C68.1147 41.9678 64.9724 38.8057 64.9724 34.8878C64.9724 30.9698 68.1147 27.8078 72.1276 27.8078C74.2974 27.8078 75.8762 28.6356 77.0413 29.7087L78.9656 27.8299C77.3359 26.3107 75.168 25.1436 72.1276 25.1436C66.6248 25.1436 62 29.5151 62 34.8878C62 40.2605 66.6248 44.632 72.1276 44.632C75.1019 44.632 77.3359 43.6806 79.0921 41.8959C80.8918 40.1388 81.4527 37.6682 81.4527 35.6732C81.4527 35.0537 81.3998 34.484 81.3054 34.0083H72.1276ZM140.576 36.0752C140.045 34.6721 138.408 32.0853 135.073 32.0853C131.768 32.0853 129.016 34.6278 129.016 38.3596C129.016 41.8737 131.74 44.632 135.39 44.632C138.341 44.632 140.045 42.8749 140.745 41.8516L138.555 40.4264C137.824 41.47 136.829 42.1614 135.39 42.1614C133.96 42.1614 132.935 41.5216 132.278 40.2605L140.872 36.7887L140.576 36.0752V36.0752ZM131.813 38.1641C131.74 35.7451 133.738 34.5061 135.169 34.5061C136.291 34.5061 137.242 35.0537 137.56 35.8373L131.813 38.1641V38.1641ZM124.828 44.2503H127.653V25.8128H124.828V44.2503ZM120.201 33.4828H120.107C119.472 32.749 118.262 32.0853 116.728 32.0853C113.511 32.0853 110.568 34.8435 110.568 38.3798C110.568 41.8959 113.511 44.632 116.728 44.632C118.262 44.632 119.472 43.9627 120.107 43.2068H120.201V44.1065C120.201 46.5052 118.889 47.794 116.772 47.794C115.046 47.794 113.975 46.5771 113.533 45.5539L111.076 46.555C111.785 48.2181 113.66 50.2646 116.772 50.2646C120.084 50.2646 122.879 48.3619 122.879 43.7322V32.4669H120.201V33.4828V33.4828ZM116.97 42.1614C115.023 42.1614 113.393 40.5702 113.393 38.3798C113.393 36.1692 115.023 34.5559 116.97 34.5559C118.889 34.5559 120.401 36.1692 120.401 38.3798C120.401 40.5702 118.889 42.1614 116.97 42.1614V42.1614ZM153.802 25.8128H147.045V44.2503H149.863V37.2644H153.802C156.931 37.2644 160 35.0537 160 31.5377C160 28.0235 156.924 25.8128 153.802 25.8128V25.8128ZM153.876 34.6997H149.863V28.3775H153.876C155.979 28.3775 157.18 30.083 157.18 31.5377C157.18 32.9647 155.979 34.6997 153.876 34.6997ZM171.293 32.0502C169.257 32.0502 167.14 32.9279 166.269 34.873L168.77 35.8963C169.308 34.873 170.297 34.5412 171.344 34.5412C172.805 34.5412 174.288 35.3985 174.31 36.9122V37.1058C173.8 36.8182 172.709 36.3923 171.366 36.3923C168.673 36.3923 165.929 37.8396 165.929 40.5407C165.929 43.0113 168.135 44.6025 170.615 44.6025C172.511 44.6025 173.557 43.7673 174.214 42.7956H174.31V44.2208H177.032V37.1482C177.032 33.8792 174.531 32.0502 171.293 32.0502ZM170.953 42.154C170.031 42.154 168.747 41.7078 168.747 40.5923C168.747 39.1653 170.348 38.6177 171.735 38.6177C172.975 38.6177 173.557 38.885 174.31 39.2372C174.089 40.9445 172.584 42.154 170.953 42.154V42.154ZM186.946 32.454L183.707 40.4467H183.611L180.263 32.454H177.224L182.255 43.6235L179.385 49.8387H182.329L190.081 32.454H186.946V32.454ZM161.548 44.2503H164.373V25.8128H161.548V44.2503Z\" fill=\"rgb(var(--white))\"/>\n\t\t<path d=\"M15.7651 11.1197C15.3213 11.5732 15.0645 12.2794 15.0645 13.1939V45.8135C15.0645 46.728 15.3213 47.4342 15.7651 47.8877L15.8746 47.9873L34.5964 29.7157V29.2843L15.8746 11.0127L15.7651 11.1197Z\" fill=\"url(#paint0_linear_1523_1188)\"/>\n\t\t<path d=\"M40.8294 35.8096L34.5957 29.716V29.2845L40.837 23.1909L40.9767 23.2702L48.368 27.3763C50.4774 28.5415 50.4774 30.459 48.368 31.6316L40.9767 35.7303L40.8294 35.8096V35.8096Z\" fill=\"url(#paint1_linear_1523_1188)\"/>\n\t\t<path d=\"M40.976 35.7304L34.5951 29.5004L15.7637 47.8881C16.4643 48.6071 17.6068 48.6938 18.906 47.9747L40.976 35.7304\" fill=\"url(#paint2_linear_1523_1188)\"/>\n\t\t<path d=\"M40.976 23.27L18.906 11.0256C17.6068 10.3139 16.4643 10.4006 15.7637 11.1197L34.5951 29.5L40.976 23.27Z\" fill=\"url(#paint3_linear_1523_1188)\"/>\n\t\t<defs>\n\t\t<linearGradient id=\"paint0_linear_1523_1188\" x1=\"32.9342\" y1=\"46.1532\" x2=\"8.18722\" y2=\"20.8066\" gradientUnits=\"userSpaceOnUse\">\n\t\t<stop stop-color=\"#00A0FF\"/>\n\t\t<stop offset=\"0.0066\" stop-color=\"#00A1FF\"/>\n\t\t<stop offset=\"0.2601\" stop-color=\"#00BEFF\"/>\n\t\t<stop offset=\"0.5122\" stop-color=\"#00D2FF\"/>\n\t\t<stop offset=\"0.7604\" stop-color=\"#00DFFF\"/>\n\t\t<stop offset=\"1\" stop-color=\"#00E3FF\"/>\n\t\t</linearGradient>\n\t\t<linearGradient id=\"paint1_linear_1523_1188\" x1=\"51.1147\" y1=\"29.4982\" x2=\"14.5595\" y2=\"29.4982\" gradientUnits=\"userSpaceOnUse\">\n\t\t<stop stop-color=\"#FFE000\"/>\n\t\t<stop offset=\"0.4087\" stop-color=\"#FFBD00\"/>\n\t\t<stop offset=\"0.7754\" stop-color=\"#FFA500\"/>\n\t\t<stop offset=\"1\" stop-color=\"#FF9C00\"/>\n\t\t</linearGradient>\n\t\t<linearGradient id=\"paint2_linear_1523_1188\" x1=\"37.5063\" y1=\"26.1136\" x2=\"3.94738\" y2=\"-8.25843\" gradientUnits=\"userSpaceOnUse\">\n\t\t<stop stop-color=\"#FF3A44\"/>\n\t\t<stop offset=\"1\" stop-color=\"#C31162\"/>\n\t\t</linearGradient>\n\t\t<linearGradient id=\"paint3_linear_1523_1188\" x1=\"11.0234\" y1=\"58.7401\" x2=\"26.009\" y2=\"43.3916\" gradientUnits=\"userSpaceOnUse\">\n\t\t<stop stop-color=\"#32A071\"/>\n\t\t<stop offset=\"0.0685\" stop-color=\"#2DA771\"/>\n\t\t<stop offset=\"0.4762\" stop-color=\"#15CF74\"/>\n\t\t<stop offset=\"0.8009\" stop-color=\"#06E775\"/>\n\t\t<stop offset=\"1\" stop-color=\"#00F076\"/>\n\t\t</linearGradient>\n\t\t</defs>\n\t</svg>\n\n\n</template>",
              "name": "LabelGooglePlay.vue",
              "size": 9635,
              "type": "source"
            }
          ]
        },
        "logos": {
          "_files": [
            {
              "path": "../../src/modules/icons/logos/Logotype.vue",
              "relativePath": "modules/icons/logos/Logotype.vue",
              "extension": ".vue",
              "content": "<template>\n  <svg class=\"h-2r w-auto\" width=\"270\" height=\"300\" viewBox=\"0 0 270 300\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0)\">\n      <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M264.626 52.2791C265.531 57.2858 266 62.4066 266 67.6155C266 125.882 207.349 173.116 135 173.116C62.6507 173.116 4 125.882 4 67.6155C4 62.4066 4.46875 57.2858 5.37413 52.2791C11.0997 32.6306 21.1714 14.8341 34.4789 0C34.1621 2.17658 34 4.38345 34 6.61562C34 43.8948 79.2192 74.1156 135 74.1156C190.781 74.1156 236 43.8948 236 6.61562C236 4.38345 235.838 2.17659 235.521 5.29254e-06C248.829 14.8341 258.9 32.6306 264.626 52.2791Z\" fill=\"#00FF88\"/>\n      <path d=\"M270 165C270 239.558 209.558 300 135 300C60.4416 300 0 239.558 0 165C0 90.4416 60.4416 30 135 30C209.558 30 270 90.4416 270 165Z\" fill=\"#00FF88\"/>\n      <ellipse class=\"eye\" cx=\"143\" cy=\"155.5\" rx=\"37\" ry=\"37.5\" stroke=\"white\" fill=\"white\" stroke-width=\"1.48515\"/>\n      <g class=\"eye\"> \n      <path  d=\"M215 166C215 210.849 179.07 247 135 247C90.9303 247 55 210.849 55 166C55 121.151 90.9303 85 135 85C179.07 85 215 121.151 215 166Z\" stroke=\"white\" stroke-width=\"11\"/>\n\n   \t\t\t</g>\n    </g>\n    <defs>\n      <clipPath id=\"clip0\">\n        <rect width=\"269.333\" height=\"300\" fill=\"white\"/>\n      </clipPath>\n    </defs>\n  </svg>\n</template>\n\n<script setup>\n// Здесь нет необходимости в дополнительном JavaScript\n</script>\n\n<style lang=\"scss\" scoped>\n.eye {\n  animation: rotateEye 10s linear infinite;\n  transform-origin: center 55%;\n}\n\n.mouth {\n  animation: rotateMouth 20s ease-in-out infinite;\n  transform-origin: center 55%;\n}\n\n@keyframes rotateEye {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes rotateMouth {\n  0% {\n    transform: rotate(0deg);\n  }\n  50% {\n    transform: rotate(180deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n</style>",
              "name": "Logotype.vue",
              "size": 1883,
              "type": "source"
            }
          ]
        },
        "navigation": {
          "_files": [
            {
              "path": "../../src/modules/icons/navigation/IconAdd.vue",
              "relativePath": "modules/icons/navigation/IconAdd.vue",
              "extension": ".vue",
              "content": "<template>\n<svg width=\"52\" height=\"52\" viewBox=\"0 0 52 52\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t<path d=\"M26.0346 14.9709V37.2577M15.6412 26.1143H36.428M50.0358 26.1143C50.0358 39.3698 39.2901 50.1155 26.0346 50.1155C12.7791 50.1155 2.03342 39.3698 2.03342 26.1143C2.03342 12.8588 12.7791 2.1131 26.0346 2.1131C39.2901 2.1131 50.0358 12.8588 50.0358 26.1143Z\" :stroke=\"fill\" stroke-width=\"3.21445\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n</svg>\n\n</template>\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  }\n\t})\n</script>",
              "name": "IconAdd.vue",
              "size": 606,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/navigation/IconArrow.vue",
              "relativePath": "modules/icons/navigation/IconArrow.vue",
              "extension": ".vue",
              "content": "<template>\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\">\n\t<path  :fill=\"fill\" :transform=\"`rotate(${rotation}, 24, 24)`\"  d=\"M42.4938 21.6042L29.8525 8.96288C29.568 8.66354 29.2265 8.42416 28.8481 8.25884C28.4696 8.09352 28.062 8.0056 27.649 8.00026C27.2361 7.99492 26.8263 8.07226 26.4437 8.22774C26.0612 8.38322 25.7136 8.61368 25.4214 8.90556C25.1293 9.19743 24.8985 9.54482 24.7427 9.92725C24.5869 10.3097 24.5092 10.7194 24.5142 11.1324C24.5192 11.5453 24.6067 11.953 24.7717 12.3316C24.9367 12.7102 25.1758 13.0519 25.4749 13.3366L32.9475 20.7978H8.09504C7.27418 20.7978 6.48695 21.1238 5.90652 21.7043C5.32608 22.2847 5 23.0719 5 23.8928C5 24.7137 5.32608 25.5009 5.90652 26.0813C6.48695 26.6618 7.27418 26.9878 8.09504 26.9878H32.8784L25.4749 34.4029C24.9186 34.9882 24.6131 35.7677 24.6236 36.5751C24.634 37.3825 24.9596 38.1538 25.5308 38.7245C26.102 39.2952 26.8736 39.6201 27.681 39.6299C28.4884 39.6396 29.2677 39.3334 29.8525 38.7766L42.4938 26.1354C42.7822 25.8487 43.0108 25.5076 43.1664 25.1318C43.3219 24.7561 43.4013 24.3532 43.4 23.9466C43.402 23.921 43.402 23.8953 43.4 23.8698C43.4018 23.8442 43.4018 23.8185 43.4 23.793C43.3997 22.9721 43.0738 22.1849 42.4938 21.6042Z\" />\n</svg>\n\n\n</template>\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  },\n\t  rotation: {\n\t    type: Number,\n\t    default: 0\n\t  }\n\t})\n</script>\n`",
              "name": "IconArrow.vue",
              "size": 1452,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/navigation/IconAttach.vue",
              "relativePath": "modules/icons/navigation/IconAttach.vue",
              "extension": ".vue",
              "content": "<template>\n<svg width=\"52\" height=\"52\" viewBox=\"0 0 52 52\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M4 26H48M26 4V48\" :stroke=\"fill\" stroke-width=\"5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n</svg>\n</template>\n\n<script setup>\nconst props = defineProps({\n  fill: {\n    type: String,\n    default: 'rgb(var(--black))'\n  }\n})\n</script>",
              "name": "IconAttach.vue",
              "size": 359,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/navigation/IconCheck.vue",
              "relativePath": "modules/icons/navigation/IconCheck.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg \n    width=\"19\" \n    height=\"15\" \n    viewBox=\"0 0 19 15\" \n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path \n\t\t\t:fill=\"fill\"\n      d=\"M9.97505 0.3828C10.3344 0.5453 10.5657 0.90155 10.5657 1.2953V13.2953C10.5657 13.6891 10.3344 14.0453 9.97505 14.2078C9.61567 14.3703 9.1938 14.3047 8.90005 14.0422L4.68442 10.2953H2.56567C1.46255 10.2953 0.565674 9.39843 0.565674 8.2953V6.2953C0.565674 5.19218 1.46255 4.2953 2.56567 4.2953H4.68442L8.90005 0.548425C9.1938 0.285925 9.61567 0.223425 9.97505 0.3828Z\"\n    />\n    <path \n      :fill=\"fill\"\n      d=\"M15.5657 6.23301L13.8469 4.51426C13.5563 4.22051 13.0813 4.22363 12.7876 4.51426C12.4938 4.80488 12.4938 5.27988 12.7876 5.57363L14.5063 7.29238L12.7876 9.01113C12.4938 9.30176 12.4969 9.77676 12.7876 10.0705C13.0782 10.3643 13.5532 10.3643 13.8469 10.0705L15.5657 8.35176L17.2844 10.0705C17.5751 10.3643 18.0501 10.3611 18.3438 10.0705C18.6376 9.77988 18.6376 9.30488 18.3438 9.01113L16.6251 7.29238L18.3438 5.57363C18.6376 5.28301 18.6344 4.80801 18.3438 4.51426C18.0532 4.22051 17.5782 4.22051 17.2844 4.51426L15.5657 6.23301Z\"\n    />\n  </svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n  fill: {\n    type: String,\n    default: {\n      position: 'rgb(var(--black))'\n    }\n  },\n})\n</script>\n\n\n",
              "name": "IconCheck.vue",
              "size": 1293,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/navigation/IconCheckmark.vue",
              "relativePath": "modules/icons/navigation/IconCheckmark.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\">\n\t  <path :fill=\"fill\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M19.1081 37.3513C18.3271 38.1323 17.061 38.1323 16.2799 37.3515L7.41509 28.4891C6.63367 27.7079 6.63381 26.441 7.4154 25.66L9.04833 24.0282C9.82946 23.2476 11.0954 23.2478 11.8763 24.0287L17.6941 29.8465L36.1264 11.4142C36.9074 10.6332 38.1738 10.6332 38.9548 11.4142L40.5858 13.0452C41.3668 13.8262 41.3668 15.0926 40.5858 15.8736L19.1081 37.3513Z\" />\n\t</svg>\n</template>\n\n\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  }\n\t})\n</script>",
              "name": "IconCheckmark.vue",
              "size": 675,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/navigation/IconChevronBottom.vue",
              "relativePath": "modules/icons/navigation/IconChevronBottom.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg width=\"80\" height=\"80\" viewBox=\"0 0 80 80\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<g transform=\"rotate(90 40 40)\">\n\t\t\t<path :fill=\"fill\" d=\"M16.25 9.375L20 5.9375C21.5625 4.53125 23.9062 4.6875 25.3125 6.25L54.2188 37.8125C55.3125 39.0625 55.3125 40.9375 54.2188 42.1875L25.3125 73.75C23.9062 75.3125 21.5625 75.4688 20 74.0625L16.25 70.625C14.6875 69.375 14.5312 66.875 15.9375 65.4688L39.375 40L15.9375 14.5312C14.5312 13.125 14.6875 10.625 16.25 9.375Z\"/>\n\t\t</g>\n\t</svg>\n</template>\n\n<script>\n\texport default {\n\t  props: {\n\t    fill: {\n\t      type: String,\n\t      default: 'rgb(var(--black)'\n\t    }\n\t  }\n\t}\n</script>\n",
              "name": "IconChevronBottom.vue",
              "size": 648,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/navigation/IconChevronLeft.vue",
              "relativePath": "modules/icons/navigation/IconChevronLeft.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"80\" height=\"80\" viewBox=\"0 0 80 80\" fill=\"none\">\n\t  <path :fill=\"fill\" d=\"M54.7235 70.625L50.9735 74.0625C49.411 75.4688 47.0673 75.3125 45.661 73.75L16.7547 42.1875C15.661 40.9375 15.661 39.0625 16.7547 37.8125L45.661 6.25C47.0673 4.6875 49.411 4.53125 50.9735 5.9375L54.7235 9.375C56.286 10.625 56.4423 13.125 55.036 14.5312L31.5985 40L55.036 65.4688C56.4423 66.875 56.286 69.375 54.7235 70.625Z\"/>\n\t</svg>\n</template>\n\n\n<script>\n\texport default {\n\t  props: {\n\t    fill: {\n\t      type: String,\n\t      default: 'rgb(var(--black)'\n\t    }\n\t  }\n\t}\n</script>",
              "name": "IconChevronLeft.vue",
              "size": 614,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/navigation/IconChevronRight.vue",
              "relativePath": "modules/icons/navigation/IconChevronRight.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"80\" height=\"80\" viewBox=\"0 0 80 80\" fill=\"none\">\n\t  <path :fill=\"fill\" d=\"M25.2765 9.37509L29.0265 5.93759C30.589 4.53134 32.9327 4.68759 34.339 6.25009L63.2453 37.8126C64.339 39.0626 64.339 40.9376 63.2453 42.1876L34.339 73.7501C32.9327 75.3126 30.589 75.4689 29.0265 74.0626L25.2765 70.6251C23.714 69.3751 23.5577 66.8751 24.964 65.4689L48.4015 40.0001L24.964 14.5313C23.5577 13.1251 23.714 10.6251 25.2765 9.37509Z\"/>\n\t</svg>\n</template>\n\n\n<script>\n\texport default {\n\t  props: {\n\t    fill: {\n\t      type: String,\n\t      default: 'rgb(var(--black)'\n\t    }\n\t  }\n\t}\n</script>",
              "name": "IconChevronRight.vue",
              "size": 634,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/navigation/IconCross.vue",
              "relativePath": "modules/icons/navigation/IconCross.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg \n\t\twidth=\"26\"\n\t\theight=\"26\" \n\t\tviewBox=\"0 0 26 26\" \n\t\tfill=\"none\" \n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t>\n\t\t<path \n\t\t\t:fill=\"fill\"\n\t\t\tfill-rule=\"evenodd\" \n\t\t\tclip-rule=\"evenodd\" \n\t\t\td=\"M12.9996 10.8L22.8994 0.900244L25.0993 3.1002L15.1995 13L25.0993 22.8998L22.8994 25.0998L12.9996 15.2L3.09976 25.0998L0.899801 22.8998L10.7996 13L0.899801 3.1002L3.09976 0.900244L12.9996 10.8Z\"/>\n\t</svg>\n</template>\n\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  }\n\t})\n</script>\n\n",
              "name": "IconCross.vue",
              "size": 549,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/navigation/IconDelete.vue",
              "relativePath": "modules/icons/navigation/IconDelete.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg width=\"46\" height=\"52\" viewBox=\"0 0 46 52\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<path \n\t\t\t:fill=\"fill\"\n\t\t\td=\"M43.9968 8.0683H33.5206V6.36226C33.5206 3.31016 31.0371 0.821533 27.9798 0.821533H18.0253C14.9732 0.821533 12.4846 3.30495 12.4846 6.36226V8.0683H2.00833C1.23096 8.0683 0.610107 8.68915 0.610107 9.46653C0.610107 10.2439 1.23096 10.8647 2.00833 10.8647H4.53348V43.7022C4.53348 47.8238 7.88818 51.1785 12.0098 51.1785H34.0005C38.1222 51.1785 41.4769 47.8238 41.4769 43.7022V10.8647H44.002C44.7794 10.8647 45.4002 10.2439 45.4002 9.46653C45.4002 8.68915 44.7742 8.0683 43.9968 8.0683ZM15.281 6.36226C15.281 4.84925 16.5123 3.61798 18.0253 3.61798H27.985C29.4981 3.61798 30.7293 4.84925 30.7293 6.36226V8.0683H15.281V6.36226ZM38.6856 43.7022H38.6752C38.6752 46.2795 36.5726 48.382 33.9953 48.382H12.0098C9.43249 48.382 7.32993 46.2795 7.32993 43.7022V10.8647H38.6909V43.7022H38.6856ZM30.7241 40.4309V18.8054C30.7241 18.028 31.345 17.4072 32.1223 17.4072C32.8997 17.4072 33.5206 18.028 33.5206 18.8054V40.4309C33.5206 41.2083 32.8997 41.8292 32.1223 41.8292C31.345 41.8292 30.7241 41.2083 30.7241 40.4309ZM21.6043 41.9648V17.2715C21.6043 16.4942 22.2252 15.8733 23.0026 15.8733C23.7799 15.8733 24.4008 16.4942 24.4008 17.2715V41.9752C24.4008 42.7526 23.7799 43.3735 23.0026 43.3735C22.2252 43.3735 21.6043 42.7422 21.6043 41.9648ZM12.4846 40.4309V18.8054C12.4846 18.028 13.1054 17.4072 13.8828 17.4072C14.6602 17.4072 15.281 18.028 15.281 18.8054V40.4309C15.281 41.2083 14.6602 41.8292 13.8828 41.8292C13.1159 41.8292 12.4846 41.2083 12.4846 40.4309Z\"\n\t\t/>\n\t</svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  }\n\t})\n</script>\n\n\n",
              "name": "IconDelete.vue",
              "size": 1741,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/navigation/IconDoubleCheck.vue",
              "relativePath": "modules/icons/navigation/IconDoubleCheck.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg \n    width=\"19\" \n    height=\"15\" \n    viewBox=\"0 0 19 15\" \n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path \n\t\t\t:fill=\"fill\"\n      d=\"M9.97505 0.3828C10.3344 0.5453 10.5657 0.90155 10.5657 1.2953V13.2953C10.5657 13.6891 10.3344 14.0453 9.97505 14.2078C9.61567 14.3703 9.1938 14.3047 8.90005 14.0422L4.68442 10.2953H2.56567C1.46255 10.2953 0.565674 9.39843 0.565674 8.2953V6.2953C0.565674 5.19218 1.46255 4.2953 2.56567 4.2953H4.68442L8.90005 0.548425C9.1938 0.285925 9.61567 0.223425 9.97505 0.3828Z\"\n    />\n    <path \n      :fill=\"fill\"\n      d=\"M15.5657 6.23301L13.8469 4.51426C13.5563 4.22051 13.0813 4.22363 12.7876 4.51426C12.4938 4.80488 12.4938 5.27988 12.7876 5.57363L14.5063 7.29238L12.7876 9.01113C12.4938 9.30176 12.4969 9.77676 12.7876 10.0705C13.0782 10.3643 13.5532 10.3643 13.8469 10.0705L15.5657 8.35176L17.2844 10.0705C17.5751 10.3643 18.0501 10.3611 18.3438 10.0705C18.6376 9.77988 18.6376 9.30488 18.3438 9.01113L16.6251 7.29238L18.3438 5.57363C18.6376 5.28301 18.6344 4.80801 18.3438 4.51426C18.0532 4.22051 17.5782 4.22051 17.2844 4.51426L15.5657 6.23301Z\"\n    />\n  </svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n  fill: {\n    type: String,\n    default: {\n      position: 'rgb(var(--black))'\n    }\n  },\n})\n</script>\n\n\n",
              "name": "IconDoubleCheck.vue",
              "size": 1293,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/navigation/IconEdit.vue",
              "relativePath": "modules/icons/navigation/IconEdit.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg \n\t\t width=\"652\" height=\"652\" viewBox=\"0 0 652 652\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\n\t>\n\t\t<path :class=\"classes\" :fill=\"fill\" d=\"M515.693 9.52082C510.095 3.91669 502.49 0.765625 494.563 0.765625C486.635 0.765625 479.036 3.91669 473.432 9.52082L48.7255 434.307C44.8244 438.214 42.0848 443.125 40.8088 448.496L0.939444 615.069C-1.47202 625.168 1.528 635.788 8.86652 643.132C16.2103 650.47 26.8305 653.47 36.9292 651.059L203.516 611.261H203.511C208.88 609.985 213.792 607.246 217.699 603.35L642.485 178.496C648.089 172.892 651.241 165.293 651.241 157.366C651.241 149.439 648.089 141.835 642.485 136.235L515.693 9.52082ZM113.76 453.708L388.307 179.161L472.828 263.682L198.281 538.229L113.76 453.708ZM87.1041 511.5L140.416 564.812L70.3014 581.614L87.1041 511.5ZM515.091 221.793L430.195 136.897L494.184 72.9075L579.08 157.429L515.091 221.793Z\"/>\n\t</svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  },\n\t  classes: {\n\t    type: String,\n\t    default: ''\n\t  },\n\n\t})\n</script>",
              "name": "IconEdit.vue",
              "size": 1075,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/navigation/IconEllipsis.vue",
              "relativePath": "modules/icons/navigation/IconEllipsis.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\">\n\t  <circle cx=\"6\" cy=\"24\" r=\"6\" :fill=\"fill\" :class=\"$attrs.class\"/>\n\t  <circle cx=\"24\" cy=\"24\" r=\"6\" :fill=\"fill\" :class=\"$attrs.class\"/>\n\t  <circle cx=\"42\" cy=\"24\" r=\"6\" :fill=\"fill\" :class=\"$attrs.class\"/>\n\t</svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  }\n\t})\n</script>",
              "name": "IconEllipsis.vue",
              "size": 464,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/navigation/IconFilter.vue",
              "relativePath": "modules/icons/navigation/IconFilter.vue",
              "extension": ".vue",
              "content": "<template>\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\">\n    <path d=\"M46.4267 13.1341L29.226 30.2782V43.1433C29.2272 43.5293 29.1102 43.9065 28.8907 44.2239C28.6711 44.5414 28.3596 44.784 27.998 44.9191L20.5831 47.6868C20.2976 47.7934 19.9905 47.8294 19.6881 47.7917C19.3856 47.754 19.0968 47.6437 18.8462 47.4701C18.5957 47.2966 18.3908 47.065 18.2492 46.7952C18.1075 46.5253 18.0332 46.2252 18.0327 45.9204V30.2498L1.50259 13.0491C0.772898 12.2954 0.281511 11.3434 0.0898392 10.312C-0.101832 9.28058 0.0147126 8.21558 0.424909 7.25005C0.835106 6.28453 1.52076 5.46131 2.39619 4.88327C3.27161 4.30523 4.29798 3.99801 5.34702 4.00001H42.6579C43.7158 4.00084 44.7497 4.31552 45.6287 4.90422C46.5077 5.49291 47.1923 6.32916 47.5958 7.30712C47.9993 8.28507 48.1036 9.36075 47.8955 10.398C47.6874 11.4353 47.1763 12.3875 46.4267 13.1341Z\" :fill=\"fill\"/>\n  </svg>\n</template>\n\n<script setup>\n  const props = defineProps({\n    fill: {\n      type: String,\n      default: 'rgb(var(--black))'\n    },\n    order: {\n      type: String,\n      default: 'desc'\n    }\n  })\n</script>",
              "name": "IconFilter.vue",
              "size": 1119,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/navigation/IconHeart.vue",
              "relativePath": "modules/icons/navigation/IconHeart.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg \n\t\twidth=\"26\"\n\t\theight=\"26\" \n\t\tviewBox=\"0 0 26 26\" \n\t\tfill=\"none\" \n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t>\n\t\t<path \n\t\t\t:fill=\"fill\"\n\t\t\tfill-rule=\"evenodd\" \n\t\t\tclip-rule=\"evenodd\" \n\t\t\td=\"M12.9996 10.8L22.8994 0.900244L25.0993 3.1002L15.1995 13L25.0993 22.8998L22.8994 25.0998L12.9996 15.2L3.09976 25.0998L0.899801 22.8998L10.7996 13L0.899801 3.1002L3.09976 0.900244L12.9996 10.8Z\"/>\n\t</svg>\n</template>\n\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  }\n\t})\n</script>\n\n",
              "name": "IconHeart.vue",
              "size": 549,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/navigation/IconInfo.vue",
              "relativePath": "modules/icons/navigation/IconInfo.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg \n\t\twidth=\"17\" \n\t\theight=\"16\" \n\t\tviewBox=\"0 0 17 16\" \n\t\tfill=\"none\" \n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t>\n\t\t<path \n\t\t\t:fill=\"fill\"\n\t\t\tfill-rule=\"evenodd\" \n\t\t\tclip-rule=\"evenodd\" \n\t\t\td=\"M8.48828 14.4941C10.2122 14.4941 11.8655 13.8093 13.0845 12.5903C14.3035 11.3713 14.9883 9.71805 14.9883 7.99414C14.9883 6.27023 14.3035 4.61693 13.0845 3.39795C11.8655 2.17896 10.2122 1.49414 8.48828 1.49414C6.76437 1.49414 5.11107 2.17896 3.89209 3.39795C2.6731 4.61693 1.98828 6.27023 1.98828 7.99414C1.98828 9.71805 2.6731 11.3713 3.89209 12.5903C5.11107 13.8093 6.76437 14.4941 8.48828 14.4941ZM14.1451 13.651C12.6448 15.1513 10.61 15.9941 8.48828 15.9941C6.36655 15.9941 4.33172 15.1513 2.83143 13.651C1.33114 12.1507 0.488281 10.1159 0.488281 7.99414C0.488281 5.87241 1.33114 3.83758 2.83143 2.33729C4.33172 0.836995 6.36655 -0.00585938 8.48828 -0.00585938C10.61 -0.00585938 12.6448 0.836995 14.1451 2.33729C15.6454 3.83758 16.4883 5.87241 16.4883 7.99414C16.4883 10.1159 15.6454 12.1507 14.1451 13.651Z\" \n\t\t/>\n\t\t<path \n\t\t\t:fill=\"fill\"\n\t\t\td=\"M7.23828 10.4941H7.98828V8.49414H7.23828C6.82266 8.49414 6.48828 8.15977 6.48828 7.74414C6.48828 7.32852 6.82266 6.99414 7.23828 6.99414H8.73828C9.15391 6.99414 9.48828 7.32852 9.48828 7.74414V10.4941H9.73828C10.1539 10.4941 10.4883 10.8285 10.4883 11.2441C10.4883 11.6598 10.1539 11.9941 9.73828 11.9941H7.23828C6.82266 11.9941 6.48828 11.6598 6.48828 11.2441C6.48828 10.8285 6.82266 10.4941 7.23828 10.4941Z\"\n\t\t/>\n\t\t<path \n\t\t\t:fill=\"fill\"\n\t\t\td=\"M8.48828 3.99414C8.7535 3.99414 9.00785 4.0995 9.19539 4.28703C9.38292 4.47457 9.48828 4.72892 9.48828 4.99414C9.48828 5.25936 9.38292 5.51371 9.19539 5.70125C9.00785 5.88878 8.7535 5.99414 8.48828 5.99414C8.22306 5.99414 7.96871 5.88878 7.78117 5.70125C7.59364 5.51371 7.48828 5.25936 7.48828 4.99414C7.48828 4.72892 7.59364 4.47457 7.78117 4.28703C7.96871 4.0995 8.22306 3.99414 8.48828 3.99414Z\"\n\t\t/>\n\t</svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n  fill: {\n    type: String,\n    default: 'rgb(var(--black))'\n  }\n})\n</script>\n\n\n",
              "name": "IconInfo.vue",
              "size": 2049,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/navigation/IconLike.vue",
              "relativePath": "modules/icons/navigation/IconLike.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg \n\t\twidth=\"17\" \n\t\theight=\"14\" \n\t\tviewBox=\"0 0 17 14\" \n\t\tfill=\"none\" \n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t>\n\t\t<path \n\t\t\t:fill=\"fill\"\n\t\t\tfill-rule=\"evenodd\" \n\t\t\tclip-rule=\"evenodd\" \n\t\t\td=\"M1.97578 8.38083L7.62266 13.6527C7.85703 13.8715 8.16641 13.9933 8.48828 13.9933C8.81016 13.9933 9.11953 13.8715 9.35391 13.6527L15.0008 8.38083C15.9508 7.49646 16.4883 6.25583 16.4883 4.95896V4.77771C16.4883 2.59333 14.9102 0.730831 12.757 0.371456C11.332 0.133956 9.88203 0.599581 8.86328 1.61833L8.48828 1.99333L8.11328 1.61833C7.09455 0.599841 5.64436 0.133985 4.21953 0.371456C2.06641 0.730831 0.488281 2.59333 0.488281 4.77771V4.95896C0.488281 6.25583 1.02578 7.49646 1.97578 8.38083ZM2.99941 7.28439L2.99784 7.28293C2.354 6.68356 1.98828 5.84123 1.98828 4.95896V4.77771C1.98828 3.32663 3.03625 2.08988 4.46613 1.85105C5.41318 1.69332 6.37649 2.00286 7.05262 2.67899L8.48828 4.11465L9.54894 3.05399L9.92394 2.67899C10.6001 2.00286 11.5634 1.69332 12.5104 1.85105C13.9403 2.08988 14.9883 3.32663 14.9883 4.77771V4.95896C14.9883 5.84123 14.6226 6.68356 13.9787 7.28293L8.48828 12.4088L2.99941 7.28439Z\" \n\t\t/>\n\t\t<path \n\t\t\t\n\t\t\tv-show=\"isLiked\"\n\t\t\t:fill=\"fill\"\n\t\t\tfill-rule=\"evenodd\" \n\t\t\tclip-rule=\"evenodd\" \n\t\t\td=\"M2.98382 8.19027L7.75664 12.6461C7.95474 12.831 8.21623 12.934 8.48828 12.934C8.76033 12.934 9.02182 12.831 9.21992 12.6461L13.9927 8.19027C14.7957 7.44278 15.25 6.39418 15.25 5.29805V5.14485C15.25 3.29858 13.9161 1.72437 12.0963 1.42062C10.8919 1.21988 9.6663 1.61344 8.80524 2.4745L8.48828 2.79146L8.17133 2.4745C7.31028 1.61366 6.08455 1.21991 4.88027 1.42062C3.06042 1.72437 1.72656 3.29858 1.72656 5.14485V5.29805C1.72656 6.39418 2.18087 7.44278 2.98382 8.19027Z\" \n\t\t/>\n\t</svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n  fill: {\n    type: String,\n    default: {\n      position: 'rgb(var(--black))'\n    }\n  },\n  isLiked: {\n    type: Boolean,\n    default: false\n  }\n})\n</script>\n\n\n",
              "name": "IconLike.vue",
              "size": 1920,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/navigation/IconMinus.vue",
              "relativePath": "modules/icons/navigation/IconMinus.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg width=\"52\" height=\"52\" viewBox=\"0 0 52 52\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<path d=\"M15.6078 26.1143H36.3946M50.0024 26.1143C50.0024 39.3698 39.2567 50.1155 26.0012 50.1155C12.7457 50.1155 2 39.3698 2 26.1143C2 12.8588 12.7457 2.1131 26.0012 2.1131C39.2567 2.1131 50.0024 12.8588 50.0024 26.1143Z\" :stroke=\"fill\" stroke-width=\"3.21445\" stroke-linecap=\"round\"/>\n\t</svg>\n</template>\n\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  }\n\t})\n</script>\n",
              "name": "IconMinus.vue",
              "size": 545,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/navigation/IconMute.vue",
              "relativePath": "modules/icons/navigation/IconMute.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg \n    width=\"19\" \n    height=\"15\" \n    viewBox=\"0 0 19 15\" \n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path \n\t\t\t:fill=\"fill\"\n      d=\"M9.97505 0.3828C10.3344 0.5453 10.5657 0.90155 10.5657 1.2953V13.2953C10.5657 13.6891 10.3344 14.0453 9.97505 14.2078C9.61567 14.3703 9.1938 14.3047 8.90005 14.0422L4.68442 10.2953H2.56567C1.46255 10.2953 0.565674 9.39843 0.565674 8.2953V6.2953C0.565674 5.19218 1.46255 4.2953 2.56567 4.2953H4.68442L8.90005 0.548425C9.1938 0.285925 9.61567 0.223425 9.97505 0.3828Z\"\n    />\n    <path \n      :fill=\"fill\"\n      d=\"M15.5657 6.23301L13.8469 4.51426C13.5563 4.22051 13.0813 4.22363 12.7876 4.51426C12.4938 4.80488 12.4938 5.27988 12.7876 5.57363L14.5063 7.29238L12.7876 9.01113C12.4938 9.30176 12.4969 9.77676 12.7876 10.0705C13.0782 10.3643 13.5532 10.3643 13.8469 10.0705L15.5657 8.35176L17.2844 10.0705C17.5751 10.3643 18.0501 10.3611 18.3438 10.0705C18.6376 9.77988 18.6376 9.30488 18.3438 9.01113L16.6251 7.29238L18.3438 5.57363C18.6376 5.28301 18.6344 4.80801 18.3438 4.51426C18.0532 4.22051 17.5782 4.22051 17.2844 4.51426L15.5657 6.23301Z\"\n    />\n  </svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n  fill: {\n    type: String,\n    default: {\n      position: 'rgb(var(--black))'\n    }\n  },\n})\n</script>\n\n\n",
              "name": "IconMute.vue",
              "size": 1293,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/navigation/IconPause.vue",
              "relativePath": "modules/icons/navigation/IconPause.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg \n    width=\"19\" \n    height=\"15\" \n    viewBox=\"0 0 19 15\" \n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path \n\t\t\t:fill=\"fill\"\n      d=\"M9.97505 0.3828C10.3344 0.5453 10.5657 0.90155 10.5657 1.2953V13.2953C10.5657 13.6891 10.3344 14.0453 9.97505 14.2078C9.61567 14.3703 9.1938 14.3047 8.90005 14.0422L4.68442 10.2953H2.56567C1.46255 10.2953 0.565674 9.39843 0.565674 8.2953V6.2953C0.565674 5.19218 1.46255 4.2953 2.56567 4.2953H4.68442L8.90005 0.548425C9.1938 0.285925 9.61567 0.223425 9.97505 0.3828Z\"\n    />\n    <path \n      :fill=\"fill\"\n      d=\"M15.5657 6.23301L13.8469 4.51426C13.5563 4.22051 13.0813 4.22363 12.7876 4.51426C12.4938 4.80488 12.4938 5.27988 12.7876 5.57363L14.5063 7.29238L12.7876 9.01113C12.4938 9.30176 12.4969 9.77676 12.7876 10.0705C13.0782 10.3643 13.5532 10.3643 13.8469 10.0705L15.5657 8.35176L17.2844 10.0705C17.5751 10.3643 18.0501 10.3611 18.3438 10.0705C18.6376 9.77988 18.6376 9.30488 18.3438 9.01113L16.6251 7.29238L18.3438 5.57363C18.6376 5.28301 18.6344 4.80801 18.3438 4.51426C18.0532 4.22051 17.5782 4.22051 17.2844 4.51426L15.5657 6.23301Z\"\n    />\n  </svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n  fill: {\n    type: String,\n    default: {\n      position: 'rgb(var(--black))'\n    }\n  },\n})\n</script>\n\n\n",
              "name": "IconPause.vue",
              "size": 1293,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/navigation/IconPlay.vue",
              "relativePath": "modules/icons/navigation/IconPlay.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"80\" height=\"80\" viewBox=\"0 0 80 80\" fill=\"none\">\n\t  <path :fill=\"fill\" d=\"M25.2765 9.37509L29.0265 5.93759C30.589 4.53134 32.9327 4.68759 34.339 6.25009L63.2453 37.8126C64.339 39.0626 64.339 40.9376 63.2453 42.1876L34.339 73.7501C32.9327 75.3126 30.589 75.4689 29.0265 74.0626L25.2765 70.6251C23.714 69.3751 23.5577 66.8751 24.964 65.4689L48.4015 40.0001L24.964 14.5313C23.5577 13.1251 23.714 10.6251 25.2765 9.37509Z\"/>\n\t</svg>\n</template>\n\n\n<script>\n\texport default {\n\t  props: {\n\t    fill: {\n\t      type: String,\n\t      default: 'rgb(var(--black)'\n\t    }\n\t  }\n\t}\n</script>",
              "name": "IconPlay.vue",
              "size": 634,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/navigation/IconPlus.vue",
              "relativePath": "modules/icons/navigation/IconPlus.vue",
              "extension": ".vue",
              "content": "<template>\n<svg width=\"52\" height=\"52\" viewBox=\"0 0 52 52\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M4 26H48M26 4V48\" :stroke=\"fill\" stroke-width=\"5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n</svg>\n</template>\n\n<script setup>\nconst props = defineProps({\n  fill: {\n    type: String,\n    default: 'rgb(var(--black))'\n  }\n})\n</script>",
              "name": "IconPlus.vue",
              "size": 359,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/navigation/IconRefresh.vue",
              "relativePath": "modules/icons/navigation/IconRefresh.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg \n    width=\"19\" \n    height=\"15\" \n    viewBox=\"0 0 19 15\" \n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path \n\t\t\t:fill=\"fill\"\n      d=\"M9.97505 0.3828C10.3344 0.5453 10.5657 0.90155 10.5657 1.2953V13.2953C10.5657 13.6891 10.3344 14.0453 9.97505 14.2078C9.61567 14.3703 9.1938 14.3047 8.90005 14.0422L4.68442 10.2953H2.56567C1.46255 10.2953 0.565674 9.39843 0.565674 8.2953V6.2953C0.565674 5.19218 1.46255 4.2953 2.56567 4.2953H4.68442L8.90005 0.548425C9.1938 0.285925 9.61567 0.223425 9.97505 0.3828Z\"\n    />\n    <path \n      :fill=\"fill\"\n      d=\"M15.5657 6.23301L13.8469 4.51426C13.5563 4.22051 13.0813 4.22363 12.7876 4.51426C12.4938 4.80488 12.4938 5.27988 12.7876 5.57363L14.5063 7.29238L12.7876 9.01113C12.4938 9.30176 12.4969 9.77676 12.7876 10.0705C13.0782 10.3643 13.5532 10.3643 13.8469 10.0705L15.5657 8.35176L17.2844 10.0705C17.5751 10.3643 18.0501 10.3611 18.3438 10.0705C18.6376 9.77988 18.6376 9.30488 18.3438 9.01113L16.6251 7.29238L18.3438 5.57363C18.6376 5.28301 18.6344 4.80801 18.3438 4.51426C18.0532 4.22051 17.5782 4.22051 17.2844 4.51426L15.5657 6.23301Z\"\n    />\n  </svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n  fill: {\n    type: String,\n    default: {\n      position: 'rgb(var(--black))'\n    }\n  },\n})\n</script>\n\n\n",
              "name": "IconRefresh.vue",
              "size": 1293,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/navigation/IconSearch.vue",
              "relativePath": "modules/icons/navigation/IconSearch.vue",
              "extension": ".vue",
              "content": "<template>\n  <svg width=\"49\" height=\"49\" viewBox=\"0 0 49 49\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path :fill=\"none\" :stroke=\"fill\" stroke-width=\"4\" stroke-linecap=\"round\" stroke-linejoin=\"round\" :class=\"$attrs.class\" d=\"M22.5 36C30.5081 36 37 29.5081 37 21.5C37 13.4919 30.5081 7 22.5 7C14.4919 7 8 13.4919 8 21.5C8 29.5081 14.4919 36 22.5 36Z\"/>\n    <path :fill=\"none\" :stroke=\"fill\" stroke-width=\"4.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" :class=\"$attrs.class\" d=\"M33 32L42 41\"/>\n  </svg>\n</template>\n<script setup>\n  const props = defineProps({\n    fill: {\n      type: String,\n      default: 'rgb(var(--black))'\n    }\n  })\n</script>",
              "name": "IconSearch.vue",
              "size": 661,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/navigation/IconSend.vue",
              "relativePath": "modules/icons/navigation/IconSend.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"80\" height=\"80\" viewBox=\"0 0 80 80\" fill=\"none\">\n\t  <path :fill=\"fill\" d=\"M25.2765 9.37509L29.0265 5.93759C30.589 4.53134 32.9327 4.68759 34.339 6.25009L63.2453 37.8126C64.339 39.0626 64.339 40.9376 63.2453 42.1876L34.339 73.7501C32.9327 75.3126 30.589 75.4689 29.0265 74.0626L25.2765 70.6251C23.714 69.3751 23.5577 66.8751 24.964 65.4689L48.4015 40.0001L24.964 14.5313C23.5577 13.1251 23.714 10.6251 25.2765 9.37509Z\"/>\n\t</svg>\n</template>\n\n\n<script>\n\texport default {\n\t  props: {\n\t    fill: {\n\t      type: String,\n\t      default: 'rgb(var(--black)'\n\t    }\n\t  }\n\t}\n</script>",
              "name": "IconSend.vue",
              "size": 634,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/navigation/IconShuffle.vue",
              "relativePath": "modules/icons/navigation/IconShuffle.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg \n    width=\"19\" \n    height=\"15\" \n    viewBox=\"0 0 19 15\" \n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path \n\t\t\t:fill=\"fill\"\n      d=\"M9.97505 0.3828C10.3344 0.5453 10.5657 0.90155 10.5657 1.2953V13.2953C10.5657 13.6891 10.3344 14.0453 9.97505 14.2078C9.61567 14.3703 9.1938 14.3047 8.90005 14.0422L4.68442 10.2953H2.56567C1.46255 10.2953 0.565674 9.39843 0.565674 8.2953V6.2953C0.565674 5.19218 1.46255 4.2953 2.56567 4.2953H4.68442L8.90005 0.548425C9.1938 0.285925 9.61567 0.223425 9.97505 0.3828Z\"\n    />\n    <path \n      :fill=\"fill\"\n      d=\"M15.5657 6.23301L13.8469 4.51426C13.5563 4.22051 13.0813 4.22363 12.7876 4.51426C12.4938 4.80488 12.4938 5.27988 12.7876 5.57363L14.5063 7.29238L12.7876 9.01113C12.4938 9.30176 12.4969 9.77676 12.7876 10.0705C13.0782 10.3643 13.5532 10.3643 13.8469 10.0705L15.5657 8.35176L17.2844 10.0705C17.5751 10.3643 18.0501 10.3611 18.3438 10.0705C18.6376 9.77988 18.6376 9.30488 18.3438 9.01113L16.6251 7.29238L18.3438 5.57363C18.6376 5.28301 18.6344 4.80801 18.3438 4.51426C18.0532 4.22051 17.5782 4.22051 17.2844 4.51426L15.5657 6.23301Z\"\n    />\n  </svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n  fill: {\n    type: String,\n    default: {\n      position: 'rgb(var(--black))'\n    }\n  },\n})\n</script>\n\n\n",
              "name": "IconShuffle.vue",
              "size": 1293,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/navigation/IconSort.vue",
              "relativePath": "modules/icons/navigation/IconSort.vue",
              "extension": ".vue",
              "content": "<template>\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\">\n    <rect y=\"0\" :width=\"order === 'desc' ? 32 : 8\" height=\"5\" rx=\"2.5\" :fill=\"fill\"  class=\"transition-linear\"/>\n    <rect y=\"9\" :width=\"order === 'desc' ? 24 : 16\" height=\"5\" rx=\"2.5\" :fill=\"fill\"  class=\"transition-linear\"/>\n    <rect y=\"18\" :width=\"order === 'desc' ? 16 : 24\" height=\"5\" rx=\"2.5\" :fill=\"fill\"  class=\"transition-linear\"/>\n    <rect y=\"27\" :width=\"order === 'desc' ? 8 : 32\" height=\"5\" rx=\"2.5\" :fill=\"fill\"  class=\"transition-linear\"/>\n  </svg>\n</template>\n\n<script setup>\n  const props = defineProps({\n    fill: {\n      type: String,\n      default: 'rgb(var(--black))'\n    },\n    order: {\n      type: String,\n      default: 'desc'\n    }\n  })\n</script>",
              "name": "IconSort.vue",
              "size": 781,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/navigation/IconUnMute.vue",
              "relativePath": "modules/icons/navigation/IconUnMute.vue",
              "extension": ".vue",
              "content": "<template>\n  <svg \n    width=\"18\" \n    height=\"14\" \n    viewBox=\"0 0 18 14\"\n    fill=\"none\" \n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      :fill=\"fill\"\n      d=\"M15.35 2.34413C16.7 3.44413 17.5657 5.12225 17.5657 7.00038C17.5657 8.8785 16.7 10.5566 15.35 11.6566C15.0282 11.9191 14.5563 11.8691 14.2938 11.5473C14.0313 11.2254 14.0813 10.7535 14.4032 10.491C15.4188 9.666 16.0657 8.40975 16.0657 7.00038C16.0657 5.591 15.4188 4.33475 14.4032 3.50663C14.0813 3.24413 14.0344 2.77225 14.2938 2.45038C14.5532 2.1285 15.0282 2.08163 15.35 2.341V2.34413ZM13.4594 4.67225C14.1313 5.22225 14.5657 6.05975 14.5657 7.00038C14.5657 7.941 14.1313 8.7785 13.4594 9.3285C13.1375 9.591 12.6657 9.541 12.4032 9.21913C12.1407 8.89725 12.1907 8.42538 12.5125 8.16288C12.85 7.88788 13.0657 7.46913 13.0657 7.00038C13.0657 6.53163 12.85 6.11288 12.5125 5.83475C12.1907 5.57225 12.1438 5.10038 12.4032 4.7785C12.6625 4.45663 13.1375 4.40975 13.4594 4.66913V4.67225ZM9.97505 0.0878784C10.3344 0.250378 10.5657 0.606628 10.5657 1.00038V13.0004C10.5657 13.3941 10.3344 13.7504 9.97505 13.9129C9.61567 14.0754 9.1938 14.0098 8.90005 13.7473L4.68442 10.0004H2.56567C1.46255 10.0004 0.565674 9.1035 0.565674 8.00038V6.00038C0.565674 4.89725 1.46255 4.00038 2.56567 4.00038H4.68442L8.90005 0.253503C9.1938 -0.00899664 9.61567 -0.0714966 9.97505 0.0878784Z\"\n    />\n  </svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n  fill: {\n    type: String,\n    default: {\n      position: 'rgb(var(--black))'\n    }\n  },\n})\n</script>\n\n\n",
              "name": "IconUnMute.vue",
              "size": 1521,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/navigation/IconUpload.vue",
              "relativePath": "modules/icons/navigation/IconUpload.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg width=\"49\" height=\"35\" viewBox=\"0 0 49 35\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<path :fill=\"fill\" d=\"M18.0196 16.645C17.3501 17.3144 17.3501 18.3999 18.0196 19.0693C18.689 19.7388 19.7745 19.7388 20.4439 19.0693L22.6603 16.8529V26.4286C22.6603 27.3754 23.4278 28.1429 24.3746 28.1429C25.3214 28.1429 26.0889 27.3754 26.0889 26.4286V16.8529L28.3053 19.0693C28.9747 19.7388 30.0602 19.7388 30.7296 19.0693C31.399 18.3999 31.399 17.3144 30.7296 16.645L25.5868 11.5021C24.9173 10.8327 23.8318 10.8327 23.1624 11.5021L18.0196 16.645Z\"/>\n\t\t<path :fill=\"fill\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M24.3746 0.714294C16.9516 0.714294 10.7548 5.95521 9.27936 12.9394C4.19731 13.976 0.374592 18.4695 0.374592 23.8572C0.374592 30.0113 5.36342 35 11.5174 35H37.2317C43.3857 35 48.3746 30.0113 48.3746 23.8572C48.3746 18.4695 44.5519 13.976 39.4699 12.9394C37.9944 5.95521 31.7976 0.714294 24.3746 0.714294ZM12.4643 14.6667C13.1906 8.73646 18.2474 4.14287 24.3746 4.14287C30.5018 4.14287 35.5586 8.73646 36.2849 14.6667C36.384 15.4757 37.0387 16.1029 37.8511 16.1672C41.821 16.4818 44.946 19.8053 44.946 23.8572C44.946 28.1177 41.4922 31.5714 37.2317 31.5714H11.5174C7.25697 31.5714 3.80316 28.1177 3.80316 23.8572C3.80316 19.8053 6.92808 16.4818 10.8981 16.1672C11.7104 16.1029 12.3652 15.4757 12.4643 14.6667Z\"/>\n\t</svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  }\n\t})\n</script>\n\n",
              "name": "IconUpload.vue",
              "size": 1487,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/navigation/IconVolume.vue",
              "relativePath": "modules/icons/navigation/IconVolume.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg \n    width=\"19\" \n    height=\"15\" \n    viewBox=\"0 0 19 15\" \n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path \n\t\t\t:fill=\"fill\"\n      d=\"M9.97505 0.3828C10.3344 0.5453 10.5657 0.90155 10.5657 1.2953V13.2953C10.5657 13.6891 10.3344 14.0453 9.97505 14.2078C9.61567 14.3703 9.1938 14.3047 8.90005 14.0422L4.68442 10.2953H2.56567C1.46255 10.2953 0.565674 9.39843 0.565674 8.2953V6.2953C0.565674 5.19218 1.46255 4.2953 2.56567 4.2953H4.68442L8.90005 0.548425C9.1938 0.285925 9.61567 0.223425 9.97505 0.3828Z\"\n    />\n    <path \n      :fill=\"fill\"\n      d=\"M15.5657 6.23301L13.8469 4.51426C13.5563 4.22051 13.0813 4.22363 12.7876 4.51426C12.4938 4.80488 12.4938 5.27988 12.7876 5.57363L14.5063 7.29238L12.7876 9.01113C12.4938 9.30176 12.4969 9.77676 12.7876 10.0705C13.0782 10.3643 13.5532 10.3643 13.8469 10.0705L15.5657 8.35176L17.2844 10.0705C17.5751 10.3643 18.0501 10.3611 18.3438 10.0705C18.6376 9.77988 18.6376 9.30488 18.3438 9.01113L16.6251 7.29238L18.3438 5.57363C18.6376 5.28301 18.6344 4.80801 18.3438 4.51426C18.0532 4.22051 17.5782 4.22051 17.2844 4.51426L15.5657 6.23301Z\"\n    />\n  </svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n  fill: {\n    type: String,\n    default: {\n      position: 'rgb(var(--black))'\n    }\n  },\n})\n</script>\n\n\n",
              "name": "IconVolume.vue",
              "size": 1293,
              "type": "source"
            }
          ]
        },
        "pages": {
          "_files": [
            {
              "path": "../../src/modules/icons/pages/IconsPage.vue",
              "relativePath": "modules/icons/pages/IconsPage.vue",
              "extension": ".vue",
              "content": "<template>\n  <div class=\"pd-medium\">\n    <h2 class=\"mn-b-medium\">Martyrs Icons Gallery</h2>\n    \n    <div v-for=\"(category, index) in categories\" :key=\"index\" class=\"mn-b-large\">\n      <h3 class=\"mn-b-medium t-medium\">{{ formatCategoryName(category.name) }} ({{ category.icons.length }})</h3>\n      <div class=\"cols-6 gap-thin\">\n        <div \n          v-for=\"(icon, iconIndex) in category.icons\" \n          :key=\"iconIndex\" \n          class=\"aspect-1x1 bg-light radius-medium flex-center flex-v-center flex-column flex hover-scale-1 cursor-pointer\"\n          @click=\"copyIconName(icon.name, category.name)\"\n        >\n          <div class=\"flex-center flex h-60\">\n            <component :is=\"icon.component\" class=\"w-2r h-2r\" />\n          </div>\n          <div class=\"pd-t-thin pd-b-thin t-center t-small t-truncate\">\n            {{ icon.name }}\n          </div>\n          <div v-if=\"copiedIcon === icon.name\" class=\"pd-thin bg-black radius-small t-small t-white pos-absolute pos-t-0 pos-r-0 mn-t-thin mn-r-thin\">\n            Copied!\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div v-if=\"displayNotification\" class=\"notification bg-third pd-small radius-medium pos-fixed pos-b-0 pos-r-0 mn-b-large mn-r-large\">\n      {{ notificationMessage }}\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue';\n\n// Import navigation icons\nimport IconInfo from '@martyrs/src/modules/icons/navigation/IconInfo.vue';\nimport IconMinus from '@martyrs/src/modules/icons/navigation/IconMinus.vue';\nimport IconEllipsis from '@martyrs/src/modules/icons/navigation/IconEllipsis.vue';\nimport IconPlus from '@martyrs/src/modules/icons/navigation/IconPlus.vue';\nimport IconHeart from '@martyrs/src/modules/icons/navigation/IconHeart.vue';\nimport IconCheckmark from '@martyrs/src/modules/icons/navigation/IconCheckmark.vue';\nimport IconPause from '@martyrs/src/modules/icons/navigation/IconPause.vue';\nimport IconAdd from '@martyrs/src/modules/icons/navigation/IconAdd.vue';\nimport IconVolume from '@martyrs/src/modules/icons/navigation/IconVolume.vue';\nimport IconUnMute from '@martyrs/src/modules/icons/navigation/IconUnMute.vue';\nimport IconCross from '@martyrs/src/modules/icons/navigation/IconCross.vue';\nimport IconDoubleCheck from '@martyrs/src/modules/icons/navigation/IconDoubleCheck.vue';\nimport IconSearch from '@martyrs/src/modules/icons/navigation/IconSearch.vue';\nimport IconChevronRight from '@martyrs/src/modules/icons/navigation/IconChevronRight.vue';\nimport IconLike from '@martyrs/src/modules/icons/navigation/IconLike.vue';\nimport IconDelete from '@martyrs/src/modules/icons/navigation/IconDelete.vue';\nimport IconCheck from '@martyrs/src/modules/icons/navigation/IconCheck.vue';\nimport IconFilter from '@martyrs/src/modules/icons/navigation/IconFilter.vue';\nimport IconAttach from '@martyrs/src/modules/icons/navigation/IconAttach.vue';\nimport IconRefresh from '@martyrs/src/modules/icons/navigation/IconRefresh.vue';\nimport IconUpload from '@martyrs/src/modules/icons/navigation/IconUpload.vue';\nimport IconSort from '@martyrs/src/modules/icons/navigation/IconSort.vue';\nimport IconChevronBottom from '@martyrs/src/modules/icons/navigation/IconChevronBottom.vue';\nimport IconChevronLeft from '@martyrs/src/modules/icons/navigation/IconChevronLeft.vue';\nimport IconEdit from '@martyrs/src/modules/icons/navigation/IconEdit.vue';\nimport IconMute from '@martyrs/src/modules/icons/navigation/IconMute.vue';\nimport IconSend from '@martyrs/src/modules/icons/navigation/IconSend.vue';\nimport IconArrow from '@martyrs/src/modules/icons/navigation/IconArrow.vue';\nimport IconPlay from '@martyrs/src/modules/icons/navigation/IconPlay.vue';\nimport IconShuffle from '@martyrs/src/modules/icons/navigation/IconShuffle.vue';\n\n// Import entities icons\nimport IconInfoEntities from '@martyrs/src/modules/icons/entities/IconInfo.vue';\nimport IconPrice from '@martyrs/src/modules/icons/entities/IconPrice.vue';\nimport IconCalendar from '@martyrs/src/modules/icons/entities/IconCalendar.vue';\nimport IconPayments from '@martyrs/src/modules/icons/entities/IconPayments.vue';\nimport IconBell from '@martyrs/src/modules/icons/entities/IconBell.vue';\nimport IconTime from '@martyrs/src/modules/icons/entities/IconTime.vue';\nimport IconCommunity from '@martyrs/src/modules/icons/entities/IconCommunity.vue';\nimport IconGallery from '@martyrs/src/modules/icons/entities/IconGallery.vue';\nimport IconFile from '@martyrs/src/modules/icons/entities/IconFile.vue';\nimport IconFollowing from '@martyrs/src/modules/icons/entities/IconFollowing.vue';\nimport IconEvents from '@martyrs/src/modules/icons/entities/IconEvents.vue';\nimport IconHome from '@martyrs/src/modules/icons/entities/IconHome.vue';\nimport IconProducts from '@martyrs/src/modules/icons/entities/IconProducts.vue';\nimport IconCatalog from '@martyrs/src/modules/icons/entities/IconCatalog.vue';\nimport IconShopcart from '@martyrs/src/modules/icons/entities/IconShopcart.vue';\nimport IconRecent from '@martyrs/src/modules/icons/entities/IconRecent.vue';\nimport IconEarn from '@martyrs/src/modules/icons/entities/IconEarn.vue';\nimport IconPopular from '@martyrs/src/modules/icons/entities/IconPopular.vue';\nimport IconDate from '@martyrs/src/modules/icons/entities/IconDate.vue';\nimport IconFeatured from '@martyrs/src/modules/icons/entities/IconFeatured.vue';\nimport IconLeftovers from '@martyrs/src/modules/icons/entities/IconLeftovers.vue';\nimport IconOrders from '@martyrs/src/modules/icons/entities/IconOrders.vue';\nimport IconMusic from '@martyrs/src/modules/icons/entities/IconMusic.vue';\nimport IconProfile from '@martyrs/src/modules/icons/entities/IconProfile.vue';\nimport IconGroups from '@martyrs/src/modules/icons/entities/IconGroups.vue';\n\n// Import placeholders icons\nimport PlaceholderOrganizationPic from '@martyrs/src/modules/icons/placeholders/PlaceholderOrganizationPic.vue';\nimport PlaceholderChat from '@martyrs/src/modules/icons/placeholders/PlaceholderChat.vue';\nimport PlaceholderImage from '@martyrs/src/modules/icons/placeholders/PlaceholderImage.vue';\nimport PlaceholderUserpic from '@martyrs/src/modules/icons/placeholders/PlaceholderUserpic.vue';\n\n// Import socials icons\nimport Vk from '@martyrs/src/modules/icons/socials/vk.vue';\nimport Instagram from '@martyrs/src/modules/icons/socials/instagram.vue';\nimport Telegram from '@martyrs/src/modules/icons/socials/telegram.vue';\nimport Twitter from '@martyrs/src/modules/icons/socials/twitter.vue';\nimport Linkedin from '@martyrs/src/modules/icons/socials/linkedin.vue';\nimport Reddit from '@martyrs/src/modules/icons/socials/reddit.vue';\nimport Dribbble from '@martyrs/src/modules/icons/socials/dribbble.vue';\nimport Facebook from '@martyrs/src/modules/icons/socials/facebook.vue';\nimport Youtube from '@martyrs/src/modules/icons/socials/youtube.vue';\nimport Line from '@martyrs/src/modules/icons/socials/line.vue';\n\n// Import actions icons\nimport IconDuplicate from '@martyrs/src/modules/icons/actions/IconDuplicate.vue';\nimport IconShopcartAdd from '@martyrs/src/modules/icons/actions/IconShopcartAdd.vue';\n\n// Import labels icons\nimport LabelGooglePlay from '@martyrs/src/modules/icons/labels/LabelGooglePlay.vue';\nimport LabelAppStore from '@martyrs/src/modules/icons/labels/LabelAppStore.vue';\n\n// Import logos icons\nimport Logotype from '@martyrs/src/modules/icons/logos/Logotype.vue';\n\n// Import skeletons icons\nimport SkeletonEventShort from '@martyrs/src/modules/icons/skeletons/SkeletonEventShort.vue';\nimport SkeletonBlogpost from '@martyrs/src/modules/icons/skeletons/SkeletonBlogpost.vue';\nimport SkeletonOrganization from '@martyrs/src/modules/icons/skeletons/SkeletonOrganization.vue';\nimport SkeletonEvent from '@martyrs/src/modules/icons/skeletons/SkeletonEvent.vue';\n\nconst categories = ref([]);\nconst copiedIcon = ref('');\nconst displayNotification = ref(false);\nconst notificationMessage = ref('');\n\nonMounted(() => {\n  loadIcons();\n});\n\nfunction loadIcons() {\n  categories.value = [\n    {\n      name: 'navigation',\n      icons: [\n        { name: 'IconInfo', component: IconInfo },\n        { name: 'IconMinus', component: IconMinus },\n        { name: 'IconEllipsis', component: IconEllipsis },\n        { name: 'IconPlus', component: IconPlus },\n        { name: 'IconHeart', component: IconHeart },\n        { name: 'IconCheckmark', component: IconCheckmark },\n        { name: 'IconPause', component: IconPause },\n        { name: 'IconAdd', component: IconAdd },\n        { name: 'IconVolume', component: IconVolume },\n        { name: 'IconUnMute', component: IconUnMute },\n        { name: 'IconCross', component: IconCross },\n        { name: 'IconDoubleCheck', component: IconDoubleCheck },\n        { name: 'IconSearch', component: IconSearch },\n        { name: 'IconChevronRight', component: IconChevronRight },\n        { name: 'IconLike', component: IconLike },\n        { name: 'IconDelete', component: IconDelete },\n        { name: 'IconCheck', component: IconCheck },\n        { name: 'IconFilter', component: IconFilter },\n        { name: 'IconAttach', component: IconAttach },\n        { name: 'IconRefresh', component: IconRefresh },\n        { name: 'IconUpload', component: IconUpload },\n        { name: 'IconSort', component: IconSort },\n        { name: 'IconChevronBottom', component: IconChevronBottom },\n        { name: 'IconChevronLeft', component: IconChevronLeft },\n        { name: 'IconEdit', component: IconEdit },\n        { name: 'IconMute', component: IconMute },\n        { name: 'IconSend', component: IconSend },\n        { name: 'IconArrow', component: IconArrow },\n        { name: 'IconPlay', component: IconPlay },\n        { name: 'IconShuffle', component: IconShuffle }\n      ]\n    },\n    {\n      name: 'entities',\n      icons: [\n        { name: 'IconInfo', component: IconInfoEntities },\n        { name: 'IconPrice', component: IconPrice },\n        { name: 'IconCalendar', component: IconCalendar },\n        { name: 'IconPayments', component: IconPayments },\n        { name: 'IconBell', component: IconBell },\n        { name: 'IconTime', component: IconTime },\n        { name: 'IconCommunity', component: IconCommunity },\n        { name: 'IconGallery', component: IconGallery },\n        { name: 'IconFile', component: IconFile },\n        { name: 'IconFollowing', component: IconFollowing },\n        { name: 'IconEvents', component: IconEvents },\n        { name: 'IconHome', component: IconHome },\n        { name: 'IconProducts', component: IconProducts },\n        { name: 'IconCatalog', component: IconCatalog },\n        { name: 'IconShopcart', component: IconShopcart },\n        { name: 'IconRecent', component: IconRecent },\n        { name: 'IconEarn', component: IconEarn },\n        { name: 'IconPopular', component: IconPopular },\n        { name: 'IconDate', component: IconDate },\n        { name: 'IconFeatured', component: IconFeatured },\n        { name: 'IconLeftovers', component: IconLeftovers },\n        { name: 'IconOrders', component: IconOrders },\n        { name: 'IconMusic', component: IconMusic },\n        { name: 'IconProfile', component: IconProfile },\n        { name: 'IconGroups', component: IconGroups }\n      ]\n    },\n    {\n      name: 'placeholders',\n      icons: [\n        { name: 'PlaceholderOrganizationPic', component: PlaceholderOrganizationPic },\n        { name: 'PlaceholderChat', component: PlaceholderChat },\n        { name: 'PlaceholderImage', component: PlaceholderImage },\n        { name: 'PlaceholderUserpic', component: PlaceholderUserpic }\n      ]\n    },\n    {\n      name: 'socials',\n      icons: [\n        { name: 'vk', component: Vk },\n        { name: 'instagram', component: Instagram },\n        { name: 'telegram', component: Telegram },\n        { name: 'twitter', component: Twitter },\n        { name: 'linkedin', component: Linkedin },\n        { name: 'reddit', component: Reddit },\n        { name: 'dribbble', component: Dribbble },\n        { name: 'facebook', component: Facebook },\n        { name: 'youtube', component: Youtube },\n        { name: 'line', component: Line }\n      ]\n    },\n    {\n      name: 'actions',\n      icons: [\n        { name: 'IconDuplicate', component: IconDuplicate },\n        { name: 'IconShopcartAdd', component: IconShopcartAdd }\n      ]\n    },\n    {\n      name: 'labels',\n      icons: [\n        { name: 'LabelGooglePlay', component: LabelGooglePlay },\n        { name: 'LabelAppStore', component: LabelAppStore }\n      ]\n    },\n    {\n      name: 'logos',\n      icons: [\n        { name: 'Logotype', component: Logotype }\n      ]\n    },\n    {\n      name: 'skeletons',\n      icons: [\n        { name: 'SkeletonEventShort', component: SkeletonEventShort },\n        { name: 'SkeletonBlogpost', component: SkeletonBlogpost },\n        { name: 'SkeletonOrganization', component: SkeletonOrganization },\n        { name: 'SkeletonEvent', component: SkeletonEvent }\n      ]\n    }\n  ];\n}\n\nfunction formatCategoryName(name) {\n  return name.charAt(0).toUpperCase() + name.slice(1);\n}\n\nfunction copyIconName(iconName, categoryName) {\n  // Copy the icon import to clipboard\n  const importStatement = `import ${iconName} from '@martyrs/src/modules/icons/${categoryName}/${iconName}.vue';`;\n  navigator.clipboard.writeText(importStatement);\n  \n  copiedIcon.value = iconName;\n  notificationMessage.value = `Copied: ${importStatement}`;\n  displayNotification.value = true;\n  \n  setTimeout(() => {\n    copiedIcon.value = '';\n    setTimeout(() => {\n      displayNotification.value = false;\n    }, 2000);\n  }, 1000);\n}\n</script>\n\n<style scoped>\n.h-60 {\n  height: 60%;\n}\n\n.notification {\n  z-index: 100;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  transition: all 0.3s ease;\n  animation: fadeIn 0.3s;\n}\n\n@keyframes fadeIn {\n  from { opacity: 0; transform: translateY(20px); }\n  to { opacity: 1; transform: translateY(0); }\n}\n</style>",
              "name": "IconsPage.vue",
              "size": 13782,
              "type": "source"
            }
          ]
        },
        "placeholders": {
          "_files": [
            {
              "path": "../../src/modules/icons/placeholders/PlaceholderChat.vue",
              "relativePath": "modules/icons/placeholders/PlaceholderChat.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"112\" height=\"112\" viewBox=\"0 0 112 112\" class=\"fill-main\">\n\t\t<rect width=\"112\" height=\"112\" class=\"fill-main\"/>\n    <path opacity=\"0.1\" fill=\"rgb(var(--black))\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M80.8929 71.3997V61.2081C80.8929 61.0087 80.9326 60.8113 81.0097 60.6271C81.0869 60.443 81.2 60.2758 81.3425 60.1352C81.4849 59.9946 81.654 59.8833 81.84 59.8077C82.026 59.7322 82.2252 59.6938 82.4262 59.6949H88.2874C88.7764 59.6927 89.2449 59.499 89.5907 59.1559C89.9365 58.8127 90.1318 58.348 90.1339 57.8627V24.8341C90.1296 24.3502 89.9334 23.8875 89.5878 23.5461C89.2422 23.2048 88.775 23.0122 88.2874 23.01H37.1771C36.6895 23.0122 36.2223 23.2048 35.8767 23.5461C35.5311 23.8875 35.3349 24.3502 35.3305 24.8341V57.8627C35.3327 58.348 35.528 58.8127 35.8738 59.1559C36.2196 59.499 36.688 59.6927 37.1771 59.6949H64.8756C65.2081 59.6949 65.5318 59.801 65.7989 59.9975L80.8929 71.3997ZM65.667 63.7028V77.9842C65.6541 79.0519 65.2209 80.0722 64.46 80.8272C63.6991 81.5823 62.6707 82.0121 61.5946 82.0248H41.2577L28.5626 91.5948C28.3449 91.7957 28.0727 91.9291 27.7796 91.9786C27.4865 92.028 27.1852 91.9914 26.9128 91.8732C26.6404 91.755 26.4088 91.5604 26.2464 91.3133C26.084 91.0662 25.9979 90.7774 25.9988 90.4824V82.0248H23.0723C21.9963 82.0121 20.9679 81.5823 20.207 80.8272C19.446 80.0722 19.0128 79.0519 19 77.9842V53.0859C19.0128 52.0182 19.446 50.9978 20.207 50.2428C20.9679 49.4878 21.9963 49.058 23.0723 49.0452H32.2969V24.8341C32.3162 23.5537 32.8391 22.3316 33.7539 21.4284C34.6688 20.5253 35.9031 20.0127 37.1936 20H88.3038C89.6071 19.9999 90.8578 20.5103 91.7839 21.42C92.7101 22.3298 93.237 23.5655 93.25 24.8586V57.8627C93.25 59.1643 92.7289 60.4126 91.8013 61.3329C90.8737 62.2533 89.6156 62.7704 88.3038 62.7704H83.9512V74.4425C83.9521 74.7375 83.866 75.0263 83.7037 75.2734C83.5413 75.5205 83.3096 75.7151 83.0372 75.8333C82.7648 75.9515 82.4635 75.9881 82.1704 75.9387C81.8773 75.8892 81.6052 75.7558 81.3875 75.5549L65.667 63.7028ZM32.2969 52.0798V57.8627C32.2968 59.1558 32.8112 60.3967 33.7281 61.3157C34.645 62.2347 35.8904 62.7574 37.1936 62.7704H62.6086V77.9842C62.6064 78.2503 62.4989 78.505 62.3092 78.6932C62.1195 78.8814 61.8629 78.9881 61.5946 78.9902H40.7219C40.3902 78.9883 40.0677 79.0978 39.8068 79.3011L29.0242 87.4396V80.528C29.0242 80.1245 28.8627 79.7375 28.5751 79.4522C28.2876 79.1669 27.8976 79.0066 27.4909 79.0066H23.0723C22.8041 79.0045 22.5474 78.8978 22.3577 78.7096C22.168 78.5213 22.0605 78.2667 22.0584 78.0005V53.0859C22.0605 52.8197 22.168 52.5651 22.3577 52.3769C22.5474 52.1886 22.8041 52.082 23.0723 52.0798H32.2969ZM47.9103 40.0233C48.1321 40.2417 48.2961 40.5112 48.3877 40.8077C48.4792 41.1043 48.4954 41.4186 48.4349 41.7229C48.3744 42.0272 48.2391 42.3119 48.0409 42.5517C47.8427 42.7915 47.5878 42.9789 47.2989 43.0974C47.0101 43.2158 46.6962 43.2616 46.3852 43.2306C46.0742 43.1996 45.7758 43.0927 45.5164 42.9196C45.2571 42.7465 45.0449 42.5125 44.8988 42.2384C44.7526 41.9642 44.6771 41.6585 44.6788 41.3484C44.6769 40.9761 44.7869 40.6116 44.9947 40.3016C45.2025 39.9916 45.4987 39.75 45.8455 39.6078C46.1923 39.4656 46.574 39.4292 46.9417 39.5032C47.3095 39.5772 47.6467 39.7583 47.9103 40.0233ZM46.5748 36.4407C47.5531 36.4407 48.5093 36.7285 49.3227 37.2678C50.1361 37.8071 50.7701 38.5735 51.1445 39.4703C51.5188 40.3671 51.6168 41.3538 51.4259 42.3058C51.2351 43.2578 50.764 44.1323 50.0723 44.8186C49.3805 45.505 48.4992 45.9724 47.5397 46.1618C46.5803 46.3511 45.5858 46.2539 44.682 45.8825C43.7782 45.511 43.0057 44.882 42.4622 44.0749C41.9187 43.2679 41.6287 42.319 41.6287 41.3484C41.6287 40.0468 42.1498 38.7985 43.0773 37.8781C44.0049 36.9578 45.263 36.4407 46.5748 36.4407ZM64.0842 40.0233C64.306 40.2417 64.47 40.5112 64.5616 40.8077C64.6531 41.1043 64.6694 41.4186 64.6089 41.7229C64.5483 42.0272 64.413 42.3119 64.2148 42.5517C64.0166 42.7915 63.7617 42.9789 63.4729 43.0974C63.184 43.2158 62.8701 43.2616 62.5591 43.2306C62.2481 43.1996 61.9497 43.0927 61.6904 42.9196C61.431 42.7465 61.2188 42.5125 61.0727 42.2384C60.9266 41.9642 60.851 41.6585 60.8527 41.3484C60.8585 40.9795 60.9731 40.6204 61.1822 40.3154C61.3913 40.0103 61.6858 39.7727 62.0294 39.6318C62.373 39.4909 62.7507 39.4529 63.1159 39.5225C63.481 39.592 63.8176 39.7661 64.0842 40.0233ZM62.7405 36.4407C63.7187 36.4407 64.675 36.7285 65.4884 37.2678C66.3018 37.8071 66.9358 38.5735 67.3101 39.4703C67.6845 40.3671 67.7824 41.3538 67.5916 42.3058C67.4007 43.2578 66.9297 44.1323 66.2379 44.8186C65.5462 45.505 64.6649 45.9724 63.7054 46.1618C62.746 46.3511 61.7515 46.2539 60.8477 45.8825C59.9439 45.511 59.1714 44.882 58.6279 44.0749C58.0844 43.2679 57.7943 42.319 57.7943 41.3484C57.7943 40.0468 58.3154 38.7985 59.243 37.8781C60.1706 36.9578 61.4287 36.4407 62.7405 36.4407ZM80.2499 40.0233C80.4717 40.2417 80.6357 40.5112 80.7273 40.8077C80.8188 41.1043 80.835 41.4186 80.7745 41.7229C80.714 42.0272 80.5786 42.3119 80.3804 42.5517C80.1823 42.7915 79.9274 42.9789 79.6385 43.0974C79.3497 43.2158 79.0358 43.2616 78.7248 43.2306C78.4138 43.1996 78.1154 43.0927 77.856 42.9196C77.5967 42.7465 77.3845 42.5125 77.2384 42.2384C77.0922 41.9642 77.0167 41.6585 77.0184 41.3484C77.0165 40.9761 77.1265 40.6116 77.3343 40.3016C77.5421 39.9916 77.8383 39.75 78.1851 39.6078C78.5319 39.4656 78.9136 39.4292 79.2813 39.5032C79.6491 39.5772 79.9863 39.7583 80.2499 40.0233ZM78.9144 36.4407C79.8927 36.4407 80.8489 36.7285 81.6623 37.2678C82.4757 37.8071 83.1097 38.5735 83.484 39.4703C83.8584 40.3671 83.9564 41.3538 83.7655 42.3058C83.5747 43.2578 83.1036 44.1323 82.4119 44.8186C81.7201 45.505 80.8388 45.9724 79.8793 46.1618C78.9199 46.3511 77.9254 46.2539 77.0216 45.8825C76.1178 45.511 75.3453 44.882 74.8018 44.0749C74.2583 43.2679 73.9682 42.319 73.9682 41.3484C73.9682 40.0468 74.4894 38.7985 75.4169 37.8781C76.3445 36.9578 77.6026 36.4407 78.9144 36.4407Z\"/>\n\t</svg>\n</template>\n\n",
              "name": "PlaceholderChat.vue",
              "size": 5894,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/placeholders/PlaceholderImage.vue",
              "relativePath": "modules/icons/placeholders/PlaceholderImage.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg width=\"112\" height=\"112\" viewBox=\"0 0 112 112\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<path d=\"M30.4342 67.4398C31.1433 71.4062 33.639 73.2442 37.652 72.494V72.7845C37.652 76.8472 39.8292 79 43.9158 79H79.7124C83.8228 79 86 76.7752 86 72.7845V48.455C86 44.4651 83.8228 42.2403 79.7124 42.2403H75.0632L73.7908 35.2025C73.0809 31.2604 70.5614 29.4467 66.5239 30.1476L31.2661 36.291C27.2286 37.0162 25.4428 39.5073 26.1519 43.498L30.4342 67.4398ZM31.6084 67.1736L27.3506 43.3523C26.7635 40.0633 28.2071 38.0319 31.5347 37.4516L66.6705 31.3332C69.8761 30.7764 72.0295 32.1555 72.6412 35.4688L73.8153 42.2403H43.9158C39.8292 42.2403 37.652 44.4165 37.652 48.455V71.2849L37.5783 71.3091C34.2507 71.9137 32.1955 70.4626 31.6084 67.1736ZM38.8507 48.5278C38.8507 45.166 40.5882 43.4251 43.9887 43.4251H79.6633C82.9172 43.4251 84.8013 45.166 84.8013 48.5278V70.0037L74.1822 60.4506C73.0571 59.4349 71.8822 58.8546 70.414 58.8546C68.9705 58.8546 67.8938 59.4106 66.7196 60.4263L56.3453 69.2049L52.4552 65.6747C51.4513 64.7311 50.5711 64.2479 49.2987 64.2479C48.1237 64.2479 47.3164 64.7311 46.3133 65.6261L38.8507 72.4462V48.5278ZM52.8465 60.8617C55.8073 60.8617 58.2294 58.4192 58.2294 55.4207C58.2294 52.4943 55.8073 50.0275 52.8465 50.0275C49.8121 50.0275 47.3655 52.4943 47.3655 55.4207C47.3655 58.4192 49.8121 60.8617 52.8465 60.8617Z\" \tfill=\"rgb(var(--main))\"/>\n\t</svg>\n</template>",
              "name": "PlaceholderImage.vue",
              "size": 1404,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/placeholders/PlaceholderOrganizationPic.vue",
              "relativePath": "modules/icons/placeholders/PlaceholderOrganizationPic.vue",
              "extension": ".vue",
              "content": "<template>\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n<rect width=\"24\" height=\"24\"  fill=\"rgb(var(--black))\" />\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.5792 8.16493H4.95783C4.37862 9.23478 4.05086 10.424 4 11.6403H7.09225C7.11405 10.4664 7.27833 9.2996 7.5792 8.16493ZM11.6424 8.16493H8.32338C8.00508 9.29667 7.83356 10.4648 7.81176 11.6403H11.6424V8.16493ZM15.6759 8.16493H12.3591V11.6403H16.1882C16.1664 10.4649 15.9949 9.2968 15.6766 8.16493H15.6759ZM19.0414 8.16493H16.4208C16.7217 9.29958 16.8859 10.4663 16.9077 11.6403H20C19.9476 10.4234 19.6191 9.23491 19.0378 8.16493H19.0414ZM16.2028 7.44539H18.5988C17.5814 5.96553 16.0988 4.8703 14.3866 4.33354C15.2143 5.1463 15.8081 6.28537 16.2028 7.44539ZM12.3591 7.44539V4.00205C13.8213 4.24821 14.8744 5.89198 15.4418 7.44539H12.3591ZM8.55817 7.44539H11.6424V4C10.1802 4.24397 9.12579 5.89198 8.55817 7.44539ZM5.39541 7.44539C6.4143 5.9648 7.89976 4.86881 9.61342 4.33354C8.78567 5.1463 8.19192 6.28537 7.7973 7.44539H5.39541ZM7.79725 16.5546H5.40118C6.41788 18.0345 7.90125 19.1304 9.61342 19.6665C8.78567 18.8537 8.19187 17.7146 7.79725 16.5546ZM11.6432 16.5546L11.6424 20C10.1802 19.7538 9.12581 18.108 8.55819 16.5546H11.6432ZM15.4426 16.5546H12.3591V20C13.8213 19.7538 14.8744 18.108 15.4418 16.5546H15.4426ZM18.6053 16.5546H18.6046C17.5857 18.0359 16.101 19.1312 14.3866 19.6665C15.2144 18.8537 15.8081 17.7146 16.2027 16.5546H18.6053ZM16.4208 15.8351H19.0422C19.6214 14.7652 19.9491 13.576 20 12.3597H16.9078C16.8859 13.5336 16.7224 14.7004 16.4208 15.8351ZM12.3598 15.8351H15.6766C15.9949 14.7033 16.1664 13.5352 16.1882 12.3597H12.3591V15.8351H12.3598ZM8.32431 15.8351H11.6426V12.3597H7.81195C7.83375 13.5351 8.00527 14.7032 8.32357 15.8351H8.32431ZM4.95876 15.8351H7.57939C7.27779 14.7004 7.11428 13.5337 7.09247 12.3597H4.00022C4.05037 13.5766 4.37812 14.7651 4.95806 15.8351H4.95876Z\"  fill=\"rgb(var(--white))\"  fill-opacity=\"0.4\"/>\n    </svg>\n</template>\n",
              "name": "PlaceholderOrganizationPic.vue",
              "size": 1984,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/placeholders/PlaceholderUserpic.vue",
              "relativePath": "modules/icons/placeholders/PlaceholderUserpic.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg \n\t\tviewBox=\"0 0 42 42\"\n\t\tfill=\"none\" \n\t\txmlns=\"http://www.w3.org/2000/svg\">\n\t\t<circle \n\t\t\tfill=\"rgb(var(--black))\" \n\t\t\tcx=\"21\" \n\t\t\tcy=\"21\" \n\t\t\tr=\"21\" \n\t\t\tfill-opacity=\"1\"\n\t\t/>\n\t\t<path \n\t\t\tfill=\"rgb(var(--white))\" \n\t\t\tfill-opacity=\"0.4\" \n\t\t\tfill-rule=\"evenodd\" \n\t\t\tclip-rule=\"evenodd\" \n\t\t\td=\"M8.00233 37.4954C8.00078 37.4458 8 37.3961 8 37.3462C8 32.9066 11.5673 29.3077 15.9677 29.3077H26.0323C30.4328 29.3077 34 32.9066 34 37.3462C34 37.3961 33.9992 37.4458 33.9977 37.4954C30.4223 40.3165 25.9078 42 21 42C16.0922 42 11.5777 40.3164 8.00233 37.4954ZM21 9C16.5995 9 13.0323 12.5989 13.0323 17.0385C13.0323 21.478 16.5995 25.0769 21 25.0769C25.4005 25.0769 28.9677 21.478 28.9677 17.0385C28.9677 12.5989 25.4005 9 21 9Z\"\n\t\t/>\n\t</svg>\n</template>",
              "name": "PlaceholderUserpic.vue",
              "size": 762,
              "type": "source"
            }
          ]
        },
        "skeletons": {
          "_files": [
            {
              "path": "../../src/modules/icons/skeletons/SkeletonBlogpost.vue",
              "relativePath": "modules/icons/skeletons/SkeletonBlogpost.vue",
              "extension": ".vue",
              "content": "<template>\n  <svg width=\"100%\" height=\"20rem\" xmlns=\"http://www.w3.org/2000/svg\">\n    <!-- Фоновый прямоугольник для всей карточки -->\n    <rect x=\"0\" y=\"0\" rx=\"5\" ry=\"5\" width=\"100%\" height=\"100%\" fill=\"rgb(var(--light))\"/>\n    \n    <!-- Имитация шапки карточки -->\n    <rect x=\"15\" y=\"15\" rx=\"4\" ry=\"4\" width=\"40%\" height=\"20\" fill=\"rgba(var(--black),0.05)\"></rect>\n    \n    <!-- Имитация изображения -->\n    <rect x=\"15\" y=\"45\" rx=\"5\" ry=\"5\" width=\"70%\" height=\"50\" fill=\"rgba(var(--black),0.05)\"></rect>\n    \n    <!-- Имитация текста под изображением -->\n    <rect x=\"15\" y=\"110\" rx=\"3\" ry=\"3\" width=\"90%\" height=\"6\" fill=\"rgba(var(--black),0.05)\"></rect>\n    <rect x=\"15\" y=\"130\" rx=\"3\" ry=\"3\" width=\"70%\" height=\"6\" fill=\"rgba(var(--black),0.05)\"></rect>\n    \n    <!-- Блик с анимацией движения -->\n    <rect x=\"-25%\" y=\"0\" width=\"25%\" height=\"100%\" fill=\"rgb(var(--light))\" mask=\"url(#myMask)\" opacity=\"0.3\">\n      <animate attributeName=\"x\" from=\"-25%\" to=\"100%\" dur=\"2s\" repeatCount=\"indefinite\"></animate>\n    </rect>\n  </svg>\n</template>",
              "name": "SkeletonBlogpost.vue",
              "size": 1048,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/skeletons/SkeletonEvent.vue",
              "relativePath": "modules/icons/skeletons/SkeletonEvent.vue",
              "extension": ".vue",
              "content": "<template>\n  <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\n    <!-- Фоновый прямоугольник для всей карточки -->\n    <rect x=\"0\" y=\"0\" rx=\"5\" ry=\"5\" width=\"100\" height=\"100\" fill=\"rgb(var(--light))\" />\n    \n    <!-- Имитация квадратного изображения -->\n    <rect x=\"10\" y=\"10\" rx=\"5\" ry=\"5\" width=\"50\" height=\"50\" fill=\"rgba(var(--black),0.05)\" />\n    \n    <!-- Имитация текста под изображением (две полоски) -->\n    <rect x=\"10\" y=\"70\" rx=\"3\" ry=\"3\" width=\"80\" height=\"5\" fill=\"rgba(var(--black),0.05)\" />\n    <rect x=\"10\" y=\"80\" rx=\"3\" ry=\"3\" width=\"80\" height=\"5\" fill=\"rgba(var(--black),0.05)\" />\n    \n    <!-- Блик с анимацией движения -->\n    <rect x=\"-25\" y=\"0\" width=\"25\" height=\"100\" fill=\"rgb(var(--white))\" opacity=\"0.3\">\n      <animate attributeName=\"x\" from=\"-25\" to=\"100\" dur=\"2s\" repeatCount=\"indefinite\" />\n    </rect>\n  </svg>\n</template>",
              "name": "SkeletonEvent.vue",
              "size": 898,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/skeletons/SkeletonEventShort.vue",
              "relativePath": "modules/icons/skeletons/SkeletonEventShort.vue",
              "extension": ".vue",
              "content": "<template>\n  <svg width=\"100%\" height=\"50\" xmlns=\"http://www.w3.org/2000/svg\">\n    <!-- Фоновый прямоугольник для всей строки -->\n    <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"rgb(var(--white))\"/>\n\n    <!-- Имитация времени -->\n    <rect x=\"15\" y=\"15\" rx=\"3\" ry=\"3\" width=\"40\" height=\"20\" fill=\"rgba(var(--black),0.05)\"></rect>\n\n    <!-- Имитация названия ивента -->\n    <rect x=\"65\" y=\"15\" rx=\"3\" ry=\"3\" width=\"150\" height=\"20\" fill=\"rgba(var(--black),0.05)\"></rect>\n    <!-- Имитация кружочков-аватарок -->\n    <circle cx=\"250\" cy=\"25\" r=\"10\" fill=\"rgba(var(--black),0.1)\"></circle>\n    <circle cx=\"265\" cy=\"25\" r=\"10\" fill=\"rgba(var(--black),0.05)\"></circle>\n    <circle cx=\"280\" cy=\"25\" r=\"10\" fill=\"rgba(var(--black),0.025)\"></circle>\n\n    <!-- Блик с анимацией движения -->\n    <rect x=\"-25%\" y=\"0\" width=\"25%\" height=\"100%\" fill=\"rgb(var(--white))\" opacity=\"0.3\">\n      <animate attributeName=\"x\" from=\"-25%\" to=\"100%\" dur=\"2s\" repeatCount=\"indefinite\"></animate>\n    </rect>\n  </svg>\n\n</template>",
              "name": "SkeletonEventShort.vue",
              "size": 1013,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/skeletons/SkeletonOrganization.vue",
              "relativePath": "modules/icons/skeletons/SkeletonOrganization.vue",
              "extension": ".vue",
              "content": "<template>\n  <svg width=\"100%\" height=\"20rem\" xmlns=\"http://www.w3.org/2000/svg\">\n    <!-- Фоновый прямоугольник для всей карточки -->\n    <rect x=\"0\" y=\"0\" rx=\"5\" ry=\"5\" width=\"100%\" height=\"100%\" fill=\"rgb(var(--white))\"/>\n    \n    <!-- Имитация шапки карточки -->\n    <rect x=\"15\" y=\"15\" rx=\"4\" ry=\"4\" width=\"40%\" height=\"20\" fill=\"rgba(var(--black),0.05)\"></rect>\n    \n    <!-- Имитация изображения -->\n    <rect x=\"15\" y=\"45\" rx=\"5\" ry=\"5\" width=\"70%\" height=\"50\" fill=\"rgba(var(--black),0.05)\"></rect>\n    \n    <!-- Имитация текста под изображением -->\n    <rect x=\"15\" y=\"110\" rx=\"3\" ry=\"3\" width=\"90%\" height=\"6\" fill=\"rgba(var(--black),0.05)\"></rect>\n    <rect x=\"15\" y=\"130\" rx=\"3\" ry=\"3\" width=\"70%\" height=\"6\" fill=\"rgba(var(--black),0.05)\"></rect>\n    \n    <!-- Блик с анимацией движения -->\n    <rect x=\"-25%\" y=\"0\" width=\"25%\" height=\"100%\" fill=\"rgb(var(--white))\" mask=\"url(#myMask)\" opacity=\"0.3\">\n      <animate attributeName=\"x\" from=\"-25%\" to=\"100%\" dur=\"2s\" repeatCount=\"indefinite\"></animate>\n    </rect>\n  </svg>\n</template>",
              "name": "SkeletonOrganization.vue",
              "size": 1048,
              "type": "source"
            }
          ]
        },
        "socials": {
          "_files": [
            {
              "path": "../../src/modules/icons/socials/dribbble.vue",
              "relativePath": "modules/icons/socials/dribbble.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg fill=\"none\" height=\"40\" viewBox=\"0 0 40 40\" width=\"40\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m35.7603 19.144c-.1629-3.1482-1.2512-6.1768-3.1269-8.702-.5715.6193-1.1824 1.2005-1.8289 1.74-1.9861 1.6597-4.2054 3.0144-6.5859 4.02.332.7.6361 1.378.9045 2.018v.006c.0757.1788.1486.3588.2186.54 3.0097-.34 6.1824-.216 9.2577.202.4095.056.7952.116 1.1609.176zm-18.6564-14.9c1.9373 2.74635 3.7238 5.59727 5.3514 8.54 2.4312-.964 4.441-2.18 6.0591-3.534.5617-.46574 1.0905-.97029 1.5824-1.51-2.8606-2.42057-6.4799-3.74534-10.2178-3.74-.9303-.00064-1.8588.08033-2.7751.242zm-12.62516 11.75c1.35421-.0344 2.70681-.1164 4.05531-.246 3.25945-.2933 6.49105-.843 9.66515-1.644-1.6589-2.8996-3.4499-5.72058-5.3673-8.454-2.0481 1.02079-3.85403 2.47282-5.29529 4.25758-1.44125 1.78472-2.48412 3.86052-3.05787 6.08642zm3.04149 14.076c.7713-1.134 1.78513-2.41 3.13097-3.798 2.8904-2.98 6.3016-5.3 10.2496-6.58l.1232-.036c-.328-.728-.6361-1.378-.9462-1.99-3.6498 1.07-7.4944 1.738-11.32508 2.084-1.86862.17-3.54442.244-4.77692.256-.00352 3.6652 1.24899 7.2195 3.54641 10.064zm18.33237 4.76c-.7666-3.8895-1.8517-7.7085-3.2442-11.418-3.9798 1.454-7.1505 3.58-9.6016 6.116-.9891 1.0048-1.867 2.1146-2.618 3.31 2.7409 2.0576 6.0704 3.1669 9.4902 3.162 2.0474.003 4.0759-.393 5.9736-1.166zm3.7234-2.15c3.1036-2.4005 5.2179-5.8686 5.9378-9.74-.6759-.17-1.5326-.34-2.4749-.472-2.095-.3035-4.2207-.3257-6.3215-.066 1.1829 3.3577 2.138 6.7922 2.8586 10.28zm-9.697 7.32c-10.97917 0-19.879-8.954-19.879-20s8.89983-20 19.879-20c10.9792 0 19.879 8.954 19.879 20s-8.8998 20-19.879 20z\" fill=\"#fff\"/></svg>\n</template>",
              "name": "dribbble.vue",
              "size": 1605,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/socials/facebook.vue",
              "relativePath": "modules/icons/socials/facebook.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg fill=\"none\" height=\"40\" viewBox=\"0 0 40 40\" width=\"40\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m20 0c-11.046 0-20 9.0085-20 20.1217 0 10.0428 7.314 18.3672 16.876 19.8783v-14.0631h-5.08v-5.8152h5.08v-4.4328c0-5.0425 2.984-7.82734 7.554-7.82734 2.188 0 4.476.39238 4.476.39238v4.94996h-2.52c-2.486 0-3.26 1.5514-3.26 3.143v3.7748h5.546l-.886 5.8152h-4.66v14.0631c9.56-1.5091 16.874-9.8375 16.874-19.8783 0-11.1132-8.954-20.1217-20-20.1217z\" fill=\"#fff\"/></svg>\n</template>",
              "name": "facebook.vue",
              "size": 492,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/socials/instagram.vue",
              "relativePath": "modules/icons/socials/instagram.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t<path d=\"M20.0019 0C14.5702 0 13.8885 0.0237504 11.7551 0.120834C9.62593 0.218334 8.17259 0.555417 6.90091 1.05C5.58547 1.56083 4.46963 2.24417 3.35795 3.35625C2.24544 4.46792 1.5621 5.58375 1.04959 6.89875C0.553755 8.17083 0.216252 9.62458 0.120418 11.7529C0.0250001 13.8862 0 14.5683 0 20C0 25.4317 0.0241673 26.1113 0.120835 28.2446C0.218753 30.3738 0.555839 31.8271 1.05001 33.0987C1.56127 34.4142 2.24461 35.53 3.3567 36.6417C4.46796 37.7542 5.58381 38.4392 6.89841 38.95C8.17092 39.4446 9.62468 39.7817 11.7535 39.8792C13.8868 39.9762 14.5681 40 19.9994 40C25.4315 40 26.1111 39.9762 28.2445 39.8792C30.3737 39.7817 31.8287 39.4446 33.1012 38.95C34.4162 38.4392 35.5304 37.7542 36.6416 36.6417C37.7541 35.53 38.4375 34.4142 38.95 33.0992C39.4417 31.8271 39.7792 30.3733 39.8792 28.245C39.975 26.1117 40 25.4317 40 20C40 14.5683 39.975 13.8867 39.8792 11.7533C39.7792 9.62417 39.4417 8.17083 38.95 6.89917C38.4375 5.58375 37.7541 4.46792 36.6416 3.35625C35.5291 2.24375 34.4166 1.56042 33.0999 1.05C31.8249 0.555417 30.3707 0.218334 28.2415 0.120834C26.1082 0.0237504 25.429 0 19.9956 0H20.0019ZM18.2077 3.60417C18.7402 3.60333 19.3344 3.60417 20.0019 3.60417C25.3419 3.60417 25.9749 3.62333 28.0836 3.71917C30.0336 3.80833 31.092 4.13417 31.797 4.40792C32.7303 4.77042 33.3958 5.20375 34.0954 5.90375C34.7954 6.60375 35.2287 7.27042 35.592 8.20375C35.8658 8.90792 36.192 9.96625 36.2808 11.9162C36.3766 14.0246 36.3975 14.6579 36.3975 19.9954C36.3975 25.3329 36.3766 25.9662 36.2808 28.0746C36.1916 30.0246 35.8658 31.0829 35.592 31.7871C35.2295 32.7204 34.7954 33.385 34.0954 34.0846C33.3953 34.7846 32.7308 35.2179 31.797 35.5804C31.0928 35.8554 30.0336 36.1804 28.0836 36.2696C25.9753 36.3654 25.3419 36.3863 20.0019 36.3863C14.6614 36.3863 14.0285 36.3654 11.9201 36.2696C9.9701 36.1796 8.91176 35.8537 8.20634 35.58C7.27299 35.2175 6.60632 34.7842 5.90631 34.0842C5.2063 33.3842 4.77297 32.7192 4.40963 31.7854C4.13588 31.0813 3.80962 30.0229 3.72087 28.0729C3.62504 25.9646 3.60587 25.3312 3.60587 19.9904C3.60587 14.6496 3.62504 14.0196 3.72087 11.9113C3.81004 9.96125 4.13588 8.90292 4.40963 8.19792C4.77213 7.26458 5.2063 6.59792 5.90631 5.89792C6.60632 5.19792 7.27299 4.76458 8.20634 4.40125C8.91134 4.12625 9.9701 3.80125 11.9201 3.71167C13.7651 3.62833 14.4802 3.60333 18.2077 3.59917V3.60417ZM30.6778 6.925C29.3528 6.925 28.2778 7.99875 28.2778 9.32417C28.2778 10.6492 29.3528 11.7242 30.6778 11.7242C32.0028 11.7242 33.0778 10.6492 33.0778 9.32417C33.0778 7.99917 32.0028 6.92417 30.6778 6.92417V6.925ZM20.0019 9.72917C14.3297 9.72917 9.73093 14.3279 9.73093 20C9.73093 25.6721 14.3297 30.2687 20.0019 30.2687C25.674 30.2687 30.2711 25.6721 30.2711 20C30.2711 14.3279 25.6736 9.72917 20.0015 9.72917H20.0019ZM20.0019 13.3333C23.6836 13.3333 26.6686 16.3179 26.6686 20C26.6686 23.6817 23.6836 26.6667 20.0019 26.6667C16.3198 26.6667 13.3351 23.6817 13.3351 20C13.3351 16.3179 16.3198 13.3333 20.0019 13.3333V13.3333Z\" fill=\"rgb(var(--white))\"/>\n\t</svg>\n</template>",
              "name": "instagram.vue",
              "size": 3093,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/socials/line.vue",
              "relativePath": "modules/icons/socials/line.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg width=\"67\" height=\"64\" viewBox=\"0 0 67 64\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M66.2237 27.2403C66.2237 12.4467 51.4301 0.287598 33.1914 0.287598C14.9528 0.287598 0.15918 12.4467 0.15918 27.2403C0.15918 40.4127 11.913 51.5585 27.7198 53.585C31.5702 54.3956 31.1649 55.8142 30.3543 61.0832C30.1517 61.8938 29.5437 64.3256 33.1914 62.907C36.6365 61.4885 52.2407 51.7612 59.1309 43.6551C63.9945 38.3861 66.2237 33.1172 66.2237 27.2403ZM43.1214 35.1437V20.7554C43.1214 20.3501 42.7161 19.9448 42.3108 20.1475H40.0816C39.6763 20.1475 39.4736 20.3501 39.4736 20.7554V29.2668L32.7861 20.3501C32.7861 20.1475 32.5835 20.1475 32.3808 20.1475H29.949C29.5437 20.1475 29.341 20.3501 29.341 20.7554V35.1437C29.341 35.549 29.5437 35.7517 29.949 35.7517H32.3808C32.5835 35.7517 32.9888 35.549 32.9888 35.1437V26.6323L39.4736 35.549C39.575 35.549 39.6763 35.5997 39.7776 35.6503C39.8789 35.701 39.9803 35.7517 40.0816 35.7517H42.3108C42.7161 35.7517 43.1214 35.549 43.1214 35.1437ZM27.1119 20.7554C27.1119 20.3501 26.7066 19.9448 26.5039 19.9448H24.0721C23.6668 19.9448 23.4641 20.3501 23.4641 20.7554V35.1437C23.4641 35.549 23.6668 35.7517 24.0721 35.7517H26.5039C26.7066 35.7517 27.1119 35.549 27.1119 35.1437V20.7554ZM21.4376 32.7119C21.4376 32.5092 21.235 32.1039 20.8297 32.1039H14.5475V20.7554C14.5475 20.3501 14.3448 19.9448 13.9395 19.9448H11.5077C11.305 19.9448 10.8997 20.3501 10.8997 20.7554V35.1437C10.8997 35.245 10.9504 35.2957 11.0011 35.3464C11.0517 35.397 11.1024 35.4477 11.1024 35.549C11.2037 35.549 11.2544 35.5997 11.305 35.6503C11.3557 35.701 11.4064 35.7517 11.5077 35.7517H20.8297C21.235 35.7517 21.4376 35.3464 21.4376 35.1437V32.7119ZM55.8884 20.7554C55.8884 20.3501 55.4831 19.9448 55.2805 19.9448H45.9585C45.5532 19.9448 45.3505 20.3501 45.3505 20.7554V35.1437C45.3505 35.3464 45.5532 35.7517 45.9585 35.7517H55.2805C55.4831 35.7517 55.8884 35.549 55.8884 35.1437V32.7119C55.8884 32.5092 55.4831 32.1039 55.2805 32.1039H48.9983V29.6721H55.2805C55.4831 29.6721 55.8884 29.4695 55.8884 29.0642V26.6323C55.8884 26.4297 55.4831 26.0244 55.2805 26.0244H48.9983V23.5926H55.2805C55.4831 23.5926 55.8884 23.3899 55.8884 22.9846V20.7554Z\" fill=\"rgb(var(--white))\"/>\n\t</svg>\n</template>",
              "name": "line.vue",
              "size": 2267,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/socials/linkedin.vue",
              "relativePath": "modules/icons/socials/linkedin.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg fill=\"none\" height=\"40\" viewBox=\"0 0 40 40\" width=\"40\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m33.8716 34.0867h-5.8864v-9.2823c0-2.2133-.0442-5.0622-3.0702-5.0622-3.068 0-3.5362 2.4089-3.5362 4.9v9.4445h-5.8886v-19.0867h5.6544v2.6h.0773c.7908-1.4978 2.7124-3.0822 5.5838-3.0822 5.9637 0 7.0681 3.9511 7.0681 9.0911v10.4778zm-25.02986-21.6978c-.44937.0006-.89443-.0881-1.30967-.2609s-.7925-.4264-1.11014-.7461c-.31765-.3198-.56944-.6995-.74093-1.1174-.17149-.41791-.25932-.86573-.25845-1.31783.00044-.68037.2014-1.34533.57746-1.91079.37607-.56546.91036-1.00603 1.5353-1.26599s1.31247-.32763 1.97564-.19447c.66315.13317 1.27225.46119 1.75005.94259.4779.48141.8032 1.09457.9347 1.76195s.0633 1.359-.1959 1.98744c-.2592.6284-.6978 1.1654-1.2603 1.543s-1.22372.5789-1.89997.5785zm2.95096 21.6978h-5.9041v-19.0867h5.9063v19.0867zm25.0276-34.0867h-33.88483c-1.62566 0-2.93547 1.28889-2.93547 2.88222v34.23558c0 1.5933 1.31201 2.8822 2.93326 2.8822h33.87824c1.6212 0 2.9465-1.2889 2.9465-2.8822v-34.23558c0-1.59333-1.3253-2.88222-2.9465-2.88222h.0066z\" fill=\"#fff\"/></svg>\n</template>",
              "name": "linkedin.vue",
              "size": 1098,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/socials/reddit.vue",
              "relativePath": "modules/icons/socials/reddit.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg width=\"40\" height=\"36\" viewBox=\"0 0 40 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t<path d=\"M40 17.9021C40 15.4963 38.0287 13.5858 35.6272 13.5858C34.4444 13.5858 33.3692 14.0457 32.5806 14.7887C29.5699 12.6659 25.448 11.2861 20.8602 11.1092L22.8674 1.83974L29.3907 3.21955C29.4624 4.84701 30.8244 6.15605 32.509 6.15605C34.2294 6.15605 35.6272 4.77625 35.6272 3.07803C35.6272 1.37981 34.2294 0 32.509 0C31.2903 0 30.2151 0.707593 29.7133 1.7336L22.4373 0.21228C22.2222 0.1769 22.0072 0.212278 21.8638 0.318417C21.6846 0.424556 21.5771 0.601454 21.5412 0.813732L19.319 11.1446C14.6595 11.2861 10.466 12.6659 7.41936 14.8241C6.63083 14.0811 5.55556 13.6211 4.37276 13.6211C1.93549 13.6211 0 15.567 0 17.9375C0 19.7064 1.07527 21.1924 2.58065 21.8646C2.50896 22.2892 2.47312 22.7137 2.47312 23.1736C2.47312 29.825 10.3226 35.2381 20 35.2381C29.6774 35.2381 37.5269 29.8604 37.5269 23.1736C37.5269 22.7491 37.491 22.2892 37.4194 21.8646C38.9247 21.1924 40 19.6711 40 17.9021V17.9021ZM9.96416 20.9801C9.96416 19.2819 11.362 17.9021 13.0824 17.9021C14.8029 17.9021 16.2007 19.2819 16.2007 20.9801C16.2007 22.6783 14.8029 24.0581 13.0824 24.0581C11.362 24.0935 9.96416 22.6783 9.96416 20.9801V20.9801ZM27.4194 29.1528C25.2688 31.2756 21.1828 31.4171 20 31.4171C18.7814 31.4171 14.6953 31.2402 12.5806 29.1528C12.2581 28.8344 12.2581 28.3391 12.5806 28.0206C12.9032 27.7022 13.405 27.7022 13.7276 28.0206C15.0896 29.3651 17.957 29.825 20 29.825C22.043 29.825 24.9462 29.3651 26.2724 28.0206C26.595 27.7022 27.0968 27.7022 27.4194 28.0206C27.7061 28.3391 27.7061 28.8344 27.4194 29.1528ZM26.8459 24.0935C25.1254 24.0935 23.7276 22.7137 23.7276 21.0155C23.7276 19.3173 25.1254 17.9375 26.8459 17.9375C28.5663 17.9375 29.9642 19.3173 29.9642 21.0155C29.9642 22.6783 28.5663 24.0935 26.8459 24.0935Z\" fill=\"rgb(var(--white))\"/>\n\t</svg>\n</template>\n",
              "name": "reddit.vue",
              "size": 1863,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/socials/telegram.vue",
              "relativePath": "modules/icons/socials/telegram.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg width=\"40\" height=\"33\" viewBox=\"0 0 40 33\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t<path d=\"M9.75391 18.7989L14.1454 30.9541C14.1454 30.9541 14.6945 32.0914 15.2824 32.0914C15.8704 32.0914 24.6149 22.9943 24.6149 22.9943L34.3391 4.21216L9.9106 15.6613L9.75391 18.7989Z\" fill=\"#C8DAEA\"/>\n\t<path d=\"M15.5785 21.916L14.7355 30.8755C14.7355 30.8755 14.3826 33.6208 17.1273 30.8755C19.8719 28.1302 22.4991 26.0133 22.4991 26.0133\" fill=\"#A9C6D8\"/>\n\t<path d=\"M9.8345 19.2327L0.800944 16.2894C0.800944 16.2894 -0.278665 15.8514 0.0689689 14.8581C0.140532 14.6533 0.28489 14.479 0.716734 14.1795C2.71833 12.7844 37.7646 0.18778 37.7646 0.18778C37.7646 0.18778 38.7541 -0.145665 39.3377 0.0761175C39.4821 0.120809 39.612 0.20305 39.7142 0.314426C39.8164 0.425801 39.8871 0.562314 39.9192 0.710002C39.9823 0.970857 40.0086 1.23923 39.9975 1.50737C39.9948 1.73933 39.9667 1.95433 39.9454 2.29148C39.732 5.73543 33.3444 31.4388 33.3444 31.4388C33.3444 31.4388 32.9622 32.9428 31.5929 32.9943C31.2564 33.0052 30.9212 32.9482 30.6072 32.8267C30.2932 32.7053 30.0069 32.5218 29.7653 32.2873C27.0783 29.976 17.7912 23.7347 15.739 22.362C15.6927 22.3305 15.6538 22.2894 15.6247 22.2415C15.5957 22.1936 15.5772 22.14 15.5706 22.0844C15.5419 21.9397 15.6992 21.7605 15.6992 21.7605C15.6992 21.7605 31.8706 7.38631 32.3009 5.87732C32.3342 5.76041 32.2083 5.70273 32.0393 5.75394C30.9652 6.14908 12.346 17.9073 10.291 19.2049C10.1431 19.2497 9.98675 19.2592 9.8345 19.2327V19.2327Z\" fill=\"rgb(var(--white))\"/>\n\t</svg>\n</template>",
              "name": "telegram.vue",
              "size": 1534,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/socials/twitter.vue",
              "relativePath": "modules/icons/socials/twitter.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg width=\"40\" height=\"33\" viewBox=\"0 0 40 33\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t<path d=\"M35.9049 8.17058C35.9293 8.52666 35.9293 8.88274 35.9293 9.2421C35.9293 20.192 27.6742 32.8205 12.5793 32.8205V32.814C8.12025 32.8205 3.75381 31.5307 0 29.0989C0.648385 29.1777 1.30002 29.217 1.95328 29.2187C5.64859 29.222 9.23827 27.9699 12.1454 25.6645C8.63376 25.5972 5.55434 23.2851 4.47857 19.9097C5.70871 20.1493 6.97623 20.1001 8.18363 19.767C4.35507 18.9859 1.60065 15.5892 1.60065 11.6444V11.5394C2.74142 12.181 4.01869 12.5371 5.32521 12.5765C1.71928 10.143 0.607759 5.29897 2.78529 1.51172C6.95186 6.68883 13.0993 9.83612 19.6986 10.1692C19.0372 7.29105 19.9407 4.27503 22.0727 2.25178C25.378 -0.885667 30.5765 -0.724857 33.6835 2.61114C35.5214 2.24521 37.283 1.56423 38.895 0.599367C38.2823 2.51761 37.0002 4.14704 35.2874 5.18246C36.9141 4.98883 38.5034 4.54907 40 3.87793C38.8982 5.54511 37.5105 6.99732 35.9049 8.17058Z\" fill=\"rgb(var(--white))\"/>\n\t</svg>\n</template>",
              "name": "twitter.vue",
              "size": 1000,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/socials/vk.vue",
              "relativePath": "modules/icons/socials/vk.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg fill=\"none\" height=\"40\" viewBox=\"0 0 40 40\" width=\"40\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<path d=\"m39.5494 28.7878c-.0507-.103-.0942-.1912-.1377-.2648-.6888-1.2576-2.0083-2.8095-3.9513-4.6408l-.0435-.0441-.0218-.0221-.0217-.0221h-.0218c-.8845-.8531-1.4428-1.4268-1.6748-1.721-.4277-.5589-.522-1.1253-.29-1.6989.1668-.434.7903-1.3533 1.8633-2.7507.5655-.7428 1.015-1.3386 1.3485-1.7872 2.3853-3.2214 3.4221-5.2807 3.1031-6.17066l-.1233-.20593c-.0797-.12503-.2972-.24271-.638-.34567-.348-.10297-.7902-.12503-1.3267-.05149l-5.9596.04413c-.0943-.03677-.232-.02942-.4133.00736-.1813.04413-.2683.06619-.2683.06619l-.1015.05148-.0797.0662c-.0725.04412-.145.11767-.2248.22064-.0797.10297-.1522.228-.203.36774-.6525 1.69161-1.3847 3.26551-2.2185 4.72171-.5075.8679-.9788 1.6181-1.4065 2.258-.4278.6398-.783 1.1032-1.073 1.4047-.2901.3016-.5511.5443-.7903.7208-.232.1838-.4133.2574-.5365.228-.1233-.0294-.2393-.0589-.3553-.0809-.1957-.1251-.348-.2942-.464-.5149-.116-.2206-.1957-.4927-.2392-.8163-.0435-.331-.0653-.6105-.0725-.8532-.0073-.2353 0-.5737.0072-1.0076.0145-.4339.0218-.7281.0218-.8826 0-.5295.0072-1.1105.029-1.7357.0217-.6251.0362-1.1179.0507-1.4783s.0218-.7502.0218-1.1547-.0218-.72076-.0725-.95611c-.0508-.228-.1233-.45599-.2175-.66928-.0943-.21329-.2393-.38245-.4278-.50748-.1885-.11768-.4205-.21329-.696-.28684-.7323-.16915-1.6603-.25741-2.7913-.27212-2.5666-.02942-4.2123.13974-4.9446.50748-.29.15445-.551.36038-.783.63251-.2465.3089-.2828.47806-.1015.50747.8265.12503 1.4138.42657 1.7618.90467l.1232.25c.0943.1839.1958.5075.29.9635.0943.4634.1595.9708.1885 1.5298.0653 1.0223.0653 1.8975 0 2.6256-.0725.7282-.1377 1.2945-.1957 1.699-.0653.4045-.1523.7355-.2828.9855-.1232.2501-.2102.4045-.2465.4634-.0435.0588-.0725.0882-.1015.1029-.1812.0662-.3625.103-.5582.103-.1958 0-.4278-.0956-.7033-.2942s-.5655-.4633-.8555-.809c-.2973-.3457-.6308-.8237-1.0078-1.4415-.3698-.6178-.7613-1.346-1.16-2.1844l-.3335-.6104c-.2103-.3898-.49303-.9635-.84829-1.7137-.3625-.7502-.67426-1.471-.94976-2.177-.10875-.2942-.27551-.51484-.50026-.66929l-.1015-.06619c-.06525-.05884-.18126-.11768-.33351-.17652-.15225-.06619-.31175-.11032-.47851-.13974l-5.6696.04413c-.580007 0-.971514.13239-1.181767.39716l-.0797516.12503c-.058001.09561-.0797514.20593-.0797514.36038 0 .15444.0435008.34564.123252.56634.826515 1.9784 1.732778 3.8759 2.704298 5.7146s1.81978 3.3097 2.53754 4.4276c.71777 1.1179 1.45003 2.177 2.19679 3.1699.74677.9929 1.23977 1.6327 1.47903 1.9122.23925.2795.43501.4928.57276.6325l.51473.5075c.3335.3383.8193.7355 1.4573 1.2062.6453.4707 1.3558.934 2.1315 1.39.7831.456 1.6893.8238 2.7188 1.1106 1.0368.2868 2.0446.4045 3.0233.3457h2.3781c.4857-.0441.8482-.1986 1.0948-.4634l.0797-.1029c.058-.0809.1088-.2133.1523-.3898.0507-.1766.0725-.3678.0725-.5811-.0145-.6031.029-1.1473.1377-1.6254.1015-.4854.2175-.8458.3553-1.0885.1305-.2427.2827-.4486.4422-.6178.1668-.1691.2828-.2721.3553-.3015.0652-.0368.1232-.0589.1667-.0736.3335-.1103.7178 0 1.1673.3236.4495.331.87.7355 1.2615 1.2209.3915.4855.8628 1.0223 1.4211 1.6254.551.6031 1.0367 1.0518 1.45 1.346l.4132.25c.2755.1692.638.3236 1.0803.4634.4423.1397.8265.1765 1.16.1029l5.2999-.0809c.522 0 .9352-.0882 1.218-.2647.29-.1766.464-.3678.5147-.5811.058-.2133.058-.4486.0073-.7134-.0435-.2721-.0943-.456-.1378-.5663z\" fill=\"#fff\"/>\n\t</svg>\n</template>",
              "name": "vk.vue",
              "size": 3316,
              "type": "source"
            },
            {
              "path": "../../src/modules/icons/socials/youtube.vue",
              "relativePath": "modules/icons/socials/youtube.vue",
              "extension": ".vue",
              "content": "<template>\n\t<svg width=\"21\" height=\"14\" viewBox=\"0 0 21 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<path d=\"M19.6758 2.64453C19.4648 1.80078 18.7969 1.13281 17.9883 0.921875C16.4766 0.5 10.5 0.5 10.5 0.5C10.5 0.5 4.48828 0.5 2.97656 0.921875C2.16797 1.13281 1.5 1.80078 1.28906 2.64453C0.867188 4.12109 0.867188 7.28516 0.867188 7.28516C0.867188 7.28516 0.867188 10.4141 1.28906 11.9258C1.5 12.7695 2.16797 13.4023 2.97656 13.6133C4.48828 14 10.5 14 10.5 14C10.5 14 16.4766 14 17.9883 13.6133C18.7969 13.4023 19.4648 12.7695 19.6758 11.9258C20.0977 10.4141 20.0977 7.28516 20.0977 7.28516C20.0977 7.28516 20.0977 4.12109 19.6758 2.64453ZM8.53125 10.1328V4.4375L13.5234 7.28516L8.53125 10.1328Z\" fill=\"rgb(var(--white))\"/>\n\t</svg>\n</template>",
              "name": "youtube.vue",
              "size": 752,
              "type": "source"
            }
          ]
        }
      },
      "integrations": {
        "_files": [
          {
            "path": "../../src/modules/integrations/integrations.service.js",
            "relativePath": "modules/integrations/integrations.service.js",
            "extension": ".js",
            "content": "class serviceIntegrations {\n  async createProduct(event) {\n    throw new Error('createProduct method not implemented');\n  }\n  async updateProduct(event) {\n    throw new Error('updateProduct method not implemented');\n  }\n  async deactivateProduct(event) {\n    throw new Error('deactivateProduct method not implemented');\n  }\n  async createPaymentLink(event) {\n    throw new Error('createPaymentLink method not implemented');\n  }\n  async updatePaymentLink(event) {\n    throw new Error('updatePaymentLink method not implemented');\n  }\n  async deactivatePaymentLink(event) {\n    throw new Error('deactivatePaymentLink method not implemented');\n  }\n  async createСheckout(event) {\n    throw new Error('createСheckout method not implemented');\n  }\n  async deactivateСheckout(event) {\n    throw new Error('deactivateСheckout method not implemented');\n  }\n  async createRefund(event) {\n    throw new Error('createRefund method not implemented');\n  }\n  async updateRefund(event) {\n    throw new Error('updateRefund method not implemented');\n  }\n  async deactivateRefund(event) {\n    throw new Error('deactivateRefund method not implemented');\n  }\n}\nexport default serviceIntegrations;\n",
            "name": "integrations.service.js",
            "size": 1176,
            "type": "source"
          }
        ],
        "openai": {
          "_files": [
            {
              "path": "../../src/modules/integrations/openai/openai.globals.js",
              "relativePath": "modules/integrations/openai/openai.globals.js",
              "extension": ".js",
              "content": "// openai.globals.js\nimport OpenAI from 'openai';\n\n/**\n * Global OpenAI client singleton\n */\nclass OpenAIGlobal {\n  constructor() {\n    if (OpenAIGlobal.instance) {\n      return OpenAIGlobal.instance;\n    }\n\n    this.client = new OpenAI({\n      organization: process.env.OPENAI_ORG_KEY,\n      apiKey: process.env.OPENAI_API_KEY,\n    });\n    \n    // Default models\n    this.models = {\n      chat: 'gpt-3.5-turbo',\n      vision: 'gpt-4-vision-preview',\n      embedding: 'text-embedding-ada-002'\n    };\n    \n    OpenAIGlobal.instance = this;\n  }\n\n  /**\n   * Generate completions with retry logic for handling JSON parsing errors\n   * @param {string} prompt - The prompt text\n   * @param {Object} options - Additional options\n   * @returns {Promise<Object|string>} - Parsed JSON response or raw content\n   */\n  async createChatCompletion(prompt, options = {}) {\n    const {\n      model = this.models.chat,\n      maxRetries = 3,\n      temperature = 0.7,\n      parseJSON = true,\n      systemPrompt = '',\n    } = options;\n\n    let attempt = 0;\n    \n    while (attempt < maxRetries) {\n      try {\n        const messages = [];\n        \n        if (systemPrompt) {\n          messages.push({ role: 'system', content: systemPrompt });\n        }\n        \n        messages.push({ role: 'user', content: prompt });\n        \n        const response = await this.client.chat.completions.create({\n          model,\n          messages,\n          temperature,\n          response_format: parseJSON ? { type: 'json_object' } : undefined\n        });\n\n        const content = response.choices[0].message.content;\n        \n        if (parseJSON) {\n          return JSON.parse(content);\n        }\n        \n        return content;\n      } catch (err) {\n        attempt++;\n        \n        if (err instanceof SyntaxError && attempt < maxRetries) {\n          console.error(`Invalid JSON in OpenAI response (attempt ${attempt}/${maxRetries}): ${err.message}`);\n        } else if (attempt >= maxRetries) {\n          console.error(`Max retries (${maxRetries}) reached for OpenAI completion: ${err.message}`);\n          throw err;\n        } else {\n          console.error(`OpenAI API error (attempt ${attempt}/${maxRetries}): ${err.message}`);\n          \n          // If we hit rate limits, add exponential backoff\n          if (err.status === 429) {\n            const waitTime = Math.pow(2, attempt) * 1000;\n            await new Promise(resolve => setTimeout(resolve, waitTime));\n          }\n        }\n        \n        // Wait before retrying\n        await new Promise(resolve => setTimeout(resolve, 1000 * attempt));\n      }\n    }\n  }\n\n  /**\n   * Get direct access to OpenAI client instance\n   * @returns {OpenAI} - OpenAI client instance\n   */\n  getClient() {\n    return this.client;\n  }\n  \n  /**\n   * Set default model for specific API\n   * @param {string} type - API type ('chat', 'vision', 'embedding')\n   * @param {string} modelId - Model identifier\n   */\n  setDefaultModel(type, modelId) {\n    if (this.models[type]) {\n      this.models[type] = modelId;\n    }\n  }\n}\n\n// Export singleton instance\nconst openaiGlobal = new OpenAIGlobal();\n\nexport default openaiGlobal;",
              "name": "openai.globals.js",
              "size": 3140,
              "type": "source"
            }
          ]
        },
        "paypal": {
          "controllers": {
            "webhooks": {
              "_files": [
                {
                  "path": "../../src/modules/integrations/paypal/controllers/webhooks/paypal.webhook.js",
                  "relativePath": "modules/integrations/paypal/controllers/webhooks/paypal.webhook.js",
                  "extension": ".js",
                  "content": "import WebhookHandler from './webhookHandler.js';\nclass PayPalWebhookHandler extends WebhookHandler {\n  async handleWebhook(req, res) {\n    let { event_type } = req.body;\n    switch (event_type) {\n      case 'PAYMENT.SALE.COMPLETED':\n        console.log('PayPal payment completed', req.body);\n        break;\n      case 'PAYMENT.SALE.DENIED':\n        console.log('PayPal payment denied', req.body);\n        break;\n      default:\n        console.log(`Unhandled PayPal event type ${event_type}`);\n    }\n    res.status(200).send({ message: 'Webhook handled' });\n  }\n}\nexport default PayPalWebhookHandler;\n",
                  "name": "paypal.webhook.js",
                  "size": 601,
                  "type": "source"
                }
              ]
            }
          }
        },
        "stripe": {
          "controllers": {
            "services": {
              "_files": [
                {
                  "path": "../../src/modules/integrations/stripe/controllers/services/stripe.service.js",
                  "relativePath": "modules/integrations/stripe/controllers/services/stripe.service.js",
                  "extension": ".js",
                  "content": "import servicePayment from '@martyrs/src/modules/integrations/integrations.service.js';\nimport Stripe from 'stripe';\n\nconst stripe = new Stripe(process.env.STRIPE_API_KEY ?? '', {\n  apiVersion: '2025-04-30.basil',\n});\n\nclass servicePaymentStripe extends servicePayment {\n  async createProducts(entityId, items, eventName) {\n    // Создаем один продукт для события\n    const product = await stripe.products.create({\n      id: entityId,\n      name: eventName,\n      metadata: {\n        product: entityId,\n      },\n    });\n    const priceLinks = [];\n    // Создаем разные цены и payment links для одного продукта\n    for (const item of items) {\n      const price = await stripe.prices.create({\n        product: product.id,\n        unit_amount: item.price * 100,\n        currency: 'THB',\n        nickname: item.name,\n        metadata: {\n          ticketType: item.name,\n        },\n      });\n      const paymentLink = await stripe.paymentLinks.create({\n        line_items: [\n          {\n            price: price.id,\n            quantity: 1,\n            adjustable_quantity: {\n              enabled: true,\n            },\n          },\n        ],\n        metadata: {\n          product: entityId,\n          ticketType: item.name,\n        },\n      });\n      priceLinks.push({\n        productId: product.id,\n        priceId: price.id,\n        paymentLinkId: paymentLink.id,\n        paymentLink: paymentLink.url,\n        name: item.name,\n      });\n    }\n    return priceLinks;\n  }\n  async updateProducts(entityId, newItems, existingItems, eventName) {\n    try {\n      const updates = [];\n      // Get existing product\n      let product;\n      try {\n        product = await stripe.products.retrieve(entityId);\n      } catch (error) {\n        // If product not found, create new\n        return this.createProducts(entityId, newItems, eventName);\n      }\n      // Update product name if changed\n      await stripe.products.update(product.id, {\n        name: eventName,\n      });\n      // Find deleted items\n      const deletedItems = existingItems.filter(existingItem => !newItems.some(newItem => newItem.name === existingItem.name));\n      // Deactivate payment links for deleted items\n      for (const deletedItem of deletedItems) {\n        if (deletedItem.stripePaymentLinkId) {\n          await stripe.paymentLinks.update(deletedItem.stripePaymentLinkId, {\n            active: false,\n          });\n        }\n      }\n      // Process each ticket\n      for (const item of newItems) {\n        const existingItem = existingItems.find(e => e.name === item.name);\n        if (existingItem) {\n          // Get all active prices for the product\n          const prices = await stripe.prices.list({\n            product: product.id,\n            active: true,\n          });\n          // Filter prices by metadata and amount in memory\n          let price = prices.data.find(p => p.unit_amount === item.price * 100 && p.metadata?.ticketType === item.name);\n          if (!price) {\n            // Deactivate old prices for this ticket type\n            await Promise.all(prices.data.filter(p => p.metadata?.ticketType === item.name).map(p => stripe.prices.update(p.id, { active: false })));\n            // Create new price\n            price = await stripe.prices.create({\n              product: product.id,\n              unit_amount: item.price * 100,\n              currency: 'THB',\n              nickname: item.name,\n              metadata: {\n                ticketType: item.name,\n              },\n            });\n            // Deactivate old link\n            if (existingItem.stripePaymentLinkId) {\n              await stripe.paymentLinks.update(existingItem.stripePaymentLinkId, {\n                active: false,\n              });\n            }\n            // Create new link\n            const paymentLink = await stripe.paymentLinks.create({\n              line_items: [\n                {\n                  price: price.id,\n                  quantity: 1,\n                  adjustable_quantity: {\n                    enabled: true,\n                  },\n                },\n              ],\n              metadata: {\n                product: product.id,\n                ticketType: item.name,\n              },\n            });\n            updates.push({\n              productId: product.id,\n              priceId: price.id,\n              paymentLinkId: paymentLink.id,\n              paymentLink: paymentLink.url,\n              name: item.name,\n            });\n          } else {\n            // Use existing data if price hasn't changed\n            updates.push({\n              productId: product.id,\n              priceId: price.id,\n              paymentLinkId: existingItem.stripePaymentLinkId,\n              paymentLink: existingItem.link,\n              name: item.name,\n            });\n          }\n        } else {\n          // Create new price for existing product\n          const price = await stripe.prices.create({\n            product: product.id,\n            unit_amount: item.price * 100,\n            currency: 'THB',\n            nickname: item.name,\n            metadata: {\n              ticketType: item.name,\n            },\n          });\n          const paymentLink = await stripe.paymentLinks.create({\n            line_items: [\n              {\n                price: price.id,\n                quantity: 1,\n                adjustable_quantity: {\n                  enabled: true,\n                },\n              },\n            ],\n            metadata: {\n              product: product.id,\n              ticketType: item.name,\n            },\n          });\n          updates.push({\n            productId: product.id,\n            priceId: price.id,\n            paymentLinkId: paymentLink.id,\n            paymentLink: paymentLink.url,\n            name: item.name,\n          });\n        }\n      }\n      return updates;\n    } catch (error) {\n      console.error('Error updating products:', error);\n      throw error;\n    }\n  }\n  async deactivateProduct(productId) {\n    try {\n      // Деактивируем продукт\n      await stripe.products.update(productId, {\n        active: false,\n      });\n      // Деактивируем все цены\n      const prices = await stripe.prices.list({\n        product: productId,\n        active: true,\n      });\n      await Promise.all(prices.data.map(price => stripe.prices.update(price.id, { active: false })));\n      // Деактивируем все payment links\n      const paymentLinks = await stripe.paymentLinks.list({\n        metadata: {\n          product: productId,\n        },\n      });\n      await Promise.all(paymentLinks.data.map(link => stripe.paymentLinks.update(link.id, { active: false })));\n      return true;\n    } catch (error) {\n      console.error('Error deactivating product:', error);\n      throw error;\n    }\n  }\n  async createСheckout(event) {\n    // Create a payment session based on the selected variants\n    const session = await stripe.checkout.sessions.create({\n      payment_method_types: ['card'],\n      line_items: event.variants.map(variant => ({\n        price: variant.priceId,\n        quantity: variant.quantity,\n      })),\n      mode: 'payment',\n      success_url: event.successUrl,\n      cancel_url: event.cancelUrl,\n    });\n    return session.url;\n  }\n  async deactivateСheckout(sessionId) {\n    // Expire a session\n    const session = await stripe.checkout.sessions.expire(sessionId);\n    return 'Payment session expired.';\n  }\n  async createRefund(event) {\n    // Create a refund for a payment intent\n    const refund = await stripe.refunds.create({\n      payment_intent: event.paymentIntentId,\n    });\n    return refund;\n  }\n  async updateRefund(refundId, metadata) {\n    try {\n      const refund = await stripe.refunds.update(refundId, {\n        metadata: metadata,\n      });\n      return refund;\n    } catch (error) {\n      // Handle cases where the update parameters are invalid\n      throw new Error('Failed to update refund: ' + error.message);\n    }\n  }\n  async deactivateRefund(refundId) {\n    try {\n      const refund = await stripe.refunds.cancel(refundId);\n      return refund;\n    } catch (error) {\n      // Handle cases where the refund cannot be cancelled\n      throw new Error('Failed to cancel refund: ' + error.message);\n    }\n  }\n}\nexport default servicePaymentStripe;\n",
                  "name": "stripe.service.js",
                  "size": 8209,
                  "type": "source"
                }
              ]
            },
            "webhooks": {
              "_files": [
                {
                  "path": "../../src/modules/integrations/stripe/controllers/webhooks/stripe.webhook.js",
                  "relativePath": "modules/integrations/stripe/controllers/webhooks/stripe.webhook.js",
                  "extension": ".js",
                  "content": "import Webhook from '@martyrs/src/modules/globals/controllers/classes/globals.webhook.js';\nimport Stripe from 'stripe';\n\nconst stripe = new Stripe(process.env.STRIPE_API_KEY ?? '', {\n  apiVersion: '2025-04-30.basil',\n});\n\nfunction middleware(req, res, next) {\n  next();\n}\n\nclass StripeWebhook extends Webhook {\n  constructor(app, db, observer, path = '/api/webhook/stripe', handlerMethod = StripeWebhook.prototype.handleWebhook, middlewares = []) {\n    super(app, db, observer, path, handlerMethod, [middleware]);\n  }\n  async handleWebhook(req, res) {\n    const sig = req.headers['stripe-signature'];\n    let event;\n    try {\n      const payload = req.body;\n      const payloadString = JSON.stringify(payload, null, 2);\n      const secret = process.env.STRIPE_WEBHOOK_SECRET;\n      const header = stripe.webhooks.generateTestHeaderString({\n        payload: payloadString,\n        secret,\n      });\n      const event = stripe.webhooks.constructEvent(payloadString, header, secret);\n      // Notify all listeners about the event\n      this.observer.notify(event.type, event.data.object);\n    } catch (err) {\n      console.log(`Error verifying Stripe webhook signature: ${err.message}`);\n      return res.status(400).send(`Webhook Error: ${err.message}`);\n    }\n    res.sendStatus(200);\n  }\n}\nexport default StripeWebhook;\n",
                  "name": "stripe.webhook.js",
                  "size": 1320,
                  "type": "source"
                }
              ]
            }
          }
        },
        "tinkoff": {
          "controllers": {
            "services": {
              "_files": [
                {
                  "path": "../../src/modules/integrations/tinkoff/controllers/services/tinkoff.service.js",
                  "relativePath": "modules/integrations/tinkoff/controllers/services/tinkoff.service.js",
                  "extension": ".js",
                  "content": "import axios from 'axios';\nimport crypto from 'crypto';\nvar TerminalKey = process.env.TINKOFF_TERMINAL_KEY;\nvar TerminalPassword = process.env.TINKOFF_TERMINAL_PASSWORD;\nconst controllerFactory = db => {\n  const Payment = db.payment;\n  const Order = db.order;\n  function createToken(request) {\n    request = Object.entries(request).map(function (key) {\n      return { [key[0]]: key[1] };\n    });\n    request.push({ Password: TerminalPassword });\n    request.sort(function (a, b) {\n      if (Object.keys(a)[0] < Object.keys(b)[0]) {\n        return -1;\n      }\n      if (Object.keys(a)[0] > Object.keys(b)[0]) {\n        return 1;\n      }\n      return 0;\n    });\n    const requestContacted = request\n      .map(function (key) {\n        return Object.values(key)[0];\n      })\n      .join('');\n    const hash = crypto.createHash('sha256').update(requestContacted).digest('hex');\n    return hash;\n  }\n  const newpayment = (req, res) => {\n    // Data for payment init\n    console.log(req.body.phone);\n    // Send request to Tinkoff\n    axios\n      .post('https://securepay.tinkoff.ru/v2/Init', {\n        TerminalKey: TerminalKey,\n        Amount: '350000',\n        OrderId: req.body._id,\n        Recurrent: 'y',\n        PayType: 'О',\n        CustomerKey: req.body.phone,\n        Description: 'Оплата в интернет-магазине',\n        Data: {\n          phone: req.body.phone,\n        },\n        // SuccessURL: 'http://tandem.ohmybike.ru/rent/' + OrderId,\n        // FailURL: 'http://tandem.ohmybike.ru/account'\n        // SuccessURL: 'http://localhost:8082/rent/' + OrderId,\n        // FailURL: 'http://localhost:8082/account'\n      })\n      .then(function (response) {\n        const payment = new Payment(response.data);\n        payment.save((err, payment) => {\n          if (err) {\n            res.status(500).send({ message: err });\n            return;\n          }\n          payment.save(err => {\n            if (err) {\n              res.status(500).send({ message: err });\n              return;\n            }\n            res.send(response.data);\n          });\n        });\n      })\n      .catch(function (error) {\n        res.send(error);\n      });\n  };\n  const setpayment = (req, res) => {\n    // Data for payment\n    const payment = new Payment({\n      OrderId: req.body.OrderId,\n      Success: req.body.Success,\n      Status: req.body.Status,\n      PaymentId: req.body.PaymentId,\n      ErrorCode: req.body.ErrorCode,\n      Message: req.body.Message,\n      Details: req.body.Details,\n    });\n    // Wright to db\n    console.log(payment);\n    payment.save((err, payment) => {\n      if (err) {\n        res.status(500).send({ message: err });\n        return;\n      }\n      payment.save(err => {\n        if (err) {\n          res.status(500).send({ message: err });\n          return;\n        }\n        res.send({ message: 'Payment was created successfully!' });\n      });\n    });\n  };\n  const getstatus = (req, res) => {\n    console.log(req.body.order);\n    Payment.findOne({\n      OrderId: req.body.order,\n    })\n      .sort({ createdAt: -1 })\n      .exec((err, payment) => {\n        if (err) {\n          res.status(500).send({ message: err });\n          return;\n        }\n        if (!payment) {\n          return res.status(404).send({ message: 'Payment Not found.' });\n        }\n        if (payment.Status === 'CONFIRMED') {\n          console.log(payment.Status);\n          console.log(req.body.order);\n          Order.findOneAndUpdate({ _id: req.body.order, status: 'Подтвержден' }, { $set: { status: 'Ожидает отправки' } }, { new: true }).catch(function (error) {\n            res.status(500).send(error);\n          });\n        }\n        axios\n          .post('https://securepay.tinkoff.ru/v2/GetState', {\n            TerminalKey: TerminalKey,\n            PaymentId: payment.PaymentId,\n            Token: createToken({ TerminalKey: TerminalKey, PaymentId: payment.PaymentId }),\n          })\n          .then(function (response) {\n            payment.Status = response.data.Status;\n            payment.save();\n            res.send(response.data);\n          })\n          .catch(function (error) {\n            res.status(500).send(error);\n          });\n      });\n  };\n  const addcustomer = (req, res) => {\n    console.log(req.body);\n    axios\n      .post('https://securepay.tinkoff.ru/v2/AddCustomer', {\n        TerminalKey: TerminalKey,\n        CustomerKey: req.body,\n        Token: createToken({ TerminalKey: TerminalKey, CustomerKey: req.body.phone }),\n      })\n      .then(function (response) {\n        res.send(response.data);\n      })\n      .catch(function (error) {\n        res.status(500).send(error);\n      });\n  };\n  const getcustomercards = (req, res) => {\n    axios\n      .post('https://securepay.tinkoff.ru/v2/GetCardList', {\n        TerminalKey: TerminalKey,\n        CustomerKey: req.body.phone,\n        Token: createToken({ TerminalKey: TerminalKey, CustomerKey: req.body.phone }),\n      })\n      .then(function (response) {\n        console.log(response.data);\n        res.send(response.data);\n      })\n      .catch(function (error) {\n        res.status(500).send(error);\n      });\n  };\n  return {\n    getAll,\n    create,\n    get,\n    update,\n    delete: deletePayment,\n    createToken,\n    newpayment,\n    setpayment,\n    getstatus,\n    addcustomer,\n    getcustomercards,\n  };\n};\nexport default controllerFactory;\n",
                  "name": "tinkoff.service.js",
                  "size": 5317,
                  "type": "source"
                }
              ]
            }
          },
          "models": {
            "_files": [
              {
                "path": "../../src/modules/integrations/tinkoff/models/tinkoff.payment.model.js",
                "relativePath": "modules/integrations/tinkoff/models/tinkoff.payment.model.js",
                "extension": ".js",
                "content": "import mongoose from 'mongoose';\nconst PaymentSchema = new mongoose.Schema(\n  {\n    OrderId: String,\n    Success: Boolean,\n    Status: String,\n    PaymentId: Number,\n    PaymentURL: String,\n    ErrorCode: String,\n    Message: String,\n    Details: String,\n  },\n  {\n    // Make Mongoose use Unix time (seconds since Jan 1, 1970)\n    timestamps: { currentTime: () => Date.now() },\n  }\n);\nconst Payment = mongoose.model('Payment', PaymentSchema);\nexport default Payment;\n",
                "name": "tinkoff.payment.model.js",
                "size": 467,
                "type": "source"
              }
            ]
          }
        }
      },
      "inventory": {
        "_files": [
          {
            "path": "../../src/modules/inventory/inventory.server.js",
            "relativePath": "modules/inventory/inventory.server.js",
            "extension": ".js",
            "content": "import StockAdjustmentModel from './models/stockAdjustment.model.js';\nimport StockBalanceModel from './models/stockBalance.model.js';\nimport StockAvailabilityModel from './models/stockAvailability.model.js';\nimport StockInventoryModel from './models/stockInventory.model.js';\nimport inventoryRoutes from './routes/inventory.routes.js';\nimport inventoryPolicies from './policies/inventory.policies.js';\n\nfunction initializeInventory(app, db, origins, publicPath) {\n  // Регистрация моделей\n  db.stockAdjustment = StockAdjustmentModel(db);\n  db.stockBalance = StockBalanceModel(db);\n  db.stockAvailability = StockAvailabilityModel(db);\n  db.stockInventory = StockInventoryModel(db);\n  \n  // Инициализация маршрутов\n  if (app) {\n    inventoryRoutes(app, db, origins, publicPath);\n    inventoryPolicies(db);\n  }\n}\n\nexport { initializeInventory as initialize };\nexport default { initialize: initializeInventory };",
            "name": "inventory.server.js",
            "size": 908,
            "type": "source"
          }
        ],
        "models": {
          "_files": [
            {
              "path": "../../src/modules/inventory/models/stock.adjustment.model.js",
              "relativePath": "modules/inventory/models/stock.adjustment.model.js",
              "extension": ".js",
              "content": "import applyOwnershipSchema from '@martyrs/src/modules/globals/models/schemas/ownership.schema.js';\n\nexport default db => {\n  const StockAdjustmentSchema = new db.mongoose.Schema({\n    product: {\n      type: db.mongoose.Schema.Types.ObjectId,\n      ref: 'Product',\n      required: true,\n    },\n    variant: {\n      type: db.mongoose.Schema.Types.ObjectId,\n      ref: 'Variant',\n      required: true,\n    },\n    storage: {\n      type: db.mongoose.Schema.Types.ObjectId,\n      ref: 'Spot',\n      required: true,\n    },\n    source: {\n      type: {\n        type: String,\n        required: true,\n        enum: ['User', 'Order', 'Inventory'],\n      },\n      target: {\n        type: db.mongoose.Schema.Types.ObjectId,\n        refPath: 'source.type'\n      },\n    },\n    reason: { \n      type: String,\n      enum: ['restock', 'sale', 'return', 'damage', 'transfer', 'custom' ],\n      required: true,\n    },\n    comment: {\n      type: String,\n    },\n    quantity: {\n      type: Number,\n      required: true,\n    },\n    cost: {\n      type: Number,\n    },\n  },{\n    timestamps: {\n      currentTime: () => Date.now(),\n    },\n  });\n\n  applyOwnershipSchema(StockAdjustmentSchema, db);\n\n  StockAdjustmentSchema.index({ product: 1, variant: 1, storage: 1 });\n  StockAdjustmentSchema.index({ storage: 1 });\n  StockAdjustmentSchema.index({ storage:1, createdAt:-1 });\n  StockAdjustmentSchema.index({ product:1, createdAt:-1 });\n  StockAdjustmentSchema.index({ reason: 1, createdAt:-1 });\n\n  const StockAdjustment = db.mongoose.model('StockAdjustment', StockAdjustmentSchema);\n\n  return StockAdjustment;\n};",
              "name": "stock.adjustment.model.js",
              "size": 1586,
              "type": "source"
            },
            {
              "path": "../../src/modules/inventory/models/stock.availability.model.js",
              "relativePath": "modules/inventory/models/stock.availability.model.js",
              "extension": ".js",
              "content": "export default db => {\n  const VariantAvailabilitySchema = new db.mongoose.Schema({\n    product: {\n      type: db.mongoose.Schema.Types.ObjectId,\n      ref: 'Product',\n      required: true,\n    },\n    variant: {\n      type: db.mongoose.Schema.Types.ObjectId,\n      ref: 'Variant',\n      required: true,\n    },\n    storage: {\n      type: db.mongoose.Schema.Types.ObjectId,\n      ref: 'Spot',\n      required: true,\n    },\n    // Computed availability\n    quantity: {\n      type: Number,\n      default: 0,\n    },\n    available: {\n      type: Number,\n      default: 0,\n    },\n    reservations: {\n      type: Number,\n      default: 0,\n    },\n    constraints: [{\n      ingredient: {\n        type: db.mongoose.Schema.Types.ObjectId,\n        ref: 'Product',\n      },\n      stock: Number,\n      required: Number,\n      available: Number,\n    }],\n  }, {\n    timestamps: {\n      currentTime: () => Date.now(),\n    },\n  });\n\n  // Create indexes for efficient querying\n  VariantAvailabilitySchema.index(\n    { product: 1, variant: 1, storage: 1 },\n    { unique: true }\n  );\n  VariantAvailabilitySchema.index({ storage: 1 });\n  VariantAvailabilitySchema.index({ available: -1 }); \n  \n  const VariantAvailability = db.mongoose.model('VariantAvailability', VariantAvailabilitySchema);\n  return VariantAvailability;\n};",
              "name": "stock.availability.model.js",
              "size": 1301,
              "type": "source"
            },
            {
              "path": "../../src/modules/inventory/models/stock.balance.model.js",
              "relativePath": "modules/inventory/models/stock.balance.model.js",
              "extension": ".js",
              "content": "import applyOwnershipSchema from '@martyrs/src/modules/globals/models/schemas/ownership.schema.js';\n\nexport default db => {\n  const StockBalanceSchema = new db.mongoose.Schema({\n    product: {\n      type: db.mongoose.Schema.Types.ObjectId,\n      ref: 'Product',\n      required: true,\n    },\n    variant: {\n      type: db.mongoose.Schema.Types.ObjectId,\n      ref: 'Variant',\n    },\n    storage: {\n      type: db.mongoose.Schema.Types.ObjectId, \n      ref: 'Spot',\n      required: true,\n    },\n    quantity: {\n      type: Number,\n      default: 0,\n    }\n  }, {\n    timestamps: {\n      currentTime: () => Date.now(),\n    },\n  });\n\n  applyOwnershipSchema(StockBalanceSchema, db);\n\n  // Add proper composite index for lookups\n  StockBalanceSchema.index({product: 1, variant: 1, storage: 1}, {unique: true});\n  \n  // Add individual indexes for common lookups\n  StockBalanceSchema.index({updatedAt: -1});\n  StockBalanceSchema.index({ storage: 1, variant: 1 });\n  StockBalanceSchema.index({ storage: 1, product: 1 });\n  StockBalanceSchema.index({ quantity: -1 });\n\n\n  const StockBalance = db.mongoose.model('StockBalance', StockBalanceSchema);\n  return StockBalance;\n};",
              "name": "stock.balance.model.js",
              "size": 1162,
              "type": "source"
            },
            {
              "path": "../../src/modules/inventory/models/stock.inventory.model.js",
              "relativePath": "modules/inventory/models/stock.inventory.model.js",
              "extension": ".js",
              "content": "import applyOwnershipSchema from '@martyrs/src/modules/globals/models/schemas/ownership.schema.js';\n\nexport default db => {\n  const StockInventorySchema = new db.mongoose.Schema({\n    storage: {\n      type: db.mongoose.Schema.Types.ObjectId,\n      ref: 'Spot',\n      required: true,\n    },\n    status: {\n      type: String,\n      enum: ['draft', 'completed', 'cancelled'],\n      default: 'draft',\n    },\n    positions: [{ \n      type: db.mongoose.Schema.Types.ObjectId, \n      ref: 'StockAdjustment', \n      required: true \n    }],\n    comment: {\n      type: String,\n    },\n  }, {\n    timestamps: {\n      currentTime: () => Date.now(),\n    },\n  });\n\n  // Apply global schemas\n  applyOwnershipSchema(StockInventorySchema, db);\n\n  // Create indexes for common lookups\n  StockInventorySchema.index({ storage: 1 });\n  StockInventorySchema.index({ status: 1, createdAt: -1 });\n\n  const StockInventory = db.mongoose.model('StockInventory', StockInventorySchema);\n  return StockInventory;\n};",
              "name": "stock.inventory.model.js",
              "size": 984,
              "type": "source"
            }
          ]
        },
        "policies": {
          "_files": [
            {
              "path": "../../src/modules/inventory/policies/inventory.policies.js",
              "relativePath": "modules/inventory/policies/inventory.policies.js",
              "extension": ".js",
              "content": "import globalsabac from '@martyrs/src/modules/globals/controllers/classes/globals.abac.js';\n\nconst { getInstance } = globalsabac;\n\nexport default function(db) {\n  const abac = getInstance(db);\n  \n  // Stock Adjustment policies\n  abac.registerResourcePolicy('stockAdjustment', async context => {\n    const { user, action, data } = context;\n    \n    if (action === 'create') {\n      // Only warehouse staff can create adjustments\n      const userDoc = context.userDoc || await db.user.findById(user).populate('roles');\n      const hasWarehouseRole = userDoc?.roles?.some(r => \n        ['warehouse', 'admin', 'moderator'].includes(r.name || r)\n      );\n      \n      if (!hasWarehouseRole) {\n        return { allow: false, reason: 'WAREHOUSE_ROLE_REQUIRED' };\n      }\n    }\n    \n    return { allow: true, force: false };\n  });\n  \n  // Stock Inventory policies\n  abac.registerResourcePolicy('stockInventory', async context => {\n    const { user, action, currentResource } = context;\n    \n    if (action === 'edit' && currentResource) {\n      // Only creator or admin can complete inventory\n      if (currentResource.creator.target.toString() !== user) {\n        const userDoc = context.userDoc || await db.user.findById(user).populate('roles');\n        const isAdmin = userDoc?.roles?.some(r => r.name === 'admin' || r === 'admin');\n        \n        if (!isAdmin) {\n          return { allow: false, reason: 'NOT_INVENTORY_CREATOR' };\n        }\n      }\n    }\n    \n    return { allow: true, force: false };\n  });\n  \n  return abac;\n}",
              "name": "inventory.policies.js",
              "size": 1525,
              "type": "source"
            }
          ]
        },
        "routes": {
          "_files": [
            {
              "path": "../../src/modules/inventory/routes/inventory.routes.js",
              "relativePath": "modules/inventory/routes/inventory.routes.js",
              "extension": ".js",
              "content": "import jwtFactory from '@martyrs/src/modules/auth/controllers/middlewares/authJwt.js';\nimport globalsabac from '@martyrs/src/modules/globals/controllers/classes/globals.abac.js';\nimport controllerFactory from '../controllers/inventory.controller.js';\nimport verifierFactory from '../middlewares/inventory.verifier.js';\n\nconst { getInstance } = globalsabac;\n\nexport default function(app, db) {\n  const jwt = jwtFactory(db);\n  const verifier = verifierFactory(db);\n  const abac = getInstance(db);\n  const controller = controllerFactory(db);\n  \n  // StockAdjustment routes\n  app.get('/api/inventory/adjustments', \n    jwt.verifyToken(true), \n    verifier.verifyAdjustmentQuery, \n    controller.adjustments.read\n  );\n  \n  app.post('/api/inventory/adjustments/create', \n    jwt.verifyToken(), \n    verifier.verifyAdjustmentBody, \n    abac.middleware('stockAdjustment', 'create'), \n    controller.adjustments.create\n  );\n  \n  // StockBalance routes\n  app.get('/api/inventory/balance', \n    jwt.verifyToken(true), \n    verifier.verifyBalanceQuery, \n    controller.balance.read\n  );\n  \n  // StockAvailability routes\n  app.get('/api/inventory/availability', \n    verifier.verifyAvailabilityQuery, \n    controller.availability.read\n  );\n  \n  // StockInventory routes\n  app.get('/api/inventory/audits', \n    jwt.verifyToken(), \n    verifier.verifyInventoryQuery, \n    controller.inventory.read\n  );\n  \n  app.post('/api/inventory/audits/create', \n    jwt.verifyToken(), \n    verifier.verifyInventoryBody, \n    abac.middleware('stockInventory', 'create'), \n    controller.inventory.create\n  );\n  \n  app.post('/api/inventory/audits/complete', \n    jwt.verifyToken(), \n    verifier.verifyInventoryComplete, \n    abac.middleware('stockInventory', 'edit'), \n    controller.inventory.complete\n  );\n}",
              "name": "inventory.routes.js",
              "size": 1781,
              "type": "source"
            }
          ]
        },
        "services": {
          "_files": [
            {
              "path": "../../src/modules/inventory/services/inventory.crud.js",
              "relativePath": "modules/inventory/services/inventory.crud.js",
              "extension": ".js",
              "content": "import Cache from '@martyrs/src/modules/globals/controllers/classes/globals.cache.js';\nimport Logger from '@martyrs/src/modules/globals/controllers/classes/globals.logger.js';\nimport Observer from '@martyrs/src/modules/globals/controllers/classes/globals.observer.js';\nimport queryProcessor from '@martyrs/src/modules/globals/controllers/utils/queryProcessor.js';\n\nconst controllerFactory = db => {\n  const cache = new Cache({ ttlSeconds: 300 });\n  const logger = new Logger(db);\n  const observer = new Observer();\n  \n  // Batch recalculate availability\n  async function recalculateAvailability(variantIds, storage, session) {\n    // 1. Загружаем все варианты одним запросом\n    const variants = await db.variant.find({\n      _id: { $in: variantIds }\n    }).session(session).lean();\n    \n    if (!variants.length) return;\n    \n    // 2. Собираем все ID ингредиентов\n    const allIngredientIds = new Set();\n    const variantMap = new Map();\n    \n    variants.forEach(v => {\n      variantMap.set(v._id.toString(), v);\n      v.ingredients?.forEach(ing => {\n        allIngredientIds.add(ing._id.toString());\n      });\n    });\n    \n    // 3. Загружаем все балансы одним запросом\n    const balances = await db.stockBalance.find({\n      storage,\n      $or: [\n        { variant: { $in: variantIds } },\n        { product: { $in: Array.from(allIngredientIds) } }\n      ]\n    }).session(session).lean();\n    \n    // 4. Индексируем балансы в память\n    const balanceByVariant = new Map();\n    const balanceByProduct = new Map();\n    \n    balances.forEach(b => {\n      if (b.variant) {\n        balanceByVariant.set(b.variant.toString(), b.quantity);\n      } else if (b.product) {\n        balanceByProduct.set(b.product.toString(), b.quantity);\n      }\n    });\n    \n    // 5. Готовим bulk операции\n    const bulkOps = [];\n    \n    variants.forEach(variant => {\n      const variantId = variant._id.toString();\n      const directStock = balanceByVariant.get(variantId) || 0;\n      \n      // On-demand support: если прямого стока нет, но есть ингредиенты\n      let available = directStock > 0 ? directStock : Infinity;\n      const constraints = [];\n      \n      // Проверяем ингредиенты\n      if (variant.ingredients?.length) {\n        for (const ing of variant.ingredients) {\n          // Пропускаем опциональные ингредиенты\n          if (ing.optional) continue;\n          \n          const stock = balanceByProduct.get(ing._id.toString()) || 0;\n          const canMake = Math.floor(stock / (ing.quantity || 1));\n          \n          // Для on-demand вариантов ограничиваем по ингредиентам\n          if (directStock === 0 || canMake < available) {\n            available = canMake;\n          }\n          \n          constraints.push({\n            ingredient: ing._id,\n            stock,\n            required: ing.quantity,\n            available: canMake\n          });\n        }\n      }\n      \n      // Если это on-demand и нет обязательных ингредиентов\n      if (available === Infinity) {\n        available = directStock;\n      }\n      \n      bulkOps.push({\n        updateOne: {\n          filter: { variant: variant._id, storage },\n          update: {\n            $set: {\n              product: variant.product,\n              quantity: directStock,\n              available,\n              constraints,\n              calculatedAt: new Date()\n            },\n            $setOnInsert: {\n              owner: variant.owner,\n              creator: variant.creator\n            }\n          },\n          upsert: true\n        }\n      });\n    });\n    \n    // 6. Выполняем bulk update\n    if (bulkOps.length) {\n      await db.stockAvailability.bulkWrite(bulkOps, { session });\n    }\n  }\n  \n  // Fire-and-forget cache invalidation\n  function invalidateCache(tags) {\n    setImmediate(() => {\n      cache.delByTags(tags).catch(err => \n        logger.error('Cache invalidation error', err)\n      );\n    });\n  }\n  \n  // Change stream для пересчета при изменении рецептов\n  function initChangeStreams() {\n    const variantStream = db.variant.watch([], { fullDocument: 'updateLookup' });\n    \n    variantStream.on('change', async (change) => {\n      if (change.operationType === 'update' && \n          change.updateDescription?.updatedFields?.ingredients) {\n        \n        const variantId = change.documentKey._id;\n        \n        // Найти все склады где есть этот вариант\n        const storages = await db.stockBalance.distinct('storage', {\n          variant: variantId\n        });\n        \n        // Пересчитать для каждого склада\n        for (const storage of storages) {\n          await recalculateAvailability([variantId], storage);\n        }\n        \n        invalidateCache(['availability']);\n      }\n    });\n    \n    variantStream.on('error', err => {\n      logger.error('Variant change stream error', err);\n    });\n  }\n  \n  // Инициализация change streams\n  initChangeStreams();\n  \n  // Stock Adjustments controller\n  const adjustments = {\n    async read(req, res) {\n      try {\n        const cacheKey = JSON.stringify({ type: 'adjustments', ...req.verifiedQuery });\n        let data = await cache.get(cacheKey);\n        \n        if (!data) {\n          const stages = [\n            ...queryProcessor.getBasicOptions(req.verifiedQuery),\n            ...queryProcessor.getFilterDate(req.verifiedQuery.dateStart, req.verifiedQuery.dateEnd),\n            {\n              $lookup: {\n                from: 'products',\n                let: { productId: '$product' },\n                pipeline: [\n                  { $match: { $expr: { $eq: ['$_id', '$$productId'] } } },\n                  { $project: { name: 1, sku: 1 } }\n                ],\n                as: 'productData'\n              }\n            },\n            { $unwind: { path: '$productData', preserveNullAndEmptyArrays: true } },\n            ...queryProcessor.getSortingOptions('createdAt', 'desc'),\n            ...queryProcessor.getPaginationOptions(req.verifiedQuery.skip, req.verifiedQuery.limit)\n          ];\n          \n          data = await db.stockAdjustment.aggregate(stages).exec();\n          await cache.setWithTags(cacheKey, data, ['adjustments']);\n        }\n        \n        res.json(data);\n      } catch (error) {\n        logger.error('Error reading adjustments', error);\n        res.status(500).json({ message: error.message });\n      }\n    },\n    \n    async create(req, res) {\n      const session = await db.mongoose.startSession();\n      session.startTransaction();\n      \n      try {\n        const adjustmentData = {\n          ...req.verifiedBody,\n          creator: { type: 'user', target: req.userId },\n          owner: req.verifiedBody.owner\n        };\n        \n        // 1. Create adjustment\n        const [adjustment] = await db.stockAdjustment.create([adjustmentData], { session });\n        \n        // 2. Update balance\n        const balance = await db.stockBalance.findOneAndUpdate(\n          { \n            product: adjustmentData.product,\n            variant: adjustmentData.variant,\n            storage: adjustmentData.storage\n          },\n          { \n            $inc: { quantity: adjustmentData.quantity },\n            $setOnInsert: {\n              owner: adjustmentData.owner,\n              creator: adjustmentData.creator\n            }\n          },\n          { upsert: true, new: true, session }\n        );\n        \n        // 3. Collect affected variants\n        const affectedVariants = new Set();\n        if (adjustmentData.variant) {\n          affectedVariants.add(adjustmentData.variant.toString());\n        }\n        \n        // Find variants using this product as ingredient\n        const dependentVariants = await db.variant.find({\n          'ingredients._id': adjustmentData.product,\n          'ingredients.optional': { $ne: true }\n        }).distinct('_id').session(session);\n        \n        dependentVariants.forEach(v => affectedVariants.add(v.toString()));\n        \n        // 4. Batch recalculate availability\n        if (affectedVariants.size) {\n          await recalculateAvailability(\n            Array.from(affectedVariants),\n            adjustmentData.storage,\n            session\n          );\n        }\n        \n        await session.commitTransaction();\n        \n        // 5. Fire-and-forget\n        invalidateCache(['adjustments', 'balance', 'availability']);\n        \n        setImmediate(() => {\n          observer.notify('stock.adjusted', {\n            adjustment,\n            balance,\n            affectedVariants: Array.from(affectedVariants)\n          });\n        });\n        \n        res.status(201).json(adjustment);\n      } catch (error) {\n        await session.abortTransaction();\n        logger.error('Error creating adjustment', error);\n        res.status(500).json({ message: error.message });\n      } finally {\n        session.endSession();\n      }\n    }\n  };\n  \n  // Stock Balance controller\n  const balance = {\n    async read(req, res) {\n      try {\n        const cacheKey = JSON.stringify({ type: 'balance', ...req.verifiedQuery });\n        let data = await cache.get(cacheKey);\n        \n        if (!data) {\n          const pipeline = [\n            {\n              $match: {\n                ...(req.verifiedQuery.storage && { storage: new db.mongoose.Types.ObjectId(req.verifiedQuery.storage) }),\n                ...(req.verifiedQuery.product && { product: new db.mongoose.Types.ObjectId(req.verifiedQuery.product) }),\n                quantity: { $gt: 0 }\n              }\n            },\n            {\n              $lookup: {\n                from: 'products',\n                let: { pid: '$product' },\n                pipeline: [\n                  { $match: { $expr: { $eq: ['$_id', '$$pid'] } } },\n                  { $project: { name: 1, sku: 1 } }\n                ],\n                as: 'product'\n              }\n            },\n            { $unwind: { path: '$product', preserveNullAndEmptyArrays: true } },\n            {\n              $lookup: {\n                from: 'spots',\n                let: { sid: '$storage' },\n                pipeline: [\n                  { $match: { $expr: { $eq: ['$_id', '$$sid'] } } },\n                  { $project: { name: 1, location: 1 } }\n                ],\n                as: 'storage'\n              }\n            },\n            { $unwind: { path: '$storage', preserveNullAndEmptyArrays: true } },\n            { $limit: req.verifiedQuery.limit },\n            { $skip: req.verifiedQuery.skip }\n          ];\n          \n          data = await db.stockBalance.aggregate(pipeline).exec();\n          await cache.setWithTags(cacheKey, data, ['balance']);\n        }\n        \n        res.json(data);\n      } catch (error) {\n        logger.error('Error reading balance', error);\n        res.status(500).json({ message: error.message });\n      }\n    }\n  };\n  \n  // Stock Availability controller (optimized)\n  const availability = {\n    async read(req, res) {\n      try {\n        const cacheKey = JSON.stringify({ type: 'availability', ...req.verifiedQuery });\n        let data = await cache.get(cacheKey);\n        \n        if (!data) {\n          // Thin DTO by default, heavy joins optional\n          const needsDetails = req.verifiedQuery.details === 'true';\n          \n          const pipeline = [\n            {\n              $match: {\n                ...(req.verifiedQuery.storage && { storage: new db.mongoose.Types.ObjectId(req.verifiedQuery.storage) }),\n                ...(req.verifiedQuery.product && { product: new db.mongoose.Types.ObjectId(req.verifiedQuery.product) }),\n                available: { $gt: 0 }\n              }\n            }\n          ];\n          \n          // Add joins only if needed\n          if (needsDetails) {\n            pipeline.push(\n              {\n                $lookup: {\n                  from: 'products',\n                  let: { pid: '$product' },\n                  pipeline: [\n                    { $match: { $expr: { $eq: ['$_id', '$$pid'] } } },\n                    { $project: { name: 1, sku: 1, price: 1, images: { $slice: ['$images', 1] } } }\n                  ],\n                  as: 'product'\n                }\n              },\n              { $unwind: { path: '$product', preserveNullAndEmptyArrays: true } },\n              {\n                $lookup: {\n                  from: 'variants',\n                  let: { vid: '$variant' },\n                  pipeline: [\n                    { $match: { $expr: { $eq: ['$_id', '$$vid'] } } },\n                    { $project: { name: 1, attributes: 1, price: 1 } }\n                  ],\n                  as: 'variant'\n                }\n              },\n              { $unwind: { path: '$variant', preserveNullAndEmptyArrays: true } }\n            );\n          }\n          \n          pipeline.push(\n            { $sort: { available: -1 } },\n            { $limit: req.verifiedQuery.limit },\n            { $skip: req.verifiedQuery.skip }\n          );\n          \n          data = await db.stockAvailability.aggregate(pipeline).allowDiskUse(true).exec();\n          await cache.setWithTags(cacheKey, data, ['availability']);\n        }\n        \n        res.json(data);\n      } catch (error) {\n        logger.error('Error reading availability', error);\n        res.status(500).json({ message: error.message });\n      }\n    }\n  };\n  \n  // Stock Inventory controller\n  const inventory = {\n    async read(req, res) {\n      try {\n        const stages = [\n          ...queryProcessor.getBasicOptions(req.verifiedQuery),\n          queryProcessor.getCreatorUserLookupStage(),\n          queryProcessor.getAddFieldsCreatorOwnerStage(),\n          ...queryProcessor.getSortingOptions('createdAt', 'desc'),\n          ...queryProcessor.getPaginationOptions(req.verifiedQuery.skip, req.verifiedQuery.limit)\n        ];\n        \n        const data = await db.stockInventory.aggregate(stages).exec();\n        res.json(data);\n      } catch (error) {\n        logger.error('Error reading inventories', error);\n        res.status(500).json({ message: error.message });\n      }\n    },\n    \n    async create(req, res) {\n      try {\n        const inventoryData = {\n          ...req.verifiedBody,\n          status: 'draft',\n          creator: { type: 'user', target: req.userId },\n          owner: req.verifiedBody.owner\n        };\n        \n        const inventory = await db.stockInventory.create(inventoryData);\n        invalidateCache(['inventories']);\n        \n        res.status(201).json(inventory);\n      } catch (error) {\n        logger.error('Error creating inventory', error);\n        res.status(500).json({ message: error.message });\n      }\n    },\n    \n    async complete(req, res) {\n      const session = await db.mongoose.startSession();\n      session.startTransaction();\n      \n      try {\n        const inventory = await db.stockInventory.findById(req.verifiedBody._id).session(session);\n        \n        if (!inventory || inventory.status !== 'draft') {\n          throw new Error('Invalid inventory status');\n        }\n        \n        // 1. Bulk update balances\n        const bulkOps = inventory.positions.map(p => ({\n          updateOne: {\n            filter: {\n              product: p.product,\n              variant: p.variant,\n              storage: p.storage\n            },\n            update: {\n              $inc: { quantity: p.quantity },\n              $setOnInsert: {\n                owner: inventory.owner,\n                creator: inventory.creator\n              }\n            },\n            upsert: true\n          }\n        }));\n        \n        await db.stockBalance.bulkWrite(bulkOps, { session });\n        \n        // 2. Collect all affected variants\n        const affectedVariants = new Set();\n        const affectedProducts = new Set();\n        \n        inventory.positions.forEach(p => {\n          if (p.variant) affectedVariants.add(p.variant.toString());\n          affectedProducts.add(p.product.toString());\n        });\n        \n        // Find dependent variants\n        const dependentVariants = await db.variant.find({\n          'ingredients._id': { $in: Array.from(affectedProducts) },\n          'ingredients.optional': { $ne: true }\n        }).distinct('_id').session(session);\n        \n        dependentVariants.forEach(v => affectedVariants.add(v.toString()));\n        \n        // 3. Batch recalculate\n        if (affectedVariants.size) {\n          await recalculateAvailability(\n            Array.from(affectedVariants),\n            inventory.storage,\n            session\n          );\n        }\n        \n        // 4. Update inventory status\n        inventory.status = 'completed';\n        await inventory.save({ session });\n        \n        await session.commitTransaction();\n        \n        // 5. Fire-and-forget\n        invalidateCache(['adjustments', 'balance', 'availability', 'inventories']);\n        \n        setImmediate(() => {\n          observer.notify('inventory.completed', {\n            inventory,\n            affectedVariants: Array.from(affectedVariants)\n          });\n        });\n        \n        res.json(inventory);\n      } catch (error) {\n        await session.abortTransaction();\n        logger.error('Error completing inventory', error);\n        res.status(500).json({ message: error.message });\n      } finally {\n        session.endSession();\n      }\n    }\n  };\n  \n  return { adjustments, balance, availability, inventory };\n};\n\nexport default controllerFactory;",
              "name": "inventory.crud.js",
              "size": 17226,
              "type": "source"
            },
            {
              "path": "../../src/modules/inventory/services/inventory.verifier.js",
              "relativePath": "modules/inventory/services/inventory.verifier.js",
              "extension": ".js",
              "content": "import Validator from '@martyrs/src/modules/globals/controllers/classes/globals.validator.js';\nimport Verifier from '@martyrs/src/modules/globals/controllers/classes/globals.verifier.js';\n\nexport default function(db) {\n  // Stock Adjustment verifiers\n  const adjustmentQueryConfig = {\n    product: { rule: 'optional', validator: Validator.schema().string() },\n    variant: { rule: 'optional', validator: Validator.schema().string() },\n    storage: { rule: 'optional', validator: Validator.schema().string() },\n    reason: { rule: 'optional', validator: Validator.schema().string() },\n    dateStart: { rule: 'optional', validator: Validator.schema().date() },\n    dateEnd: { rule: 'optional', validator: Validator.schema().date() },\n    skip: { rule: 'optional', validator: Validator.schema().number().min(0), default: 0 },\n    limit: { rule: 'optional', validator: Validator.schema().number().min(1).max(100), default: 20 }\n  };\n  \n  const adjustmentBodyConfig = {\n    product: { rule: 'required', validator: Validator.schema().string() },\n    variant: { rule: 'optional', validator: Validator.schema().string() },\n    storage: { rule: 'required', validator: Validator.schema().string() },\n    source: { \n      rule: 'required', \n      validator: Validator.schema().object({\n        type: Validator.schema().string().oneOf(['User', 'Order', 'Inventory']).required(),\n        target: Validator.schema().string().required()\n      })\n    },\n    reason: { \n      rule: 'required', \n      validator: Validator.schema().string().oneOf(['restock', 'sale', 'return', 'damage', 'transfer', 'custom'])\n    },\n    quantity: { rule: 'required', validator: Validator.schema().number().integer() },\n    cost: { rule: 'optional', validator: Validator.schema().number().min(0) },\n    comment: { rule: 'optional', validator: Validator.schema().string() }\n  };\n  \n  // Balance & Availability verifiers\n  const balanceQueryConfig = {\n    product: { rule: 'optional', validator: Validator.schema().string() },\n    storage: { rule: 'optional', validator: Validator.schema().string() },\n    skip: { rule: 'optional', validator: Validator.schema().number().min(0), default: 0 },\n    limit: { rule: 'optional', validator: Validator.schema().number().min(1).max(100), default: 50 }\n  };\n  \n  // Inventory verifiers\n  const inventoryBodyConfig = {\n    storage: { rule: 'required', validator: Validator.schema().string() },\n    comment: { rule: 'optional', validator: Validator.schema().string() },\n    positions: { \n      rule: 'required', \n      validator: Validator.schema().array().items(\n        Validator.schema().object({\n          product: Validator.schema().string().required(),\n          variant: Validator.schema().string(),\n          quantity: Validator.schema().number().integer().required()\n        })\n      )\n    }\n  };\n  \n  const adjustmentQueryVerifier = new Verifier(adjustmentQueryConfig);\n  const adjustmentBodyVerifier = new Verifier(adjustmentBodyConfig);\n  const balanceQueryVerifier = new Verifier(balanceQueryConfig);\n  const inventoryBodyVerifier = new Verifier(inventoryBodyConfig);\n  \n  return {\n    verifyAdjustmentQuery: adjustmentQueryVerifier.middleware(),\n    verifyAdjustmentBody: adjustmentBodyVerifier.middleware(),\n    verifyBalanceQuery: balanceQueryVerifier.middleware(),\n    verifyAvailabilityQuery: balanceQueryVerifier.middleware(),\n    verifyInventoryQuery: balanceQueryVerifier.middleware(),\n    verifyInventoryBody: inventoryBodyVerifier.middleware(),\n    verifyInventoryComplete: (req, res, next) => {\n      if (!req.body._id) {\n        return res.status(400).json({ message: 'Inventory ID required' });\n      }\n      req.verifiedBody = { _id: req.body._id };\n      next();\n    }\n  };\n}",
              "name": "inventory.verifier.js",
              "size": 3705,
              "type": "source"
            }
          ]
        },
        "store": {
          "_files": [
            {
              "path": "../../src/modules/inventory/store/ inventory.store.js",
              "relativePath": "modules/inventory/store/ inventory.store.js",
              "extension": ".js",
              "content": "import { reactive, watch } from 'vue';\nimport { setError } from '@martyrs/src/modules/globals/views/store/globals.js';\nimport $axios from '@martyrs/src/modules/globals/views/utils/axios-instance.js';\n\nconst state = reactive({\n  adjustments: [],\n  balance: [],\n  availability: [],\n  inventories: [],\n  current: {\n    storage: null,\n    positions: [],\n    comment: ''\n  },\n  filters: {\n    storage: null,\n    product: null,\n    dateStart: null,\n    dateEnd: null\n  }\n});\n\nconst actions = {\n  // Adjustments\n  async fetchAdjustments(options = {}) {\n    try {\n      const params = { ...state.filters, ...options };\n      const response = await $axios.get('/api/inventory/adjustments', { params });\n      state.adjustments = response.data;\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n  \n  async createAdjustment(data) {\n    try {\n      const response = await $axios.post('/api/inventory/adjustments/create', data);\n      state.adjustments.unshift(response.data);\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n  \n  // Balance\n  async fetchBalance(options = {}) {\n    try {\n      const params = { ...state.filters, ...options };\n      const response = await $axios.get('/api/inventory/balance', { params });\n      state.balance = response.data;\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n  \n  // Availability\n  async fetchAvailability(options = {}) {\n    try {\n      const response = await $axios.get('/api/inventory/availability', { params: options });\n      state.availability = response.data;\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n  \n  // Inventory audits\n  async fetchInventories(options = {}) {\n    try {\n      const response = await $axios.get('/api/inventory/audits', { params: options });\n      state.inventories = response.data;\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n  \n  async createInventory(data) {\n    try {\n      const response = await $axios.post('/api/inventory/audits/create', data);\n      state.inventories.unshift(response.data);\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n  \n  async completeInventory(id) {\n    try {\n      const response = await $axios.post('/api/inventory/audits/complete', { _id: id });\n      const index = state.inventories.findIndex(i => i._id === id);\n      if (index > -1) state.inventories[index] = response.data;\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  }\n};\n\nconst mutations = {\n  resetCurrent() {\n    state.current = {\n      storage: null,\n      positions: [],\n      comment: ''\n    };\n  },\n  \n  setFilters(filters) {\n    state.filters = { ...state.filters, ...filters };\n  },\n  \n  addPosition(position) {\n    state.current.positions.push(position);\n  },\n  \n  removePosition(index) {\n    state.current.positions.splice(index, 1);\n  }\n};\n\nexport { state, actions, mutations };",
              "name": " inventory.store.js",
              "size": 3140,
              "type": "source"
            }
          ]
        },
        "workers": {
          "_files": [
            {
              "path": "../../src/modules/inventory/workers/inventory.availability.worker.js",
              "relativePath": "modules/inventory/workers/inventory.availability.worker.js",
              "extension": ".js",
              "content": "/**\n * Worker for recalculating product availability based on stock balances\n * and ingredient requirements\n */\nclass AvailabilityWorker {\n  constructor(db) {\n    this.db = db;\n    this.logger = console;\n    \n    // Initialize change stream if not in test environment\n    if (process.env.NODE_ENV !== 'test') {\n      this.initChangeStream();\n    }\n  }\n  \n  /**\n   * Initialize change stream to watch for stock balance changes\n   */\n  initChangeStream() {\n    try {\n      const stockBalance = this.db.stockBalance;\n      \n      stockBalance.collection.watch(\n        [{ $match: { operationType: { $in: ['insert', 'update', 'replace'] } } }],\n        { fullDocument: 'updateLookup' } // Critical to get the complete document after updates\n      ).on('change', async (event) => {\n        try {\n          // Only proceed if we have the full document\n          if (!event.fullDocument) {\n            this.logger.warn('Missing fullDocument in change event, skipping recalculation');\n            return;\n          }\n          \n          const { product, storage } = event.fullDocument;\n          \n          // Process asynchronously to not block the event loop\n          process.nextTick(() => {\n            this.recalcByProduct(product, storage)\n              .catch(err => this.logger.error('Error in change stream recalculation:', err));\n          });\n        } catch (error) {\n          this.logger.error('Error in stock balance change stream:', error);\n        }\n      });\n      \n      this.logger.info('Stock balance change stream initialized');\n    } catch (error) {\n      this.logger.error('Error initializing change stream:', error);\n      // If change streams aren't supported, fall back to timer-based updates\n      this.initPeriodicUpdates();\n    }\n  }\n  \n  /**\n   * Fallback method for databases without change stream support\n   */\n  initPeriodicUpdates() {\n    const REFRESH_INTERVAL = 60000; // 1 minute\n    \n    setInterval(async () => {\n      try {\n        const stockBalance = this.db.stockBalance;\n        \n        // Find recently updated balances (in the last interval)\n        // Use index on updatedAt for efficient querying\n        const recentUpdates = await stockBalance.find({\n          updatedAt: { $gte: new Date(Date.now() - REFRESH_INTERVAL * 2) }\n        })\n        .sort({ updatedAt: -1 })\n        .lean();\n        \n        // Group by product+storage to avoid duplicate recalcs\n        const updates = new Map();\n        recentUpdates.forEach(balance => {\n          const key = `${balance.product.toString()}_${balance.storage.toString()}`;\n          updates.set(key, { product: balance.product, storage: balance.storage });\n        });\n        \n        // Process each unique product+storage asynchronously\n        for (const { product, storage } of updates.values()) {\n          process.nextTick(() => {\n            this.recalcByProduct(product, storage)\n              .catch(err => this.logger.error('Error in periodic recalculation:', err));\n          });\n        }\n      } catch (error) {\n        this.logger.error('Error in periodic availability update:', error);\n      }\n    }, REFRESH_INTERVAL);\n    \n    this.logger.info('Periodic availability updates initialized');\n  }\n  \n  /**\n   * Recalculate availability for a specific product at a specific storage location\n   * \n   * @param {ObjectId} product - Product ID\n   * @param {ObjectId} storage - Storage ID\n   * @param {ClientSession} [session] - MongoDB session (optional)\n   */\n  async recalcByProduct(product, storage, session = null) {\n    try {\n      const Product = this.db.product;\n      const StockBalance = this.db.stockBalance;\n      const StockAvailability = this.db.stockAvailability;\n      \n      // Get the product with its variants - using $lookup instead of populate for better performance\n      const productData = await Product.aggregate([\n        { $match: { _id: this.db.mongoose.Types.ObjectId(product) } },\n        {\n          $lookup: {\n            from: 'variants',\n            localField: 'variants',\n            foreignField: '_id',\n            as: 'variantsData'\n          }\n        },\n        {\n          $project: {\n            _id: 1,\n            name: 1,\n            sku: 1,\n            ingredients: 1,\n            variantsData: {\n              _id: 1,\n              ingredients: 1\n            }\n          }\n        }\n      ]).session(session).then(results => results[0]);\n      \n      if (!productData) {\n        this.logger.warn(`Product ${product} not found for availability recalculation`);\n        return;\n      }\n      \n      // Get all variant IDs for this product\n      const variantIds = productData.variantsData?.map(v => v._id) || [];\n      \n      // Add explicit base product (no variant) - better than null for indexing\n      const explicitBaseVariantId = '000000000000000000000000'; // ObjectId for base variant\n      \n      // Get all balances for this product's variants at this storage\n      const balances = await StockBalance.find({\n        product,\n        $or: [\n          { variant: { $in: variantIds } },\n          { variant: { $exists: false } } // Base product has no variant field\n        ],\n        storage\n      }).session(session).lean();\n      \n      // Create a map for quick lookup\n      const balanceMap = new Map();\n      balances.forEach(balance => {\n        const key = balance.variant ? balance.variant.toString() : explicitBaseVariantId;\n        balanceMap.set(key, balance);\n      });\n      \n      // Get all ingredient IDs from product and variants\n      const ingredientIds = new Set();\n      \n      // Add product's ingredients\n      if (productData.ingredients && productData.ingredients.length > 0) {\n        productData.ingredients.forEach(ing => ingredientIds.add(ing._id.toString()));\n      }\n      \n      // Add variant's ingredients\n      if (productData.variantsData) {\n        productData.variantsData.forEach(variant => {\n          if (variant.ingredients && variant.ingredients.length > 0) {\n            variant.ingredients.forEach(ing => ingredientIds.add(ing._id.toString()));\n          }\n        });\n      }\n      \n      // Get ingredient balances if needed\n      let ingredientBalances = [];\n      if (ingredientIds.size > 0) {\n        ingredientBalances = await StockBalance.find({\n          product: { $in: Array.from(ingredientIds).map(id => this.db.mongoose.Types.ObjectId(id)) },\n          storage\n        }).session(session).lean();\n      }\n      \n      // Create ingredient balance map\n      const ingredientMap = new Map();\n      ingredientBalances.forEach(balance => {\n        ingredientMap.set(balance.product.toString(), balance);\n      });\n      \n      // Prepare bulk operations for StockAvailability updates\n      const bulkOps = [];\n      \n      // Process base product first\n      this._processVariantAvailability(\n        bulkOps, \n        product, \n        null, // null variant for base product\n        storage,\n        productData, \n        balanceMap.get(explicitBaseVariantId), \n        ingredientMap\n      );\n      \n      // Process each variant\n      for (const variant of productData.variantsData || []) {\n        this._processVariantAvailability(\n          bulkOps, \n          product, \n          variant._id, \n          storage,\n          variant, \n          balanceMap.get(variant._id.toString()), \n          ingredientMap\n        );\n      }\n      \n      // Execute bulk operations\n      if (bulkOps.length > 0) {\n        const result = await StockAvailability.bulkWrite(bulkOps, { session });\n        return result;\n      }\n      \n      return null;\n    } catch (error) {\n      this.logger.error(`Error recalculating availability for product ${product}:`, error);\n      throw error;\n    }\n  }\n  \n  /**\n   * Helper to process a single variant's availability\n   */\n  _processVariantAvailability(bulkOps, productId, variantId, storageId, variant, balance, ingredientMap) {\n    // Default values if no balance found\n    const stockQuantity = balance ? balance.quantity : 0;\n    \n    // Start with direct stock\n    let availableQuantity = stockQuantity;\n    \n    // Track ingredient constraints\n    const constraints = [];\n    \n    // Process ingredients if they exist\n    if (variant.ingredients && variant.ingredients.length > 0) {\n      for (const ingredient of variant.ingredients) {\n        const ingId = ingredient._id.toString();\n        const requiredQty = ingredient.quantity || 0;\n        \n        // Skip optional ingredients\n        if (ingredient.optional) continue;\n        \n        const ingBalance = ingredientMap.get(ingId);\n        const stockIng = ingBalance ? ingBalance.quantity : 0;\n        \n        // Calculate how many products can be made with this ingredient\n        if (requiredQty > 0) {\n          const possibleQty = Math.floor(stockIng / requiredQty);\n          \n          // Track ingredient constraint\n          constraints.push({\n            ingredient: ingredient._id,\n            stock: stockIng,\n            required: requiredQty,\n            available: possibleQty\n          });\n          \n          // Take the minimum between current available and what ingredients allow\n          availableQuantity = Math.min(availableQuantity, possibleQty);\n        }\n      }\n    }\n    \n    // Ensure available doesn't go negative\n    availableQuantity = Math.max(0, availableQuantity);\n    \n    // Create update operation\n    bulkOps.push({\n      updateOne: {\n        filter: {\n          product: productId,\n          variant: variantId,\n          storage: storageId\n        },\n        update: {\n          $set: {\n            quantity: stockQuantity,\n            available: availableQuantity,\n            constraints,\n            updatedAt: new Date()\n          }\n        },\n        upsert: true\n      }\n    });\n  }\n}\n\nexport default AvailabilityWorker;",
              "name": "inventory.availability.worker.js",
              "size": 9778,
              "type": "source"
            }
          ]
        }
      },
      "landing": {
        "_files": [
          {
            "path": "../../src/modules/landing/landing.client.js",
            "relativePath": "modules/landing/landing.client.js",
            "extension": ".js",
            "content": "// Importing Vue components\nimport SectionEarn from './components/sections/SectionEarn.vue';\nimport SectionFeatures from './components/sections/SectionFeatures.vue';\nimport SectionGuide from './components/sections/SectionGuide.vue';\nimport SectionJoinUs from './components/sections/SectionJoinUs.vue';\nimport SectionMobileApp from './components/sections/SectionMobileApp.vue';\nimport SectionOverview from './components/sections/SectionOverview.vue';\nimport SubscribeNewsletter from './components/sections/SubscribeNewsletter.vue';\n\nimport AnimatedGrid from './components/elements/AnimatedGrid.vue';\nimport FloatingImages from './components/elements/FloatingImages.vue';\n\nimport SectionFeaturesImages from './components/sections/SectionFeaturesImages.vue';\nimport SectionHeroToken from './components/sections/SectionHeroToken.vue';\nimport SectionRoadmap from './components/sections/SectionRoadmap.vue';\n\nexport {\n  AnimatedGrid,\n  FloatingImages,\n  SectionEarn,\n  SectionFeatures,\n  SectionFeaturesImages,\n  SectionGuide,\n  SectionHeroToken,\n  SectionJoinUs,\n  SectionMobileApp,\n  SectionOverview,\n  SectionRoadmap,\n  SubscribeNewsletter,\n};\n",
            "name": "landing.client.js",
            "size": 1141,
            "type": "source"
          }
        ],
        "components": {
          "blocks": {
            "_files": [
              {
                "path": "../../src/modules/landing/components/blocks/MapBlock.vue",
                "relativePath": "modules/landing/components/blocks/MapBlock.vue",
                "extension": ".vue",
                "content": "<template>\n\t<div :class=\"{'cols-2-2_1': map }\" class=\"o-hidden radius-medium bg-white flex-nowrap flex\">\n      <!-- Left col -->\n      <div class=\"pd-medium col\">\n        <h3 class=\"mn-b-small\">{{name}}</h3>\n        <a :href=\"link\" v-if=\"link\" target=\"_blank\" class=\"t-semi mn-b-medium t-main\">Open Google Maps</a>\n        <p>{{text}}</p>\n      </div>\n      <!-- Right col -->\n      <div v-if=\"map\" class=\"google-map col\">\n        <iframe id=\"gmap_canvas\" :src=\"map\"></iframe>\n      </div>\n    </div>\n</template>\n\n\n<script setup>\n\timport { useRouter } from 'vue-router'\n\t\n\tconst router = useRouter()\n\n\tconst props = defineProps([\n\t\t'name',\n\t\t'adress',\n\t\t'url',\n\t\t'map',\n\t\t'link',\n\t\t'text'\n\t])\n\n\n</script>\n\n<style lang=\"scss\">\n</style>\n\n\n",
                "name": "MapBlock.vue",
                "size": 737,
                "type": "source"
              }
            ]
          },
          "elements": {
            "_files": [
              {
                "path": "../../src/modules/landing/components/elements/AnimatedGrid.vue",
                "relativePath": "modules/landing/components/elements/AnimatedGrid.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"grid\">\n    <div class=\"grid-lines\"></div>\n  </div>\n</template>\n\n<style lang='scss' scoped>\n  .grid {\n    perspective: 450px;\n    background-size: cover;\n  }\n\n  .grid-lines {\n    width: 100%;\n    height: 200%;\n    background-image: linear-gradient(to right, rgba(255, 255, 255, 0.1) 1px, transparent 0), linear-gradient(to bottom, rgba(255, 255, 255, 0.1) 1px, transparent 0);\n    background-size: 45px 30px;\n    background-repeat: repeat;\n    transform-origin: 100% 0 0;\n    animation: play 15s linear infinite;\n  }\n\n  @keyframes play {\n    0% {\n      transform: rotateX(45deg) translateY(-50%);\n    }\n    100% {\n      transform: rotateX(45deg) translateY(0);\n    }\n  }\n</style>",
                "name": "AnimatedGrid.vue",
                "size": 703,
                "type": "source"
              },
              {
                "path": "../../src/modules/landing/components/elements/FloatingImages.vue",
                "relativePath": "modules/landing/components/elements/FloatingImages.vue",
                "extension": ".vue",
                "content": "<template>\n</template>\n\n<script setup>\nimport { ref, onMounted, watch } from 'vue';\n\nconst props = defineProps({\n  container: {\n    type: String,\n    required: true\n  },\n  images: {\n    type: Array,\n    required: true\n  },\n  config: {\n    type: Object,\n    required: true,\n    default: () => ({\n      sizeMin: null,\n      sizeMax: null,\n      size: '5rem',\n      minDuration: 5,\n      maxDuration: 15,\n      spawnPoints: [10, 90],\n      maintainAspectRatio: true,\n      animation: {\n        startOpacity: 0.1,\n        midOpacity: 1,\n        endOpacity: 0.0,\n        translateY: '-33vh'\n      },\n      class: ''\n    })\n  },\n});\n\nconst getRandomSize = (sizeMin, sizeMax) => {\n  const units = sizeMin.replace(/[0-9.]/g, '');\n  const min = parseFloat(sizeMin);\n  const max = parseFloat(sizeMax);\n  const randomSize = Math.random() * (max - min) + min;\n  return `${randomSize}${units}`;\n};\n\nconst createKeyframes = (animation) => {\n  const styleSheet = document.styleSheets[0];\n  const keyframes = `\n    @keyframes floatUp {\n      0% {\n        transform: translateY(0);\n        opacity: ${animation.startOpacity};\n      }\n      10% {\n        opacity: ${animation.midOpacity};\n      }\n      50% {\n        opacity: ${animation.midOpacity};\n      }\n      90% {\n        opacity: ${animation.midOpacity};\n      }\n      100% {\n        transform: translateY(${animation.translateY});\n        opacity: ${animation.endOpacity};\n      }\n    }\n  `;\n  styleSheet.insertRule(keyframes, styleSheet.cssRules.length);\n};\n\nconst createFloatingImages = () => {\n  createKeyframes(props.config.animation);\n  \n  props.images.forEach((imageSrc) => {\n    let imgElement = document.createElement('img');\n    \n    imgElement.src = imageSrc;\n    imgElement.classList.add('floating-image');\n\n    if (props.config.class) {\n      imgElement.classList.add(props.config.class);\n    }\n    \n    let spawnPoint = props.config.spawnPoints[Math.floor(Math.random() * props.config.spawnPoints.length)];\n    let deviation = (Math.random() - 0.5) * 2 * 10;\n    \n    imgElement.style.left = `${spawnPoint + deviation}%`;\n\n    let width, height;\n\n    if (props.config.sizeMin && props.config.sizeMax) {\n      width = getRandomSize(props.config.sizeMin, props.config.sizeMax);\n    } else {\n      width = props.config.size;\n    }\n\n    if (props.config.square) {\n      height = width;\n    } else {\n      height = 'auto';\n    }\n    \n    imgElement.style.width = width;\n    imgElement.style.height = height;\n    imgElement.style.position = 'absolute';\n    imgElement.style.bottom = '0';\n    imgElement.style.opacity = '1';\n    imgElement.style.animation = `floatUp linear infinite`;\n    imgElement.style.animationDuration = `${Math.random() * (props.config.maxDuration - props.config.minDuration) + props.config.minDuration}s`;\n\n    if (props.container) document.querySelector(props.container).appendChild(imgElement);\n\n    imgElement.addEventListener(\"animationiteration\", () => {\n      const newSpawnPoint = props.config.spawnPoints[Math.floor(Math.random() * props.config.spawnPoints.length)];\n      const newDeviation = (Math.random() - 0.5) * 2 * 10;\n        imgElement.style.left = `${newSpawnPoint + newDeviation}%`;\n      });\n  });\n};\n\nonMounted(() => {\n  createFloatingImages();\n});\n\nwatch(() => props.images, () => {\n  createFloatingImages();\n});\n</script>",
                "name": "FloatingImages.vue",
                "size": 3315,
                "type": "source"
              }
            ]
          },
          "sections": {
            "_files": [
              {
                "path": "../../src/modules/landing/components/sections/Examples.vue",
                "relativePath": "modules/landing/components/sections/Examples.vue",
                "extension": ".vue",
                "content": "<template>\n\t<section class=\"\">\n\t\t<header class=\"mn-b-big t-center\">\n\t\t\t<h2 class=\"mn-center text-fade-in\"><span class=\"text-splitted\">Example of the Strains</span></h2> \n\t\t</header>\n\t\t<div class=\"cols-4 w-100 o-scroll pos-relative gap-medium\">\n      <img loading=\"lazy\"  v-for=\"(signal,index)  in signals\"   class=\"radius-medium h-max-30r signal\" :src=\"'/images/examples/' + signal\">\n\t\t</div>\n\t</section>\n</template>\n\n<script setup>\n/////////////////////////////\n// COMPONENT DEPENDENCIES\n/////////////////////////////\n// VUE DEPENDENCIES\nimport { onMounted } from 'vue';\n/////////////////////////////\n// CREATED\n/////////////////////////////\n\nlet signals = [\n  '01.png',\n  '02.png',\n  '03.png',\n  '04.png',\n]\n\n/////////////////////////////\n// MOUNTED\n/////////////////////////////\nonMounted(() => {\n})\n\n</script>\n\n<style lang=\"scss\">\n</style>\n",
                "name": "Examples.vue",
                "size": 844,
                "type": "source"
              },
              {
                "path": "../../src/modules/landing/components/sections/GiftSection.vue",
                "relativePath": "modules/landing/components/sections/GiftSection.vue",
                "extension": ".vue",
                "content": "<template>\n  <section id=\"gift\" class=\"section\">\n\n    <div class=\"t-center section-1-col\">\n      <p class=\"mn-b-small\">\n        Looking for a beautiful and stylish gift?\n      </p>\n      <h3 class=\"mn-b-medium\">\n        Gift Certificate is a simple way to donate money<br><b>and make suprise for someone</b>\n      </h3>\n      \n      <router-link to=\"/catalog/products/7070249d-c84a-4bb4-bfac-a58b65353209\">\n        <button class=\"button\">Buy now</button>\n      </router-link>\n    </div>\n\n  </section>\n</template>\n\n\n<script setup>\n  import { computed, onMounted, reactive, toRefs } from 'vue'\n  \n  import { useRoute,useRouter } from 'vue-router'\n  const route = useRoute()\n  const router = useRouter()\n</script>\n\n<style lang=\"scss\">\n#gift {\n    b {\n      color: #00ff88;\n    }\n\n   .section-1-col {\n    display: block;\n    padding: 10rem 3rem;\n    color: black;\n    border-radius: 2rem;\n    background: #00ff88;\n    background-image: url(\"@/assets/images/backgrounds/cerificat.jpg\");\n    background-repeat: no-repeat;\n    background-size: cover;\n    background-position: center bottom;\n    overflow: hidden;\n    .button {\n      margin: 0 auto;\n      background: white;\n      color: #00ff88;\n      // box-shadow: 0px 10px 24px rgba(0, 0, 0, 0.05);\n      // border: 1px solid #f7f7f7;\n      opacity: 1;\n\n      &:hover {\n         background: #00ff88;\n      color: white;\n      }\n    }\n\n  }\n}\n\n</style>\n",
                "name": "GiftSection.vue",
                "size": 1397,
                "type": "source"
              },
              {
                "path": "../../src/modules/landing/components/sections/InstagramSection.vue",
                "relativePath": "modules/landing/components/sections/InstagramSection.vue",
                "extension": ".vue",
                "content": " <template>\n  <section id=\"instagram\" class=\"section\">\n    <div ref=\"root\" class=\"t-center glide\">\n        <div class=\"title\">\n          <h2 class=\"mn-b-big\">Отзывы наших покупателей</h2>\n      </div>\n       <div data-glide-el=\"controls\" class=\"mn-b-big flex controls\">\n        <button data-glide-dir=\"<\" class=\"btn-circle\">\n           <img loading=\"lazy\" src=\"@/assets/icons/arrow-left.svg\">\n        </button>\n        <button data-glide-dir=\">\" class=\"btn-circle\">\n         <img loading=\"lazy\" src=\"@/assets/icons/arrow-right.svg\">\n        </button>\n      </div>\n      <div data-glide-el=\"track\" class=\"mn-b-extra group glide__track\">\n        <ul class=\"glide__slides flex\">\n          <InstagramCard :img=\"1\"/>\n          <InstagramCard :img=\"2\"/>\n          <InstagramCard :img=\"3\"/>\n          <InstagramCard :img=\"4\"/>\n        </ul>\n      </div>\n    </div>\n    <div class=\"t-center title\">\n      <p class=\"text-medium\">Мы очень рады, что вы делитесь с нами своей красотой и присылаете нам фото-приветы.<br>Спасибо за ваши фотографии!</p>\n      <button class=\"button\">Посмотреть все отзывы</button> \n    </div>\n  </section>\n</template>\n\n\n<script>\nimport InstagramCard from \"@/components/blocks/InstagramCard.vue\";\n\nimport { ref, onMounted } from \"vue\";\nimport Glide from \"@glidejs/glide\";\nexport default {\n  data() {\n    return {};\n  },\n  name: \"InstagramSection\",\n  components: {\n    InstagramCard,\n  },\n  setup() {\n    const root = ref(null);\n\n    onMounted(() => {\n      var glideClass = root.value;\n        var glideObject = new Glide(glideClass, {\n          type: 'carousel',\n          startAt: 0,\n          perView: 3,\n          peek: 0,\n          gap: 30,\n          breakpoints: {\n            900: {\n              perView: 2  \n            },\n            600: {\n              perView: 1,\n              gap: 10,\n              peek: 10\n            }\n          }\n        }).mount();\n\n        function convertRemToPixels(rem) {    \n            return rem * parseFloat(getComputedStyle(document.documentElement).fontSize);\n        }\n      })\n    return {\n      root,\n    };\n  },\n};\n</script>\n\n<style lang=\"scss\">\n#instagram {\n  position: relative;\n  background: linear-gradient(180deg, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.900651) 100%), url(\"@/assets/images/backgrounds/testimonials.jpg\");\n  background-position: center center;\n  background-repeat: no-repeat;\n  background-size: cover;\n\n  border-bottom: 1px solid rgba(0,0,0,0.1);\n\n  .button { margin: 0 auto; }\n  .controls {\n      position: absolute;\n      top: 53%;\n      width: 100%;\n\n        .btn-circle{\n          position: absolute;\n          display: flex;\n          align-items: center;\n          top: 50%;\n          justify-content: center;\n          height: 4rem;\n          width: 4rem;\n          background: white;\n          box-shadow: 0px 0px 29px rgba(0, 0, 0, 0.06);\n          border: none;\n          padding: 1rem;\n          border-radius: 4rem;\n          z-index: 14;\n\n          transform: scale(1);\n\n          transition: all 0.33s ease;\n          \n          &:first-child {left: -2rem;}\n          &:last-child {right: -2rem;}\n\n          &:hover {\n            cursor: pointer;\n\n            transform: scale(0.9);\n          }\n        }\n      }\n\n  .instagram-integration {\n    margin-bottom: 4rem;\n  }\n  .title {\n    p {\n      margin-bottom: 1.5rem;\n    }\n  }\n\n  ul {\n    display: flex;\n    justify-content: space-between;\n\n    .instagram-item {\n      width: calc(25% - 0.5rem);\n      border-radius: 1rem;\n\n      box-shadow: -8px -8px 20px -8px #FFFFFF, 8px 8px 20px -12px rgba(183, 124, 124, 0.06);\n      &:last-child{\n        margin-right: 0;\n      }\n      .insta-top{\n          span{display: block;}\n      }\n      > img { width: 100%; }\n      .insta-bottom{\n        padding: 0.625rem 0.625rem 1rem;\n        display: flex;\n        justify-content: space-between;\n        align-items: flex-start;\n          img {\n            margin-right: 0.625rem;\n            &:last-child{margin-right: 0;}\n            }\n          span {display: block; margin-top: 0.25rem}\n      }\n      \n    }\n  }\n}\n\n@media screen and (max-width: 480px) {\n  #instagram {\n    padding: 0;\n    padding-top: 2rem;\n    padding-bottom: 4rem;\n\n    .mn-b-extra { margin-bottom: 2rem;}\n\n    .controls {\n      display: none;\n\n    }\n  }\n}\n\n</style>\n",
                "name": "InstagramSection.vue",
                "size": 4289,
                "type": "source"
              },
              {
                "path": "../../src/modules/landing/components/sections/SectionEarn.vue",
                "relativePath": "modules/landing/components/sections/SectionEarn.vue",
                "extension": ".vue",
                "content": "<template>\n  <section class=\"cols-2 gap-thin\">\n    <div class=\"pos-relative flex flex-column flex-center h-100\">\n      <div class=\"mn-b-thin pd-big radius-medium\">\n        <img v-if=\"te('logo')\" loading=\"lazy\" class=\"mn-b-semi h-4r\" :src=\"t('logo')\">\n\n        <h2 v-if=\"te('title')\" class=\"mn-b-medium\" v-html=\"t('title')\"/>\n        <p v-if=\"te('description')\" class=\"mn-b-medium p-big t-transp\">{{ t('description') }}</p>  \n        <p v-if=\"te('subdescription')\" class=\"mn-b-semi p-medium t-transp\">{{ t('subdescription')}}</p>\n\n      <div class=\"gap-thin cols-2\">\n        <router-link :to=\"t('action_link')\" class=\"flex t-center bg-white flex-center flex-column t-black pd-big radius-medium\">\n          <IconInfo class=\"mn-b-small i-extra\" fill=\"rgb(var(--black)\"/>\n          <p class=\"uppercase t-semi\">{{t('action')}}</p>\n        </router-link>\n\n        <router-link :to=\"t('action_sublink') \" class=\"flex t-center flex-center flex-column bg-main t-black pd-big radius-medium\">\n          <IconEarn class=\"mn-b-small i-extra\" fill=\"rgb(var(--black)\"/>\n          <p class=\"uppercase t-semi\">{{t('subaction')}}</p>\n        </router-link>\n        \n      </div>\n      </div>\n\n    </div>\n\n    <div class=\"pos-relative pd-medium flex-column flex-center flex h-100 bg-main radius-medium o-hidden\">\n      <img v-if=\"te('image')\" loading=\"lazy\" :src=\"t('image')\" class=\"mn-t-auto z-index-2 pos-relative w-75 mn-b-auto\">\n      <ConnectMetamask\n        :tokenAddress=\"options.tokenAddress\"\n        :tokenSymbol=\"options.tokenSymbol\"\n        :tokenDecimals=\"options.tokenDecimals\"\n        :tokenImage=\"options.tokenImage\"\n        :targetChainId=\"options.targetChainId\"\n        :metamaskIcon=\"options.metamaskIcon\"\n        :content=\"{\n          en: {\n            'connectMetaMask': t('connectMetaMask'),\n            'switchToPolygon': t('switchToPolygon'),\n            'addToken': t('addToken')\n          }\n        }\"\n        class=\"z-index-3 pos-relative w-100\"\n      />\n      <div style=\"background-image: url(/spiral.jpg)\" class=\"mn-b-extra z-index-1 spiral\"/>\n    </div>\n  </section>\n</template>\n\n<script setup>\nimport { computed,ref,onMounted, reactive } from 'vue'\nimport { useI18n } from 'vue-i18n';\n\nimport IconInfo from '@martyrs/src/modules/icons/entities/IconInfo.vue'\nimport IconEarn from '@martyrs/src/modules/icons/entities/IconEarn.vue'\n\nimport ConnectMetamask from '@martyrs/src/modules/wallet/views/components/elements/ConnectMetamask.vue'\n\nconst props = defineProps({\n  content: {\n    type: Object,\n    required: true\n  },\n  options: {\n    type: Object,\n    default: () => ({\n      tokenAddress: '0x64b4b0ade1f015d6a0c536e8cf041e181d872220',\n      tokenSymbol: 'OZDT',\n      tokenDecimals: 8,\n      tokenImage: 'https://ozdao.dev/logo-token.png',\n      targetChainId: '0x89',\n      metamaskIcon: \"/icons/metamask.svg\"\n    })\n  }\n})\nconst { t, te } = useI18n({\n  messages: props.content\n})\n</script>\n\n<style lang=\"scss\" scoped>\n  .spiral {\n    background-size: cover;\n    width: 100rem;\n    height: 100rem;\n    position: absolute;\n    opacity: 0.066;\n    transform: translate(-50%, -50%) rotate(0deg);\n    transform-origin: center center;\n    animation: spin 5s linear infinite;\n  }\n\n  @keyframes spin {\n    0% {\n      transform: translate(-50%, -50%) rotate(0deg);\n    }\n    100% {\n      transform: translate(-50%, -50%) rotate(360deg);\n    }\n  }\n</style>",
                "name": "SectionEarn.vue",
                "size": 3363,
                "type": "source"
              },
              {
                "path": "../../src/modules/landing/components/sections/SectionFeature.vue",
                "relativePath": "modules/landing/components/sections/SectionFeature.vue",
                "extension": ".vue",
                "content": "<template>\n\t<div class=\"o-hidden bg-light pos-relative radius-medium cols-2\">\n\t\t<div style=\"min-height: 20rem;\" :class=\"{'order-2':order}\" class=\"pos-relative w-100 h-100 bg-light\">\n\t\t\t<img loading=\"lazy\" class=\"w-100 h-100 object-fit-cover pos-absolute\" :src=\"image\">\n\t\t</div>   \n   <div class=\"pd-big flex-column flex w-100 h-100 gap-zero\">\n    \t<h2 class=\"mn-b-medium\">\n\t\t\t\t{{title}}\n\t    </h2>\n\t    \n\t    <p class=\"p-big t-transp\">\n\t    \t{{description}}\n\t    </p>\n    </div>\n  </div>\n</template>\n\n\n<script setup>\n\timport { useI18n } from 'vue-i18n'\n\n\tconst props = defineProps(['image','title','description','order'])\n\n\tconst { t } = useI18n({ \n\t\tmessages: {\n\t\t  en:{\n\t\t    \"nye2024\":{\n\t\t      \"title\":\"Delisious pizza from stone oven\",\n\t\t      \"description\":\"Join the hottest Christmas party event at NMS.IO and make your time with family and friends extra special. Enjoy festive on the celebrations with unique surprises and fun activities in NMS.IO!\",\n\t\t      \"checkinblog\":\"CHECK IN BLOG\"\n\t\t    }\n\t\t  }\n\t\t}\n\t})\n</script>\n\n<style lang=\"scss\">\n\t.order-2 {\n\t\torder: 2\n\t}\n</style>\n",
                "name": "SectionFeature.vue",
                "size": 1085,
                "type": "source"
              },
              {
                "path": "../../src/modules/landing/components/sections/SectionFeatures.vue",
                "relativePath": "modules/landing/components/sections/SectionFeatures.vue",
                "extension": ".vue",
                "content": "<template>\n  <section id=\"howtobuy\">\n    <h2 class=\"w-100 w-max-50r mn-b-small\" v-html=\"t('title')\"/>\n   \n    <div class=\"cols-3 mobile:cols-1 gap-thin\">\n      <div \n        v-for=\"feature in tm('features')\" \n        :key=\"feature.title\" \n        class=\"pd-medium  radius-medium\"\n      >\n        <p class=\"h2 i-extra radius-extra bg-main flex-center d-inline-flex mn-b-medium\">\n          {{ feature.icon }}\n        </p>\n        <h3 class=\"mn-b-medium\">\n          {{ feature.title }}\n        </h3>\n        <p class=\"t-transp\">\n          {{ feature.description }}\n        </p>\n      </div>\n    </div>\n  </section>\n</template>\n\n\n<script setup>\n  import { useI18n }    from 'vue-i18n'\n\n  const props = defineProps({\n    content: {\n      type: Object,\n      required: true\n    }\n  })\n\n  const { t, tm } = useI18n({\n    messages: props.content\n  })\n</script>\n\n<style lang=\"scss\">\n</style>\n",
                "name": "SectionFeatures.vue",
                "size": 883,
                "type": "source"
              },
              {
                "path": "../../src/modules/landing/components/sections/SectionFeaturesImages.vue",
                "relativePath": "modules/landing/components/sections/SectionFeaturesImages.vue",
                "extension": ".vue",
                "content": "<template>\n  <section id=\"howtobuy\" class=\"section\">\n\n    <div class=\"mn-b-big t-center title\">\n      <h2 class=\"mn-b-small\">{{t('title')}}</h2>\n      <p class=\"w-m-60r mn-b-big mn-auto t-transp p-big\">\n        {{t('subtitle')}}\n      </p>\n    </div>\n\n    <div class=\"cols-3 mobile:cols-1 gap-thin\">\n\n      <div \n        v-for=\"feature in tm('features')\" \n        :key=\"feature.title\" \n        class=\"w-100 pd-medium bg-light radius-medium\"\n      >\n        <img loading=\"lazy\" \n          class=\"radius-medium bg-light h-max-20r object-fit-cover w-100 mn-b-medium\" \n          :src=\"feature.image\"\n        > \n        <h3 class=\"mn-b-medium\">{{feature.title}}</h3>\n        <p class=\"t-transp\">{{feature.text}}</p>\n      </div>\n\n    </div>\n\n  </section>\n</template>\n\n\n<script setup>\nimport { useI18n }    from 'vue-i18n'\n  \nconst props = defineProps({\n    title: String,\n    textData: {\n      type: Object,\n      default: () => ({\n        messages: {\n          en: {\n            title: 'What is Weeder Token?',\n            subtitle: 'WDT – the foundation of the Weeder community. It serves as a currency, a DAO instrument, and for many other purposes:',\n            features: [\n              {\n                image: '/images/howitworks/step1.png',\n                title: 'Currency',\n                text: 'WDT can be used as a digital currency within the Weeder ecosystem, allowing users to purchase products such as cannabis, advertising spaces, and other premium features on the platform.',\n              },\n              {\n                image: '/images/howitworks/step2.png',\n                title: 'Instument',\n                text: 'As a DAO (Decentralized Autonomous Organization) instrument, WDT enables community governance and decision-making, allowing token holders to propose, discuss, and vote on various initiatives and developments within the Weeder ecosystem.',\n              },\n              {\n                image: '/images/howitworks/step3.png',\n                title: 'Invesment',\n                text: 'Holding WDT tokens can provide potential investment returns as the Weeder ecosystem grows and gains value. Additionally, WDT serves for dividend distribution – those who stake their tokens earn income from the platform.'\n              },\n            ]\n          },\n          ru: {\n            title: 'Что такое Weeder Token?',\n            subtitle: 'WDT – основа сообщества Weeder. Он выступает в качестве валюты, инструмента DAO и многих других целей:',\n            features: [\n              {\n                image: '/images/howitworks/step1.png',\n                title: 'Валюта',\n                text: 'WDT можно использовать как цифровую валюту в экосистеме Weeder, позволяя пользователям покупать товары, такие как марихуана, рекламные места и другие премиальные возможности на платформе.',\n              },\n              {\n                image: '/images/howitworks/step2.png',\n                title: 'Инструмент',\n                text: 'В качестве инструмента DAO (Децентрализованной Автономной Организации), WDT позволяет управлять сообществом и принимать решения, давая держателям токенов возможность предлагать, обсуждать и голосовать за различные инициативы и развитие в рамках экосистемы Weeder.',\n              },\n              {\n                image: '/images/howitworks/step3.png',\n                title: 'Инвестиции',\n                text: 'Хранение токенов WDT может обеспечить потенциальный инвестиционный доход по мере роста и увеличения стоимости экосистемы Weeder. Кроме того, WDT служит для распределения дивидендов – те, кто стейкают свои токены, получают доход с платформы.',\n              },\n            ]\n          }\n        }\n      })\n    }\n  })\n  const { t, tm } = useI18n(props.textData)\n</script>\n\n<style lang=\"scss\" scoped> \n\n#grid2 {\n  transition: 500ms;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  gap: 3px;\n  background: crimson;\n}\n\n:where(.left, .center, .right) {\n  background: navajowhite;\n  transition: 300ms;\n}\n\n:where(.left, .center, .right):hover {\n  background: crimson;\n}\n\n#grid2:has(.left:hover) {\n  grid-template-columns: 2fr 0.5fr 0.5fr;\n  padding: 3rem;\n}\n\n#grid2:has(.center:hover) {\n  grid-template-columns: 0.5fr 2fr 0.5fr;\n  padding: 3rem;\n}\n#grid2:has(.right:hover) {\n  grid-template-columns: 0.5fr 0.5fr 2fr;\n  padding: 3rem;\n}\n</style>\n",
                "name": "SectionFeaturesImages.vue",
                "size": 4327,
                "type": "source"
              },
              {
                "path": "../../src/modules/landing/components/sections/SectionFocus.vue",
                "relativePath": "modules/landing/components/sections/SectionFocus.vue",
                "extension": ".vue",
                "content": "<template>\n\t<section id=\"our-focus\" class=\"bg-light radius-medium pd-big cols-2 flex\">\n\t\t\n\t\t<div class=\"col\">\n\t\t\t\n\t\t\t<p class=\"text-fade-in mn-b-medium t-main h4\">\n\t\t\t\t<span class=\"text-splitted\">Culture of cannabis</span>\n\t\t\t</p>\n\n\t\t\t<h2 class=\"text-fade-in mn-b-medium\">\n\t\t\t\t<span class=\"text-splitted\">Welcome to Weeder Farms, your trusted partner in cannabis cultivation. </span>\n\t\t\t</h2> \n\n\t\t\t<p class=\"element-intro display-block p-big\">We are a team of professional growers, engineers, programmers, and geneticists. We are dedicated to the growth and development of the cannabis industry, offering our extensive experience and knowledge to help cultivators like you succeed.</p>\n\t\t</div>\n\n\t\t<div class=\"cols-2 gap-thin col\">\n\t\t\t<div :ref=\"setItemRef\" class=\"industry card\">\n\t\t\t\t<h3 class=\"h1 t-main card-child\">10+</h3>\n\t\t\t\t<p class=\"h4 card-child\">Farms</p>\n\t\t\t</div>\n\t\t\t<div :ref=\"setItemRef\" class=\"industry card\">\n\t\t\t\t<h3 class=\"h1 t-main card-child\">40</h3>\n\t\t\t\t<p class=\"h4 card-child\">Strains</p>\n\t\t\t</div>\n\t\t\t<div :ref=\"setItemRef\" class=\"industry card\">\n\t\t\t\t<h3 class=\"h1 t-main card-child\">10KG</h3>\n\t\t\t\t<p class=\"h4 card-child\">Monthly</p>\n\t\t\t</div>\n\t\t\t<div :ref=\"setItemRef\" class=\"industry card\">\n\t\t\t\t<h3 class=\"h1 t-main card-child\">5+</h3>\n\t\t\t\t<p class=\"h4 card-child\">Dispansaries</p>\n\t\t\t</div>\n\t\t\t<div :ref=\"setItemRef\" class=\"industry card\">\n\t\t\t\t<h3 class=\"h1 t-main card-child\">136</h3>\n\t\t\t\t<p class=\"h4 card-child\">Tokens</p>\n\t\t\t</div>\n\t\t</div>\n\t</section>\n</template>\n\n\n<script setup>\nimport { reactive, computed, toRefs, ref, onMounted,onUpdated,inject } from 'vue';\n\nonMounted(() => {\n\n})\n \n</script>\n\n<style scoped lang=\"scss\">\n#our-focus {\n .industry {\n \t\tdisplay: flex;\n    justify-content: flex-end;\n }\n}\n</style>\n",
                "name": "SectionFocus.vue",
                "size": 1748,
                "type": "source"
              },
              {
                "path": "../../src/modules/landing/components/sections/SectionGuide.vue",
                "relativePath": "modules/landing/components/sections/SectionGuide.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"\">\n    <div class=\"mn-b-big d-inline-block\">\n      <h2 class=\"mn-b-semi\">{{t('title')}}</h2>\n      <p v-if=\"te('subtitle')\" class=\"t-transp p-big w-m-60r\">{{t('subtitle')}}</p>\n    </div>\n    <div class=\"cols-1\">\n      <Spoiler v-for=\"item in tm('FAQ')\" :key=\"item.title\" class=\"br-white-transp-10 br-solid br-1px radius-small o-hidden pd-big mn-b-thin\">\n        <template #header=\"{ isOpen }\">\n          <div class=\"cursor-pointer w-100 flex-v-center flex-nowrap flex\">\n            <h3 class=\"w-100\">{{item.title}}</h3>\n            <IconChevronBottom :class=\"{ 'rotate-180': isOpen }\" fill=\"rgb(var(--white))\" class=\"i-semi\"/>\n          </div>\n        </template>\n        <template #content>\n          <div class=\"mn-t-semi\">\n            <p class=\"t-transp\" v-html=\"item.description\"></p>\n          </div>\n        </template>\n      </Spoiler>\n    </div>\n  </div>\n</template>\n<script setup>\nimport Spoiler from '@martyrs/src/components/Spoiler/Spoiler.vue'\nimport { useI18n } from 'vue-i18n'\nimport IconChevronBottom from '@martyrs/src/modules/icons/navigation/IconChevronBottom.vue'\n\nconst props = defineProps({\n  content: {\n    type: Object,\n    required: true\n  }\n});\n\nconst { t, tm, te } = useI18n({\n  messages: props.content\n});\n</script>\n<style lang=\"scss\">\n</style>",
                "name": "SectionGuide.vue",
                "size": 1297,
                "type": "source"
              },
              {
                "path": "../../src/modules/landing/components/sections/SectionHeroToken.vue",
                "relativePath": "modules/landing/components/sections/SectionHeroToken.vue",
                "extension": ".vue",
                "content": "<script setup>\n\timport { useRouter } from 'vue-router'\n\timport { useI18n } from 'vue-i18n'\n\n\timport AnimatedGrid from '@martyrs/src/modules/landing/components/elements/AnimatedGrid.vue'\n\n\tconst props = defineProps({\n\t  textData: {\n\t    type: Object,\n\t    default: () => ({\n\t      messages: {\n\t      \ten: {\n\t\t\t\t    TITLE: \"Smoke Weed Every Day &<b> Get A Slice Of The Pie</b>\",\n\t\t\t\t    DESCRIPTION: \"Earn Weeder Token and Get part of the profits of Weeder Delivery. The more tokens you have, the bigger your cut of the profits will be. So what are you waiting for?\",\n\t\t\t\t    ACTION: \"Open Marketplace →\",\n\t\t\t\t    SUBACTION: \"Sign Up To Start\"\n\t\t\t    }\n\t\t\t  }\n\t\t\t})\n\t\t}\n\t})\n\n\tconst { t } = useI18n(props.textData)\n</script>\n\n\n<template>\n\t<div\n\t\tid=\"heroGovernance\" \n\t\tclass=\"pos-relative bg-black o-hidden t-white t-center pd-extra flex-column flex-center flex\"\n\t>\n\t\t<div class=\"sheen h-5r mn-b-small radius-extra o-hidden pos-relative \">\n\t  \t<img loading=\"lazy\" :src=\"(FILE_SERVER_URL || '') + '/logo/token.svg'\" class=\"w-100 h-100\">\n\t  </div>\n\n\t\t<h1 \n\t\t\tclass=\"w-max-50r mn-b-medium\" \n\t\t\tv-html=\"t('TITLE')\"\n\t\t/>\n\n\t\t<p \n\t\t\tclass=\"w-max-50r mn-b-big t-transp p-big\" \n\t\t\tv-html=\"t('DESCRIPTION')\"\n\t\t/>\n\n\t\t<div \n\t\t\tclass=\"t-white gap-thin z-index-1 cols-2\"\n\t\t>\n\t\t\t<router-link \n\t\t\t\t:to=\"{\n\t\t\t\t\tname: 'Sign In'\n\t\t\t\t}\"\n\t\t\t\tclass=\"w-100 bg-light t-dark br-light button\"\n\t\t\t>\n\t\t\t\t{{t('SUBACTION')}}\n\t\t\t</router-link>\n\n\t\t\t<router-link  \n\t\t\t\t:to=\"{\n\t\t\t\t\tname: 'Marketplace'\n\t\t\t\t}\"\n\t\t\t\tclass=\"w-100 bg-dark t-white button\"\n\t\t\t>\n\t\t\t\t{{t('ACTION')}}\n\t\t\t</router-link>\n\t\t</div>\n\n\t\t<AnimatedGrid class=\"w-100 h-100 pos-absolute pos-t-0 pos-r-0 z-index-0\" />\n\n\t</div>\n</template>\n\n<style lang=\"scss\">\n\t.sheen:after {\n\t\tcontent:'';\n\t  top:0;\n\t  left: -25%;\n\t\ttransform:translateX(100%);\n\t\twidth:100%;\n\t\theight:220px;\n\t\tposition: absolute;\n\t\tz-index:1;\n\t\tanimation: slide 3s infinite;\n\t\t \n\t  /* \n\t  CSS Gradient - complete browser support from http://www.colorzilla.com/gradient-editor/ \n\t  */\n\t  background: -moz-linear-gradient(left, rgba(255,255,255,0) 0%, rgba(255,255,255,0.8) 50%, rgba(128,186,232,0) 99%, rgba(125,185,232,0) 100%); /* FF3.6+ */\n\t\tbackground: -webkit-gradient(linear, left top, right top, color-stop(0%,rgba(255,255,255,0)), color-stop(50%,rgba(255,255,255,0.8)), color-stop(99%,rgba(128,186,232,0)), color-stop(100%,rgba(125,185,232,0))); /* Chrome,Safari4+ */\n\t\tbackground: -webkit-linear-gradient(left, rgba(255,255,255,0) 0%,rgba(255,255,255,0.8) 50%,rgba(128,186,232,0) 99%,rgba(125,185,232,0) 100%); /* Chrome10+,Safari5.1+ */\n\t\tbackground: -o-linear-gradient(left, rgba(255,255,255,0) 0%,rgba(255,255,255,0.8) 50%,rgba(128,186,232,0) 99%,rgba(125,185,232,0) 100%); /* Opera 11.10+ */\n\t\tbackground: -ms-linear-gradient(left, rgba(255,255,255,0) 0%,rgba(255,255,255,0.8) 50%,rgba(128,186,232,0) 99%,rgba(125,185,232,0) 100%); /* IE10+ */\n\t\tbackground: linear-gradient(to right, rgba(255,255,255,0) 0%,rgba(255,255,255,0.8) 50%,rgba(128,186,232,0) 99%,rgba(125,185,232,0) 100%); /* W3C */\n\t\tfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#00ffffff', endColorstr='#007db9e8',GradientType=1 ); /* IE6-9 */\n\t}\n\n\t@keyframes slide {\n\t\t0% {\t\n\t\t\ttransform:translateX(-00%); \n\t\t\topacity: 0;\n\t\t}\n\t\t20% {\n\t\t\topacity: 1\n\t\t}\n\t\t80% {\n\t\t\topacity: 1\n\t\t}\n\t\t100% {\n\t\t\ttransform:translateX(100%); \n\t\t\t\topacity: 0\n\t\t}\n\t}\n</style>",
                "name": "SectionHeroToken.vue",
                "size": 3340,
                "type": "source"
              },
              {
                "path": "../../src/modules/landing/components/sections/SectionHeroVideo.vue",
                "relativePath": "modules/landing/components/sections/SectionHeroVideo.vue",
                "extension": ".vue",
                "content": "<template>\n  <section id=\"viewpoint\" class=\"br-b-white hero\" itemscope itemtype=\"http://schema.org/BarOrPub\">\n    \n    <div class=\"cols-2 gap-thin\">\n      <!-- Left col -->\n      <div class=\"col-1 flex-justify flex-column flex o-hidden\" itemprop=\"description\">\n        \n\n        <div class=\"pd-big bg-main mn-b-thin  radius-medium\">\n\t        <h1 class=\"mn-b-small\">\n\t        \t<span class=\"text-fade-in\">\n\t\t\t\t\t\t\t<span class=\"text-splitted\" v-html=\"t('viewpoint.title')\"/>\n\t\t\t\t\t\t</span>\n\t        </h1>\n\t        \n\t        <p class=\"p-big t-transp\">{{ t('viewpoint.description') }}</p>\n\t      </div>\n\n        <div class=\"pd-big bg-black t-white radius-medium\">\n          <p class=\"p-big mn-b-small\" itemprop=\"name\">{{ t('contacts.name') }}</p>\n          \n          <address class=\"d-block mn-b-small\" itemprop=\"address\" itemscope itemtype=\"http://schema.org/PostalAddress\">\n            <a :href=\"t('contacts.addressLink')\" target=\"_blank\" rel=\"noopener\"> \n              <span itemprop=\"streetAddress\">{{ t('contacts.streetAddress') }}</span>, \n              <span itemprop=\"addressLocality\">{{ t('contacts.addressLocality') }}</span>, \n              <span itemprop=\"addressRegion\">{{ t('contacts.addressRegion') }}</span>, \n              <span itemprop=\"postalCode\">{{ t('contacts.postalCode') }}</span>\n            </a>\n          </address>\n          \n          <span class=\"d-block mn-b-small\" itemprop=\"telephone\">\n            <a :href=\"'tel:' + t('contacts.telephone')\" class=\"t-black\">{{ t('contacts.telephone') }}</a>\n          </span>\n\n          <span class=\"d-block mn-b-medium\" itemprop=\"email\">\n            <a :href=\"'mailto:' + t('contacts.email')\" class=\"t-black\">{{ t('contacts.email') }}</a>\n          </span>\n\n          <a :href=\"t('contacts.addressLink')\" target=\"_blank\" rel=\"noopener\" class=\"button hover-scale-1 t-black bg-main\">\n            {{ t('contacts.seeongoogle') }}\n          </a>\n        </div>\n\n\t\t\t</div>\n      <!-- Right col -->\n      <div class=\"col-2 w-100 flex\">\n      \t<div class=\"pos-relative radius-medium video-wrapper w-100 h-100 o-hidden\">\n      \t\t<div class=\"video-gradient\"></div>\n    \t\t\t<video ref=\"videoElement\" style=\"object-fit: cover; position: absolute;\" class=\"video-height\" preload autoplay muted loop playsinlineclass playsinline src=\"/videos/farming.mp4\" itemprop=\"video\" type=\"video/mp4\" ></video>\n      \t</div>\n      </div>\n      \n    </div>\n  </section>\n</template>\n\n\n<script setup>\n\t/////////////////////////////\n\t// COMPONENT DEPENDENCIES\n\t/////////////////////////////\n\timport { ref, onMounted } from 'vue';\n\timport { useI18n } from 'vue-i18n'\n\t\n\tlet text = { \n\t\tmessages: {\n\t\t  \"en\":{\n\t\t    \"viewpoint\":{\n\t\t      \"title\":\"Increase Your Earnings from Canna-Business with Weeder Farms\",\n\t\t      \"description\":\"Using Top-Tier Technology to Streamline Your Cannabis Farming Operations\"\n\t\t    },\n\t\t    \"contacts\": {\n\t\t    \t\"name\": \"Запишитесь на бесплатную консультацию и узнайте как увеличить ваш доход на 30%\",\n\t\t    \t\"seeongoogle\": \"Book a free consultation\"\n\t\t    }\n\t\t  },\n\t\t  \"ru\":{\n\t\t    \"viewpoint\":{\n\t\t      \"title\":\"Живописная Терраса и Бар с Видом на Море\",\n\t\t      \"description\":\"Откройте для себя всё лучшее, что может предложить Пхукет, в The Commune, стильном баре и террасе на пляже Карон. Насладитесь впечатляющим видом на море, попивая изысканные коктейли и пробуя превосходные блюда из нашего меню.\"\n\t\t    }\n\t\t  }\n\t\t}\n\t}\n\n\tconst { t } = useI18n(text)\n\t/////////////////////////////\n\t// CREATED\n\t/////////////////////////////\n\tconst videoElement = ref(null)\n\n\tvar isPlaying = false;\n\n\tfunction\tcheckAndPlayVideo() {\n    // Initializing values\n\n\t\t// On video playing toggle values\n\t\tvideoElement.value.onplaying = function() {\n\t\t  isPlaying = true;\n\t\t};\n\n\t\t// On video pause toggle values\n\t\tvideoElement.value.onpause = function() {\n\t\t  isPlaying = false;\n\t\t};\t\n  }\n\n  // Play video function\n\tasync function playVid() {      \n    if (videoElement.value.paused && !isPlaying) {\n      return videoElement.value.play();\n    }\n\t} \n  \n\tonMounted(() => {\n\t\tcheckAndPlayVideo()\n\t\tplayVid()\n\t\t\t})\n</script>\n\n<style lang=\"scss\">\n\t.video-height {\n\t\t  width: 100%;\n\t    min-height: 100%;\n\t    max-height: 45vh;\n\t    object-fit: cover;\n\t}\n\n\t@media screen and (max-width: 1024px) {\n\t\t.video-wrapper  {\n\t\t\tposition: absolute;\n\t\t\tleft: 0;\n\t\t\ttop: 0;\n\t\t\tborder-radius: 0 !important; \n\n\t\t\t.video-gradient {\n\t\t\t\tposition: absolute;\n\t\t\t\tpointer-events: none;\n\t\t\t\ttop: 7px;\n\t\t\t\tleft: 0;\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\n\t\t\t\tbackground: linear-gradient(to bottom, transparent, rgba(var(--white),1));\n\t\t\t\tz-index: 1;\n\t\t\t}\n\t\t}\n\n\t\t#viewpoint {\n\t\t\t.cols-2 {\n\t\t    .col-1 {\n\t\t     \torder: 2;\n\t\t     \tborder: 0;\n\t\t    }\n\n\t\t    .col-2 {\n\t\t      order: 1;\n\t\t      min-height: 33vh\n\t\t    }\n\t\t  }\n\t  }\n\t}\n</style>\n\n",
                "name": "SectionHeroVideo.vue",
                "size": 4752,
                "type": "source"
              },
              {
                "path": "../../src/modules/landing/components/sections/SectionJoinUs.vue",
                "relativePath": "modules/landing/components/sections/SectionJoinUs.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"o-hidden container-joinus\">\n    <div class=\"content\">\n      <span style=\"font-size: 8rem\" class=\"t-main font-main t-semi\">\n        {{ userCount }}\n      </span>\n      <p class=\"w-m-33r t-center mn-b-small p-big\">\n        {{t('description')}}\n    \n      </p>\n      <router-link :to=\"{ name: 'Sign In' }\" class=\"bg-black t-medium t-white button\">\n        {{t('action')}}\n      </router-link>\n    </div>\n    <FloatingImages \n      :container=\"'.container-joinus'\"\n      :images=\"options.images\" \n      :config=\"{\n          size: '5rem',\n          square: true,\n          minDuration: 5,\n          maxDuration: 15,\n          spawnPoints: [10, 90],\n          animation: {\n            startOpacity: 0.1,\n            midOpacity: 1,\n            endOpacity: 0.0,\n            translateY: '-33vh'\n          },\n          class: 'my-custom-class'\n      }\"\n    />\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue';\nimport { useI18n } from 'vue-i18n';\n\nimport FloatingImages from '@martyrs/src/modules/landing/components/elements/FloatingImages.vue';\n\nconst props = defineProps({\n  content: {\n    type: Object,\n    required: true\n  },\n  options: {\n    type: Object,\n    default: () => ({\n      count: 1230,\n      images: [\n        '/landing/avatars/01.png',\n        '/landing/avatars/02.png',\n        '/landing/avatars/03.png',\n        '/landing/avatars/04.png',\n        '/landing/avatars/05.png',\n        '/landing/avatars/06.png'\n      ]\n    })\n  }\n})\n\nconst { t, te } = useI18n({\n  messages: props.content\n})\n\nconst userCount = ref(props.options.count);\n\nconst increaseUserCount = () => {\n  setInterval(() => {\n    userCount.value += Math.floor(Math.random() * 2) + 1;\n  }, 1330);\n};\n\nonMounted(() => {\n  increaseUserCount();\n});\n</script>\n\n<style lang=\"scss\">\n.container-joinus {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 66%;\n  position: relative;\n\n  .content {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    z-index: 2;\n  }\n}\n</style>\n",
                "name": "SectionJoinUs.vue",
                "size": 2039,
                "type": "source"
              },
              {
                "path": "../../src/modules/landing/components/sections/SectionMobileApp.vue",
                "relativePath": "modules/landing/components/sections/SectionMobileApp.vue",
                "extension": ".vue",
                "content": "<template>\n  <section id=\"mobileApp\" class=\"cols-2 o-hidden \">\n      <img loading=\"lazy\" \n        :src=\"(FILE_SERVER_URL || '') + t('image')\" \n        class=\"radius-medium w-100 h-100 mobile:h-auto object-fit-cover\"\n      >\n\n    <div class=\"pd-big flex flex-h-center flex-column z-index-1 w-1/2\">\n      <h2 class=\"mn-t-medium mn-b-semi w-m-40r\">{{ t('title') }}</h2>\n      <p class=\"t-transp mn-b-big p-big w-m-33r\">{{ t('description') }}</p>\n      \n      <div class=\"mn-b-big gap-medium cols-2\">\n        <div v-for=\"feature in tm('features')\"  class=\"feature\">\n          <h4 class=\"mn-b-small\">{{ feature.title }}</h4>\n          <p class=\"t-transp p-medium\">{{ feature.text }}</p>\n        </div>\n      </div>\n\n      <div class=\"w-100 w-max-30r flex-nowrap flex gap-medium\">\n        <a \n           v-if=\"te('linkAppStore') || te('label')\"\n          :href=\"te('linkAppStore') ? t('linkAppStore') : null\" \n          :target=\"te('linkAppStore') ? '_blank' : null\" \n          class=\"pos-relative w-100 h-100\"\n        > \n          <span \n            v-if=\"te('label')\"\n            class=\"z-index-2 radius-medium bg-main t-semi uppercase pd-thin pos-absolute pos-r-10-negative pos-t-10-negative\"\n          >\n            {{ t('label') }}\n          </span>\n          <LabelAppStore class=\"w-100 h-max\" alt=\"Download on App Store\"/>\n        </a>\n\n        <a \n           v-if=\"te('linkGooglePlay') || te('label')\"\n          :href=\"te('linkGooglePlay') ? t('linkGooglePlay') : null\" \n          :target=\"te('linkGooglePlay') ? '_blank' : null\" \n          class=\"pos-relative w-100 h-100\"\n        > \n          <span \n            v-if=\"te('label')\"\n            class=\"z-index-2 pd-thin radius-medium bg-main t-semi uppercase pos-absolute pos-r-10-negative pos-t-10-negative\"\n          >\n            {{ t('label') }}\n          </span>\n          <LabelGooglePlay class=\"w-100 h-max\" alt=\"Download on Google Play\"/>\n        </a>\n\n      </div>\n    </div>\n  </section>\n</template>\n\n<script setup>\nimport { useI18n } from 'vue-i18n'\n\nimport LabelAppStore from '@martyrs/src/modules/icons/labels/LabelAppStore.vue'\nimport LabelGooglePlay from '@martyrs/src/modules/icons/labels/LabelGooglePlay.vue'\n\nconst props = defineProps({\n    content: {\n      type: Object,\n      required: true\n    }\n  })\n\n  const { t, tm, te } = useI18n({\n    messages: props.content\n  })\n</script>\n\n<style lang=\"scss\">\n @media screen and (max-width: 1025px) {\n  #mobileApp {\n    text-align: center;\n    > section {\n      flex-direction: column;\n      > div {\n        order: 1;\n      }\n    }\n  }\n}\n</style>\n",
                "name": "SectionMobileApp.vue",
                "size": 2560,
                "type": "source"
              },
              {
                "path": "../../src/modules/landing/components/sections/SectionOverview.vue",
                "relativePath": "modules/landing/components/sections/SectionOverview.vue",
                "extension": ".vue",
                "content": "<template>\n  <div id=\"sections\">\n    <h2 class=\"pd-t-big pd-b-big\">\n      {{t('title')}}\n    </h2>\n\n    <div class=\"cols-4 gap-thin\">\n      <router-link \n        v-for=\"section in tm('sections')\" \n        :key=\"section.route\"\n        :to=\"section.route\" \n        class=\"cursor-pointer hover-scale-0 transition-ease-in pd-big bg-light t-black radius-medium\"\n      >\n        <img \n          loading=\"lazy\" \n          :src=\"section.image\"\n          alt=\"\" \n          class=\"w-100 object-fit-cover\"\n        >\n        <h3 class=\"mn-b-medium\">{{ section.title }}</h3>\n        <p class=\"t-transp\">{{ section.text }}</p>\n      </router-link>\n    </div>\n  </div>\n</template>\n\n<script setup>\n  import { useI18n } from 'vue-i18n'\n\n  const props = defineProps({\n    content: {\n      type: Object,\n      required: true\n    }\n  })\n\n  const { t, tm } = useI18n({\n    messages: props.content\n  })\n</script>",
                "name": "SectionOverview.vue",
                "size": 890,
                "type": "source"
              },
              {
                "path": "../../src/modules/landing/components/sections/SectionRoadmap.vue",
                "relativePath": "modules/landing/components/sections/SectionRoadmap.vue",
                "extension": ".vue",
                "content": "<script setup>\nimport { ref } from 'vue';\nimport { useI18n } from 'vue-i18n';\n\nconst props = defineProps({\n  textData: {\n    type: Object,\n    default: () => ({\n      messages: {\n        en: {\n          title: 'Weeder Roadmap',\n          milestones: [{\n            title: 'MVP in Thailand',\n            description: 'The Weeder platform was tested as a minimum viable product (MVP) in Thailand to validate its basic features and gather user feedback. This helped the company make improvements before launching on a larger scale.',\n            date: '2023-02-01',\n            finished: 'true'\n          },{\n            date: '2023-05-01',\n            title: 'Weeder Platform Soft Launch',\n            description: 'A soft version of the Weeder platform will be launched for users to explore and provide feedback. This allows the company to identify any issues and make improvements before the official release.',\n          },{\n            date: '2023-07-01',\n            title: 'IDO',\n            description: 'The Initial DEX Offering (IDO) will launch the Weeder token on a our decentralized platform. It allows the public to purchase Weeder tokens and get involved in the project at an early stage. It can also help establish the initial token price.',\n          },{\n            date: '2023-09-01',\n            title: 'Weeder Platform Official Release',\n            description: 'The Weeder platform will be officially released with dividend features, cashback, and full blockchain integration. This marks the full launch of the platform and allows users to access all its features.',\n          },{\n            date: '2023-11-01',\n            title: 'Weeder Ecosystem Expansion',\n            description: 'The Weeder ecosystem will be expanded by adding support for new countries and enhancing its functionalities. This helps to increase the platforms user base and improve its overall capabilities.',\n          }]\n        }\n      }\n    })\n  }\n});\n\nconst { t,tm } = useI18n(props.textData);\n</script>\n\n<template>\n  <div class=\"o-hidden bg-black t-white t-left pd-big radius-medium\">\n    <h2 class=\"mn-b-big t-center w-100\">{{ t('title') }}</h2>\n    \n    <div class=\"gap-thin flex-nowrap flex o-scrolled timeline custom-scroll\">\n      <div\n        v-for=\"(milestone, index) in tm('milestones')\"\n        :key=\"index\"\n        class=\"timeline-item br-white-transp-10 br-1px br-solid pd-big radius-small\"\n      >\n      \n        <div class=\"mn-b-semi bg-white-transp-5 timeline-icon\">\n          <svg v-if=\"milestone.finished\"  width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g id=\"24 / basic / check-mark\">\n            <path id=\"icon\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.28033 10.7197L14.25 3.75L15.3107 4.81066L7.28033 12.841L3 8.56066L4.06066 7.5L7.28033 10.7197Z\" fill=\"rgb(var(--main))\"/>\n            </g>\n          </svg>\n        </div>\n\n        <div class=\"w-100 timeline-content\">\n          <h3 class=\"mn-b-small\">{{ t(milestone.title) }}</h3>\n          <p class=\"uppercase mn-b-semi t-main t-semi date\">{{ milestone.date }}</p>\n          <p class=\"t-transp w-100\">{{ t(milestone.description) }}</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n  .timeline {\n    .timeline-item {\n      min-width: 32rem;\n    }\n\n    .timeline-icon {\n      border-radius: 100%;\n      width: 3rem;\n      height: 3rem;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    \n\n      img {\n        width: 1.5rem;\n        height: 1.5rem;\n      }\n    }\n  }\n\n  .custom-scroll {\n    overflow-x: scroll;\n    scrollbar-width: none; /* Hide scrollbar for Firefox */\n    -ms-overflow-style: none; /* Hide scrollbar for IE and Edge */\n    display: -webkit-box; /* Fix for Safari */\n    display: -webkit-flex; /* Fix for Safari */\n    display: -ms-flexbox;\n    display: flex;\n  }\n\n  .custom-scroll::-webkit-scrollbar {\n    width: 0px; /* Hide scrollbar for Chrome and Safari */\n    height: 0px;\n  }\n</style>",
                "name": "SectionRoadmap.vue",
                "size": 4014,
                "type": "source"
              },
              {
                "path": "../../src/modules/landing/components/sections/SubscribeNewsletter.vue",
                "relativePath": "modules/landing/components/sections/SubscribeNewsletter.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"pos-relative z-index-1\">\n    <header class=\"d-inline-block z-index-1 mn-b-big\">\n      <h2 class=\"mn-b-semi\">{{ t('title') }}</h2>\n      <p class=\"t-transp p-big\">{{ t('subtitle') }}</p>\n    </header>\n\n    <FieldBig \n      :input=\"email\" \n      :typingSpeed=\"75\"\n      :loopTyping=\"false\"\n      :enableTyping=\"false\"\n      :placeholder=\"t('placeholder')\"\n      :action=\"t('action')\"\n      @update:input=\"email = $event\"\n      @action=\"sendApplication\"\n      class=\"d-inline-flex bg-white t-black w-100 w-max-40r\"\n    />\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nimport FieldBig from \"@martyrs/src/components/FieldBig/FieldBig.vue\";\n\nimport * as globals from '@martyrs/src/modules/globals/views/store/globals.js';\nimport * as applications from '@martyrs/src/modules/orders/store/applications.js';\n\n// import * as inputsValidation from '@martyrs/src/modules/auth/views/validations/inputs.validation'\n\nconst props = defineProps({\n  content: {\n    type: Object,\n    required: true\n  },\n  options: {\n    type: Object,\n    default: () => ({\n    })\n  }\n})\n\n// Localization\nconst { t } = useI18n({\n  messages: props.content\n})\n\nlet email = ref('')\nlet emailValidation = ref(false)\n\nasync function sendApplication() {\n  // try {\n  //   await inputsValidation.validateInputs(\n  //     emailValidation, \n  //     inputsValidation.validateEmail, \n  //     email.value, \n  //     'Wrong email'\n  //   )\n  // } catch (error) {\n  //    globals.setError({\n  //     response: {\n  //       status: \"Invalid Email\", \n  //       data: {\n  //         message: \"The email address entered is invalid. Please provide a valid email address.\"\n  //       }\n  //     }\n  //   });\n  //   return false\n  // }\n\n  gtag('event', 'subscribe_newsletter', {\n    'event_category': 'conversion',\n    'event_label': 'Subscribe Newsletter'\n  });\n\n  try {\n    let application = {\n      type: 'newsletter',\n      contacts: {\n        email: email.value\n      }\n    };\n    const response = await applications.create(application);\n\n    return Promise.resolve(response.data);\n  } catch (error) {\n    console.log(error)\n    globals.setError(error)\n    return Promise.reject(error);\n  }\n}\n</script>\n\n<style lang=\"scss\" >\n</style>\n",
                "name": "SubscribeNewsletter.vue",
                "size": 2263,
                "type": "source"
              }
            ]
          }
        }
      },
      "marketplace": {
        "_files": [
          {
            "path": "../../src/modules/marketplace/marketplace.client.js",
            "relativePath": "modules/marketplace/marketplace.client.js",
            "extension": ".js",
            "content": "// Router\nimport routerMarketplace from './views/router/marketplace.router.js';\n\n//Store\nimport * as storeMarketplace from './views/store/marketplace.js';\n\n// Layouts\nimport Marketplace from './views/components/layouts/Marketplace.vue';\n\n// Sections\nimport SectionMenu from './views/components/sections/SectionMenu.vue';\n\n// Pages\nimport Catalog from './views/components/pages/Catalog.vue';\n\n// Пример функции инициализации для модуля продуктов\nfunction initializeProducts(app, store, router, options = {}) {\n  const route = options.route || 'Home';\n\n  router.addRoute(route, routerMarketplace);\n\n  store.addStore('marketplace', storeMarketplace);\n}\n\nconst ModuleMarketplace = {\n  initialize: initializeProducts,\n  views: {\n    store: {\n      storeMarketplace,\n    },\n    router: {\n      routerMarketplace,\n    },\n    components: {\n      // Elements\n      // Blocks\n      // Sections\n      SectionMenu,\n      // Pages\n      Catalog,\n      // Layouts\n      Marketplace,\n    },\n  },\n};\n\nexport {\n  // Elements\n  // Pages\n  Catalog,\n  // Layouts\n  Marketplace,\n  // Blocks\n  // Sections\n  SectionMenu,\n};\n\nexport default ModuleMarketplace;\n",
            "name": "marketplace.client.js",
            "size": 1137,
            "type": "source"
          }
        ],
        "views": {
          "router": {
            "_files": [
              {
                "path": "../../src/modules/marketplace/views/router/marketplace.router.js",
                "relativePath": "modules/marketplace/views/router/marketplace.router.js",
                "extension": ".js",
                "content": "import layoutMarketplace from '../components/layouts/Marketplace.vue';\n\nconst marketplace = {\n  path: 'marketplace',\n  component: layoutMarketplace,\n  name: 'Marketplace',\n  meta: {\n    title: {\n      en: 'Marketplace',\n      ru: 'Маркетплейс',\n    },\n  },\n  children: [\n    {\n      path: ':country?',\n      component: () => import(/* webpackChunkName: 'Deliveries' */ '../components/pages/Catalog.vue'),\n      children: [\n        {\n          path: ':state?',\n          name: 'State',\n          component: () => import(/* webpackChunkName: 'Deliveries' */ '../components/pages/Catalog.vue'),\n          children: [\n            {\n              path: ':city?',\n              name: 'City',\n              component: () => import(/* webpackChunkName: 'Deliveries' */ '../components/pages/Catalog.vue'),\n            },\n          ],\n        },\n      ],\n    },\n  ],\n};\n\nexport default marketplace;\n",
                "name": "marketplace.router.js",
                "size": 889,
                "type": "source"
              }
            ]
          },
          "store": {
            "_files": [
              {
                "path": "../../src/modules/marketplace/views/store/marketplace.js",
                "relativePath": "modules/marketplace/views/store/marketplace.js",
                "extension": ".js",
                "content": "import { reactive, watch } from 'vue';\n\n// State\nconst state = reactive({\n  shops: [],\n  popular: [],\n  pagination: {\n    page: 1,\n    perPage: 18,\n  },\n  search: {\n    active: false,\n    current: '',\n    result: [],\n  },\n  filter: {\n    active: false,\n    class: 'mobile-only',\n    selected: {},\n    options: [\n      {\n        title: 'Delivery',\n        value: 'delivery',\n        options: [\n          { label: 'Pickup', value: 'pickup' },\n          { label: 'Courier', value: 'courier' },\n          { label: 'Post', value: 'post' },\n        ],\n      },\n    ],\n  },\n  sort: {\n    param: 'distance',\n    order: 'asc',\n    options: [\n      {\n        label: 'Distance',\n        value: 'distance',\n      },\n      {\n        label: 'Popularity',\n        value: 'views',\n      },\n      {\n        label: 'Products',\n        value: 'numberOfProducts',\n      },\n    ],\n  },\n});\n\n// History\nconst history = [];\nhistory.push(state);\n\n// Watch\nwatch(state, (newState, oldState) => {\n  history.push(newState);\n});\n\n// Module Export\nexport { state };\n",
                "name": "marketplace.js",
                "size": 1037,
                "type": "source"
              }
            ]
          },
          "components": {
            "layouts": {
              "_files": [
                {
                  "path": "../../src/modules/marketplace/views/components/layouts/Marketplace.vue",
                  "relativePath": "modules/marketplace/views/components/layouts/Marketplace.vue",
                  "extension": ".vue",
                  "content": "<template>\n\t<div style=\"min-height: 100%;\" class=\"h-min-100\">\n\t\t\n\n\t\t <div class=\"cols-2-1_3 h-100 z-index-3 pos-relative radius-big\">\n\n\t\t\t<div class=\"o-y-scroll br-r br-solid br-light  z-index-2 desktop-only h-100 pos-relative\">\n\t     \t<BlockFilter\n          v-model:filter=\"marketplace.state.filter\"\n          :options=\"marketplace.state.filter.options\"\n          class=\"h-100 w-100 pd-medium\"\n\t\t    />\n\t\t  </div>\n\n\t\t\t<!-- Catalog wrapper -->\n\t\t\t<div class=\"pd-thin\">\n\t\t\t\t<header class=\"pd-medium radius-medium bg-light mn-b-thin\">\n\t\t    \t<h2 class=\"\">\n\t\t    \t\t<span class=\"\">Weed Deliveries in </span>\n\n\t\t    \t\t<span \n\t\t    \t\t\tv-if=\"localPosition.city || localPosition.state || localPosition.country\"\n\t\t    \t\t\t@click=\"a => { globals.state.isOpenLocationPopup = true }\" \n\t\t    \t\t\tclass=\"t-main t-semi cursor-pointer \"\n\t\t    \t\t>\n\t\t  \t\t\t\t<template v-if=\"localPosition.city\">{{localPosition.city}}, </template>\n\t\t  \t\t\t\t<template v-if=\"localPosition.state\">{{localPosition.state}}, </template>\n\t\t  \t\t\t\t<template v-if=\"localPosition.country\">{{localPosition.country}}</template>\n\t\t    \t\t</span>\n\n\t\t    \t\t<span v-else @click=\"a => { globals.state.isOpenLocationPopup = true }\"  class=\"t-main t-semi cursor-pointer\">The World</span>\n\t\t    \t</h2>\n\t\t\t\t</header>\n\n\t\t\t\t<div class=\"rows-1\">\n\t\t\t\t\t<router-view  v-slot=\"{ Component, route }\">\n\t\t\t\t\t\t<component ref=\"page\" :key=\"route\" :localPosition=\"localPosition\" :is=\"Component\" />\n\t\t\t\t\t</router-view>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n\n<script setup=\"props\">\n\t// Import libs\n\timport { computed, onMounted, watch, ref } from 'vue'\n\timport { useRoute, useRouter,onBeforeRouteLeave } from 'vue-router'\n\timport { useI18n } from 'vue-i18n'\n\n\timport BlockFilter  from '@martyrs/src/modules/globals/views/components/blocks/BlockFilter.vue'\n\n\timport * as globals from '@martyrs/src/modules/globals/views/store/globals.js'\n  import * as categories from '@martyrs/src/modules/products/store/categories.js';\n\n\n\timport * as marketplace from '../../store/marketplace';\n\n\t// Accessing router and store\n\tconst route = useRoute()\n\tconst router = useRouter()\n\n\tconst localPosition = ref({\n\t\tcity: null,\n\t\tstate: null,\n\t\tcountry: null\n\t});\n\n\tconst desktopFilters = ref(null)\n\n\tfunction denormalizeUrlParam(param) {\n\t  return param\n\t    .replace(/-/g, ' ') // Замена дефисов на пробелы\n\t    .replace(/\\b\\w/g, l => l.toUpperCase()); // Преобразование первой буквы каждого слова в заглавную\n\t}\n\n\tfunction normalizeUrlParam(param) {\n\t  return param\n\t    .toLowerCase()\n\t    .replace(/ /g, '-')\n\t    .replace(/[^a-z0-9-]/g, '');\n\t}\n\n\tif (route.params) {\n    // Загружаем новые значения из параметров маршрута в состояние\n    let newState = {\n      country: denormalizeUrlParam(route.params.country),\n      state: denormalizeUrlParam(route.params.state),\n      city: denormalizeUrlParam(route.params.city),\n    };\n\n\t  // Обновляем глобальное состояние\n\t  localPosition.value = newState;\n\t}\n\n\tif (route.query) {\n\t \tconst query = route.query;\n\n\t\tmarketplace.state.filter.selected.categories = query.categories ? query.categories.split(',') : [];\n\t\tmarketplace.state.filter.selected.prices = query.prices ? query.prices.split(',') : [];\n\t\tmarketplace.state.filter.selected.delivery = query.delivery ? query.delivery.split(',') : [];\n\t}\n\n\tif (route.query.sortParam) marketplace.state.sort.param = route.query.sortParam\n\tif (route.query.sortOrder) marketplace.state.sort.order = route.query.sortOrder\n\n\tonMounted(async () => {\n\t  let options = {\n      status: 'published',\n      rootOnly: true\n    }\n\n    let categoriesFilter = await categories.actions.read(options);\n\n    categoriesFilter = categoriesFilter.map(category => ({\n      value: category._id,\n      label: category.name\n    }));\n\n    const index = marketplace.state.filter.options.findIndex(option => option.value === 'categories');\n\n    const categoryOption = {\n      title: 'Categories',\n      value: 'categories',\n      options: categoriesFilter\n    };\n\n    if (index !== -1) {\n        marketplace.state.filter.options[index] = categoryOption;\n    } else {\n        marketplace.state.filter.options.unshift(categoryOption);\n    }\n\t})\n\n\twatch(() => marketplace.state.sort, (newSortValue, oldSortValue) => {\n\t\tlet query = { ...route.query}\n\t\t\n\t\tquery.sortParam = newSortValue.param\n\t\tquery.sortOrder = newSortValue.order\n\t  \n\t  // replace the current route\n\t  router.replace({ query });\n\t}, { deep: true });\n\n\n\twatch(() => marketplace.state.filter.selected, (newFilterValue, oldFilterValue) => {\n\t  // Переводим фильтр в формат query\n\t  const query = { ...route.query };\n\n\t  // Удаляем старые значения фильтра из query\n\t  Object.keys(oldFilterValue).forEach(key => {\n\t    if (query[key]) {\n\t      delete query[key];\n\t    }\n\t  });\n\n\t  // Добавляем новые значения фильтра в query\n\t  const newQueryValues = Object.fromEntries(\n\t    Object.entries(newFilterValue)\n\t      .filter(([key, value]) => Array.isArray(value) && value.length > 0)\n\t      .map(([key, value]) => [key, value.join(',')])\n\t  );\n\n\t  delete query.options;\n\t  Object.assign(query, newQueryValues);\n\n\t  // Обновляем маршрут с новым query\n\t  router.replace({ query });\n\t}, { deep: true })\n\n\twatch(() => globals.state.position, (newPosition) => {\n\t  // get the current route\n\t  const currentRoute = { ...router.currentRoute.value };\n\t  \n\t  // create new parameters based on globals state position\n\t  let newParams = {\n\t    country: normalizeUrlParam(newPosition.country),\n\t    state: normalizeUrlParam(newPosition.state),\n\t    city: normalizeUrlParam(newPosition.city),\n\t  };\n\t  \n\t  // update route params\n\t  currentRoute.params = newParams;\n\t  \n\t  // replace the current route\n\t  router.replace(currentRoute);\n\t}, { deep: true });\n\n  const text = {\n    locale: 'en',\n    messages: {\n      en: {\n\t     \tmeta: {\n          title: \"Marketplace – Shop Our Wide Selection of Quality Weed for Delivery\",\n          description: \"Browse our marketplace of top-grade weed strains and choose from a variety of delivery options. Order now and have your favorite strains delivered straight to your door. Safe, fast, and reliable.\",\n        }\n      },\n      ru: {\n\t      meta: {\n          title: \"Маркетплейс – Выбирайте из нашего ассортимента качественной травки для доставки\",\n          description: \"Маркетплейс – Изучите наши продукты высокого качества и выбирайте из различных вариантов доставки. Закажите сейчас и получите свои любимые сорта на дом. Безопасно, быстро и надежно.\",\n        }\n      }\n    }\n  }\n\n \tconst { t } = useI18n(text)\n</script>\n\n<style lang=\"scss\">\n\n\n</style>\n",
                  "name": "Marketplace.vue",
                  "size": 6526,
                  "type": "source"
                }
              ]
            },
            "pages": {
              "_files": [
                {
                  "path": "../../src/modules/marketplace/views/components/pages/Catalog.vue",
                  "relativePath": "modules/marketplace/views/components/pages/Catalog.vue",
                  "extension": ".vue",
                  "content": "<template>\n\t<Feed\n\t\tv-model:sort=\"marketplace.state.sort\"\n\t\tv-model:filter=\"marketplace.state.filter\"\n    :search=\"true\"\n    :showLoadMore=\"false\"\n    :states=\"{\n      empty: {\n        title: 'No Shops Found',\n        description: 'Currently, there are no shops.'\n      },\n    }\"\n    :store=\"{\n      read: (options) => organization.actions.read(options)\n    }\"\n    :options=\"{\n      country: route.params.country,\n\t    state: route.params.state,\n\t    city: route.params.city,\n\t    categories: route.query.categories,\n\t    prices: route.query.prices,\n\t    delivery: route.query.delivery,\n\t    location: globals.state.position?.location,\n\t    lookup: ['products','spots'],\n\t    contain: ['products'],\n    }\"\n    v-slot=\"{ \n      items \n    }\"\n    class=\"rows-1 gap-thin\"\n  >\n    <CardOrganization \n\t    v-for=\"organization in items\" \n\t    :key=\"organization._id\"\n\t    :organization=\"organization\"\n\t    :showRating=\"true\"\n\t    :showFollowers=\"false\"\n\t    :showProducts=\"true\"\n\t    class=\"bg-light w-100 o-hidden radius-medium pd-small \"\n\t  />\n  </Feed>\n</template>\n\n<script setup>\n\timport { computed,reactive,ref, onMounted,watch  } from 'vue'\n\timport { useRoute } from 'vue-router'\n\n\timport Feed from '@martyrs/src/components/Feed/Feed.vue'\n\t\n\timport * as organization from '@martyrs/src/modules/organizations/store/organizations.js'\n\timport * as globals from '@martyrs/src/modules/globals/views/store/globals.js'\n\n\timport CardOrganization from '@martyrs/src/modules/organizations/components/blocks/CardOrganization.vue'\n\n\timport * as marketplace from '../../store/marketplace';\n\t\n\tconst route = useRoute()\n\n\tonMounted(() => {\n\t\t// Добавление Google Analytics event на открытие маркетплейса\n\t\tif (typeof gtag === 'function') {\n\t\t\tgtag('event', 'view_marketplace', {\n\t\t\t\tlocation: globals.state.position?.location || 'unknown',\n\t\t\t\tpage_path: window.location.pathname,\n\t\t\t\tmarketplace_id: route.params.id || 'main',\n\t\t\t});\n\t\t}\n\t})\n</script>\n\n<style lang=\"scss\">\n</style>\n",
                  "name": "Catalog.vue",
                  "size": 1968,
                  "type": "source"
                }
              ]
            },
            "sections": {
              "_files": [
                {
                  "path": "../../src/modules/marketplace/views/components/sections/SectionMenu.vue",
                  "relativePath": "modules/marketplace/views/components/sections/SectionMenu.vue",
                  "extension": ".vue",
                  "content": "<template>\n\t<section id=\"main-menu\" class=\"pos-relative\">\n\t\t<h2 class=\"w-m-60r mn-auto pd-t-big pd-b-big t-center\">\n\t\t\tWeed and Accessories to <br><b>Enhance Your Smoking Experience</b> \n\t\t</h2>\n\n\t\t<transition name=\"fade\" mode=\"out-in\"  appear>\n\t\t\t<div v-if=\"!menu\"  class=\"w-100 h-15r radius-medium flex-center bg-light\">\n\t\t\t\t<Loader class=\"pos-relative\"/>\n\t\t\t</div>\n\n\t\t\t<ul v-else class=\"gap-thin grid-container\">\n\t\t\t\t<router-link :to=\"getMarketplaceLink([category.url])\"\n\t\t\t\t\tv-for=\"(category,index) in categoriesRoot.slice(0,5)\" \n\t\t\t\t\t:key=\"category\" \n\t\t\t\t\tclass=\"cursor-pointer hover-scale-0 flex-v-center flex-h-center flex-nowrap flex-row flex bg-light radius-medium pd-medium grid-item\"\n\t\t\t\t>\n\t\t\t\t\t<img loading=\"lazy\" \n\t\t\t\t\t\tv-if=\"category.photo\"\n\t\t\t\t\t\t:src=\"category.photo\"\n\t\t\t\t\t\tclass=\"h-100 aspect-1x1 t-transp mn-r-thin\"\n\t\t\t\t\t>\n\n\t\t\t\t\t<div class=\"w-100\" :class=\"{'mn-r-auto':category.url === 'buds'}\">\n\t\t\t\t\t\t<h3 class=\"t-black capitalize h3\">\n\t\t\t\t\t\t\t{{category.name}}\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t\n\t\t\t\t\t\t<p v-if=\"category.url === 'buds'\" class=\"mn-t-thin mn-b-thin t-transp t-black p-medium\">\n\t\t\t\t\t\t\tUnveiling the Exceptional User Curated Best Buds\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<button \n\t\t\t\t\t\t\tv-if=\"category.url === 'buds'\"\n\t\t\t        class=\"mn-t-small radius-extra hover-bg-black t-medium t-black bg-main hover-t-white button-small button\"\n\t\t\t      >\n\t\t\t        <span>Check {{countProduct.count}} products →</span>\n\t\t\t      </button>\n\t\t\t\t\t</div>\n\t\t\t\t</router-link>\n\n\t\t\t</ul>\n\t\t</transition>\n\t</section>\n</template>\n\n\n<script setup>\n\timport { ref, onMounted,computed } from 'vue'\n\n\timport Loader from '@martyrs/src/components/Loader/Loader.vue'\n\n\timport { useRouter } from 'vue-router'\n\timport { useI18n } from 'vue-i18n'\n\t\t\n\timport * as categories from '@martyrs/src/modules/products/store/categories.js';\n\timport * as products from '@martyrs/src/modules/products/store/products.js';\n\n\tconst router = useRouter()\n\n\tconst categoriesRoot = ref(null)\n\t\n \tconst text = {\n    en: {\n    \tcategories: []\n    },\n    ru: {\n    \tcategories: []\n    }\n  }\n\n\n\tconst { t  } = useI18n({\n    messages: text\n  })\n\n\tconst countProduct = ref(0)\n\tconst menu = ref(false)\n\n\tonMounted( async () => {\n\t\tcountProduct.value = await products.actions.read({count: true})\n\t\tcategoriesRoot.value = await categories.actions.read({rootOnly: true})\n\t\tmenu.value = true\n\t})\n</script>\n\n<style lang=\"scss\">\n\t.grid-container {\n\t  display: grid;\n\t  grid-template-columns: repeat(4, 1fr);\n\t  grid-template-rows: repeat(2, 1fr);\n\t}\n\n\t.grid-item {\n\t  &:first-of-type {\n\t  \tgrid-column: span 2;\n\t  \tgrid-row: span 2;\n\t  }\n\t}\n\n\t@media screen and (max-width: 1025px) {\n    .grid-container {  grid-template-columns: repeat(2, 1fr);  }\n  }\n</style>\n",
                  "name": "SectionMenu.vue",
                  "size": 2700,
                  "type": "source"
                }
              ]
            }
          }
        }
      },
      "music": {
        "controllers": {
          "_files": [
            {
              "path": "../../src/modules/music/controllers/album.controller.js",
              "relativePath": "modules/music/controllers/album.controller.js",
              "extension": ".js",
              "content": "import music from './music.controller.js';\nexport default (function (app, db) {\n  const { MusicController } = music(app, db);\n  class AlbumController extends MusicController {\n    constructor(app) {\n      super('/api/albums', app, db, db.album);\n    }\n    // Get tracks for a specific album\n    async getAlbumTracks(req, res) {\n      try {\n        const albumId = req.params.albumId;\n        // Check if album exists and user has access\n        const album = await db.album.findById(albumId);\n        if (!album) {\n          return res.status(404).json({ error: 'Album not found' });\n        }\n        // Check access using ABAC\n        const accessResult = await this.abac.checkAccess({\n          user: req.userId,\n          resource: 'albums',\n          action: 'read',\n          currentResource: album,\n        });\n        if (!accessResult.allowed && !album.isPublic) {\n          return res.status(403).json({\n            errorCode: accessResult.reason,\n            message: 'Access Denied',\n          });\n        }\n        // Find tracks for this album\n        const tracks = await db.track.find({ album: albumId, status: 'published' }).sort({ releaseDate: -1 });\n        res.json(tracks);\n      } catch (error) {\n        this.logger.error(`Error getting album tracks: ${error.message}`);\n        res.status(500).json({ error: error.message });\n      }\n    }\n    // Get featured albums\n    async getFeaturedAlbums(req, res) {\n      try {\n        const cacheKey = 'featured-albums';\n        let featuredAlbums = await this.cache.get(cacheKey);\n        if (!featuredAlbums) {\n          // Get featured albums with track counts\n          featuredAlbums = await db.album.aggregate([\n            { $match: { status: 'featured', isPublic: true } },\n            {\n              $lookup: {\n                from: 'tracks',\n                localField: '_id',\n                foreignField: 'album',\n                as: 'tracks',\n              },\n            },\n            {\n              $addFields: {\n                trackCount: { $size: '$tracks' },\n              },\n            },\n            { $project: { tracks: 0 } },\n            { $sort: { releaseDate: -1 } },\n            { $limit: 10 },\n          ]);\n          await this.cache.set(cacheKey, featuredAlbums, 3600); // Cache for 1 hour\n        }\n        res.json(featuredAlbums);\n      } catch (error) {\n        this.logger.error(`Error getting featured albums: ${error.message}`);\n        res.status(500).json({ error: error.message });\n      }\n    }\n  }\n  const albumController = new AlbumController(app, db); // Pass app in actual implementation\n  return {\n    create: albumController.create.bind(albumController),\n    read: albumController.read.bind(albumController),\n    update: albumController.update.bind(albumController),\n    delete: albumController.delete.bind(albumController),\n    getAlbumTracks: albumController.getAlbumTracks.bind(albumController),\n    getFeaturedAlbums: albumController.getFeaturedAlbums.bind(albumController),\n  };\n});\n",
              "name": "album.controller.js",
              "size": 3005,
              "type": "source"
            },
            {
              "path": "../../src/modules/music/controllers/artist.controller.js",
              "relativePath": "modules/music/controllers/artist.controller.js",
              "extension": ".js",
              "content": "import music from './music.controller.js';\nexport default (function (app, db) {\n  const { MusicController } = music(app, db);\n  class ArtistController extends MusicController {\n    constructor(app) {\n      super('/api/artists', app, db, db.artist);\n    }\n    // Get artist discography\n    async getDiscography(req, res) {\n      try {\n        const artistId = req.params.artistId;\n        // Verify artist exists\n        const artist = await db.artist.findById(artistId);\n        if (!artist) {\n          return res.status(404).json({ error: 'Artist not found' });\n        }\n        // Get all albums by this artist\n        const albums = await db.album\n          .find({\n            artist: artistId,\n            status: 'published',\n            isPublic: true,\n          })\n          .sort({ releaseDate: -1 });\n        // Get all tracks not in albums\n        const singleTracks = await db.track\n          .find({\n            artist: artistId,\n            album: { $exists: false },\n            status: 'published',\n            isPublic: true,\n          })\n          .sort({ releaseDate: -1 });\n        res.json({\n          artist,\n          albums,\n          singles: singleTracks,\n        });\n      } catch (error) {\n        this.logger.error(`Error getting artist discography: ${error.message}`);\n        res.status(500).json({ error: error.message });\n      }\n    }\n    // Verify an artist (admin only)\n    async verifyArtist(req, res) {\n      try {\n        const artistId = req.params.artistId;\n        // Check if user is admin\n        if (!req.userRoles.includes('ROLE_ADMIN')) {\n          return res.status(403).json({ error: 'Only administrators can verify artists' });\n        }\n        const artist = await db.artist.findById(artistId);\n        if (!artist) {\n          return res.status(404).json({ error: 'Artist not found' });\n        }\n        artist.isVerified = true;\n        await artist.save();\n        await this.cache.flush();\n        res.json({ success: true, artist });\n      } catch (error) {\n        this.logger.error(`Error verifying artist: ${error.message}`);\n        res.status(500).json({ error: error.message });\n      }\n    }\n    // Get related artists\n    async getRelatedArtists(req, res) {\n      try {\n        const artistId = req.params.artistId;\n        // Find genres of this artist\n        const artist = await db.artist.findById(artistId);\n        if (!artist) {\n          return res.status(404).json({ error: 'Artist not found' });\n        }\n        // Get artists with similar genres\n        const relatedArtists = await db.artist\n          .find({\n            _id: { $ne: artistId },\n            genre: { $in: artist.genre },\n            status: 'published',\n          })\n          .limit(5);\n        res.json(relatedArtists);\n      } catch (error) {\n        this.logger.error(`Error getting related artists: ${error.message}`);\n        res.status(500).json({ error: error.message });\n      }\n    }\n  }\n  const artistController = new ArtistController(app, db);\n  return {\n    create: artistController.create.bind(artistController),\n    read: artistController.read.bind(artistController),\n    update: artistController.update.bind(artistController),\n    delete: artistController.delete.bind(artistController),\n    getDiscography: artistController.getDiscography.bind(artistController),\n    verifyArtist: artistController.verifyArtist.bind(artistController),\n    getRelatedArtists: artistController.getRelatedArtists.bind(artistController),\n  };\n});\n",
              "name": "artist.controller.js",
              "size": 3491,
              "type": "source"
            },
            {
              "path": "../../src/modules/music/controllers/genre.controller.js",
              "relativePath": "modules/music/controllers/genre.controller.js",
              "extension": ".js",
              "content": "import music from './music.controller.js';\nexport default (function (app, db) {\n  const { MusicController } = music(app, db);\n  class GenreController extends MusicController {\n    constructor(app) {\n      super('/api/genres', app, db, db.genre);\n    }\n    // Get tracks by genre\n    async getGenreTracks(req, res) {\n      try {\n        const genreId = req.params.genreId;\n        // Verify genre exists\n        const genre = await db.genre.findById(genreId);\n        if (!genre) {\n          return res.status(404).json({ error: 'Genre not found' });\n        }\n        // Get tracks from this genre\n        const tracks = await db.track\n          .find({\n            genre: genreId,\n            status: 'published',\n            isPublic: true,\n          })\n          .sort({ releaseDate: -1 })\n          .limit(50)\n          .populate('artist', 'name')\n          .populate('album', 'title coverUrl');\n        res.json({\n          genre,\n          tracks,\n        });\n      } catch (error) {\n        this.logger.error(`Error getting genre tracks: ${error.message}`);\n        res.status(500).json({ error: error.message });\n      }\n    }\n    // Get popular genres\n    async getPopularGenres(req, res) {\n      try {\n        const limit = parseInt(req.query.limit) || 10;\n        const genres = await db.genre\n          .find({\n            status: 'published',\n          })\n          .sort({ popularity: -1 })\n          .limit(limit);\n        res.json(genres);\n      } catch (error) {\n        this.logger.error(`Error getting popular genres: ${error.message}`);\n        res.status(500).json({ error: error.message });\n      }\n    }\n  }\n  const genreController = new GenreController(app, db);\n  return {\n    create: genreController.create.bind(genreController),\n    read: genreController.read.bind(genreController),\n    update: genreController.update.bind(genreController),\n    delete: genreController.delete.bind(genreController),\n    getGenreTracks: genreController.getGenreTracks.bind(genreController),\n    getPopularGenres: genreController.getPopularGenres.bind(genreController),\n  };\n});\n",
              "name": "genre.controller.js",
              "size": 2087,
              "type": "source"
            },
            {
              "path": "../../src/modules/music/controllers/music.controller.js",
              "relativePath": "modules/music/controllers/music.controller.js",
              "extension": ".js",
              "content": "import globalsabac from '@martyrs/src/modules/globals/controllers/classes/globals.abac.js';\nimport Cache from '@martyrs/src/modules/globals/controllers/classes/globals.cache.js';\nimport CRUD from '@martyrs/src/modules/globals/controllers/classes/globals.crud.js';\nimport Logger from '@martyrs/src/modules/globals/controllers/classes/globals.logger.js';\nconst { getInstance } = globalsabac;\nexport default (function (app, db) {\n  const logger = new Logger(db);\n  const cache = new Cache();\n  const abac = getInstance(db);\n  class MusicController extends CRUD {\n    constructor(basePath, app, db, model, options) {\n      super(basePath, app, db, model, options);\n      this.logger = logger;\n      this.cache = cache;\n      this.abac = abac;\n      // Log initialization to help debugging\n      // console.log(`[MusicController] Initialized with basePath: ${basePath}`);\n      // console.log(`[MusicController] Model: ${model?.modelName || 'No model provided'}`);\n    }\n    // Override the create method to handle ownership\n    async create(req, res) {\n      try {\n        console.log(`[MusicController] Create request received:`, {\n          userId: req.userId,\n          body: req.body,\n        });\n        // Ensure userId exists\n        if (!req.userId) {\n          console.error('[MusicController] No userId found in request, auth middleware may have failed');\n          return res.status(401).json({\n            errorCode: 'AUTHENTICATION_REQUIRED',\n            message: 'You must be authenticated to perform this action',\n          });\n        }\n        // Set creator and owner if not provided\n        if (!req.body.creator) {\n          req.body.creator = {\n            type: 'user', // Note lowercase - must match your schema expectations\n            target: req.userId,\n          };\n        }\n        if (!req.body.owner) {\n          req.body.owner = {\n            type: 'user', // Note lowercase - must match your schema expectations\n            target: req.userId,\n          };\n        }\n        console.log(`[MusicController] Checking access with ABAC`);\n        // Check access using ABAC\n        const accessResult = await this.abac.checkAccess({\n          user: req.userId,\n          resource: this.model.collection.collectionName,\n          action: 'create',\n          data: req.body,\n        });\n        console.log(`[MusicController] Access check result:`, accessResult);\n        if (!accessResult.allowed) {\n          console.error(`[MusicController] Access denied:`, accessResult.reason);\n          return res.status(403).json({\n            errorCode: accessResult.reason,\n            message: 'Access Denied',\n          });\n        }\n        console.log(`[MusicController] Creating record with data:`, req.body);\n        // Continue with the creation\n        const createdData = await this.model.create(req.body);\n        await this.cache.flush();\n        console.log(`[MusicController] Record created successfully:`, createdData._id);\n        res.status(201).json(createdData);\n      } catch (error) {\n        console.error(`[MusicController] Error creating record:`, error);\n        this.logger.error(`Error creating ${this.model.collection.collectionName}: ${error.message}`);\n        res.status(500).json({ error: error.message });\n      }\n    }\n    // Override the update method to check ownership\n    async update(req, res) {\n      try {\n        const resourceId = req.body._id;\n        const resource = await this.model.findById(resourceId);\n        if (!resource) {\n          return res.status(404).json({ error: 'Resource not found' });\n        }\n        // Check access using ABAC\n        const accessResult = await this.abac.checkAccess({\n          user: req.userId,\n          resource: this.model.collection.collectionName,\n          action: 'update',\n          data: req.body,\n          currentResource: resource,\n        });\n        if (!accessResult.allowed) {\n          return res.status(403).json({\n            errorCode: accessResult.reason,\n            message: 'Access Denied',\n          });\n        }\n        // Continue with the update\n        const updatedData = await this.model.findOneAndUpdate({ _id: resourceId }, req.body, {\n          new: true,\n          runValidators: true,\n        });\n        await this.cache.flush();\n        res.json(updatedData);\n      } catch (error) {\n        this.logger.error(`Error updating ${this.model.collection.collectionName}: ${error.message}`);\n        res.status(500).json({ error: error.message });\n      }\n    }\n    // Override the delete method to check ownership\n    async delete(req, res) {\n      try {\n        const resourceId = req.body._id;\n        const resource = await this.model.findById(resourceId);\n        if (!resource) {\n          return res.status(404).json({ error: 'Resource not found' });\n        }\n        // Check access using ABAC\n        const accessResult = await this.abac.checkAccess({\n          user: req.userId,\n          resource: this.model.collection.collectionName,\n          action: 'delete',\n          data: req.body,\n          currentResource: resource,\n        });\n        if (!accessResult.allowed) {\n          return res.status(403).json({\n            errorCode: accessResult.reason,\n            message: 'Access Denied',\n          });\n        }\n        // Continue with the deletion\n        await this.model.findOneAndDelete({ _id: resourceId });\n        await this.cache.flush();\n        res.status(204).send();\n      } catch (error) {\n        this.logger.error(`Error deleting ${this.model.collection.collectionName}: ${error.message}`);\n        res.status(500).json({ error: error.message });\n      }\n    }\n  }\n  return {\n    MusicController,\n  };\n});\n",
              "name": "music.controller.js",
              "size": 5679,
              "type": "source"
            },
            {
              "path": "../../src/modules/music/controllers/playlist.controller.js",
              "relativePath": "modules/music/controllers/playlist.controller.js",
              "extension": ".js",
              "content": "import music from './music.controller.js';\nexport default (function (app, db) {\n  const { MusicController } = music(app, db);\n  class PlaylistController extends MusicController {\n    constructor(app, db) {\n      super('/api/playlists', app, db, db.playlist);\n    }\n    // Add track to playlist\n    async addTrack(req, res) {\n      try {\n        const { playlistId, trackId } = req.params;\n        // Find the playlist\n        const playlist = await db.playlist.findById(playlistId);\n        if (!playlist) {\n          return res.status(404).json({ error: 'Playlist not found' });\n        }\n        // Check access using ABAC\n        const accessResult = await this.abac.checkAccess({\n          user: req.userId,\n          resource: 'playlists',\n          action: 'update',\n          currentResource: playlist,\n        });\n        if (!accessResult.allowed) {\n          return res.status(403).json({\n            errorCode: accessResult.reason,\n            message: 'Access Denied',\n          });\n        }\n        // Check if track exists\n        const track = await db.track.findById(trackId);\n        if (!track) {\n          return res.status(404).json({ error: 'Track not found' });\n        }\n        // Check if track is already in playlist\n        const trackExists = playlist.tracks.some(item => item.track.toString() === trackId);\n        if (trackExists) {\n          return res.status(400).json({ error: 'Track already in playlist' });\n        }\n        // Add track to playlist\n        playlist.tracks.push({\n          track: trackId,\n          addedAt: new Date(),\n        });\n        await playlist.save();\n        await this.cache.flush();\n        res.json(playlist);\n      } catch (error) {\n        this.logger.error(`Error adding track to playlist: ${error.message}`);\n        res.status(500).json({ error: error.message });\n      }\n    }\n    // Remove track from playlist\n    async removeTrack(req, res) {\n      try {\n        const { playlistId, trackId } = req.params;\n        // Find the playlist\n        const playlist = await db.playlist.findById(playlistId);\n        if (!playlist) {\n          return res.status(404).json({ error: 'Playlist not found' });\n        }\n        // Check access using ABAC\n        const accessResult = await this.abac.checkAccess({\n          user: req.userId,\n          resource: 'playlists',\n          action: 'update',\n          currentResource: playlist,\n        });\n        if (!accessResult.allowed) {\n          return res.status(403).json({\n            errorCode: accessResult.reason,\n            message: 'Access Denied',\n          });\n        }\n        // Remove track from playlist\n        playlist.tracks = playlist.tracks.filter(item => item.track.toString() !== trackId);\n        await playlist.save();\n        await this.cache.flush();\n        res.json(playlist);\n      } catch (error) {\n        this.logger.error(`Error removing track from playlist: ${error.message}`);\n        res.status(500).json({ error: error.message });\n      }\n    }\n    // Get user playlists\n    async getUserPlaylists(req, res) {\n      try {\n        const userId = req.params.userId || req.userId;\n        // Get playlists where user is owner or collaborator\n        const playlists = await db.playlist\n          .find({\n            $or: [{ 'owner.target': userId, 'owner.type': 'User' }, { collaborators: userId }],\n          })\n          .sort({ updatedAt: -1 });\n        res.json(playlists);\n      } catch (error) {\n        this.logger.error(`Error getting user playlists: ${error.message}`);\n        res.status(500).json({ error: error.message });\n      }\n    }\n    // Add collaborator to playlist\n    async addCollaborator(req, res) {\n      try {\n        const { playlistId, userId } = req.params;\n        // Find the playlist\n        const playlist = await db.playlist.findById(playlistId);\n        if (!playlist) {\n          return res.status(404).json({ error: 'Playlist not found' });\n        }\n        // Only owner can add collaborators\n        if (playlist.owner.target.toString() !== req.userId) {\n          return res.status(403).json({ error: 'Only playlist owner can add collaborators' });\n        }\n        // Check if user exists\n        const user = await db.mongoose.model('User').findById(userId);\n        if (!user) {\n          return res.status(404).json({ error: 'User not found' });\n        }\n        // Check if user is already a collaborator\n        if (playlist.collaborators.includes(userId)) {\n          return res.status(400).json({ error: 'User is already a collaborator' });\n        }\n        // Add collaborator\n        playlist.collaborators.push(userId);\n        playlist.isCollaborative = true;\n        await playlist.save();\n        await this.cache.flush();\n        res.json(playlist);\n      } catch (error) {\n        this.logger.error(`Error adding collaborator to playlist: ${error.message}`);\n        res.status(500).json({ error: error.message });\n      }\n    }\n  }\n  const playlistController = new PlaylistController(app, db);\n  return {\n    create: playlistController.create.bind(playlistController),\n    read: playlistController.read.bind(playlistController),\n    update: playlistController.update.bind(playlistController),\n    delete: playlistController.delete.bind(playlistController),\n    addTrack: playlistController.addTrack.bind(playlistController),\n    removeTrack: playlistController.removeTrack.bind(playlistController),\n    getUserPlaylists: playlistController.getUserPlaylists.bind(playlistController),\n    addCollaborator: playlistController.addCollaborator.bind(playlistController),\n  };\n});\n",
              "name": "playlist.controller.js",
              "size": 5587,
              "type": "source"
            },
            {
              "path": "../../src/modules/music/controllers/search.controller.js",
              "relativePath": "modules/music/controllers/search.controller.js",
              "extension": ".js",
              "content": "import Cache from '@martyrs/src/modules/globals/controllers/classes/globals.cache.js';\nimport Logger from '@martyrs/src/modules/globals/controllers/classes/globals.logger.js';\nexport default (function (app, db) {\n  const logger = new Logger(db);\n  const cache = new Cache();\n  // Search across all music entities\n  async function search(req, res) {\n    try {\n      const { query, type, limit = 10 } = req.query;\n      if (!query || query.length < 2) {\n        return res.status(400).json({ error: 'Search query must be at least 2 characters' });\n      }\n      const limitNum = parseInt(limit, 10);\n      const cacheKey = `search:${query}:${type || 'all'}:${limitNum}`;\n      // Try to get from cache first\n      let results = await cache.get(cacheKey);\n      if (!results) {\n        results = {};\n        // Create text search regex\n        const searchRegex = new RegExp(query, 'i');\n        // Filter queries based on type\n        const types = type ? [type] : ['tracks', 'albums', 'artists', 'playlists', 'genres'];\n        // Perform search for each requested type\n        if (types.includes('tracks') || types.includes('all')) {\n          results.tracks = await db.track\n            .find({\n              $or: [{ title: searchRegex }, { tags: searchRegex }],\n              status: 'published',\n              isPublic: true,\n            })\n            .limit(limitNum);\n        }\n        if (types.includes('albums') || types.includes('all')) {\n          results.albums = await db.album\n            .find({\n              $or: [{ title: searchRegex }, { description: searchRegex }, { tags: searchRegex }],\n              status: 'published',\n              isPublic: true,\n            })\n            .limit(limitNum);\n        }\n        if (types.includes('artists') || types.includes('all')) {\n          results.artists = await db.artist\n            .find({\n              $or: [{ name: searchRegex }, { bio: searchRegex }, { tags: searchRegex }],\n              status: 'published',\n            })\n            .limit(limitNum);\n        }\n        if (types.includes('playlists') || types.includes('all')) {\n          results.playlists = await db.playlist\n            .find({\n              $or: [{ title: searchRegex }, { description: searchRegex }, { tags: searchRegex }],\n              isPublic: true,\n            })\n            .limit(limitNum);\n        }\n        if (types.includes('genres') || types.includes('all')) {\n          results.genres = await db.genre\n            .find({\n              $or: [{ name: searchRegex }, { description: searchRegex }],\n              status: 'published',\n            })\n            .limit(limitNum);\n        }\n        // Cache results for 10 minutes\n        await cache.set(cacheKey, results, 600);\n      }\n      res.json(results);\n    } catch (error) {\n      logger.error(`Error searching: ${error.message}`);\n      res.status(500).json({ error: error.message });\n    }\n  }\n  return {\n    search,\n  };\n});\n",
              "name": "search.controller.js",
              "size": 2945,
              "type": "source"
            },
            {
              "path": "../../src/modules/music/controllers/stream.controller.js",
              "relativePath": "modules/music/controllers/stream.controller.js",
              "extension": ".js",
              "content": "import globalsabac from '@martyrs/src/modules/globals/controllers/classes/globals.abac.js';\nimport Logger from '@martyrs/src/modules/globals/controllers/classes/globals.logger.js';\nimport fs from 'fs';\nimport path from 'path';\nexport default (function (app, db, publicPath) {\n  const { getInstance } = globalsabac;\n  const logger = new Logger(db);\n  const abac = getInstance(db);\n  // Stream track audio\n  async function streamAudio(req, res) {\n    try {\n      const trackId = req.params.trackId;\n      // Find track\n      const track = await db.track.findById(trackId);\n      if (!track) {\n        return res.status(404).json({ error: 'Track not found' });\n      }\n      // Check access using ABAC\n      const accessResult = await abac.checkAccess({\n        user: req.userId,\n        resource: 'tracks',\n        action: 'read',\n        currentResource: track,\n      });\n      if (!accessResult.allowed && !track.isPublic) {\n        return res.status(403).json({\n          errorCode: accessResult.reason,\n          message: 'Access Denied',\n        });\n      }\n      // Extract file path from fileUrl\n      const fileUrl = track.fileUrl;\n      console.log('public is', publicPath);\n      const filePath = path.join(publicPath, fileUrl);\n      // Check if file exists\n      if (!fs.existsSync(filePath)) {\n        logger.error(`File not found: ${filePath}`);\n        return res.status(404).json({ error: 'Audio file not found' });\n      }\n      // Get file stats\n      const stat = fs.statSync(filePath);\n      const fileSize = stat.size;\n      const range = req.headers.range;\n      // Log play history if user is authenticated\n      if (req.userId) {\n        try {\n          await db.playHistory.create({\n            user: req.userId,\n            track: trackId,\n            playedAt: new Date(),\n            deviceInfo: req.headers['user-agent'],\n            playedFrom: req.query.from || 'other',\n            contextId: req.query.contextId || null,\n          });\n          // Increment playCount\n          await db.track.findByIdAndUpdate(trackId, { $inc: { playCount: 1 } });\n        } catch (error) {\n          logger.error(`Error logging play history: ${error.message}`);\n        }\n      }\n      // Handle range requests for audio streaming\n      if (range) {\n        const parts = range.replace(/bytes=/, '').split('-');\n        const start = parseInt(parts[0], 10);\n        const end = parts[1] ? parseInt(parts[1], 10) : fileSize - 1;\n        const chunksize = end - start + 1;\n        const file = fs.createReadStream(filePath, { start, end });\n        res.writeHead(206, {\n          'Content-Range': `bytes ${start}-${end}/${fileSize}`,\n          'Accept-Ranges': 'bytes',\n          'Content-Length': chunksize,\n          'Content-Type': 'audio/mpeg',\n        });\n        file.pipe(res);\n      } else {\n        res.writeHead(200, {\n          'Content-Length': fileSize,\n          'Content-Type': 'audio/mpeg',\n        });\n        fs.createReadStream(filePath).pipe(res);\n      }\n    } catch (error) {\n      logger.error(`Error streaming audio: ${error.message}`);\n      res.status(500).json({ error: error.message });\n    }\n  }\n  return {\n    streamAudio,\n  };\n});\n",
              "name": "stream.controller.js",
              "size": 3176,
              "type": "source"
            }
          ]
        },
        "models": {
          "_files": [
            {
              "path": "../../src/modules/music/models/album.model.js",
              "relativePath": "modules/music/models/album.model.js",
              "extension": ".js",
              "content": "import applyCommonSchema from '@martyrs/src/modules/globals/models/schemas/common.schema.js';\nimport applyEngagementSchema from '@martyrs/src/modules/globals/models/schemas/engagement.schema.js';\nimport applyMetadataSchema from '@martyrs/src/modules/globals/models/schemas/metadata.schema.js';\nimport applyOwnershipSchema from '@martyrs/src/modules/globals/models/schemas/ownership.schema.js';\nexport default (function (db) {\n  const albumSchema = new db.mongoose.Schema(\n    {\n      title: {\n        type: String,\n        required: true,\n      },\n      description: {\n        type: String,\n        default: '',\n      },\n      releaseDate: {\n        type: Date,\n        required: true,\n      },\n      coverArt: {\n        type: String,\n        default: null,\n      },\n      artists: [\n        {\n          type: db.mongoose.Schema.Types.ObjectId,\n          ref: 'Artist',\n          required: true,\n        },\n      ],\n      type: {\n        type: String,\n        enum: ['album', 'single', 'EP', 'compilation'],\n        default: 'album',\n      },\n      genres: [\n        {\n          type: db.mongoose.Schema.Types.ObjectId,\n          ref: 'Genre',\n        },\n      ],\n      totalTracks: {\n        type: Number,\n        default: 0,\n      },\n    },\n    {\n      timestamps: true,\n      versionKey: false,\n    }\n  );\n  // Apply global schemas\n  applyOwnershipSchema(albumSchema, db);\n  applyMetadataSchema(albumSchema, db);\n  applyCommonSchema(albumSchema, db);\n  applyEngagementSchema(albumSchema, db);\n  // Indexing\n  albumSchema.index({ title: 'text', description: 'text' });\n  albumSchema.index({ artists: 1 });\n  albumSchema.index({ releaseDate: -1 });\n  albumSchema.index({ type: 1 });\n  albumSchema.index({ genres: 1 });\n  return db.mongoose.models.Album || db.mongoose.model('Album', albumSchema);\n});\n",
              "name": "album.model.js",
              "size": 1802,
              "type": "source"
            },
            {
              "path": "../../src/modules/music/models/artist.model.js",
              "relativePath": "modules/music/models/artist.model.js",
              "extension": ".js",
              "content": "import applyCommonSchema from '@martyrs/src/modules/globals/models/schemas/common.schema.js';\nimport applyEngagementSchema from '@martyrs/src/modules/globals/models/schemas/engagement.schema.js';\nimport applyMetadataSchema from '@martyrs/src/modules/globals/models/schemas/metadata.schema.js';\nimport applyOwnershipSchema from '@martyrs/src/modules/globals/models/schemas/ownership.schema.js';\nimport applySocialsSchema from '@martyrs/src/modules/globals/models/schemas/socials.schema.js';\nexport default (function (db) {\n  const mongoose = db.mongoose;\n  const Schema = mongoose.Schema;\n  const ArtistSchema = new Schema(\n    {\n      name: {\n        type: String,\n        required: true,\n        trim: true,\n      },\n      bio: {\n        type: String,\n        trim: true,\n      },\n      photoUrl: {\n        type: String,\n      },\n      coverUrl: {\n        type: String,\n      },\n      genre: [\n        {\n          type: Schema.Types.ObjectId,\n          ref: 'Genre',\n        },\n      ],\n      isVerified: {\n        type: Boolean,\n        default: false,\n      },\n      website: {\n        type: String,\n        trim: true,\n      },\n      location: {\n        type: String,\n        trim: true,\n      },\n      popularity: {\n        type: Number,\n        default: 0,\n      },\n    },\n    {\n      timestamps: true,\n      versionKey: false,\n    }\n  );\n  // Apply common schemas\n  applyCommonSchema(ArtistSchema, db);\n  applyMetadataSchema(ArtistSchema, db);\n  applyOwnershipSchema(ArtistSchema, db);\n  applySocialsSchema(ArtistSchema, db);\n  applyEngagementSchema(ArtistSchema, db);\n  // Create indexes\n  ArtistSchema.index({ name: 'text', bio: 'text' });\n  ArtistSchema.index({ popularity: -1 });\n  ArtistSchema.index({ isVerified: 1 });\n  return mongoose.models.Artist || mongoose.model('Artist', ArtistSchema);\n});\n",
              "name": "artist.model.js",
              "size": 1811,
              "type": "source"
            },
            {
              "path": "../../src/modules/music/models/genre.model.js",
              "relativePath": "modules/music/models/genre.model.js",
              "extension": ".js",
              "content": "import applyCommonSchema from '@martyrs/src/modules/globals/models/schemas/common.schema.js';\nimport applyMetadataSchema from '@martyrs/src/modules/globals/models/schemas/metadata.schema.js';\nexport default (function (db) {\n  const mongoose = db.mongoose;\n  const Schema = mongoose.Schema;\n  const GenreSchema = new Schema(\n    {\n      name: {\n        type: String,\n        required: true,\n        trim: true,\n        unique: true,\n      },\n      description: {\n        type: String,\n        trim: true,\n      },\n      iconUrl: {\n        type: String,\n      },\n      popularity: {\n        type: Number,\n        default: 0,\n      },\n    },\n    {\n      timestamps: true,\n      versionKey: false,\n    }\n  );\n  // Apply common schemas\n  applyCommonSchema(GenreSchema, db);\n  applyMetadataSchema(GenreSchema, db);\n  // Create indexes\n  GenreSchema.index({ name: 'text', description: 'text' });\n  GenreSchema.index({ popularity: -1 });\n  return mongoose.models.Genre || mongoose.model('Genre', GenreSchema);\n});\n",
              "name": "genre.model.js",
              "size": 1006,
              "type": "source"
            },
            {
              "path": "../../src/modules/music/models/play-history.model.js",
              "relativePath": "modules/music/models/play-history.model.js",
              "extension": ".js",
              "content": "export default (function (db) {\n  const mongoose = db.mongoose;\n  const Schema = mongoose.Schema;\n  const PlayHistorySchema = new Schema(\n    {\n      user: {\n        type: Schema.Types.ObjectId,\n        ref: 'User',\n        required: true,\n      },\n      track: {\n        type: Schema.Types.ObjectId,\n        ref: 'Track',\n        required: true,\n      },\n      playedAt: {\n        type: Date,\n        default: Date.now,\n      },\n      playDuration: {\n        type: Number,\n        default: 0,\n      },\n      playedFrom: {\n        type: String,\n        enum: ['playlist', 'album', 'search', 'recommendation', 'artist', 'other'],\n        default: 'other',\n      },\n      contextId: {\n        type: Schema.Types.ObjectId,\n        refPath: 'playedFrom',\n      },\n      deviceInfo: {\n        type: String,\n      },\n      location: {\n        type: String,\n      },\n    },\n    {\n      timestamps: true,\n      versionKey: false,\n    }\n  );\n  // Create indexes\n  PlayHistorySchema.index({ user: 1, playedAt: -1 });\n  PlayHistorySchema.index({ track: 1 });\n  PlayHistorySchema.index({ playedAt: -1 });\n  return mongoose.models.PlayHistory || mongoose.model('PlayHistory', PlayHistorySchema);\n});\n",
              "name": "play-history.model.js",
              "size": 1187,
              "type": "source"
            },
            {
              "path": "../../src/modules/music/models/playlist.model.js",
              "relativePath": "modules/music/models/playlist.model.js",
              "extension": ".js",
              "content": "import applyCommonSchema from '@martyrs/src/modules/globals/models/schemas/common.schema.js';\nimport applyEngagementSchema from '@martyrs/src/modules/globals/models/schemas/engagement.schema.js';\nimport applyMetadataSchema from '@martyrs/src/modules/globals/models/schemas/metadata.schema.js';\nimport applyOwnershipSchema from '@martyrs/src/modules/globals/models/schemas/ownership.schema.js';\nexport default (function (db) {\n  const mongoose = db.mongoose;\n  const Schema = mongoose.Schema;\n  const PlaylistSchema = new Schema(\n    {\n      title: {\n        type: String,\n        required: true,\n        trim: true,\n      },\n      description: {\n        type: String,\n        trim: true,\n      },\n      coverUrl: {\n        type: String,\n      },\n      tracks: [\n        {\n          track: {\n            type: Schema.Types.ObjectId,\n            ref: 'Track',\n          },\n          addedAt: {\n            type: Date,\n            default: Date.now,\n          },\n        },\n      ],\n      isPublic: {\n        type: Boolean,\n        default: true,\n      },\n      followers: {\n        type: Number,\n        default: 0,\n      },\n      isCollaborative: {\n        type: Boolean,\n        default: false,\n      },\n      collaborators: [\n        {\n          type: Schema.Types.ObjectId,\n          ref: 'User',\n        },\n      ],\n    },\n    {\n      timestamps: true,\n      versionKey: false,\n    }\n  );\n  // Apply common schemas\n  applyCommonSchema(PlaylistSchema, db);\n  applyMetadataSchema(PlaylistSchema, db);\n  applyOwnershipSchema(PlaylistSchema, db);\n  applyEngagementSchema(PlaylistSchema, db);\n  // Create indexes\n  PlaylistSchema.index({ title: 'text', description: 'text' });\n  PlaylistSchema.index({ isPublic: 1 });\n  PlaylistSchema.index({ followers: -1 });\n  PlaylistSchema.index({ 'tracks.addedAt': -1 });\n  return mongoose.models.Playlist || mongoose.model('Playlist', PlaylistSchema);\n});\n",
              "name": "playlist.model.js",
              "size": 1894,
              "type": "source"
            },
            {
              "path": "../../src/modules/music/models/track.model.js",
              "relativePath": "modules/music/models/track.model.js",
              "extension": ".js",
              "content": "import createFriendlyURL from '@martyrs/src/modules/globals/controllers/utils/seo-friendly-url.js';\nimport applyCommonSchema from '@martyrs/src/modules/globals/models/schemas/common.schema.js';\nimport applyEngagementSchema from '@martyrs/src/modules/globals/models/schemas/engagement.schema.js';\nimport applyMetadataSchema from '@martyrs/src/modules/globals/models/schemas/metadata.schema.js';\nimport applyOwnershipSchema from '@martyrs/src/modules/globals/models/schemas/ownership.schema.js';\nexport default (function (db) {\n  const mongoose = db.mongoose;\n  const Schema = mongoose.Schema;\n  const TrackSchema = new Schema(\n    {\n      title: {\n        type: String,\n        required: true,\n        trim: true,\n      },\n      artist: {\n        type: Schema.Types.ObjectId,\n        ref: 'Artist',\n        required: true,\n      },\n      album: {\n        type: Schema.Types.ObjectId,\n        ref: 'Album',\n      },\n      duration: {\n        type: Number,\n        default: 0,\n      },\n      fileUrl: {\n        type: String,\n        required: true,\n      },\n      coverUrl: {\n        type: String,\n      },\n      genre: [\n        {\n          type: Schema.Types.ObjectId,\n          ref: 'Genre',\n        },\n      ],\n      releaseDate: {\n        type: Date,\n        default: Date.now,\n      },\n      isExplicit: {\n        type: Boolean,\n        default: false,\n      },\n      lyrics: {\n        type: String,\n      },\n      playCount: {\n        type: Number,\n        default: 0,\n      },\n      isPublic: {\n        type: Boolean,\n        default: true,\n      },\n    },\n    {\n      timestamps: true,\n      versionKey: false,\n    }\n  );\n  // Apply common schemas\n  applyCommonSchema(TrackSchema, db);\n  applyMetadataSchema(TrackSchema, db);\n  applyOwnershipSchema(TrackSchema, db);\n  applyEngagementSchema(TrackSchema, db);\n  // Create indexes for efficient querying\n  TrackSchema.index({ title: 'text' });\n  TrackSchema.index({ artist: 1 });\n  TrackSchema.index({ album: 1 });\n  TrackSchema.index({ releaseDate: -1 });\n  TrackSchema.index({ playCount: -1 });\n  // Pre-save middleware to create a URL if not provided\n  TrackSchema.pre('save', function (next) {\n    if (!this.url) {\n      this.url = createFriendlyURL(`${this.title}-${this._id}`);\n    }\n    next();\n  });\n  // Virtual for artist name (useful for APIs)\n  TrackSchema.virtual('artistName').get(function () {\n    return this.artist ? this.artist.name : '';\n  });\n  return mongoose.models.Track || mongoose.model('Track', TrackSchema);\n});\n",
              "name": "track.model.js",
              "size": 2493,
              "type": "source"
            }
          ]
        },
        "_files": [
          {
            "path": "../../src/modules/music/music.client.js",
            "relativePath": "modules/music/music.client.js",
            "extension": ".js",
            "content": "// Store modules\nimport * as storeAlbums from './store/albums.js';\nimport * as storeArtists from './store/artists.js';\nimport * as storePlayer from './store/player.js';\nimport * as storePlaylists from './store/playlists.js';\nimport * as storeSearch from './store/search.js';\nimport * as storeTracks from './store/tracks.js';\n\n// Router\nimport routerMusic from './router/music.js';\n\n// Layouts\nimport MusicLayout from './components/layouts/MusicLayout.vue';\n\n// Pages\nimport AlbumDetail from './components/pages/AlbumDetail.vue';\nimport ArtistDetail from './components/pages/ArtistDetail.vue';\nimport MusicHome from './components/pages/MusicHome.vue';\nimport MusicLibrary from './components/pages/MusicLibrary.vue';\nimport MusicUpload from './components/pages/MusicUpload.vue';\nimport PlaylistDetail from './components/pages/PlaylistDetail.vue';\nimport SearchResults from './components/pages/SearchResults.vue';\nimport TrackDetail from './components/pages/TrackDetail.vue';\n\n// Components - Player\nimport MusicPlayer from './components/player/MusicPlayer.vue';\nimport TrackProgress from './components/player/TrackProgress.vue';\nimport VolumeControl from './components/player/VolumeControl.vue';\n\n// Components - Cards\nimport AlbumCard from './components/cards/AlbumCard.vue';\nimport ArtistCard from './components/cards/ArtistCard.vue';\nimport PlaylistCard from './components/cards/PlaylistCard.vue';\nimport TrackCard from './components/cards/TrackCard.vue';\n\n// Components - Lists\nimport AlbumList from './components/lists/AlbumList.vue';\nimport ArtistList from './components/lists/ArtistList.vue';\nimport PlaylistList from './components/lists/PlaylistList.vue';\nimport TrackList from './components/lists/TrackList.vue';\n\n// Components - Forms\nimport PlaylistForm from './components/forms/PlaylistForm.vue';\nimport SearchForm from './components/forms/SearchForm.vue';\nimport UploadForm from './components/forms/UploadForm.vue';\n\n// WebSocket integration for streaming\nimport globalWebSocket from '@martyrs/src/modules/globals/views/classes/globals.websocket.js';\n\n/**\n * Initialize Music module on client-side\n * @param {Object} app - Vue app instance\n * @param {Object} store - Global store instance\n * @param {Object} router - Vue router instance\n * @param {Object} config - Configuration options\n * @param {Object} options - Additional options\n */\nfunction initializeMusic(app, store, router, config, options = {}) {\n  const route = options.route || 'Home';\n\n  // Register routes\n  router.addRoute(route, routerMusic);\n\n  // Register store modules\n  store.addStore('tracks', storeTracks);\n  store.addStore('playlists', storePlaylists);\n  store.addStore('albums', storeAlbums);\n  store.addStore('artists', storeArtists);\n  store.addStore('player', storePlayer);\n  store.addStore('search', storeSearch);\n\n  // Set up WebSocket subscription for music streaming\n  if (options.enableStreaming !== false && app.config.globalProperties.WSS_URL) {\n    globalWebSocket.initialize({\n      wsUrl: app.config.globalProperties.WSS_URL,\n      maxReconnectAttempts: 10,\n      reconnectDelay: 2000,\n    });\n\n    // Subscribe to music streaming module when authenticated\n    if (options.userId) {\n      globalWebSocket\n        .connect(options.userId)\n        .then(() => {\n          globalWebSocket.subscribeModule('music-streaming');\n        })\n        .catch(err => {\n          console.error('Failed to connect to WebSocket for music streaming:', err);\n        });\n    }\n  }\n\n  // Register global components if needed\n  app.component('MusicPlayer', MusicPlayer);\n}\n\n// Module export\nconst ModuleMusic = {\n  initialize: initializeMusic,\n  views: {\n    store: {\n      storeTracks,\n      storePlaylists,\n      storeAlbums,\n      storeArtists,\n      storePlayer,\n      storeSearch,\n    },\n    router: {\n      routerMusic,\n    },\n    components: {\n      // Layouts\n      MusicLayout,\n      // Pages\n      MusicHome,\n      SearchResults,\n      ArtistDetail,\n      AlbumDetail,\n      PlaylistDetail,\n      TrackDetail,\n      MusicLibrary,\n      MusicUpload,\n      // Player Components\n      MusicPlayer,\n      TrackProgress,\n      VolumeControl,\n      // Cards\n      TrackCard,\n      AlbumCard,\n      PlaylistCard,\n      ArtistCard,\n      // Lists\n      TrackList,\n      AlbumList,\n      PlaylistList,\n      ArtistList,\n      // Forms\n      PlaylistForm,\n      SearchForm,\n      UploadForm,\n    },\n  },\n};\n\n// Named exports for direct component imports\nexport {\n  AlbumCard,\n  AlbumDetail,\n  AlbumList,\n  ArtistCard,\n  ArtistDetail,\n  ArtistList,\n  // Pages\n  MusicHome,\n  // Layout\n  MusicLayout,\n  MusicLibrary,\n  // Player Components\n  MusicPlayer,\n  MusicUpload,\n  PlaylistCard,\n  PlaylistDetail,\n  // Forms\n  PlaylistForm,\n  PlaylistList,\n  SearchForm,\n  SearchResults,\n  // Cards\n  TrackCard,\n  TrackDetail,\n  // Lists\n  TrackList,\n  TrackProgress,\n  UploadForm,\n  VolumeControl,\n  // Router\n  routerMusic,\n  storeAlbums,\n  storeArtists,\n  storePlayer,\n  storePlaylists,\n  storeSearch,\n  // Store modules\n  storeTracks,\n};\n\n// Default export\nexport default ModuleMusic;\n",
            "name": "music.client.js",
            "size": 5057,
            "type": "source"
          },
          {
            "path": "../../src/modules/music/music.server.js",
            "relativePath": "modules/music/music.server.js",
            "extension": ".js",
            "content": "import globalsabac from '@martyrs/src/modules/globals/controllers/classes/globals.abac.js';\nimport Cache from '@martyrs/src/modules/globals/controllers/classes/globals.cache.js';\nimport Logger from '@martyrs/src/modules/globals/controllers/classes/globals.logger.js';\nimport globalswebsocket from '@martyrs/src/modules/globals/controllers/classes/globals.websocket.js';\nimport AlbumController from './controllers/album.controller.js';\nimport ArtistController from './controllers/artist.controller.js';\nimport GenreController from './controllers/genre.controller.js';\nimport MusicController from './controllers/music.controller.js';\nimport PlaylistController from './controllers/playlist.controller.js';\nimport SearchController from './controllers/search.controller.js';\nimport StreamController from './controllers/stream.controller.js';\nimport AlbumModel from './models/album.model.js';\nimport ArtistModel from './models/artist.model.js';\nimport GenreModel from './models/genre.model.js';\nimport PlayHistoryModel from './models/play-history.model.js';\nimport PlaylistModel from './models/playlist.model.js';\nimport TrackModel from './models/track.model.js';\nimport musicPolicies from './policies/music.policies.js';\nimport albumRoutes from './routes/album.routes.js';\nimport artistRoutes from './routes/artist.routes.js';\nimport genreRoutes from './routes/genre.routes.js';\nimport musicRoutes from './routes/music.routes.js';\nimport playlistRoutes from './routes/playlist.routes.js';\nimport searchRoutes from './routes/search.routes.js';\nimport streamRoutes from './routes/stream.routes.js';\nimport StreamingHandler from './websocket/streaming.handler.js';\n/**\n * Initialize the Music module\n * @param {Object} app - Express application instance\n * @param {Object} db - Database connection object\n * @param {Array} origins - CORS allowed origins\n * @param {String} publicPath - Path to public files\n */\nfunction initializeMusic({ app, db, wss, origins, publicPath }) {\n  // Register models in the database object\n  db.track = TrackModel(db);\n  db.playlist = PlaylistModel(db);\n  db.album = AlbumModel(db);\n  db.artist = ArtistModel(db);\n  db.genre = GenreModel(db);\n  db.playHistory = PlayHistoryModel(db);\n  console.log('server publioc is', publicPath);\n  // Set up routes if app is provided\n  if (app) {\n    musicRoutes(app, db, origins, publicPath);\n    playlistRoutes(app, db, origins, publicPath);\n    albumRoutes(app, db, origins, publicPath);\n    artistRoutes(app, db, origins, publicPath);\n    streamRoutes(app, db, origins, publicPath);\n    searchRoutes(app, db, origins, publicPath);\n    genreRoutes(app, db, origins, publicPath);\n  }\n  // Initialize ABAC policies for music module\n  const { getInstance } = globalsabac;\n  const abac = getInstance(db);\n  musicPolicies(abac);\n  // Set up WebSocket handlers if WebSocketManager is available\n  const { WebSocketManager } = globalswebsocket;\n  if (global.webSocketManager && global.webSocketManager instanceof WebSocketManager) {\n    global.webSocketManager.registerModule('music-streaming', StreamingHandler(db).handleStreamingMessage);\n  }\n  const musicCache = new Cache({ ttlSeconds: 60 * 15 }); // 15 minute cache\n  const musicLogger = new Logger(db);\n  // Log module initialization\n  musicLogger.info('Music module initialized');\n}\nexport const models = {\n  TrackModel,\n  PlaylistModel,\n  AlbumModel,\n  ArtistModel,\n  GenreModel,\n  PlayHistoryModel,\n};\nexport const routes = {\n  musicRoutes,\n  playlistRoutes,\n  albumRoutes,\n  artistRoutes,\n  streamRoutes,\n  searchRoutes,\n  genreRoutes,\n};\nexport const controllers = {\n  MusicController,\n  PlaylistController,\n  AlbumController,\n  ArtistController,\n  StreamController,\n  SearchController,\n  GenreController,\n};\nexport { initializeMusic as initialize };\nexport default {\n  initialize: initializeMusic,\n  models,\n  routes,\n  controllers,\n};\n",
            "name": "music.server.js",
            "size": 3852,
            "type": "source"
          }
        ],
        "policies": {
          "_files": [
            {
              "path": "../../src/modules/music/policies/music.policies.js",
              "relativePath": "modules/music/policies/music.policies.js",
              "extension": ".js",
              "content": "export default (function initializeMusicPolicies(abacAccessControl) {\n  // Policy for handling music resource ownership\n  abacAccessControl.registerResourcePolicy('tracks', async context => {\n    const { user, action, currentResource, resourceModel } = context;\n    const ObjectId = abacAccessControl.db.mongoose.Types.ObjectId;\n    // Allow public read access for published tracks\n    if (action === 'read' && currentResource?.status === 'published' && currentResource?.isPublic === true) {\n      return true;\n    }\n    // For create actions, verify ownership\n    if (action === 'create') {\n      // Ensure that creator.target matches the authenticated user\n      if (context.data.creator && context.data.creator.target) {\n        return context.data.creator.target.toString() === user.toString();\n      }\n      return false;\n    }\n    // For update and delete, verify ownership\n    if (['update', 'edit', 'delete'].includes(action) && currentResource) {\n      // If the resource has an organization owner, check if user belongs to that organization\n      if (currentResource.owner && currentResource.owner.type === 'Organization') {\n        // Here you would typically check if the user is part of the organization\n        // This would require a query to the organization's members\n        const Organization = abacAccessControl.db.organization;\n        const org = await Organization.findOne({\n          _id: currentResource.owner.target,\n          members: { $elemMatch: { user: new ObjectId(user) } },\n        });\n        if (org) return true;\n      }\n      // Check if the user is the creator\n      if (currentResource.creator && currentResource.creator.target && currentResource.creator.target.toString() === user.toString()) {\n        return true;\n      }\n      return false;\n    }\n    // Default access denied\n    return false;\n  });\n  // Apply the same policies to albums\n  abacAccessControl.registerResourcePolicy('albums', async context => {\n    // Reuse the track policy logic\n    return abacAccessControl.policies.resources.tracks(context);\n  });\n  // Apply the same policies to playlists\n  abacAccessControl.registerResourcePolicy('playlists', async context => {\n    const { user, action, currentResource } = context;\n    // Special case for collaborative playlists\n    if (currentResource && currentResource.isCollaborative && currentResource.collaborators && currentResource.collaborators.some(collaborator => collaborator.toString() === user.toString())) {\n      // Collaborators can edit but not delete\n      if (action === 'edit' || action === 'update') {\n        return true;\n      }\n    }\n    // For other cases, reuse the track policy logic\n    return abacAccessControl.policies.resources.tracks(context);\n  });\n  // Apply the same policies to artists\n  abacAccessControl.registerResourcePolicy('artists', async context => {\n    // Reuse the track policy logic\n    return abacAccessControl.policies.resources.tracks(context);\n  });\n  return abacAccessControl;\n});\n",
              "name": "music.policies.js",
              "size": 2988,
              "type": "source"
            }
          ]
        },
        "router": {
          "_files": [
            {
              "path": "../../src/modules/music/router/music.js",
              "relativePath": "modules/music/router/music.js",
              "extension": ".js",
              "content": "// router/music.js\nexport default {\n  path: 'music',\n  component: () => import('../components/layouts/MusicLayout.vue'),\n  children: [\n    {\n      path: '',\n      name: 'music-home',\n      component: () => import('../components/pages/MusicHome.vue'),\n      meta: {\n        title: 'Music Home',\n      },\n    },\n    {\n      path: 'search',\n      name: 'music-search',\n      component: () => import('../components/pages/SearchResults.vue'),\n      meta: {\n        title: 'Search Music',\n      },\n    },\n    {\n      path: 'library',\n      name: 'music-library',\n      component: () => import('../components/pages/MusicLibrary.vue'),\n      meta: {\n        title: 'My Library',\n        requiresAuth: true,\n      },\n    },\n    {\n      path: 'upload',\n      name: 'music-upload',\n      component: () => import('../components/pages/MusicUpload.vue'),\n      meta: {\n        title: 'Upload Music',\n        requiresAuth: true,\n      },\n    },\n    {\n      path: 'artists/:url',\n      name: 'artist-detail',\n      component: () => import('../components/pages/ArtistDetail.vue'),\n      props: true,\n      meta: {\n        title: 'Artist Details',\n      },\n    },\n    {\n      path: 'artists/create',\n      name: 'artist-create',\n      component: () => import('../components/pages/ArtistForm.vue'),\n      meta: {\n        title: 'Create Artist',\n        requiresAuth: true,\n      },\n    },\n    {\n      path: 'artists/:id/edit',\n      name: 'artist-edit',\n      component: () => import('../components/pages/ArtistForm.vue'),\n      props: route => ({ isEditMode: true, artistId: route.params.id }),\n      meta: {\n        title: 'Edit Artist',\n        requiresAuth: true,\n      },\n    },\n    {\n      path: 'albums/:url',\n      name: 'album-detail',\n      component: () => import('../components/pages/AlbumDetail.vue'),\n      props: true,\n      meta: {\n        title: 'Album Details',\n      },\n    },\n    {\n      path: 'playlists/:url',\n      name: 'playlist-detail',\n      component: () => import('../components/pages/PlaylistDetail.vue'),\n      props: true,\n      meta: {\n        title: 'Playlist Details',\n      },\n    },\n    {\n      path: 'tracks/:url',\n      name: 'track-detail',\n      component: () => import('../components/pages/TrackDetail.vue'),\n      props: true,\n      meta: {\n        title: 'Track Details',\n      },\n    },\n  ],\n};\n",
              "name": "music.js",
              "size": 2321,
              "type": "source"
            }
          ]
        },
        "routes": {
          "_files": [
            {
              "path": "../../src/modules/music/routes/album.routes.js",
              "relativePath": "modules/music/routes/album.routes.js",
              "extension": ".js",
              "content": "import middlewareFactoryAuth from '@martyrs/src/modules/auth/controllers/middlewares/index.js';\nimport album from '../controllers/album.controller.js';\nexport default (function (app, db, origins, publicPath) {\n  const controller = album(app, db);\n  const { authJwt } = middlewareFactoryAuth(db);\n  // CRUD operations for albums\n  app.post('/api/albums/create', [authJwt.verifyToken], controller.create);\n  app.get('/api/albums/read', controller.read);\n  app.put('/api/albums/update', [authJwt.verifyToken], controller.update);\n  app.delete('/api/albums/delete', [authJwt.verifyToken], controller.delete);\n  // Get album tracks\n  app.get('/api/albums/:albumId/tracks', controller.getAlbumTracks);\n  // Get featured albums\n  app.get('/api/albums/featured', controller.getFeaturedAlbums);\n  // Get album by URL\n  app.get('/api/albums/url/:url', async (req, res) => {\n    try {\n      const album = await db.album.findOne({ url: req.params.url }).populate('artist');\n      if (!album) {\n        return res.status(404).json({ error: 'Album not found' });\n      }\n      res.json(album);\n    } catch (error) {\n      console.error(error);\n      res.status(500).json({ error: error.message });\n    }\n  });\n});\n",
              "name": "album.routes.js",
              "size": 1200,
              "type": "source"
            },
            {
              "path": "../../src/modules/music/routes/artist.routes.js",
              "relativePath": "modules/music/routes/artist.routes.js",
              "extension": ".js",
              "content": "import middlewareFactoryAuth from '@martyrs/src/modules/auth/controllers/middlewares/index.js';\nimport artist from '../controllers/artist.controller.js';\nexport default (function (app, db, origins, publicPath) {\n  const controller = artist(app, db);\n  const { authJwt } = middlewareFactoryAuth(db);\n  // CRUD operations for artists\n  app.post('/api/artists/create', [authJwt.verifyToken], controller.create);\n  app.get('/api/artists/read', controller.read);\n  app.put('/api/artists/update', [authJwt.verifyToken], controller.update);\n  app.delete('/api/artists/delete', [authJwt.verifyToken], controller.delete);\n  // Get artist discography\n  app.get('/api/artists/:artistId/discography', controller.getDiscography);\n  // Verify artist (admin only)\n  app.put('/api/artists/:artistId/verify', [authJwt.verifyToken, authJwt.isAdmin], controller.verifyArtist);\n  // Get related artists\n  app.get('/api/artists/:artistId/related', controller.getRelatedArtists);\n  // Get artist by URL\n  app.get('/api/artists/url/:url', async (req, res) => {\n    try {\n      const artist = await db.artist.findOne({ url: req.params.url });\n      if (!artist) {\n        return res.status(404).json({ error: 'Artist not found' });\n      }\n      res.json(artist);\n    } catch (error) {\n      console.error(error);\n      res.status(500).json({ error: error.message });\n    }\n  });\n});\n",
              "name": "artist.routes.js",
              "size": 1360,
              "type": "source"
            },
            {
              "path": "../../src/modules/music/routes/genre.routes.js",
              "relativePath": "modules/music/routes/genre.routes.js",
              "extension": ".js",
              "content": "import middlewareFactoryAuth from '@martyrs/src/modules/auth/controllers/middlewares/index.js';\nimport genre from '../controllers/genre.controller.js';\nexport default (function (app, db, origins, publicPath) {\n  const controller = genre(app, db);\n  const { authJwt } = middlewareFactoryAuth(db);\n  // CRUD operations for genres\n  app.post('/api/genres/create', [authJwt.verifyToken, authJwt.isAdmin], controller.create);\n  app.get('/api/genres/read', controller.read);\n  app.put('/api/genres/update', [authJwt.verifyToken, authJwt.isAdmin], controller.update);\n  app.delete('/api/genres/delete', [authJwt.verifyToken, authJwt.isAdmin], controller.delete);\n  // Get tracks by genre\n  app.get('/api/genres/:genreId/tracks', controller.getGenreTracks);\n  // Get popular genres\n  app.get('/api/genres/popular', controller.getPopularGenres);\n  // Get genre by URL\n  app.get('/api/genres/url/:url', async (req, res) => {\n    try {\n      const genre = await db.genre.findOne({ url: req.params.url });\n      if (!genre) {\n        return res.status(404).json({ error: 'Genre not found' });\n      }\n      res.json(genre);\n    } catch (error) {\n      console.error(error);\n      res.status(500).json({ error: error.message });\n    }\n  });\n});\n",
              "name": "genre.routes.js",
              "size": 1232,
              "type": "source"
            },
            {
              "path": "../../src/modules/music/routes/music.routes.js",
              "relativePath": "modules/music/routes/music.routes.js",
              "extension": ".js",
              "content": "import middlewareFactoryAuth from '@martyrs/src/modules/auth/controllers/middlewares/index.js';\nimport globalsabac from '@martyrs/src/modules/globals/controllers/classes/globals.abac.js';\nimport controllerFactory from '../controllers/music.controller.js';\n// ABAC\nconst { getInstance } = globalsabac;\nexport default (function (app, db, origins, publicPath) {\n  const { MusicController } = controllerFactory(app, db);\n  const { authJwt } = middlewareFactoryAuth(db);\n  const controller = new MusicController('/api/tracks', app, db, db.track, {\n    disableDefaultRoutes: true,\n  });\n  const abac = getInstance(db);\n  // CRUD operations for tracks\n  app.post(\n    '/api/tracks/create',\n    [\n      authJwt.verifyToken(), // Auth middleware\n      (req, res, next) => {\n        // Debugging middleware\n        console.log('[Route] /api/tracks/create - Request received');\n        console.log('[Route] User ID from token:', req.userId);\n        next();\n      },\n    ],\n    controller.create.bind(controller) // Bind to ensure 'this' context\n  );\n  app.get('/api/tracks/read', controller.read.bind(controller));\n  app.put('/api/tracks/update', [authJwt.verifyToken], controller.update.bind(controller));\n  app.delete('/api/tracks/delete', [authJwt.verifyToken], controller.delete.bind(controller));\n  // Get track by URL\n  app.get('/api/tracks/url/:url', async (req, res) => {\n    try {\n      const track = await db.track.findOne({ url: req.params.url });\n      if (!track) {\n        return res.status(404).json({ error: 'Track not found' });\n      }\n      // Check access using ABAC\n      const accessResult = await abac.checkAccess({\n        user: req.userId,\n        resource: 'tracks',\n        action: 'read',\n        currentResource: track,\n      });\n      if (!accessResult.allowed && !track.isPublic) {\n        return res.status(403).json({\n          errorCode: accessResult.reason,\n          message: 'Access Denied',\n        });\n      }\n      res.json(track);\n    } catch (error) {\n      console.error(error);\n      res.status(500).json({ error: error.message });\n    }\n  });\n  // Get recent tracks\n  app.get('/api/tracks/recent', async (req, res) => {\n    try {\n      const limit = parseInt(req.query.limit) || 10;\n      const recentTracks = await db.track\n        .find({\n          status: 'published',\n          isPublic: true,\n        })\n        .sort({ createdAt: -1 })\n        .limit(limit);\n      res.json(recentTracks);\n    } catch (error) {\n      console.error(error);\n      res.status(500).json({ error: error.message });\n    }\n  });\n  // Get popular tracks\n  app.get('/api/tracks/popular', async (req, res) => {\n    try {\n      const limit = parseInt(req.query.limit) || 10;\n      const popularTracks = await db.track\n        .find({\n          status: 'published',\n          isPublic: true,\n        })\n        .sort({ playCount: -1 })\n        .limit(limit);\n      res.json(popularTracks);\n    } catch (error) {\n      console.error(error);\n      res.status(500).json({ error: error.message });\n    }\n  });\n  // Get tracks by genre\n  app.get('/api/tracks/genre/:genreId', async (req, res) => {\n    try {\n      const tracks = await db.track\n        .find({\n          genre: req.params.genreId,\n          status: 'published',\n          isPublic: true,\n        })\n        .sort({ releaseDate: -1 });\n      res.json(tracks);\n    } catch (error) {\n      console.error(error);\n      res.status(500).json({ error: error.message });\n    }\n  });\n});\n",
              "name": "music.routes.js",
              "size": 3452,
              "type": "source"
            },
            {
              "path": "../../src/modules/music/routes/playlist.routes.js",
              "relativePath": "modules/music/routes/playlist.routes.js",
              "extension": ".js",
              "content": "import middlewareFactoryAuth from '@martyrs/src/modules/auth/controllers/middlewares/index.js';\nimport playlist from '../controllers/playlist.controller.js';\nexport default (function (app, db, origins, publicPath) {\n  const controller = playlist(app, db);\n  const { authJwt } = middlewareFactoryAuth(db);\n  // CRUD operations for playlists\n  app.post('/api/playlists/create', [authJwt.verifyToken], controller.create);\n  app.get('/api/playlists/read', controller.read);\n  app.put('/api/playlists/update', [authJwt.verifyToken], controller.update);\n  app.delete('/api/playlists/delete', [authJwt.verifyToken], controller.delete);\n  // Get user playlists\n  app.get('/api/playlists/user/:userId?', [authJwt.verifyToken], controller.getUserPlaylists);\n  // Add track to playlist\n  app.post('/api/playlists/:playlistId/tracks/:trackId', [authJwt.verifyToken], controller.addTrack);\n  // Remove track from playlist\n  app.delete('/api/playlists/:playlistId/tracks/:trackId', [authJwt.verifyToken], controller.removeTrack);\n  // Add collaborator to playlist\n  app.post('/api/playlists/:playlistId/collaborators/:userId', [authJwt.verifyToken], controller.addCollaborator);\n  // Get playlist by URL\n  app.get('/api/playlists/url/:url', async (req, res) => {\n    try {\n      const playlist = await db.playlist.findOne({ url: req.params.url }).populate({\n        path: 'tracks.track',\n        select: '-lyrics',\n      });\n      if (!playlist) {\n        return res.status(404).json({ error: 'Playlist not found' });\n      }\n      // If not public, check permissions\n      if (!playlist.isPublic) {\n        // Only owner and collaborators can see private playlists\n        if (!req.userId) {\n          return res.status(403).json({ error: 'Access denied to private playlist' });\n        }\n        const isOwner = playlist.owner.target.toString() === req.userId;\n        const isCollaborator = playlist.collaborators.some(collab => collab.toString() === req.userId);\n        if (!isOwner && !isCollaborator) {\n          return res.status(403).json({ error: 'Access denied to private playlist' });\n        }\n      }\n      res.json(playlist);\n    } catch (error) {\n      console.error(error);\n      res.status(500).json({ error: error.message });\n    }\n  });\n});\n",
              "name": "playlist.routes.js",
              "size": 2247,
              "type": "source"
            },
            {
              "path": "../../src/modules/music/routes/search.routes.js",
              "relativePath": "modules/music/routes/search.routes.js",
              "extension": ".js",
              "content": "import search from '../controllers/search.controller.js';\nexport default (function (app, db, origins, publicPath) {\n  const controller = search(app, db);\n  // Search API endpoint\n  app.get('/api/music/search', controller.search);\n});\n",
              "name": "search.routes.js",
              "size": 234,
              "type": "source"
            },
            {
              "path": "../../src/modules/music/routes/stream.routes.js",
              "relativePath": "modules/music/routes/stream.routes.js",
              "extension": ".js",
              "content": "import stream from '../controllers/stream.controller.js';\nexport default (function (app, db, origins, publicPath) {\n  console.log('rouus publioc is', publicPath);\n  const controller = stream(app, db, publicPath);\n  // Stream audio\n  app.get('/api/stream/:trackId', controller.streamAudio);\n  // WaveForm data for visualization\n  app.get('/api/waveform/:trackId', async (req, res) => {\n    try {\n      const track = await db.track.findById(req.params.trackId);\n      if (!track) {\n        return res.status(404).json({ error: 'Track not found' });\n      }\n      // Check if waveform data exists (assuming it's preprocessed)\n      const waveformPath = path.join(process.env.FILE_STORAGE_PATH || './uploads', `waveforms/${track._id}.json`);\n      if (fs.existsSync(waveformPath)) {\n        const waveformData = JSON.parse(fs.readFileSync(waveformPath, 'utf8'));\n        return res.json(waveformData);\n      }\n      // If no waveform data, return error\n      res.status(404).json({ error: 'Waveform data not found' });\n    } catch (error) {\n      console.error(error);\n      res.status(500).json({ error: error.message });\n    }\n  });\n});\n",
              "name": "stream.routes.js",
              "size": 1135,
              "type": "source"
            }
          ]
        },
        "store": {
          "_files": [
            {
              "path": "../../src/modules/music/store/albums.js",
              "relativePath": "modules/music/store/albums.js",
              "extension": ".js",
              "content": "// store/albums.js\nimport Store from '@martyrs/src/modules/globals/views/classes/globals.store.js';\nimport { reactive } from 'vue';\n\n// Create store instance\nconst albumStore = new Store(`${process.env.API_URL}/api/albums`);\n\n// State\nexport const state = reactive({\n  albums: [],\n  featured: [],\n  userAlbums: [],\n  currentAlbum: null,\n  currentAlbumTracks: [],\n  isLoading: false,\n  loadingFeatured: false,\n});\n\n// Actions\nexport const actions = {\n  async fetchAlbums(options = {}) {\n    state.isLoading = true;\n    try {\n      const albums = await albumStore.read(options);\n      state.albums = albums;\n      return albums;\n    } catch (error) {\n      console.error('Error fetching albums:', error);\n      return [];\n    } finally {\n      state.isLoading = false;\n    }\n  },\n\n  async fetchFeaturedAlbums() {\n    state.loadingFeatured = true;\n    try {\n      const response = await fetch(`${process.env.API_URL}/api/albums/featured`);\n      const albums = await response.json();\n      state.featured = albums;\n      return albums;\n    } catch (error) {\n      console.error('Error fetching featured albums:', error);\n      return [];\n    } finally {\n      state.loadingFeatured = false;\n    }\n  },\n\n  async fetchAlbumByUrl(url) {\n    try {\n      const response = await fetch(`${process.env.API_URL}/api/albums/url/${url}`);\n      const album = await response.json();\n      state.currentAlbum = album;\n\n      // Fetch album tracks\n      await this.fetchAlbumTracks(album._id);\n\n      return album;\n    } catch (error) {\n      console.error('Error fetching album by URL:', error);\n      return null;\n    }\n  },\n\n  async fetchAlbumTracks(albumId) {\n    try {\n      const response = await fetch(`${process.env.API_URL}/api/albums/${albumId}/tracks`);\n      const tracks = await response.json();\n      state.currentAlbumTracks = tracks;\n      return tracks;\n    } catch (error) {\n      console.error('Error fetching album tracks:', error);\n      return [];\n    }\n  },\n\n  async createAlbum(albumData) {\n    try {\n      const createdAlbum = await albumStore.create(albumData);\n      // Update local state\n      state.albums.unshift(createdAlbum);\n      state.userAlbums.unshift(createdAlbum);\n      return createdAlbum;\n    } catch (error) {\n      console.error('Error creating album:', error);\n      throw error;\n    }\n  },\n\n  async updateAlbum(albumData) {\n    try {\n      const updatedAlbum = await albumStore.update(albumData);\n\n      // Update local state\n      const index = state.albums.findIndex(a => a._id === updatedAlbum._id);\n      if (index !== -1) {\n        state.albums[index] = updatedAlbum;\n      }\n\n      const userIndex = state.userAlbums.findIndex(a => a._id === updatedAlbum._id);\n      if (userIndex !== -1) {\n        state.userAlbums[userIndex] = updatedAlbum;\n      }\n\n      if (state.currentAlbum && state.currentAlbum._id === updatedAlbum._id) {\n        state.currentAlbum = updatedAlbum;\n      }\n\n      return updatedAlbum;\n    } catch (error) {\n      console.error('Error updating album:', error);\n      throw error;\n    }\n  },\n\n  async deleteAlbum(albumId) {\n    try {\n      await albumStore.delete({ _id: albumId });\n\n      // Update local state\n      state.albums = state.albums.filter(a => a._id !== albumId);\n      state.userAlbums = state.userAlbums.filter(a => a._id !== albumId);\n\n      if (state.currentAlbum && state.currentAlbum._id === albumId) {\n        state.currentAlbum = null;\n        state.currentAlbumTracks = [];\n      }\n\n      return true;\n    } catch (error) {\n      console.error('Error deleting album:', error);\n      throw error;\n    }\n  },\n\n  async fetchUserAlbums(userId) {\n    try {\n      const options = {\n        creator: userId,\n        limit: 100,\n      };\n\n      const albums = await albumStore.read(options);\n      state.userAlbums = albums;\n      return albums;\n    } catch (error) {\n      console.error('Error fetching user albums:', error);\n      return [];\n    }\n  },\n\n  async addTrackToAlbum(albumId, trackId) {\n    try {\n      const response = await fetch(`${process.env.API_URL}/api/tracks/${trackId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ album: albumId }),\n      });\n\n      const updatedTrack = await response.json();\n\n      // Update the current album tracks if relevant\n      if (state.currentAlbum && state.currentAlbum._id === albumId) {\n        state.currentAlbumTracks.push(updatedTrack);\n      }\n\n      return updatedTrack;\n    } catch (error) {\n      console.error('Error adding track to album:', error);\n      throw error;\n    }\n  },\n\n  async removeTrackFromAlbum(trackId) {\n    try {\n      const response = await fetch(`${process.env.API_URL}/api/tracks/${trackId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ album: null }),\n      });\n\n      const updatedTrack = await response.json();\n\n      // Update the current album tracks if relevant\n      if (state.currentAlbumTracks.some(track => track._id === trackId)) {\n        state.currentAlbumTracks = state.currentAlbumTracks.filter(track => track._id !== trackId);\n      }\n\n      return updatedTrack;\n    } catch (error) {\n      console.error('Error removing track from album:', error);\n      throw error;\n    }\n  },\n};\n",
              "name": "albums.js",
              "size": 5330,
              "type": "source"
            },
            {
              "path": "../../src/modules/music/store/artists.js",
              "relativePath": "modules/music/store/artists.js",
              "extension": ".js",
              "content": "// store/artists.js\nimport Store from '@martyrs/src/modules/globals/views/classes/globals.store.js';\nimport { reactive } from 'vue';\n\n// Create store instance\nconst artistStore = new Store(`${process.env.API_URL}/api/artists`);\n\n// State\nexport const state = reactive({\n  artists: [],\n  topArtists: [],\n  userArtists: [],\n  currentArtist: null,\n  discography: {\n    albums: [],\n    singles: [],\n  },\n  relatedArtists: [],\n  isLoading: false,\n  loadingTopArtists: false,\n});\n\n// Actions\nexport const actions = {\n  async fetchArtists(options = {}) {\n    state.isLoading = true;\n    try {\n      const artists = await artistStore.read(options);\n      state.artists = artists;\n      return artists;\n    } catch (error) {\n      console.error('Error fetching artists:', error);\n      return [];\n    } finally {\n      state.isLoading = false;\n    }\n  },\n\n  async fetchTopArtists(limit = 10) {\n    state.loadingTopArtists = true;\n    try {\n      // Assuming the backend sorts by popularity\n      const options = {\n        limit,\n        sortParam: 'popularity',\n        sortOrder: 'desc',\n        status: 'published',\n      };\n\n      const artists = await artistStore.read(options);\n      state.topArtists = artists;\n      return artists;\n    } catch (error) {\n      console.error('Error fetching top artists:', error);\n      return [];\n    } finally {\n      state.loadingTopArtists = false;\n    }\n  },\n\n  async fetchArtistByUrl(url) {\n    try {\n      const response = await fetch(`${process.env.API_URL}/api/artists/url/${url}`);\n      const artist = await response.json();\n      state.currentArtist = artist;\n\n      // Fetch artist discography\n      await this.fetchArtistDiscography(artist._id);\n\n      // Fetch related artists\n      await this.fetchRelatedArtists(artist._id);\n\n      return artist;\n    } catch (error) {\n      console.error('Error fetching artist by URL:', error);\n      return null;\n    }\n  },\n\n  async fetchArtistDiscography(artistId) {\n    try {\n      const response = await fetch(`${process.env.API_URL}/api/artists/${artistId}/discography`);\n      const discography = await response.json();\n      state.discography = {\n        albums: discography.albums || [],\n        singles: discography.singles || [],\n      };\n      return discography;\n    } catch (error) {\n      console.error('Error fetching artist discography:', error);\n      return { albums: [], singles: [] };\n    }\n  },\n\n  async fetchRelatedArtists(artistId) {\n    try {\n      const response = await fetch(`${process.env.API_URL}/api/artists/${artistId}/related`);\n      const artists = await response.json();\n      state.relatedArtists = artists;\n      return artists;\n    } catch (error) {\n      console.error('Error fetching related artists:', error);\n      return [];\n    }\n  },\n\n  async createArtist(artistData) {\n    try {\n      const createdArtist = await artistStore.create(artistData);\n      // Update local state\n      state.artists.unshift(createdArtist);\n      state.userArtists.unshift(createdArtist);\n      return createdArtist;\n    } catch (error) {\n      console.error('Error creating artist:', error);\n      throw error;\n    }\n  },\n\n  async updateArtist(artistData) {\n    try {\n      const updatedArtist = await artistStore.update(artistData);\n\n      // Update local state\n      const index = state.artists.findIndex(a => a._id === updatedArtist._id);\n      if (index !== -1) {\n        state.artists[index] = updatedArtist;\n      }\n\n      const userIndex = state.userArtists.findIndex(a => a._id === updatedArtist._id);\n      if (userIndex !== -1) {\n        state.userArtists[userIndex] = updatedArtist;\n      }\n\n      if (state.currentArtist && state.currentArtist._id === updatedArtist._id) {\n        state.currentArtist = updatedArtist;\n      }\n\n      return updatedArtist;\n    } catch (error) {\n      console.error('Error updating artist:', error);\n      throw error;\n    }\n  },\n\n  async deleteArtist(artistId) {\n    try {\n      await artistStore.delete({ _id: artistId });\n\n      // Update local state\n      state.artists = state.artists.filter(a => a._id !== artistId);\n      state.userArtists = state.userArtists.filter(a => a._id !== artistId);\n\n      if (state.currentArtist && state.currentArtist._id === artistId) {\n        state.currentArtist = null;\n      }\n\n      return true;\n    } catch (error) {\n      console.error('Error deleting artist:', error);\n      throw error;\n    }\n  },\n\n  async fetchUserArtists(userId) {\n    try {\n      const options = {\n        creator: userId,\n        limit: 100,\n      };\n\n      const artists = await artistStore.read(options);\n\n      console.log('artists is', artists);\n      state.userArtists = artists;\n      console.log('state is', state);\n      return artists;\n    } catch (error) {\n      console.error('Error fetching user artists:', error);\n      return [];\n    }\n  },\n};\n",
              "name": "artists.js",
              "size": 4823,
              "type": "source"
            },
            {
              "path": "../../src/modules/music/store/player.js",
              "relativePath": "modules/music/store/player.js",
              "extension": ".js",
              "content": "// store/player.js\nimport globalWebSocket from '@martyrs/src/modules/globals/views/classes/globals.websocket.js';\nimport { reactive } from 'vue';\n\n// State\nexport const state = reactive({\n  currentTrack: null,\n  queue: [],\n  isPlaying: false,\n  volume: 0.7,\n  muted: false,\n  currentTime: 0,\n  duration: 0,\n  repeat: 'none', // 'none', 'all', 'one'\n  shuffle: false,\n  initialQueue: [], // To keep original order when shuffle is toggled\n  audioElement: null,\n  audioContext: null,\n  listeningPartyId: null,\n  syncInProgress: false,\n});\n\n// Actions\nexport const actions = {\n  initializeAudio() {\n    if (typeof window !== 'undefined') {\n      if (!state.audioElement) {\n        state.audioElement = new Audio();\n        state.audioElement.volume = state.volume;\n\n        // Set up audio context if available\n        try {\n          const AudioContext = window.AudioContext || window.webkitAudioContext;\n          if (AudioContext) {\n            state.audioContext = new AudioContext();\n          }\n        } catch (e) {\n          console.error('AudioContext not supported', e);\n        }\n\n        // Add event listeners\n        state.audioElement.addEventListener('timeupdate', () => {\n          state.currentTime = state.audioElement.currentTime;\n\n          // Sync playback with listening party every 5 seconds\n          if (state.listeningPartyId && !state.syncInProgress && state.isPlaying && state.currentTime % 5 < 0.1) {\n            this.syncPartyPlayback();\n          }\n        });\n\n        state.audioElement.addEventListener('loadedmetadata', () => {\n          state.duration = state.audioElement.duration;\n        });\n\n        state.audioElement.addEventListener('ended', () => {\n          this.playNext();\n        });\n\n        state.audioElement.addEventListener('play', () => {\n          state.isPlaying = true;\n        });\n\n        state.audioElement.addEventListener('pause', () => {\n          state.isPlaying = false;\n        });\n      }\n    }\n  },\n\n  async playTrack(track) {\n    if (!state.audioElement) {\n      this.initializeAudio();\n    }\n\n    // If track is already playing, just toggle play/pause\n    if (state.currentTrack && state.currentTrack._id === track._id) {\n      return this.togglePlay();\n    }\n\n    // Set the current track\n    state.currentTrack = track;\n\n    // Generate stream URL\n    const streamUrl = `${process.env.API_URL}/api/stream/${track._id}`;\n\n    // Set up audio element\n    state.audioElement.src = streamUrl;\n    state.audioElement.load();\n    const playPromise = state.audioElement.play();\n\n    // Handle autoplay restrictions\n    if (playPromise !== undefined) {\n      playPromise.catch(error => {\n        console.error('Autoplay prevented:', error);\n        state.isPlaying = false;\n      });\n    }\n\n    // Log play via WebSocket if connected\n    if (globalWebSocket.isSocketConnected()) {\n      globalWebSocket.send({\n        module: 'music-streaming',\n        action: 'startPlaying',\n        data: {\n          trackId: track._id,\n          from: 'player',\n          deviceInfo: navigator.userAgent,\n        },\n      });\n    }\n  },\n\n  togglePlay() {\n    if (!state.currentTrack || !state.audioElement) return;\n\n    if (state.isPlaying) {\n      state.audioElement.pause();\n    } else {\n      state.audioElement.play().catch(error => {\n        console.error('Play failed:', error);\n      });\n    }\n\n    state.isPlaying = !state.isPlaying;\n\n    // Sync with listening party if active\n    if (state.listeningPartyId) {\n      this.syncPartyPlayback();\n    }\n  },\n\n  setVolume(volume) {\n    state.volume = volume;\n    if (state.audioElement) {\n      state.audioElement.volume = volume;\n    }\n  },\n\n  toggleMute() {\n    state.muted = !state.muted;\n    if (state.audioElement) {\n      state.audioElement.muted = state.muted;\n    }\n  },\n\n  seek(time) {\n    if (state.audioElement) {\n      state.audioElement.currentTime = time;\n      state.currentTime = time;\n\n      // Sync with listening party if active\n      if (state.listeningPartyId) {\n        this.syncPartyPlayback();\n      }\n    }\n  },\n\n  // Queue management\n  setQueue(tracks, startIndex = 0) {\n    state.queue = [...tracks];\n    state.initialQueue = [...tracks];\n\n    if (startIndex > 0 && startIndex < tracks.length) {\n      // Rearrange queue to start from the selected track\n      const tracksToPlay = state.queue.splice(startIndex);\n      state.queue = [...tracksToPlay, ...state.queue];\n    }\n\n    // If shuffle is on, randomize the queue except the first track\n    if (state.shuffle && state.queue.length > 1) {\n      const firstTrack = state.queue[0];\n      const remainingTracks = state.queue.slice(1);\n      this.shuffleArray(remainingTracks);\n      state.queue = [firstTrack, ...remainingTracks];\n    }\n\n    // Start playing the first track in queue\n    if (state.queue.length > 0) {\n      this.playTrack(state.queue[0]);\n    }\n  },\n\n  addToQueue(track) {\n    state.queue.push(track);\n    state.initialQueue.push(track);\n\n    // If nothing is playing, start this track\n    if (!state.currentTrack) {\n      this.playTrack(track);\n    }\n  },\n\n  removeFromQueue(index) {\n    if (index >= 0 && index < state.queue.length) {\n      state.queue.splice(index, 1);\n    }\n  },\n\n  clearQueue() {\n    state.queue = [];\n    state.initialQueue = [];\n\n    if (state.audioElement) {\n      state.audioElement.pause();\n      state.audioElement.src = '';\n    }\n\n    state.currentTrack = null;\n    state.isPlaying = false;\n  },\n\n  playNext() {\n    if (state.queue.length <= 1) {\n      // Only one track or empty queue\n      if (state.repeat === 'one' || state.repeat === 'all') {\n        // Replay the current track\n        this.seek(0);\n        state.audioElement.play().catch(e => console.error(e));\n      } else {\n        // Stop playback\n        state.isPlaying = false;\n      }\n      return;\n    }\n\n    if (state.repeat !== 'one') {\n      // Move to next track\n      state.queue.shift(); // Remove current track from queue\n\n      // If queue is empty after removing current track and repeat is on\n      if (state.queue.length === 0 && state.repeat === 'all') {\n        state.queue = [...state.initialQueue];\n      }\n\n      // Play the next track if available\n      if (state.queue.length > 0) {\n        this.playTrack(state.queue[0]);\n      } else {\n        state.currentTrack = null;\n        state.isPlaying = false;\n      }\n    } else {\n      // Repeat one - just seek to beginning\n      this.seek(0);\n      state.audioElement.play().catch(e => console.error(e));\n    }\n  },\n\n  playPrevious() {\n    // If we're more than 3 seconds into the track, restart it\n    if (state.currentTime > 3) {\n      this.seek(0);\n      return;\n    }\n\n    // Otherwise go to previous track if we have history\n    // Implementation depends on how track history is managed\n    // For simplicity, let's just go back to the beginning of the current track\n    this.seek(0);\n  },\n\n  toggleRepeat() {\n    // Cycle through repeat modes: none -> all -> one -> none...\n    if (state.repeat === 'none') {\n      state.repeat = 'all';\n    } else if (state.repeat === 'all') {\n      state.repeat = 'one';\n    } else {\n      state.repeat = 'none';\n    }\n  },\n\n  toggleShuffle() {\n    state.shuffle = !state.shuffle;\n\n    if (state.shuffle) {\n      // Save the current track\n      const currentTrack = state.queue[0];\n\n      // Shuffle the rest of the queue\n      const remainingTracks = state.queue.slice(1);\n      this.shuffleArray(remainingTracks);\n\n      // Reconstruct queue with current track at the front\n      state.queue = [currentTrack, ...remainingTracks];\n    } else {\n      // Restore original order but keep current track at front\n      if (state.currentTrack) {\n        const currentTrackIndex = state.initialQueue.findIndex(track => track._id === state.currentTrack._id);\n\n        if (currentTrackIndex !== -1) {\n          const tracksToPlay = state.initialQueue.slice(currentTrackIndex);\n          const previousTracks = state.initialQueue.slice(0, currentTrackIndex);\n          state.queue = [...tracksToPlay, ...previousTracks];\n        } else {\n          state.queue = [...state.initialQueue];\n        }\n      } else {\n        state.queue = [...state.initialQueue];\n      }\n    }\n  },\n\n  shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  },\n\n  // Listening party features\n  joinListeningParty(partyId) {\n    state.listeningPartyId = partyId;\n\n    if (globalWebSocket.isSocketConnected()) {\n      globalWebSocket.send({\n        module: 'music-streaming',\n        action: 'joinListeningParty',\n        data: { partyId },\n      });\n\n      // Set up event listener for party playback sync\n      globalWebSocket.addEventListener('partyPlaybackSync', this.handlePartySync.bind(this), {\n        module: 'music-streaming',\n      });\n    }\n  },\n\n  leaveListeningParty() {\n    state.listeningPartyId = null;\n\n    // Remove event listener for party sync\n    if (globalWebSocket.isSocketConnected()) {\n      globalWebSocket.removeEventListener('partyPlaybackSync');\n    }\n  },\n\n  syncPartyPlayback() {\n    if (!state.listeningPartyId || !state.currentTrack || !globalWebSocket.isSocketConnected()) {\n      return;\n    }\n\n    globalWebSocket.send({\n      module: 'music-streaming',\n      action: 'syncPartyPlayback',\n      data: {\n        trackId: state.currentTrack._id,\n        position: state.currentTime,\n        isPlaying: state.isPlaying,\n      },\n    });\n  },\n\n  handlePartySync(data) {\n    if (!state.listeningPartyId) return;\n\n    state.syncInProgress = true;\n\n    // If different track is playing in the party\n    if (data.trackId !== state.currentTrack?._id) {\n      // Find track in queue or load it\n      const trackInQueue = state.queue.find(track => track._id === data.trackId);\n\n      if (trackInQueue) {\n        this.playTrack(trackInQueue);\n      } else {\n        // Need to fetch the track from the API\n        fetch(`${process.env.API_URL}/api/tracks/${data.trackId}`)\n          .then(response => response.json())\n          .then(track => {\n            this.playTrack(track);\n          })\n          .catch(error => {\n            console.error('Error fetching party track:', error);\n          });\n      }\n    }\n\n    // Sync playback position with some tolerance (2 seconds)\n    if (Math.abs(state.currentTime - data.position) > 2) {\n      this.seek(data.position);\n    }\n\n    // Sync play/pause state\n    if (state.isPlaying !== data.isPlaying) {\n      this.togglePlay();\n    }\n\n    // Reset sync flag after a short delay\n    setTimeout(() => {\n      state.syncInProgress = false;\n    }, 1000);\n  },\n};\n",
              "name": "player.js",
              "size": 10646,
              "type": "source"
            },
            {
              "path": "../../src/modules/music/store/playlists.js",
              "relativePath": "modules/music/store/playlists.js",
              "extension": ".js",
              "content": "// store/playlists.js\nimport Store from '@martyrs/src/modules/globals/views/classes/globals.store.js';\nimport { reactive } from 'vue';\n\n// Create store instance\nconst playlistStore = new Store(`${process.env.API_URL}/api/playlists`);\n\n// State\nexport const state = reactive({\n  playlists: [],\n  featuredPlaylists: [],\n  userPlaylists: [],\n  currentPlaylist: null,\n  currentPlaylistTracks: [],\n  isLoading: false,\n  loadingFeatured: false,\n});\n\n// Actions\nexport const actions = {\n  async fetchPlaylists(options = {}) {\n    state.isLoading = true;\n    try {\n      const playlists = await playlistStore.read(options);\n      state.playlists = playlists;\n      return playlists;\n    } catch (error) {\n      console.error('Error fetching playlists:', error);\n      return [];\n    } finally {\n      state.isLoading = false;\n    }\n  },\n\n  async fetchFeaturedPlaylists(limit = 10) {\n    state.loadingFeatured = true;\n    try {\n      // Assuming there's a status field for featured playlists\n      const options = {\n        status: 'featured',\n        isPublic: true,\n        limit,\n      };\n\n      const playlists = await playlistStore.read(options);\n      state.featuredPlaylists = playlists;\n      return playlists;\n    } catch (error) {\n      console.error('Error fetching featured playlists:', error);\n      return [];\n    } finally {\n      state.loadingFeatured = false;\n    }\n  },\n\n  async fetchPlaylistByUrl(url) {\n    try {\n      const response = await fetch(`${process.env.API_URL}/api/playlists/url/${url}`);\n      const playlist = await response.json();\n      state.currentPlaylist = playlist;\n\n      // Extract tracks from the playlist\n      state.currentPlaylistTracks = playlist.tracks?.map(item => item.track) || [];\n\n      return playlist;\n    } catch (error) {\n      console.error('Error fetching playlist by URL:', error);\n      return null;\n    }\n  },\n\n  async createPlaylist(playlistData) {\n    try {\n      const createdPlaylist = await playlistStore.create(playlistData);\n      // Update local state\n      state.playlists.unshift(createdPlaylist);\n      state.userPlaylists.unshift(createdPlaylist);\n      return createdPlaylist;\n    } catch (error) {\n      console.error('Error creating playlist:', error);\n      throw error;\n    }\n  },\n\n  async updatePlaylist(playlistData) {\n    try {\n      const updatedPlaylist = await playlistStore.update(playlistData);\n\n      // Update local state\n      const index = state.playlists.findIndex(p => p._id === updatedPlaylist._id);\n      if (index !== -1) {\n        state.playlists[index] = updatedPlaylist;\n      }\n\n      const userIndex = state.userPlaylists.findIndex(p => p._id === updatedPlaylist._id);\n      if (userIndex !== -1) {\n        state.userPlaylists[userIndex] = updatedPlaylist;\n      }\n\n      if (state.currentPlaylist && state.currentPlaylist._id === updatedPlaylist._id) {\n        state.currentPlaylist = updatedPlaylist;\n      }\n\n      return updatedPlaylist;\n    } catch (error) {\n      console.error('Error updating playlist:', error);\n      throw error;\n    }\n  },\n\n  async deletePlaylist(playlistId) {\n    try {\n      await playlistStore.delete({ _id: playlistId });\n\n      // Update local state\n      state.playlists = state.playlists.filter(p => p._id !== playlistId);\n      state.userPlaylists = state.userPlaylists.filter(p => p._id !== playlistId);\n\n      if (state.currentPlaylist && state.currentPlaylist._id === playlistId) {\n        state.currentPlaylist = null;\n        state.currentPlaylistTracks = [];\n      }\n\n      return true;\n    } catch (error) {\n      console.error('Error deleting playlist:', error);\n      throw error;\n    }\n  },\n\n  async fetchUserPlaylists(userId) {\n    try {\n      const response = await fetch(`${process.env.API_URL}/api/playlists/user/${userId || ''}`);\n      const playlists = await response.json();\n      state.userPlaylists = playlists;\n      return playlists;\n    } catch (error) {\n      console.error('Error fetching user playlists:', error);\n      return [];\n    }\n  },\n\n  async addTrackToPlaylist(playlistId, trackId) {\n    try {\n      const response = await fetch(`${process.env.API_URL}/api/playlists/${playlistId}/tracks/${trackId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n\n      const updatedPlaylist = await response.json();\n\n      // Update local state\n      if (state.currentPlaylist && state.currentPlaylist._id === playlistId) {\n        state.currentPlaylist = updatedPlaylist;\n        // Update tracks list\n        const track = updatedPlaylist.tracks.find(item => item.track._id === trackId)?.track;\n        if (track && !state.currentPlaylistTracks.some(t => t._id === trackId)) {\n          state.currentPlaylistTracks.push(track);\n        }\n      }\n\n      return updatedPlaylist;\n    } catch (error) {\n      console.error('Error adding track to playlist:', error);\n      throw error;\n    }\n  },\n\n  async removeTrackFromPlaylist(playlistId, trackId) {\n    try {\n      const response = await fetch(`${process.env.API_URL}/api/playlists/${playlistId}/tracks/${trackId}`, {\n        method: 'DELETE',\n      });\n\n      const updatedPlaylist = await response.json();\n\n      // Update local state\n      if (state.currentPlaylist && state.currentPlaylist._id === playlistId) {\n        state.currentPlaylist = updatedPlaylist;\n        state.currentPlaylistTracks = state.currentPlaylistTracks.filter(track => track._id !== trackId);\n      }\n\n      return updatedPlaylist;\n    } catch (error) {\n      console.error('Error removing track from playlist:', error);\n      throw error;\n    }\n  },\n\n  async addCollaborator(playlistId, userId) {\n    try {\n      const response = await fetch(`${process.env.API_URL}/api/playlists/${playlistId}/collaborators/${userId}`, {\n        method: 'POST',\n      });\n\n      const updatedPlaylist = await response.json();\n\n      // Update local state\n      if (state.currentPlaylist && state.currentPlaylist._id === playlistId) {\n        state.currentPlaylist = updatedPlaylist;\n      }\n\n      return updatedPlaylist;\n    } catch (error) {\n      console.error('Error adding collaborator to playlist:', error);\n      throw error;\n    }\n  },\n};\n",
              "name": "playlists.js",
              "size": 6174,
              "type": "source"
            },
            {
              "path": "../../src/modules/music/store/search.js",
              "relativePath": "modules/music/store/search.js",
              "extension": ".js",
              "content": "// store/search.js\nimport { reactive } from 'vue';\n\n// State\nexport const state = reactive({\n  query: '',\n  results: {\n    tracks: [],\n    albums: [],\n    artists: [],\n    playlists: [],\n    genres: [],\n  },\n  isLoading: false,\n  error: null,\n  activeFilter: 'all', // 'all', 'tracks', 'albums', 'artists', 'playlists', 'genres'\n});\n\n// Actions\nexport const actions = {\n  async search(query, type = null, limit = 10) {\n    if (!query || query.length < 2) {\n      // Reset results if query is too short\n      state.results = {\n        tracks: [],\n        albums: [],\n        artists: [],\n        playlists: [],\n        genres: [],\n      };\n      state.error = 'Search query must be at least 2 characters';\n      return;\n    }\n\n    state.query = query;\n    state.isLoading = true;\n    state.error = null;\n\n    try {\n      const queryParams = new URLSearchParams({\n        query,\n        limit,\n      });\n\n      if (type) {\n        queryParams.append('type', type);\n      }\n\n      const response = await fetch(`${process.env.API_URL}/api/music/search?${queryParams.toString()}`);\n\n      if (!response.ok) {\n        throw new Error('Search request failed');\n      }\n\n      const data = await response.json();\n\n      // Update state with results\n      state.results = {\n        tracks: data.tracks || [],\n        albums: data.albums || [],\n        artists: data.artists || [],\n        playlists: data.playlists || [],\n        genres: data.genres || [],\n      };\n    } catch (error) {\n      console.error('Search error:', error);\n      state.error = error.message;\n      // Clear results on error\n      state.results = {\n        tracks: [],\n        albums: [],\n        artists: [],\n        playlists: [],\n        genres: [],\n      };\n    } finally {\n      state.isLoading = false;\n    }\n  },\n\n  setFilter(filter) {\n    state.activeFilter = filter;\n  },\n\n  clearSearch() {\n    state.query = '';\n    state.results = {\n      tracks: [],\n      albums: [],\n      artists: [],\n      playlists: [],\n      genres: [],\n    };\n    state.error = null;\n    state.isLoading = false;\n  },\n};\n\n// Computed values\nexport const computed = {\n  hasResults: () => {\n    return Object.values(state.results).some(arr => arr.length > 0);\n  },\n\n  filteredResults: () => {\n    if (state.activeFilter === 'all') {\n      return state.results;\n    }\n\n    // Return only the filtered category\n    const filtered = {\n      tracks: [],\n      albums: [],\n      artists: [],\n      playlists: [],\n      genres: [],\n    };\n\n    filtered[state.activeFilter] = state.results[state.activeFilter];\n    return filtered;\n  },\n\n  totalResultsCount: () => {\n    return Object.values(state.results).reduce((sum, arr) => sum + arr.length, 0);\n  },\n};\n",
              "name": "search.js",
              "size": 2700,
              "type": "source"
            },
            {
              "path": "../../src/modules/music/store/tracks.js",
              "relativePath": "modules/music/store/tracks.js",
              "extension": ".js",
              "content": "// store/tracks.js\nimport Store from '@martyrs/src/modules/globals/views/classes/globals.store.js';\nimport { reactive } from 'vue';\n\n// Create store instance\nconst trackStore = new Store(`${process.env.API_URL}/api/tracks`);\n\n// State\nexport const state = reactive({\n  tracks: [],\n  popular: [],\n  recent: [],\n  featured: [],\n  userTracks: [],\n  currentTrack: null,\n  isLoading: false,\n  loadingPopular: false,\n  loadingRecent: false,\n  loadingFeatured: false,\n});\n\n// Actions\nexport const actions = {\n  async fetchTracks(options = {}) {\n    state.isLoading = true;\n    try {\n      const tracks = await trackStore.read(options);\n      state.tracks = tracks;\n      return tracks;\n    } catch (error) {\n      console.error('Error fetching tracks:', error);\n      return [];\n    } finally {\n      state.isLoading = false;\n    }\n  },\n\n  async fetchPopularTracks(limit = 10) {\n    state.loadingPopular = true;\n    try {\n      const response = await fetch(`${process.env.API_URL}/api/tracks/popular?limit=${limit}`);\n      const tracks = await response.json();\n      state.popular = tracks;\n      return tracks;\n    } catch (error) {\n      console.error('Error fetching popular tracks:', error);\n      return [];\n    } finally {\n      state.loadingPopular = false;\n    }\n  },\n\n  async fetchRecentTracks(limit = 10) {\n    state.loadingRecent = true;\n    try {\n      const response = await fetch(`${process.env.API_URL}/api/tracks/recent?limit=${limit}`);\n      const tracks = await response.json();\n      state.recent = tracks;\n      return tracks;\n    } catch (error) {\n      console.error('Error fetching recent tracks:', error);\n      return [];\n    } finally {\n      state.loadingRecent = false;\n    }\n  },\n\n  async fetchTracksByGenre(genreId, limit = 20) {\n    try {\n      const response = await fetch(`${process.env.API_URL}/api/tracks/genre/${genreId}?limit=${limit}`);\n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching tracks by genre:', error);\n      return [];\n    }\n  },\n\n  async fetchTrackByUrl(url) {\n    try {\n      const response = await fetch(`${process.env.API_URL}/api/tracks/url/${url}`);\n      const track = await response.json();\n      state.currentTrack = track;\n      return track;\n    } catch (error) {\n      console.error('Error fetching track by URL:', error);\n      return null;\n    }\n  },\n\n  // Improved createTrack action with better error handling\n  async createTrack(trackData) {\n    console.log('Creating track with data:', trackData);\n\n    // Validate required fields to prevent silent failures\n    const requiredFields = ['title', 'artist', 'genre', 'fileUrl'];\n    const missingFields = requiredFields.filter(field => !trackData[field]);\n\n    if (missingFields.length > 0) {\n      const error = new Error(`Missing required fields: ${missingFields.join(', ')}`);\n      console.error(error);\n      throw error;\n    }\n\n    // Ensure proper structure for owner and creator fields\n    if (!trackData.owner || !trackData.owner.target || !trackData.owner.type) {\n      console.error('Track data missing owner information');\n      throw new Error('Owner information is required');\n    }\n\n    if (!trackData.creator || !trackData.creator.target || !trackData.creator.type) {\n      console.error('Track data missing creator information');\n      throw new Error('Creator information is required');\n    }\n\n    try {\n      console.log('Calling API to create track...');\n\n      // Check what API URL we're using\n      console.log('API URL:', trackStore.apiUrl);\n\n      // Use a timeout to detect hanging requests\n      const timeoutPromise = new Promise((_, reject) => {\n        setTimeout(() => reject(new Error('Request timed out after 15 seconds')), 15000);\n      });\n\n      // Race between the actual request and the timeout\n      const createdTrack = await Promise.race([trackStore.create(trackData), timeoutPromise]);\n\n      console.log('Track created successfully, server response:', createdTrack);\n\n      // Check if the response is what we expect\n      if (!createdTrack || !createdTrack._id) {\n        console.error('API returned success but without expected track data:', createdTrack);\n        throw new Error('Invalid response from server');\n      }\n\n      // Update local state\n      state.tracks.unshift(createdTrack);\n      state.userTracks.unshift(createdTrack);\n\n      console.log('Local state updated with new track');\n      return createdTrack;\n    } catch (error) {\n      console.error('Error creating track:', error);\n\n      // Enhanced error logging\n      if (error.response) {\n        console.error('Error response:', error.response);\n      }\n\n      // Format the error for better user feedback\n      const formattedError = new Error(error.message || 'Failed to create track. Please try again.');\n      formattedError.originalError = error;\n\n      // Set a global error\n      setError({\n        message: formattedError.message,\n        errorCode: error.errorCode || 'TRACK_CREATE_FAILED',\n      });\n\n      throw formattedError;\n    }\n  },\n\n  async updateTrack(trackData) {\n    try {\n      const updatedTrack = await trackStore.update(trackData);\n\n      // Update local state\n      const index = state.tracks.findIndex(t => t._id === updatedTrack._id);\n      if (index !== -1) {\n        state.tracks[index] = updatedTrack;\n      }\n\n      const userIndex = state.userTracks.findIndex(t => t._id === updatedTrack._id);\n      if (userIndex !== -1) {\n        state.userTracks[userIndex] = updatedTrack;\n      }\n\n      if (state.currentTrack && state.currentTrack._id === updatedTrack._id) {\n        state.currentTrack = updatedTrack;\n      }\n\n      return updatedTrack;\n    } catch (error) {\n      console.error('Error updating track:', error);\n      throw error;\n    }\n  },\n\n  async deleteTrack(trackId) {\n    try {\n      await trackStore.delete({ _id: trackId });\n\n      // Update local state\n      state.tracks = state.tracks.filter(t => t._id !== trackId);\n      state.userTracks = state.userTracks.filter(t => t._id !== trackId);\n\n      if (state.currentTrack && state.currentTrack._id === trackId) {\n        state.currentTrack = null;\n      }\n\n      return true;\n    } catch (error) {\n      console.error('Error deleting track:', error);\n      throw error;\n    }\n  },\n\n  async fetchUserTracks(userId) {\n    try {\n      const options = {\n        creator: userId,\n        limit: 100,\n      };\n      console.log('fetchUserTracks', userId);\n      const tracks = await trackStore.read(options);\n      state.userTracks = tracks;\n      return tracks;\n    } catch (error) {\n      console.error('Error fetching user tracks:', error);\n      return [];\n    }\n  },\n};\n",
              "name": "tracks.js",
              "size": 6639,
              "type": "source"
            }
          ]
        },
        "websocket": {
          "_files": [
            {
              "path": "../../src/modules/music/websocket/streaming.handler.js",
              "relativePath": "modules/music/websocket/streaming.handler.js",
              "extension": ".js",
              "content": "import Logger from '@martyrs/src/modules/globals/controllers/classes/globals.logger.js';\nexport default (function (db) {\n  const logger = new Logger(db);\n  return {\n    // Handle WebSocket messages for music streaming\n    handleStreamingMessage: async (ws, message) => {\n      try {\n        const { action, data } = message;\n        switch (action) {\n          case 'startPlaying':\n            // Log play event\n            if (ws.userId && data.trackId) {\n              await db.playHistory.create({\n                user: ws.userId,\n                track: data.trackId,\n                playedAt: new Date(),\n                deviceInfo: data.deviceInfo || 'Unknown',\n                playedFrom: data.from || 'other',\n                contextId: data.contextId || null,\n              });\n              // Increment play count\n              await db.track.findByIdAndUpdate(data.trackId, { $inc: { playCount: 1 } });\n              // Acknowledge\n              ws.send(\n                JSON.stringify({\n                  type: 'playAcknowledged',\n                  trackId: data.trackId,\n                })\n              );\n            }\n            break;\n          case 'syncPosition':\n            // Track playback position for potential resume later\n            if (ws.userId && data.trackId && data.position) {\n              // Find the latest play history entry\n              const latestPlay = await db.playHistory\n                .findOne({\n                  user: ws.userId,\n                  track: data.trackId,\n                })\n                .sort({ playedAt: -1 });\n              if (latestPlay) {\n                latestPlay.playDuration = data.position;\n                await latestPlay.save();\n              }\n            }\n            break;\n          case 'getRecommendations':\n            // Generate personalized recommendations\n            if (ws.userId) {\n              // Get user's recently played tracks\n              const recentTracks = await db.playHistory\n                .find({\n                  user: ws.userId,\n                })\n                .sort({ playedAt: -1 })\n                .limit(10)\n                .populate('track');\n              // Extract genres and artists from recently played\n              const recentGenres = new Set();\n              const recentArtists = new Set();\n              recentTracks.forEach(history => {\n                if (history.track) {\n                  if (history.track.genre) {\n                    history.track.genre.forEach(g => recentGenres.add(g.toString()));\n                  }\n                  if (history.track.artist) {\n                    recentArtists.add(history.track.artist.toString());\n                  }\n                }\n              });\n              // Find recommendations based on genres and artists\n              const recommendations = await db.track\n                .find({\n                  $or: [{ genre: { $in: Array.from(recentGenres) } }, { artist: { $in: Array.from(recentArtists) } }],\n                  _id: { $nin: recentTracks.map(h => h.track._id) }, // Exclude recently played\n                  status: 'published',\n                  isPublic: true,\n                })\n                .limit(10)\n                .populate('artist', 'name')\n                .populate('album', 'title coverUrl');\n              // Send recommendations to the client\n              ws.send(\n                JSON.stringify({\n                  type: 'recommendations',\n                  tracks: recommendations,\n                })\n              );\n            }\n            break;\n          case 'joinListeningParty':\n            // Implement a shared listening experience\n            if (ws.userId && data.partyId) {\n              // Join a room based on the party ID\n              ws.listeningParty = data.partyId;\n              // Broadcast to all users in the party that a new user joined\n              global.webSocketManager.broadcastToModuleWithFilter('music-streaming', socket => socket.listeningParty === data.partyId, {\n                type: 'partyMemberJoined',\n                userId: ws.userId,\n                partyId: data.partyId,\n              });\n            }\n            break;\n          case 'syncPartyPlayback':\n            // Synchronize playback for listening party members\n            if (ws.userId && ws.listeningParty && data.trackId && data.position) {\n              // Broadcast current position to all users in the party\n              global.webSocketManager.broadcastToModuleWithFilter('music-streaming', socket => socket.listeningParty === ws.listeningParty && socket !== ws, {\n                type: 'partyPlaybackSync',\n                trackId: data.trackId,\n                position: data.position,\n                isPlaying: data.isPlaying,\n                timestamp: Date.now(),\n              });\n            }\n            break;\n          default:\n            logger.info(`Unknown streaming action: ${action}`);\n        }\n      } catch (error) {\n        logger.error(`Error in streaming handler: ${error.message}`);\n        // Send error to client\n        ws.send(\n          JSON.stringify({\n            type: 'error',\n            message: 'An error occurred while processing your request',\n          })\n        );\n      }\n    },\n  };\n});\n",
              "name": "streaming.handler.js",
              "size": 5266,
              "type": "source"
            }
          ]
        },
        "components": {
          "cards": {
            "_files": [
              {
                "path": "../../src/modules/music/components/cards/AlbumCard.vue",
                "relativePath": "modules/music/components/cards/AlbumCard.vue",
                "extension": ".vue",
                "content": "<!-- components/cards/AlbumCard.vue -->\n<template>\n  <router-link \n    :to=\"{ name: 'album-detail', params: { url: album.url } }\" \n    class=\"album-card d-block radius-small o-hidden\"\n  >\n    <div class=\"album-cover pos-relative\">\n      <Media \n        :url=\"album.coverUrl || '/assets/placeholder-album.jpg'\" \n        class=\"w-100 aspect-1x1 object-fit-cover\"\n      />\n      <div class=\"album-overlay pos-absolute pos-t-0 pos-l-0 w-100 h-100 flex-center flex transition-cubic-in-out\">\n        <Button \n          @click.stop=\"playAlbum(album)\" \n          class=\"play-button bg-main radius-round flex-center flex aspect-1x1\"\n          :showLoader=\"false\"\n          :showSucces=\"false\"\n        >\n          <IconPlay class=\"i-small\" fill=\"rgb(var(--black))\" />\n        </Button>\n      </div>\n    </div>\n    <div class=\"album-info pd-small bg-dark-transp-20\">\n      <h3 class=\"t-white t-medium t-truncate\">{{ album.title }}</h3>\n      <p class=\"t-grey t-small t-truncate\">{{ albumInfo }}</p>\n    </div>\n  </router-link>\n</template>\n\n<script setup>\nimport { computed } from 'vue';\nimport Media from '@martyrs/src/components/Media/Media.vue';\nimport Button from '@martyrs/src/components/Button/Button.vue';\nimport IconPlay from '@martyrs/src/modules/icons/navigation/IconPlay.vue';\n\n// Import player store & albums store\nimport { actions as playerActions } from '../../store/player.js';\nimport { state as albumsState, actions as albumsActions } from '../../store/albums.js';\n\nconst props = defineProps({\n  album: {\n    type: Object,\n    required: true\n  }\n});\n\n// Computed properties\nconst albumInfo = computed(() => {\n  const releaseYear = props.album.releaseDate ? new Date(props.album.releaseDate).getFullYear() : '';\n  let artistName = 'Unknown Artist';\n  \n  if (props.album.artist?.name) {\n    artistName = props.album.artist.name;\n  } else if (typeof props.album.artist === 'string') {\n    artistName = props.album.artist;\n  }\n  \n  return releaseYear ? `${artistName} • ${releaseYear}` : artistName;\n});\n\n// Methods\nconst playAlbum = async (album) => {\n  // If album tracks are already loaded in state, use those\n  if (albumsState.currentAlbum && albumsState.currentAlbum._id === album._id && albumsState.currentAlbumTracks.length > 0) {\n    playerActions.setQueue(albumsState.currentAlbumTracks);\n    return;\n  }\n  \n  // Otherwise fetch tracks for this album\n  const tracks = await albumsActions.fetchAlbumTracks(album._id);\n  \n  if (tracks && tracks.length > 0) {\n    playerActions.setQueue(tracks);\n  }\n};\n</script>\n\n<style scoped>\n.album-card {\n  transition: transform 0.3s ease;\n}\n\n.album-card:hover {\n  transform: translateY(-5px);\n}\n\n.album-overlay {\n  background: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n  transition: opacity 0.3s ease;\n}\n\n.album-card:hover .album-overlay {\n  opacity: 1;\n}\n\n.play-button {\n  width: 48px;\n  height: 48px;\n  transform: scale(0.8);\n  transition: transform 0.3s ease;\n}\n\n.album-card:hover .play-button {\n  transform: scale(1);\n}\n</style>",
                "name": "AlbumCard.vue",
                "size": 2969,
                "type": "source"
              },
              {
                "path": "../../src/modules/music/components/cards/ArtistCard.vue",
                "relativePath": "modules/music/components/cards/ArtistCard.vue",
                "extension": ".vue",
                "content": "<template>\n  <div \n    class=\"artist-card flex flex-column radius-medium o-hidden bg-white\"\n    :class=\"{ 'cursor-pointer hover-scale-1': clickable }\"\n    @click=\"handleClick\"\n  >\n    <div class=\"artist-image w-100 pos-relative aspect-1x1\">\n      <img \n        v-if=\"artist.photo\" \n        :src=\"FILE_SERVER_URL + artist.photo\" \n        :alt=\"artist.name\"\n        class=\"w-100 h-100 object-fit-cover\"\n        loading=\"lazy\"\n      />\n      <div v-else class=\"w-100 h-100 bg-light flex-center flex\">\n        <span class=\"h3\">{{ artist.name ? artist.name.charAt(0) : '?' }}</span>\n      </div>\n      \n      <div \n        v-if=\"showStatus\" \n        class=\"pos-absolute pos-t-small pos-r-small pd-micro radius-medium\"\n        :class=\"{\n          'bg-second': artist.status === 'published',\n          'bg-fifth': artist.status === 'featured',\n          'bg-grey': artist.status === 'draft'\n        }\"\n      >\n        <span class=\"t-white p-small\">{{ artist.status }}</span>\n      </div>\n    </div>\n    \n    <div class=\"pd-small\">\n      <h4 class=\"mn-b-micro t-trim-2\">{{ artist.name }}</h4>\n      <p v-if=\"artist.genres && artist.genres.length\" class=\"p-small t-transp t-trim\">\n        {{ artist.genres.join(', ') }}\n      </p>\n    </div>\n    \n    <slot name=\"actions\"></slot>\n  </div>\n</template>\n\n<script setup>\nimport { computed } from 'vue';\nimport { useRouter } from 'vue-router';\n\nconst props = defineProps({\n  artist: {\n    type: Object,\n    required: true\n  },\n  clickable: {\n    type: Boolean,\n    default: true\n  },\n  showStatus: {\n    type: Boolean,\n    default: false\n  }\n});\n\nconst router = useRouter();\n\nconst handleClick = () => {\n  if (!props.clickable) return;\n  \n  router.push({\n    name: 'artist-detail',\n    params: { url: props.artist.url }\n  });\n};\n</script>\n\n<style scoped>\n.artist-card {\n  border: 1px solid rgba(var(--grey), 0.2);\n  transition: transform 0.2s ease;\n}\n\n.hover-scale-1:hover {\n  transform: scale(1.02);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n}\n</style>",
                "name": "ArtistCard.vue",
                "size": 1992,
                "type": "source"
              },
              {
                "path": "../../src/modules/music/components/cards/PlaylistCard.vue",
                "relativePath": "modules/music/components/cards/PlaylistCard.vue",
                "extension": ".vue",
                "content": "<!-- components/cards/PlaylistCard.vue -->\n<template>\n  <router-link \n    :to=\"{ name: 'playlist-detail', params: { url: playlist.url } }\" \n    class=\"playlist-card d-block radius-small o-hidden\"\n  >\n    <div class=\"playlist-cover pos-relative\">\n      <Media \n        :url=\"playlist.coverUrl || '/assets/placeholder-playlist.jpg'\" \n        class=\"w-100 aspect-1x1 object-fit-cover\"\n      />\n      <div class=\"playlist-overlay pos-absolute pos-t-0 pos-l-0 w-100 h-100 flex-center flex transition-cubic-in-out\">\n        <Button \n          @click.stop=\"playPlaylist(playlist)\" \n          class=\"play-button bg-main radius-round flex-center flex aspect-1x1\"\n          :showLoader=\"false\"\n          :showSucces=\"false\"\n        >\n          <IconPlay class=\"i-small\" fill=\"rgb(var(--black))\" />\n        </Button>\n      </div>\n    </div>\n    <div class=\"playlist-info pd-small bg-dark-transp-20\">\n      <h3 class=\"t-white t-medium t-truncate\">{{ playlist.title }}</h3>\n      <p class=\"t-grey t-small t-truncate\">{{ playlistInfo }}</p>\n    </div>\n  </router-link>\n</template>\n\n<script setup>\nimport { computed } from 'vue';\nimport Media from '@martyrs/src/components/Media/Media.vue';\nimport Button from '@martyrs/src/components/Button/Button.vue';\nimport IconPlay from '@martyrs/src/modules/icons/navigation/IconPlay.vue';\n\n// Import player store\nimport { actions as playerActions } from '../../store/player.js';\n\nconst props = defineProps({\n  playlist: {\n    type: Object,\n    required: true\n  }\n});\n\n// Computed properties\nconst playlistInfo = computed(() => {\n  const trackCount = props.playlist.tracks?.length || 0;\n  let creatorName = 'Unknown';\n  \n  if (props.playlist.creator?.target?.profile?.name) {\n    creatorName = props.playlist.creator.target.profile.name;\n  } else if (props.playlist.creator?.target?.name) {\n    creatorName = props.playlist.creator.target.name;\n  }\n  \n  return `${creatorName} • ${trackCount} ${trackCount === 1 ? 'track' : 'tracks'}`;\n});\n\n// Methods\nconst playPlaylist = (playlist) => {\n  // Extract tracks from playlist\n  const tracks = playlist.tracks?.map(item => item.track).filter(track => track) || [];\n  \n  if (tracks.length > 0) {\n    playerActions.setQueue(tracks);\n  }\n};\n</script>\n\n<style scoped>\n.playlist-card {\n  transition: transform 0.3s ease;\n}\n\n.playlist-card:hover {\n  transform: translateY(-5px);\n}\n\n.playlist-overlay {\n  background: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n  transition: opacity 0.3s ease;\n}\n\n.playlist-card:hover .playlist-overlay {\n  opacity: 1;\n}\n\n.play-button {\n  width: 48px;\n  height: 48px;\n  transform: scale(0.8);\n  transition: transform 0.3s ease;\n}\n\n.playlist-card:hover .play-button {\n  transform: scale(1);\n}\n</style>",
                "name": "PlaylistCard.vue",
                "size": 2687,
                "type": "source"
              },
              {
                "path": "../../src/modules/music/components/cards/TrackCard.vue",
                "relativePath": "modules/music/components/cards/TrackCard.vue",
                "extension": ".vue",
                "content": "<!-- components/cards/TrackCard.vue -->\n<template>\n  <div \n    class=\"track-card radius-small o-hidden pos-relative cursor-pointer transition-cubic-in-out bg-dark-transp-20\"\n    @click=\"playTrack\"\n  >\n    <div class=\"track-card-content pd-small flex-v-center flex\">\n      <div class=\"track-cover mn-r-small\">\n        <Media \n          :url=\"track.coverUrl || (track.album && track.album.coverUrl) || '/assets/placeholder-track.jpg'\" \n          class=\"w-3r h-3r object-fit-cover radius-small\"\n        />\n      </div>\n      \n      <div class=\"track-info flex-1\">\n        <div class=\"track-name t-white t-truncate\">{{ track.title }}</div>\n        <div class=\"track-artist t-grey t-small t-truncate\">{{ getArtistName(track) }}</div>\n      </div>\n      \n      <div class=\"track-play pos-absolute pos-r-0 pos-t-0 h-100 pd-small flex-center flex\">\n        <div class=\"play-button bg-main radius-round flex-center flex aspect-1x1 i-medium\">\n          <IconPlay class=\"i-small\" fill=\"rgb(var(--black))\"/>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed } from 'vue';\nimport Media from '@martyrs/src/components/Media/Media.vue';\nimport IconPlay from '@martyrs/src/modules/icons/navigation/IconPlay.vue';\n\n// Import player store\nimport { actions as playerActions } from '../../store/player.js';\n\nconst props = defineProps({\n  track: {\n    type: Object,\n    required: true\n  }\n});\n\n// Methods\nconst getArtistName = (track) => {\n  if (track.artist) {\n    if (typeof track.artist === 'object') {\n      return track.artist.name || 'Unknown Artist';\n    }\n    return track.artist;\n  }\n  return 'Unknown Artist';\n};\n\nconst playTrack = () => {\n  playerActions.playTrack(props.track);\n};\n</script>\n\n<style scoped>\n.track-card {\n  transition: background-color 0.3s ease;\n}\n\n.track-card:hover {\n  background-color: rgba(var(--dark), 0.4);\n}\n\n.track-play {\n  opacity: 0;\n  transition: opacity 0.3s ease;\n}\n\n.track-card:hover .track-play {\n  opacity: 1;\n}\n\n.play-button {\n  transform: scale(0.8);\n  transition: transform 0.3s ease;\n}\n\n.track-card:hover .play-button {\n  transform: scale(1);\n}\n</style>",
                "name": "TrackCard.vue",
                "size": 2124,
                "type": "source"
              }
            ]
          },
          "forms": {
            "_files": [
              {
                "path": "../../src/modules/music/components/forms/PlaylistForm.vue",
                "relativePath": "modules/music/components/forms/PlaylistForm.vue",
                "extension": ".vue",
                "content": "<!-- components/forms/PlaylistForm.vue -->\n<template>\n  <div class=\"playlist-form\">\n    <form @submit.prevent=\"submitForm\">\n      <div class=\"form-group mn-b-medium\">\n        <label for=\"title\" class=\"t-white t-medium mn-b-thin d-block\">Playlist Name</label>\n        <Field \n          v-model:field=\"form.title\"\n          id=\"title\"\n          type=\"text\"\n          placeholder=\"New Playlist\"\n          :validation=\"validationErrors.title\"\n          class=\"w-100 pd-small bg-dark-transp-25 radius-small t-white\"\n        />\n      </div>\n      \n      <div class=\"form-group mn-b-medium\">\n        <label for=\"description\" class=\"t-white t-medium mn-b-thin d-block\">Description</label>\n        <Field \n          v-model:field=\"form.description\"\n          id=\"description\"\n          type=\"textarea\"\n          placeholder=\"Add an optional description\"\n          :validation=\"validationErrors.description\"\n          class=\"w-100 pd-small bg-dark-transp-25 radius-small t-white\"\n        />\n      </div>\n      \n      <div class=\"form-group mn-b-medium\">\n        <label class=\"t-white t-medium mn-b-thin d-block\">Privacy</label>\n        <div class=\"flex gap-small\">\n          <Radio \n            v-model:radio=\"form.isPublic\"\n            :value=\"true\"\n            name=\"privacy\"\n            label=\"Public\"\n            class=\"t-white\"\n          />\n          <Radio \n            v-model:radio=\"form.isPublic\"\n            :value=\"false\"\n            name=\"privacy\"\n            label=\"Private\"\n            class=\"t-white\"\n          />\n        </div>\n      </div>\n      \n      <div class=\"form-group mn-b-medium\">\n        <label class=\"t-white t-medium mn-b-thin d-block\">Cover Image</label>\n        <div class=\"playlist-cover-upload flex gap-medium\">\n          <div class=\"playlist-cover-preview bg-dark-transp-25 radius-small o-hidden\">\n            <Media \n              v-if=\"form.coverUrl\"\n              :url=\"form.coverUrl\"\n              class=\"w-10r h-10r object-fit-cover\"\n            />\n            <div v-else class=\"w-10r h-10r flex-center flex\">\n              <IconMusic class=\"i-big\" fill=\"rgb(var(--grey))\"/>\n            </div>\n          </div>\n          \n          <UploadImage\n            v-model:photo=\"form.coverUrl\"\n            uploadPath=\"playlists\"\n            class=\"flex-1 h-10r bg-dark-transp-25 radius-small\"\n          />\n        </div>\n      </div>\n      \n      <div class=\"form-actions t-right\">\n        <Button \n          @click=\"$emit('cancel')\"\n          type=\"button\"\n          class=\"bg-dark-transp-25 t-white pd-small radius-small mn-r-small hover-bg-dark\"\n          :showLoader=\"false\" \n          :showSucces=\"false\"\n        >\n          Cancel\n        </Button>\n        \n        <Button \n          type=\"submit\"\n          class=\"bg-main t-white pd-small radius-small hover-scale-1\"\n          :submit=\"submitForm\"\n          :showLoader=\"true\" \n          :showSucces=\"true\"\n          :validation=\"!!Object.keys(validationErrors).length\"\n        >\n          Create Playlist\n        </Button>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive } from 'vue';\nimport Field from '@martyrs/src/components/Field/Field.vue';\nimport Radio from '@martyrs/src/components/Radio/Radio.vue';\nimport Button from '@martyrs/src/components/Button/Button.vue';\nimport UploadImage from '@martyrs/src/components/UploadImage/UploadImage.vue';\nimport Media from '@martyrs/src/components/Media/Media.vue';\nimport IconMusic from '@martyrs/src/modules/icons/entities/IconMusic.vue';\n\n// Import auth store and playlists store\nimport { state as authState } from '@martyrs/src/modules/auth/views/store/auth.js';\nimport { actions as playlistsActions } from '../../store/playlists.js';\n\nconst emit = defineEmits(['created', 'cancel']);\n\n// Form data\nconst form = reactive({\n  title: '',\n  description: '',\n  isPublic: true,\n  coverUrl: '',\n  isCollaborative: false,\n  tracks: []\n});\n\n// Validation\nconst validationErrors = reactive({});\n\n// Form submission\nconst submitForm = async () => {\n  // Validate form\n  validationErrors.title = !form.title ? { message: 'Playlist name is required' } : null;\n  \n  // If there are validation errors, don't submit\n  if (Object.values(validationErrors).some(error => error !== null)) {\n    return;\n  }\n  \n  // Prepare playlist data\n  const playlistData = {\n    ...form,\n    creator: {\n      type: 'User',\n      target: authState.user._id\n    },\n    owner: {\n      type: 'User',\n      target: authState.user._id\n    }\n  };\n  \n  try {\n    const playlist = await playlistsActions.createPlaylist(playlistData);\n    emit('created', playlist);\n  } catch (error) {\n    console.error('Error creating playlist:', error);\n    // Handle error (could add form-level error message)\n  }\n};\n</script>",
                "name": "PlaylistForm.vue",
                "size": 4739,
                "type": "source"
              },
              {
                "path": "../../src/modules/music/components/forms/SearchForm.vue",
                "relativePath": "modules/music/components/forms/SearchForm.vue",
                "extension": ".vue",
                "content": "<!-- components/forms/SearchForm.vue -->\n<template>\n  <div class=\"search-form flex-v-center flex bg-dark-transp-50 pd-thin radius-extra\">\n    <IconSearch class=\"i-small mn-r-small\" fill=\"rgb(var(--grey))\"/>\n    <input \n      ref=\"searchInput\"\n      v-model=\"searchQuery\"\n      type=\"text\"\n      :placeholder=\"placeholder\"\n      class=\"bg-transparent border-none t-white flex-1\"\n      @keydown.enter=\"handleSearch\"\n    />\n    <Button \n      v-if=\"searchQuery.length > 0\"\n      @click=\"clearSearch\"\n      class=\"bg-transparent border-none pd-zero\"\n      :showLoader=\"false\" \n      :showSucces=\"false\"\n    >\n      <IconCross class=\"i-small\" fill=\"rgb(var(--grey))\"/>\n    </Button>\n  </div>\n</template>\n\n<script setup>\nimport { ref, watchEffect, defineEmits } from 'vue';\nimport Button from '@martyrs/src/components/Button/Button.vue';\nimport IconSearch from '@martyrs/src/modules/icons/navigation/IconSearch.vue';\nimport IconCross from '@martyrs/src/modules/icons/navigation/IconCross.vue';\n\nconst props = defineProps({\n  placeholder: {\n    type: String,\n    default: 'Search...'\n  },\n  initialQuery: {\n    type: String,\n    default: ''\n  }\n});\n\nconst emit = defineEmits(['search']);\n\nconst searchInput = ref(null);\nconst searchQuery = ref(props.initialQuery);\n\nconst handleSearch = () => {\n  if (searchQuery.value.trim()) {\n    emit('search', searchQuery.value.trim());\n  }\n};\n\nconst clearSearch = () => {\n  searchQuery.value = '';\n  searchInput.value.focus();\n};\n\nwatchEffect(() => {\n  // Update search query when initialQuery prop changes\n  if (props.initialQuery !== searchQuery.value) {\n    searchQuery.value = props.initialQuery;\n  }\n});\n</script>\n\n<style scoped>\n.search-form {\n  transition: background-color 0.2s ease;\n}\n\n.search-form:focus-within {\n  background-color: rgba(var(--dark), 0.8);\n}\n\ninput::placeholder {\n  color: rgba(var(--grey), 0.8);\n}\n\ninput:focus {\n  outline: none;\n}\n</style>",
                "name": "SearchForm.vue",
                "size": 1900,
                "type": "source"
              },
              {
                "path": "../../src/modules/music/components/forms/UploadForm.vue",
                "relativePath": "modules/music/components/forms/UploadForm.vue",
                "extension": ".vue",
                "content": "<!-- components/forms/UploadForm.vue -->\n<template>\n  <div class=\"upload-form\">\n    <!-- <form @submit.prevent=\"submitForm\"> -->\n      <div class=\"form-group mn-b-medium\">\n        <label for=\"title\" class=\"t-white t-medium mn-b-thin d-block\">Track Title</label>\n        <Field \n          v-model:field=\"form.title\"\n          id=\"title\"\n          type=\"text\"\n          placeholder=\"Track Title\"\n          :validation=\"validationErrors.title\"\n          class=\"w-100 pd-small bg-dark-transp-25 radius-small t-white\"\n        />\n      </div>\n\n      <div class=\"form-group mn-b-medium\">\n        <label for=\"artist\" class=\"t-white t-medium mn-b-thin d-block\">Artist</label>\n        <Select \n          v-model:select=\"form.artist\"\n          id=\"artist\"\n          :options=\"artistOptions\"\n          placeholder=\"Select an artist\"\n          :validation=\"validationErrors.artist\"\n          class=\"w-100 pd-small bg-dark-transp-25 radius-small t-white\"\n        />\n      </div>\n\n      <div class=\"form-group mn-b-medium\">\n        <label for=\"album\" class=\"t-white t-medium mn-b-thin d-block\">Album (Optional)</label>\n        <Select \n          v-model:select=\"form.album\"\n          id=\"album\"\n          :options=\"albumOptions\"\n          placeholder=\"Select an album\"\n          class=\"w-100 pd-small bg-dark-transp-25 radius-small t-white\"\n        />\n      </div>\n      \n      <div class=\"form-group mn-b-medium\">\n        <label for=\"genre\" class=\"t-white t-medium mn-b-thin d-block\">Genre</label>\n        <Select \n          v-model:select=\"form.genre\"\n          id=\"genre\"\n          :options=\"genreOptions\"\n          placeholder=\"Select a genre\"\n          :validation=\"validationErrors.genre\"\n          class=\"w-100 pd-small bg-dark-transp-25 radius-small t-white\"\n        />\n      </div>\n      \n      <div class=\"form-group mn-b-medium\">\n        <label for=\"releaseDate\" class=\"t-white t-medium mn-b-thin d-block\">Release Date</label>\n        <Field \n          v-model:field=\"form.releaseDate\"\n          id=\"releaseDate\"\n          type=\"date\"\n          :validation=\"validationErrors.releaseDate\"\n          class=\"w-100 pd-small bg-dark-transp-25 radius-small t-white\"\n        />\n      </div>\n      \n      <div class=\"form-group mn-b-medium\">\n        <label for=\"isExplicit\" class=\"t-white t-medium mn-b-thin d-block\">Explicit Content</label>\n        <Checkbox \n          v-model:checkbox=\"form.isExplicit\"\n          id=\"isExplicit\"\n          label=\"This track contains explicit content\"\n          class=\"t-white\"\n        />\n      </div>\n      \n      <div class=\"form-group mn-b-medium\">\n        <label for=\"isPublic\" class=\"t-white t-medium mn-b-thin d-block\">Privacy</label>\n        <div class=\"flex gap-small\">\n          <Radio \n            v-model:radio=\"form.isPublic\"\n            :value=\"true\"\n            name=\"privacy\"\n            label=\"Public\"\n            class=\"t-white\"\n          />\n          <Radio \n            v-model:radio=\"form.isPublic\"\n            :value=\"false\"\n            name=\"privacy\"\n            label=\"Private\"\n            class=\"t-white\"\n          />\n        </div>\n      </div>\n      \n      <div class=\"form-group mn-b-medium\">\n        <label class=\"t-white t-medium mn-b-thin d-block\">Cover Image</label>\n        <div class=\"track-cover-upload flex gap-medium\">\n          <div class=\"track-cover-preview bg-dark-transp-25 radius-small o-hidden\">\n            <Media \n              v-if=\"form.coverUrl\"\n              :url=\"form.coverUrl\"\n              class=\"w-10r h-10r object-fit-cover\"\n            />\n            <div v-else class=\"w-10r h-10r flex-center flex\">\n              <IconMusic class=\"i-big\" fill=\"rgb(var(--grey))\"/>\n            </div>\n          </div>\n          \n          <UploadImage\n            v-model:photo=\"form.coverUrl\"\n            uploadPath=\"tracks\"\n            class=\"flex-1 h-10r bg-dark-transp-25 radius-small\"\n          />\n        </div>\n      </div>\n      \n      <div class=\"form-group mn-b-medium\">\n        <label class=\"t-white t-medium mn-b-thin d-block\">Track Audio File</label>\n        <Upload\n          v-model:field=\"form.fileUrl\"\n          @file-change=\"(url) => form.fileUrl = url\"\n          type=\"file\"\n          uploadPath=\"tracks\"\n          class=\"bg-dark-transp-25 radius-small pd-small t-white\"\n        />\n      </div>\n      \n      <div class=\"form-group mn-b-medium\">\n        <label for=\"lyrics\" class=\"t-white t-medium mn-b-thin d-block\">Lyrics (Optional)</label>\n        <Field \n          v-model:field=\"form.lyrics\"\n          id=\"lyrics\"\n          type=\"textarea\"\n          placeholder=\"Add lyrics\"\n          class=\"w-100 pd-small bg-dark-transp-25 radius-small t-white\"\n        />\n      </div>\n      \n      <div class=\"form-actions t-right\">\n        <Button \n          @click=\"resetForm\"\n          type=\"button\"\n          class=\"bg-dark-transp-25 t-white pd-small radius-small mn-r-small hover-bg-dark\"\n          :showLoader=\"false\" \n          :showSucces=\"false\"\n        >\n          Reset\n        </Button>\n        \n        <Button \n          type=\"submit\"\n          class=\"bg-main t-white pd-small radius-small hover-scale-1\"\n          :submit=\"() => submitForm()\"\n          :showLoader=\"true\" \n          :showSucces=\"true\"\n        >\n          Upload Track\n        </Button>\n      </div>\n    <!-- </form> -->\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted } from 'vue';\nimport Field from '@martyrs/src/components/Field/Field.vue';\nimport Select from '@martyrs/src/components/Select/Select.vue';\nimport Radio from '@martyrs/src/components/Radio/Radio.vue';\nimport Checkbox from '@martyrs/src/components/Checkbox/Checkbox.vue';\nimport Button from '@martyrs/src/components/Button/Button.vue';\nimport Upload from '@martyrs/src/components/Upload/Upload.vue';\nimport UploadImage from '@martyrs/src/components/UploadImage/UploadImage.vue';\nimport Media from '@martyrs/src/components/Media/Media.vue';\nimport IconMusic from '@martyrs/src/modules/icons/entities/IconMusic.vue';\n\n// Import stores\nimport { state as authState } from '@martyrs/src/modules/auth/views/store/auth.js';\nimport { actions as tracksActions } from '../../store/tracks.js';\nimport { state as artistsState, actions as artistsActions } from '../../store/artists.js';\nimport { state as albumsState, actions as albumsActions } from '../../store/albums.js';\n\nconst emit = defineEmits(['uploaded']);\n\n// Form data\nconst form = reactive({\n  title: '',\n  artist: null,\n  album: null,\n  genre: [],\n  releaseDate: new Date().toISOString().split('T')[0],\n  isExplicit: false,\n  isPublic: true,\n  coverUrl: '',\n  fileUrl: '',\n  lyrics: ''\n});\n\n// Options for dropdowns\nconst artistOptions = ref([]);\nconst albumOptions = ref([]);\nconst genreOptions = ref([\n  'Pop', 'Rock', 'Hip Hop', 'R&B', 'Jazz', 'Electronic', 'Classical', 'Country', 'Folk', 'Blues'\n]);\n\n// Validation\nconst validationErrors = reactive({});\n\n/// Form submission with improved error handling\nconst submitForm = async () => {\n  // Validate form (I'm keeping this commented out as in your original code)\n  // validationErrors.title = !form.title ? { message: 'Track title is required' } : null;\n  // validationErrors.artist = !form.artist ? { message: 'Artist is required' } : null;\n  // validationErrors.genre = !form.genre || form.genre.length === 0 ? { message: 'Genre is required' } : null;\n  // validationErrors.fileUrl = !form.fileUrl ? { message: 'Audio file is required' } : null;\n  \n  // // If there are validation errors, don't submit\n  // if (Object.values(validationErrors).some(error => error !== null)) {\n  //   console.log(error)\n  //   return;\n  // }\n  \n  console.log('Submitting form data:', form);\n  \n  // Check if the API URL is correct\n  console.log('API URL:', process.env.API_URL);\n  \n  // Prepare track data\n  const trackData = {\n    ...form,\n    creator: {\n      type: 'user', // Make sure type matches what's expected on the server (lowercase)\n      target: authState.user._id\n    },\n    owner: {\n      type: 'user', // Make sure type matches what's expected on the server (lowercase)\n      target: authState.user._id\n    },\n    status: 'draft' // Add a default status if needed\n  };\n  \n  try {\n    console.log('Sending track data to API:', trackData);\n    \n    // Directly use the Store instance to debug the issue\n    // This bypasses the action layer to see if the issue is there\n    // const directApiResult = await trackStore.create(trackData);\n    // console.log('Direct API result:', directApiResult);\n    \n    // If the direct approach works, try the normal action\n    const track = await tracksActions.createTrack(trackData);\n    console.log('Track created successfully:', track);\n    \n    emit('uploaded', track);\n    resetForm();\n  } catch (error) {\n    console.error('Error uploading track:', error);\n    \n    // Add more detailed error logging\n    if (error.status) {\n      console.error(`HTTP Status: ${error.status}`);\n    }\n    if (error.message) {\n      console.error(`Error message: ${error.message}`);\n    }\n    if (error.stack) {\n      console.error(`Stack trace: ${error.stack}`);\n    }\n    \n    // Show error to user\n    // setError({\n    //   message: 'Failed to upload track: ' + (error.message || 'Unknown error'),\n    //   errorCode: error.errorCode || 'TRACK_UPLOAD_FAILED'\n    // });\n  }\n};\nconst resetForm = () => {\n  Object.keys(form).forEach(key => {\n    if (key === 'releaseDate') {\n      form[key] = new Date().toISOString().split('T')[0];\n    } else if (key === 'isPublic') {\n      form[key] = true;\n    } else if (key === 'isExplicit') {\n      form[key] = false;\n    } else {\n      form[key] = '';\n    }\n  });\n  \n  // Clear validation errors\n  Object.keys(validationErrors).forEach(key => {\n    validationErrors[key] = null;\n  });\n};\n\n// Fetch artists and albums for dropdowns\nonMounted(async () => {\n  try {\n    // Fetch user's artists\n    const userArtists = await artistsActions.fetchUserArtists(authState.user._id);\n    artistOptions.value = userArtists.map(artist => ({\n      name: artist.name,\n      value: artist._id\n    }));\n    \n    // Fetch user's albums\n    const userAlbums = await albumsActions.fetchUserAlbums(authState.user._id);\n    albumOptions.value = userAlbums.map(album => ({\n      name: album.title,\n      value: album._id\n    }));\n  } catch (error) {\n    console.error('Error fetching artists and albums:', error);\n  }\n});\n</script>",
                "name": "UploadForm.vue",
                "size": 10323,
                "type": "source"
              }
            ]
          },
          "layouts": {
            "_files": [
              {
                "path": "../../src/modules/music/components/layouts/MusicLayout.vue",
                "relativePath": "modules/music/components/layouts/MusicLayout.vue",
                "extension": ".vue",
                "content": "<!-- components/layouts/MusicLayout.vue -->\n<template>\n  <div class=\"music-layout flex flex-nowrap o-hidden w-100 h-100\">\n    <!-- Main Content -->\n    <div class=\"flex-child-1 flex flex-column h-100 o-hidden\">\n      <!-- Header Bar -->\n      <header class=\"flex-child-shrink-0 z-index-3 bg-dark flex-v-center flex-justify-between flex gap-small pd-small br-b br-solid br-dark-transp-20\">\n        <div class=\"flex-v-center flex gap-small\">\n          <div class=\"music-navigation-buttons flex gap-thin\">\n            <button @click=\"$router.go(-1)\" class=\"bg-black radius-extra flex-center flex aspect-1x1 i-medium cursor-pointer hover-bg-dark pd-micro\">\n              <IconChevronLeft class=\"i-small\" fill=\"rgb(var(--white))\"/>\n            </button>\n            <button @click=\"$router.go(1)\" class=\"bg-black radius-extra flex-center flex aspect-1x1 i-medium cursor-pointer hover-bg-dark pd-micro\">\n              <IconChevronRight class=\"i-small\" fill=\"rgb(var(--white))\"/>\n            </button>\n          </div>\n          \n          <h2 v-if=\"$route.meta.title\" class=\"t-white\">{{ $route.meta.title }}</h2>\n        </div>\n        \n        <div class=\"music-search-bar flex-child-1 mn-l-medium mn-r-medium\" v-if=\"$route.name !== 'music-search'\">\n          <SearchForm @search=\"handleSearch\" placeholder=\"Search music...\" />\n        </div>\n        \n        <div class=\"music-user-menu flex-nowrap  flex pos-relative\">\n   \n          <router-link :to=\"{ name: 'music-library' }\" class=\"t-white pd-thin w-100 d-block hover-bg-dark radius-small\">\n            My Library\n          </router-link>\n          <router-link :to=\"{ name: 'music-upload' }\" class=\"t-white pd-thin w-100 d-block hover-bg-dark radius-small\">\n            Upload Music\n          </router-link>\n          \n        </div>\n      </header>\n      \n      <!-- Main Content Area -->\n      <main class=\"o-y-scroll o-x-hidden\">\n        <router-view></router-view>\n      </main>\n      \n      <!-- Music Player Fixed at Bottom -->\n      <MusicPlayer v-if=\"currentTrack\" class=\"flex-child-shrink-0\"/>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport MusicPlayer from '../player/MusicPlayer.vue';\nimport SearchForm from '../forms/SearchForm.vue';\nimport Button from '@martyrs/src/components/Button/Button.vue';\nimport Dropdown from '@martyrs/src/components/Dropdown/Dropdown.vue';\n\n// Icons - Import from icons in the Martyrs framework\nimport IconChevronLeft from '@martyrs/src/modules/icons/navigation/IconChevronLeft.vue';\nimport IconChevronRight from '@martyrs/src/modules/icons/navigation/IconChevronRight.vue';\nimport IconProfile from '@martyrs/src/modules/icons/entities/IconProfile.vue';\n\n// Import store modules\nimport { state as playerState } from '../../store/player.js';\nimport { state as authState, actions as authActions } from '@martyrs/src/modules/auth/views/store/auth.js';\n\nconst router = useRouter();\n\n// UI state\nconst showUserMenu = ref(false);\n\n// Auth computed properties\nconst isAuthenticated = computed(() => {\n  return authState.access.status === true;\n});\n\nconst user = computed(() => {\n  return authState.user;\n});\n\n// Current track from player store\nconst currentTrack = computed(() => {\n  return playerState.currentTrack;\n});\n\n// Methods\nconst handleSearch = (query) => {\n  router.push({ name: 'music-search', query: { q: query } });\n};\n\n</script>",
                "name": "MusicLayout.vue",
                "size": 3422,
                "type": "source"
              }
            ]
          },
          "lists": {
            "_files": [
              {
                "path": "../../src/modules/music/components/lists/AlbumList.vue",
                "relativePath": "modules/music/components/lists/AlbumList.vue",
                "extension": ".vue",
                "content": "<!-- components/lists/AlbumList.vue -->\n<template>\n  <div class=\"album-list\">\n    <div v-if=\"albums.length === 0\" class=\"empty-list t-center pd-medium\">\n      <p class=\"t-grey\">No albums found</p>\n    </div>\n    \n    <div v-else class=\"album-grid cols-5 mobile:cols-2 gap-small\">\n      <div v-for=\"album in albums\" :key=\"album._id\">\n        <AlbumCard :album=\"album\" class=\"hover-scale-1 transition-cubic-in-out\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport AlbumCard from '../cards/AlbumCard.vue';\n\nconst props = defineProps({\n  albums: {\n    type: Array,\n    required: true\n  }\n});\n</script>",
                "name": "AlbumList.vue",
                "size": 619,
                "type": "source"
              },
              {
                "path": "../../src/modules/music/components/lists/ArtistList.vue",
                "relativePath": "modules/music/components/lists/ArtistList.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"pd-medium\">\n    <div class=\"flex flex-justify-between flex-v-center mn-b-medium\">\n      <h2 class=\"h2\">Manage Artists</h2>\n      <Button\n        :submit=\"() => router.push({ name: 'artist-create' })\"\n        class=\"bg-main t-white\"\n        :showSucces=\"false\"\n        :showLoader=\"false\"\n      >\n        Create Artist\n      </Button>\n    </div>\n    \n    <div class=\"mn-b-medium\">\n      <Field\n        v-model:field=\"search\"\n        placeholder=\"Search artists...\"\n        class=\"w-m-40r\"\n        @update:field=\"handleSearch\"\n      >\n        <IconSearch class=\"i-medium mn-r-small\" />\n      </Field>\n    </div>\n    \n    <!-- Loading state -->\n    <div v-if=\"isLoading\" class=\"flex-center flex mn-medium\">\n      <Loader />\n    </div>\n    \n    <!-- Empty state -->\n    <div v-else-if=\"userArtists.length === 0\" class=\"bg-light pd-medium radius-medium t-center\">\n      <p class=\"mn-b-small p-medium\">You haven't created any artists yet</p>\n      <p class=\"p-small t-transp mn-b-medium\">Start by creating your first artist profile</p>\n      <Button\n        :submit=\"() => router.push({ name: 'artist-create' })\"\n        class=\"bg-main t-white\"\n        :showSucces=\"false\"\n        :showLoader=\"false\"\n      >\n        Create Artist\n      </Button>\n    </div>\n    \n    <!-- Artist list -->\n    <div v-else class=\"cols-1 gap-small\">\n      <div\n        v-for=\"artist in userArtists\"\n        :key=\"artist._id\"\n        class=\"bg-light pd-medium radius-medium flex-v-center flex flex-justify-between hover-bg-light mobile:flex-column\"\n      >\n        <div class=\"flex-v-center flex mobile:w-100 mobile:mn-b-small\">\n          <div class=\"w-4r h-4r radius-medium o-hidden mn-r-medium mobile:mn-r-small\">\n            <img\n              v-if=\"artist.photoUrl\"\n              :src=\"FILE_SERVER_URL + artist.photoUrl\"\n              alt=\"Artist photo\"\n              class=\"w-100 h-100 object-fit-cover\"\n            />\n            <div v-else class=\"w-100 h-100 bg-second-nano flex-center flex\">\n              <span>{{ artist.name[0] }}</span>\n            </div>\n          </div>\n          \n          <div>\n            <h3 class=\"h5 mn-b-thin\">{{ artist.name }}</h3>\n            <p class=\"p-small t-transp\">\n              <Status\n                :value=\"getStatusLabel(artist.status)\"\n                class=\"mn-r-small\"\n              />\n              <span v-if=\"artist.isVerified\" class=\"bg-second-nano pd-micro radius-small\">\n                Verified\n              </span>\n            </p>\n          </div>\n        </div>\n        \n        <div class=\"flex flex-nowrap gap-small mobile:w-100 mobile:flex-justify-between\">\n          <Button\n            :submit=\"() => viewArtist(artist)\"\n            class=\"bg-grey-nano t-black\"\n            :showSucces=\"false\"\n            :showLoader=\"false\"\n          >\n            View\n          </Button>\n          \n          <Button\n            :submit=\"() => editArtist(artist)\"\n            class=\"bg-main t-white\"\n            :showSucces=\"false\"\n            :showLoader=\"false\"\n          >\n            Edit\n          </Button>\n          \n          <Button\n            :submit=\"() => confirmDelete(artist)\"\n            class=\"bg-fourth t-white\"\n            :showSucces=\"false\"\n            :showLoader=\"false\"\n          >\n            Delete\n          </Button>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Confirmation popup -->\n    <Popup\n      :isPopupOpen=\"showDeleteConfirm\"\n      @close-popup=\"showDeleteConfirm = false\"\n      class=\"bg-white pd-medium radius-medium w-m-33r\"\n    >\n      <h3 class=\"h3 mn-b-medium\">Delete Artist</h3>\n      <p class=\"p-medium mn-b-medium\">\n        Are you sure you want to delete <b>{{ selectedArtist?.name }}</b>?\n      </p>\n      <p class=\"p-small t-transp mn-b-medium\">\n        This action cannot be undone and will remove all artist data.\n      </p>\n      \n      <div class=\"flex flex-justify-between\">\n        <Button\n          :submit=\"() => showDeleteConfirm = false\"\n          class=\"bg-grey-nano t-black\"\n          :showSucces=\"false\"\n          :showLoader=\"false\"\n        >\n          Cancel\n        </Button>\n        \n        <Button\n          :submit=\"deleteArtist\"\n          class=\"bg-fourth t-white\"\n        >\n          Confirm Delete\n        </Button>\n      </div>\n    </Popup>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, computed } from 'vue';\nimport { useRouter } from 'vue-router';\n\n// Import Martyrs components\nimport Field from '@martyrs/src/components/Field/Field.vue';\nimport Button from '@martyrs/src/components/Button/Button.vue';\nimport Loader from '@martyrs/src/components/Loader/Loader.vue';\nimport Status from '@martyrs/src/components/Status/Status.vue';\nimport Popup from '@martyrs/src/components/Popup/Popup.vue';\nimport IconSearch from '@martyrs/src/modules/icons/navigation/IconSearch.vue';\n\n// Import store\nimport * as artistsStore from '../../store/artists';\nimport * as auth from '@martyrs/src/modules/auth/views/store/auth.js';\nimport * as globals from '@martyrs/src/modules/globals/views/store/globals.js';\n\n// Router\nconst router = useRouter();\n\n// State\nconst search = ref('');\nconst isLoading = ref(false);\nconst showDeleteConfirm = ref(false);\nconst selectedArtist = ref(null);\n\n// Computed\nconst userArtists = computed(() => {\n  return artistsStore.state.userArtists;\n});\n\n// Methods\nconst loadUserArtists = async () => {\n  isLoading.value = true;\n  try {\n    await artistsStore.actions.fetchUserArtists(auth.state.user._id);\n  } catch (error) {\n    console.error('Error loading artists:', error);\n    globals.actions.setError({\n      message: 'Failed to load your artists'\n    });\n  } finally {\n    isLoading.value = false;\n  }\n};\n\nconst handleSearch = async (value) => {\n  if (!value.trim()) {\n    // If search is empty, load all user artists\n    await loadUserArtists();\n    return;\n  }\n  \n  isLoading.value = true;\n  try {\n    // Search only within user's artists\n    const options = {\n      creator: auth.state.user._id,\n      search: value\n    };\n    await artistsStore.actions.fetchArtists(options);\n    // Update userArtists (assuming the store is correctly updating userArtists)\n  } catch (error) {\n    console.error('Error searching artists:', error);\n  } finally {\n    isLoading.value = false;\n  }\n};\n\nconst viewArtist = (artist) => {\n  router.push({\n    name: 'artist-detail',\n    params: { url: artist.url }\n  });\n};\n\nconst editArtist = (artist) => {\n  router.push({\n    name: 'artist-edit',\n    params: { url: artist.url }\n  });\n};\n\nconst confirmDelete = (artist) => {\n  selectedArtist.value = artist;\n  showDeleteConfirm.value = true;\n};\n\nconst deleteArtist = async () => {\n  if (!selectedArtist.value) return;\n  \n  try {\n    await artistsStore.actions.deleteArtist(selectedArtist.value._id);\n    showDeleteConfirm.value = false;\n    selectedArtist.value = null;\n    \n    // Show success message\n    globals.actions.setError({\n      message: 'Artist deleted successfully',\n      status: 'success'\n    });\n  } catch (error) {\n    console.error('Error deleting artist:', error);\n    globals.actions.setError({\n      message: 'Failed to delete artist'\n    });\n  }\n};\n\nconst getStatusLabel = (status) => {\n  const statusMap = {\n    'draft': {\n      text: 'Draft',\n      color: '#888888'\n    },\n    'published': {\n      text: 'Published',\n      color: '#10FA7D' // main color\n    },\n    'archived': {\n      text: 'Archived',\n      color: '#FF0A54' // fourth color\n    }\n  };\n  \n  return statusMap[status] || {\n    text: status,\n    color: '#888888'\n  };\n};\n\n// Lifecycle hooks\nonMounted(async () => {\n  await loadUserArtists();\n});\n</script>",
                "name": "ArtistList.vue",
                "size": 7597,
                "type": "source"
              },
              {
                "path": "../../src/modules/music/components/lists/PlaylistList.vue",
                "relativePath": "modules/music/components/lists/PlaylistList.vue",
                "extension": ".vue",
                "content": "<!-- components/lists/PlaylistList.vue -->\n<template>\n  <div class=\"playlist-list\">\n    <div v-if=\"playlists.length === 0\" class=\"empty-list t-center pd-medium\">\n      <p class=\"t-grey\">No playlists found</p>\n    </div>\n    \n    <div v-else class=\"playlist-grid cols-5 mobile:cols-2 gap-small\">\n      <div v-for=\"playlist in playlists\" :key=\"playlist._id\">\n        <PlaylistCard :playlist=\"playlist\" class=\"hover-scale-1 transition-cubic-in-out\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport PlaylistCard from '../cards/PlaylistCard.vue';\n\nconst props = defineProps({\n  playlists: {\n    type: Array,\n    required: true\n  }\n});\n</script>",
                "name": "PlaylistList.vue",
                "size": 661,
                "type": "source"
              },
              {
                "path": "../../src/modules/music/components/lists/TrackList.vue",
                "relativePath": "modules/music/components/lists/TrackList.vue",
                "extension": ".vue",
                "content": "<!-- components/lists/TrackList.vue (continued) -->\n<template>\n  <div class=\"track-list w-100\">\n    <div \n      v-if=\"showHeader\" \n      class=\"track-list-header pd-small br-b br-solid br-dark-transp-20 t-grey flex-v-center flex\"\n    >\n      <div class=\"track-number w-3r t-center\">#</div>\n      <div class=\"track-title flex-child-1\">TITLE</div>\n      <div v-if=\"showAlbum\" class=\"track-album w-15r mobile:w-0 mobile:hidden\">ALBUM</div>\n      <div class=\"track-duration w-5r t-right\">DURATION</div>\n    </div>\n    \n    <div class=\"track-list-body\">\n      <div \n        v-for=\"(track, index) in tracks\" \n        :key=\"track._id\"\n        class=\"track-item pd-small hover-bg-dark-transp-25 flex-v-center flex cursor-pointer\"\n        :class=\"{'bg-dark-transp-25': isPlaying(track)}\"\n        @click=\"playTrack(track)\"\n        @dblclick=\"playTrack(track, true)\"\n        @mouseenter=\"hoveredIndex = index\"\n        @mouseleave=\"hoveredIndex = -1\"\n      >\n        <div class=\"track-number w-3r t-center pos-relative\">\n          <span v-if=\"!isPlaying(track) && hoveredIndex !== index\" class=\"t-grey\">{{ index + 1 }}</span>\n          <Button \n            v-else-if=\"!isPlaying(track) && hoveredIndex === index\"\n            @click.stop=\"playTrack(track)\"\n            class=\"bg-transparent border-none pd-zero\"\n            :showLoader=\"false\"\n            :showSucces=\"false\"\n          >\n            <IconPlay class=\"i-small\" fill=\"rgb(var(--white))\"/>\n          </Button>\n          <Button \n            v-else\n            @click.stop=\"pauseTrack()\"\n            class=\"bg-transparent border-none pd-zero\"\n            :showLoader=\"false\"\n            :showSucces=\"false\"\n          >\n            <IconPause class=\"i-small\" fill=\"rgb(var(--main))\"/>\n          </Button>\n        </div>\n        \n        <div class=\"track-title flex-child-1 flex flex-v-center\">\n          <div v-if=\"showCover\" class=\"track-cover mn-r-small\">\n            <Media \n              :url=\"track.coverUrl || (track.album && track.album.coverUrl) || '/assets/placeholder-track.jpg'\" \n              class=\"w-3r h-3r object-fit-cover radius-small\"\n            />\n          </div>\n          \n          <div class=\"track-info\">\n            <div class=\"track-name t-white\" :class=\"{'t-main': isPlaying(track)}\">{{ track.title }}</div>\n            <div class=\"track-artist t-grey t-small\">\n              <router-link \n                v-if=\"track.artist && track.artist._id\"\n                :to=\"{ name: 'artist-detail', params: { url: track.artist.url } }\"\n                class=\"t-grey hover-t-white\"\n                @click.stop\n              >\n                {{ getArtistName(track) }}\n              </router-link>\n              <span v-else>{{ getArtistName(track) }}</span>\n            </div>\n          </div>\n        </div>\n        \n        <div v-if=\"showAlbum\" class=\"track-album w-15r mobile:w-0 mobile:hidden t-grey t-truncate\">\n          <router-link \n            v-if=\"track.album && track.album._id\"\n            :to=\"{ name: 'album-detail', params: { url: track.album.url } }\"\n            class=\"t-grey hover-t-white\"\n            @click.stop\n          >\n            {{ track.album.title }}\n          </router-link>\n          <span v-else>{{ track.album?.title || 'Single' }}</span>\n        </div>\n        \n        <div class=\"track-duration w-5r t-right t-grey\">{{ formatDuration(track.duration) }}</div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue';\nimport Media from '@martyrs/src/components/Media/Media.vue';\nimport Button from '@martyrs/src/components/Button/Button.vue';\nimport IconPlay from '@martyrs/src/modules/icons/navigation/IconPlay.vue';\nimport IconPause from '@martyrs/src/modules/icons/navigation/IconPause.vue';\n\n// Import player store\nimport { state as playerState, actions as playerActions } from '../../store/player.js';\n\nconst props = defineProps({\n  tracks: {\n    type: Array,\n    required: true\n  },\n  showHeader: {\n    type: Boolean,\n    default: true\n  },\n  showAlbum: {\n    type: Boolean,\n    default: false\n  },\n  showCover: {\n    type: Boolean,\n    default: false\n  },\n  showIndex: {\n    type: Boolean,\n    default: true\n  }\n});\n\n// State\nconst hoveredIndex = ref(-1);\n\n// Computed\nconst currentTrack = computed(() => playerState.currentTrack);\n\n// Methods\nconst isPlaying = (track) => {\n  return currentTrack.value && currentTrack.value._id === track._id && isPlaying.value;\n};\n\nconst isHovering = (index) => {\n  return hoveredIndex.value === index;\n};\n\nconst playTrack = (track, addToQueue = false) => {\n  if (addToQueue) {\n    playerActions.addToQueue(track);\n  } else {\n    // Find track index to set queue properly\n    const trackIndex = props.tracks.findIndex(t => t._id === track._id);\n    playerActions.setQueue([...props.tracks], trackIndex);\n  }\n};\n\nconst pauseTrack = () => {\n  playerActions.togglePlay();\n};\n\nconst getArtistName = (track) => {\n  if (track.artist) {\n    if (typeof track.artist === 'object') {\n      return track.artist.name || 'Unknown Artist';\n    }\n    return track.artist;\n  }\n  return 'Unknown Artist';\n};\n\nconst formatDuration = (seconds) => {\n  if (!seconds) return '0:00';\n  \n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = Math.floor(seconds % 60);\n  \n  return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n};\n</script>\n\n<style scoped>\n.track-item {\n  transition: background-color 0.2s ease;\n}\n</style>",
                "name": "TrackList.vue",
                "size": 5420,
                "type": "source"
              }
            ]
          },
          "pages": {
            "_files": [
              {
                "path": "../../src/modules/music/components/pages/AlbumDetail.vue",
                "relativePath": "modules/music/components/pages/AlbumDetail.vue",
                "extension": ".vue",
                "content": "<!-- components/pages/AlbumDetail.vue -->\n<template>\n  <div class=\"album-detail-page\">\n    <div v-if=\"isLoading\" class=\"w-100 h-25r flex-center flex\">\n      <Loader />\n    </div>\n    \n    <div v-else-if=\"!album\" class=\"t-center pd-big\">\n      <h2 class=\"t-white\">Album not found</h2>\n      <p class=\"t-grey t-medium\">The album you're looking for doesn't exist or has been removed.</p>\n    </div>\n    \n    <div v-else>\n      <!-- Album Header -->\n      <div class=\"album-header mn-b-medium flex flex-v-center gap-medium\">\n        <div class=\"album-cover\">\n          <Media \n            :url=\"album.coverUrl || '/assets/placeholder-album.jpg'\" \n            class=\"w-15r h-15r object-fit-cover shadow-lg radius-small\"\n          />\n        </div>\n        \n        <div class=\"album-info\">\n          <div class=\"t-small t-uppercase t-white\">Album</div>\n          <h1 class=\"t-white\">{{ album.title }}</h1>\n          \n          <div class=\"album-meta mn-t-small flex flex-v-center\">\n            <router-link \n              v-if=\"album.artist && album.artist._id\"\n              :to=\"{ name: 'artist-detail', params: { url: album.artist.url } }\"\n              class=\"t-white t-medium hover-t-main\"\n            >\n              {{ getArtistName(album) }}\n            </router-link>\n            <span v-else class=\"t-white t-medium\">{{ getArtistName(album) }}</span>\n            \n            <span class=\"t-grey mn-l-small mn-r-small\">•</span>\n            \n            <span class=\"t-grey\">{{ formatReleaseYear(album.releaseDate) }}</span>\n            \n            <span class=\"t-grey mn-l-small mn-r-small\">•</span>\n            \n            <span class=\"t-grey\">{{ albumTracks.length }} {{ albumTracks.length === 1 ? 'song' : 'songs' }}</span>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Album Actions -->\n      <div class=\"album-actions mn-b-medium flex flex-v-center gap-small\">\n        <Button \n          @click=\"playAlbum\"\n          class=\"play-button bg-main radius-round pd-small flex-v-center flex gap-small hover-scale-1\"\n          :showLoader=\"false\" \n          :showSucces=\"false\"\n        >\n          <IconPlay class=\"i-small\" fill=\"rgb(var(--black))\"/>\n          <span class=\"t-black t-medium\">Play</span>\n        </Button>\n        \n        <Button \n          @click=\"toggleFavorite\"\n          class=\"bg-transparent border-none pd-zero\"\n          :showLoader=\"false\" \n          :showSucces=\"false\"\n        >\n          <IconHeart class=\"i-medium\" :fill=\"isFavorite ? 'rgb(var(--main))' : 'rgb(var(--white))'\"/>\n        </Button>\n        \n        <Dropdown class=\"pos-relative\">\n          <Button \n            @click=\"showDropdown = !showDropdown\"\n            class=\"bg-transparent border-none pd-zero\"\n            :showLoader=\"false\" \n            :showSucces=\"false\"\n          >\n            <IconEllipsis class=\"i-medium\" fill=\"rgb(var(--white))\"/>\n          </Button>\n          \n          <template #content>\n            <ul v-if=\"showDropdown\" class=\"pd-small bg-dark radius-small pos-absolute pos-t-100 pos-r-0 z-index-3 w-max-15r mn-t-thin\">\n              <li class=\"mn-b-thin\">\n                <Button \n                  @click=\"addToQueue\"\n                  class=\"bg-transparent border-none pd-thin t-white w-100 t-left hover-bg-dark radius-small\"\n                  :showLoader=\"false\" \n                  :showSucces=\"false\"\n                >\n                  <span>Add to Queue</span>\n                </Button>\n              </li>\n              <li>\n                <Button \n                  @click=\"copyLink\"\n                  class=\"bg-transparent border-none pd-thin t-white w-100 t-left hover-bg-dark radius-small\"\n                  :showLoader=\"false\" \n                  :showSucces=\"false\"\n                >\n                  <span>Copy Link</span>\n                </Button>\n              </li>\n            </ul>\n          </template>\n        </Dropdown>\n      </div>\n      \n      <!-- Album Tracks -->\n      <div class=\"album-tracks\">\n        <TrackList \n          :tracks=\"albumTracks\"\n          :showAlbum=\"false\"\n          :showCover=\"false\"\n          class=\"bg-dark-transp-10 radius-medium o-hidden\"\n        />\n      </div>\n      \n      <!-- Album Info -->\n      <div v-if=\"album.description\" class=\"album-description mn-t-medium pd-medium bg-dark-transp-10 radius-medium\">\n        <h3 class=\"t-white mn-b-small\">About</h3>\n        <p class=\"t-grey\">{{ album.description }}</p>\n      </div>\n      \n      <!-- More from this artist if available -->\n      <div v-if=\"moreFromArtist.length > 0\" class=\"more-from-artist mn-t-medium\">\n        <div class=\"flex-between flex mn-b-small\">\n          <h2 class=\"t-white\">More by {{ getArtistName(album) }}</h2>\n          <router-link \n            v-if=\"album.artist && album.artist._id\"\n            :to=\"{ name: 'artist-detail', params: { url: album.artist.url } }\" \n            class=\"t-main t-small hover-opacity\"\n          >\n            See all\n          </router-link>\n        </div>\n        \n        <div class=\"albums-grid cols-5 mobile:cols-2 gap-small\">\n          <div v-for=\"relatedAlbum in moreFromArtist\" :key=\"relatedAlbum._id\">\n            <AlbumCard :album=\"relatedAlbum\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, watch } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport TrackList from '../lists/TrackList.vue';\nimport AlbumCard from '../cards/AlbumCard.vue';\nimport Button from '@martyrs/src/components/Button/Button.vue';\nimport Loader from '@martyrs/src/components/Loader/Loader.vue';\nimport Media from '@martyrs/src/components/Media/Media.vue';\nimport Dropdown from '@martyrs/src/components/Dropdown/Dropdown.vue';\n\n// Import icons\nimport IconPlay from '@martyrs/src/modules/icons/navigation/IconPlay.vue';\nimport IconHeart from '@martyrs/src/modules/icons/navigation/IconHeart.vue';\nimport IconEllipsis from '@martyrs/src/modules/icons/navigation/IconEllipsis.vue';\n\n// Import store modules\nimport { state as albumsState, actions as albumsActions } from '../../store/albums.js';\nimport { actions as playerActions } from '../../store/player.js';\n\nconst route = useRoute();\nconst router = useRouter();\n\n// State\nconst isLoading = ref(true);\nconst isFavorite = ref(false);\nconst showDropdown = ref(false);\nconst moreFromArtist = ref([]);\n\n// Computed properties\nconst album = computed(() => albumsState.currentAlbum);\nconst albumTracks = computed(() => albumsState.currentAlbumTracks);\n\n// Methods\nconst getArtistName = (albumItem) => {\n  if (!albumItem) return 'Unknown Artist';\n  \n  if (albumItem.artist) {\n    if (typeof albumItem.artist === 'object') {\n      return albumItem.artist.name || 'Unknown Artist';\n    }\n    return albumItem.artist;\n  }\n  return 'Unknown Artist';\n};\n\nconst formatReleaseYear = (dateString) => {\n  if (!dateString) return '';\n  return new Date(dateString).getFullYear();\n};\n\nconst playAlbum = () => {\n  if (albumTracks.value && albumTracks.value.length > 0) {\n    playerActions.setQueue(albumTracks.value);\n  }\n};\n\nconst toggleFavorite = () => {\n  isFavorite.value = !isFavorite.value;\n  // Implement favorite album logic here\n};\n\nconst addToQueue = () => {\n  if (albumTracks.value && albumTracks.value.length > 0) {\n    // Add all tracks to queue\n    albumTracks.value.forEach(track => {\n      playerActions.addToQueue(track);\n    });\n    \n    showDropdown.value = false;\n  }\n};\n\nconst copyLink = () => {\n  const url = window.location.href;\n  navigator.clipboard.writeText(url).then(() => {\n    // Could show a success notification here\n    showDropdown.value = false;\n  });\n};\n\nconst fetchAlbumData = async () => {\n  isLoading.value = true;\n  \n  try {\n    // Fetch album data\n    await albumsActions.fetchAlbumByUrl(route.params.url);\n    \n    // If artist is available, fetch more albums from the same artist\n    if (album.value?.artist?._id) {\n      const artistAlbums = await albumsActions.fetchAlbums({\n        artist: album.value.artist._id,\n        status: 'published',\n        isPublic: true,\n        limit: 5\n      });\n      \n      // Filter out the current album\n      moreFromArtist.value = artistAlbums.filter(a => a._id !== album.value._id);\n    }\n  } catch (error) {\n    console.error('Error fetching album data:', error);\n  } finally {\n    isLoading.value = false;\n  }\n};\n\n// Fetch data when component mounts or URL changes\nonMounted(fetchAlbumData);\n\nwatch(() => route.params.url, (newUrl) => {\n  if (newUrl) {\n    fetchAlbumData();\n  }\n});\n</script>\n\n<style scoped>\n.album-cover {\n  box-shadow: 0 4px 60px rgba(0, 0, 0, 0.5);\n}\n</style>",
                "name": "AlbumDetail.vue",
                "size": 8590,
                "type": "source"
              },
              {
                "path": "../../src/modules/music/components/pages/ArtistDetail.vue",
                "relativePath": "modules/music/components/pages/ArtistDetail.vue",
                "extension": ".vue",
                "content": "<template>\n  <div>\n    <!-- Loading state -->\n    <div v-if=\"isLoading\" class=\"flex-center flex pd-extra\">\n      <Loader />\n    </div>\n    \n    <!-- Artist not found -->\n    <div v-else-if=\"!artist\" class=\"flex-center flex-column flex pd-extra\">\n      <h2 class=\"h2 mn-b-medium\">Artist Not Found</h2>\n      <p class=\"p-medium t-transp mn-b-medium\">The artist you are looking for doesn't exist or may have been removed.</p>\n      <Button\n        :submit=\"() => router.push({ name: 'music-home' })\"\n        class=\"bg-main t-white\"\n        :showSucces=\"false\"\n        :showLoader=\"false\"\n      >\n        Back to Music\n      </Button>\n    </div>\n    \n    <!-- Artist content -->\n    <div v-else>\n      <!-- Cover image -->\n      <div \n        class=\"w-100 h-50vh pos-relative\"\n        :style=\"artist.coverUrl ? `background-image: url(${FILE_SERVER_URL + artist.coverUrl}); background-size: cover; background-position: center;` : ''\"\n      >\n        <div class=\"pos-absolute pos-t-0 pos-l-0 w-100 h-100 bg-blur-small\" :class=\"artist.coverUrl ? 'bg-black-transp-50' : 'bg-black'\"></div>\n        \n        <!-- Artist actions for edit/manage -->\n        <div v-if=\"isOwner\" class=\"pos-absolute pos-t-medium pos-r-medium z-index-1\">\n          <Button\n            :submit=\"editArtist\"\n            class=\"bg-main t-white mn-r-small\"\n            :showSucces=\"false\"\n            :showLoader=\"false\"\n          >\n            Edit Artist\n          </Button>\n          \n          <Button\n            :submit=\"manageContent\"\n            class=\"bg-white t-black\"\n            :showSucces=\"false\"\n            :showLoader=\"false\"\n          >\n            Manage Content\n          </Button>\n        </div>\n        \n        <!-- Artist profile info -->\n        <div class=\"flex-v-center pos-absolute pos-b-0 pos-l-0 w-100 pd-medium z-index-1 flex mobile:flex-column mobile:flex-h-center\">\n          <div class=\"w-15r h-15r radius-medium o-hidden mn-r-medium bs-black mobile:mn-r-0 mobile:mn-b-medium\">\n            <img\n              v-if=\"artist.photoUrl\"\n              :src=\"FILE_SERVER_URL + artist.photoUrl\"\n              alt=\"Artist photo\"\n              class=\"w-100 h-100 object-fit-cover\"\n            />\n            <div v-else class=\"w-100 h-100 bg-white flex-center flex\">\n              <span class=\"h1\">{{ artist.name[0] }}</span>\n            </div>\n          </div>\n          \n          <div class=\"t-white mobile:t-center\">\n            <div class=\"flex-v-center flex-nowrap flex mn-b-small mobile:flex-center\">\n              <h1 class=\"h1 mn-r-small\">{{ artist.name }}</h1>\n              <span v-if=\"artist.isVerified\" class=\"bg-main-nano pd-micro radius-small\">\n                ✓ Verified\n              </span>\n            </div>\n            \n            <p v-if=\"artist.location\" class=\"p-medium mn-b-small\">{{ artist.location }}</p>\n            \n            <!-- Social media links -->\n            <div class=\"flex flex-nowrap gap-small mobile:flex-center\">\n              <a \n                v-if=\"artist.socials.telegram\" \n                :href=\"`https://t.me/${artist.socials.telegram}`\" \n                target=\"_blank\"\n                class=\"bg-white t-black flex-center flex w-2r h-2r radius-extra\"\n              >\n                <span>T</span>\n              </a>\n              \n              <a \n                v-if=\"artist.socials.twitter\" \n                :href=\"`https://twitter.com/${artist.socials.twitter}`\" \n                target=\"_blank\"\n                class=\"bg-white t-black flex-center flex w-2r h-2r radius-extra\"\n              >\n                <span>𝕏</span>\n              </a>\n              \n              <a \n                v-if=\"artist.socials.instagram\" \n                :href=\"`https://instagram.com/${artist.socials.instagram}`\" \n                target=\"_blank\"\n                class=\"bg-white t-black flex-center flex w-2r h-2r radius-extra\"\n              >\n                <span>I</span>\n              </a>\n              \n              <a \n                v-if=\"artist.socials.facebook\" \n                :href=\"`https://facebook.com/${artist.socials.facebook}`\" \n                target=\"_blank\"\n                class=\"bg-white t-black flex-center flex w-2r h-2r radius-extra\"\n              >\n                <span>F</span>\n              </a>\n              \n              <a \n                v-if=\"artist.website\" \n                :href=\"artist.website\" \n                target=\"_blank\"\n                class=\"bg-white t-black flex-center flex w-2r h-2r radius-extra\"\n              >\n                <span>W</span>\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Main content -->\n      <div class=\"pd-medium\">\n        <div class=\"cols-2-1_2 gap-medium mobile:cols-1\">\n          <!-- Left column - Bio and details -->\n          <div>\n            <div class=\"bg-light pd-medium radius-medium mn-b-medium\">\n              <h2 class=\"h3 mn-b-small\">Biography</h2>\n              <p v-if=\"artist.bio\" class=\"p-medium\">{{ artist.bio }}</p>\n              <p v-else class=\"p-medium t-transp\">No biography available for this artist.</p>\n            </div>\n            \n            <!-- Genres -->\n            <div v-if=\"genres.length > 0\" class=\"bg-light pd-medium radius-medium\">\n              <h2 class=\"h3 mn-b-small\">Genres</h2>\n              <div class=\"flex flex-wrap gap-small\">\n                <span \n                  v-for=\"genre in genres\" \n                  :key=\"genre._id\"\n                  class=\"bg-white pd-thin radius-medium\"\n                >\n                  {{ genre.name }}\n                </span>\n              </div>\n            </div>\n          </div>\n          \n          <!-- Right column - Discography -->\n          <div>\n            <!-- Albums section -->\n            <div v-if=\"discography.albums.length > 0\" class=\"bg-light pd-medium radius-medium mn-b-medium\">\n              <h2 class=\"h3 mn-b-medium\">Albums</h2>\n              \n              <div class=\"cols-2 gap-small mobile:cols-1\">\n                <div\n                  v-for=\"album in discography.albums\"\n                  :key=\"album._id\"\n                  class=\"bg-white pd-small radius-medium flex-v-center flex cursor-pointer hover-bg-white\"\n                  @click=\"navigateToAlbum(album)\"\n                >\n                  <div class=\"w-3r h-3r radius-small o-hidden mn-r-small\">\n                    <img\n                      v-if=\"album.coverUrl\"\n                      :src=\"FILE_SERVER_URL + album.coverUrl\"\n                      alt=\"Album cover\"\n                      class=\"w-100 h-100 object-fit-cover\"\n                    />\n                    <div v-else class=\"w-100 h-100 bg-light flex-center flex\">\n                      <span>A</span>\n                    </div>\n                  </div>\n                  \n                  <div class=\"w-100 o-hidden\">\n                    <p class=\"p-medium t-truncate\">{{ album.title }}</p>\n                    <p class=\"p-small t-transp\">{{ formatDate(album.releaseDate) }}</p>\n                  </div>\n                </div>\n              </div>\n              \n              <Button\n                v-if=\"discography.albums.length > 4\"\n                :submit=\"viewAllAlbums\"\n                class=\"mn-t-small w-100 bg-white t-black\"\n                :showSucces=\"false\"\n                :showLoader=\"false\"\n              >\n                View All Albums\n              </Button>\n            </div>\n            \n            <!-- Singles section -->\n            <div v-if=\"discography.singles.length > 0\" class=\"bg-light pd-medium radius-medium\">\n              <h2 class=\"h3 mn-b-medium\">Singles & EPs</h2>\n              \n              <div class=\"cols-1 gap-small\">\n                <div\n                  v-for=\"single in discography.singles\"\n                  :key=\"single._id\"\n                  class=\"bg-white pd-small radius-medium flex-v-center flex cursor-pointer hover-bg-white\"\n                  @click=\"navigateToTrack(single)\"\n                >\n                  <div class=\"w-3r h-3r radius-small o-hidden mn-r-small\">\n                    <img\n                      v-if=\"single.coverUrl\"\n                      :src=\"FILE_SERVER_URL + single.coverUrl\"\n                      alt=\"Single cover\"\n                      class=\"w-100 h-100 object-fit-cover\"\n                    />\n                    <div v-else class=\"w-100 h-100 bg-light flex-center flex\">\n                      <span>S</span>\n                    </div>\n                  </div>\n                  \n                  <div class=\"w-100 o-hidden\">\n                    <p class=\"p-medium t-truncate\">{{ single.title }}</p>\n                    <p class=\"p-small t-transp\">{{ formatDate(single.releaseDate) }}</p>\n                  </div>\n                </div>\n              </div>\n              \n              <Button\n                v-if=\"discography.singles.length > 5\"\n                :submit=\"viewAllSingles\"\n                class=\"mn-t-small w-100 bg-white t-black\"\n                :showSucces=\"false\"\n                :showLoader=\"false\"\n              >\n                View All Singles & EPs\n              </Button>\n            </div>\n            \n            <!-- No discography yet -->\n            <div \n              v-if=\"discography.albums.length === 0 && discography.singles.length === 0\" \n              class=\"bg-light pd-medium radius-medium t-center\"\n            >\n              <p class=\"p-medium mn-b-small\">No releases yet</p>\n              <p class=\"p-small t-transp\">This artist hasn't released any albums or singles yet.</p>\n              \n              <Button\n                v-if=\"isOwner\"\n                :submit=\"addRelease\"\n                class=\"mn-t-medium bg-main t-white\"\n                :showSucces=\"false\"\n                :showLoader=\"false\"\n              >\n                Add Release\n              </Button>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Related Artists -->\n        <div v-if=\"relatedArtists.length > 0\" class=\"mn-t-medium\">\n          <h2 class=\"h3 mn-b-medium\">Fans Also Like</h2>\n          \n          <div class=\"cols-5 gap-medium mobile:cols-2\">\n            <div\n              v-for=\"relatedArtist in relatedArtists\"\n              :key=\"relatedArtist._id\"\n              class=\"t-center cursor-pointer\"\n              @click=\"navigateToArtist(relatedArtist)\"\n            >\n              <div class=\"w-100 aspect-1x1 radius-medium o-hidden mn-b-small\">\n                <img\n                  v-if=\"relatedArtist.photoUrl\"\n                  :src=\"FILE_SERVER_URL + relatedArtist.photoUrl\"\n                  alt=\"Artist photo\"\n                  class=\"w-100 h-100 object-fit-cover\"\n                />\n                <div v-else class=\"w-100 h-100 bg-light flex-center flex\">\n                  <span>{{ relatedArtist.name[0] }}</span>\n                </div>\n              </div>\n              \n              <p class=\"p-medium t-truncate\">{{ relatedArtist.name }}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted } from 'vue';\nimport { useRouter, useRoute } from 'vue-router';\n\n// Import Martyrs components\nimport Button from '@martyrs/src/components/Button/Button.vue';\nimport Loader from '@martyrs/src/components/Loader/Loader.vue';\n\n// Import store\nimport * as artistsStore from '../../store/artists';\n// import * as genreStore from '../../store/genres'; // Assuming you have a genre store\nimport * as auth from '@martyrs/src/modules/auth/views/store/auth.js';\nimport * as globals from '@martyrs/src/modules/globals/views/store/globals.js';\n\n// Import mixins\nimport { useGlobalMixins } from '@martyrs/src/modules/globals/views/mixins/mixins.js';\nconst { formatDate } = useGlobalMixins();\n\n// Router and route\nconst router = useRouter();\nconst route = useRoute();\n\n// State\nconst isLoading = ref(true);\nconst genres = ref([]);\n\n// Computed\nconst artist = computed(() => {\n  return artistsStore.state.currentArtist;\n});\n\nconst discography = computed(() => {\n  return artistsStore.state.discography;\n});\n\nconst relatedArtists = computed(() => {\n  return artistsStore.state.relatedArtists;\n});\n\nconst isOwner = computed(() => {\n  if (!artist.value || !auth.state.user._id) return false;\n  \n  // Check if current user is the creator of the artist\n  return artist.value.creator?.target?._id === auth.state.user._id;\n});\n\n// Methods\nconst fetchArtist = async () => {\n  isLoading.value = true;\n  try {\n    // Get URL from route params\n    const url = route.params.url;\n    if (!url) {\n      throw new Error('Artist URL is required');\n    }\n    \n    await artistsStore.actions.fetchArtistByUrl(url);\n    \n    // Fetch genre details if we have genre IDs\n    if (artist.value?.genre && artist.value.genre.length > 0) {\n      await fetchGenres();\n    }\n  } catch (error) {\n    console.error('Error fetching artist:', error);\n    globals.actions.setError({\n      message: 'Failed to load artist'\n    });\n  } finally {\n    isLoading.value = false;\n  }\n};\n\nconst fetchGenres = async () => {\n  try {\n    // Assuming genreStore has a method to fetch multiple genres by IDs\n    // const fetchedGenres = await genreStore.actions.fetchGenresByIds(artist.value.genre);\n    // genres.value = fetchedGenres;\n  } catch (error) {\n    console.error('Error fetching genres:', error);\n  }\n};\n\nconst editArtist = () => {\n  router.push({\n    name: 'artist-edit',\n    params: { url: artist.value.url }\n  });\n};\n\nconst manageContent = () => {\n  // Navigate to a page for managing artist content (albums, tracks, etc.)\n  router.push({\n    name: 'artist-manage-content',\n    params: { artistId: artist.value._id }\n  });\n};\n\nconst navigateToAlbum = (album) => {\n  router.push({\n    name: 'album-detail',\n    params: { url: album.url }\n  });\n};\n\nconst navigateToTrack = (track) => {\n  router.push({\n    name: 'track-detail',\n    params: { url: track.url }\n  });\n};\n\nconst navigateToArtist = (artist) => {\n  router.push({\n    name: 'artist-detail',\n    params: { url: artist.url }\n  });\n};\n\nconst viewAllAlbums = () => {\n  router.push({\n    name: 'artist-albums',\n    params: { artistId: artist.value._id }\n  });\n};\n\nconst viewAllSingles = () => {\n  router.push({\n    name: 'artist-singles',\n    params: { artistId: artist.value._id }\n  });\n};\n\nconst addRelease = () => {\n  router.push({\n    name: 'release-create',\n    query: { artistId: artist.value._id }\n  });\n};\n\n// Lifecycle hooks\nonMounted(async () => {\n  await fetchArtist();\n});\n</script>",
                "name": "ArtistDetail.vue",
                "size": 14476,
                "type": "source"
              },
              {
                "path": "../../src/modules/music/components/pages/ArtistForm.vue",
                "relativePath": "modules/music/components/pages/ArtistForm.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"pd-medium\">\n    <h2 class=\"h2 mn-b-medium\">{{ editMode ? 'Edit Artist' : 'Create Artist' }}</h2>\n    \n    <form @submit.prevent=\"submitForm\" class=\"cols-1 gap-medium\">\n      <!-- Basic Info Section -->\n      <div class=\"bg-light pd-medium radius-medium\">\n        <h3 class=\"h3 mn-b-medium\">Basic Information</h3>\n        \n        <div class=\"cols-2 mobile:cols-1 gap-medium\">\n          <!-- Artist Photo -->\n          <div>\n            <p class=\"p-semi mn-b-small\">Artist Photo</p>\n            <UploadImage\n              v-model:photo=\"artist.photoUrl\"\n              uploadPath=\"artists/photos\"\n              class=\"w-100 h-15r mn-b-small\"\n              @error=\"handleUploadError\"\n            />\n          </div>\n          \n          <!-- Artist Cover -->\n          <div>\n            <p class=\"p-semi mn-b-small\">Cover Image</p>\n            <UploadImage\n              v-model:photo=\"artist.coverUrl\"\n              uploadPath=\"artists/covers\"\n              class=\"w-100 h-15r mn-b-small\"\n              @error=\"handleUploadError\"\n            />\n          </div>\n        </div>\n        \n        <!-- Name -->\n        <Field\n          v-model:field=\"artist.name\"\n          label=\"Artist Name\"\n          placeholder=\"Enter artist name\"\n          class=\"mn-b-medium\"\n          :validation=\"validation.name\"\n        />\n        \n        <!-- Bio -->\n        <Field\n          v-model:field=\"artist.bio\"\n          label=\"Biography\"\n          type=\"textarea\"\n          placeholder=\"Enter artist biography\"\n          class=\"mn-b-medium\"\n          :validation=\"validation.bio\"\n        />\n        \n        <!-- Location -->\n        <Field\n          v-model:field=\"artist.location\"\n          label=\"Location\"\n          placeholder=\"e.g., Los Angeles, CA\"\n          class=\"mn-b-medium\"\n        />\n        \n        <!-- Website -->\n        <Field\n          v-model:field=\"artist.website\"\n          label=\"Website\"\n          placeholder=\"https://example.com\"\n          class=\"mn-b-medium\"\n        />\n        \n        <!-- URL (if editable) -->\n        <Field\n          v-if=\"!artist.url && !editMode\"\n          v-model:field=\"artist.url\"\n          label=\"Custom URL\"\n          placeholder=\"custom-artist-url\"\n          class=\"mn-b-small\"\n        />\n        <p v-if=\"!artist.url && !editMode\" class=\"t-transp p-small mn-b-medium\">\n          Leave blank for auto-generation based on the artist name\n        </p>\n      </div>\n      \n      <!-- Social Media Section -->\n      <div class=\"bg-light pd-medium radius-medium\">\n        <h3 class=\"h3 mn-b-medium\">Social Media</h3>\n        \n        <div class=\"cols-2 mobile:cols-1 gap-medium\">\n          <!-- Telegram -->\n          <Field\n            v-model:field=\"artist.socials.telegram\"\n            label=\"Telegram\"\n            placeholder=\"@username\"\n            class=\"mn-b-medium\"\n          />\n          \n          <!-- Twitter -->\n          <Field\n            v-model:field=\"artist.socials.twitter\"\n            label=\"Twitter\"\n            placeholder=\"@username\"\n            class=\"mn-b-medium\"\n          />\n          \n          <!-- Facebook -->\n          <Field\n            v-model:field=\"artist.socials.facebook\"\n            label=\"Facebook\"\n            placeholder=\"username or page-name\"\n            class=\"mn-b-medium\"\n          />\n          \n          <!-- Instagram -->\n          <Field\n            v-model:field=\"artist.socials.instagram\"\n            label=\"Instagram\"\n            placeholder=\"@username\"\n            class=\"mn-b-medium\"\n          />\n        </div>\n      </div>\n      \n      <!-- Genres Section (assuming genres are available) -->\n      <div class=\"bg-light pd-medium radius-medium\">\n        <h3 class=\"h3 mn-b-medium\">Genres</h3>\n        <p class=\"t-transp mn-b-medium\">\n          Select genres that best describe this artist\n        </p>\n        \n        <div v-if=\"isLoadingGenres\" class=\"flex-center flex\">\n          <Loader class=\"mn-b-medium\" />\n        </div>\n        \n        <div v-else class=\"flex flex-wrap gap-small mn-b-medium\">\n          <Checkbox\n            v-for=\"genre in availableGenres\"\n            :key=\"genre._id\"\n            v-model:active=\"selectedGenres[genre._id]\"\n            :label=\"genre.name\"\n            class=\"pd-small bg-white radius-medium\"\n          />\n        </div>\n      </div>\n      \n      <!-- Status Section -->\n      <div class=\"bg-light pd-medium radius-medium\">\n        <h3 class=\"h3 mn-b-medium\">Publishing Status</h3>\n        \n        <Select\n          v-model:select=\"artist.status\"\n          :options=\"statusOptions\"\n          label=\"Status\"\n          class=\"mn-b-medium w-m-20r\"\n        />\n        \n        <Checkbox\n          v-model:active=\"artist.isVerified\"\n          label=\"Verified Artist\"\n          class=\"mn-b-medium\"\n        />\n      </div>\n      \n      <!-- Submit Button -->\n      <div class=\"flex flex-justify-between\">\n        <Button\n          @click=\"$router.go(-1)\"\n          class=\"bg-grey-nano t-black\"\n          :showSucces=\"false\"\n          :showLoader=\"false\"\n        >\n          Cancel\n        </Button>\n        \n        <Button\n          :submit=\"submitForm\"\n          class=\"bg-main t-black\"\n          :text=\"{\n            success: editMode ? 'Updated!' : 'Created!'\n          }\"\n        >\n          {{ editMode ? 'Update Artist' : 'Create Artist' }}\n        </Button>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted, computed } from 'vue';\nimport { useRouter, useRoute } from 'vue-router';\n\n// Import Martyrs components\nimport Field from '@martyrs/src/components/Field/Field.vue';\nimport Button from '@martyrs/src/components/Button/Button.vue';\nimport Checkbox from '@martyrs/src/components/Checkbox/Checkbox.vue';\nimport Select from '@martyrs/src/components/Select/Select.vue';\nimport UploadImage from '@martyrs/src/components/UploadImage/UploadImage.vue';\nimport Loader from '@martyrs/src/components/Loader/Loader.vue';\n\n// Import store\nimport * as artistsStore from '../../store/artists';\n// import * as genreStore from '../../store/genres'; // Assuming you have a genre store\nimport * as globals from '@martyrs/src/modules/globals/views/store/globals.js';\nimport * as auth from '@martyrs/src/modules/auth/views/store/auth.js';\n\n// Props\nconst props = defineProps({\n  editMode: {\n    type: Boolean,\n    default: false\n  },\n  url: {\n    type: String,\n    default: ''\n  }\n});\n\n// Router and route\nconst router = useRouter();\nconst route = useRoute();\n\n// State\nconst artist = reactive({\n  name: '',\n  bio: '',\n  photoUrl: '',\n  coverUrl: '',\n  website: '',\n  location: '',\n  isVerified: false,\n  status: 'draft',\n  socials: {\n    telegram: '',\n    twitter: '',\n    facebook: '',\n    instagram: ''\n  },\n  url: '',\n  genre: []\n});\n\nconst validation = reactive({\n  name: false,\n  bio: false\n});\n\n// Status options\nconst statusOptions = [\n  'draft',\n  'published',\n  'archived'\n];\n\n// Genres\nconst availableGenres = ref([]);\nconst selectedGenres = reactive({});\nconst isLoadingGenres = ref(false);\n\n// Computed\nconst genreIds = computed(() => {\n  return Object.keys(selectedGenres).filter(id => selectedGenres[id]);\n});\n\n// Methods\nconst fetchGenres = async () => {\n  isLoadingGenres.value = true;\n  try {\n    // Assuming genreStore has a fetchGenres method\n    // const genres = await genreStore.actions.fetchGenres();\n    // availableGenres.value = genres;\n  } catch (error) {\n    console.error('Error fetching genres:', error);\n    globals.actions.setError({\n      message: 'Failed to load genres'\n    });\n  } finally {\n    isLoadingGenres.value = false;\n  }\n};\n\nconst initializeSelectedGenres = (genreIds) => {\n  if (!genreIds || !Array.isArray(genreIds)) return;\n  \n  // Reset selected genres\n  for (const key in selectedGenres) {\n    delete selectedGenres[key];\n  }\n  \n  // Set selected genres based on artist's genres\n  genreIds.forEach(id => {\n    selectedGenres[id] = true;\n  });\n};\n\nconst fetchArtist = async () => {\n  if (!props.url) return;\n  \n  try {\n    const fetchedArtist = await artistsStore.actions.fetchArtistByUrl(props.url);\n    \n    if (!fetchedArtist) {\n      globals.actions.setError({\n        message: 'Artist not found'\n      });\n      return;\n    }\n    \n    // Update local artist data\n    Object.assign(artist, {\n      name: fetchedArtist.name || '',\n      bio: fetchedArtist.bio || '',\n      photoUrl: fetchedArtist.photoUrl || '',\n      coverUrl: fetchedArtist.coverUrl || '',\n      website: fetchedArtist.website || '',\n      location: fetchedArtist.location || '',\n      isVerified: fetchedArtist.isVerified || false,\n      status: fetchedArtist.status || 'draft',\n      url: fetchedArtist.url || '',\n      genre: fetchedArtist.genre || [],\n      _id: fetchedArtist._id,\n      socials: {\n        telegram: fetchedArtist.socials?.telegram || '',\n        twitter: fetchedArtist.socials?.twitter || '',\n        facebook: fetchedArtist.socials?.facebook || '',\n        instagram: fetchedArtist.socials?.instagram || ''\n      }\n    });\n    \n    // Initialize selected genres\n    initializeSelectedGenres(fetchedArtist.genre);\n    \n  } catch (error) {\n    console.error('Error fetching artist:', error);\n    globals.actions.setError({\n      message: 'Failed to load artist details'\n    });\n  }\n};\n\nconst validateForm = () => {\n  let isValid = true;\n  \n  // Validate name\n  if (!artist.name.trim()) {\n    validation.name = {\n      message: 'Artist name is required'\n    };\n    isValid = false;\n  } else {\n    validation.name = false;\n  }\n  \n  // Validate bio\n  if (artist.bio && artist.bio.length > 2000) {\n    validation.bio = {\n      message: 'Biography is too long (max 2000 characters)'\n    };\n    isValid = false;\n  } else {\n    validation.bio = false;\n  }\n  \n  return isValid;\n};\n\nconst submitForm = async () => {\n  if (!validateForm()) {\n    return;\n  }\n  \n  try {\n    // Prepare data for submission\n    const formData = {\n      ...artist,\n      genre: genreIds.value\n    };\n    \n    // Add ownership data if creating new artist\n    if (!props.editMode) {\n      formData.owner = {\n        type: 'user',\n        target: auth.state.user._id\n      };\n      formData.creator = {\n        type: 'user',\n        target: auth.state.user._id\n      };\n    }\n    \n    let result;\n    if (props.editMode) {\n      result = await artistsStore.actions.updateArtist(formData);\n    } else {\n      result = await artistsStore.actions.createArtist(formData);\n    }\n    \n    // Navigate to artist detail page\n    setTimeout(() => {\n      router.push({\n        name: 'artist-detail',\n        params: { url: result.url }\n      });\n    }, 1000);\n    \n  } catch (error) {\n    console.error('Error saving artist:', error);\n    globals.actions.setError({\n      message: 'Failed to save artist'\n    });\n  }\n};\n\nconst handleUploadError = (error) => {\n  console.error('Upload error:', error);\n  globals.actions.setError({\n    message: 'Error uploading image'\n  });\n};\n\n// Lifecycle hooks\nonMounted(async () => {\n  await fetchGenres();\n  \n  if (props.editMode) {\n    await fetchArtist();\n  }\n});\n</script>",
                "name": "ArtistForm.vue",
                "size": 11007,
                "type": "source"
              },
              {
                "path": "../../src/modules/music/components/pages/ArtistManager.vue",
                "relativePath": "modules/music/components/pages/ArtistManager.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"pd-medium\">\n    <div class=\"flex flex-justify-between flex-v-center mn-b-medium\">\n      <h2 class=\"h2\">Manage Artists</h2>\n      <Button\n        :submit=\"() => router.push({ name: 'artist-create' })\"\n        class=\"bg-main t-white\"\n        :showSucces=\"false\"\n        :showLoader=\"false\"\n      >\n        Create Artist\n      </Button>\n    </div>\n    \n    <div class=\"mn-b-medium\">\n      <Field\n        v-model:field=\"search\"\n        placeholder=\"Search artists...\"\n        class=\"w-m-40r\"\n        @update:field=\"handleSearch\"\n      >\n        <IconSearch class=\"i-medium mn-r-small\" />\n      </Field>\n    </div>\n    \n    <!-- Loading state -->\n    <div v-if=\"isLoading\" class=\"flex-center flex mn-medium\">\n      <Loader />\n    </div>\n    \n    <!-- Empty state -->\n    <div v-else-if=\"userArtists.length === 0\" class=\"bg-light pd-medium radius-medium t-center\">\n      <p class=\"mn-b-small p-medium\">You haven't created any artists yet</p>\n      <p class=\"p-small t-transp mn-b-medium\">Start by creating your first artist profile</p>\n      <Button\n        :submit=\"() => router.push({ name: 'artist-create' })\"\n        class=\"bg-main t-white\"\n        :showSucces=\"false\"\n        :showLoader=\"false\"\n      >\n        Create Artist\n      </Button>\n    </div>\n    \n    <!-- Artist list -->\n    <div v-else class=\"cols-1 gap-small\">\n      <div\n        v-for=\"artist in userArtists\"\n        :key=\"artist._id\"\n        class=\"bg-light pd-medium radius-medium flex-v-center flex flex-justify-between hover-bg-light mobile:flex-column\"\n      >\n        <div class=\"flex-v-center flex mobile:w-100 mobile:mn-b-small\">\n          <div class=\"w-4r h-4r radius-medium o-hidden mn-r-medium mobile:mn-r-small\">\n            <img\n              v-if=\"artist.photoUrl\"\n              :src=\"FILE_SERVER_URL + artist.photoUrl\"\n              alt=\"Artist photo\"\n              class=\"w-100 h-100 object-fit-cover\"\n            />\n            <div v-else class=\"w-100 h-100 bg-second-nano flex-center flex\">\n              <span>{{ artist.name }}</span>\n            </div>\n          </div>\n          \n          <div>\n            <h3 class=\"h5 mn-b-thin\">{{ artist.name }}</h3>\n            <p class=\"p-small t-transp\">\n              {{getStatusLabel(artist.status)}}\n              <span v-if=\"artist.isVerified\" class=\"bg-second-nano pd-micro radius-small\">\n                Verified\n              </span>\n            </p>\n          </div>\n        </div>\n        \n        <div class=\"flex flex-nowrap gap-small mobile:w-100 mobile:flex-justify-between\">\n          <Button\n            :submit=\"() => viewArtist(artist)\"\n            class=\"bg-grey-nano t-black\"\n            :showSucces=\"false\"\n            :showLoader=\"false\"\n          >\n            View\n          </Button>\n          \n          <Button\n            :submit=\"() => editArtist(artist)\"\n            class=\"bg-main t-white\"\n            :showSucces=\"false\"\n            :showLoader=\"false\"\n          >\n            Edit\n          </Button>\n          \n          <Button\n            :submit=\"() => confirmDelete(artist)\"\n            class=\"bg-fourth t-white\"\n            :showSucces=\"false\"\n            :showLoader=\"false\"\n          >\n            Delete\n          </Button>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Confirmation popup -->\n    <Popup\n      :isPopupOpen=\"showDeleteConfirm\"\n      @close-popup=\"showDeleteConfirm = false\"\n      class=\"bg-white pd-medium radius-medium w-m-33r\"\n    >\n      <h3 class=\"h3 mn-b-medium\">Delete Artist</h3>\n      <p class=\"p-medium mn-b-medium\">\n        Are you sure you want to delete <b>{{ selectedArtist?.name }}</b>?\n      </p>\n      <p class=\"p-small t-transp mn-b-medium\">\n        This action cannot be undone and will remove all artist data.\n      </p>\n      \n      <div class=\"flex flex-justify-between\">\n        <Button\n          :submit=\"() => showDeleteConfirm = false\"\n          class=\"bg-grey-nano t-black\"\n          :showSucces=\"false\"\n          :showLoader=\"false\"\n        >\n          Cancel\n        </Button>\n        \n        <Button\n          :submit=\"deleteArtist\"\n          class=\"bg-fourth t-white\"\n        >\n          Confirm Delete\n        </Button>\n      </div>\n    </Popup>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, computed } from 'vue';\nimport { useRouter } from 'vue-router';\n\n// Import Martyrs components\nimport Field from '@martyrs/src/components/Field/Field.vue';\nimport Button from '@martyrs/src/components/Button/Button.vue';\nimport Loader from '@martyrs/src/components/Loader/Loader.vue';\nimport Status from '@martyrs/src/components/Status/Status.vue';\nimport Popup from '@martyrs/src/components/Popup/Popup.vue';\nimport IconSearch from '@martyrs/src/modules/icons/navigation/IconSearch.vue';\n\n// Import store\nimport * as artistsStore from '../../store/artists';\nimport * as auth from '@martyrs/src/modules/auth/views/store/auth.js';\nimport * as globals from '@martyrs/src/modules/globals/views/store/globals.js';\n\n// Router\nconst router = useRouter();\n\n// State\nconst search = ref('');\nconst isLoading = ref(false);\nconst showDeleteConfirm = ref(false);\nconst selectedArtist = ref(null);\n\n// Computed\nconst userArtists = computed(() => {\n  return artistsStore.state.userArtists;\n});\n\n// Methods\nconst loadUserArtists = async () => {\n  isLoading.value = true;\n  try {\n    await artistsStore.actions.fetchUserArtists(auth.state.user._id);\n  } catch (error) {\n    console.error('Error loading artists:', error);\n    globals.actions.setError({\n      message: 'Failed to load your artists'\n    });\n  } finally {\n    isLoading.value = false;\n  }\n};\n\nconst handleSearch = async (value) => {\n  if (!value.trim()) {\n    // If search is empty, load all user artists\n    await loadUserArtists();\n    return;\n  }\n  \n  isLoading.value = true;\n  try {\n    // Search only within user's artists\n    const options = {\n      creator: auth.state.user._id,\n      search: value\n    };\n    await artistsStore.actions.fetchArtists(options);\n    // Update userArtists (assuming the store is correctly updating userArtists)\n  } catch (error) {\n    console.error('Error searching artists:', error);\n  } finally {\n    isLoading.value = false;\n  }\n};\n\nconst viewArtist = (artist) => {\n  router.push({\n    name: 'artist-detail',\n    params: { url: artist.url }\n  });\n};\n\nconst editArtist = (artist) => {\n  router.push({\n    name: 'artist-edit',\n    params: { url: artist.url }\n  });\n};\n\nconst confirmDelete = (artist) => {\n  selectedArtist.value = artist;\n  showDeleteConfirm.value = true;\n};\n\nconst deleteArtist = async () => {\n  if (!selectedArtist.value) return;\n  \n  try {\n    await artistsStore.actions.deleteArtist(selectedArtist.value._id);\n    showDeleteConfirm.value = false;\n    selectedArtist.value = null;\n    \n    // Show success message\n    globals.actions.setError({\n      message: 'Artist deleted successfully',\n      status: 'success'\n    });\n  } catch (error) {\n    console.error('Error deleting artist:', error);\n    globals.actions.setError({\n      message: 'Failed to delete artist'\n    });\n  }\n};\n\nconst getStatusLabel = (status) => {\n  const statusMap = {\n    'draft': {\n      text: 'Draft',\n      color: '#888888'\n    },\n    'published': {\n      text: 'Published',\n      color: '#10FA7D' // main color\n    },\n    'archived': {\n      text: 'Archived',\n      color: '#FF0A54' // fourth color\n    }\n  };\n  \n  return statusMap[status] || {\n    text: status,\n    color: '#888888'\n  };\n};\n\n// Lifecycle hooks\nonMounted(async () => {\n  await loadUserArtists();\n});\n</script>",
                "name": "ArtistManager.vue",
                "size": 7513,
                "type": "source"
              },
              {
                "path": "../../src/modules/music/components/pages/MusicHome.vue",
                "relativePath": "modules/music/components/pages/MusicHome.vue",
                "extension": ".vue",
                "content": "<!-- components/pages/MusicHome.vue -->\n<template>\n  <div class=\"music-home-page pd-medium mobile:pd-thin\">\n    <!-- Hero Section -->\n    <section class=\"bg-gradient-dark pd-medium radius-medium mn-b-medium\">\n      <h1 class=\"t-white mn-b-small\">Welcome to Music</h1>\n      <p class=\"t-grey t-medium\">Discover new tracks, albums, and playlists</p>\n    </section>\n    \n    <!-- Featured Playlists Section -->\n    <section class=\"mn-b-medium\">\n      <div class=\"flex-between flex mn-b-small\">\n        <h2 class=\"\">Featured Playlists</h2>\n        <router-link :to=\"{ path: '/music/playlists' }\" class=\"t-main t-small hover-opacity\">See all</router-link>\n      </div>\n      \n      <Feed\n        v-model:items=\"featuredPlaylists\"\n        :isLoading=\"loadingFeatured\"\n        :showLoadMore=\"false\"\n        :skeleton=\"{\n          structure: [\n            { block: 'square', size: 'large', rounded: false },\n            { block: 'text', size: 'medium' },\n            { block: 'text', size: 'small' }\n          ],\n          horizontal: false\n        }\"\n        class=\"cols-5 mobile:cols-2 gap-small\"\n      >\n        <template #default=\"{ items }\">\n          <li v-for=\"playlist in items\" :key=\"playlist._id\">\n            <PlaylistCard :playlist=\"playlist\" class=\"hover-scale-1 transition-cubic-in-out\" />\n          </li>\n        </template>\n      </Feed>\n    </section>\n    \n    <!-- New Releases Section -->\n    <section class=\"mn-b-medium\">\n      <div class=\"flex-between flex mn-b-small\">\n        <h2 class=\"\">New Releases</h2>\n        <router-link :to=\"{ path: '/music/albums' }\" class=\"t-main t-small hover-opacity\">See all</router-link>\n      </div>\n      \n      <Feed\n        v-model:items=\"recentAlbums\"\n        :isLoading=\"loadingRecentAlbums\"\n        :showLoadMore=\"false\"\n        :skeleton=\"{\n          structure: [\n            { block: 'square', size: 'large', rounded: false },\n            { block: 'text', size: 'medium' },\n            { block: 'text', size: 'small' }\n          ],\n          horizontal: false\n        }\"\n        class=\"cols-5 mobile:cols-2 gap-small\"\n      >\n        <template #default=\"{ items }\">\n          <li v-for=\"album in items\" :key=\"album._id\">\n            <AlbumCard :album=\"album\" class=\"hover-scale-1 transition-cubic-in-out\" />\n          </li>\n        </template>\n      </Feed>\n    </section>\n    \n    <!-- Popular Tracks Section -->\n    <section class=\"mn-b-medium\">\n      <div class=\"flex-between flex mn-b-small\">\n        <h2 class=\"\">Popular Tracks</h2>\n        <router-link :to=\"{ path: '/music/tracks' }\" class=\"t-main t-small hover-opacity\">See all</router-link>\n      </div>\n      \n      <Feed\n        v-model:items=\"popularTracks\"\n        :isLoading=\"loadingPopularTracks\"\n        :showLoadMore=\"false\"\n        :skeleton=\"{\n          structure: [\n            { block: 'text', size: 'medium' },\n            { block: 'text', size: 'small' }\n          ],\n          horizontal: true\n        }\"\n      >\n        <template #default=\"{ items }\">\n          <TrackList \n            :tracks=\"items\" \n            :showAlbum=\"true\" \n            :showCover=\"true\"\n            class=\"bg-dark-transp-10 radius-medium o-hidden\"\n          />\n        </template>\n      </Feed>\n    </section>\n    \n    <!-- Top Artists Section -->\n    <section>\n      <div class=\"flex-between flex mn-b-small\">\n        <h2 class=\"\">Top Artists</h2>\n        <router-link :to=\"{ path: '/music/artists' }\" class=\"t-main t-small hover-opacity\">See all</router-link>\n      </div>\n      \n      <Feed\n        v-model:items=\"topArtists\"\n        :isLoading=\"loadingTopArtists\"\n        :showLoadMore=\"false\"\n        :skeleton=\"{\n          structure: [\n            { block: 'circle', size: 'large' },\n            { block: 'text', size: 'medium' }\n          ],\n          horizontal: false\n        }\"\n        class=\"cols-6 mobile:cols-3 gap-small\"\n      >\n        <template #default=\"{ items }\">\n          <li v-for=\"artist in items\" :key=\"artist._id\">\n            <ArtistCard :artist=\"artist\" class=\"hover-scale-1 transition-cubic-in-out\" />\n          </li>\n        </template>\n      </Feed>\n    </section>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, computed } from 'vue';\nimport Feed from '@martyrs/src/components/Feed/Feed.vue';\nimport PlaylistCard from '../cards/PlaylistCard.vue';\nimport AlbumCard from '../cards/AlbumCard.vue';\nimport ArtistCard from '../cards/ArtistCard.vue';\nimport TrackList from '../lists/TrackList.vue';\n\n// Store imports\nimport { state as playlistsState, actions as playlistsActions } from '../../store/playlists.js';\nimport { state as albumsState, actions as albumsActions } from '../../store/albums.js';\nimport { state as tracksState, actions as tracksActions } from '../../store/tracks.js';\nimport { state as artistsState, actions as artistsActions } from '../../store/artists.js';\n\n// Computed properties\nconst featuredPlaylists = computed(() => playlistsState.featuredPlaylists);\nconst recentAlbums = computed(() => albumsState.albums);\nconst popularTracks = computed(() => tracksState.popular);\nconst topArtists = computed(() => artistsState.topArtists);\n\n// Loading states\nconst loadingFeatured = computed(() => playlistsState.loadingFeatured);\nconst loadingRecentAlbums = computed(() => albumsState.isLoading);\nconst loadingPopularTracks = computed(() => tracksState.loadingPopular);\nconst loadingTopArtists = computed(() => artistsState.loadingTopArtists);\n\nonMounted(async () => {\n  // Fetch featured playlists\n  playlistsActions.fetchFeaturedPlaylists(5);\n  \n  // Fetch recent albums\n  albumsActions.fetchAlbums({\n    limit: 5,\n    sortParam: 'releaseDate',\n    sortOrder: 'desc'\n  });\n  \n  // Fetch popular tracks\n  tracksActions.fetchPopularTracks(10);\n  \n  // Fetch top artists\n  artistsActions.fetchTopArtists(6);\n});\n</script>\n\n<style scoped>\n.bg-gradient-dark {\n  background: linear-gradient(to bottom, rgba(var(--dark), 0.8), rgba(var(--black), 0.9));\n}\n</style>",
                "name": "MusicHome.vue",
                "size": 5922,
                "type": "source"
              },
              {
                "path": "../../src/modules/music/components/pages/MusicLibrary.vue",
                "relativePath": "modules/music/components/pages/MusicLibrary.vue",
                "extension": ".vue",
                "content": "<!-- components/pages/MusicLibrary.vue -->\n<template>\n  <div class=\"music-library-page\">\n    <h1 class=\"t-white mn-b-medium\">Your Library</h1>\n    \n    <!-- Filter Tabs -->\n    <div class=\"library-tabs mn-b-medium\">\n      <div class=\"flex gap-small\">\n        <Button \n          v-for=\"tab in tabs\"\n          :key=\"tab.id\"\n          @click=\"activeTab = tab.id\"\n          :class=\"[\n            activeTab === tab.id ? 'bg-white t-black' : 'bg-dark-transp-50 t-white hover-bg-dark',\n          ]\"\n          class=\"radius-extra pd-small\"\n          :showLoader=\"false\" \n          :showSucces=\"false\"\n        >\n          {{ tab.label }}\n        </Button>\n      </div>\n    </div>\n    \n    <!-- Content based on active tab -->\n    <div v-if=\"isLoading\" class=\"flex-center flex pd-big\">\n      <Loader />\n    </div>\n    \n    <!-- Playlists Tab -->\n    <div v-else-if=\"activeTab === 'playlists'\" class=\"playlists-tab\">\n      <div class=\"flex-between flex mn-b-small\">\n        <h2 class=\"t-white\">Your Playlists</h2>\n        <Button \n          @click=\"showCreatePlaylistModal = true\"\n          class=\"bg-main t-white radius-small pd-small hover-scale-1\"\n          :showLoader=\"false\" \n          :showSucces=\"false\"\n        >\n          Create Playlist\n        </Button>\n      </div>\n      \n      <div v-if=\"userPlaylists.length === 0\" class=\"empty-state t-center pd-big bg-dark-transp-10 radius-medium\">\n        <h3 class=\"t-white mn-b-small\">No playlists yet</h3>\n        <p class=\"t-grey t-medium\">Create your first playlist to see it here</p>\n      </div>\n      \n      <PlaylistList v-else :playlists=\"userPlaylists\" />\n    </div>\n    \n    <!-- Albums Tab -->\n    <div v-else-if=\"activeTab === 'albums'\" class=\"albums-tab\">\n      <div class=\"flex-between flex mn-b-small\">\n        <h2 class=\"t-white\">Your Albums</h2>\n      </div>\n      \n      <div v-if=\"userAlbums.length === 0\" class=\"empty-state t-center pd-big bg-dark-transp-10 radius-medium\">\n        <h3 class=\"t-white mn-b-small\">No albums yet</h3>\n        <p class=\"t-grey t-medium\">Upload your first album to see it here</p>\n      </div>\n      \n      <AlbumList v-else :albums=\"userAlbums\" />\n    </div>\n    \n    <!-- Artists Tab -->\n    <div v-else-if=\"activeTab === 'artists'\" class=\"artists-tab\">\n      <ArtistManager/>\n      <!-- <div class=\"flex-between flex mn-b-small\">\n        <h2 class=\"t-white\">Your Artists</h2>\n      </div>\n      \n      <div v-if=\"userArtists.length === 0\" class=\"empty-state t-center pd-big bg-dark-transp-10 radius-medium\">\n        <h3 class=\"t-white mn-b-small\">No artists yet</h3>\n        <p class=\"t-grey t-medium\">Create your first artist profile to see it here</p>\n      </div>\n      \n      <ArtistList v-else :artists=\"userArtists\" /> -->\n    </div>\n    \n    <!-- Tracks Tab -->\n    <div v-else-if=\"activeTab === 'tracks'\" class=\"tracks-tab\">\n      <div class=\"flex-between flex mn-b-small\">\n        <h2 class=\"t-white\">Your Tracks</h2>\n        <Button \n          @click=\"$router.push({ name: 'music-upload' })\"\n          class=\"bg-main t-white radius-small pd-small hover-scale-1\"\n          :showLoader=\"false\" \n          :showSucces=\"false\"\n        >\n          Upload Track\n        </Button>\n      </div>\n      \n      <div v-if=\"userTracks.length === 0\" class=\"empty-state t-center pd-big bg-dark-transp-10 radius-medium\">\n        <h3 class=\"t-white mn-b-small\">No tracks yet</h3>\n        <p class=\"t-grey t-medium\">Upload your first track to see it here</p>\n      </div>\n      \n      <TrackList \n        v-else\n        :tracks=\"userTracks\"\n        :showAlbum=\"true\" \n        :showCover=\"true\"\n        class=\"bg-dark-transp-10 radius-medium o-hidden\"\n      />\n    </div>\n    \n        <!-- Create Playlist Modal -->\n    <Popup \n      v-if=\"showCreatePlaylistModal\" \n      @close-popup=\"showCreatePlaylistModal = false\" \n      class=\"bg-dark pd-small w-m-25r radius-medium t-white\"\n    >\n      <h3 class=\"mn-b-medium\">Create Playlist</h3>\n      <PlaylistForm @created=\"onPlaylistCreated\" @cancel=\"showCreatePlaylistModal = false\" />\n    </Popup>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport TrackList from '../lists/TrackList.vue';\nimport AlbumList from '../lists/AlbumList.vue';\nimport PlaylistList from '../lists/PlaylistList.vue';\nimport ArtistList from '../lists/ArtistList.vue';\nimport ArtistManager from '../pages/ArtistManager.vue';\nimport Button from '@martyrs/src/components/Button/Button.vue';\nimport Loader from '@martyrs/src/components/Loader/Loader.vue';\nimport Popup from '@martyrs/src/components/Popup/Popup.vue';\nimport PlaylistForm from '../forms/PlaylistForm.vue';\n\n// Import store modules\nimport { state as authState } from '@martyrs/src/modules/auth/views/store/auth.js';\nimport { state as playlistsState, actions as playlistsActions } from '../../store/playlists.js';\nimport { state as albumsState, actions as albumsActions } from '../../store/albums.js';\nimport { state as artistsState, actions as artistsActions } from '../../store/artists.js';\nimport { state as tracksState, actions as tracksActions } from '../../store/tracks.js';\n\nconst router = useRouter();\n\n// State\nconst isLoading = ref(true);\nconst activeTab = ref('playlists');\nconst showCreatePlaylistModal = ref(false);\n\n// Tabs configuration\nconst tabs = [\n  { id: 'playlists', label: 'Playlists' },\n  { id: 'albums', label: 'Albums' },\n  { id: 'artists', label: 'Artists' },\n  { id: 'tracks', label: 'Tracks' }\n];\n\n// Computed\nconst userPlaylists = ref([]);\nconst userAlbums = ref([]);\nconst userArtists = ref([]);\nconst userTracks = ref([]);\n\n// Methods\nconst fetchLibraryData = async () => {\n  isLoading.value = true;\n  \n  try {\n    if (!authState.user || !authState.user._id) {\n      router.push({ name: 'Sign In', query: { redirect: router.currentRoute.value.fullPath } });\n      return;\n    }\n    \n    // Fetch user's content\n    await tracksActions.fetchUserTracks(authState.user._id).then(tracks => userTracks.value = tracks || []);\n  } catch (error) {\n    console.error('Error fetching library data:', error);\n  } finally {\n    isLoading.value = false;\n  }\n};\n\nconst onPlaylistCreated = (playlist) => {\n  userPlaylists.value.unshift(playlist);\n  showCreatePlaylistModal.value = false;\n  router.push({ name: 'playlist-detail', params: { url: playlist.url } });\n};\n\n// Fetch library data when component mounts\nonMounted(fetchLibraryData);\n</script>",
                "name": "MusicLibrary.vue",
                "size": 6402,
                "type": "source"
              },
              {
                "path": "../../src/modules/music/components/pages/MusicUpload.vue",
                "relativePath": "modules/music/components/pages/MusicUpload.vue",
                "extension": ".vue",
                "content": "<!-- components/pages/MusicUpload.vue -->\n<template>\n  <div class=\"music-upload-page\">\n    <h1 class=\"t-white mn-b-medium\">Upload Music</h1>\n    \n    <div class=\"upload-container bg-dark-transp-10 radius-medium pd-medium\">\n      <div v-if=\"!authState.access.status\" class=\"t-center pd-big\">\n        <h2 class=\"t-white mn-b-small\">Sign in to upload</h2>\n        <p class=\"t-grey t-medium mn-b-medium\">You need to be signed in to upload tracks</p>\n        <Button \n          @click=\"$router.push({ name: 'Sign In', query: { redirect: $route.fullPath } })\"\n          class=\"bg-main t-white radius-small pd-small hover-scale-1\"\n          :showLoader=\"false\" \n          :showSucces=\"false\"\n        >\n          Sign In\n        </Button>\n      </div>\n      \n      <div v-else>\n        <h2 class=\"t-white mn-b-medium\">Upload a Track</h2>\n        \n        <UploadForm @uploaded=\"onTrackUploaded\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport Button from '@martyrs/src/components/Button/Button.vue';\nimport UploadForm from '../forms/UploadForm.vue';\n\n// Import auth store\nimport { state as authState } from '@martyrs/src/modules/auth/views/store/auth.js';\n\nconst router = useRouter();\n\nconst onTrackUploaded = (track) => {\n  // Navigate to the uploaded track's detail page\n  router.push({ name: 'track-detail', params: { url: track.url } });\n};\n</script>",
                "name": "MusicUpload.vue",
                "size": 1436,
                "type": "source"
              },
              {
                "path": "../../src/modules/music/components/pages/PlaylistDetail.vue",
                "relativePath": "modules/music/components/pages/PlaylistDetail.vue",
                "extension": ".vue",
                "content": "<!-- components/pages/PlaylistDetail.vue -->\n<template>\n  <div class=\"playlist-detail-page\">\n    <div v-if=\"isLoading\" class=\"w-100 h-25r flex-center flex\">\n      <Loader />\n    </div>\n    \n    <div v-else-if=\"!playlist\" class=\"t-center pd-big\">\n      <h2 class=\"t-white\">Playlist not found</h2>\n      <p class=\"t-grey t-medium\">The playlist you're looking for doesn't exist or has been removed.</p>\n    </div>\n    \n    <div v-else>\n      <!-- Playlist Header -->\n      <div class=\"playlist-header mn-b-medium flex flex-v-center gap-medium\">\n        <div class=\"playlist-cover\">\n          <Media \n            :url=\"playlist.coverUrl || '/assets/placeholder-playlist.jpg'\" \n            class=\"w-15r h-15r object-fit-cover shadow-lg radius-small\"\n          />\n        </div>\n        \n        <div class=\"playlist-info\">\n          <div class=\"t-small t-uppercase t-white\">Playlist</div>\n          <h1 class=\"t-white\">{{ playlist.title }}</h1>\n          \n          <div v-if=\"playlist.description\" class=\"playlist-description t-grey mn-t-thin mn-b-small\">\n            {{ playlist.description }}\n          </div>\n          \n          <div class=\"playlist-meta flex flex-v-center\">\n            <router-link \n              v-if=\"playlist.owner && playlist.owner.target\"\n              :to=\"getOwnerProfileLink(playlist.owner)\"\n              class=\"t-white t-medium hover-t-main\"\n            >\n              {{ getPlaylistOwnerName(playlist) }}\n            </router-link>\n            <span v-else class=\"t-white t-medium\">{{ getPlaylistOwnerName(playlist) }}</span>\n            \n            <span class=\"t-grey mn-l-small mn-r-small\">•</span>\n            \n            <span class=\"t-grey\">{{ playlistTracks.length }} {{ playlistTracks.length === 1 ? 'song' : 'songs' }}</span>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Playlist Actions -->\n      <div class=\"playlist-actions mn-b-medium flex flex-v-center gap-small\">\n        <Button \n          @click=\"playPlaylist\"\n          class=\"play-button bg-main radius-round pd-small flex-v-center flex gap-small hover-scale-1\"\n          :showLoader=\"false\" \n          :showSucces=\"false\"\n        >\n          <IconPlay class=\"i-small\" fill=\"rgb(var(--black))\"/>\n          <span class=\"t-black t-medium\">Play</span>\n        </Button>\n        \n        <Button \n          @click=\"toggleFavorite\"\n          class=\"bg-transparent border-none pd-zero\"\n          :showLoader=\"false\" \n          :showSucces=\"false\"\n        >\n          <IconHeart class=\"i-medium\" :fill=\"isFavorite ? 'rgb(var(--main))' : 'rgb(var(--white))'\"/>\n        </Button>\n        \n        <Dropdown class=\"pos-relative\">\n          <Button \n            @click=\"showDropdown = !showDropdown\"\n            class=\"bg-transparent border-none pd-zero\"\n            :showLoader=\"false\" \n            :showSucces=\"false\"\n          >\n            <IconEllipsis class=\"i-medium\" fill=\"rgb(var(--white))\"/>\n          </Button>\n          \n          <template #content>\n            <ul v-if=\"showDropdown\" class=\"pd-small bg-dark radius-small pos-absolute pos-t-100 pos-r-0 z-index-3 w-max-15r mn-t-thin\">\n              <li v-if=\"isOwner\" class=\"mn-b-thin\">\n                <Button \n                  @click=\"editPlaylist\"\n                  class=\"bg-transparent border-none pd-thin t-white w-100 t-left hover-bg-dark radius-small\"\n                  :showLoader=\"false\" \n                  :showSucces=\"false\"\n                >\n                  <span>Edit Details</span>\n                </Button>\n              </li>\n              <li class=\"mn-b-thin\">\n                <Button \n                  @click=\"addToQueue\"\n                  class=\"bg-transparent border-none pd-thin t-white w-100 t-left hover-bg-dark radius-small\"\n                  :showLoader=\"false\" \n                  :showSucces=\"false\"\n                >\n                  <span>Add to Queue</span>\n                </Button>\n              </li>\n              <li v-if=\"isOwner\" class=\"mn-b-thin\">\n                <Button \n                  @click=\"toggleCollaborative\"\n                  class=\"bg-transparent border-none pd-thin t-white w-100 t-left hover-bg-dark radius-small\"\n                  :showLoader=\"false\" \n                  :showSucces=\"false\"\n                >\n                  <span>{{ playlist.isCollaborative ? 'Make Private' : 'Make Collaborative' }}</span>\n                </Button>\n              </li>\n              <li v-if=\"isOwner\" class=\"mn-b-thin\">\n                <Button \n                  @click=\"deletePlaylist\"\n                  class=\"bg-transparent border-none pd-thin t-fourth w-100 t-left hover-bg-dark radius-small\"\n                  :showLoader=\"false\" \n                  :showSucces=\"false\"\n                >\n                  <span>Delete</span>\n                </Button>\n              </li>\n              <li>\n                <Button \n                  @click=\"copyLink\"\n                  class=\"bg-transparent border-none pd-thin t-white w-100 t-left hover-bg-dark radius-small\"\n                  :showLoader=\"false\" \n                  :showSucces=\"false\"\n                >\n                  <span>Copy Link</span>\n                </Button>\n              </li>\n            </ul>\n          </template>\n        </Dropdown>\n      </div>\n      \n      <!-- Playlist Tracks -->\n      <div class=\"playlist-tracks\">\n        <div v-if=\"playlistTracks.length === 0\" class=\"empty-tracks t-center pd-big bg-dark-transp-10 radius-medium\">\n          <h3 class=\"t-white mn-b-small\">This playlist is empty</h3>\n          <p class=\"t-grey t-medium\">Add some tracks to get started</p>\n          \n          <Button \n            v-if=\"isOwner || isCollaborator\"\n            @click=\"$router.push({ name: 'music-search' })\"\n            class=\"bg-main t-white radius-small pd-small mn-t-medium hover-scale-1\"\n            :showLoader=\"false\" \n            :showSucces=\"false\"\n          >\n            Find Tracks\n          </Button>\n        </div>\n        \n        <TrackList \n          v-else\n          :tracks=\"playlistTracks\"\n          :showAlbum=\"true\" \n          :showCover=\"true\"\n          class=\"bg-dark-transp-10 radius-medium o-hidden\"\n        />\n      </div>\n      \n      <!-- Edit Playlist Modal -->\n      <Popup \n        v-if=\"showEditModal && isOwner\" \n        @close-popup=\"showEditModal = false\" \n        class=\"bg-dark pd-small w-m-25r radius-medium t-white\"\n      >\n        <h3 class=\"mn-b-medium\">Edit Playlist</h3>\n        \n        <form @submit.prevent=\"updatePlaylist\">\n          <div class=\"form-group mn-b-medium\">\n            <label for=\"title\" class=\"t-white t-medium mn-b-thin d-block\">Playlist Name</label>\n            <Field \n              v-model:field=\"editForm.title\"\n              id=\"title\"\n              type=\"text\"\n              placeholder=\"Playlist Name\"\n              :validation=\"validationErrors.title\"\n              class=\"w-100 pd-small bg-dark-transp-25 radius-small t-white\"\n            />\n          </div>\n          \n          <div class=\"form-group mn-b-medium\">\n            <label for=\"description\" class=\"t-white t-medium mn-b-thin d-block\">Description</label>\n            <Field \n              v-model:field=\"editForm.description\"\n              id=\"description\"\n              type=\"textarea\"\n              placeholder=\"Add an optional description\"\n              class=\"w-100 pd-small bg-dark-transp-25 radius-small t-white\"\n            />\n          </div>\n          \n          <div class=\"form-group mn-b-medium\">\n            <label class=\"t-white t-medium mn-b-thin d-block\">Privacy</label>\n            <div class=\"flex gap-small\">\n              <Radio \n                v-model:radio=\"editForm.isPublic\"\n                :value=\"true\"\n                name=\"privacy\"\n                label=\"Public\"\n                class=\"t-white\"\n              />\n              <Radio \n                v-model:radio=\"editForm.isPublic\"\n                :value=\"false\"\n                name=\"privacy\"\n                label=\"Private\"\n                class=\"t-white\"\n              />\n            </div>\n          </div>\n          \n          <div class=\"form-group mn-b-medium\">\n            <label class=\"t-white t-medium mn-b-thin d-block\">Cover Image</label>\n            <div class=\"playlist-cover-upload flex gap-medium\">\n              <div class=\"playlist-cover-preview bg-dark-transp-25 radius-small o-hidden\">\n                <Media \n                  v-if=\"editForm.coverUrl\"\n                  :url=\"editForm.coverUrl\"\n                  class=\"w-10r h-10r object-fit-cover\"\n                />\n                <div v-else class=\"w-10r h-10r flex-center flex\">\n                  <IconMusic class=\"i-big\" fill=\"rgb(var(--grey))\"/>\n                </div>\n              </div>\n              \n              <UploadImage\n                v-model:photo=\"editForm.coverUrl\"\n                uploadPath=\"playlists\"\n                class=\"flex-1 h-10r bg-dark-transp-25 radius-small\"\n              />\n            </div>\n          </div>\n          \n          <div class=\"form-actions t-right\">\n            <Button \n              @click=\"showEditModal = false\"\n              type=\"button\"\n              class=\"bg-dark-transp-25 t-white pd-small radius-small mn-r-small hover-bg-dark\"\n              :showLoader=\"false\" \n              :showSucces=\"false\"\n            >\n              Cancel\n            </Button>\n            \n            <Button \n              type=\"submit\"\n              class=\"bg-main t-white pd-small radius-small hover-scale-1\"\n              :submit=\"updatePlaylist\"\n              :showLoader=\"true\" \n              :showSucces=\"true\"\n              :validation=\"!!Object.keys(validationErrors).length\"\n            >\n              Save\n            </Button>\n          </div>\n        </form>\n      </Popup>\n      \n      <!-- Delete Confirmation Modal -->\n      <Popup \n        v-if=\"showDeleteModal\" \n        @close-popup=\"showDeleteModal = false\" \n        class=\"bg-dark pd-small w-m-25r radius-medium t-white\"\n      >\n        <h3 class=\"mn-b-medium\">Delete Playlist</h3>\n        <p class=\"t-grey mn-b-medium\">Are you sure you want to delete this playlist? This action cannot be undone.</p>\n        \n        <div class=\"t-right\">\n          <Button \n            @click=\"showDeleteModal = false\"\n            class=\"bg-dark-transp-25 t-white pd-small radius-small mn-r-small hover-bg-dark\"\n            :showLoader=\"false\" \n            :showSucces=\"false\"\n          >\n            Cancel\n          </Button>\n          \n          <Button \n            @click=\"confirmDelete\"\n            class=\"bg-fourth t-white pd-small radius-small hover-scale-1\"\n            :showLoader=\"true\" \n            :showSucces=\"true\"\n          >\n            Delete\n          </Button>\n        </div>\n      </Popup>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, reactive, onMounted, watch } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport TrackList from '../lists/TrackList.vue';\nimport Button from '@martyrs/src/components/Button/Button.vue';\nimport Loader from '@martyrs/src/components/Loader/Loader.vue';\nimport Media from '@martyrs/src/components/Media/Media.vue';\nimport Dropdown from '@martyrs/src/components/Dropdown/Dropdown.vue';\nimport Popup from '@martyrs/src/components/Popup/Popup.vue';\nimport Field from '@martyrs/src/components/Field/Field.vue';\nimport Radio from '@martyrs/src/components/Radio/Radio.vue';\nimport UploadImage from '@martyrs/src/components/UploadImage/UploadImage.vue';\n\n// Import icons\nimport IconPlay from '@martyrs/src/modules/icons/navigation/IconPlay.vue';\nimport IconHeart from '@martyrs/src/modules/icons/navigation/IconHeart.vue';\nimport IconEllipsis from '@martyrs/src/modules/icons/navigation/IconEllipsis.vue';\nimport IconMusic from '@martyrs/src/modules/icons/entities/IconMusic.vue';\n\n// Import store modules\nimport { state as authState } from '@martyrs/src/modules/auth/views/store/auth.js';\nimport { state as playlistsState, actions as playlistsActions } from '../../store/playlists.js';\nimport { actions as playerActions } from '../../store/player.js';\n\nconst route = useRoute();\nconst router = useRouter();\n\n// State\nconst isLoading = ref(true);\nconst isFavorite = ref(false);\nconst showDropdown = ref(false);\nconst showEditModal = ref(false);\nconst showDeleteModal = ref(false);\n\n// Validation\nconst validationErrors = reactive({});\n\n// Edit form\nconst editForm = reactive({\n  title: '',\n  description: '',\n  isPublic: true,\n  coverUrl: ''\n});\n\n// Computed properties\nconst playlist = computed(() => playlistsState.currentPlaylist);\nconst playlistTracks = computed(() => playlistsState.currentPlaylistTracks);\n\nconst isOwner = computed(() => {\n  if (!playlist.value || !authState.user) return false;\n  \n  return (\n    playlist.value.owner?.target?._id === authState.user._id ||\n    playlist.value.owner?.target === authState.user._id\n  );\n});\n\nconst isCollaborator = computed(() => {\n  if (!playlist.value || !authState.user) return false;\n  \n  return playlist.value.collaborators?.some(collab => \n    collab._id === authState.user._id || collab === authState.user._id\n  );\n});\n\n// Methods\nconst getPlaylistOwnerName = (playlist) => {\n  if (!playlist || !playlist.owner) return 'Unknown';\n  \n  const owner = playlist.owner.target;\n  if (typeof owner === 'object') {\n    if (owner.profile?.name) {\n      return owner.profile.name;\n    }\n    return owner.name || 'Unknown';\n  }\n  \n  return 'Unknown';\n};\n\nconst getOwnerProfileLink = (owner) => {\n  if (!owner || !owner.target) return { name: 'music-home' };\n  \n  if (owner.type === 'User') {\n    return { name: 'user-profile', params: { _id: owner.target._id || owner.target } };\n  } else if (owner.type === 'Organization') {\n    return { name: 'organization-profile', params: { _id: owner.target._id || owner.target } };\n  }\n  \n  return { name: 'music-home' };\n};\n\nconst playPlaylist = () => {\n  if (playlistTracks.value && playlistTracks.value.length > 0) {\n    playerActions.setQueue(playlistTracks.value);\n  }\n};\n\nconst toggleFavorite = () => {\n  isFavorite.value = !isFavorite.value;\n  // Implement favorite playlist logic here\n};\n\nconst addToQueue = () => {\n  if (playlistTracks.value && playlistTracks.value.length > 0) {\n    // Add all tracks to queue\n    playlistTracks.value.forEach(track => {\n      playerActions.addToQueue(track);\n    });\n    \n    showDropdown.value = false;\n  }\n};\n\nconst editPlaylist = () => {\n  // Populate edit form with current playlist data\n  editForm.title = playlist.value.title;\n  editForm.description = playlist.value.description || '';\n  editForm.isPublic = playlist.value.isPublic;\n  editForm.coverUrl = playlist.value.coverUrl || '';\n  \n  showEditModal.value = true;\n  showDropdown.value = false;\n};\n\nconst updatePlaylist = async () => {\n  // Validate form\n  validationErrors.title = !editForm.title ? { message: 'Playlist name is required' } : null;\n  \n  // If there are validation errors, don't submit\n  if (Object.values(validationErrors).some(error => error !== null)) {\n    return;\n  }\n  \n  try {\n    // Update playlist\n    const updatedData = {\n      _id: playlist.value._id,\n      title: editForm.title,\n      description: editForm.description,\n      isPublic: editForm.isPublic,\n      coverUrl: editForm.coverUrl\n    };\n    \n    await playlistsActions.updatePlaylist(updatedData);\n    showEditModal.value = false;\n  } catch (error) {\n    console.error('Error updating playlist:', error);\n  }\n};\n\nconst toggleCollaborative = async () => {\n  try {\n    // Toggle collaborative status\n    const updatedData = {\n      _id: playlist.value._id,\n      isCollaborative: !playlist.value.isCollaborative\n    };\n    \n    await playlistsActions.updatePlaylist(updatedData);\n    showDropdown.value = false;\n  } catch (error) {\n    console.error('Error updating playlist:', error);\n  }\n};\n\nconst deletePlaylist = () => {\n  showDeleteModal.value = true;\n  showDropdown.value = false;\n};\n\nconst confirmDelete = async () => {\n  try {\n    await playlistsActions.deletePlaylist(playlist.value._id);\n    router.push({ name: 'music-library' });\n  } catch (error) {\n    console.error('Error deleting playlist:', error);\n  }\n};\n\nconst copyLink = () => {\n  const url = window.location.href;\n  navigator.clipboard.writeText(url).then(() => {\n    // Could show a success notification here\n    showDropdown.value = false;\n  });\n};\n\nconst fetchPlaylistData = async () => {\n  isLoading.value = true;\n  \n  try {\n    // Fetch playlist data\n    await playlistsActions.fetchPlaylistByUrl(route.params.url);\n  } catch (error) {\n    console.error('Error fetching playlist data:', error);\n  } finally {\n    isLoading.value = false;\n  }\n};\n\n// Fetch data when component mounts or URL changes\nonMounted(fetchPlaylistData);\n\nwatch(() => route.params.url, (newUrl) => {\n  if (newUrl) {\n    fetchPlaylistData();\n  }\n});\n</script>",
                "name": "PlaylistDetail.vue",
                "size": 16765,
                "type": "source"
              },
              {
                "path": "../../src/modules/music/components/pages/SearchResults.vue",
                "relativePath": "modules/music/components/pages/SearchResults.vue",
                "extension": ".vue",
                "content": "<!-- components/pages/SearchResults.vue -->\n<template>\n  <div class=\"search-results-page\">\n    <div class=\"search-header mn-b-medium\">\n      <h1 class=\"t-white mn-b-small\">Search</h1>\n      \n      <SearchForm \n        :initialQuery=\"searchQuery\"\n        @search=\"handleSearch\"\n        placeholder=\"What do you want to listen to?\"\n        class=\"w-m-40r\"\n      />\n      \n      <div v-if=\"searchQuery\" class=\"search-filters flex gap-small mn-t-medium\">\n        <Button \n          v-for=\"filter in searchFilters\"\n          :key=\"filter.id\"\n          @click=\"setActiveFilter(filter.id)\"\n          :class=\"[\n            filter.id === activeFilter ? 'bg-white t-black' : 'bg-dark-transp-50 t-white hover-bg-dark',\n          ]\"\n          class=\"radius-extra pd-small\"\n          :showLoader=\"false\" \n          :showSucces=\"false\"\n        >\n          {{ filter.label }}\n        </Button>\n      </div>\n    </div>\n    \n    <div v-if=\"isLoading\" class=\"search-loading\">\n      <Loader />\n    </div>\n    \n    <div v-else-if=\"searchError\" class=\"search-error t-center pd-big\">\n      <p class=\"t-fourth t-medium\">{{ searchError }}</p>\n    </div>\n    \n    <div v-else-if=\"!searchQuery\" class=\"search-empty t-center pd-big\">\n      <h2 class=\"t-white mn-b-small\">Search for music</h2>\n      <p class=\"t-grey t-medium\">Find your favorite songs, artists, albums, and playlists</p>\n    </div>\n    \n    <div v-else-if=\"!hasResults\" class=\"search-no-results t-center pd-big\">\n      <h2 class=\"t-white mn-b-small\">No results found for \"{{ searchQuery }}\"</h2>\n      <p class=\"t-grey t-medium\">Please try different keywords or check your spelling</p>\n    </div>\n    \n    <div v-else class=\"search-results\">\n      <!-- Top Results Section -->\n      <section v-if=\"activeFilter === 'all'\" class=\"search-section mn-b-medium\">\n        <h2 class=\"t-white mn-b-small\">Top Result</h2>\n        \n        <div class=\"search-top-result bg-dark-transp-20 radius-medium p-medium\">\n          <div v-if=\"topResult.type === 'artist'\" class=\"top-result-artist pd-medium\">\n            <div class=\"top-artist-photo mn-b-medium\">\n              <Media \n                :url=\"topResult.item.photoUrl || '/assets/placeholder-artist.jpg'\" \n                class=\"w-10r h-10r object-fit-cover radius-round\"\n              />\n            </div>\n            <h3 class=\"t-white t-semi\">{{ topResult.item.name }}</h3>\n            <p class=\"t-grey\">Artist</p>\n            <Button \n              @click=\"playTopResult\"\n              class=\"bg-main radius-round pd-small t-white mn-t-medium hover-scale-1\"\n              :showLoader=\"false\" \n              :showSucces=\"false\"\n            >\n              PLAY\n            </Button>\n          </div>\n          \n          <div v-else-if=\"topResult.type === 'album'\" class=\"top-result-album pd-medium\">\n            <div class=\"top-album-cover mn-b-medium\">\n              <Media \n                :url=\"topResult.item.coverUrl || '/assets/placeholder-album.jpg'\" \n                class=\"w-10r h-10r object-fit-cover radius-small\"\n              />\n            </div>\n            <h3 class=\"t-white t-semi\">{{ topResult.item.title }}</h3>\n            <p class=\"t-grey\">Album • {{ getArtistName(topResult.item) }}</p>\n            <Button \n              @click=\"playTopResult\"\n              class=\"bg-main radius-round pd-small t-white mn-t-medium hover-scale-1\"\n              :showLoader=\"false\" \n              :showSucces=\"false\"\n            >\n              PLAY\n            </Button>\n          </div>\n          \n          <div v-else-if=\"topResult.type === 'playlist'\" class=\"top-result-playlist pd-medium\">\n            <div class=\"top-playlist-cover mn-b-medium\">\n              <Media \n                :url=\"topResult.item.coverUrl || '/assets/placeholder-playlist.jpg'\" \n                class=\"w-10r h-10r object-fit-cover radius-small\"\n              />\n            </div>\n            <h3 class=\"t-white t-semi\">{{ topResult.item.title }}</h3>\n            <p class=\"t-grey\">Playlist • {{ getPlaylistOwner(topResult.item) }}</p>\n            <Button \n              @click=\"playTopResult\"\n              class=\"bg-main radius-round pd-small t-white mn-t-medium hover-scale-1\"\n              :showLoader=\"false\" \n              :showSucces=\"false\"\n            >\n              PLAY\n            </Button>\n          </div>\n        </div>\n      </section>\n      \n      <!-- Songs Results -->\n      <section v-if=\"activeFilter === 'all' || activeFilter === 'tracks'\" class=\"search-section mn-b-medium\">\n        <h2 class=\"t-white mn-b-small\">Songs</h2>\n        <TrackList \n          :tracks=\"trackResults\"\n          :showAlbum=\"true\" \n          :showCover=\"true\"\n          class=\"bg-dark-transp-10 radius-medium o-hidden\"\n        />\n        \n        <Button \n          v-if=\"trackResults.length > 4 && activeFilter === 'all'\"\n          @click=\"setActiveFilter('tracks')\"\n          class=\"t-main bg-transparent border-none t-center w-100 mn-t-small hover-bg-dark-transp-10 pd-thin\"\n          :showLoader=\"false\" \n          :showSucces=\"false\"\n        >\n          See all songs\n        </Button>\n      </section>\n      \n      <!-- Artists Results -->\n      <section v-if=\"activeFilter === 'all' || activeFilter === 'artists'\" class=\"search-section mn-b-medium\">\n        <h2 class=\"t-white mn-b-small\">Artists</h2>\n        \n        <div class=\"artists-grid cols-6 mobile:cols-3 gap-small\">\n          <div v-for=\"artist in artistResults.slice(0, activeFilter === 'all' ? 6 : artistResults.length)\" :key=\"artist._id\">\n            <ArtistCard :artist=\"artist\" />\n          </div>\n        </div>\n        \n        <Button \n          v-if=\"artistResults.length > 6 && activeFilter === 'all'\"\n          @click=\"setActiveFilter('artists')\"\n          class=\"t-main bg-transparent border-none t-center w-100 mn-t-small hover-bg-dark-transp-10 pd-thin\"\n          :showLoader=\"false\" \n          :showSucces=\"false\"\n        >\n          See all artists\n        </Button>\n      </section>\n      \n      <!-- Albums Results -->\n      <section v-if=\"activeFilter === 'all' || activeFilter === 'albums'\" class=\"search-section mn-b-medium\">\n        <h2 class=\"t-white mn-b-small\">Albums</h2>\n        \n        <div class=\"albums-grid cols-5 mobile:cols-2 gap-small\">\n          <div v-for=\"album in albumResults.slice(0, activeFilter === 'all' ? 5 : albumResults.length)\" :key=\"album._id\">\n            <AlbumCard :album=\"album\" />\n          </div>\n        </div>\n        \n        <Button \n          v-if=\"albumResults.length > 5 && activeFilter === 'all'\"\n          @click=\"setActiveFilter('albums')\"\n          class=\"t-main bg-transparent border-none t-center w-100 mn-t-small hover-bg-dark-transp-10 pd-thin\"\n          :showLoader=\"false\" \n          :showSucces=\"false\"\n        >\n          See all albums\n        </Button>\n      </section>\n      \n      <!-- Playlists Results -->\n      <section v-if=\"activeFilter === 'all' || activeFilter === 'playlists'\" class=\"search-section mn-b-medium\">\n        <h2 class=\"t-white mn-b-small\">Playlists</h2>\n        \n        <div class=\"playlists-grid cols-5 mobile:cols-2 gap-small\">\n          <div v-for=\"playlist in playlistResults.slice(0, activeFilter === 'all' ? 5 : playlistResults.length)\" :key=\"playlist._id\">\n            <PlaylistCard :playlist=\"playlist\" />\n          </div>\n        </div>\n        \n        <Button \n          v-if=\"playlistResults.length > 5 && activeFilter === 'all'\"\n          @click=\"setActiveFilter('playlists')\"\n          class=\"t-main bg-transparent border-none t-center w-100 mn-t-small hover-bg-dark-transp-10 pd-thin\"\n          :showLoader=\"false\" \n          :showSucces=\"false\"\n        >\n          See all playlists\n        </Button>\n      </section>\n      \n      <!-- Genres Results -->\n      <section v-if=\"(activeFilter === 'all' || activeFilter === 'genres') && genreResults.length > 0\" class=\"search-section\">\n        <h2 class=\"t-white mn-b-small\">Genres</h2>\n        \n        <div class=\"genres-grid cols-4 mobile:cols-2 gap-small\">\n          <router-link \n            v-for=\"genre in genreResults.slice(0, activeFilter === 'all' ? 4 : genreResults.length)\" \n            :key=\"genre._id\"\n            :to=\"{ name: 'genre-detail', params: { url: genre.url } }\"\n            class=\"genre-card bg-gradient-color pd-medium radius-medium t-center hover-scale-1 transition-cubic-in-out\"\n            :style=\"{ \n              '--gradient-color': getRandomGradient() \n            }\"\n          >\n            <h3 class=\"t-white\">{{ genre.name }}</h3>\n          </router-link>\n        </div>\n        \n        <Button \n          v-if=\"genreResults.length > 4 && activeFilter === 'all'\"\n          @click=\"setActiveFilter('genres')\"\n          class=\"t-main bg-transparent border-none t-center w-100 mn-t-small hover-bg-dark-transp-10 pd-thin\"\n          :showLoader=\"false\" \n          :showSucces=\"false\"\n        >\n          See all genres\n        </Button>\n      </section>\n    </div>\n  </div>\n  </template>\n\n  <script setup>\n  import { ref, computed, onMounted, watch } from 'vue';\n  import { useRoute, useRouter } from 'vue-router';\n  import SearchForm from '../forms/SearchForm.vue';\n  import TrackList from '../lists/TrackList.vue';\n  import AlbumCard from '../cards/AlbumCard.vue';\n  import PlaylistCard from '../cards/PlaylistCard.vue';\n  import ArtistCard from '../cards/ArtistCard.vue';\n  import Button from '@martyrs/src/components/Button/Button.vue';\n  import Loader from '@martyrs/src/components/Loader/Loader.vue';\n  import Media from '@martyrs/src/components/Media/Media.vue';\n\n  // Import search store\n  import { state as searchState, actions as searchActions, computed as searchComputed } from '../../store/search.js';\n  import { actions as playerActions } from '../../store/player.js';\n\n  const route = useRoute();\n  const router = useRouter();\n\n  // State\n  const searchQuery = ref('');\n  const activeFilter = ref('all');\n\n  // Array of search filters\n  const searchFilters = [\n    { id: 'all', label: 'All' },\n    { id: 'tracks', label: 'Songs' },\n    { id: 'artists', label: 'Artists' },\n    { id: 'albums', label: 'Albums' },\n    { id: 'playlists', label: 'Playlists' },\n    { id: 'genres', label: 'Genres' }\n  ];\n\n  // Computed properties\n  const isLoading = computed(() => searchState.isLoading);\n  const searchError = computed(() => searchState.error);\n  const hasResults = computed(() => searchComputed.hasResults());\n\n  const trackResults = computed(() => searchState.results.tracks || []);\n  const artistResults = computed(() => searchState.results.artists || []);\n  const albumResults = computed(() => searchState.results.albums || []);\n  const playlistResults = computed(() => searchState.results.playlists || []);\n  const genreResults = computed(() => searchState.results.genres || []);\n\n  // Top result determination\n  const topResult = computed(() => {\n    // Determine which result to show as top result based on relevance\n    if (artistResults.value.length > 0) {\n      return { type: 'artist', item: artistResults.value[0] };\n    } else if (albumResults.value.length > 0) {\n      return { type: 'album', item: albumResults.value[0] };\n    } else if (playlistResults.value.length > 0) {\n      return { type: 'playlist', item: playlistResults.value[0] };\n    } else if (trackResults.value.length > 0) {\n      return { type: 'track', item: trackResults.value[0] };\n    }\n    return null;\n  });\n\n  // Methods\n  const handleSearch = (query) => {\n    searchQuery.value = query;\n    \n    // Update URL without reloading the page\n    router.push({ \n      name: 'music-search', \n      query: { q: query },\n      replace: true\n    });\n    \n    // Perform search\n    searchActions.search(query);\n  };\n\n  const setActiveFilter = (filter) => {\n    activeFilter.value = filter;\n    searchActions.setFilter(filter);\n  };\n\n  const playTopResult = () => {\n    if (!topResult.value) return;\n    \n    const { type, item } = topResult.value;\n    \n    switch (type) {\n      case 'track':\n        playerActions.playTrack(item);\n        break;\n      case 'album':\n        // Navigate to album page\n        router.push({ name: 'album-detail', params: { url: item.url } });\n        break;\n      case 'playlist':\n        // Navigate to playlist page\n        router.push({ name: 'playlist-detail', params: { url: item.url } });\n        break;\n      case 'artist':\n        // Navigate to artist page\n        router.push({ name: 'artist-detail', params: { url: item.url } });\n        break;\n    }\n  };\n\n  const getArtistName = (item) => {\n    if (!item) return 'Unknown Artist';\n    \n    if (item.artist) {\n      if (typeof item.artist === 'object') {\n        return item.artist.name || 'Unknown Artist';\n      }\n      return item.artist;\n    }\n    return 'Unknown Artist';\n  };\n\n  const getPlaylistOwner = (playlist) => {\n    if (!playlist) return 'Unknown';\n    \n    if (playlist.owner?.target) {\n      if (typeof playlist.owner.target === 'object') {\n        if (playlist.owner.target.profile?.name) {\n          return playlist.owner.target.profile.name;\n        }\n        return playlist.owner.target.name || 'Unknown';\n      }\n    }\n    return 'Unknown';\n  };\n\n  // Generate random gradient for genre cards\n  const getRandomGradient = () => {\n    const colors = [\n      'linear-gradient(135deg, #1DB954, #1ED760)',\n      'linear-gradient(135deg, #FF6B6B, #FFE66D)',\n      'linear-gradient(135deg, #4776E6, #8E54E9)',\n      'linear-gradient(135deg, #FF8008, #FFC837)',\n      'linear-gradient(135deg, #7F00FF, #E100FF)',\n      'linear-gradient(135deg, #11998E, #38EF7D)'\n    ];\n    \n    return colors[Math.floor(Math.random() * colors.length)];\n  };\n\n  // Watch for URL query parameter changes\n  onMounted(() => {\n    const query = route.query.q;\n    if (query) {\n      searchQuery.value = query;\n      searchActions.search(query);\n    }\n  });\n\n  watch(() => route.query.q, (newQuery) => {\n    if (newQuery && newQuery !== searchQuery.value) {\n      searchQuery.value = newQuery;\n      searchActions.search(newQuery);\n    } else if (!newQuery) {\n      searchQuery.value = '';\n      searchActions.clearSearch();\n    }\n  });\n  </script>\n\n  <style scoped>\n  .bg-gradient-color {\n    background: var(--gradient-color, linear-gradient(135deg, #1DB954, #1ED760));\n  }\n  </style>",
                "name": "SearchResults.vue",
                "size": 14197,
                "type": "source"
              },
              {
                "path": "../../src/modules/music/components/pages/TrackDetail.vue",
                "relativePath": "modules/music/components/pages/TrackDetail.vue",
                "extension": ".vue",
                "content": "<!-- components/pages/TrackDetail.vue -->\n<template>\n  <div class=\"track-detail-page\">\n    <!-- Loading -->\n    <div v-if=\"isLoading\" class=\"w-100 h-25r flex-center flex\">\n      <Loader />\n    </div>\n\n    <!-- Not Found -->\n    <div v-else-if=\"!track\" class=\"t-center pd-big\">\n      <h2 class=\"t-white\">Track not found</h2>\n      <p class=\"t-grey t-medium\">The track you're looking for doesn't exist or has been removed.</p>\n    </div>\n\n    <!-- Track Content -->\n    <div v-else>\n      <!-- ... [HEADER + ACTIONS as you posted] -->\n\n      <!-- Track Lyrics -->\n      <div v-if=\"track.lyrics\" class=\"track-lyrics mn-b-medium pd-medium bg-dark-transp-10 radius-medium\">\n        <h2 class=\"t-white mn-b-small\">Lyrics</h2>\n        <pre class=\"t-grey\">{{ track.lyrics }}</pre>\n      </div>\n\n      <!-- Related Tracks -->\n      <section v-if=\"relatedTracks.length\" class=\"related-tracks mn-b-medium\">\n        <h2 class=\"t-white mn-b-small\">Related Tracks</h2>\n        <TrackList \n          :tracks=\"relatedTracks\"\n          :showAlbum=\"true\"\n          :showCover=\"true\"\n          class=\"bg-dark-transp-10 radius-medium o-hidden\"\n        />\n      </section>\n\n      <!-- Add to Playlist Modal -->\n      <!-- <Popup \n        v-if=\"showAddToPlaylistModal\" \n        @close-popup=\"showAddToPlaylistModal = false\" \n        class=\"bg-dark pd-small w-m-25r radius-medium t-white\"\n      >\n        <h3 class=\"mn-b-medium\">Add to Playlist</h3>\n        <PlaylistSelector \n          :trackId=\"track._id\" \n          @added=\"showAddToPlaylistModal = false\"\n        />\n      </Popup> -->\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, watch } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport Button from '@martyrs/src/components/Button/Button.vue';\nimport Loader from '@martyrs/src/components/Loader/Loader.vue';\nimport Media from '@martyrs/src/components/Media/Media.vue';\nimport Dropdown from '@martyrs/src/components/Dropdown/Dropdown.vue';\nimport Popup from '@martyrs/src/components/Popup/Popup.vue';\nimport IconPlay from '@martyrs/src/modules/icons/navigation/IconPlay.vue';\nimport IconHeart from '@martyrs/src/modules/icons/navigation/IconHeart.vue';\nimport IconEllipsis from '@martyrs/src/modules/icons/navigation/IconEllipsis.vue';\nimport TrackList from '../lists/TrackList.vue';\n// import PlaylistSelector from '../forms/PlaylistSelector.vue';\n\nimport { state as tracksState, actions as tracksActions } from '../../store/tracks.js';\nimport { actions as playerActions } from '../../store/player.js';\nimport { state as authState } from '@martyrs/src/modules/auth/views/store/auth.js';\n\nconst route = useRoute();\nconst router = useRouter();\n\nconst isLoading = ref(true);\nconst showDropdown = ref(false);\nconst showAddToPlaylistModal = ref(false);\nconst isFavorite = ref(false);\n\nconst track = computed(() => tracksState.currentTrack);\nconst relatedTracks = computed(() => tracksState.relatedTracks);\n\nconst isOwner = computed(() => {\n  return track.value?.owner?.target === authState.user?._id;\n});\n\nconst getArtistName = (track) => {\n  if (!track || !track.artist) return 'Unknown';\n  return typeof track.artist === 'object' ? track.artist.name : 'Unknown';\n};\n\nconst formatReleaseYear = (date) => {\n  return date ? new Date(date).getFullYear() : 'Unknown';\n};\n\nconst playTrack = () => {\n  if (track.value) {\n    playerActions.setQueue([track.value]);\n  }\n};\n\nconst toggleFavorite = () => {\n  isFavorite.value = !isFavorite.value;\n  // You can implement actual saving here\n};\n\nconst addToQueue = () => {\n  if (track.value) {\n    playerActions.addToQueue(track.value);\n  }\n};\n\nconst editTrack = () => {\n  router.push({ name: 'music-upload', query: { edit: track.value._id } });\n};\n\nconst deleteTrack = async () => {\n  try {\n    await tracksActions.deleteTrack(track.value._id);\n    router.push({ name: 'music-library' });\n  } catch (error) {\n    console.error('Failed to delete track:', error);\n  }\n};\n\nconst copyLink = () => {\n  navigator.clipboard.writeText(window.location.href);\n  showDropdown.value = false;\n};\n\nconst fetchTrackData = async () => {\n  isLoading.value = true;\n  try {\n    await tracksActions.fetchTrackByUrl(route.params.url);\n    await tracksActions.fetchRelatedTracks(route.params.url);\n  } catch (error) {\n    console.error('Error loading track:', error);\n  } finally {\n    isLoading.value = false;\n  }\n};\n\nonMounted(fetchTrackData);\nwatch(() => route.params.url, fetchTrackData);\n</script>\n",
                "name": "TrackDetail.vue",
                "size": 4454,
                "type": "source"
              }
            ]
          },
          "player": {
            "_files": [
              {
                "path": "../../src/modules/music/components/player/MusicPlayer.vue",
                "relativePath": "modules/music/components/player/MusicPlayer.vue",
                "extension": ".vue",
                "content": "<!-- components/player/MusicPlayer.vue -->\n<template>\n  <div class=\"music-player pd-small flex-between flex-v-center flex bg-dark br-t br-solid br-dark-transp-20 t-white\">\n    <!-- Current Track Info -->\n    <div class=\"player-track-info flex-v-center flex w-25r\">\n      <div v-if=\"currentTrack\" class=\"player-track-cover mn-r-small\">\n        <Media \n          :url=\"currentTrack.coverUrl || (currentTrack.album && currentTrack.album.coverUrl) || '/assets/placeholder-track.jpg'\" \n          class=\"w-3r h-3r object-fit-cover radius-small\"\n        />\n      </div>\n      \n      <div class=\"player-track-details t-truncate\">\n        <div class=\"player-track-title t-white t-medium t-truncate\">\n          {{ currentTrack?.title || 'No track playing' }}\n        </div>\n        <div class=\"player-track-artist t-grey t-small t-truncate\">\n          {{ getArtistName(currentTrack) }}\n        </div>\n      </div>\n      \n      <div class=\"player-favorite mn-l-small\">\n        <Button \n          @click=\"toggleFavorite\" \n          class=\"bg-transparent border-none pd-zero\"\n          :showLoader=\"false\" \n          :showSucces=\"false\"\n        >\n          <IconHeart class=\"i-small\" :fill=\"isFavorite ? 'rgb(var(--main))' : 'rgb(var(--grey))'\"/>\n        </Button>\n      </div>\n    </div>\n    \n    <!-- Player Controls -->\n    <div class=\"player-controls flex-1 flex flex-column items-center\">\n      <div class=\"player-buttons flex-v-center flex gap-small\">\n        <Button \n          @click=\"toggleShuffle\" \n          class=\"bg-transparent border-none pd-zero\"\n          :showLoader=\"false\" \n          :showSucces=\"false\"\n        >\n          <IconShuffle class=\"i-small\" :fill=\"shuffle ? 'rgb(var(--main))' : 'rgb(var(--grey))'\"/>\n        </Button>\n        \n        <Button \n          @click=\"playPrevious\" \n          class=\"bg-transparent border-none pd-zero\"\n          :showLoader=\"false\" \n          :showSucces=\"false\"\n        >\n          <IconPrevious class=\"i-small\" fill=\"rgb(var(--white))\"/>\n        </Button>\n        \n        <Button \n          @click=\"togglePlay\" \n          class=\"play-pause-btn bg-white radius-round pd-micro flex-center flex\"\n          :showLoader=\"false\" \n          :showSucces=\"false\"\n        >\n          <IconPause v-if=\"isPlaying\" class=\"i-medium\" fill=\"rgb(var(--black))\"/>\n          <IconPlay v-else class=\"i-medium\" fill=\"rgb(var(--black))\"/>\n        </Button>\n        \n        <Button \n          @click=\"playNext\" \n          class=\"bg-transparent border-none pd-zero\"\n          :showLoader=\"false\" \n          :showSucces=\"false\"\n        >\n          <IconNext class=\"i-small\" fill=\"rgb(var(--white))\"/>\n        </Button>\n        \n        <Button \n          @click=\"toggleRepeat\" \n          class=\"bg-transparent border-none pd-zero\"\n          :showLoader=\"false\" \n          :showSucces=\"false\"\n        >\n          <IconRepeat class=\"i-small\" :fill=\"repeatIcon\"/>\n        </Button>\n      </div>\n      \n      <TrackProgress class=\"w-100 mn-t-thin\" />\n    </div>\n    \n    <!-- Volume Control -->\n    <div class=\"player-volume flex-v-center flex w-15r\">\n      <Button \n        @click=\"toggleMute\" \n        class=\"bg-transparent border-none pd-zero mn-r-small\"\n        :showLoader=\"false\" \n        :showSucces=\"false\"\n      >\n        <IconVolume v-if=\"!muted && volume > 0.5\" class=\"i-small\" fill=\"rgb(var(--white))\"/>\n        <IconVolumeHalf v-else-if=\"!muted && volume > 0\" class=\"i-small\" fill=\"rgb(var(--white))\"/>\n        <IconVolumeMute v-else class=\"i-small\" fill=\"rgb(var(--white))\"/>\n      </Button>\n      \n      <VolumeControl />\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed, ref } from 'vue';\nimport Media from '@martyrs/src/components/Media/Media.vue';\nimport Button from '@martyrs/src/components/Button/Button.vue';\nimport TrackProgress from './TrackProgress.vue';\nimport VolumeControl from './VolumeControl.vue';\n\n// Import icons\nimport IconPlay from '@martyrs/src/modules/icons/navigation/IconPlay.vue';\nimport IconPause from '@martyrs/src/modules/icons/navigation/IconPause.vue';\nimport IconNext from '@martyrs/src/modules/icons/navigation/IconChevronRight.vue';\nimport IconPrevious from '@martyrs/src/modules/icons/navigation/IconChevronLeft.vue';\nimport IconShuffle from '@martyrs/src/modules/icons/navigation/IconShuffle.vue';\nimport IconRepeat from '@martyrs/src/modules/icons/navigation/IconRefresh.vue';\nimport IconHeart from '@martyrs/src/modules/icons/navigation/IconHeart.vue';\nimport IconVolume from '@martyrs/src/modules/icons/navigation/IconVolume.vue';\n// import IconVolumeHalf from '@martyrs/src/modules/icons/navigation/IconVolume.vue'; // Using same icon but we'd style it differently\nimport IconVolumeMute from '@martyrs/src/modules/icons/navigation/IconMute.vue';\n\n// Import player store\nimport { state as playerState, actions as playerActions } from '../../store/player.js';\n\n// State\nconst isFavorite = ref(false);\n\n// Computed properties\nconst currentTrack = computed(() => playerState.currentTrack);\nconst isPlaying = computed(() => playerState.isPlaying);\nconst volume = computed(() => playerState.volume);\nconst muted = computed(() => playerState.muted);\nconst shuffle = computed(() => playerState.shuffle);\nconst repeat = computed(() => playerState.repeat);\n\nconst repeatIcon = computed(() => {\n  switch(repeat.value) {\n    case 'one':\n      return 'rgb(var(--main))';\n    case 'all':\n      return 'rgb(var(--main))';\n    default:\n      return 'rgb(var(--grey))';\n  }\n});\n\n// Methods\nconst togglePlay = () => {\n  playerActions.togglePlay();\n};\n\nconst playNext = () => {\n  playerActions.playNext();\n};\n\nconst playPrevious = () => {\n  playerActions.playPrevious();\n};\n\nconst toggleShuffle = () => {\n  playerActions.toggleShuffle();\n};\n\nconst toggleRepeat = () => {\n  playerActions.toggleRepeat();\n};\n\nconst toggleMute = () => {\n  playerActions.toggleMute();\n};\n\nconst toggleFavorite = () => {\n  isFavorite.value = !isFavorite.value;\n  // Implement favorite track logic here\n};\n\nconst getArtistName = (track) => {\n  if (!track) return 'Unknown Artist';\n  \n  if (track.artist) {\n    if (typeof track.artist === 'object') {\n      return track.artist.name || 'Unknown Artist';\n    }\n    return track.artist;\n  }\n  return 'Unknown Artist';\n};\n</script>\n\n<style scoped>\n.play-pause-btn {\n  width: 32px;\n  height: 32px;\n  transition: transform 0.2s ease;\n}\n\n.play-pause-btn:hover {\n  transform: scale(1.1);\n}\n</style>",
                "name": "MusicPlayer.vue",
                "size": 6389,
                "type": "source"
              },
              {
                "path": "../../src/modules/music/components/player/TrackProgress.vue",
                "relativePath": "modules/music/components/player/TrackProgress.vue",
                "extension": ".vue",
                "content": "<!-- components/player/TrackProgress.vue -->\n<template>\n  <div class=\"track-progress flex flex-v-center gap-small\">\n    <div class=\"current-time t-grey t-small\">{{ formatTime(currentTime) }}</div>\n    \n    <div \n      ref=\"progressBarContainer\"\n      class=\"progress-bar-container flex-1 h-thin bg-grey radius-extra pos-relative cursor-pointer\"\n      @click=\"seek\"\n      @mousedown=\"startSeek\"\n      @mousemove=\"updateSeekPosition\"\n      @mouseup=\"endSeek\"\n      @mouseleave=\"endSeek\"\n    >\n      <div \n        class=\"progress-bar h-100 bg-white radius-extra\" \n        :style=\"{ width: progressPercentage + '%' }\"\n      ></div>\n      <div \n        class=\"progress-handle w-thin h-thin bg-white radius-round pos-absolute pos-t-50 pos-l-0\"\n        :style=\"{ left: `calc(${progressPercentage}% - 4px)`, transform: 'translateY(-50%)' }\"\n      ></div>\n    </div>\n    \n    <div class=\"total-time t-grey t-small\">{{ formatTime(duration) }}</div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, onUnmounted } from 'vue';\n\n// Import player store\nimport { state as playerState, actions as playerActions } from '../../store/player.js';\n\n// Refs\nconst progressBarContainer = ref(null);\nconst isSeeking = ref(false);\nconst seekPosition = ref(0);\n\n// Computed properties\nconst currentTime = computed(() => playerState.currentTime);\nconst duration = computed(() => playerState.duration);\nconst progressPercentage = computed(() => {\n  if (!duration.value) return 0;\n  return Math.min(100, (currentTime.value / duration.value) * 100);\n});\n\n// Methods\nconst formatTime = (seconds) => {\n  if (!seconds) return '0:00';\n  \n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = Math.floor(seconds % 60);\n  \n  return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n};\n\nconst calculateSeekTime = (event) => {\n  if (!progressBarContainer.value || !duration.value) return 0;\n  \n  const rect = progressBarContainer.value.getBoundingClientRect();\n  const offsetX = event.clientX - rect.left;\n  const percentage = Math.max(0, Math.min(1, offsetX / rect.width));\n  \n  return percentage * duration.value;\n};\n\nconst seek = (event) => {\n  const seekTime = calculateSeekTime(event);\n  playerActions.seek(seekTime);\n};\n\nconst startSeek = (event) => {\n  isSeeking.value = true;\n  seekPosition.value = calculateSeekTime(event);\n};\n\nconst updateSeekPosition = (event) => {\n  if (isSeeking.value) {\n    seekPosition.value = calculateSeekTime(event);\n  }\n};\n\nconst endSeek = () => {\n  if (isSeeking.value) {\n    isSeeking.value = false;\n    playerActions.seek(seekPosition.value);\n  }\n};\n\n// Clean up event listeners when component is unmounted\nonUnmounted(() => {\n  isSeeking.value = false;\n});\n</script>\n\n<style scoped>\n.progress-bar-container:hover .progress-bar {\n  background-color: rgb(var(--main));\n}\n\n.progress-handle {\n  display: none;\n}\n\n.progress-bar-container:hover .progress-handle {\n  display: block;\n  transform: translateY(-50%) scale(1.3);\n}\n</style>",
                "name": "TrackProgress.vue",
                "size": 2982,
                "type": "source"
              },
              {
                "path": "../../src/modules/music/components/player/VolumeControl.vue",
                "relativePath": "modules/music/components/player/VolumeControl.vue",
                "extension": ".vue",
                "content": "<!-- components/player/VolumeControl.vue -->\n<template>\n  <div \n    ref=\"volumeBarContainer\"\n    class=\"volume-bar-container w-100 h-thin bg-grey-transp-50 radius-extra pos-relative cursor-pointer\"\n    @click=\"setVolume\"\n    @mousedown=\"startVolumeChange\"\n    @mousemove=\"updateVolumePosition\"\n    @mouseup=\"endVolumeChange\"\n    @mouseleave=\"endVolumeChange\"\n  >\n    <div \n      class=\"volume-bar h-100 bg-white radius-extra\" \n      :style=\"{ width: volumePercentage + '%' }\"\n      :class=\"{ 'muted': muted }\"\n    ></div>\n    <div \n      class=\"volume-handle w-thin h-thin bg-white radius-round pos-absolute pos-t-50 pos-l-0\"\n      :style=\"{ \n        left: `calc(${volumePercentage}% - 4px)`, \n        transform: 'translateY(-50%)',\n        opacity: muted ? 0 : 1\n      }\"\n    ></div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue';\n\n// Import player store\nimport { state as playerState, actions as playerActions } from '../../store/player.js';\n\n// Refs\nconst volumeBarContainer = ref(null);\nconst isChangingVolume = ref(false);\n\n// Computed properties\nconst volume = computed(() => playerState.volume);\nconst muted = computed(() => playerState.muted);\nconst volumePercentage = computed(() => {\n  if (muted.value) return 0;\n  return volume.value * 100;\n});\n\n// Methods\nconst calculateVolume = (event) => {\n  if (!volumeBarContainer.value) return 0;\n  \n  const rect = volumeBarContainer.value.getBoundingClientRect();\n  const offsetX = event.clientX - rect.left;\n  \n  return Math.max(0, Math.min(1, offsetX / rect.width));\n};\n\nconst setVolume = (event) => {\n  const newVolume = calculateVolume(event);\n  playerActions.setVolume(newVolume);\n  \n  // Unmute if was muted\n  if (muted.value && newVolume > 0) {\n    playerActions.toggleMute();\n  }\n};\n\nconst startVolumeChange = (event) => {\n  isChangingVolume.value = true;\n  setVolume(event);\n};\n\nconst updateVolumePosition = (event) => {\n  if (isChangingVolume.value) {\n    setVolume(event);\n  }\n};\n\nconst endVolumeChange = () => {\n  isChangingVolume.value = false;\n};\n</script>\n\n<style scoped>\n.volume-bar-container:hover .volume-bar:not(.muted) {\n  background-color: rgb(var(--main));\n}\n\n.volume-handle {\n  display: none;\n}\n\n.volume-bar-container:hover .volume-handle {\n  display: block;\n}\n\n.muted {\n  opacity: 0.5;\n}\n</style>",
                "name": "VolumeControl.vue",
                "size": 2299,
                "type": "source"
              }
            ]
          },
          "_files": [
            {
              "path": "../../src/modules/music/components/SidebarMusic.vue",
              "relativePath": "modules/music/components/SidebarMusic.vue",
              "extension": ".vue",
              "content": "<!-- components/navigation/MusicSidebar.vue -->\n<template>\n  <Sidebar \n    :stateSidebar=\"stateSidebar\"\n    :theme=\"'dark'\"\n    :width=\"'w-15r'\"\n    :widthHidden=\"'w-3r'\"\n    @closeSidebar=\"$emit('closeSidebar')\"\n    class=\"flex-child-shrink-0\"\n  >\n    <div class=\"pd-thin\">\n      <div class=\"music-logo mn-b-medium\">\n        <h3 class=\"t-white mn-b-small\">Music</h3>\n      </div>\n      \n      <nav class=\"music-nav mn-b-medium\">\n        <ul class=\"flex flex-column gap-small\">\n          <li>\n            <router-link :to=\"{ name: 'music-home' }\" \n              class=\"flex-v-center flex gap-small pd-thin radius-small\" \n              :class=\"$route.name === 'music-home' ? 'bg-dark' : 'hover-bg-dark'\"\n            >\n              <IconHome class=\"i-medium\" :fill=\"$route.name === 'music-home' ? 'rgb(var(--main))' : 'rgb(var(--white))'\"/>\n              <span class=\"t-medium\" :class=\"$route.name === 'music-home' ? 't-main' : 't-white'\">Home</span>\n            </router-link>\n          </li>\n          <li>\n            <router-link :to=\"{ name: 'music-search' }\" \n              class=\"flex-v-center flex gap-small pd-thin radius-small\"\n              :class=\"$route.name === 'music-search' ? 'bg-dark' : 'hover-bg-dark'\"\n            >\n              <IconSearch class=\"i-medium\" :fill=\"$route.name === 'music-search' ? 'rgb(var(--main))' : 'rgb(var(--white))'\"/>\n              <span class=\"t-medium\" :class=\"$route.name === 'music-search' ? 't-main' : 't-white'\">Search</span>\n            </router-link>\n          </li>\n          <li>\n            <router-link :to=\"{ name: 'music-library' }\" \n              class=\"flex-v-center flex gap-small pd-thin radius-small\"\n              :class=\"$route.name === 'music-library' ? 'bg-dark' : 'hover-bg-dark'\"\n            >\n              <IconLibrary class=\"i-medium\" :fill=\"$route.name === 'music-library' ? 'rgb(var(--main))' : 'rgb(var(--white))'\"/>\n              <span class=\"t-medium\" :class=\"$route.name === 'music-library' ? 't-main' : 't-white'\">Your Library</span>\n            </router-link>\n          </li>\n        </ul>\n      </nav>\n      \n      <div class=\"music-playlists\" v-if=\"isAuthenticated\">\n        <div class=\"flex-between flex mn-b-small\">\n          <h4 class=\"t-grey t-medium\">YOUR PLAYLISTS</h4>\n          <Button \n            @click=\"showCreatePlaylistModal = true\" \n            class=\"bg-transparent cursor-pointer pd-micro radius-small hover-bg-dark\"\n            :showLoader=\"false\"\n            :showSucces=\"false\"\n          >\n            <IconPlus class=\"i-small\" fill=\"rgb(var(--white))\"/>\n          </Button>\n        </div>\n        \n        <Feed\n          v-if=\"userPlaylists.length\"\n          class=\"mn-t-thin\"\n          :skeleton=\"{\n            hide: true\n          }\"\n          :states=\"{\n            empty: {\n              title: 'No playlists yet',\n              description: 'Create your first playlist to see it here'\n            }\n          }\"\n          :items=\"userPlaylists\"\n        >\n          <template #default=\"{ items }\">\n            <li v-for=\"playlist in items\" :key=\"playlist._id\" class=\"mn-b-thin\">\n              <router-link \n                :to=\"{ name: 'playlist-detail', params: { url: playlist.url } }\" \n                class=\"t-white t-truncate d-block pd-thin radius-small hover-bg-dark\"\n                :class=\"$route.params.url === playlist.url ? 'bg-dark t-main' : ''\"\n              >\n                {{ playlist.title }}\n              </router-link>\n            </li>\n          </template>\n        </Feed>\n      </div>\n    </div>\n    \n    <!-- Create Playlist Modal -->\n    <Popup \n      v-if=\"showCreatePlaylistModal\" \n      @close-popup=\"showCreatePlaylistModal = false\" \n      class=\"bg-dark pd-small w-m-25r radius-medium t-white\"\n    >\n      <h3 class=\"mn-b-medium\">Create Playlist</h3>\n      <PlaylistForm @created=\"onPlaylistCreated\" />\n    </Popup>\n  </Sidebar>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\n\n// Import components from Martyrs framework\nimport Sidebar from '@martyrs/src/modules/globals/views/components/partials/Sidebar.vue';\nimport Button from '@martyrs/src/components/Button/Button.vue';\nimport Popup from '@martyrs/src/components/Popup/Popup.vue';\nimport Feed from '@martyrs/src/components/Feed/Feed.vue';\nimport PlaylistForm from '../forms/PlaylistForm.vue';\n\n// Icons \nimport IconHome from '@martyrs/src/modules/icons/navigation/IconHome.vue';\nimport IconSearch from '@martyrs/src/modules/icons/navigation/IconSearch.vue';\nimport IconLibrary from '@martyrs/src/modules/icons/entities/IconFolder.vue';\nimport IconPlus from '@martyrs/src/modules/icons/navigation/IconPlus.vue';\n\n// Store\nimport { state as authState } from '@martyrs/src/modules/auth/views/store/auth.js';\nimport { state as playlistsState, actions as playlistsActions } from '../../store/playlists.js';\n\nconst props = defineProps({\n  stateSidebar: {\n    type: Boolean,\n    default: true\n  }\n});\n\nconst emit = defineEmits(['closeSidebar']);\n\nconst router = useRouter();\nconst showCreatePlaylistModal = ref(false);\n\n// Auth computed property\nconst isAuthenticated = computed(() => {\n  return authState.access.status === true;\n});\n\n// User playlists\nconst userPlaylists = computed(() => {\n  return playlistsState.userPlaylists;\n});\n\nconst onPlaylistCreated = (playlist) => {\n  showCreatePlaylistModal.value = false;\n  router.push({ name: 'playlist-detail', params: { url: playlist.url } });\n};\n\n// Fetch user playlists on component mount\nonMounted(async () => {\n  if (isAuthenticated.value && authState.user) {\n    await playlistsActions.fetchUserPlaylists();\n  }\n});\n</script>",
              "name": "SidebarMusic.vue",
              "size": 5637,
              "type": "source"
            }
          ]
        }
      },
      "notifications": {
        "controllers": {
          "_files": [
            {
              "path": "../../src/modules/notifications/controllers/notifications.controller.js",
              "relativePath": "modules/notifications/controllers/notifications.controller.js",
              "extension": ".js",
              "content": "// controllers/notifications.controller.js\nconst NotificationsController = (db, wss) => {\n  // Create a new notification\n  const create = async (req, res) => {\n    try {\n      const notification = await db.notification.create(req.body);\n      // Trigger notification sending process\n      const notificationService = notification(db, wss);\n      notificationService.processNotification(notification);\n      return res.status(201).json(notification);\n    } catch (err) {\n      return res.status(500).json({ message: err.message });\n    }\n  };\n  // Get all notifications for a user\n  const getUserNotifications = async (req, res) => {\n    try {\n      const userId = req.params.userId;\n      const notifications = await db.notification\n        .find({\n          userId,\n          status: { $in: ['sent', 'read'] },\n        })\n        .sort({ createdAt: -1 });\n      return res.json(notifications);\n    } catch (err) {\n      return res.status(500).json({ message: err.message });\n    }\n  };\n  // Mark notification as read\n  const markAsRead = async (req, res) => {\n    try {\n      const notification = await db.notification.findByIdAndUpdate(req.params.id, { status: 'read', updatedAt: Date.now() }, { new: true });\n      if (!notification) {\n        return res.status(404).json({ message: 'Notification not found' });\n      }\n      // Log the read status\n      await db.notificationLog.create({\n        notificationId: notification._id,\n        userId: notification.userId,\n        channelType: 'web', // Assuming web as default\n        status: 'read',\n        readAt: Date.now(),\n      });\n      return res.json(notification);\n    } catch (err) {\n      return res.status(500).json({ message: err.message });\n    }\n  };\n  // controllers/notifications.controller.js (добавить к существующему контроллеру)\n  // Mark all notifications as read for a user\n  const markAllAsRead = async (req, res) => {\n    try {\n      const userId = req.params.userId;\n      // Update all unread notifications for this user\n      const result = await db.notification.updateMany({ userId: userId, status: 'unread' }, { status: 'read', updatedAt: Date.now() });\n      // Get all updated notifications for logging\n      const updatedNotifications = await db.notification.find({\n        userId: userId,\n        status: 'read',\n        updatedAt: { $gte: new Date(Date.now() - 10000) }, // Get notifications updated in the last 10 seconds\n      });\n      // Log the read status for each notification\n      const logPromises = updatedNotifications.map(notification => {\n        return db.notificationLog.create({\n          notificationId: notification._id,\n          userId: userId,\n          channelType: 'web', // Assuming web as default\n          status: 'read',\n          readAt: Date.now(),\n        });\n      });\n      await Promise.all(logPromises);\n      return res.json({\n        message: 'All notifications marked as read',\n        count: result.modifiedCount,\n      });\n    } catch (err) {\n      return res.status(500).json({ message: err.message });\n    }\n  };\n  // Register device for push notifications\n  const registerDevice = async (req, res) => {\n    try {\n      const { userId, deviceId, deviceType, deviceToken } = req.body;\n      // Upsert device registration\n      const device = await db.userDevice.findOneAndUpdate(\n        { userId, deviceId },\n        {\n          userId,\n          deviceId,\n          deviceType,\n          deviceToken,\n          isActive: true,\n          lastActive: Date.now(),\n        },\n        { upsert: true, new: true }\n      );\n      return res.status(201).json(device);\n    } catch (err) {\n      return res.status(500).json({ message: err.message });\n    }\n  };\n  // Add this to controllers/notifications.controller.js\n  const getUserPreferences = async (req, res) => {\n    try {\n      const userId = req.params.userId;\n      const preferences = await db.notificationPreference.find({ userId });\n      // Return empty array if no preferences found (this ensures forEach will work)\n      return res.json(preferences || []);\n    } catch (err) {\n      return res.status(500).json({ message: err.message });\n    }\n  };\n  // Update notification preferences\n  const updatePreferences = async (req, res) => {\n    try {\n      const { userId, preferences } = req.body;\n      // Bulk upsert preferences\n      const operations = preferences.map(pref => ({\n        updateOne: {\n          filter: {\n            userId,\n            channelType: pref.channelType,\n            notificationType: pref.notificationType,\n          },\n          update: {\n            $set: {\n              isEnabled: pref.isEnabled,\n            },\n          },\n          upsert: true,\n        },\n      }));\n      await db.notificationPreference.bulkWrite(operations);\n      const updatedPreferences = await db.notificationPreference.find({ userId });\n      return res.json(updatedPreferences);\n    } catch (err) {\n      return res.status(500).json({ message: err.message });\n    }\n  };\n  return {\n    create,\n    getUserNotifications,\n    markAsRead,\n    registerDevice,\n    updatePreferences,\n    getUserPreferences,\n    markAllAsRead,\n  };\n};\nexport default NotificationsController;\n",
              "name": "notifications.controller.js",
              "size": 5167,
              "type": "source"
            }
          ]
        },
        "middlewares": {
          "_files": [
            {
              "path": "../../src/modules/notifications/middlewares/notifications.abac.js",
              "relativePath": "modules/notifications/middlewares/notifications.abac.js",
              "extension": ".js",
              "content": "// middlewares/notifications.abac.js\nconst initNotificationPolicies = (abac, db) => {\n  // Policy for creating notifications\n  abac.allow('createNotification', (user, data) => {\n    // Only admins or service accounts can create notifications\n    return user.role === 'admin' || user.role === 'service';\n  });\n  // Policy for reading notifications\n  abac.allow('readNotifications', (user, data) => {\n    // Users can only read their own notifications\n    return user._id.toString() === data.userId.toString();\n  });\n  // Policy for updating notification preferences\n  abac.allow('updateNotificationPreferences', (user, data) => {\n    // Users can only update their own preferences\n    return user._id.toString() === data.userId.toString();\n  });\n  return abac;\n};\nexport default initNotificationPolicies;\n",
              "name": "notifications.abac.js",
              "size": 804,
              "type": "source"
            }
          ]
        },
        "models": {
          "_files": [
            {
              "path": "../../src/modules/notifications/models/notification-log.model.js",
              "relativePath": "modules/notifications/models/notification-log.model.js",
              "extension": ".js",
              "content": "export default (db, additionalFields = {}) => {\n  const schema = new db.mongoose.Schema({\n    notificationId: {\n      type: db.mongoose.Schema.Types.ObjectId,\n      ref: 'Notification',\n      required: true,\n    },\n    userId: { type: db.mongoose.Schema.Types.ObjectId, ref: 'User', required: true },\n    channelType: { type: String, required: true },\n    status: { type: String, enum: ['sent', 'delivered', 'failed', 'read'], required: true },\n    error: { type: String },\n    sentAt: { type: Date, default: Date.now },\n    deliveredAt: { type: Date },\n    readAt: { type: Date },\n  });\n  return db.mongoose.model('NotificationLog', schema);\n};\n",
              "name": "notification-log.model.js",
              "size": 646,
              "type": "source"
            },
            {
              "path": "../../src/modules/notifications/models/notification-preference.model.js",
              "relativePath": "modules/notifications/models/notification-preference.model.js",
              "extension": ".js",
              "content": "export default (db, additionalFields = {}) => {\n  const schema = new db.mongoose.Schema({\n    userId: { type: db.mongoose.Schema.Types.ObjectId, ref: 'User', required: true },\n    channelType: {\n      type: String,\n      enum: ['web', 'push', 'email', 'sms', 'telegram', 'whatsapp'],\n      required: true,\n    },\n    notificationType: { type: String, required: true }, // Type of notification (alerts, promotions, etc.)\n    isEnabled: { type: Boolean, default: true },\n  });\n  schema.index({ userId: 1, channelType: 1, notificationType: 1 }, { unique: true });\n  return db.mongoose.model('NotificationPreference', schema);\n};\n",
              "name": "notification-preference.model.js",
              "size": 626,
              "type": "source"
            },
            {
              "path": "../../src/modules/notifications/models/notification.model.js",
              "relativePath": "modules/notifications/models/notification.model.js",
              "extension": ".js",
              "content": "export default (db, additionalFields = {}) => {\n  const schema = new db.mongoose.Schema({\n    title: { type: String, required: true },\n    body: { type: String, required: true },\n    type: { type: String, required: true }, // Type of notification (e.g., 'alert', 'info', 'promo')\n    metadata: { type: Object, default: {} }, // Additional data specific to notification type\n    userId: { type: db.mongoose.Schema.Types.ObjectId, ref: 'User', required: true },\n    status: { type: String, enum: ['pending', 'sent', 'failed', 'read'], default: 'pending' },\n    createdAt: { type: Date, default: Date.now },\n    updatedAt: { type: Date, default: Date.now },\n  });\n  return db.mongoose.model('Notification', schema);\n};\n",
              "name": "notification.model.js",
              "size": 716,
              "type": "source"
            },
            {
              "path": "../../src/modules/notifications/models/user-device.model.js",
              "relativePath": "modules/notifications/models/user-device.model.js",
              "extension": ".js",
              "content": "export default (db, additionalFields = {}) => {\n  const schema = new db.mongoose.Schema({\n    userId: { type: db.mongoose.Schema.Types.ObjectId, ref: 'User', required: true },\n    deviceId: { type: String, required: true },\n    deviceType: { type: String, enum: ['ios', 'android', 'web'], required: true },\n    deviceToken: { type: String, required: true }, // Push token for mobile, or web token\n    isActive: { type: Boolean, default: true },\n    lastActive: { type: Date, default: Date.now },\n  });\n  schema.index({ userId: 1, deviceId: 1 }, { unique: true });\n  return db.mongoose.model('UserDevice', schema);\n};\n",
              "name": "user-device.model.js",
              "size": 617,
              "type": "source"
            }
          ]
        },
        "_files": [
          {
            "path": "../../src/modules/notifications/notifications.client.js",
            "relativePath": "modules/notifications/notifications.client.js",
            "extension": ".js",
            "content": "import { toRefs, watch } from 'vue';\n// Router import\nimport routerNotifications from './router/notifications.router.js';\n// Store\nimport * as storeNotifications from './store/notifications.store.js';\n// Auth store import\n// Global WebSocket import\nimport globalWebSocket from '@martyrs/src/modules/globals/views/classes/globals.websocket.js';\n// Layouts\nimport NotificationsLayout from './components/layouts/NotificationsLayout.vue';\n// Sections\nimport NotificationPreferences from './components/sections/NotificationPreferences.vue';\nimport NotificationsList from './components/sections/NotificationsList.vue';\n// Pages\nimport Notifications from './components/pages/Notifications.vue';\n// Components\nimport NotificationItem from './components/blocks/NotificationItem.vue';\nimport NotificationBadge from './components/elements/NotificationBadge.vue';\n\n/**\n * Capacitor Push Notification handler\n */\nclass CapacitorPushHandler {\n  constructor(store) {\n    this.store = store;\n    this.pushNotifications = null;\n    this.device = null;\n    this.isInitialized = false;\n  }\n\n  /**\n   * Initialize Capacitor plugins\n   */\n  async initialize() {\n    // Skip if running in SSR\n    if (typeof window === 'undefined') {\n      return false;\n    }\n\n    try {\n      // Dynamic imports to prevent errors in web environment\n      const { Capacitor } = await import('@capacitor/core');\n      const { PushNotifications } = await import('@capacitor/push-notifications');\n      const { Device } = await import('@capacitor/device');\n\n      this.capacitor = Capacitor;\n      this.pushNotifications = PushNotifications;\n      this.device = Device;\n\n      // Only proceed if running on a native platform\n      if (!this.capacitor.isNativePlatform()) {\n        return false;\n      }\n\n      this.isInitialized = true;\n      return true;\n    } catch (error) {\n      console.error('Error importing Capacitor plugins:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Request permission and register for push notifications\n   */\n  async requestPermissions() {\n    // Skip if running in SSR\n    if (typeof window === 'undefined') {\n      return false;\n    }\n\n    if (!this.isInitialized) {\n      const initialized = await this.initialize();\n      if (!initialized) return false;\n    }\n\n    try {\n      // Request permission\n      const permissionResult = await this.pushNotifications.requestPermissions();\n      if (permissionResult.receive !== 'granted') {\n        console.log('Push notification permission denied');\n        return false;\n      }\n\n      // Set up event listeners\n      this._setupListeners();\n\n      // Register with Apple/Google\n      await this.pushNotifications.register();\n      return true;\n    } catch (error) {\n      console.error('Error requesting push notification permissions:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Setup push notification event listeners\n   */\n  _setupListeners() {\n    // Registration event\n    this.pushNotifications.addListener('registration', this._handleRegistration.bind(this));\n\n    // Notification received event\n    this.pushNotifications.addListener('pushNotificationReceived', this._handleNotificationReceived.bind(this));\n\n    // Notification action performed event\n    this.pushNotifications.addListener('pushNotificationActionPerformed', this._handleNotificationAction.bind(this));\n  }\n\n  /**\n   * Handle registration token received\n   */\n  async _handleRegistration(token) {\n    try {\n      // Get device info\n      const deviceInfo = await this.device.getInfo();\n      const deviceId = await this.device.getId();\n\n      // Prepare device data\n      const deviceData = {\n        deviceId: deviceId.uuid,\n        deviceType: deviceInfo.platform.toLowerCase(),\n        deviceToken: token.value,\n      };\n\n      // Register device with backend\n      await this.store.notifications.actions.registerDevice(deviceData);\n    } catch (error) {\n      console.error('Error handling push registration:', error);\n    }\n  }\n\n  /**\n   * Handle received notification\n   */\n  _handleNotificationReceived(notification) {\n    // Add notification to store\n    this.store.notifications.actions.addLocalNotification({\n      title: notification.title,\n      body: notification.body,\n      data: notification.data || {},\n    });\n  }\n\n  /**\n   * Handle notification action (when user taps on notification)\n   */\n  _handleNotificationAction(actionData) {\n    if (actionData.notification && actionData.notification.data) {\n      this.store.notifications.actions.handleNotificationAction(actionData.notification.data);\n    }\n  }\n\n  /**\n   * Remove push notification listeners\n   */\n  removeListeners() {\n    if (typeof window === 'undefined') {\n      return;\n    }\n\n    if (this.pushNotifications) {\n      this.pushNotifications.removeAllListeners();\n    }\n  }\n}\n\n/**\n * Notification Manager for coordinating WebSocket and Push notifications\n */\n\nclass NotificationManager {\n  constructor(store, options = {}) {\n    this.store = store;\n    this.options = options;\n    this.pushHandler = new CapacitorPushHandler(store);\n    this.initialized = false;\n    this.isServer = typeof window === 'undefined';\n  }\n\n  async registerWebPush(store) {\n    if (!('Notification' in window) || !('serviceWorker' in navigator) || !('PushManager' in window)) {\n      console.warn('Web Push не поддерживается в браузере');\n      return;\n    }\n\n    const permission = await Notification.requestPermission();\n    if (permission !== 'granted') {\n      console.warn('Разрешение на уведомления не получено');\n      return;\n    }\n\n    const registration = await navigator.serviceWorker.register('/sw.js');\n    const subscription = await registration.pushManager.subscribe({\n      userVisibleOnly: true,\n      applicationServerKey: 'BJtNnRrx05VQS0abnkHC-8gHJWpnmoqC_iQveENCmZOZIs-adWzqAiqFCdGVVd7CbiaLW-Q5iuIBDRgM9G-VnKg',\n    });\n\n    console.log('New subscription:', JSON.stringify(subscription));\n\n    // Отправь подписку на сервер\n    await store.notifications.actions.registerDevice({\n      deviceToken: JSON.stringify(subscription),\n      deviceType: 'web',\n    });\n  }\n\n  async initialize() {\n    if (this.initialized || this.isServer) return;\n\n    const userId = this.store.auth.state.user?._id;\n    if (!userId) {\n      console.warn('Cannot initialize notifications: No user ID found in auth store');\n      return;\n    }\n\n    console.log('Connecting to websockets via notifications');\n    await globalWebSocket.connect(userId);\n\n    globalWebSocket.removeModuleListeners('notification');\n\n    await globalWebSocket.subscribeModule('notification');\n\n    globalWebSocket.addEventListener(\n      'notification',\n      data => {\n        this.store.notifications.actions.addLocalNotification(data.data);\n      },\n      { module: 'notification' }\n    );\n\n    // 🎯 Опционально включаем push\n    if (this.options.enablePush !== false) {\n      await this.pushHandler.requestPermissions();\n      await this.registerWebPush(this.store);\n    }\n\n    this.initialized = true;\n\n    // ✅ Загружаем список уведомлений из API\n    await this.store.notifications.actions.getNotifications(userId);\n  }\n\n  disconnect() {\n    if (this.isServer) return;\n\n    globalWebSocket.removeModuleListeners('notification');\n    this.pushHandler.removeListeners();\n    this.initialized = false;\n  }\n}\n\n/**\n * Server-side utility for pre-fetching notification data\n */\nconst SSRUtils = {\n  /**\n   * Pre-fetch notifications for SSR\n   * @param {Object} store - Store instance\n   * @param {Object} context - SSR context\n   */\n  async prefetchNotifications(store, context) {\n    try {\n      const userId = store.auth.state.user?._id;\n      if (userId) {\n        // Fetch notifications without WebSocket or push setup\n        await store.notifications.actions.getNotifications(userId);\n      }\n    } catch (error) {\n      console.error('Error pre-fetching notifications for SSR:', error);\n    }\n  },\n};\n\n/**\n * Function to initialize the notifications module\n * @param {Object} app - Vue app instance\n * @param {Object} store - Vuex/Pinia store\n * @param {Object} router - Vue Router instance\n * @param {Object} options - Configuration options\n */\nfunction initializeNotifications(app, store, router, options = {}) {\n  // Add routes and store\n  const route = options.route || 'User Profile Root';\n  router.addRoute(route, routerNotifications);\n  store.addStore('notifications', storeNotifications);\n\n  // Initialize global WebSocket if needed\n  if (options.wsUrl) {\n    globalWebSocket.initialize({ wsUrl: options.wsUrl });\n  }\n\n  // Create notification manager\n  const notificationManager = new NotificationManager(store, {\n    enablePush: options.enablePush !== false,\n    maxReconnectAttempts: options.maxReconnectAttempts || 5,\n    reconnectDelay: options.reconnectDelay || 3000,\n    pingInterval: options.pingInterval || 30000,\n  });\n\n  // Attach notification manager to store for access in components\n  store.notificationManager = notificationManager;\n\n  // Don't auto-initialize on server\n  const isServer = typeof window === 'undefined';\n  const autoInit = !isServer && options.autoInit !== false;\n\n  if (autoInit) {\n    // Initialize after auth is confirmed\n    const isAuthenticated = store.auth.state.access.status;\n    const userId = store.auth.state.user?._id;\n\n    if (isAuthenticated && userId) {\n      notificationManager.initialize();\n    }\n\n    // Watch for user login/logout using auth store\n    watch(\n      () => store.auth.state.access.status,\n      isAuthenticated => {\n        if (isAuthenticated) {\n          notificationManager.initialize();\n        } else {\n          notificationManager.disconnect();\n          store.notifications.mutations.resetNotifications();\n        }\n      }\n    );\n  }\n\n  // Provide composable for components to access notification functionality\n  app.provide('useNotifications', () => {\n    return {\n      ...toRefs(store.notifications.state),\n      ...store.notifications.actions,\n      ...store.notifications.mutations,\n      init: notificationManager.initialize.bind(notificationManager),\n      disconnect: notificationManager.disconnect.bind(notificationManager),\n      isServer,\n    };\n  });\n\n  return notificationManager;\n}\n\n// Module export\nconst ModuleNotifications = {\n  initialize: initializeNotifications,\n  SSR: SSRUtils, // Export SSR utilities\n  views: {\n    store: {\n      storeNotifications,\n    },\n    router: {\n      routerNotifications,\n    },\n    components: {\n      // Elements\n      NotificationBadge,\n      // Blocks\n      NotificationItem,\n      // Sections\n      NotificationsList,\n      NotificationPreferences,\n      // Pages\n      Notifications,\n      // Layouts\n      NotificationsLayout,\n    },\n  },\n};\n\n// Component exports\nexport {\n  // Elements\n  NotificationBadge,\n  // Blocks\n  NotificationItem,\n  NotificationPreferences,\n  // Pages\n  Notifications,\n  // Layouts\n  NotificationsLayout,\n  // Sections\n  NotificationsList,\n  // SSR Utilities\n  SSRUtils,\n};\n\nexport default ModuleNotifications;\n",
            "name": "notifications.client.js",
            "size": 10946,
            "type": "source"
          },
          {
            "path": "../../src/modules/notifications/notifications.server.js",
            "relativePath": "modules/notifications/notifications.server.js",
            "extension": ".js",
            "content": "import globalsabac from '@martyrs/src/modules/globals/controllers/classes/globals.abac.js';\nimport NotificationsController from './controllers/notifications.controller.js';\nimport NotificationLogModel from './models/notification-log.model.js';\nimport NotificationPreferenceModel from './models/notification-preference.model.js';\nimport NotificationModel from './models/notification.model.js';\nimport UserDeviceModel from './models/user-device.model.js';\nimport notificationsRoutes from './routes/notifications.routes.js';\nimport NotificationService from './services/notification.service.js';\nconst { getInstance } = globalsabac;\nfunction initializeNotifications(app, db, wss, origins, publicPath) {\n  // Set up models in the database object\n  db.notification = NotificationModel(db);\n  db.userDevice = UserDeviceModel(db);\n  db.notificationPreference = NotificationPreferenceModel(db);\n  db.notificationLog = NotificationLogModel(db);\n  const abac = getInstance(db);\n  // const notificationPolicies = initNotificationPolicies(abac, db);\n  // Set up routes if app is provided\n  if (app) {\n    notificationsRoutes(app, db, wss, origins, publicPath);\n  }\n  // Initialize notification service and related background tasks\n  const notificationService = NotificationService(db, wss);\n  console.log('[DEBUG] WSS in notification init:', wss);\n  // Set up a scheduler to process pending notifications\n  setInterval(() => {\n    notificationService.processPendingNotifications();\n  }, 60000); // Every minute\n}\nexport const models = {\n  NotificationModel,\n  UserDeviceModel,\n  NotificationPreferenceModel,\n  NotificationLogModel,\n};\nexport const routes = {\n  notificationsRoutes,\n};\nexport const controllers = {\n  NotificationsController,\n};\nexport const services = {\n  NotificationService,\n};\nexport { initializeNotifications as initialize };\nexport default {\n  initialize: initializeNotifications,\n  models,\n  routes,\n  controllers,\n  services,\n};\n",
            "name": "notifications.server.js",
            "size": 1939,
            "type": "source"
          }
        ],
        "router": {
          "_files": [
            {
              "path": "../../src/modules/notifications/router/notifications.router.js",
              "relativePath": "modules/notifications/router/notifications.router.js",
              "extension": ".js",
              "content": "import NotificationsLayout from '../components/layouts/NotificationsLayout.vue';\nimport Notifications from '../components/pages/Notifications.vue';\nimport NotificationPreferences from '../components/sections/NotificationPreferences.vue';\n\nconst nofitications = {\n  path: '/notifications',\n  component: NotificationsLayout,\n  children: [\n    {\n      path: '',\n      name: 'Notifications',\n      component: Notifications,\n      meta: {\n        // requiresAuth: true,\n        title: 'Notifications',\n      },\n    },\n    {\n      path: 'preferences',\n      name: 'NotificationPreferences',\n      component: NotificationPreferences,\n      meta: {\n        // requiresAuth: true,\n        title: 'Notification Preferences',\n      },\n    },\n  ],\n};\n\nexport default nofitications;\n",
              "name": "notifications.router.js",
              "size": 770,
              "type": "source"
            }
          ]
        },
        "routes": {
          "_files": [
            {
              "path": "../../src/modules/notifications/routes/notifications.routes.js",
              "relativePath": "modules/notifications/routes/notifications.routes.js",
              "extension": ".js",
              "content": "import notifications from '../controllers/notifications.controller.js';\n// routes/notifications.routes.js\nconst notificationsRoutes = (app, db, wss, origins, publicPath) => {\n  const controller = notifications(db, wss);\n  // Get notifications for a user\n  app.get('/api/notifications/user/:userId', controller.getUserNotifications);\n  // Create a new notification\n  app.post('/api/notifications', controller.create);\n  // Mark notification as read\n  app.put('/api/notifications/:id/read', controller.markAsRead);\n  // Mark all notifications as read for a user\n  app.put('/api/notifications/user/:userId/read-all', controller.markAllAsRead);\n  // Register a device for push notifications\n  app.post('/api/notifications/devices/register', controller.registerDevice);\n  // Add this to routes/notifications.routes.js\n  app.get('/api/notifications/preferences/:userId', controller.getUserPreferences);\n  // Update notification preferences\n  app.put('/api/notifications/preferences', controller.updatePreferences);\n};\nexport default notificationsRoutes;\n",
              "name": "notifications.routes.js",
              "size": 1048,
              "type": "source"
            }
          ]
        },
        "services": {
          "_files": [
            {
              "path": "../../src/modules/notifications/services/apns.service.js",
              "relativePath": "modules/notifications/services/apns.service.js",
              "extension": ".js",
              "content": "import apn from 'apn';\nlet apnProvider = null;\nconst getApnProvider = () => {\n  if (!apnProvider) {\n    apnProvider = new apn.Provider({\n      token: {\n        key: process.env.APN_KEY_PATH,\n        keyId: process.env.APN_KEY_ID,\n        teamId: process.env.APN_TEAM_ID,\n      },\n      production: process.env.NODE_ENV === 'production',\n    });\n  }\n  return apnProvider;\n};\nconst ApnsService = {\n  send: async ({ token, title, body, data = {} }) => {\n    try {\n      const provider = getApnProvider();\n      const notification = new apn.Notification();\n      notification.expiry = Math.floor(Date.now() / 1000) + 3600; // Expires in 1 hour\n      notification.badge = 1;\n      notification.sound = 'ping.aiff';\n      notification.alert = {\n        title: title,\n        body: body,\n      };\n      notification.topic = process.env.APN_BUNDLE_ID;\n      notification.payload = data;\n      const result = await provider.send(notification, token);\n      // Check for sent/failed\n      if (result.failed.length > 0) {\n        const error = result.failed[0].response;\n        throw new Error(`APNS send failed: ${error.reason}`);\n      }\n      return { success: true, messageId: result.sent[0].headers['apns-id'] };\n    } catch (error) {\n      console.error('APNS service error:', error);\n      throw error;\n    }\n  },\n};\nexport default ApnsService;\n",
              "name": "apns.service.js",
              "size": 1342,
              "type": "source"
            },
            {
              "path": "../../src/modules/notifications/services/email.service.js",
              "relativePath": "modules/notifications/services/email.service.js",
              "extension": ".js",
              "content": "import mailing from '@martyrs/src/modules/globals/controllers/utils/mailing.js';\n// services/email.service.js\nconst { sendEmail } = mailing;\nconst EmailService = {\n  send: async ({ to, subject, text, html, metadata = {} }) => {\n    try {\n      // Convert any attachments from metadata if present\n      const files = metadata.attachments || [];\n      // Send email using the utility function\n      const result = await sendEmail(to, subject, text, files);\n      if (!result) {\n        throw new Error('Failed to send email');\n      }\n      return { success: true, messageId: Date.now().toString() };\n    } catch (error) {\n      console.error('Email service error:', error);\n      throw error;\n    }\n  },\n};\nexport default EmailService;\n",
              "name": "email.service.js",
              "size": 735,
              "type": "source"
            },
            {
              "path": "../../src/modules/notifications/services/fcm.service.js",
              "relativePath": "modules/notifications/services/fcm.service.js",
              "extension": ".js",
              "content": "import admin from 'firebase-admin';\nimport path from 'path';\n// Initialize Firebase Admin SDK if not already initialized\nif (!admin.apps.length) {\n  admin.initializeApp({\n    credential: admin.credential.cert(\n      // Load the service account key JSON file\n      path.resolve(process.env.GOOGLE_APPLICATION_CREDENTIALS)\n    ),\n    // Optional: databaseURL, storageBucket, etc.\n  });\n}\nconst FcmService = {\n  send: async ({ token, title, body, data = {} }) => {\n    try {\n      const message = {\n        notification: {\n          title,\n          body,\n        },\n        data: Object.keys(data).reduce((acc, key) => {\n          // FCM data payload must be strings\n          acc[key] = String(data[key]);\n          return acc;\n        }, {}),\n        token,\n      };\n      const response = await admin.messaging().send(message);\n      return { success: true, messageId: response };\n    } catch (error) {\n      console.error('FCM service error:', error);\n      throw error;\n    }\n  },\n  sendMulticast: async ({ tokens, title, body, data = {} }) => {\n    try {\n      const message = {\n        notification: {\n          title,\n          body,\n        },\n        data: Object.keys(data).reduce((acc, key) => {\n          // FCM data payload must be strings\n          acc[key] = String(data[key]);\n          return acc;\n        }, {}),\n        tokens,\n      };\n      const response = await admin.messaging().sendMulticast(message);\n      return {\n        success: true,\n        successCount: response.successCount,\n        failureCount: response.failureCount,\n        responses: response.responses,\n      };\n    } catch (error) {\n      console.error('FCM multicast service error:', error);\n      throw error;\n    }\n  },\n};\nexport default FcmService;\n",
              "name": "fcm.service.js",
              "size": 1744,
              "type": "source"
            },
            {
              "path": "../../src/modules/notifications/services/notification.service.js",
              "relativePath": "modules/notifications/services/notification.service.js",
              "extension": ".js",
              "content": "import { Types } from 'mongoose';\nimport apns from './apns.service.js';\nimport emailService from './email.service.js';\nimport fcm from './fcm.service.js';\nimport smsService from './sms.service.js';\nimport telegramService from './telegram.service.js';\nimport webPush from './web-push.service.js';\nimport whatsappService from './whatsapp.service.js';\nconst ObjectId = { Types }.Types.ObjectId;\nexport default (function (db, wss) {\n  wss.registerModule('notification', async (ws, msg) => {\n    console.log('[WebSocket][notification] msg:', msg);\n  });\n  // Process and route notification to appropriate channels\n  const processNotification = async notification => {\n    try {\n      const userId = notification.userId.toString();\n      // Get user preferences\n      const preferences = await db.notificationPreference.find({\n        userId: userId,\n        // notificationType: notification.type\n      });\n      console.log('userId', userId);\n      console.log('preferences', preferences);\n      console.log('notificationType', notification.type);\n      console.log('notification', notification);\n      // Get user data\n      const user = await db.mongoose.model('User').findById(new ObjectId(userId));\n      if (!user) {\n        throw new Error(`User not found: ${userId}`);\n      }\n      // Create a channel router map\n      const channelRouters = {\n        web: sendWebNotification,\n        push: sendPushNotification,\n        email: sendEmailNotification,\n        sms: sendSmsNotification,\n        // telegram: sendTelegramNotification,\n        // whatsapp: sendWhatsAppNotification\n      };\n      // Get all active devices for push notifications\n      const userDevices = await db.userDevice.find({\n        userId,\n        isActive: true,\n      });\n      // Default channels if no preferences set\n      let channels = ['web']; // Web is always on by default\n      // If user has email, add it to default channels\n      if (user.email) {\n        channels.push('email');\n      }\n      // If user has phone, add SMS to default channels\n      if (user.phoneNumber) {\n        channels.push('sms');\n      }\n      // Override with user preferences if they exist\n      if (preferences.length > 0) {\n        channels = preferences.filter(pref => pref.isEnabled).map(pref => pref.channelType);\n      }\n      console.log('channels', channels);\n      // Send to each enabled channel\n      for (const channel of channels) {\n        const sendFunc = channelRouters[channel];\n        if (sendFunc) {\n          try {\n            // For push notifications, we need to send to all devices\n            if (channel === 'push') {\n              for (const device of userDevices) {\n                await sendFunc(notification, user, device);\n              }\n            } else {\n              await sendFunc(notification, user);\n            }\n            // Update notification status\n            await db.notification.findByIdAndUpdate(notification._id, {\n              status: 'sent',\n              updatedAt: Date.now(),\n            });\n            // Log the sent notification\n            await db.notificationLog.create({\n              notificationId: notification._id,\n              userId: notification.userId,\n              channelType: channel,\n              status: 'sent',\n              sentAt: Date.now(),\n            });\n          } catch (error) {\n            console.error(`Error sending ${channel} notification:`, error);\n            // Log the failed notification\n            await db.notificationLog.create({\n              notificationId: notification._id,\n              userId: notification.userId,\n              channelType: channel,\n              status: 'failed',\n              error: error.message,\n              sentAt: Date.now(),\n            });\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error processing notification:', error);\n      // Update notification status to failed\n      await db.notification.findByIdAndUpdate(notification._id, {\n        status: 'failed',\n        updatedAt: Date.now(),\n      });\n    }\n  };\n  // Send websocket notifications\n  const sendWebNotification = async (notification, user) => {\n    console.log(`[WebSocket][notification] sending to user ${user._id}`);\n    const result = await wss.sendToUserInModule('notification', user._id, {\n      type: 'notification',\n      data: notification,\n    });\n    if (!result) {\n      console.log(`Failed to send web notification to user ${user._id}`);\n    }\n  };\n  // Send push notification to mobile device\n  const sendPushNotification = async (notification, user, device) => {\n    const pushService = getPushServiceByDeviceType(device.deviceType);\n    return pushService.send({\n      token: device.deviceToken,\n      title: notification.title,\n      body: notification.body,\n      data: notification.metadata,\n    });\n  };\n  // Get the appropriate push service based on device type\n  const getPushServiceByDeviceType = deviceType => {\n    if (deviceType === 'ios') {\n      return apns;\n    } else if (deviceType === 'android') {\n      return fcm;\n    } else {\n      return webPush;\n    }\n  };\n  // Send email notification\n  const sendEmailNotification = async (notification, user) => {\n    return emailService.send({\n      to: user.email,\n      subject: notification.title,\n      text: notification.body,\n      html: `<h1>${notification.title}</h1><p>${notification.body}</p>`,\n      metadata: notification.metadata,\n    });\n  };\n  // Send SMS notification\n  const sendSmsNotification = async (notification, user) => {\n    return smsService.send({\n      to: user.phoneNumber,\n      message: `${notification.title}: ${notification.body}`,\n    });\n  };\n  // Send Telegram notification (for future expansion)\n  const sendTelegramNotification = async (notification, user) => {\n    return telegramService.send({\n      chatId: user.telegramChatId,\n      message: `${notification.title}\\n\\n${notification.body}`,\n    });\n  };\n  // Send WhatsApp notification (for future expansion)\n  const sendWhatsAppNotification = async (notification, user) => {\n    return whatsappService.send({\n      to: user.phoneNumber,\n      message: `${notification.title}\\n\\n${notification.body}`,\n    });\n  };\n  // Batch process pending notifications\n  const processPendingNotifications = async () => {\n    const pendingNotifications = await db.notification\n      .find({\n        status: 'pending',\n      })\n      .limit(100);\n    for (const notification of pendingNotifications) {\n      await processNotification(notification);\n    }\n  };\n  return {\n    processNotification,\n    processPendingNotifications,\n  };\n});\n",
              "name": "notification.service.js",
              "size": 6593,
              "type": "source"
            },
            {
              "path": "../../src/modules/notifications/services/sms.service.js",
              "relativePath": "modules/notifications/services/sms.service.js",
              "extension": ".js",
              "content": "import mailing from '@martyrs/src/modules/globals/controllers/utils/mailing.js';\n// services/sms.service.js\nconst { sendSms } = mailing;\nconst SmsService = {\n  send: async ({ to, message }) => {\n    try {\n      // Send SMS using the utility function\n      const result = await sendSms(to, message);\n      if (!result) {\n        throw new Error('Failed to send SMS');\n      }\n      return { success: true, messageId: Date.now().toString() };\n    } catch (error) {\n      console.error('SMS service error:', error);\n      throw error;\n    }\n  },\n};\nexport default SmsService;\n",
              "name": "sms.service.js",
              "size": 573,
              "type": "source"
            },
            {
              "path": "../../src/modules/notifications/services/telegram.service.js",
              "relativePath": "modules/notifications/services/telegram.service.js",
              "extension": ".js",
              "content": "import mailing from '@martyrs/src/modules/globals/controllers/utils/mailing.js';\n// services/telegram.service.js\nconst { sendChatMessageTelegram } = mailing;\nconst TelegramService = {\n  send: async ({ chatId, message }) => {\n    try {\n      // Send Telegram message using the utility function\n      // Note: our utility expects an array of chatIds\n      const result = await sendChatMessageTelegram([chatId], message);\n      if (!result) {\n        throw new Error('Failed to send Telegram message');\n      }\n      return { success: true, messageId: Date.now().toString() };\n    } catch (error) {\n      console.error('Telegram service error:', error);\n      throw error;\n    }\n  },\n};\nexport default TelegramService;\n",
              "name": "telegram.service.js",
              "size": 716,
              "type": "source"
            },
            {
              "path": "../../src/modules/notifications/services/web-push.service.js",
              "relativePath": "modules/notifications/services/web-push.service.js",
              "extension": ".js",
              "content": "import webpush from 'web-push';\n// Configure web push with VAPID keys\nwebpush.setVapidDetails(`mailto:${process.env.VAPID_EMAIL}`, process.env.VAPID_PUBLIC_KEY, process.env.VAPID_PRIVATE_KEY);\nconst WebPushService = {\n  send: async ({ token, title, body, data = {} }) => {\n    try {\n      // Parse the subscription object from the token\n      const subscription = JSON.parse(token);\n      console.log('title is', title);\n      console.log('body is', body);\n      console.log('data is', data);\n      // Prepare the notification payload\n      const payload = JSON.stringify({\n        title: title,\n        body: body,\n        icon: process.env.NOTIFICATION_ICON_URL || '/favicon.ico',\n        badge: process.env.NOTIFICATION_BADGE_URL || '/favicon.ico',\n        data: data,\n      });\n      console.log('payload is', payload);\n      // Send the notification\n      const result = await webpush.sendNotification(subscription, payload);\n      console.log('web push is', result);\n      return { success: true, statusCode: result.statusCode };\n    } catch (error) {\n      console.error('Web Push service error:', error);\n      throw error;\n    }\n  },\n};\nexport default WebPushService;\n",
              "name": "web-push.service.js",
              "size": 1177,
              "type": "source"
            },
            {
              "path": "../../src/modules/notifications/services/whatsapp.service.js",
              "relativePath": "modules/notifications/services/whatsapp.service.js",
              "extension": ".js",
              "content": "import axios from 'axios';\nconst WhatsAppService = {\n  send: async ({ to, message }) => {\n    try {\n      // This is a placeholder implementation\n      // You would need to integrate with a WhatsApp Business API provider\n      // like Twilio, MessageBird, etc.\n      // Example with a generic API\n      const response = await axios.post(process.env.WHATSAPP_API_URL, {\n        to: to,\n        message: message,\n        from: process.env.WHATSAPP_BUSINESS_PHONE_NUMBER,\n        api_key: process.env.WHATSAPP_API_KEY,\n      });\n      if (!response.data.success) {\n        throw new Error(`Failed to send WhatsApp message: ${response.data.message}`);\n      }\n      return { success: true, messageId: response.data.messageId };\n    } catch (error) {\n      console.error('WhatsApp service error:', error);\n      throw error;\n    }\n  },\n};\nexport default WhatsAppService;\n",
              "name": "whatsapp.service.js",
              "size": 866,
              "type": "source"
            }
          ]
        },
        "store": {
          "_files": [
            {
              "path": "../../src/modules/notifications/store/notifications.store.js",
              "relativePath": "modules/notifications/store/notifications.store.js",
              "extension": ".js",
              "content": "// Dependencies\nimport { computed, reactive, watch } from 'vue';\n// Setup Axios\nimport $axios from '@martyrs/src/modules/globals/views/utils/axios-instance.js';\n// Globals\nimport { setError } from '@martyrs/src/modules/globals/views/store/globals.js';\n// Auth\nimport * as auth from '@martyrs/src/modules/auth/views/store/auth.js';\n\n// Initial state for a notification\nconst notificationInitState = {\n  _id: null,\n  title: '',\n  body: '',\n  type: 'info',\n  metadata: {},\n  userId: null,\n  status: 'pending',\n  createdAt: null,\n  updatedAt: null,\n};\n\n// Initial state for notification preferences\nconst preferencesInitState = {\n  web: true,\n  push: true,\n  email: true,\n  sms: true,\n  telegram: false,\n  whatsapp: false,\n};\n\n// State declaration\nconst state = reactive({\n  notifications: [],\n  unreadCount: 0,\n  current: { ...notificationInitState },\n  preferences: { ...preferencesInitState },\n  deviceRegistered: false,\n  loading: false,\n  lastSync: null,\n});\n\nconst actions = {\n  /**\n   * Get user notifications from server\n   */\n  async getNotifications(userId = null) {\n    try {\n      // Use provided userId or get from auth store\n      const userIdToUse = userId || auth.state.user._id;\n\n      if (!userIdToUse) {\n        console.warn('Cannot get notifications: No user ID found');\n        return [];\n      }\n\n      state.loading = true;\n      const response = await $axios.get(`/api/notifications/user/${userIdToUse}`);\n      state.notifications = response.data;\n      state.lastSync = new Date().toISOString();\n      updateUnreadCount();\n      state.loading = false;\n      return response.data;\n    } catch (error) {\n      state.loading = false;\n      setError(error);\n      throw error;\n    }\n  },\n\n  /**\n   * Mark a notification as read\n   */\n  async markAsRead(notificationId) {\n    try {\n      const response = await $axios.put(`/api/notifications/${notificationId}/read`);\n\n      // Update the notification in the local state\n      const index = state.notifications.findIndex(n => n._id === notificationId);\n      if (index !== -1) {\n        state.notifications[index] = response.data;\n        updateUnreadCount();\n      }\n\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n\n  /**\n   * Synchronize notification status without API call\n   * (For use with WebSocket updates)\n   */\n  syncNotificationStatus(notificationId, status) {\n    const index = state.notifications.findIndex(n => n._id === notificationId);\n    if (index !== -1) {\n      state.notifications[index].status = status;\n      state.notifications[index].updatedAt = new Date().toISOString();\n      updateUnreadCount();\n    }\n  },\n\n  /**\n   * Register a device for push notifications\n   */\n  async registerDevice(deviceData) {\n    try {\n      // Add the current user ID to the device data\n      const userId = auth.state.user._id;\n      if (!userId) {\n        console.warn('Cannot register device: No user ID found');\n        return;\n      }\n\n      deviceData.userId = userId;\n\n      const response = await $axios.post('/api/notifications/devices/register', deviceData);\n      state.deviceRegistered = true;\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n\n  /**\n   * Update notification preferences\n   */\n  async updatePreferences(preferences) {\n    try {\n      const userId = auth.state.user._id;\n      if (!userId) {\n        console.warn('Cannot update preferences: No user ID found');\n        return;\n      }\n\n      // Transform preferences object to array format expected by the API\n      const preferencesArray = Object.entries(preferences).map(([channelType, isEnabled]) => {\n        return {\n          channelType,\n          notificationType: 'all', // Default type, can be made more specific\n          isEnabled,\n        };\n      });\n\n      const response = await $axios.put('/api/notifications/preferences', {\n        userId,\n        preferences: preferencesArray,\n      });\n\n      // Update state with new preferences\n      const newPreferences = {};\n      response.data.forEach(pref => {\n        newPreferences[pref.channelType] = pref.isEnabled;\n      });\n\n      state.preferences = { ...preferencesInitState, ...newPreferences };\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n\n  /**\n   * Get notification preferences\n   */\n  async getPreferences() {\n    try {\n      const userId = auth.state.user._id;\n      if (!userId) {\n        console.warn('Cannot get preferences: No user ID found');\n        return;\n      }\n\n      // Assuming an endpoint exists to fetch preferences\n      const response = await $axios.get(`/api/notifications/preferences/${userId}`);\n\n      // Transform API response to our state format\n      const newPreferences = {};\n      response.data.forEach(pref => {\n        newPreferences[pref.channelType] = pref.isEnabled;\n      });\n\n      state.preferences = { ...preferencesInitState, ...newPreferences };\n      return response.data;\n    } catch (error) {\n      setError(error);\n      // If API fails, use default preferences\n      state.preferences = { ...preferencesInitState };\n      throw error;\n    }\n  },\n\n  /**\n   * Add a local notification (for handling push notifications or WebSocket notifications)\n   */\n  addLocalNotification(notification) {\n    // Check if notification already exists by ID to prevent duplicates\n    if (notification._id) {\n      const existingIndex = state.notifications.findIndex(n => n._id === notification._id);\n      if (existingIndex !== -1) {\n        // Update existing notification\n        state.notifications[existingIndex] = {\n          ...state.notifications[existingIndex],\n          ...notification,\n          updatedAt: new Date().toISOString(),\n        };\n        updateUnreadCount();\n        return;\n      }\n    }\n\n    // Create a notification object that matches our expected format\n    const newNotification = {\n      _id: notification._id || Date.now().toString(), // Use provided ID or generate temporary one\n      title: notification.title,\n      body: notification.body,\n      type: notification.type || notification.data?.type || 'info',\n      metadata: notification.data || notification.metadata || {},\n      status: notification.status || 'unread',\n      createdAt: notification.createdAt || new Date().toISOString(),\n      updatedAt: notification.updatedAt || new Date().toISOString(),\n    };\n\n    // Add to local state\n    state.notifications.unshift(newNotification);\n    updateUnreadCount();\n  },\n\n  /**\n   * Handle notification action (e.g., when user taps on push notification)\n   */\n  handleNotificationAction(data) {\n    // Mark notification as read if ID is provided\n    if (data.notificationId) {\n      this.markAsRead(data.notificationId);\n    }\n\n    // Navigate based on notification type and metadata\n    if (data.route) {\n      // router.push(data.route);\n      alert('1');\n    } else if (data.type === 'order') {\n      // router.push(`/orders/${data.orderId}`);\n      alert('2');\n    } else if (data.type === 'message') {\n      // router.push('/messages');\n      alert('3');\n    } else {\n      // Default to notifications page\n      // router.push('/notifications');\n      alert('4');\n    }\n  },\n\n  /**\n   * Mark all notifications as read\n   */\n  async markAllAsRead() {\n    try {\n      const userId = auth.state.user._id;\n      if (!userId) {\n        console.warn('Cannot mark all as read: No user ID found');\n        return;\n      }\n\n      const response = await $axios.put(`/api/notifications/user/${userId}/read-all`);\n\n      // Update all notifications in local state\n      state.notifications.forEach(notification => {\n        notification.status = 'read';\n        notification.updatedAt = new Date().toISOString();\n      });\n\n      updateUnreadCount();\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n};\n\nconst mutations = {\n  resetNotifications() {\n    state.notifications = [];\n    state.unreadCount = 0;\n    state.lastSync = null;\n  },\n\n  resetCurrent() {\n    state.current = { ...notificationInitState };\n  },\n\n  resetPreferences() {\n    state.preferences = { ...preferencesInitState };\n  },\n};\n\n// Helper functions\nfunction updateUnreadCount() {\n  state.unreadCount = state.notifications.filter(n => n.status !== 'read').length;\n}\n\n// Track state changes\nconst history = [];\nhistory.push(state);\n\nwatch(state, newState => {\n  history.push(newState);\n});\n\n// Computed properties\nconst getters = {\n  unreadNotifications: computed(() => {\n    return state.notifications.filter(n => n.status !== 'read');\n  }),\n\n  readNotifications: computed(() => {\n    return state.notifications.filter(n => n.status === 'read');\n  }),\n\n  notificationsByType: computed(() => {\n    const result = {};\n    state.notifications.forEach(notification => {\n      if (!result[notification.type]) {\n        result[notification.type] = [];\n      }\n      result[notification.type].push(notification);\n    });\n    return result;\n  }),\n};\n\nexport { actions, getters, mutations, state };\n",
              "name": "notifications.store.js",
              "size": 9064,
              "type": "source"
            }
          ]
        },
        "components": {
          "blocks": {
            "_files": [
              {
                "path": "../../src/modules/notifications/components/blocks/NotificationItem.vue",
                "relativePath": "modules/notifications/components/blocks/NotificationItem.vue",
                "extension": ".vue",
                "content": "<script setup>\nimport { computed } from 'vue';\n\n// Props\nconst props = defineProps({\n  notification: {\n    type: Object,\n    required: true\n  }\n});\n\n// Compute if notification is unread\nconst isUnread = computed(() => props.notification.status !== 'read');\n\n// Format date\nconst formattedDate = computed(() => {\n  const date = new Date(props.notification.createdAt);\n  const now = new Date();\n  const diffMs = now - date;\n  const diffSec = Math.floor(diffMs / 1000);\n  const diffMin = Math.floor(diffSec / 60);\n  const diffHours = Math.floor(diffMin / 60);\n  const diffDays = Math.floor(diffHours / 24);\n  \n  if (diffSec < 60) {\n    return 'Just now';\n  } else if (diffMin < 60) {\n    return `${diffMin}m ago`;\n  } else if (diffHours < 24) {\n    return `${diffHours}h ago`;\n  } else if (diffDays < 7) {\n    return `${diffDays}d ago`;\n  } else {\n    return date.toLocaleDateString();\n  }\n});\n\n// Get icon based on notification type\nconst notificationIcon = computed(() => {\n  switch (props.notification.type) {\n    case 'alert':\n      return '⚠️';\n    case 'success':\n      return '✅';\n    case 'error':\n      return '❌';\n    case 'info':\n    default:\n      return 'ℹ️';\n  }\n});\n\n// Emit click event\nconst emit = defineEmits(['click']);\nconst handleClick = () => {\n  emit('click', props.notification);\n};\n</script>\n\n<template>\n  <div \n    class=\"notification-item\" \n    :class=\"{ unread: isUnread }\"\n    @click=\"handleClick\"\n  >\n    <div class=\"notification-icon\">\n      {{ notificationIcon }}\n    </div>\n    <div class=\"notification-content\">\n      <h3 class=\"notification-title\">{{ notification.title }}</h3>\n      <p class=\"notification-body\">{{ notification.body }}</p>\n      <span class=\"notification-time\">{{ formattedDate }}</span>\n    </div>\n    <div v-if=\"isUnread\" class=\"unread-indicator\"></div>\n  </div>\n</template>\n\n<style scoped>\n.notification-item {\n  display: flex;\n  padding: 1rem;\n  border-radius: 8px;\n  background-color: #fff;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.notification-item:hover {\n  background-color: #f9f9f9;\n}\n\n.notification-item.unread {\n  background-color: #f0f7ff;\n}\n\n.notification-icon {\n  flex-shrink: 0;\n  margin-right: 1rem;\n  font-size: 1.5rem;\n}\n\n.notification-content {\n  flex: 1;\n}\n\n.notification-title {\n  margin: 0 0 0.25rem;\n  font-weight: 600;\n  font-size: 1rem;\n}\n\n.notification-body {\n  margin: 0 0 0.5rem;\n  color: #666;\n  font-size: 0.9rem;\n}\n\n.notification-time {\n  font-size: 0.8rem;\n  color: #999;\n}\n\n.unread-indicator {\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  background-color: var(--primary-color, #0066cc);\n  align-self: center;\n  margin-left: 0.5rem;\n}\n</style>",
                "name": "NotificationItem.vue",
                "size": 2699,
                "type": "source"
              }
            ]
          },
          "elements": {
            "_files": [
              {
                "path": "../../src/modules/notifications/components/elements/NotificationBadge.vue",
                "relativePath": "modules/notifications/components/elements/NotificationBadge.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"notification-badge-container\">\n    <button \n      class=\"i-semi notification-button\"\n      @click=\"toggleNotifications\"\n      :aria-label=\"unreadCount > 0 ? `${unreadCount} unread notifications` : 'No unread notifications'\"\n    >\n      <IconBell class=\"notification-icon i-medium\" :fill=\"fill\"/>\n      <div  \n        v-if=\"unreadCount > 0\" \n        class=\"button-counter flex-center\"\n      >\n        <span>{{ unreadCount > 99 ? '99+' : unreadCount }}</span>\n      </div>\n    </button>\n    <div v-if=\"isOpen\" class=\"notifications-dropdown\">\n      <div class=\"notifications-header\">\n        <h3>Notifications</h3>\n        <button \n          v-if=\"unreadCount > 0\" \n          class=\"mark-all-read-btn\" \n          @click=\"markAllAsRead\"\n        >\n          Mark all read\n        </button>\n      </div>\n      <div v-if=\"loading\" class=\"notifications-loading\">\n        Loading...\n      </div>\n      <div v-else-if=\"notifications.length === 0\" class=\"notifications-empty\">\n        No notifications\n      </div>\n      <div v-else class=\"notifications-list\">\n        <notification-item \n          v-for=\"notification in recentNotifications\" \n          :key=\"notification._id\" \n          :notification=\"notification\"\n          @click=\"handleNotificationClick(notification)\"\n        />\n      </div>\n      <div class=\"notifications-footer\">\n        <router-link to=\"/notifications\" @click=\"isOpen = false\">\n          View all notifications\n        </router-link>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, onUnmounted, inject } from 'vue';\nimport { useRouter } from 'vue-router';\nimport NotificationItem from '../blocks/NotificationItem.vue';\nimport * as auth from '@martyrs/src/modules/auth/views/store/auth.js';\n\nimport IconBell from '@martyrs/src/modules/icons/entities/IconBell.vue';\n\nconst props = defineProps({\n  maxNotifications: {\n    type: Number,\n    default: 5\n  },\n  fill: {\n    type: String,\n    default: 'rgb(var(--white))'\n  }\n});\n\n// Get router and notification functionality\nconst router = useRouter();\nconst { notifications, unreadCount, loading, markAllAsRead, getNotifications } = inject('useNotifications')();\n\n// Local state\nconst isOpen = ref(false);\n\n// Computed properties\nconst recentNotifications = computed(() => {\n  return notifications.value\n    .slice()\n    .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))\n    .slice(0, props.maxNotifications);\n});\n\n// Methods\nconst toggleNotifications = () => {\n  isOpen.value = !isOpen.value;\n};\n\nconst handleNotificationClick = (notification) => {\n  isOpen.value = false;\n  \n  if (notification._id) {\n    // Handle in store\n    actions.handleNotificationAction({\n      notificationId: notification._id,\n      ...notification.metadata\n    });\n  }\n};\n\n// Close dropdown when clicking outside\nconst handleClickOutside = (event) => {\n  const container = document.querySelector('.notification-badge-container');\n  if (container && !container.contains(event.target)) {\n    isOpen.value = false;\n  }\n};\n\n// Lifecycle hooks\nonMounted(() => {\n  document.addEventListener('click', handleClickOutside);\n\n  // Load notifications when component mounts\n  const userId = auth.state.user._id;\n  if (userId) {\n    getNotifications(userId);\n  }\n});\n\nonUnmounted(() => {\n  document.removeEventListener('click', handleClickOutside);\n});\n</script>\n\n<style scoped>\n.notification-badge-container {\n  position: relative;\n  display: inline-block;\n}\n\n.notification-button {\n  background: none;\n  border: none;\n  cursor: pointer;\n  position: relative;\n  font-size: 1.2rem;\n}\n\n.notification-icon {\n  font-size: 1.4rem;\n}\n.button-counter {\n  position: absolute;\n  right: -8px;\n  bottom: -8px;\n  background: rgb(var(--fourth));\n  color: rgb(var(--white));\n  height: 16px;\n  border-radius: 16px;\n  width: 16px;\n  font-weight: 500;\n  text-align: center;\n  line-height: 16px;\n  font-size: 10px;\n}\n.notifications-dropdown {\n  position: absolute;\n  top: 100%;\n  right: 0;\n  width: 320px;\n  max-height: 400px;\n  overflow-y: auto;\n  background-color: white;\n  border-radius: 4px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  z-index: 1000;\n}\n\n.notifications-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 12px 16px;\n  border-bottom: 1px solid #eee;\n}\n\n.notifications-header h3 {\n  margin: 0;\n  font-size: 1rem;\n}\n\n.mark-all-read-btn {\n  background: none;\n  border: none;\n  color: #2196f3;\n  font-size: 0.8rem;\n  cursor: pointer;\n}\n\n.notifications-loading,\n.notifications-empty {\n  padding: 24px;\n  text-align: center;\n  color: #666;\n}\n\n.notifications-list {\n  max-height: 300px;\n  overflow-y: auto;\n}\n\n.notifications-footer {\n  padding: 12px 16px;\n  text-align: center;\n  border-top: 1px solid #eee;\n}\n\n.notifications-footer a {\n  color: #2196f3;\n  text-decoration: none;\n  font-size: 0.9rem;\n}\n</style>",
                "name": "NotificationBadge.vue",
                "size": 4864,
                "type": "source"
              }
            ]
          },
          "layouts": {
            "_files": [
              {
                "path": "../../src/modules/notifications/components/layouts/NotificationsLayout.vue",
                "relativePath": "modules/notifications/components/layouts/NotificationsLayout.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"notifications-layout\">\n    <div >\n    </div>  \n    \n    <div class=\"\">\n      <router-view></router-view>\n    </div>\n    \n    <div v-if=\"notificationManager && !isConnected\" class=\"connection-status\">\n      <div class=\"connection-warning\">\n        <span class=\"warning-icon\">⚠️</span>\n        <span class=\"warning-text\">\n          Notification service disconnected. \n          <button @click=\"reconnect\" class=\"reconnect-btn\">Reconnect</button>\n        </span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed, inject } from 'vue';\n\n// Get notification manager from store\nconst store = inject('store');\n\nconst notificationManager = computed(() => store.notificationManager || null);\n\nconst isConnected = computed(() => {\n  return notificationManager.value?.wsHandler?.isConnected || false;\n});\n\n// Methods\nconst reconnect = () => {\n  if (notificationManager.value) {\n    notificationManager.value.initialize();\n  }\n};\n</script>\n\n<style scoped>\n.notifications-layout {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n\n.tabs {\n  display: flex;\n  gap: 1rem;\n}\n\n.tab-button {\n  padding: 0.5rem 1rem;\n  border: none;\n  background: none;\n  cursor: pointer;\n  font-weight: 500;\n  border-bottom: 2px solid transparent;\n}\n\n.tab-button.active {\n  border-bottom: 2px solid var(--primary-color, #0066cc);\n  color: var(--primary-color, #0066cc);\n}\n\n</style>",
                "name": "NotificationsLayout.vue",
                "size": 1411,
                "type": "source"
              }
            ]
          },
          "pages": {
            "_files": [
              {
                "path": "../../src/modules/notifications/components/pages/Notifications.vue",
                "relativePath": "modules/notifications/components/pages/Notifications.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"notifications-page pd-small\">\n    <div class=\"tabs\">\n      <button \n        :class=\"{ active: activeTab === 'all' }\" \n        @click=\"activeTab = 'all'\"\n      >\n        All Notifications {{ unreadCount > 0 ? `(${unreadCount})` : '' }}\n      </button>\n      <button \n        :class=\"{ active: activeTab === 'preferences' }\" \n        @click=\"activeTab = 'preferences'\"\n      >\n        Notification Settings\n      </button>\n    </div>\n    \n    <div class=\"tab-content\">\n      <notifications-list v-if=\"activeTab === 'all'\" />\n      <notification-preferences v-else-if=\"activeTab === 'preferences'\" />\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, inject } from 'vue';\nimport { useRoute } from 'vue-router';\nimport NotificationsList from '../sections/NotificationsList.vue';\nimport NotificationPreferences from '../sections/NotificationPreferences.vue';\n\n// Get route and notification state\nconst route = useRoute();\nconst { unreadCount } = inject('useNotifications')();\n\n// Set initial active tab based on route query param or default to 'all'\nconst activeTab = ref(route.query.tab || 'all');\n</script>\n\n<style scoped>\n.notifications-page {\n}\n\n.tabs {\n  display: flex;\n  margin-bottom: 24px;\n  border-bottom: 1px solid #e0e0e0;\n}\n\n.tabs button {\n  background: none;\n  border: none;\n  padding: 12px 24px;\n  font-size: 1rem;\n  cursor: pointer;\n  position: relative;\n  color: #666;\n}\n\n.tabs button.active {\n  color: #2196F3;\n  font-weight: 500;\n}\n\n.tabs button.active::after {\n  content: '';\n  position: absolute;\n  bottom: -1px;\n  left: 0;\n  width: 100%;\n  height: 2px;\n  background-color: #2196F3;\n}\n\n.tab-content {\n  padding: 16px 0;\n}\n</style>",
                "name": "Notifications.vue",
                "size": 1682,
                "type": "source"
              }
            ]
          },
          "partials": {
            "_files": [
              {
                "path": "../../src/modules/notifications/components/partials/NotificationItem.vue",
                "relativePath": "modules/notifications/components/partials/NotificationItem.vue",
                "extension": ".vue",
                "content": "<template>\n  <div \n    class=\"notification-item\" \n    :class=\"{ 'unread': notification.status !== 'read' }\" \n    @click=\"handleClick\"\n  >\n    <div class=\"notification-icon\" :class=\"notification.type\">\n      {{ getIconForType(notification.type) }}\n    </div>\n    <div class=\"notification-content\">\n      <div class=\"notification-title\">{{ notification.title }}</div>\n      <div class=\"notification-body\">{{ notification.body }}</div>\n      <div class=\"notification-time\">{{ formatTime(notification.createdAt) }}</div>\n    </div>\n    <button \n      v-if=\"notification.status !== 'read'\" \n      class=\"mark-read-btn\" \n      @click.stop=\"markAsRead(notification._id)\"\n      aria-label=\"Mark as read\"\n    >\n      ✓\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { inject } from 'vue';\n\nconst props = defineProps({\n  notification: {\n    type: Object,\n    required: true\n  }\n});\n\nconst emit = defineEmits(['click']);\n\n// Get notification actions from provided store\nconst { markAsRead } = inject('useNotifications')();\n\n// Methods\nconst handleClick = () => {\n  if (props.notification.status !== 'read') {\n    markAsRead(props.notification._id);\n  }\n  emit('click', props.notification);\n};\n\n// Get emoji icon based on notification type\nconst getIconForType = (type) => {\n  switch (type) {\n    case 'success':\n      return '✅';\n    case 'warning':\n      return '⚠️';\n    case 'danger':\n    case 'error':\n      return '❌';\n    case 'info':\n      return 'ℹ️';\n    case 'message':\n      return '💬';\n    case 'order':\n      return '🛒';\n    case 'payment':\n      return '💰';\n    case 'update':\n      return '🔄';\n    default:\n      return '🔔';\n  }\n};\n\n// Format relative time without external libraries\nconst formatTime = (timestamp) => {\n  if (!timestamp) return '';\n  \n  const now = new Date();\n  const date = new Date(timestamp);\n  const diffSeconds = Math.floor((now - date) / 1000);\n  \n  // Format based on how long ago\n  if (diffSeconds < 60) {\n    return 'Just now';\n  } else if (diffSeconds < 3600) {\n    const minutes = Math.floor(diffSeconds / 60);\n    return `${minutes} ${minutes === 1 ? 'minute' : 'minutes'} ago`;\n  } else if (diffSeconds < 86400) {\n    const hours = Math.floor(diffSeconds / 3600);\n    return `${hours} ${hours === 1 ? 'hour' : 'hours'} ago`;\n  } else if (diffSeconds < 604800) {\n    const days = Math.floor(diffSeconds / 86400);\n    return `${days} ${days === 1 ? 'day' : 'days'} ago`;\n  } else {\n    // Format date string\n    return date.toLocaleDateString(undefined, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  }\n};\n</script>\n\n<style scoped>\n.notification-item {\n  display: flex;\n  padding: 12px 16px;\n  border-bottom: 1px solid #eee;\n  cursor: pointer;\n  position: relative;\n}\n\n.notification-item:hover {\n  background-color: #f9f9f9;\n}\n\n.notification-item.unread {\n  background-color: rgba(33, 150, 243, 0.05);\n}\n\n.notification-icon {\n  flex-shrink: 0;\n  width: 32px;\n  height: 32px;\n  margin-right: 12px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.1rem;\n}\n\n.notification-content {\n  flex: 1;\n}\n\n.notification-title {\n  font-weight: 600;\n  margin-bottom: 4px;\n}\n\n.notification-body {\n  font-size: 0.9rem;\n  color: #555;\n  margin-bottom: 4px;\n}\n\n.notification-time {\n  font-size: 0.75rem;\n  color: #888;\n}\n\n.mark-read-btn {\n  background: none;\n  border: none;\n  color: #2196f3;\n  cursor: pointer;\n  padding: 4px;\n  opacity: 0;\n  transition: opacity 0.2s;\n}\n\n.notification-item:hover .mark-read-btn {\n  opacity: 1;\n}\n</style>",
                "name": "NotificationItem.vue",
                "size": 3555,
                "type": "source"
              }
            ]
          },
          "sections": {
            "_files": [
              {
                "path": "../../src/modules/notifications/components/sections/NotificationPreferences.vue",
                "relativePath": "modules/notifications/components/sections/NotificationPreferences.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"notification-preferences\">\n    <h2>Notification Preferences</h2>\n    <p class=\"description\">Choose how you want to receive notifications</p>\n    \n    <div v-if=\"loading\" class=\"preferences-loading\">\n      <div class=\"loading-spinner\">🔄</div>\n      <p>Loading preferences...</p>\n    </div>\n    \n    <div v-else class=\"preferences-form\">\n      <div \n        v-for=\"(enabled, channelType) in preferences\" \n        :key=\"channelType\" \n        class=\"preference-item\"\n      >\n        <div class=\"preference-info\">\n          <div class=\"preference-icon\">{{ getChannelIcon(channelType) }}</div>\n          <div class=\"preference-details\">\n            <h3>{{ getChannelName(channelType) }}</h3>\n            <p>{{ getChannelDescription(channelType) }}</p>\n          </div>\n        </div>\n        <label class=\"toggle-switch\">\n          <input\n            type=\"checkbox\"\n            :checked=\"enabled\"\n            @change=\"updatePreference(channelType, $event.target.checked)\"\n          >\n          <span class=\"toggle-slider\"></span>\n        </label>\n      </div>\n      \n      <div class=\"form-actions\">\n        <button \n          class=\"save-btn\" \n          :disabled=\"!hasChanges || saving\" \n          @click=\"savePreferences\"\n        >\n          {{ saving ? 'Saving...' : 'Save Changes' }}\n        </button>\n        <button \n          v-if=\"hasChanges\" \n          class=\"cancel-btn\" \n          @click=\"resetChanges\"\n        >\n          Cancel\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, computed, onMounted, inject } from 'vue';\n\n// Get notification preferences functionality\nconst { \n  preferences: storePreferences,\n  loading,\n  getPreferences,\n  updatePreferences\n} = inject('useNotifications')();\n\n// Local reactive state for form\nconst preferences = reactive({...storePreferences.value});\nconst originalPreferences = ref({});\nconst saving = ref(false);\n\n// Computed properties\nconst hasChanges = computed(() => {\n  return Object.keys(preferences).some(key => \n    preferences[key] !== originalPreferences.value[key]\n  );\n});\n\n// Methods\nconst updatePreference = (channelType, value) => {\n  preferences[channelType] = value;\n};\n\nconst savePreferences = async () => {\n  try {\n    saving.value = true;\n    await updatePreferences(preferences);\n    originalPreferences.value = {...preferences};\n    saving.value = false;\n  } catch (error) {\n    console.error('Error saving preferences:', error);\n    saving.value = false;\n  }\n};\n\nconst resetChanges = () => {\n  Object.keys(preferences).forEach(key => {\n    preferences[key] = originalPreferences.value[key];\n  });\n};\n\nconst getChannelIcon = (channelType) => {\n  switch (channelType) {\n    case 'web': return '🖥️';\n    case 'push': return '📱';\n    case 'email': return '📧';\n    case 'sms': return '📱';\n    case 'telegram': return '📬';\n    case 'whatsapp': return '💬';\n    default: return '🔔';\n  }\n};\n\nconst getChannelName = (channelType) => {\n  switch (channelType) {\n    case 'web': return 'Web Notifications';\n    case 'push': return 'Mobile Push Notifications';\n    case 'email': return 'Email Notifications';\n    case 'sms': return 'SMS Notifications';\n    case 'telegram': return 'Telegram Messages';\n    case 'whatsapp': return 'WhatsApp Messages';\n    default: return channelType;\n  }\n};\n\nconst getChannelDescription = (channelType) => {\n  switch (channelType) {\n    case 'web': \n      return 'Real-time notifications in your browser';\n    case 'push': \n      return 'Notifications on your mobile device even when the app is closed';\n    case 'email': \n      return 'Receive notifications in your email inbox';\n    case 'sms': \n      return 'Get text messages for important notifications';\n    case 'telegram': \n      return 'Receive notifications via Telegram bot';\n    case 'whatsapp': \n      return 'Get notifications as WhatsApp messages';\n    default: \n      return '';\n  }\n};\n\n// Lifecycle\nonMounted(async () => {\n  await getPreferences();\n  \n  // Copy store preferences to local state\n  Object.keys(storePreferences.value).forEach(key => {\n    preferences[key] = storePreferences.value[key];\n  });\n  \n  // Create a deep copy of the original preferences\n  originalPreferences.value = {...preferences};\n});\n</script>\n\n<style scoped>\n.notification-preferences {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 24px;\n}\n\nh2 {\n  margin-top: 0;\n  margin-bottom: 8px;\n}\n\n.description {\n  color: #666;\n  margin-bottom: 24px;\n}\n\n.preferences-loading {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 48px 0;\n}\n\n.loading-spinner {\n  font-size: 2rem;\n  margin-bottom: 16px;\n  animation: spin 2s linear infinite;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n.preference-item {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 16px;\n  border-bottom: 1px solid #eee;\n}\n\n.preference-item:last-child {\n  border-bottom: none;\n}\n\n.preference-info {\n  display: flex;\n  align-items: center;\n  flex: 1;\n}\n\n.preference-icon {\n  font-size: 1.5rem;\n  margin-right: 16px;\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.preference-details h3 {\n  margin: 0 0 4px 0;\n  font-size: 1rem;\n}\n\n.preference-details p {\n  margin: 0;\n  color: #666;\n  font-size: 0.875rem;\n}\n\n/* Toggle switch styles */\n.toggle-switch {\n  position: relative;\n  display: inline-block;\n  width: 50px;\n  height: 24px;\n}\n\n.toggle-switch input {\n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n\n.toggle-slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #ccc;\n  transition: .4s;\n  border-radius: 24px;\n}\n\n.toggle-slider:before {\n  position: absolute;\n  content: \"\";\n  height: 16px;\n  width: 16px;\n  left: 4px;\n  bottom: 4px;\n  background-color: white;\n  transition: .4s;\n  border-radius: 50%;\n}\n\ninput:checked + .toggle-slider {\n  background-color: #2196F3;\n}\n\ninput:checked + .toggle-slider:before {\n  transform: translateX(26px);\n}\n\n.form-actions {\n  margin-top: 24px;\n  display: flex;\n  justify-content: flex-end;\n  gap: 16px;\n}\n\n.save-btn, .cancel-btn {\n  padding: 8px 16px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.save-btn {\n  background-color: #2196F3;\n  border: none;\n  color: white;\n}\n\n.save-btn:disabled {\n  background-color: #ccc;\n  cursor: not-allowed;\n}\n\n.cancel-btn {\n  background-color: white;\n  border: 1px solid #ccc;\n}\n</style>",
                "name": "NotificationPreferences.vue",
                "size": 6496,
                "type": "source"
              },
              {
                "path": "../../src/modules/notifications/components/sections/NotificationsList.vue",
                "relativePath": "modules/notifications/components/sections/NotificationsList.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"notifications-list-container\">\n    <div v-if=\"!MOBILE_APP\" class=\"notifications-header\">\n      <h2>Notifications</h2>\n   <!--    <div class=\"notifications-controls\">\n        <div class=\"notifications-filter\">\n          <label for=\"filter-type\">Filter: </label>\n          <select id=\"filter-type\" v-model=\"filterType\">\n            <option value=\"all\">All</option>\n            <option value=\"unread\">Unread</option>\n            <option value=\"read\">Read</option>\n            <option value=\"info\">Info</option>\n            <option value=\"success\">Success</option>\n            <option value=\"warning\">Warning</option>\n            <option value=\"error\">Error</option>\n          </select>\n        </div>\n        <button \n          v-if=\"unreadCount > 0\" \n          class=\"mark-all-read-btn\"\n          @click=\"markAllAsRead\"\n        >\n          Mark all as read\n        </button>\n      </div> -->\n    </div>\n    \n    <div v-if=\"loading\" class=\"notifications-loading\">\n      <div class=\"loading-spinner\">🔄</div>\n      <p>Loading notifications...</p>\n    </div>\n    \n    <div v-else-if=\"filteredNotifications.length === 0\" class=\"notifications-empty\">\n      <p>{{ emptyMessage }}</p>\n    </div>\n    \n    <div v-else class=\"notifications-items\">\n      <notification-item \n        v-for=\"notification in filteredNotifications\" \n        :key=\"notification._id\" \n        :notification=\"notification\"\n        @click=\"handleNotificationClick(notification)\"\n      />\n    </div>\n    \n    <div v-if=\"!loading && notifications.length > 0\" class=\"notifications-footer\">\n      <button v-if=\"lastSync\" class=\"refresh-btn\" @click=\"refreshNotifications\">\n        🔄 Last updated: {{ formatTime(lastSync) }}\n      </button>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, inject } from 'vue';\nimport { useRouter } from 'vue-router';\nimport NotificationItem from '../blocks/NotificationItem.vue';\nimport * as auth from '@martyrs/src/modules/auth/views/store/auth.js';\n\n// Get router and notification functionality\nconst router = useRouter();\nconst { \n  notifications, \n  unreadCount, \n  loading, \n  lastSync,\n  markAllAsRead, \n  getNotifications,\n  handleNotificationAction\n} = inject('useNotifications')();\n\n// Local state\nconst filterType = ref('all');\n\n// Computed properties\nconst filteredNotifications = computed(() => {\n  let filtered = [...notifications.value];\n  \n  // Apply filters\n  if (filterType.value === 'unread') {\n    filtered = filtered.filter(n => n.status !== 'read');\n  } else if (filterType.value === 'read') {\n    filtered = filtered.filter(n => n.status === 'read');\n  } else if (filterType.value !== 'all') {\n    // Filter by notification type\n    filtered = filtered.filter(n => n.type === filterType.value);\n  }\n  \n  // Sort by creation date (newest first)\n  return filtered.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n});\n\nconst emptyMessage = computed(() => {\n  if (notifications.value.length === 0) {\n    return 'You have no notifications';\n  }\n  \n  switch (filterType.value) {\n    case 'unread':\n      return 'You have no unread notifications';\n    case 'read':\n      return 'You have no read notifications';\n    default:\n      return `You have no ${filterType.value} notifications`;\n  }\n});\n\n// Methods\nconst handleNotificationClick = (notification) => {\n  if (notification._id) {\n    handleNotificationAction({\n      notificationId: notification._id,\n      ...notification.metadata\n    });\n  }\n};\n\nconst refreshNotifications = () => {\n  const userId = auth.state.user._id;\n  if (userId) {\n    getNotifications(userId);\n  }\n};\n\n// Format relative time without external libraries\nconst formatTime = (timestamp) => {\n  if (!timestamp) return '';\n  \n  const now = new Date();\n  const date = new Date(timestamp);\n  const diffSeconds = Math.floor((now - date) / 1000);\n  \n  // Format based on how long ago\n  if (diffSeconds < 60) {\n    return 'Just now';\n  } else if (diffSeconds < 3600) {\n    const minutes = Math.floor(diffSeconds / 60);\n    return `${minutes} ${minutes === 1 ? 'minute' : 'minutes'} ago`;\n  } else if (diffSeconds < 86400) {\n    const hours = Math.floor(diffSeconds / 3600);\n    return `${hours} ${hours === 1 ? 'hour' : 'hours'} ago`;\n  } else {\n    // Format date string\n    return date.toLocaleDateString(undefined, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  }\n};\n\n// Lifecycle\nonMounted(() => {\n  const userId = auth.state.user._id;\n  if (userId && notifications.value.length === 0) {\n    getNotifications(userId);\n  }\n});\n</script>\n\n<style scoped>\n.notifications-list-container {\n  width: 100%;\n  max-width: 800px;\n  margin: 0 auto;\n}\n\n.notifications-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.notifications-controls {\n  display: flex;\n  align-items: center;\n  gap: 16px;\n}\n\n.notifications-filter select {\n  padding: 6px 12px;\n  border-radius: 4px;\n  border: 1px solid #ddd;\n}\n\n.mark-all-read-btn {\n  background-color: #2196f3;\n  color: white;\n  border: none;\n  padding: 6px 12px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.notifications-loading,\n.notifications-empty {\n  padding: 40px 0;\n  text-align: center;\n  color: #666;\n}\n\n.loading-spinner {\n  font-size: 2rem;\n  margin-bottom: 10px;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  from { transform: rotate(0deg); }\n  to { transform: rotate(360deg); }\n}\n\n.notifications-items {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.notifications-footer {\n  margin-top: 20px;\n  text-align: center;\n}\n\n.refresh-btn {\n  background: none;\n  border: none;\n  color: #666;\n  cursor: pointer;\n  padding: 6px 12px;\n}\n\n.refresh-btn:hover {\n  color: #2196f3;\n}\n</style>",
                "name": "NotificationsList.vue",
                "size": 5790,
                "type": "source"
              }
            ]
          }
        }
      },
      "orders": {
        "controllers": {
          "_files": [
            {
              "path": "../../src/modules/orders/controllers/applications.controller.js",
              "relativePath": "modules/orders/controllers/applications.controller.js",
              "extension": ".js",
              "content": "import mailing from '@martyrs/src/modules/globals/controllers/utils/mailing.js';\nimport axios from 'axios';\n// --------------------------------------------------\n// UTILS\n// --------------------------------------------------\nconst { sendChatMessageTelegram } = mailing;\n// --------------------------------------------------\n// METHODS\n// --------------------------------------------------\nconst middlewareFactory = db => {\n  const Application = db.application;\n  const read = async (req, res) => {\n    try {\n      const applications = await Application.find({});\n      if (!applications) {\n        return res.status(404).send({ message: 'Applications not found.' });\n      }\n      res.status(200).send(applications);\n    } catch (err) {\n      res.status(500).send({ message: err });\n    }\n  };\n  const create = async (req, res) => {\n    try {\n      const application = await Application.create(req.body);\n      if (!application) {\n        return res.status(404).send({ message: 'Something wrong when creating application.' });\n      }\n      try {\n        const messageSent = await sendChatMessageTelegram(process.env.TELEGRAM_BOT_USERS.split(','), `New application from ${req.body}`);\n      } catch (err) {\n        console.log(err);\n      }\n      res.status(200).send(application);\n    } catch (err) {\n      res.status(500).send({ message: err });\n    }\n  };\n  const update = async (req, res) => {\n    try {\n      const application = await Application.findOneAndUpdate({ _id: req.params._id }, req.body, {\n        new: true,\n      });\n      if (!application) {\n        return res.status(404).send({ message: 'Application not found.' });\n      }\n      res.status(200).send(application);\n    } catch (err) {\n      res.status(500).send({ message: err });\n    }\n  };\n  const deleteMethod = async (req, res) => {\n    try {\n      const application = await Application.findOneAndDelete({ _id: req.params._id });\n      if (!application) {\n        return res.status(404).send({ message: 'Something wrong when deleting application.' });\n      }\n      res.status(200).send(application);\n    } catch (err) {\n      res.status(500).send({ message: err });\n    }\n  };\n  const get = async (req, res) => {\n    try {\n      const application = await Application.findOne({ url: req.params.url });\n      if (!application) {\n        return res.status(404).send({ message: 'Application not found.' });\n      }\n      res.status(200).send(application);\n    } catch (err) {\n      res.status(500).send({ message: err });\n    }\n  };\n  const handleTelegramWebhook = async (req, res) => {\n    const update = req.body;\n    // Проверка, является ли это обратным вызовом от inline клавиатуры\n    if (update.callback_query) {\n      const callbackQuery = update.callback_query;\n      const callbackData = callbackQuery.data;\n      // Разбор callback_data\n      const [action, applicationId] = callbackData.split('_');\n      try {\n        // Выполнение действий в зависимости от callback_data\n        let updatedApplication = null;\n        switch (action) {\n          case 'confirm':\n            updatedApplication = await Application.findOneAndUpdate({ _id: applicationId }, { status: 'confirmed' }, { new: true });\n            break;\n          case 'lost':\n            updatedApplication = await Application.findOneAndUpdate({ _id: applicationId }, { status: 'lost' }, { new: true });\n            break;\n          case 'delete':\n            updatedApplication = await Application.findOneAndDelete({ _id: applicationId });\n            break;\n        }\n        if (!updatedApplication) {\n          console.log('Application not found or not updated.');\n        } else {\n          console.log('Application updated:', updatedApplication);\n        }\n      } catch (err) {\n        console.log('Error updating application:', err);\n      }\n      // Ответ на callback query, чтобы убрать часы ожидания на кнопке\n      const queryId = callbackQuery.id;\n      const telegramToken = '6206215053:AAHYCYzpFZF9jDZC-TC03NSff8oo2ExqsSU';\n      axios.post(`https://api.telegram.org/bot${telegramToken}/answerCallbackQuery`, {\n        callback_query_id: queryId,\n      });\n    }\n    res.sendStatus(200);\n  };\n  return {\n    read,\n    create,\n    update,\n    delete: deleteMethod,\n    handleTelegramWebhook,\n    get,\n  };\n};\nexport default middlewareFactory;\n",
              "name": "applications.controller.js",
              "size": 4304,
              "type": "source"
            },
            {
              "path": "../../src/modules/orders/controllers/orders.controller.js",
              "relativePath": "modules/orders/controllers/orders.controller.js",
              "extension": ".js",
              "content": "import mailing from '@martyrs/src/modules/globals/controllers/utils/mailing.js';\nimport queryProcessorGlobals from '@martyrs/src/modules/globals/controllers/utils/queryProcessor.js';\nconst { sendChatMessageTelegram } = mailing;\nfunction formatPositions(positions) {\n  return positions.map(pos => `🔹 ${pos.name} - Price: $${pos.price}, Quantity: ${pos.quantity}`).join('\\n');\n}\n// Функция для форматирования сообщения об ордере\nfunction formatOrderMessage(order) {\n  return `\n    🆕 New Order Received!\n    👤 Customer: ${order.customer?.name} (${order.customer?.phone?.number ? order.customer?.phone?.number : 'No phone'})\n    💬 Messenger: ${order.customer?.messenger ? order.customer?.messenger?.type + ' ' + order.customer?.messenger?.value : 'None'}\n    🏢 Organization: ${order.organization}\n    📦 Positions:\\n${formatPositions(order.positions)}\n    📝 Comment: ${order.comment ? order.comment : 'No comment'}\n    💳 Payment: ${order.payment?.type}\n    🚚 Delivery: ${order.delivery?.type} to ${order.delivery?.address}\n    📌 Status: ${order.status}\n    🧑 Agent: ${order.referralCode}\n  `;\n}\nasync function findOrCreateCustomer(Customer, customerInfo, orderOwner, orderCreator) {\n  let searchCriteria = {};\n  if (customerInfo.phone) {\n    searchCriteria.phone = customerInfo.phone;\n  }\n  if (customerInfo.email) {\n    searchCriteria.email = customerInfo.email;\n  }\n  let customer = null;\n  // Проверяем, есть ли критерии для поиска\n  if (Object.keys(searchCriteria).length > 0) {\n    customer = await Customer.findOne({ $or: [searchCriteria] });\n  }\n  if (!customer) {\n    // Handle the case when creator.target is null\n    let creatorType = customerInfo.creator?.type || orderCreator.type;\n    let creatorTarget = customerInfo.creator?.target || orderCreator.target;\n    // If creator target is still null, use the organization as creator\n    if (!creatorTarget) {\n      creatorType = orderOwner.type;\n      creatorTarget = orderOwner.target;\n    }\n    // Create new customer with proper creator fields\n    const newCustomerData = {\n      ...customerInfo,\n      // Ensure we're not passing any null _id that might override MongoDB's auto-generation\n      _id: undefined, // Let MongoDB generate this\n      owner: orderOwner,\n      creator: {\n        type: creatorType,\n        target: creatorTarget,\n      },\n      identity: {\n        type: customerInfo.identity?.type || creatorType,\n        target: customerInfo.identity?.target || creatorTarget,\n      },\n    };\n    try {\n      customer = await Customer.create(newCustomerData);\n      // Verify the customer was created with an _id\n      if (!customer || !customer._id) {\n        console.error('Customer creation failed to generate _id:', customer);\n        throw new Error('Customer creation did not generate a valid _id');\n      }\n    } catch (err) {\n      console.error('Error creating customer:', err);\n      throw err;\n    }\n  }\n  return customer;\n}\nasync function sendOrderMessage(orderData) {\n  try {\n    const formattedMessage = formatOrderMessage(orderData);\n    await sendChatMessageTelegram(process.env.TELEGRAM_BOT_USERS.split(','), formattedMessage);\n  } catch (err) {\n    console.error(err);\n  }\n}\nconst controllerFactory = db => {\n  const Order = db.order;\n  const Customer = db.customer;\n  const Leftover = db.leftover;\n  // Создание заказа\n  const create = async (req, res) => {\n    const orderData = req.body;\n    const userId = req.userId || req.body.creator?.target;\n    orderData.status = 'created';\n    orderData.status_history = orderData.status_history || [];\n    orderData.status_history.push({\n      status: orderData.status,\n      timestamp: new Date(),\n      comment: '',\n    });\n    console.log('order.data is,', orderData);\n    // Start a database transaction\n    const session = await db.mongoose.startSession();\n    session.startTransaction();\n    try {\n      // In your create controller function\n      if (!orderData.customer.target) {\n        const customer = await findOrCreateCustomer(Customer, orderData.customer, orderData.owner, orderData.creator);\n        console.log('customer is', customer);\n        // Make sure we have a valid customer ID\n        if (!customer || !customer._id) {\n          throw new Error('Failed to create or find a valid customer');\n        }\n        // Set the customer target properly\n        orderData.customer = {\n          type: 'customer',\n          target: customer._id,\n        };\n        // If creator target is also missing, use the customer\n        if (!orderData.creator || !orderData.creator.target) {\n          orderData.creator = {\n            type: 'customer',\n            target: customer._id,\n          };\n        }\n      }\n      console.log('Order data after customer processing:', orderData);\n      // Now create the order with proper references\n      const order = await Order.create([orderData], { session });\n      const createdOrder = order[0];\n      // Process each position individually\n      if (orderData.positions && orderData.positions.length > 0) {\n        for (const position of orderData.positions) {\n          try {\n            switch (position.listing) {\n              case 'rent':\n                // Create rent entry\n                const rentData = {\n                  order: createdOrder._id,\n                  product: position._id,\n                  quantity: position.quantity,\n                  startDate: position.date.start,\n                  endDate: position.date.end,\n                  status: 'pending', // Initial status for rent\n                  creator: orderData.creator,\n                  owner: orderData.owner,\n                  comment: `Created from order ${createdOrder._id}`,\n                };\n                console.log(rentData);\n                // Call rent service directly\n                const rentResponse = await fetch(`${process.env.API_URL || ''}/api/rents`, {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json',\n                    'X-Service-Key': process.env.SERVICE_KEY,\n                  },\n                  body: JSON.stringify(rentData),\n                });\n                if (!rentResponse.ok) {\n                  const errorData = await rentResponse.json();\n                  throw new Error(`Failed to create rent: ${JSON.stringify(errorData)}`);\n                }\n                break;\n              case 'sale':\n                // Placeholder for leftovers creation\n                // Will implement once the service is ready\n                console.log(`Sale position for product ${position.product} - leftover creation will be implemented later`);\n                break;\n              default:\n                console.warn(`Unknown listing type: ${position.listing} for position with product ${position.product}`);\n            }\n          } catch (positionError) {\n            console.log(positionError);\n            // Log the specific position error but continue processing other positions\n            console.error(`Error processing position for product ${position.product}:`, positionError);\n            // Re-throw to abort transaction if needed\n            throw new Error(`Failed to process position for product ${position.product}: ${positionError.message}`);\n          }\n        }\n      }\n      // Commit the transaction\n      await session.commitTransaction();\n      // Send notification\n      sendOrderMessage(orderData).catch(console.error);\n      // Return the created order\n      res.status(201).send(createdOrder);\n    } catch (err) {\n      // Abort transaction on error\n      await session.abortTransaction();\n      console.error(err);\n      res.status(500).send({\n        errorCode: 'CREATE_ORDER_FAILED',\n        message: 'Error occurred while creating the order.',\n        error: err.message,\n      });\n    } finally {\n      // End session\n      session.endSession();\n    }\n  };\n  const read = async (req, res) => {\n    console.log(req.query);\n    let stages = [\n      ...queryProcessorGlobals.getBasicOptions(req.query),\n      ...queryProcessorGlobals.getSearchOptions(req.query.search, {\n        fields: ['positions.name'],\n      }),\n      // For spots\n      {\n        $lookup: {\n          from: 'spots',\n          localField: 'delivery.spot',\n          foreignField: '_id',\n          as: 'delivery.spot',\n        },\n      },\n      // For customer\n      {\n        $lookup: {\n          from: 'customers',\n          localField: 'customer.target',\n          foreignField: '_id',\n          as: 'customerTarget',\n        },\n      },\n      {\n        $addFields: {\n          'customer.target': { $arrayElemAt: ['$customerTarget', 0] },\n        },\n      },\n      // For creator\n      queryProcessorGlobals.getCreatorUserLookupStage(),\n      queryProcessorGlobals.getCreatorOrganizationLookupStage(),\n      queryProcessorGlobals.getCreatorCustomerLookupStage(),\n      // For owner\n      queryProcessorGlobals.getOwnerUserLookupStage(),\n      queryProcessorGlobals.getOwnerOrganizationLookupStage(),\n      queryProcessorGlobals.getAddFieldsCreatorOwnerStage(),\n      // Pagination\n      ...queryProcessorGlobals.getSortingOptions(req.query.sortParam, req.query.sortOrder),\n      ...queryProcessorGlobals.getPaginationOptions(req.query.skip, req.query.limit),\n    ];\n    try {\n      const orders = await Order.aggregate(stages);\n      if (!orders) {\n        return res.status(404).send({ errorCode: 'ORDER_NOT_FOUND', message: 'Orders not found.' });\n      }\n      res.status(200).send(orders);\n    } catch (err) {\n      console.log(err);\n      res.status(500).send({\n        errorCode: 'GET_ORDERS_FAILED',\n        message: 'Error occurred while fetching orders.',\n        error: err,\n      });\n    }\n  };\n  // Обновление заказа\n  // Update the order controller's update method to send notifications on status change\n  const update = async (req, res) => {\n    try {\n      const order = await Order.findOne({ _id: req.body._id });\n      if (!order) {\n        return res.status(404).send({ errorCode: 'ORDER_NOT_FOUND', message: 'Order not found.' });\n      }\n      // Check if status is changing\n      const statusChanged = req.body.status && req.body.status !== order.status;\n      const oldStatus = order.status;\n      if (statusChanged) {\n        order.status = req.body.status; // Update current order status\n        // Add entry to status history\n        order.status_history.push({\n          status: req.body.status,\n          timestamp: new Date(),\n          comment: '',\n        });\n      }\n      // if (req.body.status === 'confirmed') {\n      //   try {\n      //     const leftover = await Leftover.create({\n      //       organization: order.organization,\n      //       type: 'stock-out',\n      //       order: order._id,\n      //       comment: `Stock-out for order ${order._id}`,\n      //       positions: order.positions,\n      //       creator: order.creator,\n      //       owner: order.owner\n      //     });\n      //     console.log('Leftover created:', leftover);\n      //   } catch (err) {\n      //     console.error('Error creating Leftover:', err);\n      //   }\n      // }\n      // Save the order first\n      if (req.body.payment?.type && req.body.payment.type !== order.payment?.type) {\n        order.payment.type = req.body.payment.type;\n      }\n      // Update payment.status if changed\n      if (req.body.payment?.status && req.body.payment.status !== order.payment?.status) {\n        order.payment.status = req.body.payment.status;\n      }\n      await order.save();\n      // Send notification if status changed\n      if (statusChanged) {\n        try {\n          // Prepare notification data\n          const notificationData = {\n            title: `Order Status Updated`,\n            body: `Order #${order._id} status changed from ${oldStatus} to ${order.status}`,\n            type: 'order_status',\n            metadata: {\n              orderId: order._id,\n              oldStatus: oldStatus,\n              newStatus: order.status,\n              positions: order.positions,\n            },\n            userId: order.creator.target, // Assuming creator.target holds the user ID\n          };\n          console.log('notifiocatio data', JSON.stringify(notificationData));\n          // Send notification using the notification service\n          console.log('notification api is', `${process.env.API_URL || ''}/api/notifications`);\n          const notificationResponse = await fetch(`${process.env.API_URL || ''}/api/notifications`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-Service-Key': process.env.SERVICE_KEY,\n            },\n            body: JSON.stringify(notificationData),\n          });\n          if (!notificationResponse.ok) {\n            const errorData = await notificationResponse.json();\n            console.error(`Failed to create notification: ${JSON.stringify(errorData)}`);\n            // Continue execution, don't fail the request if notification fails\n          }\n        } catch (notificationError) {\n          console.error('Error sending notification:', notificationError);\n          // Continue execution, don't fail the request if notification fails\n        }\n      }\n      res.status(200).send(order);\n    } catch (err) {\n      res.status(500).send({\n        errorCode: 'UPDATE_ORDER_FAILED',\n        message: 'Error occurred while updating the order.',\n        error: err,\n      });\n    }\n  };\n  // Изменение статуса оплаты\n  const changePaymentStatus = async (req, res) => {\n    try {\n      const order = await Order.findOneAndUpdate({ _id: req.params._id }, { status: 'closed', payment: { type: 'Cash', status: 'paid' } }, { new: true }).exec();\n      if (!order) {\n        return res.status(404).send({\n          errorCode: 'PAYMENT_STATUS_CHANGE_FAILED',\n          message: 'Failed to change the payment status.',\n        });\n      }\n      res.status(200).send(order);\n    } catch (err) {\n      res.status(500).send({\n        errorCode: 'CHANGE_PAYMENT_STATUS_FAILED',\n        message: 'Error occurred while changing the payment status.',\n        error: err,\n      });\n    }\n  };\n  // Удаление заказа\n  const deleteOrder = async (req, res) => {\n    try {\n      const order = await Order.findOneAndDelete({ _id: req.params._id }).exec();\n      if (!order) {\n        return res.status(404).send({ errorCode: 'ORDER_DELETE_FAILED', message: 'Failed to delete the order.' });\n      }\n      res.status(200).send(order);\n    } catch (err) {\n      res.status(500).send({\n        errorCode: 'DELETE_ORDER_FAILED',\n        message: 'Error occurred while deleting the order.',\n        error: err,\n      });\n    }\n  };\n  return {\n    create,\n    read,\n    update,\n    changePaymentStatus,\n    deleteOrder,\n  };\n};\nexport default controllerFactory;\n",
              "name": "orders.controller.js",
              "size": 14761,
              "type": "source"
            },
            {
              "path": "../../src/modules/orders/controllers/testimonials.controller.js",
              "relativePath": "modules/orders/controllers/testimonials.controller.js",
              "extension": ".js",
              "content": "import multer from 'multer';\nimport path from 'path';\nimport db from '../models.js';\nconst Testimonial = db.testimonial;\n// Configure multer storage\nconst avatarsPath = path.join(__dirname, '../../public/avatars');\nconst storage = multer.diskStorage({\n  destination: function (req, file, cb) {\n    cb(null, avatarsPath);\n  },\n  filename: function (req, file, cb) {\n    // Generate a 6-digit random number\n    const uniqueSuffix = Math.floor(100000 + Math.random() * 900000);\n    cb(null, file.fieldname + '-' + uniqueSuffix + path.extname(file.originalname));\n  },\n});\nconst upload = multer({ storage: storage });\nexport const read = (req, res) => {\n  Testimonial.find()\n    .then(testimonials => {\n      if (!testimonials) {\n        return res.status(404).send({ message: 'Testimonial not found.' });\n      }\n      res.status(200).send(testimonials);\n    })\n    .catch(err => {\n      if (err) {\n        return res.status(500).send({ message: err });\n      }\n    });\n};\nexport const create = [\n  upload.single('avatar'),\n  async (req, res) => {\n    try {\n      const newTestimonial = {\n        avatar: req.file.filename,\n        rating: req.body.rating,\n        name: req.body.name,\n        position: req.body.position,\n        description: req.body.description,\n      };\n      const testimonial = await Testimonial.create(newTestimonial);\n      if (!testimonial) {\n        return res.status(404).send({ message: 'Testimonial is not created.' });\n      }\n      res.status(200).send(testimonial);\n    } catch (error) {\n      console.log(error);\n      res.status(500).send({ message: error });\n    }\n  },\n];\nexport const update = (req, res) => {\n  Testimonial.findOneAndUpdate({ _id: req.body._id }, req.body, { new: true })\n    .exec()\n    .then(testimonial => {\n      if (!testimonial) {\n        return res.status(404).send({ message: 'Something went wrong when updating testimonial.' });\n      }\n      res.status(200).send(testimonial);\n    })\n    .catch(err => {\n      console.log(err);\n      return res.status(500).send({ message: err });\n    });\n};\nconst delete$0 = (req, res) => {\n  Testimonial.findOneAndDelete({ _id: req.params._id })\n    .exec()\n    .then(testimonial => {\n      if (!testimonial) {\n        return res.status(404).send({ message: 'Testimonial is not deleted.' });\n      }\n      res.status(200).send(testimonial);\n    })\n    .catch(err => {\n      return res.status(500).send({ message: err });\n    });\n};\nexport { delete$0 as delete };\n",
              "name": "testimonials.controller.js",
              "size": 2459,
              "type": "source"
            }
          ]
        },
        "models": {
          "_files": [
            {
              "path": "../../src/modules/orders/models/application.model.js",
              "relativePath": "modules/orders/models/application.model.js",
              "extension": ".js",
              "content": "export default db => {\n  const ApplicationSchema = new db.mongoose.Schema(\n    {\n      status: {\n        type: String,\n        default: 'created',\n      },\n      type: {\n        type: String,\n        default: 'newsletter',\n      },\n      contacts: {\n        name: {\n          type: String,\n        },\n        phone: {\n          type: String,\n        },\n        email: {\n          type: String,\n        },\n      },\n    },\n    {\n      timestamps: { currentTime: () => Date.now() },\n    }\n  );\n  const Application = db.mongoose.model('Application', ApplicationSchema);\n  return Application;\n};\n",
              "name": "application.model.js",
              "size": 591,
              "type": "source"
            },
            {
              "path": "../../src/modules/orders/models/customer.model.js",
              "relativePath": "modules/orders/models/customer.model.js",
              "extension": ".js",
              "content": "import applyCredentialsSchema from '@martyrs/src/modules/globals/models/schemas/credentials.schema.js';\nimport applyOwnershipSchema from '@martyrs/src/modules/globals/models/schemas/ownership.schema.js';\nimport applyProfileSchema from '@martyrs/src/modules/globals/models/schemas/profile.schema.js';\nexport default db => {\n  const CustomerSchema = new db.mongoose.Schema(\n    {\n      identity: {\n        type: {\n          type: String,\n          enum: ['Visitor', 'User', 'Organization'],\n          required: true,\n          // set: toPascalCase\n        },\n        target: {\n          type: db.mongoose.Schema.Types.ObjectId,\n          refPath: 'target.type',\n        },\n      },\n      referral: {\n        code: {\n          type: String,\n        },\n      },\n    },\n    {\n      timestamps: {\n        currentTime: () => Date.now(),\n      },\n    }\n  );\n  applyCredentialsSchema(CustomerSchema, db);\n  applyProfileSchema(CustomerSchema, db);\n  applyOwnershipSchema(CustomerSchema, db);\n  CustomerSchema.index(\n    {\n      owner: 1,\n      email: 1,\n    },\n    {\n      unique: true,\n      partialFilterExpression: {\n        email: { $exists: true, $ne: '' },\n      },\n    }\n  );\n  CustomerSchema.index(\n    {\n      owner: 1,\n      phone: 1,\n    },\n    {\n      unique: true,\n      partialFilterExpression: {\n        phone: { $exists: true, $ne: '' },\n      },\n    }\n  );\n  CustomerSchema.index(\n    {\n      owner: 1,\n      identity: 1,\n    },\n    {\n      unique: true,\n      partialFilterExpression: {\n        identity: { $exists: true, $ne: '' },\n      },\n    }\n  );\n  const Customer = db.mongoose.model('Customer', CustomerSchema);\n  return Customer;\n};\n\n",
              "name": "customer.model.js",
              "size": 1650,
              "type": "source"
            },
            {
              "path": "../../src/modules/orders/models/order.model.js",
              "relativePath": "modules/orders/models/order.model.js",
              "extension": ".js",
              "content": "import applyOwnershipSchema from '@martyrs/src/modules/globals/models/schemas/ownership.schema.js';\nexport default db => {\n  const OrderSchema = new db.mongoose.Schema(\n    {\n      customer: {\n        type: {\n          type: String,\n          required: true,\n        },\n        target: {\n          type: db.mongoose.Schema.Types.ObjectId,\n          refPath: 'customer.type',\n          required: true,\n        },\n      },\n      positions: {\n        type: Array,\n      },\n      referralCode: {\n        type: String,\n      },\n      status: {\n        type: String,\n      },\n      deadline: {\n        type: Date,\n        default: () => new Date(Date.now() + 30 * 60000), // Добавляет 30 минут к текущему времени\n      },\n      status_history: [\n        {\n          status: {\n            type: String,\n            trim: true,\n          },\n          user: {\n            type: db.mongoose.Schema.Types.ObjectId,\n            ref: 'User',\n          },\n          timestamp: {\n            type: Date,\n            default: Date.now,\n          },\n          comment: {\n            type: String,\n            trim: true,\n          },\n        },\n      ],\n      comment: {\n        type: String,\n        trim: true,\n      },\n      payment: {\n        type: {\n          type: String,\n          trim: true,\n          default: 'cash',\n        },\n        status: {\n          type: String,\n          trim: true,\n          default: 'unpaid',\n        },\n      },\n      delivery: {\n        type: {\n          type: String,\n          trim: true,\n        },\n        address: {\n          type: String,\n          trim: true,\n        },\n        spot: {\n          type: db.mongoose.Schema.Types.ObjectId,\n          ref: 'User',\n        },\n        status: {\n          type: String,\n          trim: true,\n        },\n      },\n    },\n    {\n      timestamps: {\n        currentTime: () => Date.now(),\n      },\n    }\n  );\n  applyOwnershipSchema(OrderSchema, db);\n  const Order = db.mongoose.model('Order', OrderSchema);\n  return Order;\n};\n",
              "name": "order.model.js",
              "size": 1996,
              "type": "source"
            },
            {
              "path": "../../src/modules/orders/models/testimonial.model.js",
              "relativePath": "modules/orders/models/testimonial.model.js",
              "extension": ".js",
              "content": "export default db => {\n  const testimonialSchema = new db.mongoose.Schema({\n    source: {\n      type: String,\n    },\n    author: {\n      type: db.mongoose.Schema.Types.ObjectId,\n      ref: 'User',\n      required: true,\n    },\n    rating: {\n      type: String,\n      required: true,\n    },\n    description: {\n      type: String,\n      required: true,\n    },\n  });\n  const Testimonial = db.mongoose.model('Testimonial', testimonialSchema);\n  return Testimonial;\n};\n",
              "name": "testimonial.model.js",
              "size": 463,
              "type": "source"
            }
          ]
        },
        "_files": [
          {
            "path": "../../src/modules/orders/orders.client.js",
            "relativePath": "modules/orders/orders.client.js",
            "extension": ".js",
            "content": "// Store\nimport * as storeOrders from './store/orders.js';\nimport * as storeShopcart from './store/shopcart.js';\nimport * as storeTestimonials from './store/testimonials.js';\n// Router\nimport addRoutes from '@martyrs/src/modules/globals/views/router/addRoutes.js';\nimport routerOrders from './router/orders.router.js';\n// Views\nimport OrderCreate from './components/pages/OrderCreate.vue';\nimport OrderCreateBackoffice from './components/pages/OrderCreateBackoffice.vue';\nimport Orders from './components/pages/Orders.vue';\n// import Favorites from './components/pages/Favorites.vue';\n// Importing blocks components\nimport CardOrder from './components/blocks/CardOrder.vue';\nimport CardOrderItem from './components/blocks/CardOrderItem.vue';\nimport CardOrderUser from './components/blocks/CardOrderUser.vue';\nimport StatusHistory from './components/blocks/StatusHistory.vue';\n// Importing sections components\nimport AskToLogin from './components/sections/AskToLogin.vue';\nimport EmptyState from './components/sections/EmptyState.vue';\nimport FormCustomerDetails from './components/sections/FormCustomerDetails.vue';\nimport FormDelivery from './components/sections/FormDelivery.vue';\nimport FormPayment from './components/sections/FormPayment.vue';\nimport Succes from './components/sections/Succes.vue';\n// Importing partials components\nimport ShopCart from './components/partials/ShopCart.vue';\n\n// Пример функции инициализации для модуля заказов\nfunction initializeOrders(app, store, router, options = {}) {\n  const route = options.route || 'Home';\n  const routeBackoffice = options.routeBackoffice || 'Backoffice Root';\n  const routeOrganizations = options.routeOrganizations || 'OrganizationRoot';\n  const routeUsers = options.routeUsers || 'User Profile Root';\n\n  addRoutes(router, {\n    parentName: route,\n    basePath: 'orders',\n    routes: routerOrders,\n    routeNamePrefix: '',\n    filterConfig: {\n      include: ['CreateOrder', 'Order'], // Только создание заказа на корневом уровне\n    },\n    meta: {\n      context: 'root',\n    },\n  });\n\n  // Backoffice routes\n  if (!options.withBackoffice) {\n    addRoutes(router, {\n      parentName: routeBackoffice,\n      basePath: 'orders', // Промежуточный маршрут /backoffice/orders\n      routes: routerOrders,\n      routeNamePrefix: 'Backoffice',\n      filterConfig: {\n        include: ['OrdersList', 'AdminCreateOrder', 'Order', 'OrderEdit'], // Специфичные для бэкофиса маршруты\n      },\n      meta: {\n        context: 'backoffice',\n      },\n    });\n  }\n\n  // User routes\n  if (!options.withUserRoutes) {\n    addRoutes(router, {\n      parentName: routeUsers,\n      basePath: 'orders', // Промежуточный маршрут /user/orders\n      routes: routerOrders,\n      routeNamePrefix: 'User',\n      filterConfig: {\n        include: ['OrdersList', 'Order'], // Специфичные для пользователя маршруты\n      },\n      meta: {\n        context: 'user',\n      },\n    });\n  }\n\n  // Organization routes\n  if (!options.withOrganizationRoutes) {\n    addRoutes(router, {\n      parentName: routeOrganizations,\n      basePath: 'orders', // Промежуточный маршрут /organization/orders\n      routes: routerOrders,\n      routeNamePrefix: 'Organization',\n      filterConfig: {\n        include: ['OrdersList', 'Order', 'AdminCreateOrder', 'OrderEdit'], // Специфичные для организации маршруты\n      },\n      meta: {\n        context: 'organization',\n      },\n    });\n  }\n\n  store.addStore('orders', storeOrders);\n  store.addStore('shopcart', storeShopcart);\n  store.addStore('testimonials', storeTestimonials);\n}\n\nconst ModuleOrder = {\n  initialize: initializeOrders,\n  views: {\n    store: {\n      storeOrders,\n      storeShopcart,\n      storeTestimonials,\n    },\n    router: {\n      routerOrders,\n    },\n    components: {\n      // Pages\n      Orders,\n      // Order,\n      OrderCreate,\n      OrderCreateBackoffice,\n      // Favorites,\n      // Blocks\n      CardOrderItem,\n      CardOrder,\n      CardOrderUser,\n      StatusHistory,\n      // Sections\n      FormCustomerDetails,\n      AskToLogin,\n      FormDelivery,\n      EmptyState,\n      Succes,\n      FormPayment,\n      // Partials\n      ShopCart,\n    },\n  },\n};\n\nexport default ModuleOrder;\n",
            "name": "orders.client.js",
            "size": 4164,
            "type": "source"
          },
          {
            "path": "../../src/modules/orders/orders.server.js",
            "relativePath": "modules/orders/orders.server.js",
            "extension": ".js",
            "content": "import CRUD from '@martyrs/src/modules/globals/controllers/classes/globals.crud.js';\nimport FactoryOrder from './controllers/orders.controller.js';\nimport ModelApplication from './models/application.model.js';\nimport ModelCustomer from './models/customer.model.js';\nimport ModelOrder from './models/order.model.js';\nimport ModelTestimonial from './models/testimonial.model.js';\nimport RoutesApplications from './routes/applications.routes.js';\nimport RoutesOrder from './routes/orders.routes.js';\nfunction initializeOrders(app, db, origins, publicPath) {\n  // Setup models in the database object\n  db.order = ModelOrder(db);\n  db.customer = ModelCustomer(db);\n  db.testimonial = ModelTestimonial(db);\n  db.application = ModelApplication(db);\n  // Setup routes if the app object is provided\n  if (app) {\n    RoutesOrder(app, db, origins, publicPath);\n    RoutesApplications(app, db, origins, publicPath);\n    new CRUD('/api/customers', app, db, db.customer);\n  }\n}\nexport const models = {\n  ModelOrder,\n  ModelCustomer,\n};\nexport const routes = {\n  RoutesOrder,\n};\nexport const controllers = {\n  FactoryOrder,\n};\nexport { initializeOrders as initialize };\nexport default {\n  initialize: initializeOrders,\n  models,\n  routes,\n  controllers,\n};\n",
            "name": "orders.server.js",
            "size": 1242,
            "type": "source"
          }
        ],
        "router": {
          "_files": [
            {
              "path": "../../src/modules/orders/router/orders.router.js",
              "relativePath": "modules/orders/router/orders.router.js",
              "extension": ".js",
              "content": "import OrderBackoffice from '@martyrs/src/modules/orders/components/pages/OrderBackoffice.vue';\nimport OrderCreate from '@martyrs/src/modules/orders/components/pages/OrderCreate.vue';\nimport OrderCreateBackoffice from '@martyrs/src/modules/orders/components/pages/OrderCreateBackoffice.vue';\nimport Orders from '@martyrs/src/modules/orders/components/pages/Orders.vue';\n\nconst ordersRoutes = [\n  {\n    path: '',\n    name: 'OrdersList',\n    component: Orders,\n    meta: {\n      title: {\n        en: 'Orders',\n        ru: 'Заказы',\n      },\n    },\n  },\n  {\n    path: 'form',\n    name: 'CreateOrder',\n    component: OrderCreate,\n    meta: {\n      title: {\n        en: 'Create Order',\n        ru: 'Создать Заказ',\n      },\n    },\n  },\n  {\n    path: 'add',\n    name: 'AdminCreateOrder',\n    component: OrderCreateBackoffice,\n    meta: {\n      title: {\n        en: 'Add Order',\n        ru: 'Добавить Заказ',\n      },\n    },\n  },\n  {\n    path: ':order',\n    name: 'Order',\n    component: OrderBackoffice,\n    props: route => ({\n      mode: route.matched[0].meta.context === 'backoffice' ? 'edit' : 'view',\n    }),\n    meta: {\n      title: {\n        en: 'Order',\n        ru: 'Заказ',\n      },\n    },\n  },\n  {\n    path: ':order/edit',\n    name: 'OrderEdit',\n    component: OrderBackoffice,\n    props: { mode: 'edit' },\n    meta: {\n      title: {\n        en: 'Edit Order',\n        ru: 'Редактировать Заказ',\n      },\n    },\n  },\n];\n\nexport default ordersRoutes;\n",
              "name": "orders.router.js",
              "size": 1452,
              "type": "source"
            }
          ]
        },
        "routes": {
          "_files": [
            {
              "path": "../../src/modules/orders/routes/applications.routes.js",
              "relativePath": "modules/orders/routes/applications.routes.js",
              "extension": ".js",
              "content": "import middlewareFactoryAuth from '@martyrs/src/modules/auth/controllers/middlewares/index.js';\nimport controllerFactory from '../controllers/applications.controller.js';\nexport default (function (app, db, origins) {\n  const controller = controllerFactory(db);\n  const { authJwt } = middlewareFactoryAuth(db);\n  app.post('/applications', controller.create);\n  app.get('/applications', controller.read);\n  app.post('/applications/:_id', controller.update);\n  app.delete('/applications/:_id', controller.delete);\n  app.get('/applications/:_id', controller.get);\n  app.post('/applications/telegram-webhook', controller.handleTelegramWebhook);\n});\n",
              "name": "applications.routes.js",
              "size": 644,
              "type": "source"
            },
            {
              "path": "../../src/modules/orders/routes/orders.routes.js",
              "relativePath": "modules/orders/routes/orders.routes.js",
              "extension": ".js",
              "content": "import middlewareFactoryAuth from '@martyrs/src/modules/auth/controllers/middlewares/index.js';\nimport controllerFactory from '../controllers/orders.controller.js';\nexport default (function (app, db, origins, publicPath) {\n  const controller = controllerFactory(db);\n  const middleware = middlewareFactoryAuth(db);\n  app.post(\n    '/api/orders/create',\n    // [\n    //   middleware.authJwt.verifyToken\n    // ],\n    controller.create\n  );\n  app.get('/api/orders/read', controller.read);\n  app.post(\n    '/api/orders/update',\n    // [\n    //   middleware.authJwt.verifyToken\n    // ],\n    controller.update\n  );\n  app.post(\n    '/api/orders/delete',\n    // [\n    //   middleware.authJwt.verifyToken\n    // ],\n    controller.deleteOrder\n  );\n});\n",
              "name": "orders.routes.js",
              "size": 744,
              "type": "source"
            },
            {
              "path": "../../src/modules/orders/routes/testimonials.routes.js",
              "relativePath": "modules/orders/routes/testimonials.routes.js",
              "extension": ".js",
              "content": "import * as controller from '../controllers/testimonials.controller.js';\nimport middlewares from '../middlewares.js';\nconst { authJwt } = middlewares;\nexport default (function (app) {\n  app.get('/api/testimonials', controller.read);\n  app.post('/api/testimonials/create', [authJwt.verifyToken], controller.create);\n  app.post('/api/testimonials/update', [authJwt.verifyToken], controller.update);\n  app.delete('/api/testimonials/delete/:_id', [authJwt.verifyToken], controller.delete);\n});\n",
              "name": "testimonials.routes.js",
              "size": 490,
              "type": "source"
            }
          ]
        },
        "store": {
          "_files": [
            {
              "path": "../../src/modules/orders/store/applications.js",
              "relativePath": "modules/orders/store/applications.js",
              "extension": ".js",
              "content": "const isProd = process.env.NODE_ENV === 'production';\n// --------------------------------------------------\n// VUE\n// --------------------------------------------------\nimport { computed, reactive, watch } from 'vue';\n// --------------------------------------------------\n// GLOBALS\n// --------------------------------------------------\nimport { setError } from '@martyrs/src/modules/globals/views/store/globals.js';\n// --------------------------------------------------\n// AXIOS\n// --------------------------------------------------\nimport axios from 'axios';\n\nconst $axios = axios.create({ baseURL: process.env.API_URL });\n// --------------------------------------------------\n// State\n// --------------------------------------------------\nconst state = reactive({\n  all: [],\n\n  current: {\n    _id: '',\n    status: '',\n    name: '',\n    email: '',\n    chat: '',\n    text: '',\n  },\n\n  form: {\n    status: false,\n    data: {\n      name: '',\n      phone: '',\n      chat: '',\n      text: '',\n    },\n  },\n});\n// --------------------------------------------------\n// Async Methods\n// --------------------------------------------------\nasync function fetchAll() {\n  return await $axios.get(`/applications`).then(\n    response => {\n      state.all = response.data;\n      return Promise.resolve(response.data);\n    },\n    error => {\n      setError(error);\n      return Promise.reject(error);\n    }\n  );\n}\n\nasync function fetch(application) {\n  return await $axios.get('/applications/' + application._id).then(\n    response => {\n      state.current = response.data;\n      return Promise.resolve(response.data);\n    },\n    error => {\n      setError(error);\n      return Promise.reject(error);\n    }\n  );\n}\n\nasync function create(application) {\n  return await $axios.post('/applications', application).then(\n    response => {\n      return Promise.resolve(response.data);\n    },\n    error => {\n      setError(error);\n      return Promise.reject(error);\n    }\n  );\n}\n\nasync function update(application) {\n  return await $axios.post('/applications/' + application._id, application).then(\n    response => {\n      let updatedApplication = state.all.find(a => a._id === response.data._id);\n      updatedApplication = response.data;\n      return Promise.resolve(response.data);\n    },\n    error => {\n      setError(error);\n      return Promise.reject(error);\n    }\n  );\n}\n\nasync function updateStatus(update) {\n  let application = {\n    status: update.status,\n  };\n\n  return await $axios.post('/applications/' + update._id, application).then(\n    response => {\n      const index = state.all.findIndex(p => p._id === update._id);\n\n      if (index !== -1) {\n        state.all[index] = response.data;\n      }\n      return Promise.resolve(response.data);\n    },\n    error => {\n      setError(error);\n      return Promise.reject(error);\n    }\n  );\n}\n\nasync function remove(application) {\n  return await $axios.delete('/applications/' + application._id).then(\n    response => {\n      state.all.splice(\n        state.all.findIndex(a => a._id == application._id),\n        1\n      );\n      return Promise.resolve(response.data);\n    },\n    error => {\n      setError(error);\n      return Promise.reject(error);\n    }\n  );\n}\n// --------------------------------------------------\n// Metgods\n// --------------------------------------------------\nfunction toggleForm() {\n  state.form.status = !state.form.status;\n  state.form.data = {\n    name: '',\n    email: '',\n    chat: '',\n    text: '',\n  };\n}\n// --------------------------------------------------\n// Getters\n// --------------------------------------------------\nconst getApplications = computed(() => state.all);\n// --------------------------------------------------\n// History\n// --------------------------------------------------\nconst history = [];\n\nhistory.push(state);\n\nwatch(state, (newState, oldState) => {\n  history.push(newState);\n});\n// --------------------------------------------------\n// Export module\n// --------------------------------------------------\nexport { create, fetch, fetchAll, remove, state, toggleForm, update, updateStatus };\n",
              "name": "applications.js",
              "size": 4079,
              "type": "source"
            },
            {
              "path": "../../src/modules/orders/store/customers.store.js",
              "relativePath": "modules/orders/store/customers.store.js",
              "extension": ".js",
              "content": "import Store from '@martyrs/src/modules/globals/views/classes/globals.store.js';\n\nconst customers = new Store(`${process.env.API_URL}/api/customers`);\n\nexport default customers;\n",
              "name": "customers.store.js",
              "size": 178,
              "type": "source"
            },
            {
              "path": "../../src/modules/orders/store/orders.js",
              "relativePath": "modules/orders/store/orders.js",
              "extension": ".js",
              "content": "// Dependencies\nimport { reactive, watch } from 'vue';\n// Setup Axios\nimport $axios from '@martyrs/src/modules/globals/views/utils/axios-instance.js';\n// Globals\nimport { setError } from '@martyrs/src/modules/globals/views/store/globals.js';\n// Init State\nimport orderInitState from '@martyrs/src/modules/orders/store/models/order.js';\n\nconst state = reactive({\n  all: [],\n  current: {\n    ...orderInitState,\n  },\n});\n\nconst actions = {\n  async create(order) {\n    try {\n      const response = await $axios.post('/api/orders/create', order);\n\n      state.all.push(response.data);\n\n      return response.data;\n    } catch (error) {\n      setError(error);\n    }\n  },\n\n  async read(options = {}) {\n    try {\n      console.log('options is', options);\n      const response = await $axios.get('/api/orders/read', { params: options });\n\n      if (options._id) {\n        set(response.data[0], 'current');\n      } else {\n        set(response.data, 'all');\n      }\n\n      return response.data;\n    } catch (err) {\n      setError(err);\n      throw err;\n    }\n  },\n\n  async update(order) {\n    try {\n      const response = await $axios.post(`/api/orders/update`, order);\n\n      const index = state.all.findIndex(o => o._id === order._id);\n\n      if (index !== -1) {\n        state.all[index] = response.data;\n      }\n\n      return response.data;\n    } catch (error) {\n      setError(error);\n    }\n  },\n\n  async delete(orderID) {\n    try {\n      await $axios.delete(`/api/orders/${orderID}`);\n      state.all = state.all.filter(o => o._id !== orderID);\n    } catch (error) {\n      setError(error);\n    }\n  },\n\n  async changePaymentStatus(orderID, status) {\n    try {\n      const response = await $axios.post(`/api/orders/payment/${orderID}`, { status });\n      const index = state.all.findIndex(o => o._id === orderID);\n      if (index !== -1) {\n        state.all[index] = response.data;\n      }\n    } catch (error) {\n      setError(error);\n    }\n  },\n};\n\nconst mutations = {\n  updateRentDates({ positions, productId, dates }) {\n    const product = positions.find(p => p._id === productId);\n\n    if (product) {\n      product.date = dates; // Предполагается, что dates — объект { start, end }\n    }\n  },\n\n  addProductToCart(state, product, organization, date) {\n    const cartItem = state.positions.find(item => item._id === product._id);\n\n    if (cartItem) {\n      cartItem.quantity++;\n    } else {\n      state.positions.push({\n        _id: product._id,\n        images: product.images,\n        name: product.name,\n        listing: product.listing,\n        price: product.price,\n        price_currency: product.price_currency,\n        quantity: 1,\n        date: date,\n        org_id: organization, // Добавляем _id организации к каждому продукту\n      });\n    }\n  },\n\n  removeProduct(state, _id) {\n    const cartItem = state.positions.find(item => item._id === _id);\n    const cartItemIndex = state.positions.indexOf(cartItem);\n\n    if (cartItemIndex > -1) {\n      state.positions.splice(cartItemIndex, 1);\n\n      // Сохраняем весь объект корзины, а не только позиции\n      localStorage.setItem(\n        'shopcart',\n        JSON.stringify({\n          positions: state.positions,\n          organization: state.organization,\n        })\n      );\n    }\n  },\n\n  decrementItemQuantity(state, _id) {\n    const cartItem = state.positions.find(item => item._id === _id);\n    const cartItemIndex = state.positions.indexOf(cartItem);\n\n    if (cartItemIndex > -1) {\n      cartItem.quantity--;\n    }\n  },\n\n  incrementItemQuantity(state, _id) {\n    const cartItem = state.positions.find(item => item._id === _id);\n\n    if (cartItem) {\n      cartItem.quantity++;\n    }\n  },\n\n  resetCustomer(stateObject) {\n    Object.assign(stateObject, customerInitState);\n  },\n  resetOrder(stateObject) {\n    state.current = { ...orderInitState };\n    // Object.assign(stateObject, orderInitState);\n  },\n};\n\nconst getters = {\n  getTotal(positions) {\n    return Number(\n      positions.reduce((total, product) => {\n        // Проверяем тип листинга\n        if (product.listing === 'rent') {\n          const start = new Date(product.date.start);\n          const end = new Date(product.date.end);\n          const diffTime = Math.abs(end - start);\n          return total + product.price * (Math.ceil(diffTime / (1000 * 60 * 60 * 24)) + 1);\n        } else {\n          // Для обычных товаров умножаем на количество\n          return total + product.price * (product.quantity || 1);\n        }\n      }, 0)\n    );\n  },\n  getDeliveryPrice(type, distance = 0, config = {}) {\n    if (type === 'pickup') return config.pickupCost || 0;\n    if (type === 'post') return config.mailCost || 300;\n\n    if (type === 'courier') {\n      const base = config.courierBase || 100;\n      const perKm = config.courierPerKm || 20;\n      const discount = config.courierDiscountFactor || 7.5;\n\n      return Math.trunc(base + perKm * distance - discount * (distance / 10));\n    }\n\n    return 0;\n  },\n};\n\nfunction set(eventData, property) {\n  state[property] = eventData;\n}\n\nconst history = [];\n\nhistory.push(state);\n\nwatch(state, (newState, oldState) => {\n  history.push(newState);\n});\n\nexport { actions, getters, mutations, state };\n",
              "name": "orders.js",
              "size": 5156,
              "type": "source"
            },
            {
              "path": "../../src/modules/orders/store/shopcart.js",
              "relativePath": "modules/orders/store/shopcart.js",
              "extension": ".js",
              "content": "/////////////////////////////\n// DEPENDENCIES\n/////////////////////////////\nimport { computed, reactive, watch } from 'vue';\n// Dependencies\n// Globals\nimport { setError } from '@martyrs/src/modules/globals/views/store/globals.js';\n\n/////////////////////////////\n// State\n/////////////////////////////\nconst state = reactive({\n  organization: null,\n  positions: [],\n  currentState: false,\n});\n\n/////////////////////////////\n// Helpers\n/////////////////////////////\nconst helpers = {\n  createCartItem(product, organization, type = 'sale') {\n    return {\n      _id: product._id,\n      images: product.images,\n      name: product.name,\n      price: product.price,\n      listing: product.listing,\n      quantity: 1,\n      org_id: organization,\n      type: type,\n    };\n  },\n\n  saveToStorage() {\n    localStorage.setItem(\n      CART_STORAGE_KEY,\n      JSON.stringify({\n        positions: state.positions,\n        organization: state.organization,\n      })\n    );\n  },\n\n  async validateProduct(product) {\n    const serverProduct = await api.fetchProduct(product._id);\n\n    if (!serverProduct) {\n      return false;\n    }\n\n    return serverProduct.price === product.price && serverProduct.name === product.name && serverProduct.available !== false;\n  },\n};\n\n/////////////////////////////\n// SYNC PRODUCT IN SHOPCART\n/////////////////////////////\n// Constants\nconst CART_STORAGE_KEY = 'shopcart';\nconst SYNC_INTERVAL = 30000; // 30 seconds in milliseconds\n\n// API service\nconst api = {\n  async fetchProduct(productId) {\n    try {\n      const response = await fetch(`/api/products/read`, { _id: productId });\n      return await response.json();\n    } catch (error) {\n      console.error('Failed to fetch product:', error);\n      return null;\n    }\n  },\n};\n\nasync function syncWithServer() {\n  try {\n    const invalidProducts = [];\n\n    for (let i = 0; i < state.positions.length; i++) {\n      const product = state.positions[i];\n      const serverProduct = await api.fetchProduct(product._id);\n\n      if (!serverProduct || serverProduct.price !== product.price || serverProduct.name !== product.name || serverProduct.available === false) {\n        invalidProducts.push(product._id);\n      }\n    }\n\n    if (invalidProducts.length > 0) {\n      state.positions = state.positions.filter(product => !invalidProducts.includes(product._id));\n      helpers.saveToStorage();\n      setError('Some products were removed from cart due to changes on server');\n    }\n  } catch (error) {\n    console.error('Failed to sync with server:', error);\n  }\n}\n// Initialize periodic sync\nlet syncInterval;\n\nconst startPeriodicSync = () => {\n  syncInterval = setInterval(syncWithServer, SYNC_INTERVAL);\n};\n\nconst stopPeriodicSync = () => {\n  if (syncInterval) {\n    clearInterval(syncInterval);\n  }\n};\n\n// Start sync when module is imported\n// startPeriodicSync();\n/////////////////////////////\n// Actions\n/////////////////////////////\nconst actions = {\n  toggleShopcart() {\n    state.currentState = state.currentState ? false : true;\n  },\n\n  setShopcart() {\n    try {\n      const storedShopcart = localStorage.getItem('shopcart');\n\n      if (storedShopcart) {\n        const shopcartData = JSON.parse(storedShopcart);\n        state.positions = shopcartData.positions; // Восстанавливаем продукты\n        state.organization = shopcartData.organization; // Восстанавливаем _id организации\n      }\n    } catch (error) {\n      console.error(error);\n      throw error;\n    }\n  },\n\n  addProductToCart(product, organization, date) {\n    console.log('organization shopcart is', organization);\n    const cartItem = state.positions.find(item => item._id === product._id);\n\n    if (cartItem) {\n      cartItem.quantity++;\n    } else {\n      state.positions.push({\n        _id: product._id,\n        images: product.images,\n        name: product.name,\n        listing: product.listing,\n        price: product.price,\n        quantity: 1,\n        date: date,\n        org_id: organization, // Добавляем _id организации к каждому продукту\n      });\n    }\n    state.organization = organization;\n\n    // Обновляем объект корзины в localStorage, включая _id организации\n    localStorage.setItem(\n      'shopcart',\n      JSON.stringify({\n        positions: state.positions,\n        organization: organization, // Сохраняем _id организации в корне объекта корзины\n      })\n    );\n  },\n\n  async addVariantToCart(variantItem, organizationId, selectedDates = null) {\n    try {\n      // Убедимся, что организация установлена \n      state.organization = organizationId;\n      \n      // Проверим, есть ли этот вариант уже в корзине\n      const existingPosition = state.positions.find(\n        position => position.product._id === variantItem._id && position.variantId === variantItem.variantId\n      );\n      \n      if (existingPosition) {\n        // Обновляем существующую позицию\n        existingPosition.quantity += 1;\n        \n        // Если есть выбранные даты для аренды, обновляем их\n        if (selectedDates) {\n          existingPosition.selectedDates = selectedDates;\n        }\n      } else {\n        // Создаем новую позицию\n        const position = {\n          product: {\n            _id: variantItem._id,\n            name: variantItem.name,\n            price: variantItem.price,\n            sku: variantItem.sku\n          },\n          variantId: variantItem.variantId,\n          attributes: variantItem.attributes || [],\n          quantity: 1,\n          price: variantItem.price,\n        };\n        \n        // Добавляем даты для товаров с арендой\n        if (selectedDates) {\n          position.selectedDates = selectedDates;\n        }\n        \n        // Добавляем позицию в корзину\n        state.positions.push(position);\n      }\n      \n      // Обновляем локальное хранилище\n      updateLocalStorage();\n      \n      // Отправляем уведомление о добавлении в корзину\n      showNotification('Product added to cart');\n      \n      return true;\n    } catch (error) {\n      console.error('Error adding variant to cart:', error);\n      return false;\n    }\n  },\n\n\n  removeProduct(_id) {\n    const cartItem = state.positions.find(item => item._id === _id);\n    const cartItemIndex = state.positions.indexOf(cartItem);\n\n    if (cartItemIndex > -1) {\n      state.positions.splice(cartItemIndex, 1);\n\n      // Сохраняем весь объект корзины, а не только позиции\n      localStorage.setItem(\n        'shopcart',\n        JSON.stringify({\n          positions: state.positions,\n          organization: state.organization,\n        })\n      );\n    }\n  },\n\n  decrementItemQuantity(_id) {\n    const cartItem = state.positions.find(item => item._id === _id);\n    const cartItemIndex = state.positions.indexOf(cartItem);\n\n    if (cartItemIndex > -1) {\n      cartItem.quantity--;\n\n      if (cartItem.quantity < 1) {\n        state.positions.splice(cartItemIndex, 1);\n      }\n\n      // Сохраняем весь объект корзины, а не только позиции\n      localStorage.setItem(\n        'shopcart',\n        JSON.stringify({\n          positions: state.positions,\n          organization: state.organization,\n        })\n      );\n    }\n  },\n\n  incrementItemQuantity(_id) {\n    const cartItem = state.positions.find(item => item._id === _id);\n\n    if (cartItem) {\n      cartItem.quantity++;\n\n      // Сохраняем весь объект корзины, а не только позиции\n      localStorage.setItem(\n        'shopcart',\n        JSON.stringify({\n          positions: state.positions,\n          organization: state.organization,\n        })\n      );\n    }\n  },\n\n  updateRentDates({ productId, dates }) {\n    const product = state.positions.find(p => p._id === productId);\n\n    if (product) {\n      product.date = dates; // Предполагается, что dates — объект { start, end }\n    }\n\n    localStorage.setItem(\n      'shopcart',\n      JSON.stringify({\n        positions: state.positions,\n        organization: state.organization,\n      })\n    );\n  },\n\n  resetShopcart() {\n    state.positions = [];\n\n    localStorage.removeItem('shopcart');\n  },\n};\n\n/////////////////////////////\n// Getters\n/////////////////////////////\nconst getters = {\n  cartTotalPrice: computed(() => {\n    return Number(\n      state.positions.reduce((total, product) => {\n        // Проверяем тип листинга\n        if (product.listing === 'rent') {\n          const start = new Date(product.date.start);\n          const end = new Date(product.date.end);\n          const diffTime = Math.abs(end - start);\n          return total + product.price * (Math.ceil(diffTime / (1000 * 60 * 60 * 24)) + 1);\n        } else {\n          // Для обычных товаров умножаем на количество\n          return total + product.price * (product.quantity || 1);\n        }\n      }, 0)\n    );\n  }),\n  cartTotalAmount: computed(() => {\n    return Number(\n      state.positions.reduce((total, product) => {\n        return total + product.quantity;\n      }, 0)\n    );\n  }),\n  getStoreCartState: computed(() => {\n    return Number(state.currentState);\n  }),\n};\n/////////////////////////////\n// History\n/////////////////////////////\nconst history = [];\nhistory.push(state);\n\n/////////////////////////////\n// Watch\n/////////////////////////////\nwatch(state, (newState, oldState) => {\n  history.push(newState);\n});\n\n/////////////////////////////\n// Module Export\n/////////////////////////////\nexport { actions, getters, state };\n",
              "name": "shopcart.js",
              "size": 9243,
              "type": "source"
            },
            {
              "path": "../../src/modules/orders/store/testimonials.js",
              "relativePath": "modules/orders/store/testimonials.js",
              "extension": ".js",
              "content": "// Dependencies\nimport axios from 'axios';\nimport { reactive } from 'vue';\n\nconst $axios = axios.create({ baseURL: process.env.API_URL, withCredentials: true });\n\n// State\nconst state = reactive({\n  testimonials: [],\n});\n\nconst actions = {\n  async fetchTestimonials() {\n    try {\n      const response = await axios.get('/api/testimonials');\n      state.testimonials = response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  },\n\n  async createTestimonial(testimonial) {\n    console.log(testimonial.profile.photo);\n    try {\n      const formData = new FormData();\n      formData.append('avatar', testimonial.profile.photo);\n      formData.append('rating', testimonial.rating);\n      formData.append('name', testimonial.name);\n      formData.append('position', testimonial.position);\n      formData.append('description', testimonial.description);\n\n      console.log(formData);\n\n      const response = await $axios.post('/api/testimonials/create', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      state.testimonials.push(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  },\n\n  async updateTestimonial(testimonial) {\n    try {\n      const response = await axios.post(`/api/testimonials/update`, testimonial);\n      const index = state.testimonials.findIndex(t => t._id === testimonial._id);\n      if (index !== -1) {\n        state.testimonials[index] = response.data;\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  },\n\n  async deleteTestimonial(testimonialId) {\n    try {\n      await axios.delete(`/api/testimonials/delete/${testimonialId}`);\n      const index = state.testimonials.findIndex(t => t._id === testimonialId);\n      if (index !== -1) {\n        state.testimonials.splice(index, 1);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  },\n};\n\nexport { actions, state };\n",
              "name": "testimonials.js",
              "size": 1908,
              "type": "source"
            }
          ],
          "models": {
            "_files": [
              {
                "path": "../../src/modules/orders/store/models/customer.js",
                "relativePath": "modules/orders/store/models/customer.js",
                "extension": ".js",
                "content": "const customerInitState = {\n  _id: null,\n  identity: {\n    type: 'Visitor',\n    target: null,\n  },\n  owner: {\n    type: 'Organization',\n    target: null,\n  },\n  creator: {\n    type: 'User',\n    target: null,\n  },\n  user: null,\n  profile: {\n    name: null,\n  },\n  messenger: {\n    type: null,\n  },\n  socials: {\n    instagram: null,\n    telegram: null,\n    whatsapp: null,\n  },\n};\n\nexport default customerInitState;\n",
                "name": "customer.js",
                "size": 414,
                "type": "source"
              },
              {
                "path": "../../src/modules/orders/store/models/order.js",
                "relativePath": "modules/orders/store/models/order.js",
                "extension": ".js",
                "content": "import customerInitState from '@martyrs/src/modules/orders/store/models/customer.js';\n\nconst orderInitState = {\n  _id: undefined,\n  positions: [],\n  status: null,\n  comment: '',\n\n  owner: {\n    type: 'Organization',\n    target: null,\n  },\n\n  creator: {\n    type: 'Customer',\n    target: null,\n  },\n\n  customer: { ...customerInitState },\n\n  payment: {\n    type: null,\n    status: null,\n  },\n\n  delivery: {\n    type: null,\n    address: null,\n    spot: null,\n    status: '',\n  },\n};\n\nexport default orderInitState;\n",
                "name": "order.js",
                "size": 512,
                "type": "source"
              }
            ]
          }
        },
        "components": {
          "blocks": {
            "_files": [
              {
                "path": "../../src/modules/orders/components/blocks/CardOrder.vue",
                "relativePath": "modules/orders/components/blocks/CardOrder.vue",
                "extension": ".vue",
                "content": "<template>\n\t<div class=\"pd-big mn-regular order-customer-card col\"> \n\t  <p class=\"mn-regular flex-center flex-nowrap flex w-100\">\n\t\t\t\t<!-- <img loading=\"lazy\" v-if=\"order.status === 'Created'\" \t\t\tclass=\"mn-r-small\" src=\"@/assets/icons/status/created.svg\"/>\n\t\t\t\t<img loading=\"lazy\" v-if=\"order.status === 'Confirmed'\"\tclass=\"mn-r-small\" src=\"@/assets/icons/status/confirmed.svg\"/>\n\t\t\t\t<img loading=\"lazy\" v-if=\"order.status === 'Awaiting shipment'\" \t\t\tclass=\"mn-r-small\" src=\"@/assets/icons/status/paid.svg\"/>\n\t\t\t\t<img loading=\"lazy\" v-if=\"order.status === 'In delivery'\" \t\tclass=\"mn-r-small\" src=\"@/assets/icons/status/finished.svg\"/>\n\t\t\t\t<img loading=\"lazy\" v-if=\"order.status === 'Finished'\" \t\tclass=\"mn-r-small\" src=\"@/assets/icons/status/finished.svg\"/> -->\n\t    <span class=\"w-100 t-medium p-big\">{{order.status}}</span>\n\t  </p>\n\t  \n\t  <div class=\"flex-nowrap flex\">\n\t  \t<div class=\"mn-r-bold pd-r-big br-right-dark w-66\">\n\t  \t\t<ul class=\"mn-semi\">\n\t        <!-- <li v-for=\"(product, index) in orderProducts(order.items.slice(0,2))\" :key=\"product.id\" class=\"shop-cart-item\">\n\t        \t<img loading=\"lazy\" v-if=\"product.images\" :src=\"require( `@/assets/images/products/${product.images[0]}`)\">\n\t          <img loading=\"lazy\" v-if=\"!(product.images)\" :src=\"require( `@/assets/icons/photo.svg`)\">\n\t          \n\t          <div class=\"text-left\">\n\t            <p class=\"name\">{{ product.name }}</p>\n\n\t            <div class=\"flex\">\n\t              <div class=\"small-underline variant\">\n\t                <span v-if=\"!product.size && !product.color\" class=\"\">One-size</span>\n\t                <span v-if=\"product.size\" class=\"\">{{ product.size}}</span>\n\t                <span v-if=\"product.color && product.size\" class=\"\">, </span>\n\t                <span v-if=\"product.color\" class=\"\">{{ product.color}}</span>\n\t              </div>\n\t              \n\t              <p class=\"t-demi\">$ {{product.quantity}} x {{product.price}}</p>\n\t            </div>\n\n\t          </div>\n\n\t    \t\t</li> -->\n\t      </ul>\n\t      <p class=\"mn-small t-medium p-big\">\n\t      \tAdress and delivery\n\t      </p>\n\t      <p class=\"mn-small\">\n\t        {{order.delivery.adress}} \n\t      </p>\n\t      <p v-if=\"order.delivery.type === 'Post'\" class=\"w-\">\n\t     \t\tYou have chosen delivery using the courier service CDEK. Estimated delivery date {{DateToFormattedString(order.createdAt)}}.\n\t      </p>\n\n\t      <p v-if=\"order.delivery.type === 'Courier'\" class=\"w-\">\n\t     \t\tYou have chosen delivery by courier. Estimated delivery date {{DateToFormattedString2(order.createdAt)}}.\n\t      </p>\n\n\t      <p v-if=\"order.delivery.type === 'Pickup'\" class=\"w-\">\n\t     \t\tYou have chosen to receive the order in the Moscow store.\n\t      </p>\n\t    </div>\n\n\n\t    <div class=\"w-40\">\n\t    \t<p class=\"mn-small w-100 t-medium p-big\">\n\t        <span class=\"t-transp\">Order:</span> №{{order._id.slice(0,8)}} \n\t      </p>\n\t       <p  v-if=\"order.delivery.type === 'Post'\" class=\"mn-medium w-100\">\n\t       \t<span class=\"t-transp\">Estimated shipping date:</span><br>{{DateToFormattedString(order.createdAt)}}\n\t      </p>\n\t      <p  v-if=\"order.delivery.type === 'Courier'\" class=\"mn-medium w-100\">\n\t       \t<span class=\"t-transp\">Shipping date:</span><br>{{DateToFormattedString2(order.createdAt)}}\n\t      </p>\n\t      <p  v-if=\"order.delivery.type === 'Pickup'\" class=\"mn-medium w-100\">\n\t       \t<span class=\"t-transp\">Type of delivery:</span><br>Pickup\n\t      </p>\n\t      <hr class=\"mn-medium\">\n\n\t      <div :class=\"{'mn-semi': order.delivery.type == ''}\" class=\"flex\">\n\t        <p  class=\"t-transp\">In total</p>\n\t        <p>$ {{ cartTotalPrice }}</p>\n\t      </div>\n\t      <div v-if=\"order.delivery.type !== ''\" class=\"mn-semi flex\">\n\t        <p  class=\"t-transp\">Delivery</p>\n\t        <p v-if=\"order.delivery.type === 'Pickup'\">Free</p>\n\t        <p v-if=\"order.delivery.type === 'Post'\">$ 10</p>\n\t        <p v-if=\"order.delivery.type === 'Courier'\">$ 20</p>\n\t      </div>\n\t      <div class=\"mn-semi intotal flex-bottom flex\">\n\t        <p  class=\"t-transp\">In total to pay</p>\n\t        <p v-if=\"order.delivery.type === ''\" class=\"p-big t-semi\">$ {{ cartTotalPrice }}</p>\n\t        <p v-if=\"order.delivery.type === 'Pickup'\" class=\"p-big t-semi\">$ {{ cartTotalPrice}} ₽</p>\n\t        <p v-if=\"order.delivery.type === 'Courier'\" class=\"p-big t-semi\">$ {{ cartTotalPrice + 20 }}</p>\n\t        <p v-if=\"order.delivery.type === 'Post'\" class=\"p-big t-semi\">$ {{ cartTotalPrice + 10 }}</p>\n\t      </div>\n\t      <hr  v-if=\"order.status === 'Confirmed'\" class=\"mn-semi\" >\n\t     <!-- \t<button \n\t     \t@click=\"requestPayment(order)\"\n\t     \tv-if=\"\n\t     \t\torder.status === 'Подтвержден' \n\t     \t\t&& order.payment.type === 'Online'\n\t     \t\t&& payment.Status !== 'CONFIRMED'\n\t     \t\t&& payment.Status !== 'REFUNDED'\n\t     \t\" \n\t     \tclass='w-100 button'>Оплатить заказ</button> -->\n\t     \t<span class=\"t-transp\" v-if=\"payment && payment.Status === 'CONFIRMED'\">Paid</span> \n\t    </div>  \n\t  </div>\n\t</div>\t\t\n\n</template>\n\n\n<script setup=\"props\">\n\timport { defineProps,computed } from 'vue'\n\timport { useRouter } from 'vue-router'\n\n\tconst router = useRouter()\n\n\tconst props = defineProps({\n\t  order: Object,\n\t});\n\n\n\n\t// await store.dispatch('payments/getStatus', props.order._id)\n\n\t// const payment = computed(() => store.state.payments.current)\n\t// const cartTotalPrice = computed(() => store.getters['orders/orderTotalPrice'])\n\n\tfunction requestPayment(order) {\n\t\t // store.dispatch(\"payments/newPayment\", order);\n\t}\n\t\n\tfunction DateToFormattedString(d) {         \n    var fixedDate = new Date(d);                                                     \n    var mm = (fixedDate.getMonth()+1).toString(); // getMonth() is zero-based         \n    var dd  = (fixedDate.getDate() + 6).toString();            \n                         \n    return (dd[1]?dd:\"0\"+dd[0]) + '/' + (mm[1]?mm:\"0\"+mm[0]);\n  }\n\n  function DateToFormattedString2(d) {         \n    var fixedDate = new Date(d);                                                     \n    var mm = (fixedDate.getMonth() + 1).toString(); // getMonth() is zero-based         \n    var dd  = (fixedDate.getDate() + 1).toString();            \n                         \n    return (dd[1]?dd:\"0\"+dd[0]) + '/' + (mm[1]?mm:\"0\"+mm[0]);\n  }\n\n\t// function orderProducts (items) {\n\t//   return items.map(({ id, size, color, quantity }) => {\n\t//     const product = store.state.products.all.find(product => product.id === id)\n\t//     return {\n\t//       name: product.name,\n\t//       images: product.images[0],\n\t//       color,\n\t//       size,\n\t//       price: product.price,\n\t//       id: product.id,\n\t//       quantity\n\t//     }\n\t//   })\n\t// }\n\n</script>\n\n<style lang=\"scss\" scoped>\n.shop-cart-item {\n\t&:first-of-type { padding-top: 0;}\n}\n\n</style>",
                "name": "CardOrder.vue",
                "size": 6701,
                "type": "source"
              },
              {
                "path": "../../src/modules/orders/components/blocks/CardOrderBackoffice.vue",
                "relativePath": "modules/orders/components/blocks/CardOrderBackoffice.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"bg-light pos-relative pd-medium radius-medium\">\n    <CardHeader \n      :entity=\"order\"\n      :entityType=\"'order'\"\n      :user=\"user\"\n      :owner=\"order.creator\" \n      :creator=\"order.creator\"\n      :date=\"order.createdAt\"\n      class=\"mn-b-small\"\n    />\n\n    <div class=\"mn-b-small pd-small bg-white radius-small flex-nowrap flex\"> \n      <div class=\"w-100\">\n        <p class=\"t-truncate\">{{order.delivery.address || 'Not specified'}}</p> \n      </div>\n\n      <div class=\"w-100 t-right\">\n        <h3 class=\"mn-b-thin\">{{currency}}{{getTotal(order.positions)}}</h3>\n        <p>#{{order._id.slice(0, 4) + '...' + order._id.slice(-4)}}</p> \n      </div>\n    </div>\n \n    <div class=\"cols-1 pos-relative mn-b-small gap-thin pd-small bg-white radius-small\">\n\t\t  <!-- Всегда отображаем первые две позиции -->\n\t\t  <template v-for=\"(position, index) in order.positions\">\n\t\t  \t<transition name=\"moveFromTop\">\n\t\t\t    <div \n\t\t\t      v-if=\"index < 2 || (spoiler && index >= 2)\" \n\t\t\t      :key=\"index\" \n\t\t\t      class=\"w-100 flex\"\n\t\t\t    >\n\t\t\t      <p class=\"mn-r-auto\">{{ position.name }}</p>\n\t\t\t      <p class=\"t-right\">\n\t\t\t        {{ position.quantity }} {{ position.type }}\n\t\t\t        x\n\t\t\t        <span class=\"t-transp\">{{ currency }} {{ position.price }}</span>\n\t\t\t      </p>\n\t\t\t    </div>\n\t      </transition>\n\t\t  </template>\n\t\t\n\t\t  <!-- Кнопка переключения для дополнительных позиций, видна только если есть больше двух позиций -->\n\t\t  <button\n\t\t    v-if=\"order.positions.length > 2\"\n\t\t    @click.prevent=\"spoiler = !spoiler\"\n\t\t    class=\"cursor-pointer radius-big bg-light-transp-50 pd-nano w-100 flex-center flex\"\n\t\t  >\n\t\t    {{ !spoiler ? `+${order.positions.length - 2} more` : `Hide` }}\n\t\t  </button>\n\t\t</div>\n\n    <div class=\"pd-small bg-white radius-small gap-micro flex-v-center flex-nowrap flex\"> \n      <IconTime class=\"i-semi t-transp\" fill=\"rgb(var(--black)\" />\n      <p class=\"t-medium mn-r-auto\">{{formatDate(order.deadline)}}</p>\n\n      <span \n        class=\"flex-child flex-child-shrink-0 capitalize w-max t-medium radius-big pd-b-nano pd-t-nano pd-r-thin pd-l-thin bg-main\"\n      >\n        {{order.status}}\n      </span>\n\n      <span \n        class=\"flex-child flex-child-shrink-0 capitalize w-max t-medium radius-big pd-b-nano pd-t-nano pd-r-thin pd-l-thin t-white bg-red\"\n      >\n        {{order.payment.status || 'Not defined'}}\n      </span>\n    </div>\n\n    <div v-if=\"order.comment\" class=\"pos-relative radius-small bg-fifth-transp-10 mn-t-thin pd-small\">\n      <p class=\"mn-b-thin t-transp uppercase p-small t-medium\">Comment</p>\n      <p>{{order.comment}}</p>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\nimport CardHeader from '@martyrs/src/modules/globals/views/components/blocks/CardHeader.vue';\nimport IconTime from '@martyrs/src/modules/icons/entities/IconTime.vue';\n\nconst props = defineProps({\n  order: {\n    type: Object,\n    required: true\n  },\n  user: {\n    type: Object,\n    required: true\n  },\n  formatDate: {\n    type: Function,\n    required: true\n  },\n  getTotal: {\n    type: Function,\n    required: true\n  },\n  currency: {\n    type: String,\n    default: ''\n  }\n});\n\nconst spoiler = ref(false);\n</script>",
                "name": "CardOrderBackoffice.vue",
                "size": 3195,
                "type": "source"
              },
              {
                "path": "../../src/modules/orders/components/blocks/CardOrderItem.vue",
                "relativePath": "modules/orders/components/blocks/CardOrderItem.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"gap-small pos-relative cols-1\">\n    <div class=\"pos-relative w-100 gap-thin flex-stretch flex-nowrap flex\">\n      <div class=\"bg-light h-100 o-hidden pos-relative radius-small aspect-1x1\"\n        style=\"flex: 1 0 auto\"\n      >\n        <!-- Item Image -->\n        <img loading=\"lazy\" \n          class=\"w-100 object-fit-cover pos-absolute h-100\" \n          v-if=\"product.images[0]\"    \n          :src=\"(FILE_SERVER_URL || '') + product.images[0]\"\n        >\n        <PlaceholderImage\n          v-if=\"!product.images[0]\" \n          class=\"bg-light pos-absolute radius-small w-100 h-100\"\n        />\n      </div>\n      \n      <!-- Item Description -->\n      <div class=\"w-100 pos-relative\">\n        <!-- Name -->\n        <p class=\"t-truncate t-medium\">{{ product.name }}</p>\n        <div>\n          <p>\n            <span class=\"t-second mn-r-micro d-inline-block t-demi\">\n              {{ returnCurrency() }}{{ (product.listing === 'rent' ? (rentalDays || product.quantity || 0) : (product.quantity || 0)) * product.price }}\n            </span>\n\n            <span class=\"p-small t-transp\">\n              <template v-if=\"product.quantity\">{{returnCurrency() }}{{product.price}} </template>\n              × \n              <template v-if=\"product.listing === 'rent' && rentDates.start && rentDates.end\">\n                {{ rentalDays }} days\n              </template>\n              \n              <template v-else>\n                {{ product.quantity || 0 }} {{ product.unit || 'pcs' }}\n              </template>\n            </span>\n          </p>  \n        </div>\n        \n        <!-- Control Buttons -->\n        <div v-if=\"editable || product.listing === 'rent'\" class=\"mn-t-thin gap-thin flex-nojustify flex\">\n          <!-- For Rent Items: Edit Dates Button -->\n          <div v-if=\"(product.listing === 'rent') && (rentDates.start && rentDates.end)\" class=\"flex gap-thin flex-v-center cursor-pointer pd-thin w-100 bg-light radius-small\">\n            <IconCalendar\n              @click=\"openRentDatePopup\"\n              class=\"cursor-pointer i-medium\"\n            />\n            <!-- Rent Dates Display -->\n            <p @click=\"editable ? openRentDatePopup : null\" class=\"t-medium t-transp\">\n             {{ formatDate(rentDates.start, { dayMonth: true, language: locale }) }} - {{ formatDate(rentDates.end, { dayMonth: true, language: locale }) }}\n            </p>\n          </div>\n\n          <!-- For Regular Items: Quantity Control Buttons -->\n          <template v-if=\"editable &&product.listing !== 'rent'\">\n            <IconAdd\n              @click=\"increase_(product)\"\n              class=\"hover-scale-1 cursor-pointer bg-light i-big pd-thin radius-small\"\n            />\n            <IconMinus\n              @click=\"decrease(product)\"\n              class=\"hover-scale-1 cursor-pointer bg-light i-big pd-thin radius-small\"\n            />\n            <IconDelete\n              @click=\"remove(product)\"\n              class=\"hover-scale-1 cursor-pointer bg-light i-big pd-thin radius-small\"\n            />\n          </template>\n\n          <IconEdit\n            v-if=\"product.listing === 'rent' && editable\"\n            @click=\"openRentDatePopup\"\n            class=\"hover-scale-1 cursor-pointer bg-light i-big pd-small radius-small\"\n          />\n        </div>\n      </div>\n    </div>\n    \n    <!-- Rent Date Popup -->\n    <PopupDateSelector\n      :isOpen=\"isRentDatePopupOpen\"\n      :product=\"product\"\n      :initialDates=\"rentDates\"\n      :showFees=\"true\"\n      :showVat=\"true\"\n      :feesRate=\"0.15\"\n      :vatRate=\"0.2\"\n      :showCancelButton=\"true\"\n      :onCancel=\"() => remove(product)\"\n      @confirm=\"updateRentDates\"\n      @close=\"closeRentDatePopup\"\n    />\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useI18n } from 'vue-i18n'\nimport { format } from 'date-fns'\nimport IconAdd from '@martyrs/src/modules/icons/navigation/IconAdd.vue'\nimport IconEdit from '@martyrs/src/modules/icons/navigation/IconEdit.vue'\nimport IconMinus from '@martyrs/src/modules/icons/navigation/IconMinus.vue'\nimport IconDelete from '@martyrs/src/modules/icons/navigation/IconDelete.vue'\nimport IconCalendar from '@martyrs/src/modules/icons/entities/IconCalendar.vue'\nimport PlaceholderImage from '@martyrs/src/modules/icons/placeholders/PlaceholderImage.vue'\nimport PopupDateSelector from '@martyrs/src/modules/globals/views/components/blocks/PopupDateSelector.vue'\n\nconst router = useRouter()\nconst emits = defineEmits(['increase', 'decrease', 'remove', 'updateRentDates'])\n\nconst props = defineProps({\n  product: Object,\n  editable: Boolean,\n  increase: Function,\n  decrease: Function,\n  remove: Function,\n})\n\nconst { locale } = useI18n()\n\n// Rental dates state - initialize from product if available\nconst rentDates = ref({\n  start: props.product.date?.start || null,\n  end: props.product.date?.end || null\n})\n\n// Rental days calculation\nconst rentalDays = computed(() => {\n  if (!rentDates.value.start || !rentDates.value.end) return 0\n  \n  const start = new Date(rentDates.value.start)\n  const end = new Date(rentDates.value.end)\n  const diffTime = Math.abs(end - start)\n  return Math.ceil(diffTime / (1000 * 60 * 60 * 24)) + 1\n})\n\n// Popup state\nconst isRentDatePopupOpen = ref(false)\n\n// Methods for buttons\nfunction increase_(product) {\n  if (props.increase) {\n    props.increase(product)\n  }\n  emits('increase', product)\n}\n\nfunction decrease(product) {\n  if (props.decrease) {\n    props.decrease(product)\n  }\n  emits('decrease', product)\n}\n\nfunction remove(product) {\n  if (props.remove) {\n    props.remove(product)\n  }\n  emits('remove', product)\n}\n\n// Rent date popup functions\nfunction openRentDatePopup() {\n  isRentDatePopupOpen.value = true\n}\n\nfunction closeRentDatePopup() {\nisRentDatePopupOpen.value = false\n}\n\nfunction updateRentDates(dates) {\n  rentDates.value = dates\n  emits('updateRentDates', props.product, dates)\n  closeRentDatePopup()\n}\n</script>\n\n<style lang=\"scss\">\n</style>",
                "name": "CardOrderItem.vue",
                "size": 5987,
                "type": "source"
              },
              {
                "path": "../../src/modules/orders/components/blocks/CardOrderUser.vue",
                "relativePath": "modules/orders/components/blocks/CardOrderUser.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"w-100\">\n    <!-- Главный контейнер -->\n    <div class=\"bg-light radius-tl-medium radius-tr-medium pd-thin gap-small flex-v-center flex-nowrap flex\"\n    \t:class=\"{\n    \t\t'radius-bl-medium radius-br-medium': !showReturnNotice\n    \t}\"\n    >\n      <!-- Левая часть - сетка фотографий -->\n      <div style=\"display: grid; grid-template-columns: 1fr 1fr; grid-template-rows: 1fr 1fr\" class=\"flex-child-default gap-micro h-max-5r aspect-1x1\">\n\t\t\t  <template v-if=\"positions.length > 0\">\n\t\t\t    <div \n\t\t\t      v-for=\"index in 4\" \n\t\t\t      :key=\"index\" \n            style=\"min-height: 0\"\n\t\t\t      class=\"w-100 h-100 bg-white-transp-50 radius-thin\"\n\t\t\t      :class=\"{\n\t\t\t        'bg-white-transp-50': index <= positions.length && index <= 3,\n\t\t\t        'bg-white-transp-50': index > positions.length || (index === 4 && positions.length <= 3),\n\t\t\t        'bg-main': index === 4 && positions.length > 3\n\t\t\t      }\"\n\t\t\t    >\n\t\t\t     <img \n\t\t\t\t\t\t  v-if=\"index > 0 && index <= positions.length && positions[index - 1]?.images?.[0]\" \n\t\t\t\t\t\t  :src=\"`${FILE_SERVER_URL || ''}${positions[index - 1].images[0] || positions[index - 1].image}`\" \n\t\t\t\t\t\t  class=\"radius-small object-fit-contain w-100 h-100\" \n\t\t\t\t\t\t  :alt=\"positions[index - 1].name\" \n\t\t\t\t\t>\n\t\t\t      <div v-else-if=\"index === 4 && positions.length > 3\" class=\"flex-center h-100\">\n\t\t\t        <span class=\"t-medium t-white\">+{{ positions.length - 3 }}</span>\n\t\t\t      </div>\n\t\t\t    </div>\n\t\t\t  </template>\n\t\t\t</div>\n\n      <!-- Правая часть - контент -->\n      <div class=\"flex-column flex w-100\">\n        <!-- ID заказа и цена -->\n        <div class=\"mn-b-thin\">\n          <Tooltip :text=\"orderId\">\n\t\t\t      <p class=\"p-big\">\n\t\t\t        #{{ orderId.slice(0, 4) }}...{{ orderId.slice(-4) }}\n\t\t\t      </p>\n\t\t\t    </Tooltip>\n          <p class=\"t-transp\">{{ positions.length }} items for {{ formatPrice(total) }}</p>\n        </div>\n\n        <!-- Оставшееся время -->\n        <div class=\"flex-nowrap radius-thin bg-white w-max pd-thin flex-v-center flex\">\n\t\t\t\t\t<component :is=\"statusIcon\" class=\"t-transp\" />\n\t\t\t    <span class=\"mn-l-micro p-medium\">{{ statusText }}</span>\n        </div>\n      </div>\n    </div>\n\n    <!-- Уведомление о возврате -->\n    <div \n\t\t  v-if=\"showReturnNotice\" \n\t\t  :class=\"[\n\t\t    'flex-nowrap', \n\t\t    'flex-v-center', \n\t\t    'flex', \n\t\t    'pd-regular', \n\t\t    'radius-bl-medium', \n\t\t    'radius-br-medium',\n\t\t    hasOverdue ? 'bg-fourth-nano' : 'bg-second-nano'\n\t\t  ]\"\n\t\t>\n\t\t  <svg \n\t\t    class=\"i-medium mn-r-thin t-main\" \n\t\t    xmlns=\"http://www.w3.org/2000/svg\" \n\t\t    width=\"19\" \n\t\t    height=\"19\" \n\t\t    viewBox=\"0 0 19 19\" \n\t\t    fill=\"none\"\n\t\t  >\n\t\t    <path \n\t\t      d=\"M9.21484 18.4367C8.19857 18.4367 7.23014 18.2795 6.30957 17.965C5.389 17.6551 4.54362 17.2176 3.77344 16.6525C3.00781 16.092 2.34245 15.4266 1.77734 14.6564C1.2168 13.8863 0.779297 13.0432 0.464844 12.1271C0.154948 11.2066 0 10.2381 0 9.22186C0 8.20103 0.154948 7.23033 0.464844 6.30975C0.779297 5.38918 1.2168 4.54608 1.77734 3.78046C2.34245 3.01483 3.00781 2.34947 3.77344 1.78436C4.54362 1.21926 5.389 0.781759 6.30957 0.471863C7.23014 0.15741 8.19857 0.000183105 9.21484 0.000183105C10.2357 0.000183105 11.2064 0.15741 12.127 0.471863C13.0475 0.781759 13.8906 1.21926 14.6562 1.78436C15.4219 2.34947 16.0872 3.01483 16.6523 3.78046C17.2174 4.54608 17.6549 5.38918 17.9648 6.30975C18.2793 7.23033 18.4365 8.20103 18.4365 9.22186C18.4365 10.2381 18.2793 11.2066 17.9648 12.1271C17.6549 13.0432 17.2174 13.8863 16.6523 14.6564C16.0872 15.4266 15.4219 16.092 14.6562 16.6525C13.8906 17.2176 13.0475 17.6551 12.127 17.965C11.2064 18.2795 10.2357 18.4367 9.21484 18.4367ZM9.22168 10.6027C9.7959 10.6027 10.0967 10.3042 10.124 9.70721L10.2607 5.69452C10.2744 5.39374 10.181 5.14992 9.98047 4.96307C9.78451 4.77167 9.5293 4.67596 9.21484 4.67596C8.89583 4.67596 8.63835 4.76939 8.44238 4.95624C8.25098 5.14309 8.16211 5.38918 8.17578 5.69452L8.30566 9.71405C8.33301 10.3065 8.63835 10.6027 9.22168 10.6027ZM9.22168 13.6994C9.5498 13.6994 9.82324 13.6037 10.042 13.4123C10.2653 13.2163 10.377 12.9634 10.377 12.6535C10.377 12.3391 10.2653 12.0838 10.042 11.8879C9.82324 11.6919 9.5498 11.5939 9.22168 11.5939C8.89811 11.5939 8.6224 11.6942 8.39453 11.8947C8.17122 12.0907 8.05957 12.3436 8.05957 12.6535C8.05957 12.9634 8.17122 13.2163 8.39453 13.4123C8.6224 13.6037 8.89811 13.6994 9.22168 13.6994Z\" \n\t\t      :fill=\"hasOverdue ? '#FF0000' : '#007AFF'\"\n\t\t    />\n\t\t  </svg>\t\n\t\t  <span \n\t\t  \tclass=\"p-medium t-semi\"\n\t\t  \t:class=\"[\n\t\t\t    hasOverdue ? 't-red' : 't-second'\n\t\t\t  ]\"\n\t\t  >\n\t\t\t\tNeed to return part of the equipment\n\t\t\t</span>\n\t\t</div>\n  </div>\n</template>\n\n<script setup>\nimport { computed } from 'vue';\n\nimport Tooltip from '@martyrs/src/components/Tooltip/Tooltip.vue'\n\nimport IconStatusCreated from '@martyrs/src/modules/orders/components/icons/IconStatusCreated.vue';\nimport IconStatusConfirmed from '@martyrs/src/modules/orders/components/icons/IconStatusConfirmed.vue';\nimport IconStatusInUse from '@martyrs/src/modules/orders/components/icons/IconStatusInUse.vue';\nimport IconStatusFinished from '@martyrs/src/modules/orders/components/icons/IconStatusFinished.vue';\nimport IconStatusCanceled from '@martyrs/src/modules/orders/components/icons/IconStatusCanceled.vue';\nimport IconStatusDelay from '@martyrs/src/modules/orders/components/icons/IconStatusDelay.vue';\n\nconst props = defineProps({\n  orderId: String,\n  status: String,\n  positions: Array,\n  createdAt: [String, Date],\n  updatedAt: [String, Date],\n  total: [String, Number]\n});\n\nconst iconMap = {\n  'created': IconStatusCreated,\n  'confirmed': IconStatusConfirmed,\n  'preparing': IconStatusInUse,\n  'inuse': IconStatusInUse,\n  'finished': IconStatusFinished,\n  'canceled': IconStatusCanceled,\n  'delay': IconStatusDelay\n};\n\nconst formatDate = (date) => {\n  const d = new Date(date);\n  return d.toLocaleDateString('en-US', { day: 'numeric', month: 'long' });\n};\n\nconst statusText = computed(() => {\n  const createdDate = formatDate(props.createdAt);\n  const updatedDate = formatDate(props.updatedAt);\n  \n  switch(props.status.toLowerCase()) {\n    case 'created':\n      return `Created, ${createdDate}`;\n    case 'confirmed':\n      return `Confirmed, ${updatedDate}`;\n    case 'preparing':\n    case 'inuse':\n      if (props.positions?.length) {\n        const lastEndDate = new Date(props.positions[props.positions.length - 1].date.end);\n        return `up to ${formatDate(lastEndDate)}`;\n      }\n      return `up to 18:00, ${updatedDate}`;\n    case 'finished':\n      return `Finished, ${updatedDate}`;\n    case 'canceled':\n      return `Canceled, ${updatedDate}`;\n    default:\n    // Расчет задержки\n    if (props.positions?.length) {\n      const lastPosition = props.positions[props.positions.length - 1];\n      const lastEndDateRaw = lastPosition?.date?.end;\n\n      if (lastEndDateRaw) {\n        const lastEndDate = new Date(lastEndDateRaw);\n        const now = new Date();\n        const diffTime = Math.abs(now.getTime() - lastEndDate.getTime());\n        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\n        if (diffDays > 0 && props.status !== 'finished' && props.status !== 'canceled') {\n          return `Delay ${diffDays} day${diffDays > 1 ? 's' : ''}`;\n        }\n      }\n    }\n    return `Created, ${createdDate}`;\n\n  }\n});\n\n// Выбор иконки\nconst statusIcon = computed(() => {\n  if (props.status === 'preparing' || props.status === 'inuse') {\n    // Проверка на задержку\n    if (props.positions?.length) {\n      const lastEndDate = new Date(props.positions[props.positions.length - 1].date.end);\n      if (new Date() > lastEndDate && props.status !== 'finished' && props.status !== 'canceled') {\n        return IconStatusDelay;\n      }\n    }\n    return IconStatusInUse;\n  }\n  return iconMap[props.status.toLowerCase()] || IconStatusCreated;\n});\n\n// Функция для нормализации даты (убираем время)\nconst getDateWithoutTime = (dateString) => {\n  const date = new Date(dateString);\n  date.setHours(0, 0, 0, 0);\n  return date;\n};\n\n// Текущая дата и дата через 3 дня\nconst today = getDateWithoutTime(new Date());\nconst threeDaysFromNow = new Date(today);\nthreeDaysFromNow.setDate(today.getDate() + 3);\n\n// Показывать ли уведомление о возврате\nconst showReturnNotice = computed(() => {\n  return props.positions.some(position => {\n    const endDate = position?.date?.end ? getDateWithoutTime(position.date.end) : null;\n    return endDate !== null && endDate <= threeDaysFromNow;\n  });\n});\n\n// Есть ли просроченные позиции\nconst hasOverdue = computed(() => {\n  return props.positions.some(position => {\n    const endDate = position?.date?.end ? getDateWithoutTime(position.date.end) : null;\n    return endDate !== null && endDate < today;\n  });\n});\n\n// Предполагается, что formatPrice определен где-то в коде\n</script>\n\n<style scoped>\n/* Добавляем стиль для текста \"просрочено\" */\n.t-red {\n  color: red;\n}\n</style>",
                "name": "CardOrderUser.vue",
                "size": 8873,
                "type": "source"
              },
              {
                "path": "../../src/modules/orders/components/blocks/CardOrderVar1.vue",
                "relativePath": "modules/orders/components/blocks/CardOrderVar1.vue",
                "extension": ".vue",
                "content": "<router-link \n        v-for=\"order in orders.state.all\" \n        :to=\"{ \n          name: 'Order Edit', \n          params: { \n            order: order._id \n\n          }\n        }\" \n         class=\"bg-light pd-medium radius-big\"\n      >\n        <CardHeader \n          :entity=\"order\"\n          :entityType=\"'order'\"\n          :user=\"auth.state.user\"\n          :owner=\"order.creator\" \n          :creator=\"order.creator\"\n          :date=\"order.createdAt\"\n          class=\"mn-b-thin\"\n        />\n\n\n          <div class=\"mn-b-thin w-100 bg-white radius-small pd-small spoiler\">\n            <div @click=\"spoiler = !spoiler\"  class=\"flex-v-center flex\">\n              \n              Order: #{{order._id}}\n\n              <span \n                class=\"flex-child flex-child-shrink-0 capitalize w-max mn-r-thin t-medium radius-big pd-b-nano pd-t-nano pd-r-thin pd-l-thin bg-main\"\n              >\n                {{order.status}}\n              </span>\n             \n            </div>\n\n\n          </div>\n\n\n       \n          <div class=\"mn-b-thin w-100 bg-white radius-small pd-small spoiler\">\n            <div @click=\"spoiler = !spoiler\"  class=\"flex-v-center flex\">\n              \n              customer: {{order.customer.target}}\n\n            </div>\n\n\n          </div>\n\n            <div class=\"w-100 bg-white radius-small pd-small\">\n\n              <span class=\"flex-child flex-child-shrink-0\">\n                Positions {{order.positions.length}} <a class=\"t-main mn-r-auto\">Check Leftover</a>\n              </span>\n              <!-- <img loading=\"lazy\" :class=\"{ 'spoiler-active': spoiler }\" class=\"button-icon\" src=\"@/assets/icons/arrow-down-spoiler.svg\"> -->\n            \n\n              <transition name=\"fade\">\n                <div v-if=\"spoiler\">\n                  <div  v-for=\"position in order.positions\" class=\"mn-t-small w-100 mn-b-thin flex\"> \n                    <div class=\" w-50 flex\">\n                      <span>\n                        {{position.name}}\n                      </span>\n                      <span class=\"mn-r-thin mn-l-thin t-transp\">|</span>\n\n                      <span class=\"w-50\">\n                        {{position.quantity}}\n                        x\n                        {{position.price}}\n                        <span class=\"t-transp\">{{returnCurrency()}}</span> \n                      </span>\n\n                    </div>\n                    \n                    <div class=\"t-right w-50\">\n                    \n                      <span class=\"t-transp\">{{position.type}}</span> \n                    </div>\n                  </div> \n                </div>\n              </transition>\n\n            </div>\n\n             <div class=\"mn-b-thin w-100 bg-white radius-small pd-small\">\n\n              <span class=\"flex-child flex-child-shrink-0\">\n                 <span class=\"h4\">Amount: 4 500</span>\n              </span>\n            </div>\n\n            <div v-if=\"order.comment\"  class=\"bg-fifth-transp-10 pd-thin\">\n              <p class=\"t-truncate\">Comment: {{order.comment}}</p>\n            </div>\n      </router-link>",
                "name": "CardOrderVar1.vue",
                "size": 3054,
                "type": "source"
              },
              {
                "path": "../../src/modules/orders/components/blocks/StatusHistory.vue",
                "relativePath": "modules/orders/components/blocks/StatusHistory.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"bg-light radius-medium w-100\">\n    <h3 class=\"pd-medium\">Tracking History</h3>\n    <div v-for=\"status in statusDetailedHistory\" :key=\"status\" class=\"w-100 br-t br-solid br-black-transp-10 pd-medium flex-v-center flex-nowrap flex\">\n      <div class=\"flex-center flex i-big radius-extra br-solid br-2px br-black-transp-10 mn-r-small\">\n        <IconCheckmark\n          v-if=\"isStatusInHistory(status.status)\"\n          class=\"i-medium\"\n        />\n      </div>\n\n      <div>\n        <p class=\"h4 w-8r\">{{status.status}}</p>\n        <!-- <p v-if=\"status.timestamp\" class=\"h5 w-8r\">{{formatDate(status.timestamp)}}</p> -->\n      </div>\n      <!-- <router-link v-if=\"status.user\" :to=\"{ \n        name: 'User Profile Main', \n        params: {\n          _id: status.user\n        }\n      }\" class=\"pd-small radius-extra bg-second t-white mn-l-auto flex-center uppercase t-semi\">Check User</router-link> -->\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue';\n\nimport IconCheckmark from '@martyrs/src/modules/icons/navigation/IconCheckmark.vue'\n\n// import Socket from '@vendus/sockets-for-cordova';\n\nconst props = defineProps({\n  statusHistory: {\n    type: Array\n  },\n  statusCurrent: {\n    type: String\n  },\n  edit: {\n    type: Boolean\n  },\n  statuses: {\n    type: Array\n  }\n})\n\nconst statusDetailedHistory = props.statuses.map(status => {\n  const historyEntry = props.statusHistory.find(entry => entry.status === status);\n\n  console.log()\n  return {\n    status,\n    user: historyEntry?.user || undefined,\n    timestamp: historyEntry ? historyEntry.timestamp : 'N/A',\n    inHistory: !!historyEntry,\n    _id: historyEntry ? historyEntry._id : null\n  };\n});\n\nconst statusCurrent = ref(props.statusCurrent);\nconst statusHistory = ref(props.statusHistory);\n\n// Проверка, был ли статус уже установлен\nconst isStatusInHistory = (statusValue) => {\n  return statusHistory.value.some(status => status.status === statusValue);\n};\n\n\nconst printerIP = ref('192.168.1.197');\nconst printerPort = ref(9100);\nconst textToPrint = ref('This is some text to print\\n\\n');\n\n// const printReceipt = async () => {\n//   try {\n//     const initPrinter = new Uint8Array([0x1b, 0x40]); // Команда инициализации принтера\n//     const lineFeed = new Uint8Array([0x0a]); // Перевод строки\n//     const cutPaper = new Uint8Array([0x1d, 0x56, 0x01]); // Резка бумаги\n\n//     const encoder = new TextEncoder();\n//     const textData = encoder.encode(textToPrint.value);\n\n//     const dataToSend = new Uint8Array([\n//       ...initPrinter,\n//       ...textData,\n//       ...lineFeed,\n//       ...cutPaper\n//     ]);\n\n//     const socket = new Socket();\n\n//     socket.onError = function (errorMessage) {\n//       console.error('Ошибка при подключении к принтеру:', errorMessage);\n//     };\n\n//     socket.onClose = function (hasError) {\n//       console.log('Соединение с принтером закрыто');\n//     };\n\n//     await new Promise((resolve, reject) => {\n//       socket.open(\n//         printerIP.value,\n//         printerPort.value,\n//         function () {\n//           console.log('Подключено к принтеру');\n//           resolve();\n//         },\n//         function (errorMessage) {\n//           console.error('Не удалось подключиться к принтеру:', errorMessage);\n//           reject(errorMessage);\n//         }\n//       );\n//     });\n\n//     socket.write(dataToSend);\n\n//     socket.shutdownWrite();\n\n//     console.log('Чек успешно напечатан');\n//   } catch (error) {\n//     console.error('Ошибка при печати чека:', error);\n//   }\n// };\n</script>\n",
                "name": "StatusHistory.vue",
                "size": 3562,
                "type": "source"
              }
            ]
          },
          "elements": {
            "_files": [
              {
                "path": "../../src/modules/orders/components/elements/PriceTotal.vue",
                "relativePath": "modules/orders/components/elements/PriceTotal.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"total-calculations\">\n    <!-- Base price calculation -->\n    <p class=\"flex flex-nowrap pd-t-small\">\n      <span class=\"w-100 t-transp\">{{ t('subtotal') }}</span>\n      <span class=\"w-100 t-right\">{{currency}}{{totalPrice}}</span>\n    </p>\n    \n    <!-- Platform fee (conditional) -->\n    <p v-if=\"showFees\" class=\"flex flex-nowrap pd-t-small\">\n      <span class=\"w-100 t-transp\">{{ t('feesRate') }}</span>\n      <span class=\"w-100 t-right\">{{currency}}{{feesRate}}</span>\n    </p>\n    \n    <!-- VAT calculation (conditional) -->\n    <p v-if=\"showVat\" class=\"flex flex-nowrap pd-t-small\">\n      <span class=\"w-100 t-transp\">{{ t('vat', { rate: vatRate * 100 }) }}</span>\n      <span class=\"w-100 t-right\">{{currency}}{{vatAmount}}</span>\n    </p>\n\n    <!-- Delivery fee (conditional) -->\n    <p v-if=\"showDeliveryFee\" class=\"flex flex-nowrap br-black-transp-10 br-solid br-b pd-b-small pd-t-small\">\n      <span class=\"w-100 t-transp\">{{ t('delivery') }}</span>\n      <span class=\"w-100 t-right\">{{currency}}{{deliveryAmount}}</span>\n    </p>\n    \n    <!-- Grand total -->\n    <p class=\"p-big flex flex-nowrap pd-b-small pd-t-small\">\n      <span class=\"w-100 t-medium\">{{ t('intotal') }}</span>\n      <span class=\"w-100 t-main t-medium t-right\">{{currency}}{{grandTotal}}</span>\n    </p>\n  </div>\n</template>\n\n\n<script setup>\nimport { computed } from 'vue';\nimport { useI18n } from 'vue-i18n';\n\nconst props = defineProps({\n  totalPrice: {\n    type: Number,\n    required: true\n  },\n  currency: {\n    type: String,\n    required: true\n  },\n  showFees: {\n    type: Boolean,\n    default: false\n  },\n  feesRate: {\n    type: Number,\n    default: 0\n  },\n  showVat: {\n    type: Boolean,\n    default: false\n  },\n  vatRate: {\n    type: Number,\n    default: 0\n  },\n  showDeliveryFee: {\n    type: Boolean,\n    default: false\n  },\n  deliveryRate: {\n    type: Number,\n    default: 0\n  }\n});\n\nconst text = {\n  messages: {\n    en: {\n      subtotal: 'Subtotal',\n      feesRate: 'Platform Fee',\n      vat: 'VAT ({rate}%)',\n      delivery: 'Delivery',\n      intotal: 'In Total'\n    },\n    ru: {\n      subtotal: 'Подытог',\n      feesRate: 'Плата за платформу',\n      vat: 'НДС ({rate}%)',\n      delivery: 'Доставка',\n      intotal: 'Итого'\n    }\n  }\n};\n\nconst { t } = useI18n(text);\n\nconst formatPrice = (value) => value.toFixed(0);\n\nconst vatAmount = computed(() => {\n  if (!props.showVat) return 0;\n  return formatPrice(props.totalPrice * props.vatRate);\n});\n\nconst feesRate = computed(() => {\n  if (!props.showFees) return 0;\n  return formatPrice(props.totalPrice * props.feesRate);\n});\n\nconst deliveryAmount = computed(() => {\n  if (!props.showDeliveryFee) return 0;\n  return formatPrice(props.deliveryRate);\n});\n\nconst grandTotal = computed(() => {\n  return formatPrice(\n    parseFloat(props.totalPrice) +\n    parseFloat(feesRate.value) +\n    parseFloat(vatAmount.value) +\n    parseFloat(deliveryAmount.value)\n  );\n});\n</script>\n",
                "name": "PriceTotal.vue",
                "size": 2937,
                "type": "source"
              }
            ]
          },
          "icons": {
            "_files": [
              {
                "path": "../../src/modules/orders/components/icons/IconStatusCanceled.vue",
                "relativePath": "modules/orders/components/icons/IconStatusCanceled.vue",
                "extension": ".vue",
                "content": "<template>\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"17\" height=\"17\" viewBox=\"0 0 17 17\" fill=\"none\">\n\t  <path d=\"M8.49414 16.6685C7.62305 16.6685 6.79297 16.5356 6.00391 16.27C5.21484 16.0044 4.49023 15.6294 3.83008 15.145C3.17383 14.6606 2.60352 14.0884 2.11914 13.4282C1.63477 12.772 1.25977 12.0493 0.994141 11.2603C0.728516 10.4712 0.595703 9.64111 0.595703 8.77002C0.595703 7.89502 0.728516 7.06299 0.994141 6.27393C1.25977 5.48486 1.63477 4.76221 2.11914 4.10596C2.60352 3.4458 3.17383 2.87549 3.83008 2.39502C4.49023 1.91064 5.21484 1.53564 6.00391 1.27002C6.79297 1.00049 7.62305 0.865723 8.49414 0.865723C9.36914 0.865723 10.2012 1.00049 10.9902 1.27002C11.7793 1.53564 12.502 1.91064 13.1582 2.39502C13.8184 2.87549 14.3887 3.4458 14.8691 4.10596C15.3535 4.76221 15.7285 5.48486 15.9941 6.27393C16.2637 7.06299 16.3984 7.89502 16.3984 8.77002C16.3984 9.64111 16.2637 10.4712 15.9941 11.2603C15.7285 12.0493 15.3535 12.772 14.8691 13.4282C14.3887 14.0884 13.8184 14.6606 13.1582 15.145C12.502 15.6294 11.7793 16.0044 10.9902 16.27C10.2012 16.5356 9.36914 16.6685 8.49414 16.6685ZM8.49414 14.8931C9.17383 14.8931 9.81836 14.7896 10.4277 14.5825C11.041 14.3794 11.6035 14.0903 12.1152 13.7153C12.627 13.3403 13.0703 12.897 13.4453 12.3853C13.8203 11.8735 14.1094 11.313 14.3125 10.7036C14.5195 10.0903 14.623 9.4458 14.623 8.77002C14.623 8.09033 14.5195 7.4458 14.3125 6.83643C14.1094 6.22314 13.8203 5.66064 13.4453 5.14893C13.0703 4.63721 12.627 4.19385 12.1152 3.81885C11.6035 3.44385 11.041 3.15479 10.4277 2.95166C9.81836 2.74463 9.17383 2.64111 8.49414 2.64111C7.81836 2.64111 7.17383 2.74463 6.56055 2.95166C5.95117 3.15479 5.39062 3.44385 4.87891 3.81885C4.36719 4.19385 3.92383 4.63721 3.54883 5.14893C3.17383 5.66064 2.88281 6.22314 2.67578 6.83643C2.47266 7.4458 2.37109 8.09033 2.37109 8.77002C2.37109 9.4458 2.47266 10.0903 2.67578 10.7036C2.88281 11.313 3.17383 11.8735 3.54883 12.3853C3.92383 12.897 4.36719 13.3403 4.87891 13.7153C5.39062 14.0903 5.95117 14.3794 6.56055 14.5825C7.17383 14.7896 7.81836 14.8931 8.49414 14.8931ZM6.36133 12.2212C6.14648 12.2212 5.9707 12.1567 5.83398 12.0278C5.69727 11.8989 5.62891 11.7329 5.62891 11.5298C5.62891 11.3501 5.69727 11.1665 5.83398 10.979L7.48633 8.71729L5.89844 6.5376C5.75 6.33838 5.67578 6.14502 5.67578 5.95752C5.67578 5.75439 5.74609 5.58643 5.88672 5.45361C6.03125 5.31689 6.21094 5.24854 6.42578 5.24854C6.59375 5.24854 6.73242 5.28369 6.8418 5.354C6.95117 5.42432 7.06445 5.55127 7.18164 5.73486L8.51172 7.72119H8.57031L9.85938 5.74072C9.97266 5.55713 10.084 5.43018 10.1934 5.35986C10.3027 5.28564 10.4395 5.24854 10.6035 5.24854C10.8223 5.24854 11 5.31494 11.1367 5.44775C11.2773 5.57666 11.3477 5.74268 11.3477 5.9458C11.3477 6.12549 11.2754 6.31104 11.1309 6.50244L9.48438 8.73486L11.1191 10.9556C11.2598 11.1431 11.3301 11.3286 11.3301 11.5122C11.3301 11.7231 11.2598 11.895 11.1191 12.0278C10.9824 12.1567 10.8027 12.2212 10.5801 12.2212C10.4121 12.2212 10.2734 12.186 10.1641 12.1157C10.0586 12.0415 9.94727 11.9106 9.83008 11.7231L8.50586 9.74268H8.45898L7.11133 11.7231C6.98633 11.9146 6.87109 12.0454 6.76562 12.1157C6.66016 12.186 6.52539 12.2212 6.36133 12.2212Z\" :fill=\"fill\"/>\n\t</svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  }\n\t})\n</script>",
                "name": "IconStatusCanceled.vue",
                "size": 3323,
                "type": "source"
              },
              {
                "path": "../../src/modules/orders/components/icons/IconStatusConfirmed.vue",
                "relativePath": "modules/orders/components/icons/IconStatusConfirmed.vue",
                "extension": ".vue",
                "content": "<template>\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"17\" viewBox=\"0 0 20 17\" fill=\"none\">\n  <path d=\"M8.5 16.6677C7.63281 16.6677 6.80469 16.533 6.01562 16.2634C5.23047 15.9978 4.50781 15.6228 3.84766 15.1384C3.19141 14.6541 2.61914 14.0818 2.13086 13.4216C1.64648 12.7615 1.26953 12.0388 1 11.2537C0.734375 10.4646 0.601562 9.63647 0.601562 8.76929C0.601562 7.9021 0.734375 7.07593 1 6.29077C1.26953 5.50171 1.64648 4.77905 2.13086 4.1228C2.61523 3.46265 3.18555 2.89038 3.8418 2.40601C4.50195 1.91772 5.22461 1.54077 6.00977 1.27515C6.79883 1.00562 7.62695 0.87085 8.49414 0.87085C9.29883 0.87085 10.0684 0.988037 10.8027 1.22241C11.541 1.45288 12.2246 1.78101 12.8535 2.20679C13.4863 2.62866 14.0469 3.13062 14.5352 3.71265C15.0234 4.29077 15.4219 4.9314 15.7305 5.63452C16.043 6.33374 16.2441 7.07397 16.334 7.85522C16.166 7.81226 15.9941 7.77905 15.8184 7.75562C15.6426 7.73218 15.4648 7.71851 15.2852 7.7146C15.1562 7.7146 15.0273 7.72046 14.8984 7.73218C14.7734 7.73999 14.6523 7.75562 14.5352 7.77905C14.4414 7.19702 14.2695 6.64819 14.0195 6.13257C13.7734 5.61304 13.4629 5.14038 13.0879 4.7146C12.7129 4.28882 12.2852 3.92163 11.8047 3.61304C11.3281 3.30054 10.8086 3.06226 10.2461 2.89819C9.6875 2.73022 9.10352 2.64624 8.49414 2.64624C7.81445 2.64624 7.16797 2.74976 6.55469 2.95679C5.94531 3.15991 5.38477 3.44897 4.87305 3.82397C4.36523 4.19507 3.92383 4.63647 3.54883 5.14819C3.17773 5.65601 2.88867 6.21655 2.68164 6.82983C2.47852 7.44312 2.37695 8.0896 2.37695 8.76929C2.37695 9.44897 2.47852 10.0955 2.68164 10.7087C2.88867 11.3181 3.17773 11.8787 3.54883 12.3904C3.92383 12.9021 4.36719 13.3435 4.87891 13.7146C5.39062 14.0896 5.95117 14.3806 6.56055 14.5876C7.17383 14.7947 7.82031 14.8982 8.5 14.8982C8.85938 14.8982 9.20898 14.8669 9.54883 14.8044C9.89258 14.7419 10.2227 14.6521 10.5391 14.5349C10.6367 14.824 10.7637 15.0974 10.9199 15.3552C11.0762 15.6169 11.2578 15.8572 11.4648 16.0759C11.0078 16.2673 10.5293 16.4138 10.0293 16.5154C9.5332 16.6169 9.02344 16.6677 8.5 16.6677ZM15.1797 16.6501C14.6406 16.6501 14.1328 16.5486 13.6562 16.3455C13.1836 16.1423 12.7656 15.8591 12.4023 15.4958C12.0391 15.1326 11.7539 14.7126 11.5469 14.2361C11.3438 13.7634 11.2422 13.2576 11.2422 12.7185C11.2422 12.1794 11.3438 11.6736 11.5469 11.2009C11.7539 10.7283 12.0391 10.3103 12.4023 9.94702C12.7656 9.58374 13.1836 9.30054 13.6562 9.09741C14.1328 8.89038 14.6406 8.78687 15.1797 8.78687C15.7188 8.78687 16.2246 8.89038 16.6973 9.09741C17.1738 9.30054 17.5918 9.58374 17.9512 9.94702C18.3145 10.3064 18.5977 10.7244 18.8008 11.2009C19.0039 11.6736 19.1055 12.1794 19.1055 12.7185C19.1055 13.2537 19.002 13.7576 18.7949 14.2302C18.5918 14.7068 18.3086 15.1267 17.9453 15.49C17.582 15.8533 17.1621 16.1365 16.6855 16.3396C16.2129 16.5466 15.7109 16.6501 15.1797 16.6501ZM14.6875 14.8513C14.9023 14.8513 15.0664 14.7771 15.1797 14.6287L17.3477 11.6814C17.3867 11.6267 17.4141 11.5701 17.4297 11.5115C17.4492 11.449 17.459 11.3904 17.459 11.3357C17.459 11.1716 17.4004 11.031 17.2832 10.9138C17.166 10.7966 17.0254 10.738 16.8613 10.738C16.6504 10.738 16.4824 10.8259 16.3574 11.0017L14.6406 13.3689L13.8262 12.4607C13.7754 12.4021 13.7129 12.3572 13.6387 12.3259C13.5645 12.2908 13.4805 12.2732 13.3867 12.2732C13.2305 12.2732 13.0898 12.3259 12.9648 12.4314C12.8398 12.5369 12.7773 12.6853 12.7773 12.8767C12.7773 12.9548 12.793 13.031 12.8242 13.1052C12.8594 13.1794 12.9043 13.2478 12.959 13.3103L14.207 14.6638C14.2695 14.7302 14.3438 14.7771 14.4297 14.8044C14.5195 14.8357 14.6055 14.8513 14.6875 14.8513Z\" :fill=\"fill\"/>\n</svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  }\n\t})\n</script>",
                "name": "IconStatusConfirmed.vue",
                "size": 3706,
                "type": "source"
              },
              {
                "path": "../../src/modules/orders/components/icons/IconStatusCreated.vue",
                "relativePath": "modules/orders/components/icons/IconStatusCreated.vue",
                "extension": ".vue",
                "content": "<template>\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"17\" height=\"17\" viewBox=\"0 0 17 17\" fill=\"none\">\n  <path d=\"M8.49414 16.6675C7.62305 16.6675 6.79297 16.5347 6.00391 16.269C5.21484 16.0034 4.49023 15.6284 3.83008 15.144C3.17383 14.6597 2.60352 14.0874 2.11914 13.4272C1.63477 12.771 1.25977 12.0483 0.994141 11.2593C0.728516 10.4702 0.595703 9.64014 0.595703 8.76904C0.595703 7.89404 0.728516 7.06201 0.994141 6.27295C1.25977 5.48389 1.63477 4.76123 2.11914 4.10498C2.60352 3.44482 3.17383 2.87451 3.83008 2.39404C4.49023 1.90967 5.21484 1.53467 6.00391 1.26904C6.79297 0.999512 7.62305 0.864746 8.49414 0.864746C9.36914 0.864746 10.2012 0.999512 10.9902 1.26904C11.7793 1.53467 12.502 1.90967 13.1582 2.39404C13.8184 2.87451 14.3887 3.44482 14.8691 4.10498C15.3535 4.76123 15.7285 5.48389 15.9941 6.27295C16.2637 7.06201 16.3984 7.89404 16.3984 8.76904C16.3984 9.64014 16.2637 10.4702 15.9941 11.2593C15.7285 12.0483 15.3535 12.771 14.8691 13.4272C14.3887 14.0874 13.8184 14.6597 13.1582 15.144C12.502 15.6284 11.7793 16.0034 10.9902 16.269C10.2012 16.5347 9.36914 16.6675 8.49414 16.6675ZM8.49414 14.8921C9.17383 14.8921 9.81836 14.7886 10.4277 14.5815C11.041 14.3784 11.6035 14.0894 12.1152 13.7144C12.627 13.3394 13.0703 12.896 13.4453 12.3843C13.8203 11.8726 14.1094 11.312 14.3125 10.7026C14.5195 10.0894 14.623 9.44482 14.623 8.76904C14.623 8.08936 14.5195 7.44482 14.3125 6.83545C14.1094 6.22217 13.8203 5.65967 13.4453 5.14795C13.0703 4.63623 12.627 4.19287 12.1152 3.81787C11.6035 3.44287 11.041 3.15381 10.4277 2.95068C9.81836 2.74365 9.17383 2.64014 8.49414 2.64014C7.81836 2.64014 7.17383 2.74365 6.56055 2.95068C5.95117 3.15381 5.39062 3.44287 4.87891 3.81787C4.36719 4.19287 3.92383 4.63623 3.54883 5.14795C3.17383 5.65967 2.88281 6.22217 2.67578 6.83545C2.47266 7.44482 2.37109 8.08936 2.37109 8.76904C2.37109 9.44482 2.47266 10.0894 2.67578 10.7026C2.88281 11.312 3.17383 11.8726 3.54883 12.3843C3.92383 12.896 4.36719 13.3394 4.87891 13.7144C5.39062 14.0894 5.95117 14.3784 6.56055 14.5815C7.17383 14.7886 7.81836 14.8921 8.49414 14.8921Z\" :fill=\"fill\" />\n</svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  }\n\t})\n</script>",
                "name": "IconStatusCreated.vue",
                "size": 2230,
                "type": "source"
              },
              {
                "path": "../../src/modules/orders/components/icons/IconStatusDelay.vue",
                "relativePath": "modules/orders/components/icons/IconStatusDelay.vue",
                "extension": ".vue",
                "content": "<template>\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"17\" viewBox=\"0 0 20 17\" fill=\"none\">\n\t  <path d=\"M8.5 16.668C7.63281 16.668 6.80469 16.5332 6.01562 16.2637C5.23047 15.998 4.50781 15.623 3.84766 15.1387C3.19141 14.6543 2.61914 14.082 2.13086 13.4219C1.64648 12.7617 1.26953 12.0391 1 11.2539C0.734375 10.4648 0.601562 9.63672 0.601562 8.76953C0.601562 7.90234 0.734375 7.07617 1 6.29102C1.26953 5.50195 1.64648 4.7793 2.13086 4.12305C2.61523 3.46289 3.18555 2.89062 3.8418 2.40625C4.50195 1.91797 5.22461 1.54102 6.00977 1.27539C6.79883 1.00586 7.62695 0.871094 8.49414 0.871094C9.29883 0.871094 10.0703 0.988281 10.8086 1.22266C11.5469 1.45312 12.2305 1.78125 12.8594 2.20703C13.4922 2.62891 14.0527 3.13086 14.541 3.71289C15.0293 4.29492 15.4277 4.9375 15.7363 5.64062C16.0488 6.33984 16.25 7.08008 16.3398 7.86133C16.0547 7.7832 15.752 7.73828 15.4316 7.72656C15.1113 7.71484 14.8105 7.73633 14.5293 7.79102C14.4395 7.20508 14.2695 6.65234 14.0195 6.13281C13.7734 5.61328 13.4629 5.14062 13.0879 4.71484C12.7129 4.28906 12.2852 3.92188 11.8047 3.61328C11.3281 3.30078 10.8086 3.0625 10.2461 2.89844C9.6875 2.73047 9.10352 2.64648 8.49414 2.64648C7.81445 2.64648 7.16797 2.75 6.55469 2.95703C5.94531 3.16016 5.38477 3.44922 4.87305 3.82422C4.36523 4.19531 3.92383 4.63672 3.54883 5.14844C3.17773 5.65625 2.88867 6.2168 2.68164 6.83008C2.47852 7.44336 2.37695 8.08984 2.37695 8.76953C2.37695 9.44922 2.47852 10.0957 2.68164 10.709C2.88867 11.3184 3.17773 11.8789 3.54883 12.3906C3.92383 12.9023 4.36719 13.3438 4.87891 13.7148C5.39062 14.0898 5.95117 14.3809 6.56055 14.5879C7.17383 14.7949 7.82031 14.8984 8.5 14.8984C8.85938 14.8984 9.20898 14.8672 9.54883 14.8047C9.89258 14.7422 10.2246 14.6523 10.5449 14.5352C10.6426 14.8203 10.7695 15.0938 10.9258 15.3555C11.0859 15.6172 11.2695 15.8574 11.4766 16.0762C11.0156 16.2676 10.5352 16.4141 10.0352 16.5156C9.53516 16.6172 9.02344 16.668 8.5 16.668ZM4.79688 9.83594C4.61328 9.83594 4.45703 9.77148 4.32812 9.64258C4.19922 9.51367 4.13477 9.35742 4.13477 9.17383C4.13477 8.98633 4.19922 8.83008 4.32812 8.70508C4.45703 8.57617 4.61328 8.51172 4.79688 8.51172H7.83789V4.33984C7.83789 4.15625 7.90039 4.00195 8.02539 3.87695C8.1543 3.74805 8.31055 3.68359 8.49414 3.68359C8.68164 3.68359 8.83789 3.74805 8.96289 3.87695C9.0918 4.00195 9.15625 4.15625 9.15625 4.33984V9.17383C9.15625 9.35742 9.0918 9.51367 8.96289 9.64258C8.83789 9.77148 8.68164 9.83594 8.49414 9.83594H4.79688ZM15.1797 16.6504C14.6406 16.6504 14.1328 16.5488 13.6562 16.3457C13.1836 16.1426 12.7656 15.8594 12.4023 15.4961C12.0391 15.1328 11.7539 14.7129 11.5469 14.2363C11.3438 13.7637 11.2422 13.2578 11.2422 12.7188C11.2422 12.1797 11.3438 11.6738 11.5469 11.2012C11.7539 10.7285 12.0391 10.3105 12.4023 9.94727C12.7656 9.58398 13.1836 9.30078 13.6562 9.09766C14.1328 8.89062 14.6406 8.78711 15.1797 8.78711C15.7188 8.78711 16.2246 8.89062 16.6973 9.09766C17.1738 9.30078 17.5918 9.58398 17.9512 9.94727C18.3145 10.3066 18.5977 10.7246 18.8008 11.2012C19.0039 11.6738 19.1055 12.1797 19.1055 12.7188C19.1055 13.2539 19.002 13.7578 18.7949 14.2305C18.5918 14.707 18.3086 15.127 17.9453 15.4902C17.582 15.8535 17.1621 16.1367 16.6855 16.3398C16.2129 16.5469 15.7109 16.6504 15.1797 16.6504ZM14.1484 14.5703L15.1855 13.5273L16.1699 14.5059C16.2793 14.6152 16.4102 14.668 16.5625 14.6641C16.7188 14.6641 16.8516 14.6094 16.9609 14.5C17.0703 14.3945 17.125 14.2637 17.125 14.1074C17.125 13.9551 17.0703 13.8242 16.9609 13.7148L15.9824 12.7363L17.0254 11.6934C17.1387 11.584 17.1895 11.4512 17.1777 11.2949C17.1699 11.1348 17.1113 11 17.002 10.8906C16.8926 10.7812 16.7598 10.7227 16.6035 10.7148C16.4473 10.707 16.3125 10.7598 16.1992 10.873L15.1621 11.9102L14.1777 10.9316C14.0684 10.8262 13.9355 10.7734 13.7793 10.7734C13.627 10.7734 13.4961 10.8262 13.3867 10.9316C13.2773 11.041 13.2227 11.1738 13.2227 11.3301C13.2266 11.4824 13.2812 11.6133 13.3867 11.7227L14.3652 12.7129L13.3281 13.7441C13.2148 13.8574 13.1602 13.9941 13.1641 14.1543C13.1719 14.3145 13.2305 14.4492 13.3398 14.5586C13.4492 14.6641 13.584 14.7207 13.7441 14.7285C13.9043 14.7363 14.0391 14.6836 14.1484 14.5703Z\" :fill=\"fill\"/>\n\t</svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  }\n\t})\n</script>",
                "name": "IconStatusDelay.vue",
                "size": 4289,
                "type": "source"
              },
              {
                "path": "../../src/modules/orders/components/icons/IconStatusFinished.vue",
                "relativePath": "modules/orders/components/icons/IconStatusFinished.vue",
                "extension": ".vue",
                "content": "<template>\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"17\" height=\"17\" viewBox=\"0 0 17 17\" fill=\"none\">\n\t  <path d=\"M8.49414 16.6682C7.62305 16.6682 6.79297 16.5354 6.00391 16.2698C5.21484 16.0042 4.49023 15.6292 3.83008 15.1448C3.17383 14.6604 2.60352 14.0881 2.11914 13.428C1.63477 12.7717 1.25977 12.0491 0.994141 11.26C0.728516 10.4709 0.595703 9.64087 0.595703 8.76978C0.595703 7.89478 0.728516 7.06274 0.994141 6.27368C1.25977 5.48462 1.63477 4.76196 2.11914 4.10571C2.60352 3.44556 3.17383 2.87524 3.83008 2.39478C4.49023 1.9104 5.21484 1.5354 6.00391 1.26978C6.79297 1.00024 7.62305 0.865479 8.49414 0.865479C9.36914 0.865479 10.2012 1.00024 10.9902 1.26978C11.7793 1.5354 12.502 1.9104 13.1582 2.39478C13.8184 2.87524 14.3887 3.44556 14.8691 4.10571C15.3535 4.76196 15.7285 5.48462 15.9941 6.27368C16.2637 7.06274 16.3984 7.89478 16.3984 8.76978C16.3984 9.64087 16.2637 10.4709 15.9941 11.26C15.7285 12.0491 15.3535 12.7717 14.8691 13.428C14.3887 14.0881 13.8184 14.6604 13.1582 15.1448C12.502 15.6292 11.7793 16.0042 10.9902 16.2698C10.2012 16.5354 9.36914 16.6682 8.49414 16.6682ZM8.49414 14.8928C9.17383 14.8928 9.81836 14.7893 10.4277 14.5823C11.041 14.3792 11.6035 14.0901 12.1152 13.7151C12.627 13.3401 13.0703 12.8967 13.4453 12.385C13.8203 11.8733 14.1094 11.3127 14.3125 10.7034C14.5195 10.0901 14.623 9.44556 14.623 8.76978C14.623 8.09009 14.5195 7.44556 14.3125 6.83618C14.1094 6.2229 13.8203 5.6604 13.4453 5.14868C13.0703 4.63696 12.627 4.1936 12.1152 3.8186C11.6035 3.4436 11.041 3.15454 10.4277 2.95142C9.81836 2.74438 9.17383 2.64087 8.49414 2.64087C7.81836 2.64087 7.17383 2.74438 6.56055 2.95142C5.95117 3.15454 5.39062 3.4436 4.87891 3.8186C4.36719 4.1936 3.92383 4.63696 3.54883 5.14868C3.17383 5.6604 2.88281 6.2229 2.67578 6.83618C2.47266 7.44556 2.37109 8.09009 2.37109 8.76978C2.37109 9.44556 2.47266 10.0901 2.67578 10.7034C2.88281 11.3127 3.17383 11.8733 3.54883 12.385C3.92383 12.8967 4.36719 13.3401 4.87891 13.7151C5.39062 14.0901 5.95117 14.3792 6.56055 14.5823C7.17383 14.7893 7.81836 14.8928 8.49414 14.8928ZM7.69141 12.3674C7.54688 12.3674 7.41406 12.3342 7.29297 12.2678C7.17578 12.2014 7.06641 12.1057 6.96484 11.9807L5.20703 9.87134C5.0625 9.69556 4.99023 9.51587 4.99023 9.33228C4.99023 9.13306 5.06055 8.96509 5.20117 8.82837C5.3457 8.68774 5.51562 8.61743 5.71094 8.61743C5.82812 8.61743 5.93359 8.64087 6.02734 8.68774C6.125 8.73462 6.21875 8.8147 6.30859 8.92798L7.67383 10.6038L10.5391 6.01001C10.7109 5.73657 10.9238 5.59985 11.1777 5.59985C11.373 5.59985 11.5449 5.66431 11.6934 5.79321C11.8457 5.92212 11.9219 6.08618 11.9219 6.2854C11.9219 6.36743 11.9043 6.45337 11.8691 6.54321C11.834 6.62915 11.791 6.71509 11.7402 6.80103L8.39453 11.969C8.22266 12.2346 7.98828 12.3674 7.69141 12.3674Z\" :fill=\"fill\"/>\n\t</svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  }\n\t})\n</script>",
                "name": "IconStatusFinished.vue",
                "size": 2912,
                "type": "source"
              },
              {
                "path": "../../src/modules/orders/components/icons/IconStatusInUse.vue",
                "relativePath": "modules/orders/components/icons/IconStatusInUse.vue",
                "extension": ".vue",
                "content": "<template>\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"17\" viewBox=\"0 0 18 17\" fill=\"none\">\n  <path d=\"M9.50023 4.44531C9.67602 4.44531 9.82641 4.50781 9.95141 4.63281C10.0803 4.75781 10.1448 4.91016 10.1448 5.08984V10.3633L9.33031 7.86719L11.8674 11.3066C11.9885 11.4707 12.0413 11.6406 12.0256 11.8164C12.0139 11.9922 11.9338 12.1289 11.7854 12.2266C11.6213 12.3398 11.4514 12.3828 11.2756 12.3555C11.0998 12.3281 10.9455 12.2266 10.8127 12.0508L9.0432 9.71875C8.9807 9.63672 8.93383 9.55469 8.90258 9.47266C8.87133 9.38672 8.8557 9.29883 8.8557 9.20898V5.08984C8.8557 4.91016 8.9182 4.75781 9.0432 4.63281C9.17211 4.50781 9.32445 4.44531 9.50023 4.44531ZM9.50023 16.668C8.71508 16.668 7.94164 16.5469 7.17992 16.3047C6.42211 16.0664 5.72094 15.7305 5.07641 15.2969C4.43578 14.8633 3.89672 14.3555 3.45922 13.7734C3.26 13.5391 3.16625 13.2969 3.17797 13.0469C3.18969 12.8008 3.29125 12.6016 3.48266 12.4492C3.68969 12.2812 3.91234 12.2207 4.15062 12.2676C4.38891 12.3105 4.6018 12.4297 4.7893 12.625C5.16039 13.0859 5.59008 13.4863 6.07836 13.8262C6.56664 14.166 7.09984 14.4277 7.67797 14.6113C8.25609 14.7988 8.86352 14.8926 9.50023 14.8926C10.176 14.8926 10.8205 14.7891 11.4338 14.582C12.0471 14.3789 12.6077 14.0898 13.1155 13.7148C13.6272 13.3398 14.0705 12.8965 14.4455 12.3848C14.8205 11.873 15.1116 11.3125 15.3186 10.7031C15.5256 10.0898 15.6291 9.44531 15.6291 8.76953C15.6291 8.08984 15.5256 7.44531 15.3186 6.83594C15.1116 6.22266 14.8205 5.66016 14.4455 5.14844C14.0705 4.63672 13.6272 4.19336 13.1155 3.81836C12.6077 3.44336 12.0471 3.1543 11.4338 2.95117C10.8205 2.74414 10.176 2.64062 9.50023 2.64062C8.82445 2.64062 8.17992 2.74414 7.56664 2.95117C6.95336 3.1543 6.39086 3.44336 5.87914 3.81836C5.37133 4.19336 4.92992 4.63672 4.55492 5.14844C4.17992 5.66016 3.88891 6.22266 3.68187 6.83594C3.47484 7.44531 3.37133 8.08984 3.37133 8.76953H1.6018C1.6018 7.89453 1.73461 7.0625 2.00023 6.27344C2.26586 5.48438 2.63891 4.76172 3.11937 4.10547C3.60375 3.44531 4.17602 2.875 4.83617 2.39453C5.49633 1.91016 6.22094 1.53516 7.01 1.26953C7.79906 1 8.62914 0.865234 9.50023 0.865234C10.3713 0.865234 11.2014 1 11.9905 1.26953C12.7795 1.53516 13.5022 1.91016 14.1584 2.39453C14.8186 2.875 15.3909 3.44531 15.8752 4.10547C16.3596 4.76172 16.7346 5.48438 17.0002 6.27344C17.2659 7.0625 17.3987 7.89453 17.3987 8.76953C17.3987 9.64062 17.2659 10.4707 17.0002 11.2598C16.7346 12.0488 16.3596 12.7715 15.8752 13.4277C15.3909 14.0879 14.8186 14.6602 14.1584 15.1445C13.5022 15.6289 12.7795 16.0039 11.9905 16.2695C11.2014 16.5352 10.3713 16.668 9.50023 16.668ZM0.863516 7.24023H4.5432C4.7307 7.24023 4.87133 7.28516 4.96508 7.375C5.05883 7.46484 5.10375 7.57617 5.09984 7.70898C5.09594 7.8418 5.0432 7.97852 4.94164 8.11914L3.12523 10.5918C3.00805 10.748 2.86742 10.8281 2.70336 10.832C2.5393 10.832 2.40062 10.752 2.28734 10.5918L0.465078 8.11914C0.359609 7.98242 0.304922 7.84766 0.301016 7.71484C0.297109 7.57812 0.342031 7.46484 0.435781 7.375C0.533438 7.28516 0.676016 7.24023 0.863516 7.24023Z\" :fill=\"fill\"/>\n</svg>\n</template>\n\n<script setup>\n\tconst props = defineProps({\n\t  fill: {\n\t    type: String,\n\t    default: 'rgb(var(--black))'\n\t  }\n\t})\n</script>",
                "name": "IconStatusInUse.vue",
                "size": 3183,
                "type": "source"
              }
            ]
          },
          "pages": {
            "_files": [
              {
                "path": "../../src/modules/orders/components/pages/Favorites.vue",
                "relativePath": "modules/orders/components/pages/Favorites.vue",
                "extension": ".vue",
                "content": "<template>\n\t<div class=\"\">\n\t\t<p class=\"mn-b-small t-semi p-big\">Избранное</p>\n\t\t<hr class=\"mn-b-semi\">\n\t\t<div class=\"grid-layout\">\n\t\t\t <p v-if=\"(favorites.length == 0)\" style=\"padding-top: 1.5rem;\"><i>У вас еще нет товаров в избранном. Может стоит что-нибудь добавить?</i></p>\n\t\t\t<CardProduct v-if=\"favorites\" v-for=\"product in favorites\" :product=\"product\" :key=\"product\"></CardProduct>\n\t\t</div>\n\t</div>\n</template>\n\n<script setup=\"props\">\n/////////////////////////////\n// COMPONENT DEPENDENCIES\n/////////////////////////////\nimport { toRefs } from 'vue';\nimport CardProduct from '@/components/blocks/CardProduct.vue';\n\n\n/////////////////////////////\n// HELPERS\n/////////////////////////////\n\n/////////////////////////////\n// CREATED\n/////////////////////////////\nconst props = defineProps({\n  favorites: Array,\n});\n\nconst { favorites } = toRefs(props);\n\n/////////////////////////////\n// MOUNTED\n/////////////////////////////\n</script>\n\n<style lang=\"scss\">\n\t.grid-layout {\n\t\tdisplay: grid;\n\t\tpadding: 0px;\n\t\twidth: 100%; \n\t\tgrid-template-columns: 1fr 1fr 1fr; \n\t\t gap: 2rem; \n    // grid-auto-rows: auto;\n\n\t}\n\n\t.grid-item {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\toverflow: hidden;\n\t\tborder-radius: 0;\n\n\t\tfont-size: 14px;\n\n\t\ttransition: all 0.5s ease;\n\n\t\tbox-shadow: 32px 16px 100px 0px rgb(0 0 0 / 15%);\n\n\t\tbackground: white;\n\n\t\t.image {\n\t\t\twidth: 100%;\n\t\t\theight: 100%; \n\t\t\tbackground-repeat: no-repeat; \n\t\t\tbackground-position: center center; \n\t\t\tbackground-size: cover;\n\t\t}\n\n\t\t.text {\n\t\t\tpadding: 24px;\n\t\t\tcolor: black;\n\t\t\tbackground: white;\n\t\t\t\n\t\t\th5 {margin-bottom: 8px; }\n\t\t\tspan {opacity: 0.5; } \n\t\t}\n\t}\n</style>",
                "name": "Favorites.vue",
                "size": 1626,
                "type": "source"
              },
              {
                "path": "../../src/modules/orders/components/pages/OrderBackoffice.vue",
                "relativePath": "modules/orders/components/pages/OrderBackoffice.vue",
                "extension": ".vue",
                "content": "<template>\n\t<div v-if=\"order && orderOrganization\" class=\"pd-thin bg-white\"> \n\n\t  <div v-if=\"order\" class=\"mn-b-thin pos-relative w-100 bg-main radius-medium pd-medium\">\n\t  \t<div class=\"mn-b-small flex-nowrap flex\">\n\t\t  \t<p class=\"t-medium p-medium\">\n\t\t     \tOrder No: <span class=\"p-small t-transp\">#{{order._id}}</span>\n\t\t    </p>\n\t\t\t</div>\n\n  \t<div class=\"flex-nowrap flex gap-thin pos-relative \">\n\t    <div v-for=\"(status, index) in globals.state.options.orders.statuses\" :key=\"index\" class=\"w-20\">\n\t      <div\n\t      \tclass=\"bg-white br-anim br-glow radius-extra h-1r w-100\"\n\t        :class=\"\n\t\t\t\t    { 'br-glow-anim': isActiveStatus(index) },\n\t\t\t\t    { 't-transp': !isActiveStatus(index) },\n\t\t\t\t    { 'blink': order.status === status.value && getNextStatus(order.status) }\n\t\t\t\t  \"\n\t      />\n\t      <div \n\t      \t:class=\"{ 't-transp': !isActiveStatus(index) }\"\n\t\t\t\t  class=\"mn-t-thin p-small t-medium uppercase\">{{ status.value }}</div>\n\t    \t</div>\n\t\t  </div>\n\t  </div>\n\n  \t <Popup \n      title=\"Change payment\" \n      @close-popup=\"closePaymentPopup\" \n      :isPopupOpen=\"isOpenPaymentPopup\"\n      class=\"bg-light w-min-25r w-max-25r radius-medium pd-big\"\n    >\n    \t<Select \n        v-model:select=\"selectedPayments.type\"\n        :property=\"'value'\"\n        label=\"Type\"\n        :options=\"[\n          {name: 'Cash',  value: 'cash'}, \n          {name: 'Card', value: 'card'}, \n          {name: 'Bank Transfer', value: 'bank'},\n        ]\"\n        placeholder=\"Select type of payment\" \n        size=\"small\"\n        class=\"bg-white mn-b-thin pd-regular radius-small w-100\"\n      />\n\n      <Select \n        v-model:select=\"selectedPayments.status\"\n        :property=\"'value'\"\n        label=\"Status\"\n        :options=\"[\n          {name: 'Unpaid',  value: 'unpaid'}, \n          {name: 'Paid', value: 'paid'}, \n          {name: 'Refunded', value: 'refunded'},\n        ]\"\n        placeholder=\"Select status of payment\" \n        size=\"small\"\n        class=\"bg-white mn-b-small pd-regular radius-small w-100\"\n      />\n\n\n      <Button :submit=\"changePaymentStatus\"  class=\"t-white w-100 bg-second\">\n\t\t\t\t<span>Change Status</span>\n\t\t\t</Button>\n\t \t</Popup>\n\n\t  <Popup \n      title=\"Change order status\" \n      @close-popup=\"closeStatusPopup\" \n      :isPopupOpen=\"isOpeStatusPopup\"\n      class=\"bg-light w-min-30r w-max-30r radius-medium pd-big\"\n    >\n\n\t\t\t<!-- Добавить выбор примерного времени -->\n\n    \t<ul class=\"flex gap-thin flex-column mn-b-thin\">\n  \t\t\t<CardOrderItem\n  \t\t\t\tv-for=\"(product, index) in order.positions\" :key=\"product._id\"\n  \t\t\t\t:editable=\"true\" \n  \t\t\t\t:product=\"product\" \n  \t\t\t\t:increase=\"product => orders.mutations.incrementItemQuantity(order, product._id)\"\n\t        :decrease=\"product => orders.mutations.decrementItemQuantity(order, product._id)\"\n\t        :remove=\"product => orders.mutations.removeProduct(order, product._id)\"\n\t        @updateRentDates=\"(product, dates) => shopcart.actions.updateRentDates({ positions: order.positions, productId: product._id, dates })\"\n  \t\t\t\tclass=\"bg-white radius-small pd-small\"\n  \t\t\t/>\n      </ul>\n      \n      <PriceTotal \n        :totalPrice=\"cartTotalPrice\"\n        :currency=\"returnCurrency()\"\n        :showFees=\"globals.state.options?.orders?.showFees\"\n        :feesRate=\"globals.state.options?.orders?.feesRate || 0\"\n        :showVat=\"globals.state.options?.orders?.showVat\"\n        :vatRate=\"globals.state.options?.orders?.vatRate || 0\"\n      />\n\n    \t<Button :submit=\"setNextStatus\"  class=\"t-white w-100 bg-second\">\n\t\t\t\t<span>{{'Confirm Changing to ' + (getNextStatus(order.status)).label}}</span>\n\t\t\t</Button>\n\t \t</Popup>\n\n\n\t  \n\t  <div v-if=\"order\" class=\"gap-thin cols-2\">\n\n\t    <div class=\"w-100\">\n\n\n\t\t    <CardOrganization \n\t\t    \tv-if=\"orderOrganization[0]\"\n\t\t      :organization=\"orderOrganization[0]\"\n\t\t      :showRating=\"true\"\n\t\t      :showFollowers=\"false\"\n\t\t      :showProducts=\"false\"\n\t\t      class=\"bg-light mn-b-thin w-100 o-hidden radius-medium pd-small \"\n\t\t    />\n\n\n\t\t    <div \n\t\t    \tclass=\"mn-b-thin bg-light w-100 o-hidden radius-medium \"\n\t\t    >\n\t\t    \t<div class=\"pd-small flex-nowrap flex\">\n\t\t\t    \t<div class=\"mn-r-auto\">\n\t\t\t\t    \t<span class=\"d-block t-medium p-medium\">Order is</span>\n\t\t\t\t\t    <span class=\" t-lh-075 h2 d-block mn-b-small\">{{order.status}}</span>\n\t\t\t\t\t    <p class=\"pd-t-nano pd-b-nano pd-r-thin pd-l-thin radius-extra bg-black t-white w-max\">{{formatDate(order.updatedAt, {language: locale })}}</p>\n\t\t\t\t\t  </div>\n\t\t\t\t\t <!--  <div class=\"t-right\">\n\t\t\t\t\t  \tCancel order<br>\n\t\t\t\t\t  \tExchange item\n\t\t\t\t\t  \t<hr class=\"mn-b-thin mn-t-thin\">\n\t\t\t\t\t  \tFor Delivery Queries Contact Us\n\t\t\t\t\t  \t\n\t\t\t\t\t  </div> -->\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div v-if=\"order.customer.target?.number\" class=\"pd-small flex flex-nowrap flex-v-center br-t br-black-transp-10 br-solid\">\n\t\t\t    \t<p class=\"w-100 t-medium p-medium\">\n\t\t\t      \tPhone\n\t\t\t      </p>\n\n\t\t\t      <p class=\"w-100 t-right \">\n\t\t\t      \t{{order.customer.target?.number || 'Not specified'}}\n\t\t\t      </p>\n\t\t\t    </div>\n\n\t\t\t    <div class=\"pd-small   flex flex-nowrap flex-v-center br-t br-black-transp-10 br-solid\">\n\t\t\t    \t<p class=\"t-medium p-medium\">\n\t\t\t      \tAddress\n\t\t\t      </p>\n\n\t\t\t      <p class=\"w-100 t-right\">\n\t\t\t        {{order.delivery.address || (order.delivery.spot[0].profile.name + ', ' + order.delivery.spot[0].address) || 'Not specified'}} \n\t\t\t      </p>\n\t\t\t    </div>\n\n\t\t\t    <div class=\"pd-small  flex flex-nowrap flex-v-center br-t br-black-transp-10 br-solid\">\n\t\t\t    \t<p class=\"t-medium p-medium\">\n\t\t\t      \tDelivery\n\t\t\t      </p>\n\n\t\t\t      <p class=\"w-100 t-right \">\n\t\t\t        {{order.delivery.type ? order.delivery.type : 'Not specified'}} \n\t\t\t      </p>\n\t\t\t    </div>\n\n\t\t\t     <div class=\"pd-small  flex flex-nowrap flex-v-center br-t br-black-transp-10 br-solid\">\n\t\t\t    \t<p class=\"mn-r-auto t-medium p-medium\">\n\t\t\t      \tPayment\n\t\t\t      </p>\n\n\n\t\t\t      <p class=\"w-max t-right\">\n\t\t\t        {{order.payment.type ? order.payment.type : 'Not specified'}} \n\t\t\t      </p>\n\n\t\t\t      <p @click=\"route.meta.context !== 'user' && route.meta.context !== 'root' ? openPaymentPopup : console.log('hello')\" class=\"w-max pd-thin radius-small bg-second t-white mn-l-thin cursor-pointer hover-bg-black t-right\">\n\t\t\t        {{order.payment.status ? order.payment.status : 'Unpaid'}} \n\t\t\t      </p>\n\t\t\t    </div>\n\n\n\t\t\t\t</div>\n\n\t\t\t\t<div v-if=\"route.meta.context !== 'user' && route.meta.context !== 'root'\" class=\"o-y-scroll bg-light pd-thin mn-b-thin pd-thin radius-medium flex-nowrap flex\">\n\t\t  \t\t<div class=\"flex-child-default mn-r-small w-max flex-v-center gap-thin flex-nowrap flex pd-thin radius-small bg-light-transp-20\">\n\t\t  \t\t\t<IconTime class=\"i-semi t-transp\" fill=\"rgb(var(--black)\" />\n\t\t        <p class=\"t-medium mn-r-auto\"><span class=\"p-small t-transp\">Estimated Reaction</span><br>{{formatDate(order.deadline, { language: locale })}}</p>\n\t\t\t  \t</div>\n\t\t\t  \t<button v-if=\"getNextStatus(order.status)\" @click=\"openStatusPopup\" class=\"flex-child-default  mn-l-auto bg-black t-white button\">  \n\t\t\t\t    Mark as {{ (getNextStatus(order.status)).label }}  \n\t\t\t\t  </button>\n\t\t  \t</div>\n\n\t\t\t<div class=\"bg-light radius-medium pd-medium  mn-r-bold  w-100\">\n\t\t    <h3 class=\"mn-b-small\">Chat With Us</h3>\n\n\t\t    <ChatPage\n\t\t    \t:username=\"['Order', 'UserOrder'].includes(route.name) ? (order.user?.name || 'User') : 'Support'\"\n\t\t    \t:user=\"auth.state.user._id\"\n\t\t    \t:chatID=\"route.params.order\"\n\t\t    \tclass=\"radius-semi bs-black bg-light o-hidden\"\n\t\t    />\n\n\t    </div>\n\t     \t<!-- <StatusHistory \n\t     \t\tv-if=\"orders.state.current.status_history\"\n\t     \t\t:statuses=\"statuses\"\n\t     \t\t:statusHistory=\"orders.state.current.status_history\"\n\t     \t\t:statusCurrent=\"orders.state.current.status\"\n\t     \t\t:edit=\"route.name === 'Order Edit'\"\n\t     \t/> -->\n\n\t     <!-- \t<button \n\t     \t@click=\"requestPayment(order)\"\n\t     \tv-if=\"\n\t     \t\torder.status === 'Подтвержден' \n\t     \t\t&& order.payment.type === 'Online'\n\t     \t\t&& payment.Status !== 'CONFIRMED'\n\t     \t\t&& payment.Status !== 'REFUNDED'\n\t     \t\" \n\t     \tclass='w-100 button'>Оплатить заказ</button> -->\n\t     \t<span class=\"t-transp\" v-if=\"payment && payment.Status === 'CONFIRMED'\">Paid</span> \n\t    </div>  \n\n\t    <div class=\"bg-light radius-medium pd-medium   w-100\">\n\t  \t\t<h3 class=\"mn-b-small\">Order Summary</h3>\n\n\t  \t\t<ul class=\"flex gap-thin flex-column mn-b-thin\">\n\t  \t\t\t<CardOrderItem\n\t  \t\t\t\tv-for=\"(product, index) in order.positions\" :key=\"product._id\"\n\t  \t\t\t\t:editable=\"false\" \n\t  \t\t\t\t:product=\"product\" \n\t  \t\t\t\tclass=\"bg-white radius-small pd-small\"\n\t  \t\t\t/>\n\t      </ul>\n\t      \n\t      <PriceTotal \n          :totalPrice=\"cartTotalPrice\"\n          :deliveryRate=\"deliveryCost\"\n          :currency=\"returnCurrency()\"\n          :showFees=\"globals.state.options?.orders?.showFees\"\n          :feesRate=\"globals.state.options?.orders?.feesRate || 0\"\n          :showVat=\"globals.state.options?.orders?.showVat\"\n          :vatRate=\"globals.state.options?.orders?.vatRate || 0\"\n\t\t\t\t  :showDeliveryFee=\"globals.state.options?.orders.showDeliveryFee\"\n\n        />\n     \t</div>\n\n\t   \n\t  </div>\n\t</div>\t\t\n\n</template>\n\n\n<script setup=\"props\">\n\timport { computed, ref, onMounted  } from 'vue'\n\timport { useRouter, useRoute } from 'vue-router'\n\n\timport Button from '@martyrs/src/components/Button/Button.vue'\n\timport Select from '@martyrs/src/components/Select/Select.vue'\n\timport Popup from \"@martyrs/src/components/Popup/Popup.vue\";\n\n\timport IconTime  from '@martyrs/src/modules/icons/entities/IconTime.vue'\n\n\t// Block\n\timport CardOrderItem  from '@martyrs/src/modules/orders/components/blocks/CardOrderItem.vue'\n\timport CardOrganization from '@martyrs/src/modules/organizations/components/blocks/CardOrganization.vue'\n\n\timport ChatPage from '@martyrs/src/modules/chats/components/pages/ChatPage.vue';\n\n\timport StatusHistory from '@martyrs/src/modules/orders/components/blocks/StatusHistory.vue'\n\timport PriceTotal from '@martyrs/src/modules/orders/components/elements/PriceTotal.vue';\n\timport FormPayment from '@martyrs/src/modules/orders/components/sections/FormPayment.vue'\n\n\timport * as globals \tfrom '@martyrs/src/modules/globals/views/store/globals.js'\n\timport * as auth from '@martyrs/src/modules/auth/views/store/auth.js'\n\timport * as orders \tfrom '@martyrs/src/modules/orders/store/orders.js'\n\timport * as products \tfrom '@martyrs/src/modules/products/store/products.js'\n\timport * as organizations \tfrom '@martyrs/src/modules/organizations/store/organizations.js'\n\n\timport { useI18n } from 'vue-i18n';\n\t\n\tconst { locale } = useI18n();\n\n\tconst router = useRouter()\n\tconst route = useRoute()\n\n\tconst order = ref(null)\n\tconst productsOrganization = ref(null)\n\tconst orderOrganization = ref(null)\n\n\tconst statuses = globals.state.options.orders.statuses\n\tconst statusLabels = ['Created', 'Confirmed', 'Preparing', 'In use', 'Finished'];\n\n  if (route.meta.context === 'user' && \n      auth.state.user && \n      route.params._id !== auth.state.user?._id && \n      !auth.state.access?.roles?.includes('ROLE_MODERATOR') && \n      !auth.state.access?.roles?.includes('ROLE_ADMIN')) {\n    router.push('/401');\n  }\n\n\tconst isOpeStatusPopup = ref(false);\n\tconst selectedMember = ref(null);\n\n\tfunction openStatusPopup(member) {\n\t  isOpeStatusPopup.value = true;\n\t  if (typeof member === \"number\") selectedMember.value = member;\n\t}\n\n\tfunction closeStatusPopup() {\n\t  isOpeStatusPopup.value = false;\n\t  selectedMember.value = null;\n\t}\n\n\tconst isOpenPaymentPopup = ref(false);\n\n\tconst selectedPayments = ref({\n\t\ttype: null,\n\t\tstatus: null\n\t});\n\n\tfunction openPaymentPopup() {\n\t  selectedPayments.value.type = order.value.payment.type\n\t  selectedPayments.value.status = order.value.payment.status\n\n\t  isOpenPaymentPopup.value = true;\n\t}\n\n\tfunction closePaymentPopup() {\n\t  isOpenPaymentPopup.value = false;\n\t}\n\n\tonMounted(async()=>{\n\t\torder.value = await orders.actions.read({_id: route.params.order})\n\t\torder.value = order.value[0]\n\n\t  orderOrganization.value = await organizations.actions.read({\n\t    _id: order.value?.owner.target._id,\n\t    location: globals.state.position?.location,\n\t    lookup: ['spots']\n\t  });\n\n\t})\n\n\nconst deliveryCost = computed(() => {\n  const type = orders.state.current.delivery.type\n  const distance = orderOrganization.value[0]?.distance || 0\n  const config = globals.state.options?.orders?.delivery_formula || {}\n\n  return orders.getters.getDeliveryPrice(type, distance, config)\n})\n\n\tlet cartTotalPrice = computed(() => {\n     return Number(order.value?.positions.reduce((total, product) => {\n      // Проверяем тип листинга\n      if (product.listing === 'rent') {\n        const start = new Date(product.date.start)\n        const end = new Date(product.date.end)\n        const diffTime = Math.abs(end - start)\n        return total + product.price * (Math.ceil(diffTime / (1000 * 60 * 60 * 24)) + 1);\n      } else {\n        // Для обычных товаров умножаем на количество\n        return total + product.price * (product.quantity || 1);\n      }\n    }, 0));\n  })\n\n\n  let cartTotalAmount = computed(() => {\n    return Number(order.value?.positions.reduce((total, product) => {\n      return total + product.quantity;\n    }, 0));\n  })\n\n  // Функция установки нового статуса\n\tasync function setStatus (newStatus) {\n\t  orders.state.current.status = newStatus\n\n\t  await orders.actions.update(orders.state.current)\n\t} \n\n\n\tfunction getNextStatus(currentStatus) {\n\t  const currentIndex = globals.state.options.orders.statuses.findIndex(status => status.value === currentStatus);\n\n\t  if (currentIndex !== -1 && currentIndex + 1 < statuses.length) {\n\t    return globals.state.options.orders.statuses[currentIndex + 1];\n\t  }\n\t  return null; // If next status doesn't exist\n\t}\n\n\tconst isActiveStatus = (index) => {\n\t  return globals.state.options.orders.statuses.slice(index).some(status => status.value === order.value.status);\n\t};\n\n  async function changePaymentStatus() {\n    if (selectedPayments.value.status && selectedPayments.value.type) {\n      orders.state.current.payment = selectedPayments.value;\n\n      await orders.actions.update(orders.state.current)\n    } else {\n      console.error('Payment status is void. Must handle somehow.');\n    }\n\n\t\tclosePaymentPopup()\n  }\n\n  async function setNextStatus() {\n    const nextStatus = getNextStatus(orders.state.current.status);\n\n    if (nextStatus) {\n      orders.state.current.status = nextStatus.value;\n\n      await orders.actions.update(orders.state.current)\n    } else {\n      console.error('Next status is void. Must handle somehow.');\n    }\n\n\t\tcloseStatusPopup()\n  }\n\n  async function cancelOrder() {\n  \talert()\n\n    orders.state.current.status = 'canceled';\n\n    await orders.actions.update(orders.state.current)\n}\n\n\n  async function confirmOrder() {\n  \talert()\n\n    orders.state.current.status = 'confirmed';\n\n    await orders.actions.update(orders.state.current)\n\t}\n\n\tfunction calculateDeliveryTime(distance, date) {\n\t  if (!distance) {\n\t    return null;\n\t  }\n\n\t  const basePreparationTime = 10 * 60 * 1000; // Convert to milliseconds\n\t  const travelTime = Math.ceil((15 + 5 + 3 * distance) / 5) * 5 * 60 * 1000;\n\n\t  // Преобразование даты начала в миллисекунды и добавление времени подготовки и доставки\n\t  const startTime = new Date(date).getTime();\n\t  const estimatedDeliveryTime = new Date(startTime + basePreparationTime + travelTime);\n\n\t  return estimatedDeliveryTime;\n\t}\n\n\n</script>\n\n<style lang=\"scss\" scoped>\n\t.blink {\n\t  animation: blink-animation 1s ease infinite;\n\t}\n\n\t@keyframes blink-animation {\n\t  0%, 100% {\n\t    opacity: 1;\n\t  }\n\t  50% {\n\t    opacity: 0.8;\n\t  }\n\t}\n</style>",
                "name": "OrderBackoffice.vue",
                "size": 15471,
                "type": "source"
              },
              {
                "path": "../../src/modules/orders/components/pages/OrderCreate.vue",
                "relativePath": "modules/orders/components/pages/OrderCreate.vue",
                "extension": ".vue",
                "content": "<template>\n\n<section class=\"bg-white pd-thin\">\n\n\t<!-- Ask to login  -->\n\t<AskToLogin class=\"mn-b-thin\" v-if=\"auth.state.access.status === false\" /> \n\n\t<!-- Empty State   -->\n\t<EmptyState  \n\t\tv-if=\"shopcart.state.positions < 1\" \n\t/>\t\n\t<Succes \n\t\tv-if=\"order.status === true && shopcart.state.positions.length > 0\" \n\t\t:order=\"order\" \n\t/>\n\t<!-- Уведомления о минимальной сумме заказа и времени работы -->\n\t<div v-if=\"shopcart.state.positions.length > 0\" class=\"w-100 gap-thin cols-1 mn-b-thin\">\n\t\t<div v-if=\"!isOpen\" class=\"bg-fifth-nano pd-small radius-medium t-center\">\n\t\t\t<p class=\"t-fourth\">⚠️ This spot is currently closed. You can place an order, but it will be processed when the spot opens.</p>\n\t\t</div>\n\t\t<div v-if=\"cartTotalPrice < minOrderAmount\" class=\"bg-fourth-nano pd-small radius-medium t-center\">\n\t\t\t<p class=\"t-fourth\">⚠️ Minimum order amount is {{ formatPrice(minOrderAmount) }}. Your current total is {{ formatPrice(cartTotalPrice) }}.</p>\n\t\t</div>\n\t</div>\n\t<!-- Order form -->\n\t<div class=\"gap-small mn-b-thin cols-2\">\n\t\t<!-- Order Form -->\n\t\t<div\n\t\t\tv-if=\"orders.state.current.status !== true && shopcart.state.positions.length > 0\" \n\t\t\tclass=\"rows-1 gap-thin\"\n\t\t>\n\t\t\t<FormCustomerDetails\n\t\t\t\t:customer=\"orders.state.current.customer\"\n\t\t\t/>\n\t\t\t<FormPayment \t\n\t\t\t\tv-if=\"orders.state.current.status !== true && shopcart.state.positions.length > 0\"\n\t\t\t\t:order=\"orders.state.current\"  \n\t\t\t\t:organization=\"orderOrganization[0]\" \n\t\t\t/>\n\t\t\t<FormDelivery \t\n\t\t\t\tv-if=\"orders.state.current.status !== true && shopcart.state.positions.length > 0\"\n\t\t\t\t:order=\"orders.state.current\" \n\t\t\t\t:organization=\"orderOrganization[0]\" \n\t\t\t/>\n\t\t\t\n\t\t</div>\n\n\t\t<!-- Order positions -->\n\t\t<div \n\t\t\tv-if=\"shopcart.state.positions.length > 0\" \n\t\t\tclass=\"bg-white br-solid br-light br-1px pd-medium radius-medium\"\n\t\t>\n\t\t\t<h4 class=\"font-second mn-b-thin\">Your Order</h4>\n\n\t\t\t<ul class=\"flex gap-thin flex-wrap mn-b-thin\">\n\t\t\t\t<CardOrderItem \n\t\t\t\t\tv-for=\"product in shopcart.state.positions\" \n\t\t\t\t\t:key=\"product._id\" \n\t\t\t\t\t:editable=\"true\" \n\t\t\t\t\t:product=\"product\" \n\t        :increase=\"product => shopcart.actions.incrementItemQuantity(product._id)\"\n\t        :decrease=\"product => shopcart.actions.decrementItemQuantity(product._id)\"\n\t        :remove=\"product => shopcart.actions.removeProduct(product._id)\"\n\t\t\t\t\t@updateRentDates=\"(product, dates) => shopcart.actions.updateRentDates({ productId: product._id, dates })\"\n\t        class=\"w-100 bg-white \"\n\t      />\n\t\t\t</ul>\n\n\t\t\t\t<div \n\t\t\t\tclass=\"mn-b-thin\"\n\t\t\t>\t\n\t\t\t\t<PriceTotal \n          :totalPrice=\"cartTotalPrice\"\n          :deliveryRate=\"deliveryCost\"\n          :currency=\"returnCurrency()\"\n          :showFees=\"globals.state.options?.orders.showFees\"\n          :feesRate=\"globals.state.options?.orders.feesRate || 0\"\n          :showVat=\"globals.state.options?.orders.showVat\"\n          :vatRate=\"globals.state.options?.orders.vatRate || 0\"\n          :showDeliveryFee=\"globals.state.options?.orders.showDeliveryFee\"\n        />\n\t\t\t</div>\n\t\t\t<!-- Send order -->\n\t\t   <Button\n       v-if=\"orders.state.current.status !== true && shopcart.state.positions.length > 0\"\n        :submit=\"() => handleCreate()\"\n        class=\"bg-main mn-b-small pd-small radius-big w-100 button\"\n        :disabled=\"\n\t\t      errorName \n\t\t      || errorPhoneOrMessenger \n\t\t      || errorCity \n\t\t      || errorAddress \n\t\t      || errorDelivery \n\t\t      || errorPayment\n\t\t      || isLocationLoading\n\t\t      || cartTotalPrice < minOrderAmount\n\t\t    \"\n      >\n        <span>Place an Order</span>\n      </Button>\n\n\t\t  <p class='mn-b-thin'>\n\t\t\t\tI agree that placing the order places me under an obligation to make a payment in accordance with <a class=\"t-semi font-second t-second\" href=\"/legal/terms-of-use\" target=\"_blank\">Terms of Use.</a>\n\t\t\t</p>\n\t\t\t<p >\n\t\t\t\t\n\t\t\t</p>\n\t\t</div>\n\n\t</div>\n\n\t\n\t\n</section>\n\n</template>\n\n\n<script setup>\n///////////////////////////////////////////////////////////////////////////////////////////////////\n// Import components\n///////////////////////////////////////////////////////////////////////////////////////////////////\nimport Button from '@martyrs/src/components/Button/Button.vue'\n// Block\nimport CardOrderItem from '@martyrs/src/modules/orders/components/blocks/CardOrderItem.vue'\n// Sections\nimport AskToLogin from '@martyrs/src/modules/orders/components/sections/AskToLogin.vue'\nimport Succes from '@martyrs/src/modules/orders/components/sections/Succes.vue'\nimport EmptyState from '@martyrs/src/modules/orders/components/sections/EmptyState.vue'\n\nimport PriceTotal from '@martyrs/src/modules/orders/components/elements/PriceTotal.vue';\n\nimport FormCustomerDetails from '@martyrs/src/modules/orders/components/sections/FormCustomerDetails.vue'\nimport FormDelivery from '@martyrs/src/modules/orders/components/sections/FormDelivery.vue'\nimport FormPayment from '@martyrs/src/modules/orders/components/sections/FormPayment.vue'\n///////////////////////////////////////////////////////////////////////////////////////////////////\n// Import libs\n///////////////////////////////////////////////////////////////////////////////////////////////////\nimport { ref, computed, onMounted, watch } from 'vue'\nimport { useRoute,useRouter } from 'vue-router'\nimport { useGlobalMixins } from \"@martyrs/src/modules/globals/views/mixins/mixins.js\"\n\n// Store\nimport * as globals from '@martyrs/src/modules/globals/views/store/globals.js';\nimport * as auth from '@martyrs/src/modules/auth/views/store/auth.js';\nimport * as shopcart from '@martyrs/src/modules/orders/store/shopcart.js';\nimport * as organizations from '@martyrs/src/modules/organizations/store/organizations.js';\nimport * as orders from '@martyrs/src/modules/orders/store/orders.js';\nimport * as users from '@martyrs/src/modules/auth/views/store/users.js';\n\nconst emits = defineEmits(['page-loading', 'page-loaded']);\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n// Variables and computed\n//////////////////////////////////////////////////////////////////////////////////////////////////\nconst isLocationLoading = ref(false)\n// Accessing router and store\nconst route = useRoute()\nconst router = useRouter()\nconst { returnCurrency, formatPrice } = useGlobalMixins()\n// COMPUTED\nconst order = computed(() => orders.state.current)\nconst user = computed(() => users.state.current)\n\nconst cartTotalPrice = shopcart.getters.cartTotalPrice\n\nconst deliveryCost = computed(() => {\n  const type = orders.state.current.delivery.type\n  const distance = orderOrganization.value[0]?.distance || 0\n  const config = globals.state.options?.orders?.delivery_formula || {}\n\n  return orders.getters.getDeliveryPrice(type, distance, config)\n})\n\n// Organization\nconst orderOrganization = ref({})\nconst spotOrganization = ref({})\nconst isOpen = ref(true)\n\n// Новые переменные для проверки минимальной суммы заказа и времени работы\nconst minOrderAmount = ref(0)\n\nfunction checkIsOpenNow(worktime) {\n  try {\n    console.log('[checkIsOpenNow] worktime:', worktime);\n\n    if (\n      !worktime ||\n      typeof worktime !== 'object' ||\n      Array.isArray(worktime) ||\n      !worktime.regular\n    ) {\n      console.log('[checkIsOpenNow] invalid, returning true');\n      return true;\n    }\n\n    const now = new Date();\n    const currentDay = now.getDay();\n    const currentTime = `${String(now.getHours()).padStart(2, '0')}:${String(now.getMinutes()).padStart(2, '0')}`;\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n\n    console.log('[checkIsOpenNow] currentDay:', currentDay);\n    console.log('[checkIsOpenNow] currentTime:', currentTime);\n\n    const specialDay = worktime.special?.find(s => {\n      const d = new Date(s.date);\n      return (\n        d.getFullYear() === today.getFullYear() &&\n        d.getMonth() === today.getMonth() &&\n        d.getDate() === today.getDate()\n      );\n    });\n\n    if (specialDay) {\n      console.log('[checkIsOpenNow] specialDay:', specialDay);\n      if (!specialDay.isOpen) return false;\n      return specialDay.periods?.some(p => p.open <= currentTime && p.close > currentTime);\n    }\n\n    const regularDay = worktime.regular.find(d => d.dayOfWeek === currentDay);\n    if (!regularDay || !regularDay.isOpen) return false;\n\n    return regularDay.periods?.some(p => p.open <= currentTime && p.close > currentTime);\n  } catch (err) {\n    console.error('[checkIsOpenNow] error:', err);\n    return true;\n  }\n}\n\n\nif (!globals.state.options.orders.allowUnauthenticatedOrders && !auth.state.user._id) { \n\trouter.push({name: 'Sign In'})\t\n}\n\n\norders.mutations.resetOrder()\n\nonMounted(async()=> {\n\temits('page-loading');\n\n\tisLocationLoading.value = true\n\n\tif (auth.state.user._id) {\n\t\tlet data = await users.actions.read({ _id:auth.state.user._id, user: auth.state.user._id });\n\n\t\torders.state.current.customer.profile.name = users.state.current.profile.name\n\t\torders.state.current.customer.phone = users.state.current.phone\n\t\torders.state.current.customer.phone = users.state.current.phone\n\t}\n\t\n\torderOrganization.value = await organizations.actions.read({\n\t  _id: shopcart.state.organization,\n\t  location: globals.state.position?.location,\n\t  lookup: ['spots']\n\t})\n\t\n\t// Получаем информацию о минимальной сумме заказа и времени работы из spot\n\tif (orderOrganization.value && orderOrganization.value[0]?.spots?.length > 0) {\n\t  spotOrganization.value = orderOrganization.value[0].spots[0];\n\t\tisOpen.value = checkIsOpenNow(spotOrganization.value.worktime);\n\t  console.log(spotOrganization.value)\n\t  minOrderAmount.value = spotOrganization.value.minorder || 0;\n\t}\n\n\n\t\n \tisLocationLoading.value = false\n  emits('page-loaded');\n\n  if (typeof gtag === 'function') {\n    gtag('event', 'begin_checkout', {\n      currency: returnCurrency(), // Замените на вашу валюту\n      value: cartTotalPrice || 0,\n      items: shopcart.state.positions.map(item => ({\n        item_id: item.product?._id,\n        item_name: item.product?.name,\n        price: item.price || 0,\n        quantity: item.quantity || 1,\n        item_category: item.product?.category || '',\n        item_brand: orderOrganization.value.profile?.name || ''\n      })),\n      organization: orderOrganization.value.profile?.name || '',\n      location: globals.state.position?.location || 'unknown'\n    });\n  }\n})\n\n\nwatch(\n  () => orders.state.current.delivery,\n  async (newVal) => {\n    if (newVal?.location) {\n    \tisLocationLoading.value = true\n\n      orderOrganization.value = await organizations.actions.read({\n        _id: shopcart.state.organization,\n        location: newVal.location,\n        lookup: ['spots']\n      })\n      \n      isLocationLoading.value = false\n    }\n  },\n  { deep: true }\n)\n\n\n/////////////////////////////\n// Store Verification\n/////////////////////////////\nconst errorName = computed(() => {\n  if (orders.state.current.customer.name?.length < 2) { return true } else { return false }\n});\n\nconst errorPhoneOrMessenger = computed(() => {\n  const hasMessengerType = orders.state.current.customer.messenger?.type;\n  const hasMessengerValue = orders.state.current.customer.messenger?.value?.length >\t 2;\n  const hasPhone = orders.state.current.customer.number?.length > 0;\n  // Ошибка, если нет ни номера телефона, ни корректного типа и значения мессенджера\n  return !hasPhone && !(hasMessengerType && hasMessengerValue);\n});\n\nconst errorAddress = computed(() => {\n  const type = orders.state.current.delivery.type;\n  if (type === \"pickup\") {\n    return !orders.state.current.delivery.spot;\n  } else if (type === \"courier\" || type === \"mail\") {\n    const address = orders.state.current.delivery.address;\n    return !address || typeof address !== 'string' || address.length < 2;\n  }\n  return false;\n});\n\nconst errorDelivery = computed(() => {\n  if (orders.state.current.delivery.type) {return false } else {return true } \n})\n\nconst errorPayment = computed(() => {\n  if (orders.state.current.payment.type) { return false } else {return true } \n})\n/////////////////////////////\n// Methods\n/////////////////////////////\nasync function handleCreate() {\n\n\torders.state.current.status = 'created';\n\n\torders.state.current.owner = {\n\t\ttarget: orderOrganization.value[0]._id,\n\t\ttype: 'organization'\n\t}\n\n\tif (auth.state.user._id) {\n\t\torders.state.current.creator = {\n\t\t\ttarget: auth.state.user._id,\n\t\t\ttype: 'user'\n\t\t}\n\t}\n\n\tif (auth.state.user._id) {\n\t\torders.state.current.customer = {\n\t\t\ttarget: auth.state.user._id,\n\t\t\ttype: 'user'\n\t\t}\n\t}\n\n\torders.state.current.positions = shopcart.state.positions\n\n \tconst referralCode = localStorage.getItem('referalCode');\n  \n  if (referralCode) {\n    orders.state.current.referralCode = referralCode;\n  }\n\n  let order = await orders.actions.create(orders.state.current);\n\n   if (order) {\n\t  if (typeof gtag === 'function') {\n\t    gtag('event', 'purchase', {\n\t      transaction_id: order._id,\n\t      value: cartTotalPrice || 0,\n\t      currency: returnCurrency(), // Замените на вашу валюту\n\t      tax: 0, // Если есть данные о налоге\n\t      shipping: deliveryCost.value, // Если есть данные о доставке\n\t      items: shopcart.state.positions.map(item => ({\n\t        item_id: item.product?._id,\n\t        item_name: item.product?.name ,\n\t        price: item.price || 0,\n\t        quantity: item.quantity || 1,\n\t        item_category: item.product?.category || ''\n\t      })),\n\t      organization: orderOrganization.value?.profile?.name,\n\t      location: globals.state.position?.location || 'unknown',\n\t      referral_code: referralCode || null,\n\t      user_id: auth.state.user._id || 'anonymous'\n\t    });\n\t  }\n\t}\n\n  if (order) {\n  \tawait router.push({\n  \t\tname: 'Order',\n  \t\tparams: {\n  \t\t\torder: order._id\n  \t\t}\n  \t})\n  \t\t\n  \tshopcart.actions.resetShopcart()\n\n  } else {\n  \talert('something wrong')\n  }\n}\n</script>\n\n<style lang=\"scss\">\n\n.round-wrapper {\n\tposition: relative;\n\n\t.round {\n\t\tmargin: 0;\n\t\tmargin-right: 1rem;\n\t}\n\n\tinput:checked {\n\t\tbackground: #00ff88;\n\t}\n\n\t.round-checkmark {\n\t\tposition: absolute;\n\t\twidth: 0.5rem;\n\t\theight: 0.5rem;\n\t\tbackground: white;\n\n\t\tleft: 0.5rem;\n\t\ttop:  0.5rem;\n\n\t\topacity: 1;\n\t}\n}\n</style>",
                "name": "OrderCreate.vue",
                "size": 14009,
                "type": "source"
              },
              {
                "path": "../../src/modules/orders/components/pages/OrderCreateBackoffice.vue",
                "relativePath": "modules/orders/components/pages/OrderCreateBackoffice.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"h-100 flex flex-column pd-thin\">\n    <Block class=\"mn-b-thin\">\n      <header class=\"flex-v-center flex-nowrap flex\">\n        <h2 class=\"mn-r-auto\">Create Order</h2>\n        <Button \n          :submit=\"onSubmit\"\n          :callback=\"redirectTo\"\n          class=\"pd-small radius-big bg-main t-black uppercase t-medium\"\n        >\n          Add Order \n        </Button>\n      </header>\n    </Block>\n\n    <Tab \n      v-model:selected=\"tabOrderCreate\"\n      :tabs=\"[\n        {name: 'Positions', value: 'positions'},\n        {name: 'Customer', value: 'customer'},\n        {name: 'Delivery', value: 'delivery'},\n        {name: 'Payment', value: 'payment'}\n      ]\"\n      class=\"t-medium radius-medium bg-light mn-b-small\"\n    />\n\n    <Popup \n      @close-popup=\"closeProductsPopup\" \n      :isPopupOpen=\"isOpenProductsPopup\"\n      class=\"bg-white flex flex-column radius-big pd-medium pos-relative\"\n    >\n\n      <h3 class=\"mn-b-small\">Add to order</h3>\n\n      <div class=\"bg-light h-max-100 mn-b-thin o-scroll pd-medium radius-big\">\n        <Feed\n          :showLoadMore=\"false\"\n          :search=\"{\n            placeholder: 'Search products...',\n            class: 'bg-white mn-b-thin'\n          }\"\n          :states=\"{\n            empty: {\n              title: 'No Products Found',\n              description: 'Currently, there are no such products available.'\n            },\n            skeleton: {\n              hide: true\n            }\n          }\"\n          :store=\"{\n            read: (options) => products.actions.read(options),\n            state: null\n          }\"\n          :options=\"{\n            owner: route.params._id\n          }\"\n          v-slot=\"{ \n            items \n          }\"\n          class=\"\"\n        >\n          <CardOrderItem\n            v-for=\"(product, index) in items\" :key=\"product._id\"\n            :editable=\"false\" \n            :product=\"product\" \n            @click=\"() => { \n              let p = { ...product };\n              p.quantity = 1;\n              globals.actions.add(orders.state.current.positions, p) \n              closeProductsPopup();\n            }\"\n            class=\"bg-white pd-thin radius-medium w-100 mn-b-thin\"\n          />\n        </Feed>\n      </div>\n    </Popup>\n\n    <Block\n      v-if=\"tabOrderCreate === 'positions'\"\n      title=\"Positions\"\n      :actions=\"[{\n        label: '+',\n        function: () => openProductsPopup()\n      }]\"\n      class=\"mn-b-small\"\n    >\n      <span \n        v-if=\"orders.state.current.positions.length === 0\" \n        class=\"w-100\"\n      >\n        No positions added yet\n      </span> \n\n      <CardOrderItem\n        v-for=\"(product, index) in orders.state.current.positions\" \n        :key=\"product._id\"\n        :editable=\"true\" \n        :product=\"product\" \n        @increase=\"() => { globals.actions.increment(orders.state.current.positions, product) }\"\n        @decrease=\"() => { globals.actions.decrement(orders.state.current.positions, product) }\"\n        @remove=\"() => { globals.actions.delete(orders.state.current.positions, product) }\"э\n        @updateRentDates=\"(product, dates) => orders.mutations.updateRentDates({ positions: orders.state.current.positions, productId: product._id, dates })\"\n        class=\"mn-b-thin pd-thin radius-medium bg-white\"\n      /> \n    </Block>\n\n    <Block\n      v-if=\"tabOrderCreate === 'customer'\"\n      title=\"Customer\"\n      class=\"mn-b-semi\"\n      :actions=\"[{\n        label: '+',\n        function: () => openCustomerPopup()\n      }]\"\n    >\n      <CardUser\n        v-if=\"orders.state.current.customer._id\"\n        :user=\"orders.state.current.customer\"\n        :photo=\"orders.state.current.customer.profile.photo\"\n        :name=\"orders.state.current.customer.profile.name || orders.state.current.customer.phone || orders.state.current.customer.email\"\n        @click=\"() => { \n          orders.mutations.resetCustomer(orders.state.current.customer)\n        }\"\n        class=\"bg-white pd-thin h-4r radius-medium w-100 mn-b-thin\"\n      />\n      <Feed\n        v-else\n        :search=\"{\n          placeholder: 'Search customer...',\n          class: 'bg-white mn-b-thin'\n        }\"\n        :states=\"{\n          empty: {\n            title: 'No Products Found',\n            description: 'Currently, there are no such products available.'\n          }\n        }\"\n        :store=\"{\n          read: (options) => customers.read(options),\n          state: null\n        }\"\n        :options=\"{\n          owner: route.params._id\n        }\"\n        v-slot=\"{ \n          items \n        }\"\n        class=\"bg-light h-max-20r o-scroll\"\n      >\n        <CardUser\n          v-for=\"(user, index) in items\" \n          :key=\"user._id\"\n          :user=\"user\"\n          :photo=\"user.profile.photo\"\n          :name=\"user.profile.name || user.phone || user.email\"\n          @click=\"() => { \n            orders.state.current.customer = user\n          }\"\n          class=\"bg-white pd-thin h-4r radius-medium w-100 mn-b-thin\"\n        />\n      </Feed>\n      \n    </Block>\n\n    <FormDelivery  \n      v-if=\"tabOrderCreate === 'delivery'\" \n      :order=\"orders.state.current\"\n      :organization=\"orderOrganization[0]\" \n    />\n\n    <FormPayment  \n      v-if=\"tabOrderCreate === 'payment'\"\n      :order=\"orders.state.current\"  \n      :organization=\"orderOrganization[0]\" \n    />\n\n    <Popup \n      title=\"Add customer\" \n      @close-popup=\"closeCustomerPopup\" \n      :isPopupOpen=\"isOpenCustomerPopup\"\n      :class=\"'bg-white w-min-30r w-max-30r radius-big pd-medium'\"\n    >\n      <FormAddCustomer \n        @callbackCustomer=\"closeCustomerPopup\"\n      />\n    </Popup>\n\n    <Block\n      class=\"mn-b-semi\"\n    >\n      <div class=\"h3 flex\">\n        <span class=\"mn-r-auto t-transp\">In total</span>\n        <span>{{ cartTotalPrice }} {{returnCurrency()}} </span  >\n      </div>\n    </Block>\n</div>\n\n\n</template>\n\n<script setup=\"props\">\n  import { computed, ref, defineProps, onMounted, reactive, toRefs, watch } from 'vue'\n  import { useRoute, useRouter } from 'vue-router'\n\n\n  import Field from '@martyrs/src/components/Field/Field.vue'\n  import Button from \"@martyrs/src/components/Button/Button.vue\";  \n  import Tab from '@martyrs/src/components/Tab/Tab.vue'\n  import Popup from '@martyrs/src/components/Popup/Popup.vue';\n\timport Block from '@martyrs/src/components/Block/Block.vue';\n  import Feed from '@martyrs/src/components/Feed/Feed.vue'\n\n  import CardOrderItem  from '@martyrs/src/modules/orders/components/blocks/CardOrderItem.vue'\n  import CardPosition from '@martyrs/src/modules/products/components/blocks/CardPosition.vue';\n  import CardUser from '@martyrs/src/modules/auth/views/components/blocks/CardUser.vue'\n\n  import BlockSearch from '@martyrs/src/modules/globals/views/components/blocks/BlockSearch.vue'\n\n  import FormAddCustomer from '@martyrs/src/modules/orders/components/sections/FormAddCustomer.vue'\n  import FormDelivery from '@martyrs/src/modules/orders/components/sections/FormDelivery.vue'\n  import FormPayment from '@martyrs/src/modules/orders/components/sections/FormPayment.vue'\n\n  // Import your store\n  import * as globals from '@martyrs/src/modules/globals/views/store/globals.js';\n  import * as auth from '@martyrs/src/modules/auth/views/store/auth.js';\n  import * as orders from '@martyrs/src/modules/orders/store/orders.js';\n  import * as organizations from '@martyrs/src/modules/organizations/store/organizations.js';\n  import * as products from '@martyrs/src/modules/products/store/products.js';\n\n  import customers from '@martyrs/src/modules/orders/store/customers.store';\n\t\n  // Accessing router\n  const route = useRoute()\n  const router = useRouter()\n\n   orders.mutations.resetOrder(orders.state.current)\n\n  let cartTotalPrice = computed(() => {\n    return Number(orders.state.current.positions.reduce((total, product) => {\n      return total + product.price * product.quantity;\n    }, 0));\n  })\n\n  // Tab\n  const tabOrderCreate = ref('positions')\n\n  // Popup\n  const isOpenProductsPopup = ref(false);\n\n  function openProductsPopup() {\n    isOpenProductsPopup.value = true;\n  }\n\n  function closeProductsPopup() {\n    isOpenProductsPopup.value = false;\n  }\n\n  const isOpenCustomerPopup = ref(false);\n\n  function openCustomerPopup() {\n    isOpenCustomerPopup.value = true;\n  }\n\n  function closeCustomerPopup() {\n    isOpenCustomerPopup.value = false;\n  }\n\n  // Data\n  let order = ref(null)\n\n  async function onSubmit() {\n\n    orders.state.current.creator = {\n      type: 'User',\n      target: auth.state.user._id\n    }\n\n    orders.state.current.owner = {\n      type: 'Organization',\n      target: route.params._id,\n    }\n\n    orders.state.current.customer = {\n      type: 'Customer',\n      target: orders.state.current.customer._id || null,\n    }\n\n    order.value = await orders.actions.create(orders.state.current)\n  }\n\n  function redirectTo () {\n    router.push({\n      name: route.meta.context === 'backoffice' ? 'BackofficeOrderEdit' : 'OrganizationOrderEdit',\n      params: { \n        order: order.value._id,\n        _id: route.params._id\n      } \n    })\n  }\n\n  const orderOrganization = ref({})\n\n\n\n  onMounted(async() => {\n\n    orderOrganization.value = await organizations.actions.read({\n      _id: route.params._id,\n      lookup: ['spots']\n    })\n\n    // await orders.actions.fetchOrder(route.params.id) // Implement this action in your store\n\n    // order.value = orders.state.current\n  })\n\n</script>\n\n\n<style lang=\"scss\">\n\n.vue-select {\n  width: inherit;\n\n  margin-right: 1rem;\n}\n.vue-select-header {\n  height: 3rem;\n}\n</style>\n",
                "name": "OrderCreateBackoffice.vue",
                "size": 9478,
                "type": "source"
              },
              {
                "path": "../../src/modules/orders/components/pages/Orders_refact.vue",
                "relativePath": "modules/orders/components/pages/Orders_refact.vue",
                "extension": ".vue",
                "content": "<template>\n\t<div class=\"mn-b-big\">\n\t\t <!-- v-if=\"order.state.current._id === ''\" -->\n\t\t<p class=\"mn-b-small t-semi p-big\">История заказов</p>\n\t\t<!-- @click=\"store.commit('orders/resetOrder')\" v-if=\"order.state.current._id !== ''\"  -->\n\t\t<p class=\"mn-b-small t-semi p-big flex-nojustify flex-center flex link-inherit\">\n\t\t\t<svg class=\"mn-r-small\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t<path fill=\"rgb(var(--black))\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5.34661 10.8333L10.5907 16.0774L9.41217 17.2559L2.15625 10L9.41217 2.74408L10.5907 3.92259L5.34661 9.16667H17.5014V10.8333H5.34661Z\" />\n\t\t\t</svg>\n\t\t\tНазад ко всем заказам\n\t\t</p>\n\t\t<hr class=\"mn-b-semi\">\n\n\t\t<!-- <transition  @before-enter=\"scrollTop\" name=\"scale\">\t -->\n\t\t\t<!-- <OrderCard v-if=\"order.state.current._id !== ''\" :order=\"order.state.current\" /> -->\n\t\t<!-- </transition> -->\n\n\t\t<transition  @before-enter=\"scrollTop\" name=\"scale\">\t\n\t\t\t<div v-if=\"order.state.current._id === ''\" >\t\n\t\t\t\t\n\t\t\t\t<section  v-for=\"order in user.orders\" class=\"pd-big mn-b-regular order-customer-card col\"> \n\t\t      <p class=\"mn-b-regular flex-center flex-nowrap flex w-100\">\n\t\t\t\t\t\t<img loading=\"lazy\" v-if=\"order.status === 'Создан'\" \t\t\tclass=\"mn-r-small\" src=\"@/assets/icons/status/created.svg\"/>\n\t\t\t\t\t\t<img loading=\"lazy\" v-if=\"order.status === 'Подтвержден'\"\tclass=\"mn-r-small\" src=\"@/assets/icons/status/confirmed.svg\"/>\n\t\t\t\t\t\t<img loading=\"lazy\" v-if=\"order.status === 'Ожидает отправки'\" \t\t\tclass=\"mn-r-small\" src=\"@/assets/icons/status/paid.svg\"/>\n\t\t\t\t\t\t<img loading=\"lazy\" v-if=\"order.status === 'Отправлен'\" \t\tclass=\"mn-r-small\" src=\"@/assets/icons/status/finished.svg\"/>\n\t\t\t\t\t\t<img loading=\"lazy\" v-if=\"order.status === 'Выполнен'\" \t\tclass=\"mn-r-small\" src=\"@/assets/icons/status/finished.svg\"/>\n\t\t        <span class=\"w-100 t-medium p-big\">{{order.status}}</span>\n\t\t      </p>\n\t\t      <ul class=\"mn-b-semi order-images-wrapper\">\n\t\t        <li v-for=\"(product, index) in orderProducts(order.positions.slice(0,2))\" :key=\"product._id\" class=\"mn-r-small\">\n    \t        <img loading=\"lazy\" v-if=\"product.images\" :src=\"`@/assets/images/products/${product.images.links[0]}`\">\n\t\t\t        <img loading=\"lazy\" v-if=\"!product.images\" :src=\"require( `@/assets/icons/photo.svg`)\">\n\t\t    \t\t</li>\n\t\t    \t\t<li v-if=\"order.positions.length >= 3\" class=\"mn-r-small order-last-image\">\n\t\t    \t\t\t+{{order.positions.length - 2 }}\n\t\t  \t\t\t</li>\n\t\t      </ul>\n\t\t      <div class=\"flex\">\n\t\t      \t<div>\n\t\t\t\t      <p class=\"w-100\">\n\t\t\t\t        <span class=\"t-transp\">Заказ:</span> #{{order._id}} \n\t\t\t\t      </p>\n\t\t\t\t       <p  v-if=\"order.status !== 'Отправлен' && (order.info.delivery === 'Почтой' || order.info.delivery === 'Курьером')\" class=\"w-100\">\n\t\t\t\t       \t<span class=\"t-transp\">Предполагаемая дата отправки:</span>  {{DateToFormattedString(order.createdAt)}}\n\t\t\t\t      </p>\n\n\t\t\t\t       <p  v-if=\"order.status === 'Отправлен'\"  class=\"w-100\">\n\t\t\t\t       \t<span  class=\"t-transp\">Дата отправки:</span> {{DateToFormattedString(order.createdAt)}}\n\t\t\t\t      </p>\n\t\t\t\t    </div>\n\t\t\t\t    <div>\n\t\t\t\t     <button @click=\"store.commit('orders/setOrder', order)\" class='button'>Смотреть заказ</button>\n\t\t\t\t    </div>  \n\t\t\t    </div>\n\t\t\t  </section>\n\t  \t</div>\n  \t</transition>\n\n\t</div>\n\n</template>\n\n<script setup=\"props\">\n/////////////////////////////\n// COMPONENT DEPENDENCIES\n/////////////////////////////\n// import OrderCard from '@/components/blocks/OrderCard.vue';\n\nimport { toRefs, computed } from 'vue';\n\n/////////////////////////////\n// HELPERS\n/////////////////////////////\n\n/////////////////////////////\n// CREATED\n/////////////////////////////\nconst props = defineProps({\n  user: Object,\n});\n\nconst store = useStore()\n\nconst { user } = toRefs(props);\n\nconst cartTotalPrice = computed(() => store.getters['shopcart/cartTotalPrice'])\n\t\n\nfunction scrollTop(){\n\tdocument.getElementById('page-content').scrollIntoView({behavior: 'smooth', block: \"start\", inline: \"start\"});\n}\n\nfunction orderProducts (positions) {\n  return positions.map(({ _id, size, color, quantity }) => {\n    const product = store.state.products.all.find(product => product._id === _id)\n    return {\n      name: product.name,\n      images: product.images[0],\n      color,\n      size,\n      price: product.price,\n      _id: product._id,\n      quantity\n    }\n  })\n}\n\n/////////////////////////////\n// MOUNTED\n/////////////////////////////\n</script>\n\n<style lang=\"scss\" scoped>\n.order-customer-card {\n\tbackground: #FBFCFD;\t\n}\n.order-images-wrapper {\n\tdisplay: flex;\n\n\timg {\n\t\twidth: 4.5rem;\n    height: 5.5rem;\n\t\tobject-fit: cover;\n\t}\n\n\t.order-last-image {\n\t\theight: 6rem;\n\t\twidth: 5rem;\n\n\t\ttext-align: center;\n\t\tline-height: 6rem;\n\n\t\tfont-size: 1.5rem;\n\n\t\tbackground: #00ff88;\n\t\tcolor: white;\n\n\t}\n}\n\n</style>\n",
                "name": "Orders_refact.vue",
                "size": 4770,
                "type": "source"
              },
              {
                "path": "../../src/modules/orders/components/pages/Orders.vue",
                "relativePath": "modules/orders/components/pages/Orders.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"mobile:pd-thin pd-medium\"> \n    <SectionPageTitle\n      v-if=\"!MOBILE_APP\"\n      title=\"Orders\"\n      :actions=\"[\n        route.meta.context === 'backoffice' && { to: { name: 'BackofficeAdminCreateOrder' }, label: 'Create Order' },\n        route.meta.context === 'organization' && { to: { name: 'OrganizationAdminCreateOrder', params: { _id: route.params._id}}, label: 'Create Order' }\n      ].filter(Boolean)\"\n      class=\"mn-b-small\"\n    />\n\n    <Block\n      v-if=\"route.meta.context !== 'user'\"\n      title=\"Balance\"\n      class=\"mn-b-small\"\n    >\n      <div class=\"gap-micro flex-nowrap flex\">\n        <div class=\"w-100 bg-white radius-small pd-small\">\n          <p class=\"mn-b-thin\">Total</p>\n          <h3>{{formatPrice(totalPrice)}}</h3>\n        </div>\n        <div class=\"w-100 bg-white radius-small pd-small\">\n          <p class=\"mn-b-thin\">Paid</p>\n          <h3>{{formatPrice(totalPriceUnpaid)}}</h3>\n        </div>\n        <div class=\"w-100 bg-white radius-small pd-small\">\n          <p class=\"mn-b-thin\">Unpaid</p>\n          <h3>{{formatPrice(totalPrice)}}</h3>\n        </div>\n      </div>\n\n    </Block>\n\n    <Feed\n      :search=\"true\"\n      :states=\"{\n        empty: {\n          title: 'No Orders Found',\n          description: 'Currently, there are no orders.'\n        }\n      }\"\n      :store=\"{\n        read: (options) => orders.actions.read(options)\n      }\"\n      :options=\"{\n        limit: 15,\n        ...(route.meta.context === 'organization' && { owner: route.params._id }),\n        ...(route.meta.context === 'user' && { customer: route.params._id }),\n        ...(tab !== 'all' && { status: tab })\n      }\"\n      v-slot=\"{ \n        items \n      }\"\n      class=\"gap-thin cols-3 mobile:cols-1\"\n    >\n      <router-link \n        v-if=\"route.meta.context !== 'user'\"\n        v-for=\"order in items\" \n        :to=\"{ \n          name: route.meta.context === 'backoffice' ? 'BackofficeOrderEdit' : 'OrganizationOrderEdit', \n          params: route.meta.context === 'backoffice' \n            ? { order: order._id } \n            : { order: order._id, organization: order.owner.target || order.owner._id  }\n        }\" \n      >\n        <CardOrderBackoffice \n          :order=\"order\"\n          :user=\"auth.state.user\"\n          :formatDate=\"formatDate\"\n          :getTotal=\"orders.getters.getTotal\"\n          :currency=\"returnCurrency()\"\n        />\n      </router-link>\n\n      <router-link \n        v-if=\"route.meta.context === 'user'\"\n        v-for=\"order in items\" \n        :to=\"{ \n          name: 'UserOrder', \n          params: { \n            order: order._id \n          }\n        }\" \n      >\n      <CardOrderUser\n        :orderId=\"order._id\"\n        :status=\"order.status\"\n        :createdAt=\"order.createdAt\"\n        :updatedAt=\"order.updatedAt\"\n        :positions=\"order.positions\"\n        :total=\"orders.getters.getTotal(order.positions)\"\n      />\n      </router-link>\n    </Feed>\n  </div>\n</template>\n\n<script setup>\n  import { computed, onMounted, reactive, ref } from 'vue';\n  import { useRoute, useRouter } from 'vue-router';\n\n  import Tab      from '@martyrs/src/components/Tab/Tab.vue'\n  import Block from '@martyrs/src/components/Block/Block.vue';\n\n  import * as orders from '@martyrs/src/modules/orders/store/orders.js';\n  import * as auth from '@martyrs/src/modules/auth/views/store/auth.js';\n\n  import CardOrder from '@martyrs/src/modules/orders/components/blocks/CardOrder.vue'\n\n  import CardOrderUser from '@martyrs/src/modules/orders/components/blocks/CardOrderUser.vue'\n  import CardOrderBackoffice from '@martyrs/src/modules/orders/components/blocks/CardOrderBackoffice.vue'\n\n  import SectionPageTitle from '@martyrs/src/modules/globals/views/components/sections/SectionPageTitle.vue'\n\n  import Feed from '@martyrs/src/components/Feed/Feed.vue'\n\n  import IconTime  from '@martyrs/src/modules/icons/entities/IconTime.vue'\n\n  const route = useRoute();\n  const router = useRouter();\n\n  const spoiler = ref(false)\n\n  // Tab logic\n  const tab = ref('all')\n\n  const totalPrice = computed(() => {\n    return calculateTotalSum(orders.state.all)\n  });\n\n   const totalPriceUnpaid = computed(() => {\n    return calculateSum(orders.state.all,'unpaid')\n  });\n\n  \n  function calculateTotalSum(orders) {\n    return orders.reduce((totalSum, item) => {\n      return totalSum + item.positions.reduce((sum, position) => sum + position.price, 0);\n    }, 0);\n  }\n\n  function calculateSum(orders, status) {\n    return orders.reduce((totalSum, item) => {\n      if (item.payment.status === status) {\n        return totalSum + item.positions.reduce((sum, position) => sum + position.price, 0);\n      }\n      return totalSum;\n    }, 0);\n  }\n\n\n  onMounted(async () => {\n   \n  });\n</script>\n",
                "name": "Orders.vue",
                "size": 4719,
                "type": "source"
              }
            ]
          },
          "partials": {
            "_files": [
              {
                "path": "../../src/modules/orders/components/partials/ShopCart.vue",
                "relativePath": "modules/orders/components/partials/ShopCart.vue",
                "extension": ".vue",
                "content": "<template>\n\t<section class=\"z-index-5 flex flex-column  transition-ease-in-out bg-white shop-cart\" :class=\"{'shop-cart-active':shopcart.state.currentState === true}\">\n    <!-- ---------------------------------------------------------------- -->\n    <!-- 01. Popup Header  -->\n    <!-- ---------------------------------------------------------------- -->\n    <div class=\"pd-big mobile:pd-medium pd-b-zero mobile:pd-b-zero flex-nowrap flex\">\n      <div class=\"mn-b-medium w-100\">\n        <h4 class=\"mn-b-thin p-big\">{{t('title')}}</h4>\n        <p class=\"t-transp p-small\">{{t('subtitle')}} {{ t('positions', { count: StoreCartAmount }) }}</p>\n      </div>\n      <IconCross @click=\"shopcart.actions.toggleShopcart\" class=\"cursor-pointer i-medium button-icon\"/>\n    </div>\n    <!-- ---------------------------------------------------------------- -->\n    <!-- 02. Popup Content  -->\n    <!-- ---------------------------------------------------------------- -->\n    <div class=\"pd-big pd-t-zero mobile:pd-t-zero mobile:pd-medium h-70 flex flex-column w-100 pos-relative o-x-hidden o-y-scroll gap-small shopcart-content\">\n      <!-- Empty State -->\n      <p v-if=\"!(shopcart.state.positions.length > 0)\" class=\"mn-t-medium\"><i>{{t('emptystate')}}</i></p>\n      <!-- Shopcart positions -->\n      <CardOrderItem \n        v-for=\"product in shopcart.state.positions\" \n        :key=\"product._id\" \n        :editable=\"true\" \n        :product=\"product\" \n        :increase=\"product => shopcart.actions.incrementItemQuantity(product._id)\"\n        :decrease=\"product => shopcart.actions.decrementItemQuantity(product._id)\"\n        :remove=\"product => shopcart.actions.removeProduct(product._id)\"\n        @updateRentDates=\"(product, dates) => shopcart.actions.updateRentDates({ productId: product._id, dates })\"\n      />\n    </div>\n    <!-- ---------------------------------------------------------------- -->\n    <!-- 03. Footer  -->\n    <!-- ---------------------------------------------------------------- -->\n    <div  class=\"h-30 transition-ease-in-out pd-b-medium pd-t-medium pd-big transition-cubic bg-light t-black\">\n      <div v-if=\"shopcart.state.positions.length > 0\" class=\"mn-b-small total-price\">\n       <PriceTotal \n          :totalPrice=\"cartTotalPrice\"\n          :currency=\"returnCurrency()\"\n          :showFees=\"globals.state.options?.orders.showFees\"\n          :feesRate=\"globals.state.options?.orders.feesRate\"\n          :showVat=\"globals.state.options?.orders.showVat\"\n          :vatRate=\"globals.state.options?.orders.vatRate\"\n        />\n      </div>\n      <button v-if=\"shopcart.state.positions.length > 0\" @click=\"openOrder()\" class=\"bg-main t-black w-100 button\">{{ t('fastorder') }}</button>\n    </div>  \n\n      <!-- ---------------------------------------------------------------- -->\n      <!-- 04. Color Overlay  -->\n      <!-- ---------------------------------------------------------------- -->\n      <transition name=\"fade\">\n      <teleport to=\"#app-wrapper\" v-if=\"shopcart.state.currentState\">\n\n        <div \n           v-if=\"shopcart.state.currentState\"\n          @click=\"() => shopcart.state.currentState = false\"\n          class=\"color-overlay z-index-3\"\n          :class=\"{'active':shopcart.state.currentState === true}\"\n        >\n        </div>\n      </teleport>\n      </transition>\n  </section>\n</template>\n\n\n<script setup>\n  /////////////////////////////\n  // COMPONENT DEPENDENCIES\n  /////////////////////////////\n\timport { computed,onMounted } from 'vue'\n  // Route\n  import { useRouter,useRoute } from 'vue-router'\n  // i18n\n  import { useI18n } from 'vue-i18n'\n  // Components\n  import CardOrderItem from '@martyrs/src/modules/orders/components/blocks/CardOrderItem.vue';\n  import PriceTotal from '@martyrs/src/modules/orders/components/elements/PriceTotal.vue';\n\n  import IconCross from '@martyrs/src/modules/icons/navigation/IconCross.vue';\n\n  import * as globals from '@martyrs/src/modules/globals/views/store/globals.js';\n  import * as auth from '@martyrs/src/modules/auth/views/store/auth.js';\n  import * as shopcart from '@martyrs/src/modules/orders/store/shopcart.js';\n  /////////////////////////////\n  // CREATED\n  /////////////////////////////\n  const route = useRoute()\n  const router = useRouter()\n  // Accessing state\n  const cartTotalPrice = shopcart.getters.cartTotalPrice\n  const StoreCartAmount = shopcart.getters.cartTotalAmount\n  // \n  // router.beforeEach((to, from, next) => {\n  //   if (shopcart.state.currentState === true) {\n  //     shopcart.actions.toggleShopcart();\n  //   }\n  //   next(); // Убедитесь, что вызываете next() для продолжения перехода по роуту\n  // });\n\n  /////////////////////////////\n  // LOCALIZATION\n  /////////////////////////////\n  const text = {\n    messages: {\n      en: {\n        title: 'Your order',\n        subtitle: 'You have',\n        positions: 'no products in shop cart | 1 product in shop cart | {count} products in shop card',\n        emptystate: \"You don't have any positions in your shop cart yet. Maybe something needs to be added?\",\n        intotal: 'In total',\n        fastorder: 'Checkout'\n      },\n      ru: {\n        title: 'Ваш заказ',\n        subtitle: 'У вас',\n        positions: 'нет товаров в корзине | 1 товар в корзине | {count} товаров в корзине',\n        emptystate: \"У вас еще нет товаров в корзине. Может стоит что-нибудь добавить?\",\n        intotal: 'Итого',\n        fastorder: 'Подтвердить заказ'\n      }\n    }\n  }\n\n  const { t } = useI18n(text)\n  /////////////////////////////\n  // MOUNTED\n  /////////////////////////////\n  function openOrder() {\n    // store.dispatch(\"shopcart/toggleShopCart\");\n    // store.dispatch(\"shopcart/setSearch\");\n    !globals.state.options.orders.allowUnauthenticatedOrders && !auth.state.user._id ?  router.push({name: 'Sign In', query: { returnUrl: '/orders/form'}}) :   router.push({name: 'CreateOrder'}) \n    shopcart.actions.toggleShopcart();\n  }\n</script>\n\n<style lang=\"scss\">\n.shop-cart {\n  display: block;\n  position: fixed;\n\n  right: -33%;\n  top: 0;\n\n  height: 100%;\n  width: 33%;\n\n  overflow-y: scroll; \n}\n\n.shop-cart-active {\n  right: 0;\n\n}\n\n@media screen and (max-width: 1025px) {\n  .shop-cart {\n    width: 100%;\n    right: -100%;\n\n    .shopcart-footer {\n      width: 100%;\n      right: -100%;\n    }\n\n    &-active {\n      right: 0;\n\n      .shopcart-footer {\n        right: 0;\n      }\n    }\n  }\n}\n</style>\n\n\n",
                "name": "ShopCart.vue",
                "size": 6354,
                "type": "source"
              }
            ]
          },
          "sections": {
            "_files": [
              {
                "path": "../../src/modules/orders/components/sections/AskToLogin.vue",
                "relativePath": "modules/orders/components/sections/AskToLogin.vue",
                "extension": ".vue",
                "content": "<template>\n\t<div \n    v-if=\"isOpen === true\" \n    class=\"\n      bg-black \n      t-white \n      pd-big \n      mobile:pd-medium\n      radius-medium\n      flex-v-center\n      flex-nowrap \n      flex\n      mobile:flex-column\n    \"\n  >\n    <!-- <img loading=\"lazy\" \n      @click=\"isOpen = false\" \n      class=\"\n        i-base \n        button-close-popup \n        button\n      \"\n      src=\"@/assets/icons/cross-white.svg\"\n    > -->\n\n    <div class=\"mn-r-auto\">\n      <h3 class=\"t-semi mn-b-small\">Already registered?</h3>\n      <span class=\"p-medium t-transp\">Sign in to your account to checkout faster.</span>\n    </div>\n\n    <button \n      @click=\"toggleSignInPopup()\" \n      class=\"button mobile:w-100 mobile:mn-t-small h-4r bg-main\"\n    >\n      Sign In\n    </button>\n  </div>\n</template>\n\n\n<script setup>\n\timport { ref } from 'vue'\n\n\tlet isOpen = ref(true);\n</script>\n\n<style lang=\"scss\">\n</style>\n\n\n",
                "name": "AskToLogin.vue",
                "size": 898,
                "type": "source"
              },
              {
                "path": "../../src/modules/orders/components/sections/EmptyState.vue",
                "relativePath": "modules/orders/components/sections/EmptyState.vue",
                "extension": ".vue",
                "content": "<template>\n<div class=\"\">\n  You dont have any positions in order. \n</div>\n\n</template>\n\n<script setup=\"props\">\n/////////////////////////////\n// CREATED\n/////////////////////////////\nconst props = defineProps({\n  order: Object,\n});\n\n/////////////////////////////\n// MOUNTED\n/////////////////////////////\n</script>\n\n<style lang=\"scss\">\n\n</style>\n",
                "name": "EmptyState.vue",
                "size": 344,
                "type": "source"
              },
              {
                "path": "../../src/modules/orders/components/sections/FormAddCustomer.vue",
                "relativePath": "modules/orders/components/sections/FormAddCustomer.vue",
                "extension": ".vue",
                "content": "<template>\n  <Block class=\"pos-relative mn-b-thin\">\n    <BlockSearch \n      v-click-outside=\"() => {searchUserShow = false}\" \n      v-if=\"!dataCustomer.user\"\n      @search=\"(event) => { searchUser = event; searchUserShow = true }\"\n      placeholder=\"Enter name, phone or email\"\n      class=\"bg-white\"\n    />\n    <CardUser\n      v-else\n      :user=\"dataCustomer.user\"\n      :photo=\"dataCustomer.user.profile.photo\"\n      :name=\"dataCustomer.user.profile.name || dataCustomer.user.phone || dataCustomer.user.email\"\n      @click=\"() => { \n        dataCustomer.user = null\n      }\"\n      class=\"bg-white h-2r pd-thin radius-medium w-100\"\n    />\n\n    <div \n      v-if=\"searchUser && searchUserShow && !dataCustomer.user \" \n      class=\"mn-t-thin pos-absolute w-100 pos-t-100 pos-l-0 z-index-3 bg-light pd-small radius-small\n    \">\n      <Feed\n        :states=\"{\n          empty: {\n            title: 'No User Found',\n            description: 'Currently, there are no such user.'\n          }\n        }\"\n        :store=\"{\n          read: (options) => users.actions.read(options),\n          state: null\n        }\"\n        :options=\"{\n          search: searchUser\n        }\"\n        :showLoadMore=\"false\"\n        v-slot=\"{ \n          items \n        }\"\n        class=\"h-max-20r o-scroll\"\n      >\n        <CardUser\n          v-for=\"(user, index) in items\" :key=\"user._id\"\n          :user=\"user\"\n          :photo=\"user.profile.photo\"\n          :name=\"user.profile.name || user.phone || user.email\"\n          @click=\"() => { \n            dataCustomer.user = user\n            dataCustomer.profile = user.profile\n            dataCustomer.phone = user.phone\n            dataCustomer.email = user.email\n            dataCustomer.socials = user.socials\n          }\"\n          class=\"bg-white h-2r pd-thin radius-medium w-100 mn-b-thin\"\n        />\n      </Feed>\n    </div>\n  </Block>\n\n  <FormCustomerDetails\n    :customer=\"dataCustomer\"  \n    class=\"mn-b-thin bg-light\"\n  />\n\n  <Button \n    :submit=\"addCustomer\"\n    :callback=\"callbackCustomer\"\n    @error=\"setError\"\n    class=\"w-100 pd-small radius-big bg-main t-black uppercase t-medium\"\n  >\n    Add Customer \n  </Button>\n</template>\n\n<script setup>\nimport { ref } from \"vue\"\nimport { useRoute, useRouter } from 'vue-router'\n\nimport Block from '@martyrs/src/components/Block/Block.vue'\nimport Field from '@martyrs/src/components/Field/Field.vue'\nimport Select from '@martyrs/src/components/Select/Select.vue'\nimport Feed from '@martyrs/src/components/Feed/Feed.vue'\nimport Button from '@martyrs/src/components/Button/Button.vue'\n\nimport BlockSearch from '@martyrs/src/modules/globals/views/components/blocks/BlockSearch.vue'\n\nimport CardUser from '@martyrs/src/modules/auth/views/components/blocks/CardUser.vue'\n\nimport FormCustomerDetails from '@martyrs/src/modules/orders/components/sections/FormCustomerDetails.vue'\n\nimport * as users from '@martyrs/src/modules/auth/views/store/users.js';\nimport * as auth from '@martyrs/src/modules/auth/views/store/auth.js';\n\nimport { setError } from '@martyrs/src/modules/globals/views/store/globals.js'\n\nimport customers from '@martyrs/src/modules/orders/store/customers.store';\nimport customerInitState from \"@martyrs/src/modules/orders/store/models/customer.js\"\n\nimport clickOutside from '@martyrs/src/components/FieldPhone/click-outside.js';\n\n// Directives\nlet vClickOutside = clickOutside\n// Props\nconst props = defineProps({\n  order: Object,\n});\n// Emits\nconst emits = defineEmits(['callbackCustomer']);\n// Router\nconst route = useRoute()\n\nlet dataCustomer = ref(customerInitState)\n\nlet searchUser = ref(null)\nlet searchUserShow = ref(false)\n\nasync function addCustomer() {\n  let customerData = {\n    identity: {\n      type: dataCustomer.value.user ? 'User' : 'Visitor',\n      target: dataCustomer.value.user ? dataCustomer.value.user._id : null\n    },\n    owner: {\n      type: 'Organization',\n      target: route.params._id\n    },\n    creator: {\n      type: 'User',\n      target: auth.state.user._id\n    },\n    phone: dataCustomer.value.phone,\n    email: dataCustomer.value.email,\n    profile: dataCustomer.value.profile,\n    socials: dataCustomer.value.socials\n  }\n\n  try { \n    let customer = await customers.create(customerData)\n    \n    dataCustomer.value = customer\n  } catch(err) {\n    console.log(err)\n  }\n}\n\nfunction callbackCustomer() {\n  emits('callbackCustomer', dataCustomer.value)\n}\n</script>",
                "name": "FormAddCustomer.vue",
                "size": 4385,
                "type": "source"
              },
              {
                "path": "../../src/modules/orders/components/sections/FormCustomerDetails.vue",
                "relativePath": "modules/orders/components/sections/FormCustomerDetails.vue",
                "extension": ".vue",
                "content": "<template>\n  <Block :title=\"title\" class=\"mn-b-thin\">\n    <Field \n      v-model:field=\"customer.profile.name\"   \n      label=\"Name\"  \n      placeholder=\"Enter name\"  \n      class=\"bg-white pd-small radius-small mn-b-thin\"\n    />\n    <FieldPhone\n      v-model=\"customer.phone\"  \n      @country=\"(country) => { customer.number = country }\"\n      :inputOptions=\"{\n        placeholder: 'Enter phone number',\n        type: 'tel',\n      }\"\n      :defaultCountry=\"'TH'\"\n      :validCharactersOnly=\"true\"\n      :dropdownOptions=\"{\n        showDialCodeInSelection: true,\n        showFlags: true,\n        showDialCodeInList: true\n      }\" \n      mode=\"national\"\n      class=\"w-100 bg-white pd-small mn-b-thin radius-small\" \n    />\n    <div \n      class=\"gap-thin flex-justify-between flex-nowrap flex\"\n    >\n      <Select \n        :select=\"messengerSelected\"\n        :options=\"[\n          {name: 'Instagram', value: 'instagram'}, \n          {name: 'Telegram', value: 'telegram'}, \n          {name: 'WhatsApp', value: 'whatsapp'},\n        ]\"\n        @update:select=\"(option) => messengerSelected = option\"\n        placeholder=\"Messenger\" \n        size=\"small\"\n        class=\"bg-white  pd-small radius-small\"\n      />\n      <Field\n        v-model:field=\"customer.socials[messengerSelected]\"     \n        label=\"@\"  \n        placeholder=\"Enter username\"\n        class=\"bg-white pd-small radius-small w-100\"\n      />\n    </div>\n  </Block>\n</template>\n\n<script setup>\nimport { ref } from \"vue\"\nimport Block from '@martyrs/src/components/Block/Block.vue'\nimport Field from '@martyrs/src/components/Field/Field.vue'\nimport FieldPhone from '@martyrs/src/components/FieldPhone/FieldPhone.vue'\nimport Select from '@martyrs/src/components/Select/Select.vue'\n\nlet messengerSelected = ref({name: 'WhatsApp', value: 'whatsapp'})\n\ndefineProps({\n  customer: Object,\n  title: {\n    type: String,\n    default: 'Personal Data'\n  }, \n});\n</script>",
                "name": "FormCustomerDetails.vue",
                "size": 1917,
                "type": "source"
              },
              {
                "path": "../../src/modules/orders/components/sections/FormDelivery.vue",
                "relativePath": "modules/orders/components/sections/FormDelivery.vue",
                "extension": ".vue",
                "content": "<template>\n  <Block title=\"Delivery\">\n    <h5 class=\"font-second mn-b-thin\">Select delivery type</h5>\n    \n    <div class=\"mn-b-small flex-nowrap flex\" v-if=\"availableDeliveryTypes.length\">\n      <Radio \n        v-for=\"type in availableDeliveryTypes\"\n        :key=\"type\"\n        v-model:radio=\"order.delivery.type\"\n        :label=\"capitalize(type)\"\n        :value=\"type\"\n        class=\"bg-white pd-medium radius-small w-100 mn-r-small\"\n      />\n    </div>\n    <div v-else>No delivery options available.</div>\n\n    <!-- Раздел для Pickup -->\n    <template v-if=\"order.delivery.type === 'pickup'\">\n      <h5 class=\"font-second mn-b-thin\">Select pickup spot</h5>\n      <CardSpot\n        v-for=\"(spot, index) in organization?.spots.filter(item => item.delivery?.includes('pickup'))\"\n        :key=\"index\"\n        :spot=\"spot\"\n        :organization=\"order.organization\"\n        :editAcess=\"false\"\n        :showDeliveryOptions=\"false\"\n        :showPaymentOptions=\"false\"\n        :selected=\"order.delivery.spot === spot._id\"\n        @click=\"() => order.delivery.spot = order.delivery.spot === spot._id ? null : spot._id\"\n        class=\"mn-b-thin radius-medium o-hidden bg-white\"\n      />\n    </template>\n\n    <!-- Раздел для Courier -->\n    <template v-else-if=\"order.delivery.type === 'courier' || order.delivery.type === 'post'\">\n      <h5 class=\"font-second mn-b-thin\">Address</h5>\n      <Address\n        label=\"Location\"    \n        :apiKey=\"GOOGLE_MAPS_API_KEY\" \n        :address=\"order.delivery.address\" \n        :location=\"order.delivery.location\"  \n        placeholder=\"Enter your address\"  \n        class=\"bg-white radius-tl-medium radius-tr-medium t-black pd-medium\"\n        @update:location=\"newLocation => { order.delivery.location = newLocation; }\"\n        @update:address=\"newAddress => { order.delivery.address = newAddress; }\"\n      />\n      <!-- Карта доставки -->\n      <LocationMarker \n        :apiKey=\"GOOGLE_MAPS_API_KEY\" \n        :address=\"order.delivery.address\" \n        :location=\"order.delivery.location\"\n        class=\"mn-b-thin radius-bl-medium radius-br-medium h-15r o-hidden\"\n        @update:location=\"newLocation => { \n          if (order.delivery.type === 'courier') order.delivery.location = newLocation;\n        }\"\n        @update:address=\"newAddress => { \n          if (order.delivery.type === 'courier') order.delivery.address = newAddress;\n        }\"\n      />\n    </template>\n    <!-- Комментарии -->\n    <Field \n      v-model:field=\"order.comment\"     \n      placeholder=\"Comments regarding the address (apartment unit, floor level, building section)\"\n      type=\"textarea\"  \n      class=\"bg-white pd-medium radius-small\"\n    />\n  </Block>\n</template>\n\n<script setup>\nimport { watch, computed, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\n\nimport Feed from '@martyrs/src/components/Feed/Feed.vue';\nimport CardSpot from '@martyrs/src/modules/spots/components/blocks/CardSpot.vue';  \nimport * as spotsModule from '@martyrs/src/modules/spots/store/spots.js';\nimport * as globals from '@martyrs/src/modules/globals/views/store/globals.js';\nimport Block from '@martyrs/src/components/Block/Block.vue';\nimport Address from '@martyrs/src/components/Address/Address.vue';\nimport LocationMarker from '@martyrs/src/components/LocationMarker/LocationMarker.vue';\nimport Radio from '@martyrs/src/components/Radio/Radio.vue';\nimport Field from '@martyrs/src/components/Field/Field.vue';\n\nconst props = defineProps({\n  order: Object,\n  organization: Object,\n});\n\nconst route = useRoute();\n\n// Сбрасываем spot при переключении типа доставки\nwatch(() => props.order.delivery.type, (newType) => {\n  if (newType !== 'pickup') {\n    props.order.delivery.spot = null;\n  }\n});\n\n// Устанавливаем начальные данные из globals при монтировании\nonMounted(() => {\n  if (globals.state.position) {\n    props.order.delivery.address = globals.state.position.address;\n    props.order.delivery.location = globals.state.position.location;\n  }\n});\n\nconst availableDeliveryTypes = computed(() => {\n  const types = new Set()\n  props.organization?.spots?.forEach(spot => {\n    spot.delivery?.forEach(type => types.add(type))\n  })\n  return Array.from(types)\n})\n\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n}\n\n</script>",
                "name": "FormDelivery.vue",
                "size": 4262,
                "type": "source"
              },
              {
                "path": "../../src/modules/orders/components/sections/FormPayment.vue",
                "relativePath": "modules/orders/components/sections/FormPayment.vue",
                "extension": ".vue",
                "content": "<template>\n  <Block title=\"Payment\">\n    <div class=\"mn-b-small flex-nowrap flex\">\n      <Select \n        v-model:select=\"order.payment.type\"\n        :options=\"availablePaymentTypes\"\n        placeholder=\"Select type of payment\" \n        size=\"small\"\n        class=\"bg-white pd-medium radius-small w-100\"\n      />\n    </div>\n  </Block>\n</template>\n\n<script setup>\n\nimport { computed } from 'vue';\n\nimport Block from '@martyrs/src/components/Block/Block.vue'\nimport Select from '@martyrs/src/components/Select/Select.vue'\n\nconst props = defineProps({\n  order: Object,\n  organization: Object,\n});\n\nconst availablePaymentTypes = computed(() => {\n  const types = new Set()\n  props.organization?.spots?.forEach(spot => {\n    spot.payment?.forEach(type => types.add(type))\n  })\n  return Array.from(types)\n})\n\n\n\n</script>",
                "name": "FormPayment.vue",
                "size": 813,
                "type": "source"
              },
              {
                "path": "../../src/modules/orders/components/sections/Succes.vue",
                "relativePath": "modules/orders/components/sections/Succes.vue",
                "extension": ".vue",
                "content": "<template>\n<div class=\"t-center order-finished\">\n      <p class=\"mn-b-medium p-big\">Order completed!</p>\n      <div class=\"mn-b-big pd-big order-number\">\n        <p class=\"mn-b-small t-semi small\">#485792</p>\n        <p class=\"t-lh-2\">Our manager will contact you within 1 hour. If you have any questions - send us an email or call <br><span class=\"t-semi\">+995 585 888 660</span></p>\n      </div>\n      <div class=\"order-data pd-big\">\n        <div class=\"mn-b-small t-left flex-nowrap flex\">\n          <p class=\"mn-r-small w-33 t-semi\">Receiver</p>\n          <p class=\"mn-r-small w-100\">{{order.name}} {{order.surname}}, {{order.phone}}, {{order.email}}</p>\n        </div>\n        <div class=\"t-left flex-nowrap flex\">\n          <p class=\"mn-r-small w-33 t-semi\">Address</p>\n          <p class=\"mn-r-small w-100\">{{order.city}}, {{order.adress}}</p>\n        </div>\n      </div>\n    </div>\n</template>\n\n<script setup=\"props\">\n/////////////////////////////\n// CREATED\n/////////////////////////////\nconst props = defineProps({\n  order: Object,\n});\n\n/////////////////////////////\n// MOUNTED\n/////////////////////////////\n</script>\n\n<style lang=\"scss\">\n\n</style>\n",
                "name": "Succes.vue",
                "size": 1159,
                "type": "source"
              }
            ]
          }
        }
      },
      "organizations": {
        "configs": {
          "_files": [
            {
              "path": "../../src/modules/organizations/configs/navigation.organization.config.js",
              "relativePath": "modules/organizations/configs/navigation.organization.config.js",
              "extension": ".js",
              "content": "// Import icons\nimport IconCommunity from '@martyrs/src/modules/icons/entities/IconCommunity.vue';\nimport IconEvents from '@martyrs/src/modules/icons/entities/IconEvents.vue';\nimport IconGallery from '@martyrs/src/modules/icons/entities/IconGallery.vue';\nimport IconGroups from '@martyrs/src/modules/icons/entities/IconGroups.vue';\nimport IconOrders from '@martyrs/src/modules/icons/entities/IconOrders.vue';\nimport IconProducts from '@martyrs/src/modules/icons/entities/IconProducts.vue';\nimport IconLeftovers from '@martyrs/src/modules/icons/entities/IconLeftovers.vue';\n\n// Import global mixins for access control\nimport { useGlobalMixins } from '@martyrs/src/modules/globals/views/mixins/mixins.js';\nconst { hasAccess } = useGlobalMixins();\n\n// Organization backoffice navigation configuration\nexport const navigationItems = [\n  {\n    category: 'Organization',\n    items: [\n      {\n        title: 'Profile',\n        iconComponent: IconGroups,\n        route: (auth, route) => ({\n          name: 'Organization',\n          params: { _id: route.params._id }\n        }),\n        visible: (auth, route) => hasAccess(\n          route.params._id, \n          'members', \n          'read', \n          auth.accesses, \n          auth.access.roles\n        )\n      },\n      {\n        title: 'Members',\n        iconComponent: IconGroups,\n        route: (auth, route) => ({\n          name: 'Organization Members',\n          params: { _id: route.params._id }\n        }),\n        visible: (auth, route) => hasAccess(\n          route.params._id, \n          'members', \n          'read', \n          auth.accesses, \n          auth.access.roles\n        )\n      },\n      {\n        title: 'Settings',\n        iconComponent: IconGroups,\n        route: (auth, route) => ({\n          name: 'Organization Edit',\n          params: { _id: route.params._id }\n        }),\n        visible: (auth, route) => hasAccess(\n          route.params._id, \n          'members', \n          'read', \n          auth.accesses, \n          auth.access.roles\n        )\n      },\n    ]\n  },\n  {\n    category: 'Shop',\n    items: [\n      {\n        title: 'Products',\n        iconComponent: IconProducts,\n        route: (auth, route) => ({\n          name: 'Organization_Products',\n          params: { _id: route.params._id }\n        }),\n        visible: (auth, route) => hasAccess(\n          route.params._id, \n          'products', \n          'read', \n          auth.accesses, \n          auth.access.roles\n        )\n      },\n      {\n        title: 'Categories',\n        iconComponent: IconProducts,\n        route: (auth, route) => ({\n          name: 'Categories',\n          params: { _id: route.params._id }\n        }),\n        visible: (auth, route) => hasAccess(\n          route.params._id, \n          'products', \n          'read', \n          auth.accesses, \n          auth.access.roles\n        )\n      },\n      {\n        title: 'Leftovers',\n        iconComponent: IconLeftovers,\n        route: (auth, route) => ({\n          name: 'Leftovers',\n          params: { _id: route.params._id }\n        }),\n        visible: (auth, route) => hasAccess(\n          route.params._id, \n          'leftovers', \n          'read', \n          auth.accesses, \n          auth.access.roles\n        )\n      },\n    ]\n  },\n  {\n    category: 'Orders & Sales',\n    items: [\n      {\n        title: 'Orders',\n        iconComponent: IconOrders,\n        route: (auth, route) => ({\n          name: 'OrganizationOrdersList',\n          params: { _id: route.params._id }\n        }),\n        visible: (auth, route) => hasAccess(\n          route.params._id, \n          'orders', \n          'read', \n          auth.accesses, \n          auth.access.roles\n        )\n      },\n      {\n        title: 'Rents',\n        iconComponent: IconOrders,\n        route: (auth, route) => ({\n          name: 'Organization_Rents',\n          params: { _id: route.params._id }\n        }),\n        visible: (auth, route) => hasAccess(\n          route.params._id, \n          'orders', \n          'read', \n          auth.accesses, \n          auth.access.roles\n        )\n      },\n    ]\n  },\n  {\n    category: 'Content',\n    items: [\n      {\n        title: 'Gallery',\n        iconComponent: IconGallery,\n        route: (auth, route) => ({\n          name: 'Backoffice Gallery',\n          params: { _id: route.params._id }\n        }),\n        visible: (auth, route) => hasAccess(\n          route.params._id, \n          'gallery', \n          'read', \n          auth.accesses, \n          auth.access.roles\n        )\n      },\n      {\n        title: 'Events',\n        iconComponent: IconEvents,\n        route: (auth, route) => ({\n          name: 'Organization_Events Backoffice',\n          params: { _id: route.params._id }\n        }),\n        visible: (auth, route) => hasAccess(\n          route.params._id, \n          'events', \n          'read', \n          auth.accesses, \n          auth.access.roles\n        )\n      },\n      // Закомментированные пункты меню из оригинала также можно добавить при необходимости\n      // {\n      //   title: 'Community',\n      //   iconComponent: IconCommunity,\n      //   route: (auth, route) => ({\n      //     name: 'Backoffice Community',\n      //     params: { _id: route.params._id }\n      //   }),\n      // },\n      // {\n      //   title: 'Payments',\n      //   icon: '💰',\n      //   route: (auth, route) => ({\n      //     name: 'Payments',\n      //     params: { _id: route.params._id }\n      //   }),\n      // },\n    ]\n  },\n  // Закомментированное меню из оригинала\n  // {\n  //   category: 'System',\n  //   items: [\n  //     {\n  //       title: 'Organizations',\n  //       iconComponent: IconGroups,\n  //       route: (auth, route) => ({\n  //         name: 'Backoffice Organizations',\n  //         params: { _id: route.params._id }\n  //       }),\n  //     },\n  //     {\n  //       title: 'Reports',\n  //       icon: '📊',\n  //       route: (auth, route) => ({\n  //         name: 'Backoffice Reports',\n  //         params: { _id: route.params._id }\n  //       }),\n  //     },\n  //   ]\n  // },\n];\n\nexport default navigationItems;",
              "name": "navigation.organization.config.js",
              "size": 6061,
              "type": "source"
            }
          ]
        },
        "controllers": {
          "_files": [
            {
              "path": "../../src/modules/organizations/controllers/departments.controller.js",
              "relativePath": "modules/organizations/controllers/departments.controller.js",
              "extension": ".js",
              "content": "const controllerFactory = db => {\n  const Department = db.department;\n  const readOne = (req, res) => {\n    Department.findOne({ _id: req.params._id })\n      .populate('members.user')\n      .populate('subdepartments')\n      .then(department => {\n        if (!department) {\n          return res.status(404).send({ message: 'Отдел не найден' });\n        }\n        res.send(department);\n      })\n      .catch(err => {\n        res.status(500).send({ message: err.message });\n      });\n  };\n  const read = (req, res) => {\n    let query = {};\n    let options = {};\n    if (req.query.organization) {\n      query.organization = new db.mongoose.Types.ObjectId(req.query.organization);\n    }\n    if (req.query.hidden) {\n      query.hidden = req.query.hidden;\n    }\n    Department.find(query, null, options)\n      .populate('members.user')\n      .populate('subdepartments')\n      .then(departments => {\n        if (!departments) {\n          return res.status(404).send({ message: 'Departments not found' });\n        }\n        res.send(departments);\n      })\n      .catch(err => {\n        res.status(500).send({ message: err.message });\n      });\n  };\n  const create = async (req, res) => {\n    try {\n      const newDepartment = new Department({\n        ...req.body,\n        organization: req.params._id,\n      });\n      const data = await newDepartment.save();\n      res.send(data);\n    } catch (err) {\n      res.status(500).send({ message: err.message });\n    }\n  };\n  const update = (req, res) => {\n    Department.findOneAndUpdate({ _id: req.body._id }, req.body, { new: true })\n      .then(department => {\n        if (!department) {\n          return res.status(404).send({ message: 'Department not found' });\n        }\n        res.send(department);\n      })\n      .catch(err => {\n        res.status(500).send({ message: err.message });\n      });\n  };\n  const deleteDepartment = (req, res) => {\n    Department.findOneAndRemove({ _id: req.body._id, organization: req.params._id })\n      .then(department => {\n        if (!department) {\n          return res.status(404).send({ message: 'Department not found' });\n        }\n        res.send({ message: 'Department deleted successfully' });\n      })\n      .catch(err => {\n        res.status(500).send({ message: err.message });\n      });\n  };\n  return {\n    readOne,\n    read,\n    create,\n    update,\n    delete: deleteDepartment,\n  };\n};\nexport default controllerFactory;\n",
              "name": "departments.controller.js",
              "size": 2410,
              "type": "source"
            },
            {
              "path": "../../src/modules/organizations/controllers/invites.controller.js",
              "relativePath": "modules/organizations/controllers/invites.controller.js",
              "extension": ".js",
              "content": "import mailing from '@martyrs/src/modules/globals/controllers/utils/mailing.js';\nimport { uuid } from 'uuidv4';\nconst { sendEmail, sendSms } = mailing;\nconst сontrollerFactory = db => {\n  const User = db.user;\n  const Invite = db.invite;\n  const Membership = db.membership;\n  const getOneByCode = async (req, res) => {\n    try {\n      const invite = await Invite.findOne({ code: req.params._id });\n      if (!invite) {\n        return res.status(404).send({ message: 'Приглашение не найдено' });\n      }\n      res.send(invite);\n    } catch (err) {\n      res.status(500).send({ message: err.message });\n    }\n  };\n  const read = async (req, res) => {\n    try {\n      const invites = await Invite.find({ 'owner.target': req.params._id });\n      if (!invites || invites.length === 0) {\n        return res.status(200).send([]);\n      }\n      res.send(invites);\n    } catch (err) {\n      res.status(500).send({ message: err.message });\n    }\n  };\n  const create = async (req, res) => {\n    const creator = req.body.creator;\n    const owner = req.body.owner;\n    const list = req.body.invites;\n    const createdInvites = [];\n    const createdMemberships = [];\n    try {\n      for (let invite of list) {\n        let user = null;\n        if (!invite || !invite.contact) {\n          continue; // Пропускаем пустые объекты или объекты без contact\n        }\n        if (invite.contact.includes('@')) {\n          user = await User.findOne({ email: invite.contact });\n        } else {\n          user = await User.findOne({ phone: invite.contact });\n        }\n        if (user) {\n          const membership = new Membership({\n            user: user._id,\n            type: 'organization',\n            target: req.body.owner.target,\n            role: 'member',\n            label: 'member',\n          });\n          const savedMembership = await membership.save();\n          createdMemberships.push(savedMembership);\n        } else {\n          const newInvite = new Invite({\n            code: uuid(),\n            creator: creator,\n            owner: owner,\n            role: 'member',\n            email: invite.contact.includes('@') ? invite.contact : null,\n            phone: !invite.contact.includes('@') ? invite.contact : null,\n          });\n          const savedInvite = await newInvite.save();\n          createdInvites.push(savedInvite);\n          if (savedInvite.email !== null) {\n            const to = savedInvite.email;\n            const subject = 'You have been added to the organization';\n            const text = `You have been invited to join an organization on ${process.env.APP_NAME}! Use this link to register: ${process.env.API_URL}/auth/invite?inviteCode=${newInvite.code}&type=email`;\n            await sendEmail(to, subject, text);\n          }\n          if (savedInvite.phone !== null) {\n            const phone = savedInvite.phone;\n            const message = `You have been invited to join an organization on ${process.env.APP_NAME}! Use this link to register: ${process.env.API_URL}/auth/invite?inviteCode=${newInvite.code}&type=phone`;\n            await sendSms(phone, message);\n          }\n        }\n      }\n      res.status(200).json({\n        message: 'Invites sent successfully!',\n        createdInvites: createdInvites,\n        createdMemberships: createdMemberships,\n      });\n    } catch (error) {\n      console.error(error);\n      res.status(500).json({ message: 'Something went wrong' });\n    }\n  };\n  const deleteInvite = async (req, res) => {\n    try {\n      const invite = await Invite.findOneAndDelete({ _id: req.params._id });\n      if (!invite) {\n        return res.status(404).send({ message: 'Invite not found' });\n      }\n      res.send({ message: 'Invite deleted successfully' });\n    } catch (err) {\n      res.status(500).send({ message: err.message });\n    }\n  };\n  return {\n    getOneByCode,\n    read,\n    create,\n    delete: deleteInvite,\n  };\n};\nexport default сontrollerFactory;\n",
              "name": "invites.controller.js",
              "size": 3910,
              "type": "source"
            },
            {
              "path": "../../src/modules/organizations/controllers/memberships.controller.js",
              "relativePath": "modules/organizations/controllers/memberships.controller.js",
              "extension": ".js",
              "content": "import queryProcessorGlobals from '@martyrs/src/modules/globals/controllers/utils/queryProcessor.js';\nimport { Types } from 'mongoose';\nconst ObjectId = { Types }.Types.ObjectId;\nconst controllerFactory = db => {\n  const Membership = db.membership;\n  const Department = db.department;\n  const read = async (req, res) => {\n    try {\n      let search = req.query.search;\n      let regexPattern = '';\n      if (search) {\n        // Экранируем специальные символы\n        search = search.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n        const parts = search.split('.');\n        if (parts.length === 2) {\n          // Создаем паттерн для точного соответствия каждой части\n          regexPattern = parts.join('\\\\.');\n        } else {\n          // Если нет точки, применяем точное соответствие ко всей строке\n          regexPattern = search;\n        }\n      }\n      const memberships = await Membership.aggregate([\n        {\n          $lookup: {\n            from: 'users',\n            localField: 'user',\n            foreignField: '_id',\n            as: 'user',\n          },\n        },\n        {\n          $match: {\n            ...(req.query.user && { user: new ObjectId(req.query.user) }),\n            ...(req.query.type && { type: req.query.type }),\n            ...(req.query.target && { target: new ObjectId(req.query.target) }),\n            ...(req.query.role && { role: { $in: req.query.role } }),\n            ...(req.query.search && {\n              $or: [\n                { 'user.profile.name': { $regex: regexPattern, $options: 'i' } },\n                { 'user.email': { $regex: regexPattern, $options: 'i' } },\n                { 'user.phone': { $regex: regexPattern, $options: 'i' } },\n              ],\n            }),\n          },\n        },\n        {\n          $unwind: '$user',\n        },\n        // Pagination\n        ...queryProcessorGlobals.getSortingOptions(req.query.sortParam, req.query.sortOrder),\n        ...queryProcessorGlobals.getPaginationOptions(req.query.skip, req.query.limit),\n      ]);\n      if (!memberships) {\n        return res.status(404).send({ errorCode: 'MEMBERSHIPS_NOT_FOUND' });\n      }\n      res.send(memberships);\n    } catch (err) {\n      console.log(err);\n      res.status(500).send({ errorCode: 'SERVER_ERROR' });\n    }\n  };\n  const create = async (req, res) => {\n    const newMembership = new Membership({\n      user: req.body.user,\n      type: req.body.type,\n      target: req.body.target,\n      role: req.body.role,\n    });\n    try {\n      const data = await newMembership.save();\n      res.send(data);\n    } catch (err) {\n      console.log(err);\n      res.status(500).send({ errorCode: 'SERVER_ERROR' });\n    }\n  };\n  const update = async (req, res) => {\n    try {\n      const membership = await Membership.findByIdAndUpdate(req.body._id, req.body, { new: true });\n      if (!membership) {\n        return res.status(404).send({ errorCode: 'MEMBERSHIP_NOT_FOUND' });\n      }\n      res.send(membership);\n    } catch (err) {\n      res.status(500).send({ errorCode: 'SERVER_ERROR' });\n    }\n  };\n  const deleteMembership = async (req, res) => {\n    const { _id, type, target, user, role } = req.body;\n    try {\n      // Обрабатываем сценарий когда мы не знаем _id нашего membership\n      const membership = _id ? await Membership.findOneAndDelete({ _id: new ObjectId(_id) }) : await Membership.findOneAndDelete({ type, target, user, role });\n      if (!membership) {\n        return res.status(404).send({ errorCode: 'MEMBERSHIP_NOT_FOUND' });\n      }\n      // Удаление пользователя из departments\n      if (membership.type === 'organization') {\n        await Department.updateMany({ organization: target }, { $pull: { members: { user: user } } });\n      }\n      res.status(200).send(membership);\n    } catch (error) {\n      console.log(error);\n      res.status(500).send({ errorCode: 'SERVER_ERROR' });\n    }\n  };\n  return {\n    read,\n    create,\n    update,\n    deleteMembership,\n  };\n};\nexport default controllerFactory;\n",
              "name": "memberships.controller.js",
              "size": 3960,
              "type": "source"
            },
            {
              "path": "../../src/modules/organizations/controllers/organizations.controller.js",
              "relativePath": "modules/organizations/controllers/organizations.controller.js",
              "extension": ".js",
              "content": "import Cache from '@martyrs/src/modules/globals/controllers/classes/globals.cache.js';\nimport queryProcessorGlobals from '@martyrs/src/modules/globals/controllers/utils/queryProcessor.js';\nimport addMembersQuantity from '@martyrs/src/modules/organizations/controllers/utils/addMembersQuantity.js';\nimport addUserStatusFields from '@martyrs/src/modules/organizations/controllers/utils/addUserStatusFields.js';\nimport jwt from 'jsonwebtoken';\nimport lookupConfigs from './utils/lookupConfigs.js';\nimport {\n  getBasicMatchConditions,\n  getContainConditions,\n  getLocationStages,\n  getLookupStages,\n  getPostableConditions,\n  getPriceConditions,\n  getRequestedLookups,\n} from './utils/queryProcessorOrganizations.js';\nconst controllerFactory = db => {\n  const Organization = db.organization;\n  const Department = db.department;\n  const Membership = db.membership;\n  // Создаем экземпляр вашего кэша с TTL 5 минут (по умолчанию)\n  const cache = new Cache({ ttlSeconds: 60 * 5 });\n  const read = async (req, res) => {\n    console.log('controller query', req.query);\n    try {\n      const cacheKey = JSON.stringify(req.query); // Ключ кэша на основе запроса\n      // Проверяем, есть ли данные в кэше\n      let cachedResult = await cache.get(cacheKey);\n      if (cachedResult) {\n        // Если данные в кэше есть, возвращаем их\n        return res.status(200).send(cachedResult);\n      }\n      const requestedLookups = getRequestedLookups(req.query);\n      const matchConditions = getBasicMatchConditions(req.query);\n      const stages = [\n        ...getLookupStages(requestedLookups, lookupConfigs),\n        ...getPostableConditions(req.query.postable),\n        ...getContainConditions(req.query.contain),\n        ...queryProcessorGlobals.getSearchOptions(req.query.search, {\n          fields: requestedLookups.includes('products') ? ['profile.name', 'products.name'] : ['profile.name'],\n        }),\n        ...(requestedLookups.includes('products') && req.query.prices ? getPriceConditions(req.query.prices) : []),\n        ...(requestedLookups.includes('spots') ? (await getLocationStages(req.query)).stages : []),\n        ...(requestedLookups.includes('memberships') ? [addUserStatusFields(req.query.user), addMembersQuantity(req.query.user)] : []),\n        ...(matchConditions.length > 0 ? [{ $match: { $and: matchConditions } }] : []),\n        ...queryProcessorGlobals.getSortingOptions(req.query.sortParam, req.query.sortOrder),\n        ...queryProcessorGlobals.getPaginationOptions(req.query.skip, req.query.limit),\n      ].filter(Boolean);\n      console.log(JSON.stringify(stages, null, 2));\n      const organizations = await Organization.aggregate(stages);\n      // Кэшируем результат с тегами для каждой организации\n      for (const org of organizations) {\n        const orgTag = `organization_${org._id}`; // Уникальный тег для каждой организации\n        await cache.setWithTags(cacheKey, organizations, [orgTag, 'organizations']); // Добавляем оба тега\n      }\n      res.status(200).send(organizations);\n    } catch (err) {\n      console.error(err);\n      res.status(500).send({ message: err.message });\n    }\n  };\n  const create = async (req, res) => {\n    if (req.body._id === null) {\n      delete req.body._id;\n    }\n    try {\n      const organization = new Organization(req.body);\n      const savedOrganization = await organization.save();\n      const membership = new Membership({\n        user: savedOrganization.owner,\n        type: 'organization',\n        target: savedOrganization._id,\n        role: 'owner',\n        label: 'owner',\n      });\n      const savedMembership = await membership.save();\n      // Очищаем кэш для этой организации\n      const orgTag = `organization_${savedOrganization._id}`;\n      await cache.delByTag(orgTag);\n      // Convert the Mongoose document to a plain JavaScript object before caching\n      const organizationObject = savedOrganization.toObject();\n      // Обновляем кэш, добавляя новую организацию\n      const newCacheKey = JSON.stringify({ id: organizationObject._id });\n      await cache.setWithTags(newCacheKey, [organizationObject], [orgTag, 'organizations']);\n      res.status(201).json(savedOrganization);\n    } catch (error) {\n      console.error('Error:', error);\n      res.status(500).send(error);\n    }\n  };\n  const update = async (req, res) => {\n    try {\n      const organizationId = req.params._id;\n      const updatedData = req.body;\n      const organization = await Organization.findByIdAndUpdate(organizationId, updatedData, {\n        new: true,\n        runValidators: true,\n      });\n      if (!organization) {\n        return res.status(404).json({ message: 'Organization not found' });\n      }\n      // Очищаем кэш для этой организации\n      const orgTag = `organization_${organizationId}`;\n      await cache.delByTag(orgTag);\n      // Преобразуем документ Mongoose в обычный объект перед кэшированием\n      const organizationObject = organization.toObject();\n      // Обновляем кэш новой версией организации\n      const updateCacheKey = JSON.stringify({ _id: organizationId });\n      await cache.setWithTags(updateCacheKey, [organizationObject], [orgTag, 'organizations']);\n      res.status(200).json({ message: 'Organization updated successfully', organization });\n    } catch (error) {\n      res.status(500).json({ error: error.message });\n    }\n  };\n  const deleteOrganization = async (req, res) => {\n    try {\n      const organization = await Organization.findOneAndRemove({ _id: req.params._id });\n      if (!organization) {\n        return res.status(404).send({ message: 'Organization not found' });\n      }\n      // Удаление всех memberships, связанных с этой организацией\n      await Membership.deleteMany({ target: req.params._id });\n      const newToken = jwt.sign(\n        {\n          _id: req.userId, // Предполагаю, что req.userId доступен\n          organization: null,\n        },\n        process.env.SECRET_KEY,\n        {\n          expiresIn: 86400, // 24 hours\n        }\n      );\n      // Очищаем кэш для этой организации\n      const orgTag = `organization_${req.params._id}`;\n      await cache.delByTag(orgTag);\n      res.send({ newToken });\n    } catch (err) {\n      res.status(500).send({ message: err.message });\n    }\n  };\n  const checkAccesses = async (req, res) => {\n    try {\n      const uid = new db.mongoose.Types.ObjectId(req.userId);\n      const cacheKey = `accesses_${uid.toString()}`; // Уникальный ключ для кэша на основе userId\n      // Проверяем, есть ли данные в кэше\n      const cachedResult = await cache.get(cacheKey);\n      if (cachedResult) {\n        return res.status(200).json(cachedResult);\n      }\n      const depts = await Department.find({ 'members.user': uid }).lean(); // Используем lean() для получения обычных объектов\n      const ownedOrgs = await Organization.find({ owner: uid }).lean(); // Используем lean() для получения обычных объектов\n      const ownedOrgIds = ownedOrgs.map(org => org._id.toString());\n      const accesses = {};\n      const processAccesses = (orgId, isOwner, deptAccesses) => {\n        if (!accesses[orgId]) {\n          accesses[orgId] = { organization: orgId, rights: {} };\n        }\n        const rights = accesses[orgId].rights;\n        const defaultAccesses = new Department().accesses;\n        const accessData = isOwner ? defaultAccesses : deptAccesses;\n        Object.keys(accessData).forEach(key => {\n          if (!rights[key]) {\n            rights[key] = {};\n          }\n          const accessRights = accessData[key];\n          Object.entries(accessRights).forEach(([right, value]) => {\n            rights[key][right] = isOwner || rights[key][right] || value;\n          });\n        });\n      };\n      // Группируем департаменты по организациям\n      const orgDepts = depts.reduce((acc, dept) => {\n        const orgId = dept.organization.toString();\n        if (!acc[orgId]) {\n          acc[orgId] = [];\n        }\n        acc[orgId].push(dept);\n        return acc;\n      }, {});\n      // Обрабатываем права доступа для каждой организации\n      Object.entries(orgDepts).forEach(([orgId, departments]) => {\n        const combinedAccesses = departments.reduce((acc, dept) => {\n          Object.entries(dept.accesses).forEach(([key, rights]) => {\n            if (!acc[key]) {\n              acc[key] = {};\n            }\n            Object.entries(rights).forEach(([right, value]) => {\n              acc[key][right] = acc[key][right] || value;\n            });\n          });\n          return acc;\n        }, {});\n        processAccesses(orgId, false, combinedAccesses);\n      });\n      // Обрабатываем права доступа для организаций, которыми владеет пользователь\n      ownedOrgIds.forEach(orgId => {\n        processAccesses(orgId, true, {});\n      });\n      const accessArray = Object.values(accesses);\n      // Кэшируем результат с тегами: уникальный тег для пользователя и общий тег для всех доступов\n      const userTag = `access_${uid.toString()}`; // Тег для конкретного пользователя\n      await cache.setWithTags(cacheKey, accessArray, [userTag, 'accesses']);\n      res.status(200).json(accessArray);\n    } catch (err) {\n      console.error('Error getting accesses:', err);\n      res.status(500).json({ message: 'Internal server error' });\n    }\n  };\n  return {\n    fetch,\n    read,\n    create,\n    update,\n    delete: deleteOrganization, // Map the method to 'delete' key\n    checkAccesses,\n  };\n};\nexport default controllerFactory;\n",
              "name": "organizations.controller.js",
              "size": 9385,
              "type": "source"
            }
          ],
          "utils": {
            "_files": [
              {
                "path": "../../src/modules/organizations/controllers/utils/addMembersQuantity.js",
                "relativePath": "modules/organizations/controllers/utils/addMembersQuantity.js",
                "extension": ".js",
                "content": "// userStatus.js\n\nconst { ObjectId } = require('mongodb'); // Make sure to import ObjectId correctly from your MongoDB driver\n\nconst addMembersQuantity = user => {\n  return {\n    $addFields: {\n      numberOfSubscribers: {\n        $size: {\n          $filter: {\n            input: '$memberships',\n            as: 'membership',\n            cond: { $eq: ['$$membership.role', 'subscriber'] },\n          },\n        },\n      },\n      numberOfMembers: {\n        $size: {\n          $filter: {\n            input: '$memberships',\n            as: 'membership',\n            cond: { $not: { $in: ['$$membership.role', ['blocked', 'subscriber']] } },\n          },\n        },\n      },\n    },\n  };\n};\n\nexport default addMembersQuantity;\n",
                "name": "addMembersQuantity.js",
                "size": 721,
                "type": "source"
              },
              {
                "path": "../../src/modules/organizations/controllers/utils/addUserStatusFields.js",
                "relativePath": "modules/organizations/controllers/utils/addUserStatusFields.js",
                "extension": ".js",
                "content": "import * as mongodb from 'mongodb';\nconst { ObjectId } = mongodb;\nconst addUserStatusFields = user => {\n  return {\n    $addFields: {\n      isSubscriber: {\n        $cond: [\n          {\n            $anyElementTrue: {\n              $map: {\n                input: '$memberships',\n                as: 'membership',\n                in: {\n                  $and: [{ $eq: ['$$membership.user', new ObjectId(user)] }, { $eq: ['$$membership.role', 'subscriber'] }],\n                },\n              },\n            },\n          },\n          true,\n          false,\n        ],\n      },\n      isMember: {\n        $cond: [\n          {\n            $anyElementTrue: {\n              $map: {\n                input: '$memberships',\n                as: 'membership',\n                in: {\n                  $and: [{ $eq: ['$$membership.user', new ObjectId(user)] }, { $not: [{ $in: ['$$membership.role', ['subscriber', 'blocked']] }] }],\n                },\n              },\n            },\n          },\n          true,\n          false,\n        ],\n      },\n      isBlocked: {\n        $cond: [\n          {\n            $anyElementTrue: {\n              $map: {\n                input: '$memberships',\n                as: 'membership',\n                in: {\n                  $and: [{ $eq: ['$$membership.user', new ObjectId(user)] }, { $eq: ['$$membership.role', 'blocked'] }],\n                },\n              },\n            },\n          },\n          true,\n          false,\n        ],\n      },\n    },\n  };\n};\nexport default addUserStatusFields;\n",
                "name": "addUserStatusFields.js",
                "size": 1519,
                "type": "source"
              },
              {
                "path": "../../src/modules/organizations/controllers/utils/lookupConfigs.js",
                "relativePath": "modules/organizations/controllers/utils/lookupConfigs.js",
                "extension": ".js",
                "content": "const lookupConfigs = {\n  products: {\n    lookup: {\n      from: 'products',\n      localField: '_id',\n      foreignField: 'owner.target',\n      as: 'products',\n    },\n    additionalStages: [\n      {\n        $addFields: { numberOfProducts: { $size: '$products' } },\n      },\n    ],\n  },\n  blogposts: {\n    lookup: {\n      from: 'blogposts',\n      localField: '_id',\n      foreignField: 'owner.target',\n      as: 'blogposts',\n    },\n  },\n  departments: {\n    lookup: {\n      from: 'departments',\n      localField: '_id',\n      foreignField: 'organization',\n      as: 'departments',\n    },\n  },\n  spots: {\n    lookup: {\n      from: 'spots',\n      localField: '_id',\n      foreignField: 'organization',\n      as: 'spots',\n    },\n  },\n  memberships: {\n    lookup: {\n      from: 'memberships',\n      localField: '_id',\n      foreignField: 'target',\n      as: 'memberships',\n    },\n  },\n};\nexport default lookupConfigs;\n",
                "name": "lookupConfigs.js",
                "size": 912,
                "type": "source"
              },
              {
                "path": "../../src/modules/organizations/controllers/utils/queryProcessor.js",
                "relativePath": "modules/organizations/controllers/utils/queryProcessor.js",
                "extension": ".js",
                "content": "import { Types } from 'mongoose';\nconst ObjectId = { Types }.Types.ObjectId;\nasync function getBlockedMembers(Membership, userId) {\n  const memberships = await Membership.find({ user: userId });\n  return memberships.filter(membership => membership.role === 'blocked').map(membership => membership.target);\n}\nfunction addConditionsForBlocked(matchStage, field, blockedMembers) {\n  const conditionsForBlocked = { $nin: blockedMembers };\n  if (matchStage[field]) {\n    matchStage[field] = { $eq: matchStage[field], ...conditionsForBlocked };\n  } else {\n    matchStage[field] = conditionsForBlocked;\n  }\n  return matchStage;\n}\nconst AggregationProcessor = {\n  getMembersByRole: async (Membership, userId, role) => {\n    const memberships = await Membership.find({ user: userId, role: role });\n    return memberships.map(membership => new ObjectId(membership.target));\n  },\n  generateMatchStage: async (Membership, userOrFollowing, role, operation = '$in') => {\n    if (!userOrFollowing) {\n      return [];\n    }\n    const members = await AggregationProcessor.getMembersByRole(Membership, userOrFollowing, role);\n    if (members.length === 0) {\n      return [];\n    }\n    const typeMap = {\n      'owner.target': 'organization',\n      'creator.target': 'user',\n    };\n    const matchConditions = Object.keys(typeMap).map(key => ({\n      [key]: { [operation]: members },\n    }));\n    return [\n      {\n        $match: { $or: matchConditions },\n      },\n    ];\n  },\n  getBlockedStage: async (Membership, user) => {\n    if (user) {\n      let matchStage = {};\n      const blockedMembers = await getBlockedMembers(Membership, user);\n      console.log(blockedMembers);\n      if (blockedMembers.length > 0) {\n        let stage = {};\n        addConditionsForBlocked(stage, 'owner.target', blockedMembers);\n        addConditionsForBlocked(stage, 'creator.target', blockedMembers);\n        console.log(\n          'Maths is' +\n            [\n              {\n                $match: stage,\n              },\n            ]\n        );\n        return [\n          {\n            $match: stage,\n          },\n        ];\n      } else {\n        return [];\n      }\n    } else {\n      return [];\n    }\n  },\n  getFollowingStage: async (Membership, following) => {\n    // We use $in to match the members the user is following\n    return await AggregationProcessor.generateMatchStage(Membership, following, 'subscriber', '$in');\n  },\n};\nexport default AggregationProcessor;\n",
                "name": "queryProcessor.js",
                "size": 2439,
                "type": "source"
              },
              {
                "path": "../../src/modules/organizations/controllers/utils/queryProcessorOrganizations.js",
                "relativePath": "modules/organizations/controllers/utils/queryProcessorOrganizations.js",
                "extension": ".js",
                "content": "import * as googleMapsServicesJs from '@googlemaps/google-maps-services-js';\nimport { Types } from 'mongoose';\nconst ObjectId = { Types }.Types.ObjectId;\nconst { Client } = googleMapsServicesJs;\nconst client = new Client({});\nconst getRequestedLookups = query => (query.lookup ? (Array.isArray(query.lookup) ? query.lookup : [query.lookup]) : []);\nconst getLookupStages = (requestedLookups, configs) => {\n  if (!requestedLookups) return [];\n  const lookupsArray = Array.isArray(requestedLookups) ? requestedLookups : requestedLookups.split(',');\n  return lookupsArray\n    .map(lookup => configs[lookup])\n    .filter(Boolean)\n    .flatMap(config => [\n      { $lookup: config.lookup }, // Оберните lookup в объект с $lookup\n      ...(config.additionalStages || []),\n    ]);\n};\nconst getLocationStages = async query => {\n  if (!hasLocationParams(query)) {\n    return { stages: [], userLocation: null };\n  }\n  const location = await resolveLocation(query);\n  const radius = getRadius(query);\n  const geoStages = radius\n    ? [\n        {\n          $match: {\n            'spots.location.coordinates': {\n              $geoWithin: {\n                $centerSphere: [[location.coordinates[0], location.coordinates[1]], radius],\n              },\n            },\n          },\n        },\n      ]\n    : [];\n  return {\n    stages: [...geoStages, ...getDistanceStages(location)],\n    userLocation: location,\n  };\n};\nconst getRadius = query => {\n  if (query.locationRadius) return parseFloat(query.locationRadius) / 6378.1;\n  if (query.city) return 25 / 6378.1;\n  if (query.state) return 50 / 6378.1;\n  return null;\n};\nconst hasLocationParams = query => query.location || query.address || query.city || query.state || query.country;\nconst resolveLocation = async query => {\n  if (query.location) {\n    const parsedLocation = typeof query.location === 'string' ? JSON.parse(query.location) : query.location;\n    const coordinates = parsedLocation.lng ? [parsedLocation.lng, parsedLocation.lat] : parsedLocation.coordinates;\n    return { coordinates: coordinates.map(coord => parseFloat(coord)) };\n  }\n  const searchString = [query.address, query.city, query.state, query.country].filter(Boolean).join(', ');\n  try {\n    const geoResponse = await client.geocode({\n      params: {\n        address: searchString,\n        key: process.env.GOOGLE_MAPS_API_KEY,\n      },\n    });\n    if (!geoResponse.data.results?.length) {\n      throw new Error('Unable to geocode the provided location.');\n    }\n    const { lng, lat } = geoResponse.data.results[0].geometry.location;\n    return { coordinates: [lng, lat] };\n  } catch (err) {\n    throw new Error('Error occurred while geocoding.');\n  }\n};\nconst getDistanceStages = location => [\n  {\n    $addFields: {\n      spots: {\n        $map: {\n          input: '$spots',\n          as: 'spot',\n          in: {\n            $mergeObjects: [\n              '$$spot',\n              {\n                distance: {\n                  $function: {\n                    body: `function(spotCoords, userCoords, isMiles) {\n                      function toRad(x) {\n                        return x * Math.PI / 180;\n                      }\n                      var lon1 = spotCoords[0];\n                      var lat1 = spotCoords[1];\n                      var lon2 = userCoords[0];\n                      var lat2 = userCoords[1];\n                      var R = 6371;\n                      if (isMiles) R = 3959;\n                      var x1 = lat2 - lat1;\n                      var dLat = toRad(x1);\n                      var x2 = lon2 - lon1;\n                      var dLon = toRad(x2);\n                      var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n                              Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) *\n                              Math.sin(dLon / 2) * Math.sin(dLon / 2);\n                      var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n                      var d = R * c;\n                      return d;\n                    }`,\n                    args: ['$$spot.location.coordinates', location.coordinates, false],\n                    lang: 'js',\n                  },\n                },\n              },\n            ],\n          },\n        },\n      },\n    },\n  },\n  {\n    $addFields: {\n      distance: { $min: '$spots.distance' },\n      distanceExist: {\n        $cond: {\n          if: { $eq: [{ $type: '$distance' }, 'double'] },\n          then: true,\n          else: false,\n        },\n      },\n    },\n  },\n];\nconst getPriceConditions = prices => {\n  if (!prices) return [];\n  const priceRanges = prices.split(',');\n  const priceConditions = priceRanges.map(priceRange => {\n    if (priceRange.startsWith('<')) return { 'products.price': { $lt: parseInt(priceRange.slice(1)) } };\n    if (priceRange.startsWith('>')) return { 'products.price': { $gt: parseInt(priceRange.slice(1)) } };\n    const [min, max] = priceRange.split('-').map(Number);\n    return { 'products.price': { $gte: min, $lte: max } };\n  });\n  return priceConditions.length > 0 ? [{ $match: { $or: priceConditions } }] : [];\n};\nconst getContainConditions = contain => {\n  if (!contain) return [];\n  const conditions = contain.map(property => ({\n    [property]: { $exists: true, $not: { $size: 0 } },\n  }));\n  // Return a flat object rather than an array with a $match object\n  return conditions.length > 0 ? [{ $match: { $and: conditions } }] : [];\n};\nconst getBasicMatchConditions = query => [\n  ...(query._id ? [{ _id: new ObjectId(query._id) }] : []),\n  ...(query.owner ? [{ owner: new ObjectId(query.owner) }] : []),\n  ...(query.types ? [{ types: { $in: query.types } }] : []),\n  ...(query.member\n    ? [\n        {\n          memberships: {\n            $elemMatch: {\n              user: new ObjectId(query.member),\n              role: 'member',\n            },\n          },\n        },\n      ]\n    : []),\n  ...(query.subscriber\n    ? [\n        {\n          memberships: {\n            $elemMatch: {\n              user: new ObjectId(query.subscriber),\n              role: 'subscriber',\n            },\n          },\n        },\n      ]\n    : []),\n  ...(query.categories?.split(',').length > 0 ? [{ 'products.category': { $in: query.categories?.split(',') } }] : []),\n  ...(query.delivery?.split(',').length > 0 ? [{ 'spots.delivery': { $all: query.delivery?.split(',') } }] : []),\n];\nconst getPostableConditions = postableId => {\n  if (!postableId) return [];\n  return [\n    {\n      $match: {\n        $or: [\n          { owner: new ObjectId(postableId) },\n          {\n            $and: [\n              { types: { $elemMatch: { $eq: 'public' } } },\n              {\n                memberships: {\n                  $elemMatch: {\n                    user: new ObjectId(postableId),\n                  },\n                },\n              },\n            ],\n          },\n          {\n            $and: [\n              { types: { $elemMatch: { $in: ['exclusive', 'hidden'] } } },\n              {\n                memberships: {\n                  $elemMatch: {\n                    user: new ObjectId(postableId),\n                    role: { $ne: 'subscriber' },\n                  },\n                },\n              },\n            ],\n          },\n        ],\n      },\n    },\n  ];\n};\nexport { getBasicMatchConditions, getContainConditions, getDistanceStages, getLocationStages, getLookupStages, getPostableConditions, getPriceConditions, getRequestedLookups };\nexport default {\n  getRequestedLookups,\n  getLookupStages,\n  getPriceConditions,\n  getContainConditions,\n  getLocationStages,\n  getDistanceStages,\n  getBasicMatchConditions,\n  getPostableConditions,\n};\n",
                "name": "queryProcessorOrganizations.js",
                "size": 7561,
                "type": "source"
              }
            ]
          }
        },
        "middlewares": {
          "_files": [
            {
              "path": "../../src/modules/organizations/middlewares/verifyAccesses.js",
              "relativePath": "modules/organizations/middlewares/verifyAccesses.js",
              "extension": ".js",
              "content": "const middlewareFactory = db => {\n  const User = db.user;\n  const Organization = db.organization;\n  const Department = db.department;\n  const verifyAccess = (resource, accessType) => {\n    return async (req, res, next) => {\n      try {\n        const userId = req.userId ? new db.mongoose.Types.ObjectId(req.userId) : null;\n        let ownerData = req.body.owner || req.query.owner;\n        let accessResult = {\n          isAuthenticated: userId !== null,\n          isOrgOwner: false,\n          isOrgMember: false,\n          isAuthorized: false,\n          isPersonalOwner: false,\n        };\n        // Проверка, является ли owner объектом\n        if (typeof ownerData === 'object' && ownerData !== null) {\n          if (ownerData.type === 'Organization') {\n            ownerData = ownerData.target;\n          } else if (ownerData.type === 'User') {\n            accessResult.isPersonalOwner = ownerData.target === userId.toString();\n          }\n        }\n        // Если это личный ресурс пользователя\n        if (accessResult.isPersonalOwner) {\n          accessResult.isAuthorized = true;\n          req.accessResult = accessResult;\n          return next();\n        }\n        // Если owner - организация\n        if (!accessResult.isPersonalOwner) {\n          console.log('owner data', ownerData);\n          const ownerOrgId = new db.mongoose.Types.ObjectId(ownerData);\n          // Проверка на владельца организации\n          accessResult.isOrgOwner = await Organization.exists({\n            _id: ownerOrgId,\n            owner: userId,\n          });\n          if (accessResult.isOrgOwner) {\n            accessResult.isAuthorized = true;\n            req.accessResult = accessResult;\n            return next();\n          }\n          // Проверка членства в организации\n          const departments = await Department.find({\n            organization: ownerOrgId,\n            'members.user': userId,\n          });\n          accessResult.isOrgMember = departments.length > 0;\n          if (accessResult.isOrgMember) {\n            // Проверка прав доступа\n            accessResult.isAuthorized = departments.some(department => {\n              const accessRights = department.accesses[resource];\n              return accessRights && accessRights[accessType];\n            });\n          }\n        }\n        req.accessResult = accessResult;\n        next();\n      } catch (err) {\n        console.error('Access control errorCode:', err);\n        return res.status(403).json({ errorCode: 'ACCESS_DENIED' });\n      }\n    };\n  };\n  const handleAccessResult = (options = {}) => {\n    return (req, res, next) => {\n      const { accessResult } = req;\n      console.log('accesses is', accessResult);\n      if (!accessResult) {\n        return res.status(500).json({ errorCode: 'INTERNAL_ERROR' });\n      }\n      // Проверка аутентификации\n      if (!accessResult.isAuthenticated && !options.allowUnauthenticated) {\n        return res.status(401).json({ errorCode: 'UNAUTHORIZED' });\n      }\n      // Обработка различных сценариев доступа\n      if (accessResult.isAuthorized || accessResult.isPersonalOwner) {\n        // Пользователь авторизован или является личным владельцем, разрешаем доступ\n        return next();\n      } else if (options.allowPublished && req.method === 'GET') {\n        // Разрешаем доступ только к опубликованным ресурсам для GET-запросов\n        req.query.status = 'published';\n        return next();\n      } else if (options.customCheck && options.customCheck(accessResult, req)) {\n        // Пользовательская проверка доступа\n        return next();\n      }\n      // Если ни одно из условий не выполнено, отказываем в доступе\n      return res.status(403).json({ errorCode: 'ACCESS_DENIED' });\n    };\n  };\n  return {\n    verifyAccess,\n    handleAccessResult,\n  };\n};\nexport default middlewareFactory;\n",
              "name": "verifyAccesses.js",
              "size": 3801,
              "type": "source"
            },
            {
              "path": "../../src/modules/organizations/middlewares/verifyAccessesRefactored.js",
              "relativePath": "modules/organizations/middlewares/verifyAccessesRefactored.js",
              "extension": ".js",
              "content": "import accessControl from '@martyrs/src/modules/access-control.js';\nimport mongoose from 'mongoose';\nconst { AccessControlManager, PolicyRule } = accessControl;\nconst middlewareFactory = db => {\n  // Получаем модели из базы данных\n  const User = db.user;\n  const Organization = db.organization;\n  const Department = db.department;\n  // Создаем абстрактный менеджер контроля доступа\n  const createAccessControlManager = resourceName => {\n    const accessControlManager = new AccessControlManager({\n      User,\n      Organization,\n      Department,\n      [resourceName]: db[resourceName.toLowerCase()],\n    });\n    // Политика по умолчанию для владения личным ресурсом\n    accessControlManager.registerPolicy(\n      new PolicyRule('PersonalResourceOwnerPolicy', async attributes => {\n        // Проверка личного владения ресурсом\n        if (attributes.resource.owner?.type === 'User') {\n          return {\n            allowed: attributes.resource.owner.target === attributes.user.id,\n            reason: 'Personal resource ownership',\n          };\n        }\n        return { allowed: false };\n      })\n    );\n    // Политика для организационных ресурсов\n    accessControlManager.registerPolicy(\n      new PolicyRule('OrganizationAccessPolicy', async attributes => {\n        // Проверка доступа к ресурсам организации\n        if (attributes.resource.owner?.type === 'Organization') {\n          const orgId = attributes.resource.owner.target;\n          // Проверка на владельца организации\n          const isOrgOwner = await Organization.exists({\n            _id: new mongoose.Types.ObjectId(orgId),\n            owner: attributes.user.id,\n          });\n          if (isOrgOwner) {\n            return {\n              allow: true,\n              force: true,\n              reason: 'Organization Owner',\n            };\n          }\n          // Проверка членства в организации и прав доступа\n          const departments = await Department.find({\n            organization: new mongoose.Types.ObjectId(orgId),\n            'members.user': attributes.user.id,\n          });\n          // Динамическая проверка прав доступа для конкретного ресурса и действия\n          const hasAccess = departments.some(department => {\n            const accessRights = department.accesses[resourceName];\n            return accessRights && accessRights[attributes.action.type];\n          });\n          return {\n            allowed: hasAccess,\n            reason: hasAccess ? 'Organization Member with Access Rights' : 'No Access Rights in Organization',\n          };\n        }\n        return { allowed: false };\n      })\n    );\n    return accessControlManager;\n  };\n  // Создаем методы verify и handle для совместимости со старым подходом\n  const verifyAccess = (resource, accessType, options = {}) => {\n    return async (req, res, next) => {\n      const accessControlManager = createAccessControlManager(resource);\n      const context = {\n        userId: req.userId ? new db.mongoose.Types.ObjectId(req.userId) : null,\n        userRoles: req.user ? req.user.roles : [],\n        userDepartments: req.user ? req.user.departments : [],\n        resourceType: resource,\n        resourceOwner: req.body.owner || req.query.owner,\n        resourceStatus: req.body?.status || req.query?.status,\n        actionType: accessType,\n        requestMethod: req.method,\n        ipAddress: req.ip,\n        deviceType: req.get('User-Agent'),\n      };\n      const accessResult = await accessControlManager.checkAccess(context);\n      // Формируем accessResult в старом формате для обратной совместимости\n      req.accessResult = {\n        isAuthenticated: context.userId !== null,\n        isOrgOwner: accessResult.reason === 'Organization Owner',\n        isOrgMember: accessResult.reason.includes('Organization Member'),\n        isAuthorized: accessResult.allowed,\n        isPersonalOwner: accessResult.reason === 'Personal resource ownership',\n      };\n      next();\n    };\n  };\n  const handleAccessResult = (options = {}) => {\n    return (req, res, next) => {\n      const { accessResult } = req;\n      if (!accessResult) {\n        return res.status(500).json({ errorCode: 'INTERNAL_ERROR' });\n      }\n      // Проверка аутентификации\n      if (!accessResult.isAuthenticated && !options.allowUnauthenticated) {\n        return res.status(401).json({ errorCode: 'UNAUTHORIZED' });\n      }\n      // Обработка различных сценариев доступа\n      if (accessResult.isAuthorized || accessResult.isPersonalOwner) {\n        return next();\n      } else if (options.allowPublished && req.method === 'GET') {\n        req.query.status = 'published';\n        return next();\n      } else if (options.customCheck && options.customCheck(accessResult, req)) {\n        return next();\n      }\n      return res.status(403).json({ errorCode: 'ACCESS_DENIED' });\n    };\n  };\n  return {\n    verifyAccess,\n    handleAccessResult,\n  };\n};\nexport default middlewareFactory;\n",
              "name": "verifyAccessesRefactored.js",
              "size": 4896,
              "type": "source"
            }
          ]
        },
        "models": {
          "_files": [
            {
              "path": "../../src/modules/organizations/models/department.model.js",
              "relativePath": "modules/organizations/models/department.model.js",
              "extension": ".js",
              "content": "import accessesSchema from './schemas/accesses.schema.js';\nexport default db => {\n  // Схема отдела\n  const departmentSchema = new db.mongoose.Schema(\n    {\n      owner: {\n        type: db.mongoose.Schema.Types.ObjectId,\n        ref: 'User',\n      },\n      organization: {\n        type: db.mongoose.Schema.Types.ObjectId,\n        ref: 'Organization',\n      },\n      profile: {\n        photo: { type: String },\n        name: { type: String, required: true },\n        description: { type: String },\n        categories: [String],\n      },\n      worktime: [\n        {\n          day: String,\n          time: {\n            start: String,\n            end: String,\n          },\n        },\n      ],\n      hidden: {\n        type: Boolean,\n        default: false,\n      },\n      accesses: accessesSchema,\n      // Marketplace options\n      delivery: [String],\n      payment: [String],\n      members: [\n        {\n          user: {\n            type: db.mongoose.Schema.Types.ObjectId,\n            ref: 'User',\n          },\n          position: {\n            type: String,\n            default: 'Member',\n          },\n        },\n      ],\n      subdepartments: [\n        {\n          type: db.mongoose.Schema.Types.ObjectId,\n          ref: 'Department',\n        },\n      ],\n    },\n    {\n      timestamps: true,\n    }\n  );\n  departmentSchema.index({ organization: 1 });\n  const Department = db.mongoose.model('Department', departmentSchema);\n  return Department;\n};\n",
              "name": "department.model.js",
              "size": 1447,
              "type": "source"
            },
            {
              "path": "../../src/modules/organizations/models/invite.model.js",
              "relativePath": "modules/organizations/models/invite.model.js",
              "extension": ".js",
              "content": "import applyCredentialsSchema from '@martyrs/src/modules/globals/models/schemas/credentials.schema.js';\nimport applyOwnershipSchema from '@martyrs/src/modules/globals/models/schemas/ownership.schema.js';\nexport default db => {\n  const InviteSchema = new db.mongoose.Schema(\n    {\n      code: {\n        type: String,\n        required: true,\n        unique: true,\n      },\n      status: {\n        type: String,\n        enum: ['active', 'used', 'deactivated'],\n        default: 'active',\n      },\n      role: {\n        type: String,\n        default: 'member',\n      },\n    },\n    {\n      timestamps: true,\n    }\n  );\n  applyOwnershipSchema(InviteSchema, db);\n  applyCredentialsSchema(InviteSchema, db);\n  InviteSchema.index(\n    {\n      owner: 1,\n      email: 1,\n    },\n    {\n      unique: true,\n      partialFilterExpression: {\n        email: { $exists: true, $ne: '' },\n      },\n    }\n  );\n  InviteSchema.index(\n    {\n      owner: 1,\n      phone: 1,\n    },\n    {\n      unique: true,\n      partialFilterExpression: {\n        phone: { $exists: true, $ne: '' },\n      },\n    }\n  );\n  const Invite = db.mongoose.model('Invite', InviteSchema);\n  return Invite;\n};\n",
              "name": "invite.model.js",
              "size": 1158,
              "type": "source"
            },
            {
              "path": "../../src/modules/organizations/models/membership.model.js",
              "relativePath": "modules/organizations/models/membership.model.js",
              "extension": ".js",
              "content": "export default db => {\n  const MembershipSchema = new db.mongoose.Schema(\n    {\n      user: {\n        type: db.mongoose.Schema.Types.ObjectId,\n        ref: 'User',\n        required: true,\n      },\n      type: {\n        type: String,\n        enum: ['organization', 'department', 'user'],\n        default: 'organization',\n        required: true,\n      },\n      role: {\n        type: String,\n        default: 'subscriber',\n      },\n      label: {\n        type: String,\n        default: 'subscriber',\n      },\n      target: {\n        type: db.mongoose.Schema.Types.ObjectId,\n        ref: function (value) {\n          if (this.type === 'user') return 'User';\n          if (this.type === 'organization') return 'Organization';\n        },\n        required: true,\n      },\n    },\n    {\n      timestamps: true,\n    }\n  );\n  MembershipSchema.index({ user: 1, target: 1, role: 1 });\n  const Membership = db.mongoose.model('Membership', MembershipSchema);\n  return Membership;\n};\n",
              "name": "membership.model.js",
              "size": 968,
              "type": "source"
            },
            {
              "path": "../../src/modules/organizations/models/organization.model.js",
              "relativePath": "modules/organizations/models/organization.model.js",
              "extension": ".js",
              "content": "import applyEngagementSchema from '@martyrs/src/modules/globals/models/schemas/engagement.schema.js';\nimport accessesSchema from './schemas/accesses.schema.js';\nexport default db => {\n  const OrganizationSchema = new db.mongoose.Schema(\n    {\n      // Creator and owner of organizations\n      owner: {\n        type: db.mongoose.Schema.Types.ObjectId,\n        ref: 'User',\n        required: true,\n      },\n      official: {\n        type: Boolean,\n        default: false,\n      },\n      // Types of organizations\n      types: {\n        type: Array,\n        required: true,\n      },\n      accesses: accessesSchema,\n      // Information for profile\n      profile: {\n        photo: String,\n        name: {\n          type: String,\n          required: true,\n        },\n        description: String,\n        tags: [String],\n      },\n      // Contacts\n      contacts: {\n        email: String,\n        website: String,\n        phone: {\n          type: String,\n          // match: /^\\+?[1-9]\\d{1,14}$/\n        },\n        address: String,\n      },\n      socials: {\n        telegram: String,\n        twitter: String,\n        facebook: String,\n        instagram: String,\n        youtube: String,\n      },\n      // Computed Rating\n      rating: {\n        popularity: {\n          type: Number,\n          min: 0,\n          max: 1,\n        },\n        median: {\n          type: Number,\n          min: 0,\n          max: 5,\n        },\n        amount: Number,\n      },\n    },\n    {\n      timestamps: true,\n    }\n  );\n  applyEngagementSchema(OrganizationSchema, db);\n  OrganizationSchema.index({ _id: 1, owner: 1 });\n  // const Testimonial = require('./testimonial.model.js');\n  // OrganizationSchema.methods.calculateRating = async function() {\n  //   // Найдем все отзывы для данной организации\n  //   const testimonials = await Testimonial.find({ organization: this._id });\n  //   let sum = 0;\n  //   let median = 0;\n  //   let popularity = 0;\n  //   // Если нет отзывов, то все рейтинги равны 0\n  //   if (testimonials.length === 0) {\n  //     this.rating = {\n  //       amount: 0,\n  //       median: 0,\n  //       popularity: 0\n  //     };\n  //     return;\n  //   }\n  //   // Если есть отзывы, то вычисляем средний рейтинг\n  //   testimonials.forEach((testimonial) => {\n  //     sum += parseFloat(testimonial.rating); // предполагаем, что рейтинг - это число\n  //   });\n  //   median = sum / testimonials.length;\n  //   popularity = testimonials.length / 100;\n  //   // Обновляем рейтинг организации\n  //   this.rating = {\n  //     amount: testimonials.length,\n  //     median: median,\n  //     popularity: popularity\n  //   };\n  //   // Сохраняем изменения в модели организации\n  //   await this.save();\n  // }\n  const Organization = db.mongoose.model('Organization', OrganizationSchema);\n  return Organization;\n};\n",
              "name": "organization.model.js",
              "size": 2797,
              "type": "source"
            }
          ],
          "schemas": {
            "_files": [
              {
                "path": "../../src/modules/organizations/models/schemas/accesses.schema.js",
                "relativePath": "modules/organizations/models/schemas/accesses.schema.js",
                "extension": ".js",
                "content": "const accessesSchema = {\n  categories: {\n    create: {\n      type: Boolean,\n      default: false,\n    },\n    read: {\n      type: Boolean,\n      default: false,\n    },\n    edit: {\n      type: Boolean,\n      default: false,\n    },\n    delete: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  rents: {\n    create: {\n      type: Boolean,\n      default: false,\n    },\n    read: {\n      type: Boolean,\n      default: false,\n    },\n    edit: {\n      type: Boolean,\n      default: false,\n    },\n    delete: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  spots: {\n    create: {\n      type: Boolean,\n      default: false,\n    },\n    read: {\n      type: Boolean,\n      default: false,\n    },\n    edit: {\n      type: Boolean,\n      default: false,\n    },\n    delete: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  members: {\n    read: {\n      type: Boolean,\n      default: false,\n    },\n    edit: {\n      type: Boolean,\n      default: false,\n    },\n    delete: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  posts: {\n    create: {\n      type: Boolean,\n      default: false,\n    },\n    read: {\n      type: Boolean,\n      default: false,\n    },\n    edit: {\n      type: Boolean,\n      default: false,\n    },\n    delete: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  events: {\n    create: {\n      type: Boolean,\n      default: false,\n    },\n    read: {\n      type: Boolean,\n      default: false,\n    },\n    edit: {\n      type: Boolean,\n      default: false,\n    },\n    delete: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  tickets: {\n    create: {\n      type: Boolean,\n      default: false,\n    },\n    read: {\n      type: Boolean,\n      default: false,\n    },\n    edit: {\n      type: Boolean,\n      default: false,\n    },\n    delete: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  gallery: {\n    read: {\n      type: Boolean,\n      default: false,\n    },\n    create: {\n      type: Boolean,\n      default: false,\n    },\n    edit: {\n      type: Boolean,\n      default: false,\n    },\n    delete: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  leftovers: {\n    read: {\n      type: Boolean,\n      default: false,\n    },\n    edit: {\n      type: Boolean,\n      default: false,\n    },\n    delete: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  products: {\n    read: {\n      type: Boolean,\n      default: false,\n    },\n    edit: {\n      type: Boolean,\n      default: false,\n    },\n    delete: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  orders: {\n    read: {\n      type: Boolean,\n      default: false,\n    },\n    confirm: {\n      type: Boolean,\n      default: false,\n    },\n    delete: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  departments: {\n    read: {\n      type: Boolean,\n      default: false,\n    },\n    edit: {\n      type: Boolean,\n      default: false,\n    },\n    delete: {\n      type: Boolean,\n      default: false,\n    },\n  },\n};\nexport default accessesSchema;\n",
                "name": "accesses.schema.js",
                "size": 2984,
                "type": "source"
              }
            ]
          }
        },
        "_files": [
          {
            "path": "../../src/modules/organizations/organizations.client.js",
            "relativePath": "modules/organizations/organizations.client.js",
            "extension": ".js",
            "content": "// Store\nimport * as storeDepartments from './store/departments.js';\nimport * as storeInvites from './store/invites.js';\nimport * as storeMemberships from './store/memberships.js';\nimport * as storeOrganizations from './store/organizations.js';\n\n// Router\nimport routerOrganization from './router/organizations.js';\n\n// Views\n// Pages\nimport Department from './components/pages/Department.vue';\nimport DepartmentEdit from './components/pages/DepartmentEdit.vue';\nimport Organization from './components/pages/Organization.vue';\nimport OrganizationEdit from './components/pages/OrganizationEdit.vue';\nimport Organizations from './components/pages/Organizations.vue';\n\n// Blocks\nimport CardDepartment from './components/blocks/CardDepartment.vue';\nimport CardOrganization from './components/blocks/CardOrganization.vue';\nimport Contacts from './components/blocks/Contacts.vue';\nimport DepartmentSub from './components/blocks/DepartmentSub.vue';\nimport EditArray from './components/blocks/EditArray.vue';\nimport EmptyState from './components/blocks/EmptyState.vue';\nimport Rating from './components/blocks/Rating.vue';\nimport Socials from './components/blocks/Socials.vue';\nimport Unit from './components/blocks/Unit.vue';\n\n// Sections\nimport DetailsTabSection from './components/sections/DetailsTabSection.vue';\nimport Documents from './components/sections/Documents.vue';\nimport MembersAdd from './components/sections/MembersAdd.vue';\nimport OrganizationsSection from './components/sections/Organizations.vue';\nimport Publics from './components/sections/Publics.vue';\n\n// Elements\nimport ButtonToggleMembership from './components/elements/ButtonToggleMembership.vue';\n\n// Пример функции инициализации для модуля организаций\nfunction initializeOrganization(app, store, router, options = {}) {\n  const route = options.route || 'Home';\n\n  router.addRoute(route, routerOrganization);\n\n  store.addStore('departments', storeDepartments);\n  store.addStore('memberships', storeMemberships);\n  store.addStore('organizations', storeOrganizations);\n  store.addStore('invites', storeInvites);\n}\n\n// Export components, store modules, and routes\nexport {\n  ButtonToggleMembership,\n  CardDepartment,\n  CardOrganization,\n  Contacts,\n  Department,\n  DepartmentEdit,\n  DepartmentSub,\n  DetailsTabSection,\n  Documents,\n  EditArray,\n  EmptyState,\n  MembersAdd,\n  Organization,\n  OrganizationEdit,\n  Organizations,\n  OrganizationsSection,\n  Publics,\n  Rating,\n  Socials,\n  Unit,\n  routerOrganization,\n  storeDepartments,\n  storeInvites,\n  storeMemberships,\n  storeOrganizations,\n};\n\nconst ModuleOrganization = {\n  initialize: initializeOrganization,\n  views: {\n    store: {\n      storeDepartments,\n      storeMemberships,\n      storeOrganizations,\n      storeInvites,\n    },\n    router: {\n      routerOrganization,\n    },\n    components: {\n      // Pages\n      Organization,\n      Department,\n      OrganizationEdit,\n      Organizations,\n      DepartmentEdit,\n      // Blocks\n      CardOrganization,\n      EditArray,\n      Unit,\n      DepartmentSub,\n      CardDepartment,\n      Rating,\n      EmptyState,\n      Contacts,\n      Socials,\n      // Sections\n      MembersAdd,\n      DetailsTabSection,\n      OrganizationsSection,\n      Publics,\n      Documents,\n      // Elements\n      ButtonToggleMembership,\n    },\n  },\n};\n\nexport default ModuleOrganization;\n",
            "name": "organizations.client.js",
            "size": 3332,
            "type": "source"
          },
          {
            "path": "../../src/modules/organizations/organizations.server.js",
            "relativePath": "modules/organizations/organizations.server.js",
            "extension": ".js",
            "content": "import globalsabac from '@martyrs/src/modules/globals/controllers/classes/globals.abac.js';\nimport DepartmentsController from './controllers/departments.controller.js';\nimport InvitesController from './controllers/invites.controller.js';\nimport MembershipsController from './controllers/memberships.controller.js';\nimport OrganizationsController from './controllers/organizations.controller.js';\nimport DepartmentModel from './models/department.model.js';\nimport InviteModel from './models/invite.model.js';\nimport MembershipModel from './models/membership.model.js';\nimport OrganizationModel from './models/organization.model.js';\nimport initOrganizationPolicies from './policies/organizations.policies.js';\nimport departmentsRoutes from './routes/departments.routes.js';\nimport invitesRoutes from './routes/invites.routes.js';\nimport membershipsRoutes from './routes/memberships.routes.js';\nimport organizationsRoutes from './routes/organizations.routes.js';\nconst { getInstance } = globalsabac;\nfunction initializeOrganization(app, db, origins, publicPath) {\n  // Настраиваем модели в объекте базы данных\n  db.department = DepartmentModel(db);\n  db.organization = OrganizationModel(db);\n  db.membership = MembershipModel(db);\n  db.invite = InviteModel(db);\n  const abac = getInstance(db);\n  const organizationPolicies = initOrganizationPolicies(abac, db);\n  // Настраиваем маршруты, если объект приложения передан\n  if (app) {\n    departmentsRoutes(app, db, origins, publicPath);\n    organizationsRoutes(app, db, origins, publicPath);\n    membershipsRoutes(app, db, origins, publicPath);\n    invitesRoutes(app, db, origins, publicPath);\n  }\n}\nexport const models = {\n  DepartmentModel,\n  OrganizationModel,\n  MembershipModel,\n  InviteModel,\n};\nexport const routes = {\n  departmentsRoutes,\n  organizationsRoutes,\n  membershipsRoutes,\n  invitesRoutes,\n};\nexport const controllers = {\n  DepartmentsController,\n  OrganizationsController,\n  MembershipsController,\n  InvitesController,\n};\nexport { initializeOrganization as initialize };\nexport default {\n  initialize: initializeOrganization,\n  models,\n  routes,\n  controllers,\n};\n",
            "name": "organizations.server.js",
            "size": 2128,
            "type": "source"
          }
        ],
        "policies": {
          "_files": [
            {
              "path": "../../src/modules/organizations/policies/organizations.policies.js",
              "relativePath": "modules/organizations/policies/organizations.policies.js",
              "extension": ".js",
              "content": "import Validator from '@martyrs/src/modules/globals/controllers/classes/globals.Validator.js';\nimport Verifier from '@martyrs/src/modules/globals/controllers/classes/globals.verifier.js';\nexport default (function initializeOrganizationPolicies(abacAccessControl, db) {\n  const Organization = db.organization;\n  const Department = db.department;\n  // Инициализация валидатора с конфигурацией для публичного доступа\n  const publicAccessVerifier = new Verifier({\n    status: {\n      rule: 'optional',\n      validator: Validator.schema({ context: 'Status' }).string().required().oneOf(['published', 'active', 'featured']),\n    },\n  });\n  // Регистрация глобальной политики\n  abacAccessControl.registerGlobalPolicy('OrganizationAccessPolicy', async context => {\n    const { user, resource, data, action, currentResource, req } = context;\n    if (!resource || !action) {\n      return {\n        allow: false,\n        force: false,\n        reason: 'MISSING_REQUIRED_PARAMETERS',\n      };\n    }\n    // Безопасный поиск ID организации\n    const findOrgId = () => {\n      try {\n        if (currentResource?.owner?.type === 'organization') {\n          return String(currentResource.owner.target);\n        }\n        if (data?.owner?.type === 'organization') {\n          return String(data.owner.target);\n        }\n      } catch (error) {\n        console.error('Error finding organization ID:', error);\n      }\n      return null;\n    };\n    const orgId = findOrgId();\n    // Если не связано с организацией, пропускаем эту политику\n    if (!orgId) {\n      return {\n        allow: true,\n        force: false,\n        reason: 'NOT_ORGANIZATION_RESOURCE',\n      };\n    }\n    // Если пользователь указан, проверяем его доступы\n    if (user) {\n      try {\n        // Проверяем, является ли пользователь владельцем организации\n        const objectId = new db.mongoose.Types.ObjectId(orgId);\n        const isOrgOwner = await Organization.exists({\n          _id: objectId,\n          owner: user,\n        });\n        if (isOrgOwner) {\n          return {\n            allow: true,\n            force: true, // Владелец организации получает принудительный доступ\n            reason: 'ORGANIZATION_OWNER_ACCESS',\n          };\n        }\n        // Проверяем доступы в департаментах\n        const departments = await Department.find({\n          organization: objectId,\n          'members.user': user,\n        });\n        const hasAccess = departments.some(department => {\n          const accessRights = department.accesses?.[resource];\n          return accessRights && accessRights[action];\n        });\n        if (hasAccess) {\n          return {\n            allow: true,\n            force: false, // Доступ через департамент не является принудительным\n            reason: 'DEPARTMENT_MEMBER_ACCESS',\n          };\n        }\n      } catch (error) {\n        console.error('Error checking user access:', error);\n        return {\n          allow: false,\n          force: false,\n          reason: 'ORGANIZATION_ACCESS_CHECK_ERROR',\n        };\n      }\n    }\n    // Если доступа у пользователя нет, переходим к валидации query для публичного доступа\n    if (action === 'read' && req && req.query) {\n      try {\n        // Валидируем параметры запроса\n        const validationResult = publicAccessVerifier.verify(req.query, {\n          only: ['status'],\n        });\n        // Обновляем query параметры в запросе\n        req.query = validationResult.verifiedData;\n        // Сохраняем результаты валидации\n        req.queryValidation = validationResult;\n        // Проверяем статус ресурса, если он есть\n        if (currentResource && !publicAccessVerifier.verifyParam('status', currentResource.status)) {\n          return {\n            allow: false,\n            force: false, // Принудительно запрещаем доступ к непубличным ресурсам\n            reason: 'INVALID_RESOURCE_STATUS_FOR_PUBLIC_ACCESS',\n          };\n        }\n        if (validationResult.isValid) {\n          return {\n            allow: true,\n            force: false,\n            reason: 'PUBLIC_ACCESS_ALLOWED',\n          };\n        } else {\n          return {\n            allow: false,\n            force: false, // Принудительно запрещаем, если невалидные параметры\n            reason: 'INVALID_PUBLIC_ACCESS_PARAMETERS',\n          };\n        }\n      } catch (error) {\n        console.error('Error validating query:', error);\n        return {\n          allow: false,\n          force: false,\n          reason: 'QUERY_VALIDATION_ERROR',\n        };\n      }\n    }\n    // Для других операций, кроме read (create, edit, delete),\n    // если пользователь не имеет прав, принудительно запрещаем\n    if (action !== 'read') {\n      return {\n        allow: false,\n        force: false,\n        reason: 'ORGANIZATION_RESOURCE_OPERATION_FORBIDDEN',\n      };\n    }\n    // Для read, если не прошли ни одну проверку,\n    // принудительно запрещаем доступ к ресурсу организации\n    return {\n      allow: false,\n      force: false,\n      reason: 'ORGANIZATION_RESOURCE_ACCESS_DENIED',\n    };\n  });\n  // Добавляем методы для управления валидатором в ABAC с защитой от внедрения\n  abacAccessControl.updatePublicAccessConfig = newConfig => {\n    if (typeof newConfig !== 'object' || newConfig === null) {\n      throw new TypeError('Config must be an object');\n    }\n    publicAccessVerifier.updateConfig(newConfig);\n  };\n  abacAccessControl.getPublicAccessConfig = () => {\n    return publicAccessVerifier.getConfig();\n  };\n  // Добавляем сам валидатор для возможности использования в других местах\n  abacAccessControl.publicAccessVerifier = publicAccessVerifier;\n  return abacAccessControl;\n});\n",
              "name": "organizations.policies.js",
              "size": 5601,
              "type": "source"
            }
          ]
        },
        "router": {
          "_files": [
            {
              "path": "../../src/modules/organizations/router/backoffice.router.js",
              "relativePath": "modules/organizations/router/backoffice.router.js",
              "extension": ".js",
              "content": "import layoutEmpty from '@martyrs/src/modules/globals/views/components/layouts/Empty.vue';\n\nconst backofficeRoutes = [\n  {\n    path: 'backoffice',\n    component: layoutEmpty,\n    // beforeEnter: [\n    //   validationAuth.requiresAdmin,\n    // ],\n    children: [\n      {\n        path: '',\n        name: 'Backoffice',\n        meta: {\n          title: {\n            en: 'Backoffice',\n            ru: 'Управление',\n          },\n          authorize: [],\n        },\n        component: () => import(/* webpackChunkName: 'Organizations' */ '@martyrs/src/modules/organizations/components/pages/OrganizationBackoffice.vue'),\n      },\n    ],\n  },\n];\n\nexport default backofficeRoutes;\n",
              "name": "backoffice.router.js",
              "size": 673,
              "type": "source"
            },
            {
              "path": "../../src/modules/organizations/router/departments.router.js",
              "relativePath": "modules/organizations/router/departments.router.js",
              "extension": ".js",
              "content": "import * as validationAuth from '@martyrs/src/modules/auth/views/middlewares/auth.validation.js';\n\nconst departmentRoutes = [\n  {\n    path: 'departments/create',\n    name: 'Department Creation',\n    meta: {\n      title: 'Создание отдела',\n    },\n    beforeEnter: [validationAuth.requiresAuth],\n    component: () => import('@martyrs/src/modules/organizations/components/pages/DepartmentEdit.vue'),\n  },\n  {\n    path: 'departments/:department',\n    name: 'Department',\n    meta: {\n      title: 'Отдел',\n    },\n    beforeEnter: [validationAuth.requiresAuth],\n    component: () => import('@martyrs/src/modules/organizations/components/pages/Department.vue'),\n  },\n  {\n    path: 'departments/:department/edit',\n    name: 'Department Edit',\n    meta: {\n      title: 'Редактирование отдела',\n    },\n    beforeEnter: [validationAuth.requiresAuth],\n    component: () => import('@martyrs/src/modules/organizations/components/pages/DepartmentEdit.vue'),\n  },\n];\n\nexport default departmentRoutes;\n",
              "name": "departments.router.js",
              "size": 985,
              "type": "source"
            },
            {
              "path": "../../src/modules/organizations/router/members.router.js",
              "relativePath": "modules/organizations/router/members.router.js",
              "extension": ".js",
              "content": "const membersRoutes = [\n  {\n    path: 'members',\n    name: 'Organization Members',\n    meta: {\n      title: {\n        en: 'Members',\n        ru: 'Участники',\n      },\n    },\n    component: () => import('@martyrs/src/modules/organizations/components/pages/Members.vue'),\n  },\n  {\n    path: 'members/invite',\n    name: 'Invite Member',\n    component: () => import('@martyrs/src/modules/organizations/components/sections/MembersAdd.vue'),\n  },\n];\n\nexport default membersRoutes;\n",
              "name": "members.router.js",
              "size": 475,
              "type": "source"
            },
            {
              "path": "../../src/modules/organizations/router/organizations.js",
              "relativePath": "modules/organizations/router/organizations.js",
              "extension": ".js",
              "content": "import backofficeRoutes from '@martyrs/src/modules/organizations/router/backoffice.router.js';\nimport departmentRoutes from './departments.router.js';\nimport membersRoutes from './members.router.js';\n\nimport { createEventRoutes } from '@martyrs/src/modules/events/router/events.js';\nimport { createRentsRoutes } from '@martyrs/src/modules/rents/views/router/rents.router.js';\n\nimport categoriesRoutes from '@martyrs/src/modules/products/router/categories.router.js';\nimport leftoversRoutes from '@martyrs/src/modules/products/router/leftovers.router.js';\nimport { createProductRoutes } from '@martyrs/src/modules/products/router/products.router.js';\n\nimport galleryBackofficeRoutes from '@martyrs/src/modules/gallery/router/gallery.backoffice.router.js';\nimport paymentsRoutes from '@martyrs/src/modules/wallet/views/router/payments.router.js';\n\nimport * as validationAuth from '@martyrs/src/modules/auth/views/middlewares/auth.validation.js';\n\nimport SidebarOrganization from '@martyrs/src/modules/organizations/components/pages/OrganizationBackoffice.vue';\nimport { navigationItems } from '@martyrs/src/modules/organizations/configs/navigation.organization.config.js';\n\nconst organizations = {\n  path: 'organizations',\n  meta: {\n    title: {\n      en: 'Organizations',\n      ru: 'Организации',\n    },\n    breadcrumbs: {\n      hidden: true,\n    },\n  },\n  children: [\n    {\n      path: 'create',\n      name: 'Create Organization',\n      meta: {\n        title: {\n          en: 'Create Organization',\n          ru: 'Создать Организацию',\n        },\n      },\n      beforeEnter: [validationAuth.requiresAuth],\n      component: () => import('@martyrs/src/modules/organizations/components/pages/OrganizationEdit.vue'),\n    },\n    {\n      path: ':_id',\n      name: 'OrganizationRoot',\n      meta: {\n        title: {\n          en: 'Group',\n          ru: 'Группа',\n        },\n        // sidebar_navigation: SidebarOrganization,\n        sidebar_navigation_items: navigationItems,\n      },\n      children: [\n        {\n          path: '',\n          name: 'Organization',\n          meta: {\n            title: {\n              en: 'Group',\n              ru: 'Группа',\n            },\n            breadcrumbs: {\n              hidden: true,\n            },\n          },\n          component: () => import('@martyrs/src/modules/organizations/components/pages/Organization.vue'),\n        },\n        ...membersRoutes,\n        ...departmentRoutes,\n        createProductRoutes('Organization_'),\n        createEventRoutes('Organization_'),\n        createRentsRoutes('Organization_'),\n        ...categoriesRoutes,\n        ...leftoversRoutes,\n        ...paymentsRoutes,\n        ...galleryBackofficeRoutes,\n        ...backofficeRoutes,\n      ],\n    },\n    {\n      path: ':_id/edit',\n      name: 'Organization Edit',\n      meta: {\n        title: {\n          en: 'Edit Organization',\n          ru: 'Редактировать Организацию',\n        },\n        sidebar_navigation_items: navigationItems,\n      },\n      beforeEnter: [validationAuth.requiresAuth],\n      component: () => import('@martyrs/src/modules/organizations/components/pages/OrganizationEdit.vue'),\n    },\n  ],\n};\n\nexport default organizations;\n",
              "name": "organizations.js",
              "size": 3170,
              "type": "source"
            }
          ]
        },
        "routes": {
          "_files": [
            {
              "path": "../../src/modules/organizations/routes/departments.routes.js",
              "relativePath": "modules/organizations/routes/departments.routes.js",
              "extension": ".js",
              "content": "import controllerFactory from '../controllers/departments.controller.js';\nexport default (function (app, db) {\n  const controller = controllerFactory(db);\n  // Get organization departments by _id\n  app.get('/api/departments/read', controller.read);\n  // Get department by _id\n  app.get('/api/departments/get/:_id', controller.readOne);\n  // Add organization department\n  app.post('/api/departments/:_id/create', controller.create);\n  // Update organization department\n  app.post('/api/departments/:_id/update', controller.update);\n  // Delete organization department\n  app.delete('/api/departments/:_id/delete', controller.delete);\n});\n",
              "name": "departments.routes.js",
              "size": 636,
              "type": "source"
            },
            {
              "path": "../../src/modules/organizations/routes/invites.routes.js",
              "relativePath": "modules/organizations/routes/invites.routes.js",
              "extension": ".js",
              "content": "import middlewareFactoryAuth from '@martyrs/src/modules/auth/controllers/middlewares/index.js';\nimport controllerFactory from '../controllers/invites.controller.js';\nexport default (function (app, db) {\n  const controller = controllerFactory(db);\n  const { verifyInvites } = middlewareFactoryAuth(db);\n  // Get one invite\n  app.get('/api/invites/get/:_id', controller.getOneByCode);\n  // Get all organiztions invite\n  app.get('/api/invites/:_id', controller.read);\n  // Create invite in organization\n  app.post('/api/invites/create', [verifyInvites.checkInviteExist, verifyInvites.checkUsersExist], controller.create);\n  // Delete invite in organization\n  app.delete('/api/invites/delete/:_id', controller.delete);\n});\n",
              "name": "invites.routes.js",
              "size": 719,
              "type": "source"
            },
            {
              "path": "../../src/modules/organizations/routes/memberships.routes.js",
              "relativePath": "modules/organizations/routes/memberships.routes.js",
              "extension": ".js",
              "content": "import controllerFactory from '../controllers/memberships.controller.js';\nexport default (function (app, db) {\n  const controller = controllerFactory(db);\n  app.get('/api/memberships', controller.read);\n  // Add organization membder\n  app.post('/api/memberships/create', controller.create);\n  // Update organization membder\n  app.post('/api/memberships/update', controller.update);\n  // Delete organization membder\n  app.post('/api/memberships/delete', controller.deleteMembership);\n});\n",
              "name": "memberships.routes.js",
              "size": 487,
              "type": "source"
            },
            {
              "path": "../../src/modules/organizations/routes/organizations.routes.js",
              "relativePath": "modules/organizations/routes/organizations.routes.js",
              "extension": ".js",
              "content": "import middlewareFactoryAuth from '@martyrs/src/modules/auth/controllers/middlewares/index.js';\nimport globalsabac from '@martyrs/src/modules/globals/controllers/classes/globals.abac.js';\nimport controllerFactory from '../controllers/organizations.controller.js';\nconst { getInstance } = globalsabac;\nexport default (function (app, db) {\n  const controller = controllerFactory(db);\n  const { authJwt } = middlewareFactoryAuth(db);\n  const abac = getInstance(db);\n  app.get(\n    '/api/organizations',\n    [\n      authJwt.verifyToken(true),\n      // abac.middleware('organizations', 'read', {\n      //   allowPublished: true,\n      //   allowUnauthenticated: true\n      // })\n    ],\n    controller.read\n  );\n  app.post('/api/organizations/create', controller.create);\n  app.post('/api/organizations/:_id/update', controller.update);\n  app.delete('/api/organizations/:_id/delete', controller.delete);\n  app.get('/api/auth/check-accesses', [authJwt.verifyToken()], controller.checkAccesses);\n});\n",
              "name": "organizations.routes.js",
              "size": 992,
              "type": "source"
            }
          ]
        },
        "store": {
          "_files": [
            {
              "path": "../../src/modules/organizations/store/departments.js",
              "relativePath": "modules/organizations/store/departments.js",
              "extension": ".js",
              "content": "// Vue modules\nimport { reactive, watch } from 'vue';\n// Globals\nimport { setError } from '@martyrs/src/modules/globals/views/store/globals.js';\n// Setup Axios\nimport $axios from '@martyrs/src/modules/globals/views/utils/axios-instance.js';\n// State\nconst state = reactive({\n  departments: [],\n  department: {\n    organization: '',\n    profile: {\n      photo: '',\n      name: '',\n      description: '',\n      categories: [],\n    },\n    address: '',\n    location: {\n      lat: null,\n      lng: null,\n    },\n    worktime: [],\n    delivery: [],\n    payment: [],\n    members: [],\n    subdepartments: [],\n\n    // Accesses\n    hidden: false,\n    accesses: {\n      events: {\n        read: false,\n        edit: false,\n        delete: false,\n      },\n      gallery: {\n        read: false,\n        edit: false,\n        delete: false,\n      },\n      products: {\n        read: false,\n        edit: false,\n        delete: false,\n      },\n      orders: {\n        read: false,\n        confirm: false, // This property was added based on the schema\n        delete: false,\n      },\n      departments: {\n        read: false,\n        edit: false,\n        delete: false,\n      },\n    },\n  },\n  error: null,\n});\n\n// Methods\nconst actions = {\n  async readOne(departmentID) {\n    try {\n      const response = await $axios.get(`/api/departments/get/${departmentID}`);\n      state.department = response.data;\n      state.error = null;\n      return response.data; // Return the response data\n    } catch (error) {\n      setError(error);\n      return null; // Return null or appropriate error response\n    }\n  },\n\n  async read(options = {}) {\n    try {\n      const response = await $axios.get(`/api/departments/read`, { params: options });\n\n      console.log('Response:', response);\n      state.departments = response.data;\n      state.error = null;\n      return response.data; // Return the response data\n    } catch (error) {\n      console.log(error);\n      setError(error);\n      return null; // Return null or appropriate error response\n    }\n  },\n\n  async create(organizationId, department) {\n    try {\n      const response = await $axios.post(`/api/departments/${organizationId}/create`, department);\n      state.error = null;\n      return response.data; // Return the response data\n    } catch (error) {\n      setError(error);\n      return null; // Return null or appropriate error response\n    }\n  },\n\n  async update(organizationId, department) {\n    try {\n      const response = await $axios.post(`/api/departments/${organizationId}/update`, department);\n      state.error = null;\n      return response; // Return the response for update operations, might not have body data\n    } catch (error) {\n      setError(error);\n      return null; // Return null or appropriate error response\n    }\n  },\n\n  async delete(organizationId, departmentId) {\n    try {\n      await $axios.delete(`/api/departments/${organizationId}/delete`, {\n        data: { _id: departmentId },\n      });\n      state.error = null;\n      return true; // Return true to indicate successful deletion\n    } catch (error) {\n      setError(error);\n      return false; // Return false or appropriate error response\n    }\n  },\n};\n\n// History\nconst history = [];\nhistory.push(state);\n\n// Watch\nwatch(state, (newState, oldState) => {\n  history.push(newState);\n});\n\n// Module Export\nexport { actions, state };\n",
              "name": "departments.js",
              "size": 3349,
              "type": "source"
            },
            {
              "path": "../../src/modules/organizations/store/invites.js",
              "relativePath": "modules/organizations/store/invites.js",
              "extension": ".js",
              "content": "// Dependencies\nimport axios from 'axios';\n// Vue modules\nimport { reactive, watch } from 'vue';\n// Globals\nimport { setError } from '@martyrs/src/modules/globals/views/store/globals.js';\n// State\nimport * as auth from '@martyrs/src/modules/auth/views/store/auth.js';\n// Setup Axios\nconst $axios = axios.create({ baseURL: process.env.API_URL, withCredentials: true });\n// State\nconst state = reactive({\n  invites: [],\n  invite: null,\n  error: null,\n});\n// Methods\nconst actions = {\n  async read(options) {\n    try {\n      const response = await $axios.get(`/api/invites/${options.owner}`);\n      state.invites = response.data;\n      state.error = null;\n      return response.data;\n    } catch (error) {\n      setError(error);\n    }\n  },\n  async readOne(inviteId) {\n    try {\n      const response = await $axios.get(`/api/invites/get/${inviteId}`);\n      state.invite = response.data;\n      auth.state.user.phone = response.data.phone;\n      auth.state.user.email = response.data.email;\n    } catch (error) {\n      setError(error);\n    }\n  },\n  async create(invites) {\n    try {\n      const response = await $axios.post(`/api/invites/create`, invites);\n      return Promise.resolve(response.data);\n      state.error = null;\n    } catch (error) {\n      setError(error);\n    }\n  },\n  async update(organizationId, membership) {\n    try {\n      await $axios.put(`/api/invites/update`, membership);\n      state.error = null;\n    } catch (error) {\n      setError(error);\n    }\n  },\n  async delete(inviteID) {\n    try {\n      await $axios.delete(`/api/invites/delete/${inviteID}`);\n      state.error = null;\n    } catch (error) {\n      setError(error);\n    }\n  },\n};\n\n// History\nconst history = [];\nhistory.push(state);\n\n// Watch\nwatch(state, (newState, oldState) => {\n  history.push(newState);\n});\n\n// Module Export\nexport { actions, state };\n",
              "name": "invites.js",
              "size": 1836,
              "type": "source"
            },
            {
              "path": "../../src/modules/organizations/store/memberships.js",
              "relativePath": "modules/organizations/store/memberships.js",
              "extension": ".js",
              "content": "// Dependencies\nimport axios from 'axios';\n\n// Vue modules\nimport { reactive, watch } from 'vue';\n\n// Globals\nimport { setError } from '@martyrs/src/modules/globals/views/store/globals.js';\n\n// Setup Axios\nconst $axios = axios.create({\n  baseURL: process.env.API_URL,\n  withCredentials: true,\n});\n\n// State\nconst state = reactive({\n  memberships: [],\n  error: null,\n});\n\n// Methods\nconst actions = {\n  async read(options = {}) {\n    try {\n      const response = await $axios.get(`/api/memberships`, { params: options });\n      state.error = null;\n      state.memberships = response.data;\n      return Promise.resolve(response.data);\n    } catch (error) {\n      setError(error);\n      return Promise.reject(error);\n    }\n  },\n  async create(membership) {\n    try {\n      const response = await $axios.post(`/api/memberships/create`, membership);\n      state.error = null;\n      return Promise.resolve(response.data);\n    } catch (error) {\n      setError(error);\n      return Promise.reject(error);\n    }\n  },\n  async update(membership) {\n    try {\n      const response = await $axios.post(`/api/memberships/update`, membership);\n      state.error = null;\n      return Promise.resolve(response.data);\n    } catch (error) {\n      setError(error);\n      return Promise.reject(error);\n    }\n  },\n  async delete(membership) {\n    try {\n      const response = await $axios.post(`/api/memberships/delete`, membership);\n      state.error = null;\n      return Promise.resolve(response.data);\n    } catch (error) {\n      setError(error);\n      return Promise.reject(error);\n    }\n  },\n};\n\nconst mutations = {\n  handleMembershipUpdate(data, membership, status, target, statusName, statusNumber) {\n    let entity;\n\n    console.log('public is', data);\n    console.log('isArray', Array.isArray(data));\n\n    if (Array.isArray(data)) {\n      // Если data - это массив, ищем в нем сущность\n      entity = data.find(o => o._id === membership.target);\n    } else if (typeof data === 'object' && data._id === membership.target) {\n      // Если data - это объект и он соответствует целевой сущности, присваиваем его\n      entity = data;\n    }\n\n    if (entity) {\n      entity[statusName] = status;\n\n      if (status) {\n        entity.memberships.push(membership);\n        entity[statusNumber] += 1;\n      } else {\n        const index = entity.memberships.findIndex(m => m._id === membership._id);\n\n        if (index !== -1) {\n          entity.memberships.splice(index, 1);\n          entity[statusNumber] -= 1;\n        }\n      }\n    }\n  },\n};\n\n// History\nconst history = [];\nhistory.push(state);\n\n// Watch\nwatch(state, newState => {\n  history.push(newState);\n});\n\n// Module Export\nexport { actions, mutations, state };\n",
              "name": "memberships.js",
              "size": 2695,
              "type": "source"
            },
            {
              "path": "../../src/modules/organizations/store/organizations.js",
              "relativePath": "modules/organizations/store/organizations.js",
              "extension": ".js",
              "content": "// Vue modules\nimport { reactive } from 'vue';\n// Globals\nimport { setError } from '@martyrs/src/modules/globals/views/store/globals.js';\n// Setup Axios\nimport $axios from '@martyrs/src/modules/globals/views/utils/axios-instance.js';\n// State\nconst state = reactive({\n  all: [],\n  current: {\n    _id: null,\n    profile: {\n      tags: [],\n      photo: '',\n      name: '',\n      description: '',\n    },\n    structure: [],\n    owner: null,\n    types: '',\n    contacts: {\n      email: '',\n      website: '',\n      phone: '',\n      address: '',\n    },\n    socials: {\n      telegram: '',\n      line: '',\n      facebook: '',\n      instagram: '',\n      youtube: '',\n    },\n    rating: {\n      popularity: 0,\n      median: 0,\n      amount: 0,\n    },\n  },\n});\n\nconst actions = {\n  // Create\n  async create(organization, owner) {\n    organization.owner = owner;\n    try {\n      const response = await $axios.post('/api/organizations/create', organization);\n      state.current = response.data;\n      return response.data;\n    } catch (error) {\n      console.log(error);\n      setError(error);\n      throw error;\n    }\n  },\n  async read(options = {}) {\n    console.log(options);\n\n    try {\n      const response = await $axios.get('/api/organizations', { params: options });\n\n      if (options._id) {\n        Object.assign(state.current || {}, response.data[0]);\n      } else {\n        // state.all = [...state.all, ...response.data];\n        // state.all = response.data; // Assuming that the response.data is an array of organization objects\n      }\n      return Promise.resolve(response.data);\n    } catch (error) {\n      setError(error);\n      return Promise.reject(error);\n    }\n  },\n  // Update\n  async update(_id, updatedData) {\n    console.log(_id, updatedData);\n    return await $axios.post(`/api/organizations/${_id}/update`, updatedData).then(\n      response => {\n        console.log('Organization updated successfully');\n        return Promise.resolve(response.data);\n      },\n      error => {\n        console.log('Updating organization failed');\n        return Promise.reject(error);\n      }\n    );\n  },\n\n  // Remove\n  async remove(organizationId) {\n    await $axios\n      .delete(`/api/organizations/${organizationId}/delete`)\n      .then(\n        response => {\n          state.error = null;\n          return Promise.resolve(response.data);\n        },\n        error => {\n          setError(error);\n          return Promise.reject(error);\n        }\n      )\n      .catch(error => {\n        setError(error);\n      });\n  },\n  // Reset\n  async reset() {\n    state.current = {\n      _id: null,\n      profile: {\n        categories: [],\n        photo: '',\n        name: '',\n        description: '',\n      },\n      structure: [],\n      owner: null,\n      types: '',\n      contacts: {\n        email: '',\n        website: '',\n        phone: '',\n        address: '',\n      },\n      socials: {\n        telegram: '',\n        line: '',\n        facebook: '',\n        instagram: '',\n      },\n      rating: {\n        popularity: 0,\n        median: 0,\n        amount: 0,\n      },\n    };\n  },\n};\n\n// const history = []\n// history.push(state)\n\n// // // Watch\n// watch(state, (newState, oldState) => {\n//   history.push(newState)\n// })\n\n// Module Export\nexport { actions, state };\n",
              "name": "organizations.js",
              "size": 3260,
              "type": "source"
            }
          ]
        },
        "components": {
          "blocks": {
            "_files": [
              {
                "path": "../../src/modules/organizations/components/blocks/CardDepartment.vue",
                "relativePath": "modules/organizations/components/blocks/CardDepartment.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"\">\n\n    <div class=\"pd-medium w-100\">\n\n      <router-link \n        :to=\"{\n          name: 'Department Edit', \n          params: {\n            _id: props.organization,\n            department: department._id\n          }\n        }\" \n        class=\"\n          cursor-pointer \n          pos-absolute pos-t-regular pos-r-regular\n          radius-extra pd-thin bg-second\n        \"\n      >\n        <IconEdit\n          class=\"i-regular\"\n          classes=\"fill-white\"\n        />\n      </router-link>\n\n      <h3 \n        @click=\"$router.push(`/organizations/${props.organization}/departments/${department._id}`)\"\n        class=\"mn-b-small w-100\"\n        v-html=\"department.profile.name\"\n      />\n    \n      <ul>\n        <li v-if=\"department.members.length < 1\">No members in department</li>\n        <User \n          class=\"h-4r pd-small br-solid br-1px br-black-transp-5 radius-small mn-b-thin\" \n          v-for=\"(member, index) in department.members\" \n          :key=\"index\" \n          :user=\"member.user\" \n          :photo=\"member.user.profile.photo\"\n          :name=\"member.user.profile.name || member.user.phone || member.user.email || member.user._id\"\n          :position=\"member.position\" \n          @click=\"$router.push(`/app/profile/${member.user._id}`)\" \n        />\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nimport IconEdit from '@martyrs/src/modules/icons/navigation/IconEdit.vue'\n\nimport Spoiler  from '@martyrs/src/components/Spoiler/Spoiler.vue';\nimport DepartmentSub from '@martyrs/src/modules/organizations/components/blocks/DepartmentSub.vue';\nimport User from '@martyrs/src/modules/auth/views/components/blocks/CardUser.vue';\n\nconst props = defineProps({\n  department: Object,\n  organization: Object\n});\n</script>\n<style scoped>\n.subdepartmentsartment {\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  margin-top: 1rem;\n}\n</style>",
                "name": "CardDepartment.vue",
                "size": 1902,
                "type": "source"
              },
              {
                "path": "../../src/modules/organizations/components/blocks/CardOrganization.vue",
                "relativePath": "modules/organizations/components/blocks/CardOrganization.vue",
                "extension": ".vue",
                "content": "<template>\n  <div \n    class=\"o-hidden pos-relative cursor-pointer bg-light \"\n    @click=\"$router.push({name: 'Organization', params: {_id: organization._id}})\"\n  >\n    <div class=\"h-4r flex pos-relative\">\n\n      <img loading=\"lazy\" \n        v-if=\"organization.profile.photo && organization.profile.photo.length > 0\"\n        :src=\"(FILE_SERVER_URL || '') + organization.profile.photo\" \n        class=\"h-4r w-4r radius-extra bg-white\" \n        style=\"flex: 0 1 auto\"\n      />\n\n      <PlaceholderOrganizationPic\n        v-else\n        class=\"w-4r h-max radius-medium\"\n        style=\"flex: 0 1 auto\"\n      />\n      \n      <div class=\"pos-relative w-100 flex-h-center flex flex-column flex-child-1 flex-child mn-l-thin w-100\">\n        \n        <!-- <Text :text=\"organization.profile.name ? organization.profile.name : ''\" :maxLen=\"18\" class=\"h3 d-block\"/> -->\n        <p class=\"h4 t-truncate w-100\">{{organization.profile.name}}</p>\n        <!-- RATING -->\n        <!-- <div v-if=\"showRating && organization.rating\" class=\"w-max star-container flex-v-center flex\">\n          <img loading=\"lazy\" \n            v-for=\"i in 5\"\n            class=\"i-small mn-r-thin\"\n            :src=\"i <= organization.rating.median ? '/icons/star.svg' : '/icons/star-stroke.svg'\"\n          >\n\n          <span class=\"p-small t-semi mn-r-thin\">{{organization.rating.median}}</span>\n          <span class=\"p-small\">({{organization.rating.amount}})</span>\n        </div> -->\n\n        <div v-if=\"showFollowers ||  showTags\" class=\"mn-t-micro gap-micro flex-nowrap flex\">\n\n          <Chips \n            v-if=\"showTags && organization.profile.tags?.length > 0\" \n            :chips=\"organization.profile.tags.slice(0,3)\"\n            class=\"pos-relative t-trimmed p-medium\"\n          >\n           <div v-if=\"showFollowers\" class=\"t-truncate pos-relative p-medium mn-r-nano d-inline-block w-max pd-b-micro pd-t-micro pd-r-thin pd-l-thin radius-small t-medium bg-white\">\n            <p class=\"t-truncate\">{{organization.numberOfSubscribers}} followers</p>\n\n            <ButtonToggleMembership\n              v-if=\"\n                user?._id \n                && organization.owner !== user._id\n              \"\n              :user=\"user._id\"\n              :type=\"'organization'\" \n              :role=\"'subscriber'\" \n              :target=\"organization._id\" \n              :status=\"organization.isSubscriber\" \n              :text=\"{create: '+', remove: '-'}\"\n              @updateMembership=\"event => emits('updateMembership', event, 'isSubscriber', 'numberOfSubscribers')\"\n              class=\"i-semi\" \n            />\n          </div>\n        </Chips>\n        </div>\n\n      </div>\n\n    </div>\n\n\n    <div \n      v-if=\"showProducts && organization.products\" \n      class=\"mn-b-small t-nowrap mn-t-small w-100 flex-nowrap flex flex-v-center pd-small bg-white radius-medium\"\n    >\n      <IconTime class=\"i-medium t-transp mn-r-micro\"/>\n      <span class=\"mn-r-micro\">\n        {{\n        organization.distance ? \n          organization.distance > 50 ? \n            '3-5 days' : \n            Math.ceil((5 + 5 + 3 * organization.distance) / 5) * 5 \n            + '-' \n            + Math.ceil((15 + 5 + 3 * organization.distance) / 5) * 5 \n            + ' MIN' : 'Unavailable' \n        }} \n      </span>\n\n      <span v-if=\"organization.distance && organization.distance < 50\" class=\"t-transp t-grey mn-r-micro\">|</span>\n      <span v-if=\"organization.distance && organization.distance < 50\" class=\"mn-r-thin\">{{organization.distance ? organization.distance.toFixed(1) + 'KM' : ''}}</span>\n      <!-- <span class=\"mn-r-thin\">{{organization.nearestSpotDistance}}</span> -->\n      <!-- <IconPrice class=\"i-medium mn-r-micro\"/> -->\n      <!-- <span class=\"mn-r-thin\">{{returnCurrency()}}500 </span> -->\n      <IconShopcart class=\"i-medium t-transp mn-r-micro\"/>\n      <span class=\"mn-r-thin\"> {{organization.products.length}} products</span>\n    </div>\n\n    <div v-if=\"showProducts && organization.products?.length > 0\" class=\"w-100 o-scroll scroll-hide radius-medium\">\n      <div class=\"w-max flex-nowrap flex gap-thin\">\n        <CardOrderItem  \n          @click.stop=\"$router.push({name: 'Organization_Product', params: {_id: organization._id, product: product._id}})\" \n          v-for=\"product in organization.products.slice(0,5)\" \n          :key=\"product._id\" \n          :editable=\"false\" \n          :product=\"product\" \n          class=\"pd-thin w-15r radius-medium bg-white\"\n         \n        />\n        <button class=\"pd-thin w-15r radius-medium bg-main button\">\n          View menu\n        </button>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n  import { useRouter } from 'vue-router'\n  import CardOrderItem from '@martyrs/src/modules/orders/components/blocks/CardOrderItem.vue';\n\n  import Text     from '@martyrs/src/components/Text/Text.vue'\n  import Chips  from '@martyrs/src/components/Chips/Chips.vue'\n\n  import PlaceholderOrganizationPic from '@martyrs/src/modules/icons/placeholders/PlaceholderOrganizationPic.vue'\n\n  import IconPrice from '@martyrs/src/modules/icons/entities/IconPrice.vue'\n  import IconShopcart from '@martyrs/src/modules/icons/entities/IconShopcart.vue'\n  import IconTime from '@martyrs/src/modules/icons/entities/IconTime.vue'\n\n  import ButtonToggleMembership from '@martyrs/src/modules/organizations/components/elements/ButtonToggleMembership.vue'\n\n  const props = defineProps({\n    // Model\n    user: String,\n    organization: Object,\n    // View\n    showProducts: {\n      type: Boolean,\n      default: false\n    },\n    showFollowers: {\n      type: Boolean,\n      default: true\n    },\n    showRating: {\n      type: Boolean,\n      default: false\n    },\n    showFeatured: {\n      type: Boolean,\n      default: true\n    },\n    showTags: {\n      type: Boolean,\n      default: true\n    },\n  });\n\n  const emits = defineEmits(['updateMembership'])\n\n  const router = useRouter();\n</script>",
                "name": "CardOrganization.vue",
                "size": 5912,
                "type": "source"
              },
              {
                "path": "../../src/modules/organizations/components/blocks/Contacts.vue",
                "relativePath": "modules/organizations/components/blocks/Contacts.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"mn-b-small w-100\">\n    <a v-if=\"formattedWebsite\" :href=\"formattedWebsite\" target=\"_blank\" class=\"w-100 br-2px br-solid br-grey-transp-25 radius-small pd-small flex-v-center flex-nowrap flex\">\n      <!-- <img loading=\"lazy\" class=\"i-medium mn-r-small\" src=\"@/assets/icons/website.svg\"> -->\n      <span class=\"t-semi uppercase\">Website</span>\n    </a>\n    <a v-if=\"props.phone\" :href=\"`tel:${props.phone}`\" class=\"w-100 br-2px br-solid br-grey-transp-25 radius-small pd-small flex-v-center flex-nowrap flex\">\n      <!-- <img loading=\"lazy\" class=\"i-medium mn-r-small\" src=\"@/assets/icons/phone.svg\"> -->\n      <span class=\"t-semi uppercase\">Phone</span>\n    </a>\n    <a v-if=\"props.email\" :href=\"`mailto:${props.email}`\" target=\"_blank\" class=\"w-100 br-2px br-solid br-grey-transp-25 radius-small pd-small flex-v-center flex-nowrap flex\">\n      <!-- <img loading=\"lazy\" class=\"i-medium mn-r-small\" src=\"@/assets/icons/email.svg\"> -->\n      <span class=\"t-semi uppercase\">Email</span>\n    </a>\n    <a v-if=\"encodedAddress\" :href=\"`https://www.google.com/maps/search/?api=1&query=${encodedAddress}`\" target=\"_blank\" class=\"w-100 br-2px br-solid br-grey-transp-25 radius-small pd-small flex-v-center flex-nowrap flex\">\n      <!-- <img loading=\"lazy\" class=\"i-medium mn-r-small\" src=\"@/assets/icons/address.svg\"> -->\n      <span class=\"t-semi uppercase\">Address</span>\n    </a>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue';\n\nconst props = defineProps({\n  website: String,\n  phone: String,\n  email: String,\n  address: String\n});\n\nconst formattedWebsite = computed(() => {\n  if (props.website) {\n    if (!props.website.startsWith('http://') && !props.website.startsWith('https://')) {\n      return `http://${props.website}`;\n    }\n    return props.website;\n  }\n  return null;\n});\n\nconst encodedAddress = computed(() => {\n  if (props.address) {\n    return encodeURIComponent(props.address);\n  }\n  return null;\n});\n</script>\n",
                "name": "Contacts.vue",
                "size": 1969,
                "type": "source"
              },
              {
                "path": "../../src/modules/organizations/components/blocks/DepartmentSub.vue",
                "relativePath": "modules/organizations/components/blocks/DepartmentSub.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"pd-small flex-nowrap flex\">\n    <!-- <img loading=\"lazy\" :src=\"(FILE_SERVER_URL || '') + avatar\" :alt=\"`${name} avatar`\" class=\"user-card__avatar\" /> -->\n    <div class=\"user-card__info\">\n      <p class=\"user-card__name\">{{ department.name ? department.name : 'Безымянный' }}</p>\n      <p class=\"user-card__position\">{{ department.members ? department.members.length : '0' }} человек</p>\n      <!-- Render other properties here -->\n    </div>\n  </div>\n</template>\n\n<script setup>\n  const props = defineProps({\n    department: {\n      type: Object,\n      required: true\n    },\n    // Define other props here\n  });\n</script>\n\n<style scoped>\n  /* Add styles for the user card component here */\n</style>",
                "name": "DepartmentSub.vue",
                "size": 724,
                "type": "source"
              },
              {
                "path": "../../src/modules/organizations/components/blocks/EditArray.vue",
                "relativePath": "modules/organizations/components/blocks/EditArray.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"w-100\">\n    <div class=\"flex\">\n      <h3 class=\"mn-b-regular\">{{name}}</h3>\n      \n    </div>\n     \n   \n    <ul  class=\"flex-column flex-wrap block\">\n      <span v-if=\"items.length < 1\" class=\"w-100\">Вы еще не добавили позиции</span> \n\n      <li v-for=\"(item, index) in items\" :key=\"item._id\" class=\"w-100\">\n        <div class=\"w-100 flex-center flex-nowrap flex\">\n          <span class=\"mn-r-regular w-100\">{{ item.name }}</span>\n          <a class=\"w-20 button\" @click=\"deleteItem(item)\">Удалить</a>\n        </div>\n        <hr v-if=\"!(index == items.length - 1)\" class=\"mn-t-small mn-b-small w-100 \">\n      </li>\n    </ul>\n  </div>\n</template>\n\n\n<script setup=\"props\">\n    // GLOBAL\n  // import InputText    from '/components/elements/InputText.vue'\n  // import InputSelect  from '/components/elements/InputSelect.vue'\n\n\timport { ref,computed,reactive,toRefs } from 'vue'\n\timport { useRouter,useRoute } from 'vue-router'\n\n\tconst router = useRouter()\n  const route = useRoute()\n\n\n  const emits = defineEmits(['add', 'remove']);\n\n\tconst props = defineProps({\n\t  name: Object,\n    items: Array,\n\t});\n\n  let data = reactive([])\n  let reactiveData = toRefs(data)\n\n  const techStack = ref(null)\n  const techStack2 = ref(null)\n  const techStack3 = ref(null)\n  function test () {\n     console.log(techStack)\n  }\n\n \n  const isProductValid = computed(() => { \n    if (techStack.value === null || techStack3.value === null || techStack3.value === '') {\n      return true;\n    } else {\n      if (techStack.value.modifications.length > 0) {\n        if (techStack2.value === null) {\n          return true \n        } else {\n          return false \n        }\n      }\n    }\n\n    })\n   //  if (techStack.value.modifications.length > 0) {\n   //    if (techStack2.value !== null) {\n   //      return true \n   //    } else {\n   //      return false \n   //    }\n   // } else {\n   //     if (techStack.value !== null) {\n   //      return true \n   //    } else {\n   //      return false\n   //    }\n   // } })\n\n  function addProductToLeftover () {\n     \n     if (techStack.value.modifications.length > 0) {\n        techStack2.value.quantity = techStack3.value\n     } else {\n        techStack.value.quantity = techStack3.value\n     } \n     store.dispatch('leftovers/addProductToLeftover', techStack.value.modifications.length > 0 ? techStack2.value : techStack.value)\n     showAddNew.value = !showAddNew.value;\n  }\n\n  function deleteItem (item) {\n     store.commit('leftovers/deleteItemFromLeftover', item)\n  }\n\n\n  function reserOrderList () {\n    if (route.params._id) store.dispatch('leftovers/fetch', route.params._id).then(\n\n      succes => { console.log(succes) },\n      error => {  \n        console.log('eror') \n      }\n    ) \n\n    if (!route.params._id) store.commit('leftovers/reset')\n      \n  }\n\n  function changeAdd () {\n   showAddNew.value = !showAddNew.value;\n  }\n\n  function itemSizes (item) { \n    const itemData = store.state.items.all.find(p => p._id === item._id)\n    var computedProduct = computed(() => store.getters['orders/getProductSizes'](itemData))\n    return computedProduct.value\n  }\n  function itemColors (item) { \n    const itemData = store.state.items.all.find(p => p._id === item._id)\n    var computedProduct = computed(() => store.getters['orders/getProductColors']({item, itemData}))\n    return computedProduct.value\n  }\n\n</script>\n\n<style lang=\"scss\" >\n  \n.VueSelect {\n  background: #f7f7f7;\n  border-radius: 0.5rem;\n  border: 0;\n  height: 3rem;\n    padding-left: 1rem;\n   \n    z-index: 4;\n  .vue-input {\n    input { \n       font-size: 1.125rem;\n    font-weight: 300;\n      background: #f7f7f7; }\n  }\n}\n</style>\n\n\n",
                "name": "EditArray.vue",
                "size": 3648,
                "type": "source"
              },
              {
                "path": "../../src/modules/organizations/components/blocks/EmptyState.vue",
                "relativePath": "modules/organizations/components/blocks/EmptyState.vue",
                "extension": ".vue",
                "content": "<template>\n  <section class=\"mn-b-big radius-medium pd-big bg-white\">\n    <h3 class=\"mn-b-regular\">{{ title }}</h3>\n    <p class=\"mn-b-small t-transp p-medium\">{{ description }}</p>\n\n    <button @click=\"callback\" class=\"t-white bg-second w-100 button\">\n      {{ action }}\n    </button>\n  </section>\n</template>\n\n<script setup>\n\nconst props = defineProps({\n  title: {\n    type: String,\n    default: 'У вас еще нет организации',\n  },\n  description: {\n    type: String,\n    default: 'Для использования сервиса, вам необходимо добавить вашу организацию.',\n  },\n  action: {\n    type: String,\n    default: 'Создать организацию',\n  },\n  callback: {\n    type: Function,\n    default: () => {},\n  },\n})\n\n\n</script>",
                "name": "EmptyState.vue",
                "size": 704,
                "type": "source"
              },
              {
                "path": "../../src/modules/organizations/components/blocks/Rating.vue",
                "relativePath": "modules/organizations/components/blocks/Rating.vue",
                "extension": ".vue",
                "content": "<template>\n\t<section>\n\t\t<div class=\"w-100 mn-b-small star-container flex-v-center flex\">\n\t       \t<span class=\"p-big t-semi mn-r-small\">{{rating}}</span>\n\n\t       \t<svg \n\t       \t\tv-for=\"i in 5\" \n\t         \tclass=\"i-semi mn-r-small\" \n\t         \t:class=\"{'t-transp': i > rating}\"\n\t       \t\twidth=\"113\" height=\"108\" \n\t       \t\tviewBox=\"0 0 113 108\" \n\t       \t\tfill=\"none\" \n\t       \t\txmlns=\"http://www.w3.org/2000/svg\"\n\t       \t>\n\t\t\t\t<path fill=\"rgb(var(--main))\" d=\"M62.2406 5.85971L75.413 32.6098L105.203 36.8654C110.472 37.676 112.498 44.3636 108.648 48.0113L87.1668 68.8844L92.2331 98.2689C93.2464 103.741 87.5721 107.591 82.9111 105.159L56.3637 91.3788L29.8163 105.159C25.1553 107.794 19.4811 103.741 20.4944 98.4716L25.5607 68.8844L4.07956 48.0113C0.22917 44.3636 2.25569 37.676 7.52464 36.8654L37.3145 32.6098L50.4868 5.85971C52.9186 0.996063 59.8088 0.996063 62.2406 5.85971Z\" />\n\t\t\t</svg>\n\t\t</div>\n\t\t<p class=\"\">Based on {{amount}} reviews</p>\n\t</section>\n</template>\n\n<script setup>\nimport { ref, watch } from \"vue\";\n\nconst props = defineProps({\n\trating: {\n\t\ttype: Number,\n\t\trequired: true,\n\t},\n   amount: {\n    type: Number,\n    required: true,\n  },\n});\n\n</script>",
                "name": "Rating.vue",
                "size": 1172,
                "type": "source"
              },
              {
                "path": "../../src/modules/organizations/components/blocks/Socials.vue",
                "relativePath": "modules/organizations/components/blocks/Socials.vue",
                "extension": ".vue",
                "content": "<template>\n    <div class=\"gap-small flex-nowrap flex\">\n        <a \n            v-for=\"social in socialLinks\" \n            :key=\"social.name\"\n            :href=\"social.href\" \n            target=\"_blank\" \n            class=\"i-big bg-second t-white flex-nowrap flex-center flex radius-extra\"\n        >\n            <component :is=\"resolveSocialIcon(social.name)\" class=\"i-medium\"></component>\n        </a> \n    </div>\n</template>\n\n<script setup>\nimport { ref, computed, resolveComponent } from \"vue\";\n\nimport IconTelegram from '@martyrs/src/modules/icons/socials/telegram.vue'\nimport IconFacebook from '@martyrs/src/modules/icons/socials/facebook.vue'\nimport IconInstagram from '@martyrs/src/modules/icons/socials/instagram.vue'\nimport IconTwitter from '@martyrs/src/modules/icons/socials/twitter.vue'\nimport IconReddit from '@martyrs/src/modules/icons/socials/reddit.vue'\nimport IconLine from '@martyrs/src/modules/icons/socials/line.vue'\nimport IconDribble from '@martyrs/src/modules/icons/socials/dribbble.vue'\nimport IconYoutube from '@martyrs/src/modules/icons/socials/youtube.vue'\n\n\nconst props = defineProps({\n    telegram: {\n        type: String,\n        default: ''\n    },\n    facebook: {\n        type: String,\n        default: ''\n    },\n    instagram: {\n        type: String,\n        default: ''\n    },\n    twitter: {\n        type: String,\n        default: ''\n    },\n    reddit: {\n        type: String,\n        default: ''\n    },\n    line: {\n        type: String,\n        default: ''\n    },\n    dribbble: {\n        type: String,\n        default: ''\n    },\n    youtube: {\n        type: String,\n        default: ''\n    }\n});\n\nconst socialLinks = computed(() => {\n    const networks = [\n        {name: 'telegram', base: 'https://t.me/'},\n        {name: 'facebook', base: 'https://www.facebook.com/'},\n        {name: 'instagram', base: 'https://www.instagram.com/'},\n        {name: 'twitter', base: 'https://twitter.com/'},\n        {name: 'reddit', base: 'https://www.reddit.com/user/'},\n        {name: 'line', base: ''}, \n        {name: 'dribbble', base: 'https://dribbble.com/'},\n        {name: 'youtube', base: 'https://youtube.com/@'}\n    ];\n\n    return networks\n        .filter(network => props[network.name])\n        .map(network => ({ \n            name: network.name, \n            href: network.base + props[network.name] \n        }));\n});\n\n\nfunction resolveSocialIcon(name) {\n    const icons = {\n        telegram: IconTelegram,\n        facebook: IconFacebook,\n        instagram: IconInstagram,\n        twitter: IconTwitter,\n        reddit: IconReddit,\n        line: IconLine,\n        dribbble: IconDribble,\n        youtube: IconYoutube\n    };\n\n    return icons[name] || null;\n}\n</script>\n",
                "name": "Socials.vue",
                "size": 2699,
                "type": "source"
              },
              {
                "path": "../../src/modules/organizations/components/blocks/Unit.vue",
                "relativePath": "modules/organizations/components/blocks/Unit.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"unit\">\n    <div class=\"unit-details\">\n      <h3>{{ unit.name }}</h3>\n      <p>{{ unit.description }}</p>\n      <div v-if=\"editMode\">\n        <input v-model=\"editedUnit.name\" placeholder=\"Название отдела\" />\n        <input v-model=\"editedUnit.description\" placeholder=\"Описание отдела\" />\n        <button @click=\"saveUnit\">Сохранить</button>\n        <button @click=\"addSubunit\">Добавить подотдел</button>\n      </div>\n    </div>\n    <div class=\"subunits\">\n      <unit-component\n        v-for=\"(subunit, index) in unit.subunits\"\n        :key=\"index\"\n        :unit=\"subunit\"\n        :edit-mode=\"editMode\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, watch } from \"vue\";\n\nconst props = defineProps({\n  unit: {\n    type: Object,\n    required: true,\n  },\n  editMode: {\n    type: Boolean,\n    required: true,\n  },\n});\n\nconst editedUnit = ref({ ...props.unit });\n\nwatch(props.unit, () => {\n  editedUnit.value = { ...props.unit };\n});\n\nasync function saveUnit() {\n  // Обновление данных отдела на сервере\n  // TODO: отправить измененные данные на сервер\n  emit(\"unit-updated\", editedUnit.value);\n}\n\nasync function addSubunit() {\n  // Добавление нового подотдела\n  // TODO: отправить запрос на сервер для создания нового подотдела\n  emit(\"subunit-added\", props.unit._id);\n}\n</script>\n",
                "name": "Unit.vue",
                "size": 1325,
                "type": "source"
              }
            ]
          },
          "elements": {
            "_files": [
              {
                "path": "../../src/modules/organizations/components/elements/ButtonToggleMembership.vue",
                "relativePath": "modules/organizations/components/elements/ButtonToggleMembership.vue",
                "extension": ".vue",
                "content": "<template>\n  <Button\n    :submit=\"toggleMembership\"\n    :showSucces=\"false\"\n    class=\"bg-main  button-small button\"\n  >\n  {{ !status ? props.text.create : props.text.remove }}\n</Button>\n</template>\n\n<script setup>\n  import Button from \"@martyrs/src/components/Button/Button.vue\";\n  \n  import { ref } from 'vue'\n  import * as auth from '@martyrs/src/modules/auth/views/store/auth.js'\n  import * as memberships from '@martyrs/src/modules/organizations/store/memberships.js'\n\n  const emits = defineEmits(['updateMembership'])\n\n  const props = defineProps({\n    user: {\n      type: String,\n      required: true\n    },\n    type: {\n      type: String,\n      required: true\n    },\n    role: {\n      type: String,\n      required: false\n    },\n    target: {\n      type: String,\n      required: true\n    },\n    text: {\n      type: Object,\n      default: {\n        create: 'join',\n        remove: 'leave'\n      }\n    },\n    status: {\n      type: Boolean,\n      required: true\n    }\n  });\n\n  const toggleMembership = async () => {\n    if (!props.status) {\n      await createMembership();\n    } else {\n      await removeMembership();\n    }\n  }\n\n  async function createMembership() {\n    try {\n      const membershipData = {\n        user: props.user,\n        type: props.type,\n        role: props.role,\n        target: props.target\n      };\n\n      const response = await memberships.actions.create(membershipData);\n\n      emits('updateMembership', { \n        membership: response, \n        target: props.target, \n        status: true,\n      });\n    } catch (error) {\n      console.log(error)\n      throw error;\n    }\n  }\n\n  async function removeMembership(targetId) {\n    const membershipData = {\n      user: props.user,\n      type: props.type,\n      role: props.role,\n      target: props.target\n    };\n\n    try {\n      const response = await memberships.actions.delete(membershipData);\n\n      emits('updateMembership', {\n        membership: response, \n        target: props.target, \n        status: false,\n      });\n    } catch (error) {\n      console.log(error)\n      throw error;\n   }\n }\n</script>",
                "name": "ButtonToggleMembership.vue",
                "size": 2087,
                "type": "source"
              }
            ]
          },
          "pages": {
            "_files": [
              {
                "path": "../../src/modules/organizations/components/pages/Department.vue",
                "relativePath": "modules/organizations/components/pages/Department.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"for-transition w-100\">\n    \n    <div v-if=\"departments.state.department\" id=\"dash\" class=\"pd-medium bg-light\">\n      <section class=\"mn-b-medium radius-medium pd-semi bg-white\">\n         <div class=\"flex-nowrap flex mn-b-small\">\n\n          <h2 class=\"w-100\">{{ departments.state.department.profile.name }}</h2>\n\n          <router-link \n            :to=\"{\n              name: 'Department Edit', \n              params: {\n                _id: route.params._id,\n                department: route.params.department\n              }\n            }\" \n            class=\"\n              cursor-pointer \n              pos-absolute pos-t-regular pos-r-regular\n              radius-extra pd-thin bg-second\n            \"\n          >\n            <IconEdit\n              class=\"i-regular\"\n              classes=\"fill-white\"\n            />\n          </router-link>\n\n        </div>\n        <p class=\"t-transp p-big\" v-html=\"departments.state.department.description\"></p>\n      </section>\n\n     <section class=\"mn-b-medium radius-medium pd-semi bg-white\">\n        <h3 class=\"mn-b-regular\">Команда</h3>\n        <ul>\n          <li v-if=\"departments.state.department.members.length < 1\">В отделе еще нет участников</li>\n          <User \n            class=\"br-b br-solid br-grey-transp-25\" \n            v-for=\"(member, index) in departments.state.department.members\" \n            :key=\"index\" \n            :user=\"member.user\" \n            :photo=\"member.user.profile.photo\"\n            :name=\"member.user.profile.name || member.user.phone || member.user.email || member.user._id\"\n            :position=\"member.position\" \n            @click=\"$router.push(`/app/profile/${member.user._id}`)\" \n          />\n        </ul>\n      </section>\n\n      <section class=\"mn-b-medium radius-medium pd-semi bg-white\">\n        <h3 class=\"mn-b-regular\">Подотделы</h3>\n        <ul>\n          <li v-if=\"departments.state.department.subdepartments.length < 1\">В отделе еще нет подотделов</li>\n          <DepartmentSub v-for=\"(subdepartment, index) in departments.state.department.subdepartments\" @click=\"$router.push(`/app/organization/departments/${subdepartment._id}`)\" :key=\"index\" class=\"br-b br-solid br-grey-transp-25\" :department=\"subdepartment\" />\n        </ul> \n      </section>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { useRoute, useRouter } from 'vue-router';\n\nimport Spoiler from '@martyrs/src/components/Spoiler/Spoiler.vue';\nimport DepartmentSub from '@martyrs/src/modules/organizations/components/blocks/DepartmentSub.vue';\nimport User from '@martyrs/src/modules/auth/views/components/blocks/CardUser.vue';\nimport * as departments from '@martyrs/src/modules/organizations/store/departments.js';\n\nimport IconEdit from '@martyrs/src/modules/icons/navigation/IconEdit.vue'\n\nconst router = useRouter();\nconst route = useRoute();\n\nawait departments.actions.readOne(route.params.department);\n</script>\n\n<style scoped>\n</style>\n",
                "name": "Department.vue",
                "size": 2932,
                "type": "source"
              },
              {
                "path": "../../src/modules/organizations/components/pages/DepartmentEdit.vue",
                "relativePath": "modules/organizations/components/pages/DepartmentEdit.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"for-transition pd-thin w-100\">\n\n    <header class=\"mn-b-thin flex-nowrap flex-v-center flex bg-light pd-medium radius-medium\">\n      <h1 v-if=\"route.params.department\" class=\"mn-r-auto\">Edit Department</h1>\n      <h1 v-else class=\"mn-r-auto\">Create Department</h1>\n\n      <section class=\"flex-nowrap flex gap-thin pd-thin\">\n        <Button v-if=\"route.params.department\"   :submit=\"onDelete\" :callback=\"redirectToDash\" class=\"bg-red\">Delete</Button>\n        <Button :submit=\"onSubmit\" :callback=\"redirectTo\" class=\"bg-main\">Save</Button>\n      </section>\n\n    </header>\n    \n    <Block\n      title=\"Profile\"\n      v-if=\"departments.state.department.profile\"\n      class=\"mn-b-thin\"\n    >\n      <div\n        class=\"cols-2-fit-content\"\n      >\n        <UploadImage \n           v-model:photo=\"departments.state.department.profile.photo\"\n          :uploadPath=\"'organizations/' + departments.state.department.name + '/avatars'\"\n          class=\"w-8r aspect-1x1 o-hidden mn-r-small radius-extra\" \n        />\n        <div class=\"w-100 flex-child-grow-1 flex-child \">\n          <Field \n            v-model:field=\"departments.state.department.profile.name\"     \n            label=\"Name\"  \n            placeholder=\"Department Name\" \n            class=\"mn-b-small bg-white radius-small pd-medium\"\n            :validation=\"organizationName\" \n          />\n          <Field \n            v-model:field=\"departments.state.department.profile.description\"     \n            label=\"Description\"  \n            placeholder=\"Department description (max 120 symbols)\" \n            class=\"bg-white radius-small pd-medium\"\n            :validation=\"organizationName\" \n          />  \n        </div>\n      </div>\n    </Block>\n\n    <Block\n      title=\"Team\"\n      placeholder=\"No members added yet\"\n      :actions=\"[{\n        label: '+',\n        function: () => openMemberPopup()\n      }]\"\n      class=\"cols-1 gap-thin mn-b-thin\"\n    > \n      <CardUser \n        class=\"h-4r bg-white pd-thin radius-medium w-100\" \n        v-for=\"(member, index) in departments.state.department.members\" \n        :key=\"index\" \n        :user=\"member.user\" \n        :photo=\"member.user.profile.photo\"\n        :name=\"member.user.profile.name || member.user.phone || member.user.email || member.user._id\"\n        :position=\"member.position\" \n        :action=\"{\n          label: {\n            is: IconDelete,\n            props: { class: 'i-medium', fill: 'rgb(var(--white)' }\n          },\n          method: () => removeMember(member)\n        }\"\n      />\n    </Block>\n\n    <Popup \n      title=\"Add member\" \n      @close-popup=\"closeMemberPopup\" \n      :isPopupOpen=\"isOpenAddMemberPopup\"\n      class=\"bg-white w-max-30r radius-big pd-big\"\n    >\n      <Feed\n        :search=\"{\n          placeholder: 'Search customer...',\n          class: 'bg-light mn-b-thin'\n        }\"\n        :states=\"{\n          empty: {\n            title: 'No Members Found',\n            description: 'Currently, there are no members in organization.'\n          }\n        }\"\n        :store=\"{\n          read: (options) => memberships.actions.read(options),\n          state: null\n        }\"\n        :options=\"{\n          target: route.params._id,\n          role: ['member']\n        }\"\n        v-slot=\"{ \n          items \n        }\"\n        class=\"bg-light pd-medium w-min-20r w-max-40r radius-big h-max-20r o-scroll\"\n      >\n        <CardUser\n          v-for=\"(user, index) in items\" \n          :key=\"user._id\"\n          :user=\"user.user\"\n          :photo=\"user.user.profile?.photo\"\n          :name=\"user.user.profile?.name || user.user.phone || user.user.email\"\n          @click=\"() => { \n            globals.actions.add(departments.state.department.members, { _id: user.user._id, user: user.user, position: 'Member'})\n            closeMemberPopup();\n          }\"\n          class=\"h-4r bg-white pd-thin radius-medium w-100 mn-b-thin\"\n        />\n      </Feed>\n    </Popup>\n      \n\n    <div class=\"cols-2 gap-thin\">\n    \n        <div class=\"bg-light pd-medium o-hidden radius-big\">\n          <h3 class=\"mn-b-semi\">Department Settings</h3>\n          \n          <p class=\"p-medium mn-b-small\">Please settings for your department:</p>\n          <div class=\"cols-1 gap-thin\">\n            <Checkbox \n              label=\"Hidden department\"\n              name=\"hidden\"\n              class=\"w-100 mn-r-small bg-white radius-small pd-small\"\n              @update:radio=\"updated => departments.state.department.hidden = !departments.state.department.hidden\"\n              :radio=\"departments.state.department.hidden\"\n            />\n          </div>\n        </div>\n\n        <div class=\"bg-light pd-medium o-hidden radius-big\">\n          <h3 class=\"mn-b-semi\">Acessess</h3>\n          \n          <p class=\"p-medium mn-b-small\">Please select organization accesses for user in department:</p>\n          \n          <div class=\"cols-1 gap-thin\">\n            <div v-for=\"(actions, category) in departments.state.department.accesses\" :key=\"category\">\n              <h4>{{ category.charAt(0).toUpperCase() + category.slice(1) }}</h4>\n              <Checkbox\n                v-for=\"(value, action) in actions\"\n                :key=\"action\"\n                :label=\"action\"\n                :name=\"action\"\n                :radio=\"value\"\n                @update:radio=\"updated => (departments.state.department.accesses[category][action] = !value)\"\n                class=\"w-100 mn-r-small bg-white radius-small pd-small\"\n              />\n            </div>\n          </div>\n        </div>\n\n\n      </div>\n\n  \n    \n\n\n<!--     <div id=\"dash\" class=\"pd-medium bg-white\">\n\n      <Popup title=\"Добавить подотдел\" @close-popup=\"closeDepartmentPopup\" :isPopupOpen=\"isOpenDepartmentPopup\">\n        <DepartmentSubDepartmentModify \n          :departments=\"departments.state.department.subdepartments\" \n          :department=\"selectedDepartment\" \n          :maindepartment=\"departments.state.department\"\n          :alldepartments=\"departments.state.departments\"\n          @callback=\"closeDepartmentPopup\"\n        />\n      </Popup>\n    \n      <div class=\"mn-b-regular  flex-v-center flex-nowrap flex\">\n        <h3 class=\"mn-r-small\">Подотделы </h3>\n        <div>\n          <a  class=\"t-main h5\" @click=\"openDepartmentPopup()\">+</a>\n        </div>\n      </div>\n\n        <ul class=\"mn-b-small\">\n          <li v-if=\"departments.state.department.subdepartments.length < 1\">В отделе еще нет подотделов</li>\n          <DepartmentSub  \n            v-for=\"(subdepartment, index) in departments.state.department.subdepartments\" \n            :key=\"index\" class=\"bg-light o-hidden radius-small mn-b-thin\" \n            :department=\"subdepartment\" \n              @click=\"openDepartmentPopup(index)\"\n            />\n        </ul> \n\n      \n    </div> -->\n  </div>\n</template>\n\n<script setup>\nimport { ref } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport Cookies from \"js-cookie\";\nimport Breadcrumbs from '@martyrs/src/components/Breadcrumbs/Breadcrumbs.vue'\nimport UploadImage from '@martyrs/src/components/UploadImage/UploadImage.vue';\n\nimport Tab from \"@martyrs/src/components/Tab/Tab.vue\";\nimport Field from \"@martyrs/src/components/Field/Field.vue\";\nimport Select from \"@martyrs/src/components/Select/Select.vue\";\nimport Checkbox from \"@martyrs/src/components/Checkbox/Checkbox.vue\";\nimport Address from \"@martyrs/src/components/Address/Address.vue\";\nimport LocationMarker from \"@martyrs/src/components/LocationMarker/LocationMarker.vue\";\nimport Button from \"@martyrs/src/components/Button/Button.vue\";\nimport Popup from \"@martyrs/src/components/Popup/Popup.vue\";\nimport Block from '@martyrs/src/components/Block/Block.vue';\nimport Feed from '@martyrs/src/components/Feed/Feed.vue'\n\nimport IconDelete from '@martyrs/src/modules/icons/navigation/IconDelete.vue'\n\nimport EditArray from \"@martyrs/src/modules/organizations/components/blocks/EditArray.vue\";\nimport DepartmentSub from \"@martyrs/src/modules/organizations/components/blocks/DepartmentSub.vue\";\n\nimport CardUser from '@martyrs/src/modules/auth/views/components/blocks/CardUser.vue'\n\nimport * as globals from \"@martyrs/src/modules/globals/views/store/globals.js\";\nimport * as departments from \"@martyrs/src/modules/organizations/store/departments.js\";\nimport * as memberships from \"@martyrs/src/modules/organizations/store/memberships.js\";\n\nconst router = useRouter();\nconst route = useRoute();\n\nasync function fetchData() {\n  const users = ref(memberships.state.memberships);\n  // await departments.actions.read({organization: route.params._id});\n  if (route.params.department) await departments.actions.readOne(route.params.department);\n}\n\nfetchData();\n\n// const members = ref(departments.state.department.members);\n\nconst isOpenAddMemberPopup = ref(false);\nconst selectedMember = ref(null);\n\nfunction openMemberPopup(member) {\n  isOpenAddMemberPopup.value = true;\n  if (typeof member === \"number\") selectedMember.value = member;\n}\n\nfunction closeMemberPopup() {\n  isOpenAddMemberPopup.value = false;\n  selectedMember.value = null;\n}\n\nconst isOpenDepartmentPopup = ref(false);\nconst selectedDepartment = ref(null);\n\nfunction openDepartmentPopup(department) {\n  isOpenDepartmentPopup.value = true;\n  if (typeof department === \"number\") selectedDepartment.value = department;\n}\n\nfunction closeDepartmentPopup() {\n  isOpenDepartmentPopup.value = false;\n  selectedDepartment.value = null;\n}\n\nasync function onSubmit() {\n  if (route.params.department) {\n    await departments.actions.update(\n      route.params._id,\n      departments.state.department\n    );\n  }\n  if (!route.params.department) {\n    await departments.actions.create(\n      route.params._id,\n      departments.state.department\n    );\n  }\n}\n\nfunction redirectTo() {\n  router.push({ name: \"Organization Members\", params: { _id: route.params._id } });\n}\n\nasync function onDelete() {\n  if (confirm(\"Are you sure you want to delete this department?\")) {\n    await departments.actions.delete(\n      route.params._id,\n      departments.state.department\n    );\n  }\n  \n}\n\nfunction removeMember(member) {\n   if (confirm(\"Are you sure you want to remove this member?\")) {\n    globals.actions.delete(departments.state.department.members, { _id: member.user._id}) \n  }\n}\n\nfunction redirectDash() {\n  router.replace({ name: \"Organization\" });\n}\n</script>\n\n<style scoped>\n</style>",
                "name": "DepartmentEdit.vue",
                "size": 10298,
                "type": "source"
              },
              {
                "path": "../../src/modules/organizations/components/pages/Members.vue",
                "relativePath": "modules/organizations/components/pages/Members.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"pd-thin\">\n    <SectionPageTitle\n      title=\"Members\"\n      @update:tabs_current=\"(update) => tab = update\"\n      :tabs_current=\"tab\"\n      :tabs=\"[\n        { name: `Members (${organization.state.current.numberOfMembers || 0})`, value: 'members' },\n        { name: 'Departments', value: 'departments' },\n        { name: 'Invites', value: 'invites' }\n      ]\"\n      :actions=\"[\n        { method: openMembersAddPopup, label: 'Invite members' }\n      ]\"\n      class=\"mn-b-small bg-light bg-light radius-medium pd-medium\"\n    />\n\n    <Popup \n      title=\"Add members\"\n      @close-popup=\"closeMembersAddPopup\" \n      :isPopupOpen=\"isOpenMembersAddPopup\"\n      class=\"bg-white w-min-30r w-max-30r radius-big pd-medium\"\n    >\n      <MembersAdd \n        text=\"Please enter your email or phone number to send an invitation link:\"\n        :organization=\"organizationData\"\n        @send-invite=\"handleSendInvite\"\n      />\n    </Popup>  \n\n    <Feed\n      v-if=\"tab === 'departments'\"\n      :states=\"{\n        empty: {\n          title: 'No Departments Found',\n          description: 'Currently, there are no departments available.',\n          action: 'Add department',\n          callback:  () => $router.push(`/organizations/${route.params._id}/departments/create`)\n        }\n      }\"\n      :store=\"{\n        read: (options) => departments.actions.read(options),\n        state: null\n      }\"\n      :options=\"{\n        organization: route.params._id,\n        user: auth.state.user._id,\n      }\"\n      v-slot=\"{ \n        items \n      }\"\n    >\n      <CardDepartment\n        v-for=\"(department, index) in items\"\n        :key=\"index\"\n        :department=\"department\"\n        :organization=\"route.params._id\"\n        class=\"radius-semi bg-light pos-relative mn-b-thin\"\n      />\n\n     </Feed>\n\n      <router-link\n         v-if=\"tab === 'departments' && departments.state.departments.length > 0\"\n        :to=\"{\n          path: `/organizations/${route.params._id}/departments/create`\n        }\"\n        class=\"d-block flex-center flex uppercase t-semi bg-main w-100 pd-small radius-extra\"\n      >\n        Add department\n      </router-link>\n\n      <!-- Members -->\n      <div \n         v-if=\"tab === 'members'\"\n        class=\"cols-1 gap-thin\"\n      >\n        <Feed\n          :search=\"true\"\n          :states=\"{\n            empty: {\n              title: 'No Members Found',\n              description: 'Currently, there are no members.'\n            },\n          }\"\n          :store=\"{\n            read: (options) => memberships.actions.read(options)\n          }\"\n          :options=\"{\n            target: route.params._id,\n            role: ['member','owner']\n          }\"\n          v-slot=\"{ \n            items \n          }\"\n          class=\"gap-thin cols-1\"\n        >\n          <CardUser \n            v-for=\"(member,index) in items\" \n            :key=\"index\" \n            :user=\"member\"\n            :_id=\"member.user._id\"\n            :photo=\"member.user.profile.photo\" \n            :phone=\"member.user.phone\"\n            :email=\"member.user.email\"\n            :name=\"member.user.profile.name || 'No name'\"\n            :role=\"member.label || member.role\"\n            @click=\"$router.push(`/profile/${member.user._id}`)\" \n            :action=\" member.role !== 'owner' ? {\n              label: {\n                is: IconDelete,\n                props: { class: 'i-medium', fill: 'rgb(var(--white)' }\n              },\n              method: () => removeMember(index, member)\n            } : null\"\n            class=\"h-4r w-100 bg-light radius-medium flex-nowrap flex pd-medium\"\n          />\n        </Feed>\n      </div>\n      <!-- Invites -->\n      <div \n        v-if=\"tab === 'invites'\"\n      > \n        <Feed\n          v-model:items=\"invitesState\"\n          :states=\"{\n            empty: {\n              title: 'No Invites Found',\n              description: 'Currently, there are no members.'\n            }\n          }\"\n          :store=\"{\n            read: (options) => invites.actions.read(options)\n          }\"\n          :options=\"{\n            owner: route.params._id\n          }\"\n          v-slot=\"{ \n            items \n          }\"\n          class=\"gap-thin cols-1\"\n        >\n          <CardUser \n            v-for=\"invite in items\" \n            :key=\"index\" \n            :user=\"{ type: 'invite'} \"\n            :name=\"invite.email || invite.phone\"\n            :role=\"invite.status\"\n            :action=\"{\n              label: {\n                is: IconDelete,\n                props: { class: 'i-medium', fill: 'rgb(var(--white)' }\n              },\n              method: () => removeInvite(index, invite)\n            }\"\n            class=\"h-4r w-100 bg-light radius-big flex-nowrap flex pd-medium\"\n          />\n        </Feed>\n      </div>\n  \n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router'\n\nimport Feed from '@martyrs/src/components/Feed/Feed.vue'\nimport Tab      from '@martyrs/src/components/Tab/Tab.vue'\nimport Block      from '@martyrs/src/components/Block/Block.vue'\nimport Popup from '@martyrs/src/components/Popup/Popup.vue';\n\nimport SectionPageTitle from '@martyrs/src/modules/globals/views/components/sections/SectionPageTitle.vue'\nimport PlaceholderUserpic from '@martyrs/src/modules/icons/placeholders/PlaceholderUserpic.vue'\n\nimport MembersAdd from '@martyrs/src/modules/organizations/components/sections/MembersAdd.vue';\n\n// Mobile Module\nimport Menu from '@martyrs/src/components/Menu/Menu.vue'\nimport MenuItem from '@martyrs/src/components/Menu/MenuItem.vue'\n\nimport CardUser from '@martyrs/src/modules/auth/views/components/blocks/CardUser.vue';\nimport CardDepartment from '@martyrs/src/modules/organizations/components/blocks/CardDepartment.vue';\n\nimport IconDelete from '@martyrs/src/modules/icons/navigation/IconDelete.vue'\n\nimport * as auth      from '@martyrs/src/modules/auth/views/store/auth.js'\nimport * as globals      from '@martyrs/src/modules/globals/views/store/globals.js'\nimport * as invites from '@martyrs/src/modules/organizations/store/invites.js';\nimport * as memberships from '@martyrs/src/modules/organizations/store/memberships.js';\nimport * as organization  from '@martyrs/src/modules/organizations/store/organizations.js'\nimport * as departments from '@martyrs/src/modules/organizations/store/departments.js';\n\nconst route   = useRoute()\nconst router   = useRouter()\nconst organizationData = ref(null)\n\n// Tab logic\nconst tab = ref('members')\n// States\nconst invitesState = ref([])\n// Popup\nconst isOpenMembersAddPopup = ref(false);\n\nfunction openMembersAddPopup() {\n  isOpenMembersAddPopup.value = true;\n}\n\nfunction closeMembersAddPopup() {\n  isOpenMembersAddPopup.value = false;\n}\n\nonMounted(async () => {\n  organizationData.value = (await organization.actions.read({_id: route.params._id, user: auth.state.user._id}))[0]\n  ;\n})\n\nconst FirstLevelDepartments = computed(() => {\n  const departmentsState = departments.state.departments;\n\n  const subdepartmentIds = departmentsState.flatMap(department =>\n    department.subdepartments.map(subdepartment => subdepartment._id)\n  );\n\n  return departmentsState.filter(department =>\n    !subdepartmentIds.includes(department._id)\n  );\n});\n\nasync function handleSendInvite(list, resolve, reject) {\n  try {\n    const response = await invites.actions.create({\n      owner: {\n        type: 'Organization',\n        target: organizationData.value._id\n      },\n      creator: {\n        type: 'User',\n        target: auth.state.user._id\n      },\n      invites: list,\n    });\n    for (let invite of response.createdInvites) {\n      globals.actions.add(invitesState.value, invite)\n    }\n    closeMembersAddPopup();\n    resolve(); // Вызываем resolve, когда все операции завершены успешно\n  } catch (error) {\n    reject(error); // Вызываем reject, если произошла ошибка\n  }\n}\n\nasync function removeMember(index,member) {\n  if (confirm(\"Confirm remove of member\") == true) {\n    memberships.state.memberships.splice(index, 1);\n    await memberships.actions.delete(member);\n  } \n}\n\nasync function removeInvite(index,invite) {\n  if (confirm(\"Confirm remove of member\") == true) {\n    globals.actions.delete(invitesState.value, invite)\n    await invites.actions.delete(invite._id);\n  }\n}\n</script>\n\n<style scoped>\n</style>\n",
                "name": "Members.vue",
                "size": 8284,
                "type": "source"
              },
              {
                "path": "../../src/modules/organizations/components/pages/Organization.vue",
                "relativePath": "modules/organizations/components/pages/Organization.vue",
                "extension": ".vue",
                "content": "<template>\n\t<div v-if=\"organizationData\" class=\"pd-thin for-transition w-100\">\n\n\t\t<!-- <Breadcrumbs class=\"mn-b-thin pd-medium bg-light radius-big\"/> -->\n\t\t<!-- <pre>{{organization.state.current}}</pre> -->\n\n\t\t<DetailsTabSection \t\n\t\t\t:organization=\"organization.state.current\" \n\t\t\t:user=\"auth.state.user\"\n\t\t\tclass=\"mn-b-thin\"\n\t\t>\n\n\t\t</DetailsTabSection>\n\n\t\t<Tab \n\t\t\tv-model:selected=\"tabOrganization\"\n\t\t\t:tabs=\"[\n\t\t\t\t{ name: 'Community', value: 'community' },\n\t\t\t\t{ name: 'Menu', value: 'products' },\t\n\t\t\t\t{ name: 'Events', value: 'events' },\n\t\t\t\t{ name: 'Spots', value: 'spots' }\t\n\t\t\t]\"\n\t\t\tclass=\"mn-b-thin o-x-scroll scroll-hide flex-child-default o-hidden t-medium p-medium radius-medium pd-thin bg-light\"\n\t\t/>\n\n\t\t<div class=\"h-100 pos-relative\">\n\n\t\t\t<transition name=\"slide-fade\">\n\t\t    <Feed\n\t\t    \tv-if=\"tabOrganization === 'community'\"\n\t\t\t    :showLoadMore=\"false\"\n\t\t\t    :states=\"{\n\t\t\t      empty: {\n\t\t\t        title: 'No Blog Posts Found',\n\t\t\t        description: 'Currently, there are no posts available in this blog. Please check back later.'\n\t\t\t      }\n\t\t\t    }\"\n\t\t\t    :store=\"{\n\t\t\t      read: (options) => blog.read(options)\n\t\t\t    }\"\n\t\t\t    :options=\"{\n\t\t\t      status: 'published',\n\t\t\t      user: auth.state.user._id,\n\t\t\t      owner: route.params._id,\n\t\t\t    }\"\n\t\t\t    v-slot=\"{ \n\t\t\t      items \n\t\t\t    }\"\n\t\t\t    class=\"rows-1 gap-thin\"\n\t\t\t  >\n\t\t\t    <CardBlogpost \n\t\t\t      v-for=\"item in items\" \n\t\t\t      :key=\"item._id\" \n\t\t\t      :blogpost=\"item\" \n\t\t\t      :user=\"auth.state.user._id\" \n\t\t\t      class=\"h-max-40r bg-light radius-medium\"\n\t\t\t    />\n\t\t\t  </Feed>\n\t\t\t</transition>\n\n\t\n\t\t\t<transition name=\"slide-fade\">\n\t\t\t\t<FeedEvents \n\t\t\t\t\tv-if=\"tabOrganization === 'events'\"\n\t\t\t  \t:user=\"auth.state.user._id\"\n\t\t\t\t\t:owner=\"route.params._id\"\n\t\t\t\t\t:sortOrder=\"'desc'\"\n\t\t\t\t\t:sortParam=\"'date.start'\"\n\t\t\t\t/>\n\t\t\t</transition>\n\n\t\t\t\n\n\t\t\t<transition name=\"slide-fade\">\n\t\t\t\t<Products \n\t\t\t\t\tv-if=\"tabOrganization === 'products'\"\n\t\t\t\t\t:organization=\"organization.state.current\"\n\t\t\t\t>\n\t\t\t\t\t<Block\n\t\t\t\t\t\tv-if=\"hasAccess(route.params._id, null, null, auth.state.accesses, auth.state.access.roles)\"\n\t\t\t\t\t\tclass=\"o-x-scroll pd-small scroll-hide w-100 pos-relative mn-b-thin\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div class=\"w-100 gap-thin flex flex-nowrap\t o-x-scroll\">\n\t\t\t\t\t\t\t<router-link \n\t\t\t\t\t\t\t\tclass=\"bg-black t-nowrap t-white uppercase t-semi pd-thin radius-small \"\n\t\t\t\t\t\t\t\t:to=\"{\n\t\t\t\t\t\t\t\t\tname:'Organization_ProductAdd', \n\t\t\t\t\t\t\t\t\tparams: {\n\t\t\t\t\t\t\t\t\t\t_id: route.params._id\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tAdd Product\n\t\t\t\t\t\t\t</router-link>\n\n\t\t\t\t\t\t\t<router-link \n\t\t\t\t\t\t\t\tclass=\" uppercase t-nowrap t-semi  pd-thin\"\n\t\t\t\t\t\t\t\t:to=\"{\n\t\t\t\t\t\t\t\t\tname:'Leftovers', \n\t\t\t\t\t\t\t\t\tparams: {\n\t\t\t\t\t\t\t\t\t\t_id: route.params._id\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tChange Invetory\n\t\t\t\t\t\t\t</router-link>\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<router-link \n\t\t\t\t\t\t\t\tclass=\"d-block t-nowrap  mn-l-auto uppercase t-semi bg-white pd-thin radius-small \"\n\t\t\t\t\t\t\t\t:to=\"{\n\t\t\t\t\t\t\t\t\tname:'Backoffice', \n\t\t\t\t\t\t\t\t\tparams: {\n\t\t\t\t\t\t\t\t\t\t_id: route.params._id\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tGo to Backoffice\n\t\t\t\t\t\t\t</router-link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Block>\n\t\t\t\t</Products>\n\n\t\t\t</transition>\n\n\t\t\t<transition name=\"slide-fade\">\n\t\t\t\t<div v-if=\"tabOrganization === 'spots'\">\n\t\t\t\t\t<Feed\n\t\t\t      :states=\"{\n\t\t\t        empty: {\n\t\t\t          title: 'No Spots Found',\n\t\t\t          description: 'Currently, there are no spots available.'\n\t\t\t        }\n\t\t\t      }\"\n\t\t\t      :store=\"{\n\t\t\t        read: (options) => spots.actions.read(options),\n\t\t\t        state: organization.state\n\t\t\t      }\"\n\t\t\t      :options=\"{\n\t\t\t        \tuser: auth.state.user._id,\n\t\t\t\t\t\t\t\torganization: route.params._id,\n\t\t\t\t\t\t\t\tlimit: 10\n\t\t\t      }\"\n\t\t\t      v-slot=\"{ \n\t\t\t        items \n\t\t\t      }\"\n\t\t\t    >\n\t\t\t    \t<CardSpot\n\t\t          v-for=\"(spot, index) in items\"\n\t\t          :key=\"index\"\n\t\t          :spot=\"spot\"\n\t\t          :organization=\"organization.state.current\"\n\t\t          :editAccess=\"hasAccess(route.params._id, 'spots', 'edit', auth.state.accesses, auth.state.access.roles)\"\n\t\t          :showDeliveryOptions=\"true\"\n\t\t          :showPaymentOptions=\"true\"\n\t\t          class=\"radius-medium bg-light mn-b-thin\"\n\t\t        />\n\t\t\t    </Feed>\n\n\t\t\t    <button\n\t          v-if=\"hasAccess(route.params._id, 'spots', 'create', auth.state.accesses, auth.state.access.roles)\"\n\t          @click=\"$router.push(`/spots/${organization.state.current._id}/spots/create`)\"\n\t          class=\"mn-b-thin bg-main button w-100\"\n\t        >\n\t          Add spot\n\t        </button>\n\n\t\t\t\t</div>\n\t\t\t</transition>\n\n\t\t</div>\n\t</div>\n</template>\n\n<script setup>\n\timport { computed, reactive, ref, onMounted, watch  } from 'vue'\n\timport { useRoute, useRouter } from 'vue-router'\n\t// Import components\n\timport Breadcrumbs \tfrom '@martyrs/src/components/Breadcrumbs/Breadcrumbs.vue'\n\timport Tab  \t\tfrom '@martyrs/src/components/Tab/Tab.vue'\n\timport Block  \t\tfrom '@martyrs/src/components/Block/Block.vue'\n\timport Feed from '@martyrs/src/components/Feed/Feed.vue'\n\t// Community\n\t  import CardBlogpost from '@martyrs/src/modules/community/components/blocks/CardBlogpost.vue';\n\t// Mobile Module\n\timport Menu from '@martyrs/src/components/Menu/Menu.vue'\n\timport MenuItem from '@martyrs/src/components/Menu/MenuItem.vue'\n\t// Organizations\n\timport DepartmentSub from '@martyrs/src/modules/organizations/components/blocks/DepartmentSub.vue';\n\timport DetailsTabSection from '@martyrs/src/modules/organizations/components/sections/DetailsTabSection.vue'\n\timport User from '@martyrs/src/modules/auth/views/components/blocks/CardUser.vue';\n\t// Feeds\n\timport FeedEvents from '@martyrs/src/modules/events/components/sections/Feed.vue'; \n\t// Spots\n\timport CardSpot from '@martyrs/src/modules/spots/components/blocks/CardSpot.vue';\t\n\t// Local\n\timport Products from '@martyrs/src/modules/products/components/pages/Products.vue';\n\t// Import state\n\timport * as auth from '@martyrs/src/modules/auth/views/store/auth.js';\n\timport * as organization from '@martyrs/src/modules/organizations/store/organizations.js';\n\timport * as memberships from '@martyrs/src/modules/organizations/store/memberships.js';\n\timport * as departments from '@martyrs/src/modules/organizations/store/departments.js';\n\t// Community\n  import * as blog from '@martyrs/src/modules/community/store/blogposts.js';\n\t// Spots\n\timport * as spots from '@martyrs/src/modules/spots/store/spots.js';\n\t// Init router\n\tconst router \t= useRouter()\n\tconst route \t= useRoute()\n\t// Accesing state\n\tlet tab = route.query.tab ? route.query.tab : 'products';\n\n\tconst organizationData = ref(null)\n\n\tconst tabOrganization = ref(tab)\n\n\troute.query.tab = tabOrganization.value\n\n\tonMounted(async () => {\n\t\t\n\t\torganizationData.value = await organization.actions.read({\n\t\t\t_id: route.params._id, \n\t\t\tuser: auth.state.user._id,\n\t\t\tlookup: ['memberships']\n\t\t})\n\n \t\tawait memberships.actions.read({target: route.params._id})\n\n \t\tif (typeof gtag === 'function') {\n\t\t\tgtag('event', 'view_organization', {\n\t\t\t\torganization_id: route.params._id,\n\t\t\t\torganization_name: organizationData.value?.profile?.name || 'unknown',\n\t\t\t\tpage_path: window.location.pathname,\n\t\t\t\tuser_id: auth.state.user._id || 'anonymous',\n\t\t\t\ttimestamp: new Date().toISOString()\n\t\t\t});\n\t\t}\n\t})\n\n\twatch(tabOrganization, (newValue) => {\n\t  router.replace({ query: { ...route.query, tab: newValue } });\n\t});\n</script>\n\n<style lang=\"scss\">\n\t.slide-fade-enter-active {\n\t\t// min-height: 100vh;\n\t  transition: all  0.3s cubic-bezier(0.4, 0, 0.2, 1);\n\t}\n\n\t.slide-fade-leave-active {\n\t\t// min-height: 100vh;\n\t  transition: all  0.3s cubic-bezier(0.4, 0, 0.2, 1);\n\t}\n\n\t.slide-fade-enter-from,\n\t.slide-fade-leave-to {\n\t\tmin-height: 0;\n\t\tposition: absolute;\n\t  transform: translateX(20px);\n\t  opacity: 0;\n\t  left: 0;\n\t  top: 0;\n\t}\n\n</style>\n",
                "name": "Organization.vue",
                "size": 7700,
                "type": "source"
              },
              {
                "path": "../../src/modules/organizations/components/pages/OrganizationBackoffice.vue",
                "relativePath": "modules/organizations/components/pages/OrganizationBackoffice.vue",
                "extension": ".vue",
                "content": "<template>\n\t<div class=\"bg-white pd-medium\">\n\t\t\n\t\t<!-- --------------------------------------------------------------- -->\n\t\t<!-- ДОБАВИТЬ СЮДА ДРОПДАУН С ВЫБОРОМ ОРГАНИЗАЦИИ ПОЛЬЗОВАТЕЛЯ -->\n\t\t<!-- --------------------------------------------------------------- -->\n\t\t<Menu \n\t\t\tclass=\"bg-light mn-b-semi\"\n\t\t>\n\t\t\t<MenuItem \n\t\t\t\tv-if=\"hasAccess(route.params._id, 'members', 'read', auth.state.accesses, auth.state.access.roles)\"\n\t\t  \t@click=\"router.push({\n\t\t  \t\tname: 'Organization Members', \n\t\t  \t\tparams: {\n\t\t  \t\t\t_id: route.params._id\n\t\t  \t\t}\n\t\t  \t})\" \n\t\t  \tclass=\"cursor-pointer\"\n\t\t  >\n\t\t  \t<IconGroups class=\"i-semi\" :icon=\"true\" :fill=\"'rgb(var(--white))'\"/> \n\t\t    <span>\n\t\t    \tMembers\n\t\t    </span>\n\t\t  </MenuItem>\n\n\t\t  <!-- <MenuItem \n\t\t  \t@click=\"router.push({\n\t\t  \t\tname: 'Backoffice Community', \n\t\t  \t\tparams: {\n\t\t  \t\t\t_id: route.params._id\n\t\t  \t\t}\n\t\t  \t})\" \n\t\t  \tclass=\"cursor-pointer\">\n\t\t    <span>\n\t\t    \tCommunity\n\t\t    </span>\n\t\t  </MenuItem> -->\n\n\t\t  <MenuItem \n\t\t  \tv-if=\"hasAccess(route.params._id, 'products', 'read', auth.state.accesses, auth.state.access.roles)\"\n\t\t  \t@click=\"router.push({\n\t\t  \t\tname: 'Organization_Products', \n\t\t  \t\tparams: {\n\t\t  \t\t\t_id: route.params._id\n\t\t  \t\t}\n\t\t  \t})\" \n\t\t  \tclass=\"cursor-pointer\">\n\t\t  \t<IconProducts class=\"i-semi\" :icon=\"true\" :fill=\"'rgb(var(--white))'\"/> \n\t\t    <span>\n\t\t    \tProducts\n\t\t    </span>\n\t\t  </MenuItem>\n\n\t\t  <MenuItem \n\t\t  \tv-if=\"hasAccess(route.params._id, 'products', 'read', auth.state.accesses, auth.state.access.roles)\"\n\t\t  \t@click=\"router.push({\n\t\t  \t\tname: 'Categories', \n\t\t  \t\tparams: {\n\t\t  \t\t\t_id: route.params._id\n\t\t  \t\t}\n\t\t  \t})\" \n\t\t  \tclass=\"cursor-pointer\">\n\t\t  \t<IconProducts class=\"i-semi\" :icon=\"true\" :fill=\"'rgb(var(--white))'\"/> \n\t\t    <span>\n\t\t    \tCategories\n\t\t    </span>\n\t\t  </MenuItem>\n\n\t\t  <MenuItem \n\t\t  \tv-if=\"hasAccess(route.params._id, 'leftovers', 'read', auth.state.accesses, auth.state.access.roles)\"\n\t\t  \t@click=\"router.push({\n\t\t  \t\tname: 'Leftovers', \n\t\t  \t\tparams: {\n\t\t  \t\t\t_id: route.params._id\n\t\t  \t\t}\n\t\t  \t})\" \n\t\t  \tclass=\"cursor-pointer\">\n\t\t  \t<IconLeftovers class=\"i-semi\" :icon=\"true\" :fill=\"'rgb(var(--white))'\"/> \n\t\t    <span>\n\t\t    \tLeftovers\n\t\t    </span>\n\t\t  </MenuItem>\n\n\t\t  <MenuItem \n\t\t  \tv-if=\"hasAccess(route.params._id, 'orders', 'read', auth.state.accesses, auth.state.access.roles)\"\n\t\t  \t@click=\"router.push({\n\t\t  \t\tname: 'OrganizationOrdersList', \n\t\t  \t\tparams: {\n\t\t  \t\t\t_id: route.params._id\n\t\t  \t\t}\n\t\t  \t})\" \n\t\t  \tclass=\"cursor-pointer\">\n\t\t  \t<IconOrders class=\"i-semi\" :icon=\"true\" :fill=\"'rgb(var(--white))'\"/> \n\t\t    <span>\n\t\t    \tOrders\n\t\t    </span>\n\t\t  </MenuItem>\n\n\t\t  <MenuItem \n\t\t  \tv-if=\"hasAccess(route.params._id, 'orders', 'read', auth.state.accesses, auth.state.access.roles)\"\n\t\t  \t@click=\"router.push({\n\t\t  \t\tname: 'Organization_Rents', \n\t\t  \t\tparams: {\n\t\t  \t\t\t_id: route.params._id\n\t\t  \t\t}\n\t\t  \t})\" \n\t\t  \tclass=\"cursor-pointer\">\n\t\t  \t<IconOrders class=\"i-semi\" :icon=\"true\" :fill=\"'rgb(var(--white))'\"/> \n\t\t    <span>\n\t\t    \tRents\n\t\t    </span>\n\t\t  </MenuItem>\n\n\n\t\t  <MenuItem \n\t\t  \tv-if=\"hasAccess(route.params._id, 'gallery', 'read', auth.state.accesses, auth.state.access.roles)\"\n\t\t  \t@click=\"router.push({\n\t\t  \t\tname: 'Backoffice Gallery', \n\t\t  \t\tparams: {\n\t\t  \t\t\t_id: route.params._id\n\t\t  \t\t}\n\t\t  \t})\" \n\t\t  \tclass=\"cursor-pointer\">\n\t\t  \t<IconGallery class=\"i-semi\" :icon=\"true\" :fill=\"'rgb(var(--white))'\"/> \n\t\t    <span>\n\t\t    \tGallery\n\t\t    </span>\n\t\t  </MenuItem>\n\t\t  \n\t\t  <MenuItem \n\t\t  \tv-if=\"hasAccess(route.params._id, 'events', 'read', auth.state.accesses, auth.state.access.roles)\"\n\t\t  \t@click=\"router.push({\n\t\t  \t\tname: 'Organization_Events Backoffice', \n\t\t  \t\tparams: {\n\t\t  \t\t\t_id: route.params._id\n\t\t  \t\t}\n\t\t  \t})\" \n\t\t  \tclass=\"cursor-pointer\">\n\t\t  \t<IconEvents class=\"i-semi\" :icon=\"true\" :fill=\"'rgb(var(--white))'\"/> \n\t\t    <span>\n\t\t    \tEvents\n\t\t    </span>\n\t\t  </MenuItem>\n\n\t\t <!--  <MenuItem \n\t\t  \t@click=\"router.push({\n\t\t  \t\tname: 'Payments', \n\t\t  \t\tparams: {\n\t\t  \t\t\t_id: route.params._id\n\t\t  \t\t}\n\t\t  \t})\" \n\t\t  \tclass=\"cursor-pointer\">\n\t\t    <span>\n\t\t    \tPayments\n\t\t    </span>\n\t\t  </MenuItem> -->\n\t\t</Menu>\n\n\t\t<!-- <Menu \n\t\t\tclass=\"bg-light\"\n\t\t>\n\t\t\t<MenuItem \n\t\t  \t@click=\"router.push({\n\t\t  \t\tname: 'Backoffice Organizations', \n\t\t  \t\tparams: {\n\t\t  \t\t\t_id: route.params._id\n\t\t  \t\t}\n\t\t  \t})\" \n\t\t  \tclass=\"cursor-pointer\">\n\t\t    <span>\n\t\t    \tOrganizations\n\t\t    </span>\n\t\t  </MenuItem>\n\n\t\t  <MenuItem \n\t\t  \t@click=\"router.push({\n\t\t  \t\tname: 'Backoffice Reports', \n\t\t  \t\tparams: {\n\t\t  \t\t\t_id: route.params._id\n\t\t  \t\t}\n\t\t  \t})\" \n\t\t  \tclass=\"cursor-pointer\">\n\t\t    <span>\n\t\t    \tReports\n\t\t    </span>\n\t\t  </MenuItem>\n\t\t</Menu> -->\n\t</div>\n</template>\n\n<script setup=\"props\">\n/////////////////////////////\n// COMPONENT DEPENDENCIES\n/////////////////////////////\nimport { ref, onMounted } from 'vue';\n\n// Mobile Module\nimport Menu from '@martyrs/src/components/Menu/Menu.vue'\nimport MenuItem from '@martyrs/src/components/Menu/MenuItem.vue'\nimport SelectMulti    from '@martyrs/src/components/SelectMulti/SelectMulti.vue'\n\nimport IconProducts from '@martyrs/src/modules/icons/entities/IconProducts.vue'\nimport IconEvents from '@martyrs/src/modules/icons/entities/IconEvents.vue'\nimport IconGroups from '@martyrs/src/modules/icons/entities/IconGroups.vue'\nimport IconCommunity from '@martyrs/src/modules/icons/entities/IconCommunity.vue'\nimport IconGallery from '@martyrs/src/modules/icons/entities/IconGallery.vue'\nimport IconOrders from '@martyrs/src/modules/icons/entities/IconOrders.vue'\nimport IconLeftovers from '@martyrs/src/modules/icons/entities/IconLeftovers.vue'\n/////////////////////////////\n// HELPERS\n/////////////////////////////\nimport { useRoute, useRouter } from 'vue-router'\n\nimport * as auth  from '@martyrs/src/modules/auth/views/store/auth.js'\n\nimport * as organizations  from '@martyrs/src/modules/organizations/store/organizations.js'\n\nconst route = useRoute()\nconst router = useRouter()\n/////////////////////////////\n// CREATED\n/////////////////////////////\nconst props = defineProps({\n  favorites: Array,\n});\n\nconst selectedOrganization = ref(null);\nconst publics = ref([]);\n/////////////////////////////\n// MOUNTED\n/////////////////////////////\nonMounted(async () =>{\n})\n</script>\n\n<style lang=\"scss\">\n</style>",
                "name": "OrganizationBackoffice.vue",
                "size": 6205,
                "type": "source"
              },
              {
                "path": "../../src/modules/organizations/components/pages/OrganizationCreate.vue",
                "relativePath": "modules/organizations/components/pages/OrganizationCreate.vue",
                "extension": ".vue",
                "content": "<template>\n\t<div class=\"for-transition w-100\">\n\t\t<div id=\"dash\" class=\"pd-medium bg-light\">\n\t\t\t\t\n\t\t\t<section class=\"radius-medium pd-big t-white bg-second\">\n\t\t\t\t<ul class=\"flex-nowrap flex\">\n\t\t\t\t\t<li :class=\"{'t-transp': route.path !== '/app/organization/create/details'}\" class=\"w-100 mn-r-medium\">\n\t\t\t\t\t\t<span class=\"h1 d-block\">1</span>\n\t\t\t\t\t\t<span>Fill the data</span>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li :class=\"{'t-transp': route.path !== '/app/organization/create/documents'}\" class=\"w-100  mn-r-medium\">\n\t\t\t\t\t\t<span class=\"h1 d-block\">2</span>\n\t\t\t\t\t\t<span>Add locations</span>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li :class=\"{'t-transp': route.path !== '/app/organization/create/people'}\" class=\"w-100\">\n\t\t\t\t\t\t<span class=\"h1 d-block\">3</span>\n\t\t\t\t\t\t<span>Invite people</span>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</section>\n\t\t</div>\n\n\t\t\t<router-view v-slot=\"{ Component, route }\"  class=\"w-100 bg-light\">\n\t\t\t\t<transition  name=\"slide\" mode=\"out-in\">\n\t\t\t\t\t<component :is=\"Component\" :key=\"route.path\"/>\n\t\t\t\t</transition>\n\t\t\t</router-view>\n\n\t<!-- \t\t<div class=\"pd-medium flex-nowrap flex\">\n      <button class=\"bg-white mn-r-small button w-100\">Сохранить</button>\n      <button class=\"bg-white button w-100\">Сбросить</button>\n\t    </div> -->\n\t</div>\n</template>\n\n<script setup>\nimport { useRoute, useRouter } from 'vue-router';\n\nimport Tab from '@martyrs/src/components/Tab/Tab.vue';\nimport Field from '@martyrs/src/components/Field/Field.vue';\nimport Select from '@martyrs/src/components/Select/Select.vue';\nimport Button from '@martyrs/src/components/Button/Button.vue';\nimport Places from '@martyrs/src/modules/organizations/components/sections/Places.vue';\n\nimport * as auth from '@martyrs/src/modules/auth/views/store/auth.js';\nimport * as organization from '@martyrs/src/modules/organizations/store/organizations.js';\n\nconst router = useRouter();\nconst route = useRoute();\n\nasync function onSubmit() {\n  // await Store.auth.login(Store.auth.state.user)\n}\n\nfunction redirectTo() {\n  // router.push({ name: 'Dashboard'})\n  // Store.auth.toggleSignInPopup()\n}\n</script>\n\n<style lang=\"scss\">\n  #header {\n    // height: 3rem;\n  }\n</style>\n",
                "name": "OrganizationCreate.vue",
                "size": 2098,
                "type": "source"
              },
              {
                "path": "../../src/modules/organizations/components/pages/OrganizationDetails.vue",
                "relativePath": "modules/organizations/components/pages/OrganizationDetails.vue",
                "extension": ".vue",
                "content": "<template>\n\t<div class=\"for-transition w-100\">\n\t\t<div id=\"dash\" class=\"pd-medium bg-light\">\n\t\t\t{{organization.state.current}}\n\t\t\t<Select \n        :options=\"[\n          {name: 'Dispensary',\tvalue: 'dispensary'}, \n          {name: 'Farm',    \t\tvalue: 'farm'},\n          {name: 'Space',\t\t\t\tvalue: 'space'},\n        ]\"\n        label=\"Type\"\n        v-model:select=\"organization.state.current.types\" \n        placeholder=\"Select type\"\n        class=\"\n          bg-white\n          pd-small\n          radius-small\n          mn-b-small\n          t-black\n        \"\n      />\n\n\t\t\t<h3 class=\"mn-b-small\">Profile</h3>\n\t\t\t\n\t\t\t<div class=\"mn-b-semi radius-small\">\n\t\t\t\t<Field \n\t\t\t\t\tv-model:field=\"organization.state.current.profile.name\" \t\n\t\t\t\t\tplaceholder=\"Name\" \n\t\t\t\t\tclass=\"bg-white pd-small\"\n\t\t\t\t/>\n\n\t\t\t\t<Field \n\t\t\t\t\tv-model:field=\"organization.state.current.profile.description\" \t\t\n\t\t\t\t\tplaceholder=\"Description\" \n\t\t\t\t\tclass=\"bg-white pd-small\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t\n\t\t\t<Button :submit=\"onSubmit\" :callback=\"redirectTo\" class=\"mn-b-thin\">Create organization</Button>\n\n\t\t</div>\n\t</div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport Popup from '@martyrs/src/components/Popup/Popup.vue';\nimport Field from '@martyrs/src/components/Field/Field.vue';\nimport Select from '@martyrs/src/components/Select/Select.vue';\nimport Button from '@martyrs/src/components/Button/Button.vue';\nimport Places from '@martyrs/src/modules/organizations/components/sections/Places.vue';\nimport * as auth from '@martyrs/src/modules/auth/views/store/auth.js';\nimport * as organization from '@martyrs/src/modules/organizations/store/organizations.js';\nimport * as inputsValidation from '@martyrs/src/modules/auth/views/validations/inputs.validation';\n\nconst router = useRouter();\nconst route = useRoute();\nconst organizationName = ref(null);\n\nasync function onSubmit() {\n  try {\n    await organization.actions.create(organization.state.current, auth.state.user._id)\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nfunction redirectTo () {\n  // router.push({ name: 'Organizations'})\n}\n</script>\n\n\n<style lang=\"scss\">\n  #header {\n    // height: 3rem;\n  }\n</style>\n\n",
                "name": "OrganizationDetails.vue",
                "size": 2193,
                "type": "source"
              },
              {
                "path": "../../src/modules/organizations/components/pages/OrganizationDocuments.vue",
                "relativePath": "modules/organizations/components/pages/OrganizationDocuments.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"documents pd-medium bg-light\">\n    <h3 class=\"mn-b-small\">Загрузите документы</h3>\n    \n    <div class=\"mn-b-big cols-4\">\n\t    <div v-for=\"(doc, index) in documents\" :key=\"index\" @click=\"openPopup(index)\">\n\t      <div class=\"pd-medium bg-white radius-small\">\n\t      \t<h3 class=\"mn-b-small\">{{ doc.name }}</h3>\n\t      \t<p class=\"t-semi t-transp radius-small\">{{ doc.status }}</p>\n\t      </div>\n\t    </div>\n\t  </div>\n\n\t   <Popup title=\"Добавить документ\" @close-popup=\"closePopup\" :isPopupOpen=\"showPopup\">\n\n      <div v-for=\"input in documents[currentIndex].inputs\" :key=\"input.name\">\n        <Field\n        \tv-model:field=\"input.value\" \t\t\n        \t:label=\"input.name\"\n          :_id=\"input.name\" \n          :placeholder=\"input.name\" \n          class=\"w-100\"\n        />\n      </div>\n      <button @click=\"submitData\" class=\"w-100 mn-b-small button \">Отправить на верификацию</button>\n\n  \t\t</Popup>\n\n  \t\t<Button :submit=\"onSubmit\" :callback=\"redirectTo\" class=\"mn-b-thin\">Перейти к людям</Button>\n\n  </div>\n</template>\n\n<script setup>\nimport { ref, watchEffect } from 'vue';\nimport { useRoute, useRouter } from 'vue-router'\n\nimport Field    from '@martyrs/src/components/Field/Field.vue'\nimport Button   from '@martyrs/src/components/Button/Button.vue'\nimport Popup    from '@martyrs/src/components/Popup/Popup.vue'\n// const props = defineProps({\n//   documents: {\n//     type: Array,\n//     required: true,\n//   },\n// });\n\n\nconst router \t= useRouter()\nconst route \t= useRoute()\n\nlet documents = [{\n\tname: 'Паспорт',\n\tstatus: 'Не добавлен',\n\tinputs: [{\n\t\ttype: 'text',\n\t\tname: 'Номер и серия'\n\t},{\n\t\ttype: 'text',\n\t\tname: 'Место выдачи'\n\t},{\n\t\ttype: 'text',\n\t\tname: 'Дата выдачи'\n\t}]\n},{\n\tname: 'ИНН',\n\tstatus: 'Не добавлен',\n\tinputs: [{\n\t\ttype: 'text',\n\t\tname: 'Дата регистрации'\n\t}]\n},{\n\tname: 'СНИЛС',\n\tstatus: 'Не добавлен',\n\tinputs: [{\n\t\ttype: 'text',\n\t\tname: 'Дата регистрации'\n\t}]\n},{\n\tname: 'Военный билет',\n\tstatus: 'Не добавлен',\n\tinputs: [{\n\t\ttype: 'text',\n\t\tname: 'Дата регистрации'\n\t}]\n}]\n\nconst showPopup = ref(false);\nconst currentIndex = ref(null);\n\nconst openPopup = (index) => {\n  currentIndex.value = index;\n  showPopup.value = true;\n};\n\nconst closePopup = () => {\n  showPopup.value = false;\n};\n\nconst handleFileUpload = (e) => {\n  const files = e.target.files;\n  // Handle file uploads as needed\n};\n\nconst submitData = () => {\n  // Handle submission of the data and update the document status\n  closePopup();\n};\n\nwatchEffect(() => {\n  // Do any necessary updates when the documents prop changes\n});\n\nasync function onSubmit() {\n  // await Store.auth.login(Store.auth.state.user)\n}\n\nfunction redirectTo () {\n\trouter.push({ name: 'Create Organization People'})\n\t// Store.auth.toggleSignInPopup()\n}\n</script>\n\n<style scoped>\n.documents {\n  display: flex;\n  flex-direction: column;\n}\n\n.popup {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: white;\n  border: 1px solid #ccc;\n  padding: 20px;\n  z-index: 10;\n}\n</style>",
                "name": "OrganizationDocuments.vue",
                "size": 3008,
                "type": "source"
              },
              {
                "path": "../../src/modules/organizations/components/pages/OrganizationEdit.vue",
                "relativePath": "modules/organizations/components/pages/OrganizationEdit.vue",
                "extension": ".vue",
                "content": "<template>\n<div class=\"for-transition pd-thin\">\n  \n  <h3 class=\"mn-b-small\">Type of group</h3>\n  <p class=\"mn-b-thin\">Public groups are open to everyone, whereas in exclusive groups only members can post. If you wish to make a group private, select 'hidden'.</p>\n  \n  <SelectMulti\n    v-model=\"organization.state.current.types\"\n    :options=\"['public','exclusive','hidden']\"\n    :multiple=\"false\"\n    :taggable=\"false\"\n    placeholder=\"Type to search or add type of organization\"\n    class=\"mn-b-semi bg-light pd-medium radius-small\" \n  />\n\n\n  <h3 class=\"mn-b-small\">Profile</h3>\n\n  <div class=\"mn-b-thin radius-small w-100 h-10r bg-light flex-center flex-column flex\">\n    <UploadImage \n      v-model:photo=\"organization.state.current.profile.photo\"\n      :uploadPath=\"'organizations/' + organization.state.current._id + '/avatars'\"\n      class=\"h-4r w-4r aspect-1x1 o-hidden mn-b-thin radius-extra\" \n    />\n    <h4>Upload photo</h4>\n  </div>\n\n    <Field \n      v-model:field=\"organization.state.current.profile.name\"   \n      placeholder=\"Name of organization\" \n      class=\"mn-b-thin bg-light pd-medium radius-small\" \n    />\n\n    <Field \n      v-model:field=\"organization.state.current.profile.description\"    \n      placeholder=\"Brief description of your group\" \n      class=\"mn-b-thin bg-light pd-medium radius-small\" \n    />\n    <BlockTags\n      @tags-changed=\"newTags => organization.state.current.profile.tags = newTags\"\n      :tags=\"organization.state.current.profile.tags\"\n      class=\"mn-b-small\"\n    />\n\n    <h3 class=\"mn-b-small\">Contacts</h3>\n    <Field \n      v-model:field=\"organization.state.current.contacts.email\"\n      label=\"Email\"   \n      placeholder=\"\" \n      class=\"mn-b-thin bg-light pd-medium radius-small\" \n    />\n    <Field \n      v-model:field=\"organization.state.current.contacts.website\"\n      label=\"Website\"   \n      placeholder=\"\" \n      class=\"mn-b-thin bg-light pd-medium radius-small\" \n    />\n    <Field \n      v-model:field=\"organization.state.current.contacts.phone\"\n      label=\"Phone\"   \n      placeholder=\"\" \n      class=\"mn-b-thin bg-light pd-medium radius-small\" \n    />\n    <Field \n      v-model:field=\"organization.state.current.contacts.address\"\n      label=\"Address\"   \n      placeholder=\"\" \n      class=\"mn-b-thin bg-light pd-medium radius-small\" \n    />\n\n    <h3 class=\"mn-b-small\">Socials</h3>\n    <p class=\"mn-b-thin\">Please provide only the username for social media profiles, without full links.</p>\n\n    <Field \n      v-model:field=\"organization.state.current.socials.instagram\"\n      label=\"Instagram\"   \n      placeholder=\"\" \n      class=\"mn-b-thin bg-light pd-medium radius-small\" \n    />\n    <Field \n      v-model:field=\"organization.state.current.socials.twitter\"\n      label=\"Twitter\"   \n      placeholder=\"\" \n      class=\"mn-b-thin bg-light pd-medium radius-small\" \n    />\n    <Field \n      v-model:field=\"organization.state.current.socials.facebook\"\n      label=\"Facebook\"   \n      placeholder=\"\" \n      class=\"mn-b-thin bg-light pd-medium radius-small\" \n    />\n    <Field \n      v-model:field=\"organization.state.current.socials.telegram\"\n      label=\"Telegram\"   \n      placeholder=\"\" \n      class=\"mn-b-thin bg-light pd-medium radius-small\" \n    />\n    <Field \n      v-model:field=\"organization.state.current.socials.youtube\"\n      label=\"Youtube\"   \n      placeholder=\"\" \n      class=\"mn-b-thin bg-light pd-medium radius-small\" \n    />\n   \n   \n    <Button :submit=\"onSubmit\" :callback=\"redirectTo\" class=\"bg-main w-100 mn-b-thin\">Save</Button>\n    <!-- <Button :submit=\"onDelete\" :callback=\"redirectDash\" class=\"mn-b-thin bg-fourth\">Delete</Button> -->\n\n</div>\n\n</template>\n\n<script setup>\n  import { onMounted, computed } from 'vue';\n\n  import { useRoute, useRouter } from 'vue-router';\n\n  import Breadcrumbs from '@martyrs/src/components/Breadcrumbs/Breadcrumbs.vue'\n  import BlockTags    from '@martyrs/src/components/FieldTags/BlockTags.vue'\n  import Tab from '@martyrs/src/components/Tab/Tab.vue';\n  import Field from '@martyrs/src/components/Field/Field.vue';\n  import Select from '@martyrs/src/components/Select/Select.vue';\n  import SelectMulti    from '@martyrs/src/components/SelectMulti/SelectMulti.vue'\n  import UploadImage from '@martyrs/src/components/UploadImage/UploadImage.vue';\n  import Button from '@martyrs/src/components/Button/Button.vue';\n  import Popup from '@martyrs/src/components/Popup/Popup.vue';\n\n  import * as auth from '@martyrs/src/modules/auth/views/store/auth.js';\n  import * as organization from '@martyrs/src/modules/organizations/store/organizations.js';\n  import * as memberships from '@martyrs/src/modules/organizations/store/memberships.js';\n\n  const route = useRoute()\n  const router = useRouter()\n\n  organization.actions.reset();\n\n  onMounted(async()=>{\n    if (route.params._id) {\n      await organization.actions.read({ _id: route.params._id });\n    } \n  })\n  \n  const organizationData = computed(() => organization.state.current)\n\n  async function onSubmit() {\n    if (route.params._id) {\n      await organization.actions.update(route.params._id, organizationData.value)\n    } else {\n      await organization.actions.create(organization.state.current, auth.state.user._id)\n    }\n  }\n\n  async function onDelete() {\n    if (route.params._id) {\n      await organization.actions.remove(route.params._id)\n      router.push({name: 'Organization'})\n    }\n  }\n\n  function redirectTo () {\n    router.replace({ name: 'Organization', params: { _id: organization.state.current._id }});\n  }\n</script>",
                "name": "OrganizationEdit.vue",
                "size": 5500,
                "type": "source"
              },
              {
                "path": "../../src/modules/organizations/components/pages/OrganizationPeople.vue",
                "relativePath": "modules/organizations/components/pages/OrganizationPeople.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"pd-medium bg-light\">\n    <h2 class=\"mn-b-small\">Структура организации</h2>\n \n  \n      <Unit \n        v-for=\"(unit, index) in units\" \n        :key=\"index\" \n        :unit=\"unit\" \n        @removeUnit=\"removeUnit(index)\" \n        @addSubunit=\"addSubunit(index)\"\n        @addParticipant=\"addParticipant(index, $event)\" \n        \n        class=\"mn-b-small\"\n      />\n   \n    <button @click=\"addUnit\" class=\"mn-b-small bg-white button w-100\">Добавить отдел</button>\n\n       <section class=\"mn-b-big radius-medium pd-big bg-white\">\n      <p>После создания организации приглашения будут отправлены по электронной почте или по телефону людям, которых вы добавили в вашу организацию.</p>\n    </section>\n\n\n    <Button :submit=\"onSubmit\" :callback=\"redirectTo\" class=\"mn-b-thin\">Создать организацию</Button>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\nimport { useRoute, useRouter } from 'vue-router'\n\nimport Button   from '@martyrs/src/components/Button/Button.vue'\n\nimport Unit   from '@martyrs/src/modules/organizations/components/sections/Unit.vue'\n\nimport * as organization from '@martyrs/src/modules/organizations/store/organizations.js'\n\nconst router  = useRouter()\nconst route   = useRoute()\n\nconst units = ref(organization.state.structure);\n\nfunction addUnit() {\n  units.value.push({\n    name: 'Безымянный отдел',\n    participants: [],\n    subunits: [],\n  });\n}\n\nfunction removeUnit(index) {\n  units.value.splice(index, 1);\n}\n\nfunction addParticipant(unitIndex, participant) {\n  units.value[unitIndex].participants.push(participant);\n}\n\nfunction addSubunit(unitIndex) {\n  units.value[unitIndex].subunits.push({\n    name: 'Безымянный подотдел',\n    participants: [],\n    subunits: [],\n  });\n}\n\nasync function onSubmit() {\n  await organization.create(organization.state)\n}\n\nfunction redirectTo () {\n  router.push({ name: 'Organization'})\n  // Store.auth.toggleSignInPopup()\n}\n</script>\n\n<style scoped>\n.unit {\n  border: 1px solid #ccc;\n  padding: 1rem;\n  margin-bottom: 1rem;\n}\n</style>",
                "name": "OrganizationPeople.vue",
                "size": 2024,
                "type": "source"
              },
              {
                "path": "../../src/modules/organizations/components/pages/Organizations.vue",
                "relativePath": "modules/organizations/components/pages/Organizations.vue",
                "extension": ".vue",
                "content": "<template>\n\t<div>\n\t\t<header v-if=\"!MOBILE_APP\"  class=\"pd-small bg-white flex-v-center flex-nowrap flex\">\n    \t<h2 class=\"mn-r-medium\">Groups</h2>\n    \t<button \n    \t\t@click=\"$router.push({\n    \t\t\tname: 'Create Organization'\n    \t\t})\" \n    \t\tclass=\"\n    \t\t\tbg-second\n    \t\t\tradius-100 \n    \t\t\ti-big \n    \t\t\thover-scale-1\n    \t\t\tcursor-pointer\n    \t\t\tt-white\n    \t\t\tbg-second\n    \t\t\">\n    \t\t\t+\n    \t</button>\n\t\t</header>\n\t\t<Tab \n\t\t\tv-model:selected=\"tabOrganization\"\n\t\t\t:tabs=\"[\n\t\t\t\t{ name: 'Owner', \t\tvalue: 'owner' },\n\t\t\t\t{ name: 'Member', \tvalue: 'member' },\n\t\t\t\t{ name: 'Follower', value: 'follower' }\t\t\n\t\t\t]\"\n\t\t\tstyle=\"flex: 1 0 auto;\"\n\t\t\tclass=\"\n\t\t\t\to-hidden \n\t\t\t\th5 \n\t\t\t\tbg-white\n\t\t\t\tgap-micro pd-small pd-t-thin pd-b-thin\n\t\t\t\tbr-b br-solid br-black-transp\n\t\t\t\"\n\t\t\ttabClass=\"bg-light pd-small radius-small w-100\"\n\t\t/>\n\t\t\t<div class=\"pd-small  h-100  bg-white\">\n\t\t\t\t<transition name=\"slide-fade\">\n\t\t\t\t\t<Feed\n\t\t        :showLoadMore=\"false\" \n\t\t        :search=\"{\n\t\t          placeholder: 'Search organization...',\n\t\t          class: 'mn-b-small'\n\t\t        }\"\n\t\t        :states=\"{\n\t\t          empty: {\n\t\t            title: 'No organizations Found',\n\t\t            description: 'Currently, there are no such organizations available.'\n\t\t          }\n\t\t        }\"\n\t\t        :store=\"{\n\t\t          read: (options) => organizations.actions.read(options),\n\t\t          state: null\n\t\t        }\"\n\t\t        :options=\"{\n\t\t          user: auth.state.user._id,\n\t\t          [tabOrganization === 'owner' ? 'owner' : \n\t\t           tabOrganization === 'member' ? 'member' : 'subscriber']: route.params._id,\n\t\t          lookup: ['memberships']\n\t\t        }\"\n\t\t        v-slot=\"{ \n\t\t          items \n\t\t        }\"\n\t\t         style=\"height: 200rem\"\n\t\t      >\n\t\t      \t<CardOrganization \n\t\t\t\t\t   \tv-for=\"(organization, index) in items\" \n\t\t          v-memo=\"[organization._id, organization.profile.name]\"\n\t\t\t\t\t    :organization=\"organization\"\n\t\t\t\t\t    :showRating=\"true\"\n\t\t\t\t\t    :showFollowers=\"true\"\n\t\t\t\t\t    :showProducts=\"false\"\n\t\t\t\t\t    class=\"bg-light mn-b-thin w-100 o-hidden radius-big pd-medium\"\n\t\t\t\t\t  />\n\t\t      </Feed>\n\t\t\t</transition>\n\t\t</div>\n\t</div>\n</template>\n\n<script setup>\n\timport { watch, ref } from 'vue'\n\timport { useRoute, useRouter } from 'vue-router'\n\t// Components\n\timport Tab from '@martyrs/src/components/Tab/Tab.vue'\n\timport Feed from '@martyrs/src/components/Feed/Feed.vue'\n\n\timport * as auth from '@martyrs/src/modules/auth/views/store/auth.js';\n\timport * as organizations from '@martyrs/src/modules/organizations/store/organizations.js';\n\n\timport Card from '@martyrs/src/modules/globals/views/components/blocks/Card.vue';\n\timport CardOrganization from '@martyrs/src/modules/organizations/components/blocks/CardOrganization.vue'\n\n\t// Accessing router\n\tconst route = useRoute()\n\tconst router = useRouter()\n\t// State\n\tlet tab = route.query.tab ? route.query.tab : 'owner';\n\n\tconst tabOrganization = ref(tab)\n\n\troute.query.tab = tabOrganization.value\n\n\twatch(tabOrganization, (newValue) => {\n\t  router.replace({ query: { ...route.query, tab: newValue } });\n\t});\n</script>",
                "name": "Organizations.vue",
                "size": 3075,
                "type": "source"
              }
            ]
          },
          "sections": {
            "_files": [
              {
                "path": "../../src/modules/organizations/components/sections/DetailsTabSection.vue",
                "relativePath": "modules/organizations/components/sections/DetailsTabSection.vue",
                "extension": ".vue",
                "content": "<template>\n\t<section class=\"flex-center flex flex-column t-center pd-medium radius-medium bg-light\">\n\n\t\t<Dropdown \n\t\t\tv-if=\"user._id !== organization.owner\"\n\t\t\t:label=\"{ component: IconEllipsis, class: 'i-regular t-transp' }\"\n\t\t\t:align=\"'right'\"\n\t\t\tclass=\"cursor-pointer pos-absolute pos-r-regular pos-t-regular pd-thin radius-extra \"\n\t\t>\n\t\t\t<section \n\t\t\t\tclass=\"bg-black pd-thin radius-small\"\n\t\t\t>\n\t\t\t\t<FormReport \n\t\t\t\t\t:user=\"user._id\"\n\t\t\t\t\t:type=\"'organization'\" \n\t\t\t\t\t:target=\"organization._id\" \n\t\t\t\t\t:text=\"'Report'\" \n\t\t\t\t\tclass=\"w-100\"\n\t\t\t\t>\n\t\t\t\t\t<button \n\t\t\t\t\t\tclass=\"w-100 bg-black br-solid br-1px br-white-transp-20 t-white button-small button\"\n\t\t\t\t\t>\n\t\t\t\t\t\tReport\n\t\t\t\t\t</button>\n\t\t\t\t</FormReport>\n\n\t\t\t\t<ButtonToggleMembership\n\t\t\t\t\tv-if=\"user._id && user._id !== organization.owner\"\n\t\t      :user=\"user._id\"\n\t\t      :type=\"'organization'\" \n\t      \t:role=\"'blocked'\" \n\t\t      :target=\"organization._id\" \n\t\t      :status=\"organization.isBlocked\" \n\t\t      :text=\"{create: 'Block', remove: 'Unblock'}\"\n\t\t      @updateMembership=\"event => handleMembershipUpdate(event, 'isBlocked')\"\n\t\t       class=\"t-white w-100 mn-t-thin bg-red\" \n\t    \t/>\n\t\t\t</section>\n    </Dropdown>\n\n   <router-link\n\t\t\tv-if=\"user._id === organization.owner\"\n      :to=\"{\n\t\t\t\tname: 'Organization Edit', \n\t\t\t\tparams: {\n\t\t\t\t\t_id: organization._id\n\t\t\t\t}\n\t\t\t}\" \n      class=\"\n      \tz-index-2\n        cursor-pointer \n        pos-absolute pos-t-regular pos-r-regular\n        radius-extra pd-thin bg-second\n      \"\n    >\n      <IconEdit\n        class=\"i-regular\"\n        classes=\"fill-white\"\n      />\n    </router-link>\n\n\n\t\t<img loading=\"lazy\" \n\t\t\tv-if=\"organization.profile.photo\" \n\t\t\t:src=\"(FILE_SERVER_URL || '') + organization.profile.photo\" \n\t\t\tclass=\"radius-big bg-light flex-center flex mn-b-small w-8r\" \n\t\t/>\n\n\t\t<PlaceholderOrganizationPic\n\t\t\tv-else\n\t\t\tclass=\"radius-medium mn-b-small i-extra\"\n\t\t/>\n\n    <h1\n    \tclass=\"mn-b-thin\"\n    >\n  \t\t{{ organization.profile.name }}\n  \t</h1>\n\n   \t<div class=\"flex-center  pd-r-thin pd-l-thin flex-nowrap flex mn-t-thin bg-white radius-extra w-max\">\n   \t\t<IconFollowing class=\"i-medium mn-r-micro t-transp\"/>\n\n      <p class=\"mn-t-thin p-medium t-medium uppercase mn-b-thin\">{{organization.numberOfSubscribers}} followers</p>\n\n      <ButtonToggleMembership\n        v-if=\"\n\t      \tuser._id \n\t      \t&& route.params._id \n\t      \t&& route.params._id !== user._id\n\t      \t&& organization.owner !== user._id\n\t      \"\n        :user=\"user._id\"\n        :type=\"'organization'\" \n        :role=\"'subscriber'\" \n        :target=\"organization._id\" \n        :status=\"organization.isSubscriber\" \n        :text=\"{create: '+', remove: '-'}\"\n        @updateMembership=\"event => handleMembershipUpdate(event, 'isSubscriber', 'numberOfSubscribers')\"\n        class=\" mn-l-thin p-medium t-medium radius-extra i-semi\" \n      />\n    </div>\n\n    <p class=\"w-max-50r mn-t-regular mn-b-medium p-big\">\n   \t\t<Text :text=\"organization.profile.description || ''\" :showToggleText=\"true\" :maxLen=\"320\" />\n  \t</p>  \n\n  \t<Chips \n    \tv-if=\"organization.profile?.tags?.length > 0\" \n    \t:chips=\"organization.profile.tags\"\n    \tclass=\"p-medium\"\n   \t/>\n\n\n    <h4 \n    \tv-if=\"Object.values(organization.socials).some(value => value)\" \n    \tclass=\"mn-t-small mn-b-thin\"\n    >\n  \t\tFind us in socials\n  \t</h4>\n  \t\n   \t<Socials \n   \t\t:telegram=\"organization.socials.telegram\"\n   \t\t:facebook=\"organization.socials.facebook\"\n   \t\t:instagram=\"organization.socials.instagram\"\n   \t\t:twitter=\"organization.socials.twitter\"\n   \t\t:youtube=\"organization.socials.youtube\"\n   \t/>\n   \t<slot></slot>\n\t</section>\n\n<!-- <h3 class=\"mn-b-small\">Rating</h3>\n\t<Rating \n\t\t:rating=\"organization.rating.median\" \n\t\t:amount=\"organization.rating.amount\"\n\t\tclass=\"pd-medium mn-b-thin radius-big bg-light\"\n\t/>\n\n\t<h3 class=\"mn-b-small\">Contacts</h3>\n  <Contacts\n    :website=\"organization.contacts.website\"\n    :phone=\"organization.contacts.phone\"\n    :email=\"organization.contacts.email\"\n    :address=\"organization.contacts.address\"\n    class=\"w-100 pd-medium radius-big bg-light\"\n  /> -->\n\n\n</template>\n\n<script setup>\n\timport { ref, computed } from 'vue'\n\timport { useRoute, useRouter } from 'vue-router'\n\t// Import components\n\timport Dropdown from \"@martyrs/src/components/Dropdown/Dropdown.vue\";\n\timport Text  \t\tfrom '@martyrs/src/components/Text/Text.vue'\n\timport Chips  from '@martyrs/src/components/Chips/Chips.vue'\n\t// Icons\n\timport IconFollowing from '@martyrs/src/modules/icons/entities/IconFollowing.vue'\n\timport IconEdit from '@martyrs/src/modules/icons/navigation/IconEdit.vue'\n\timport IconEllipsis from '@martyrs/src/modules/icons/navigation/IconEllipsis.vue'\n\timport PlaceholderOrganizationPic from '@martyrs/src/modules/icons/placeholders/PlaceholderOrganizationPic.vue'\n\t// Org Module\n\timport ButtonToggleMembership from '@martyrs/src/modules/organizations/components/elements/ButtonToggleMembership.vue'\n\timport Contacts from '@martyrs/src/modules/organizations/components/blocks/Contacts.vue'\n\timport Rating from '@martyrs/src/modules/organizations/components/blocks/Rating.vue'\n\timport Socials from '@martyrs/src/modules/organizations/components/blocks/Socials.vue'\n\t// Report Module\n\timport FormReport from '@martyrs/src/modules/reports/components/sections/FormReport.vue' \n\t// Store \n\timport * as organizations \tfrom '@martyrs/src/modules/organizations/store/organizations.js'\n\timport * as memberships \tfrom '@martyrs/src/modules/organizations/store/memberships.js'\n\t// ///////////////////////////////////////\n \t// Components Props\n \t// ///////////////////////////////////////\n\tconst props = defineProps({\n\t\torganization: Object,\n\t\tuser: Object\n\t})\n\t// Store\n\tconst route = useRoute()\n\t\n\t// Methods\n\tconst handleMembershipUpdate = ({ membership, status, target }, statusName, statusNumber) => {\n\t  memberships.mutations.handleMembershipUpdate(organizations.state.current, membership, status, target, statusName, statusNumber)\n\t};\n</script>\n\n<style lang=\"scss\">\n\n</style>",
                "name": "DetailsTabSection.vue",
                "size": 5937,
                "type": "source"
              },
              {
                "path": "../../src/modules/organizations/components/sections/Documents.vue",
                "relativePath": "modules/organizations/components/sections/Documents.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"documents\">\n    <h3 class=\"mn-b-small\">Список документов</h3>\n    \n    <div class=\"mn-b-big cols-4\">\n\t      <div  \n\t      \tv-for=\"(doc, index) in documents\" :key=\"index\" \n\t      \t@click=\"openPopup(index)\" \n\t      \tclass=\"h-100 pd-medium bg-white radius-small\">\n\t      \t<h3 class=\"mn-b-small\">{{ doc.name }}</h3>\n\t      \t<p class=\"t-semi t-transp radius-small\">{{ doc.status }}</p>\n\t      </div>\n\t  </div>\n\n   <Popup title=\"Добавить документ\" @close-popup=\"closePopup\" :isPopupOpen=\"showPopup\">\n\n    <div v-for=\"input in documents[currentIndex].inputs\" :key=\"input.name\">\n      <Field\n      \tv-model:field=\"input.value\" \t\t\n      \t:label=\"input.name\"\n        :_id=\"input.name\" \n        :placeholder=\"input.name\" \n        class=\"w-100\"\n      />\n    </div>\n    <button @click=\"submitData\" class=\"w-100 mn-b-small button \">Отправить на верификацию</button>\n\n\t\t</Popup>\n\n  </div>\n</template>\n\n<script setup>\nimport { ref, watchEffect } from 'vue';\n\nimport { useRoute, useRouter } from 'vue-router'\nimport Field  \tfrom '@martyrs/src/components/Field/Field.vue'\nimport Select  \tfrom '@martyrs/src/components/Popup/Popup.vue'\nimport Button  \tfrom '@martyrs/src/components/Button/Button.vue'\n// const props = defineProps({\n//   documents: {\n//     type: Array,\n//     required: true,\n//   },\n// });\n\n\nconst router \t= useRouter()\nconst route \t= useRoute()\n\nlet documents = [{\n\tname: 'Паспорт',\n\tstatus: 'Не добавлен',\n\tinputs: [{\n\t\ttype: 'text',\n\t\tname: 'Номер и серия'\n\t},{\n\t\ttype: 'text',\n\t\tname: 'Место выдачи'\n\t},{\n\t\ttype: 'text',\n\t\tname: 'Дата выдачи'\n\t}]\n},{\n\tname: 'ИНН',\n\tstatus: 'Не добавлен',\n\tinputs: [{\n\t\ttype: 'text',\n\t\tname: 'Дата регистрации'\n\t}]\n},{\n\tname: 'СНИЛС',\n\tstatus: 'Не добавлен',\n\tinputs: [{\n\t\ttype: 'text',\n\t\tname: 'Дата регистрации'\n\t}]\n},{\n\tname: 'Военный билет',\n\tstatus: 'Не добавлен',\n\tinputs: [{\n\t\ttype: 'text',\n\t\tname: 'Дата регистрации'\n\t}]\n}]\n\nconst showPopup = ref(false);\nconst currentIndex = ref(null);\n\nconst openPopup = (index) => {\n  currentIndex.value = index;\n  showPopup.value = true;\n};\n\nconst closePopup = () => {\n  showPopup.value = false;\n};\n\nconst handleFileUpload = (e) => {\n  const files = e.target.files;\n  // Handle file uploads as needed\n};\n\nconst submitData = () => {\n  // Handle submission of the data and update the document status\n  closePopup();\n};\n\nwatchEffect(() => {\n  // Do any necessary updates when the documents prop changes\n});\n\nasync function onSubmit() {\n  // await Store.auth.login(Store.auth.state.user)\n}\n\nfunction redirectTo () {\n\trouter.push({ name: 'Create Organization People'})\n\t// Store.auth.toggleSignInPopup()\n}\n</script>\n\n<style scoped>\n.documents {\n  display: flex;\n  flex-direction: column;\n}\n\n.popup {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: white;\n  border: 1px solid #ccc;\n  padding: 20px;\n  z-index: 10;\n}\n</style>",
                "name": "Documents.vue",
                "size": 2876,
                "type": "source"
              },
              {
                "path": "../../src/modules/organizations/components/sections/MembersAdd.vue",
                "relativePath": "modules/organizations/components/sections/MembersAdd.vue",
                "extension": ".vue",
                "content": "<template>\n  <div>\n    <p class=\"mn-b-thin t-transp p-medium\">{{text}}</p> \n\n    <div class=\"mn-b-thin pos-relative\">\n      <BlockSearch \n        v-click-outside=\"() => {searchUserShow = false}\" \n        @search=\"(event) => { searchUser = event; searchUserShow = true }\"\n        placeholder=\"Enter name, phone or email\"\n        class=\"bg-grey\"\n      />\n\n      <div \n        v-if=\"searchUser && searchUserShow\" \n        class=\"mn-t-thin pos-absolute w-100 pos-t-100 pos-l-0 z-index-3 bg-light pd-small radius-small\n      \">\n        <Feed\n          :states=\"{\n            empty: {\n              title: 'No User Found',\n              description: 'Currently, there are no such user.'\n            }\n          }\"\n          :store=\"{\n            read: (options) => users.actions.read(options),\n            state: null\n          }\"\n          :options=\"{\n            search: searchUser\n          }\"\n          :showLoadMore=\"false\"\n          v-slot=\"{ \n            items \n          }\"\n          class=\"h-max-20r o-scroll\"\n        >\n          <CardUser\n            v-for=\"(user, index) in items\" :key=\"user._id\"\n            :user=\"user\"\n            :photo=\"user.profile.photo\"\n            :name=\"user.profile.name || user.phone || user.email\"\n            @click=\"() => { \n              members.push({contact: user.email || user.phone})\n              searchUserShow = false\n            }\"\n            class=\"bg-white h-2r pd-thin radius-medium w-100 mn-b-thin\"\n          />\n        </Feed>\n      </div>\n    </div>\n\n    <section class=\"cols-1 mn-b-small radius-medium pd-semi bg-light pos-relative\">\n\n      <div\n        v-for=\"(member, index) in members\" \n        :key=\"index\" \n        class=\"\n          br-1px br-solid br-grey-transp-25\n          flex\n          gap-thin\n          radius-small\n          mn-b-thin\n        \"\n      >\n        <Field \n          v-model:field=\"member.contact\"   \n          placeholder=\"Enter email or phone\" \n          class=\"w-100 pd-small radius-small bg-white\"\n          :validation=\"contactValidation\"\n        >\n          <div \n            v-if=\"index < 1\" \n            @click=\"() => members.push({contact: ''})\"  \n            class=\"radius-small h-100 i-big flex-center flex aspect-1x1 bg-green\"\n          >\n            <IconAdd \n              class=\"i-medium\"\n              :fill=\"'rgb(var(--white)'\"\n            />\n          </div>\n\n          <div \n            v-else \n            @click=\"() => members.splice(index, 1)\" \n            class=\"radius-small h-100 i-big flex-center flex aspect-1x1 bg-red\"\n          >\n            <IconDelete \n              class=\"i-medium\"\n              :fill=\"'rgb(var(--white)'\"\n            />\n          </div>\n        </Field>\n      </div>\n    </section>\n\n\n      <Button  \n        :submit=\"submitMembers\" \n        class=\"w-100 bg-main\">\n        <span>Invite to organization</span>\n      </Button>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue';\n\n  import Field    from '@martyrs/src/components/Field/Field.vue'\n  import Select   from '@martyrs/src/components/Select/Select.vue'\n  import Button   from '@martyrs/src/components/Button/Button.vue'\n  import Feed from '@martyrs/src/components/Feed/Feed.vue'\n\n  import BlockSearch from '@martyrs/src/modules/globals/views/components/blocks/BlockSearch.vue'\n\n  import CardUser from '@martyrs/src/modules/auth/views/components/blocks/CardUser.vue'\n\n  import IconDelete from '@martyrs/src/modules/icons/navigation/IconDelete.vue';\n  import IconAdd from '@martyrs/src/modules/icons/navigation/IconAdd.vue';\n  // Import validation\n  import * as inputsValidation from '@martyrs/src/modules/auth/views/validations/inputs.validation'\n  // Store\n  import * as users from '@martyrs/src/modules/auth/views/store/users.js';\n  // Props\n  const props = defineProps({\n    organization: Object,\n    text: String,\n  });\n  // User Search\n  let searchUser = ref(null)\n  let searchUserShow = ref(false)\n  // Validation\n  const contactValidation = ref(null)\n  // Define Emits\n  const emits = defineEmits(['send-invite']);\n  // Define State\n  const members = ref([{ contact: ''}]);\n\n  async function submitMembers() {\n    return new Promise((resolve, reject) => {\n      emits('send-invite', members.value, resolve, reject);\n    });\n  }\n</script>",
                "name": "MembersAdd.vue",
                "size": 4244,
                "type": "source"
              },
              {
                "path": "../../src/modules/organizations/components/sections/Organizations.vue",
                "relativePath": "modules/organizations/components/sections/Organizations.vue",
                "extension": ".vue",
                "content": "<template>\n\t<div class=\"for-transition bg-white radius-big w-100\">\n\t\t<div class=\"\">\n\t\t\t <EmptyState \n        v-if=\"organizations < 1\"\n        title=\"You Haven't Joined Any Organization Yet\"\n        description=\"Weeder is all about community. Join an organization or maybe you want to create your own?\"\n        action=\"Create organization\"\n        :callback=\"a = () => $router.push(`/app/organization/create/details`)\"\n      />\n\n      <div v-else class=\"cols-1\">\n      \t<CardOrganization \n\t    \t\t\t v-for=\"organization in organizations\" \n\t\t      \t:key=\"organization._id\"\n\t\t      \t:organization=\"organization\"\n\t\t      \t:user=\"auth.state.user\"\n\t\t\t\t\t\t@updateMembership=\"handleMembershipUpdate\"\n\t\t\t\t\t\tclass=\"w-100\"\n\t\t\t\t\t\t:class=\"{'mn-r-small': index !== organizations.length - 1}\"\n\t\t    />\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script setup>\n\timport { computed,reactive,ref, onMounted,watch  } from 'vue'\n\timport { useRoute, useRouter } from 'vue-router'\n\t// Import dependencies\n\timport Cookies from 'js-cookie'\n\t// Import components\n\t// Global\n\timport Tab  \t\tfrom '@martyrs/src/components/Tab/Tab.vue'\n\timport Field  \tfrom '@martyrs/src/components/Field/Field.vue'\n\timport Select  \tfrom '@martyrs/src/components/Select/Select.vue'\n\timport Button  \tfrom '@martyrs/src/components/Button/Button.vue'\n\t// Local\n\timport CardOrganization from '@martyrs/src/modules/organizations/components/blocks/CardOrganization.vue'\n\t// Blocks\n\timport EmptyState \t\tfrom '@martyrs/src/modules/organizations/components/blocks/EmptyState.vue'\n\timport Unit   \tfrom '@martyrs/src/modules/organizations/components/sections/Unit.vue'\n\t// Import state\n\timport * as auth from '@martyrs/src/modules/auth/views/store/auth.js'\n\timport * as organization from '@martyrs/src/modules/organizations/store/organizations.js'\n\timport * as memberships from '@martyrs/src/modules/organizations/store/memberships.js'\n\n\tconst props = defineProps({\n    owner: {\n      type: String,\n      default: null\n    },\n    user: {\n      type: [String, Number],\n      default: null\n    },\n    onlyuser: {\n      type: [String, Number],\n      default: null\n    }\n  });\n\n\tconst organizations = ref(null)\n\n\torganizations.value = await organization.actions.read({owner: props.owner, user: props.user, onlyuser: props.onlyuser });\n\t// Init router\n\tconst router \t= useRouter()\n\tconst route \t= useRoute()\n\t// Accesing state\n\t// console.log(route.query.tab)\n\tlet tab = route.query.tab ? route.query.tab : 'details';\n\n\tconst tabOrganization = ref(tab)\n\n\troute.query.tab = tabOrganization.value\n\n\twatch(tabOrganization, (newValue) => {\n\t  router.replace({ query: { ...route.query, tab: newValue } });\n\t});\n</script>\n\n<style lang=\"scss\">\n\t.slide-fade-enter-active {\n\t\t// min-height: 100vh;\n\t  transition: all  0.3s cubic-bezier(0.4, 0, 0.2, 1);\n\t}\n\n\t.slide-fade-leave-active {\n\t\t// min-height: 100vh;\n\t  transition: all  0.3s cubic-bezier(0.4, 0, 0.2, 1);\n\t}\n\n\t.slide-fade-enter-from,\n\t.slide-fade-leave-to {\n\t\tmin-height: 0;\n\t\tposition: absolute;\n\t  transform: translateX(20px);\n\t  opacity: 0;\n\t  left: 0;\n\t  top: 0;\n\t}\n\n</style>\n",
                "name": "Organizations.vue",
                "size": 3061,
                "type": "source"
              },
              {
                "path": "../../src/modules/organizations/components/sections/Publics.vue",
                "relativePath": "modules/organizations/components/sections/Publics.vue",
                "extension": ".vue",
                "content": "<template>\n\t<div class=\"w-100 o-scroll\">\n\t\t<EmptyState \n      \t\tv-if=\"!publics || publics.length < 1\"\n      \t\ttitle=\"Unfortunately, we couldn't find any recommendations for you\"\n      \t\tdescription=\"Explore and find a community or organization that suits your interests.\"\n      \t\tclass=\"radius-big bg-light pd-medium\"\n    \t/>\n    \t\n\t    <div v-else class=\"w-max gap-thin flex-nowrap flex\">\n\t    \t<CardOrganization \n\t    \t\tv-if=\"publics\"\n\t        \tv-for=\"(organization,index) in publics\" \n\t        \t:key=\"organization._id\" \n\t\t      \t:organization=\"organization\"\n\t\t      \t:user=\"auth.state.user\"\n\t\t\t\t\t\t@updateMembership=\"event => handleMembershipUpdate(event, 'isSubscriber', 'numberOfSubscribers')\"\n\t\t\t\t\t\tclass=\"w-max-20r radius-big\"\n\t\t    />\n\t\t</div>\n\t</div>\n</template>\n\n<script setup>\n\timport { onMounted, ref } from 'vue'\n\timport CardOrganization from '@martyrs/src/modules/organizations/components/blocks/CardOrganization.vue'\n\timport EmptyState from '@martyrs/src/components/EmptyState/EmptyState.vue'\n\t\n\timport * as auth from '@martyrs/src/modules/auth/views/store/auth.js'\n\timport * as organization from '@martyrs/src/modules/organizations/store/organizations.js'\n\timport * as memberships from '@martyrs/src/modules/organizations/store/memberships.js'\n\n\tlet publics = ref(null)\n\n\tonMounted(async () => {\n\t\tpublics.value = await organization.actions.read({\n\t\t\tuser: auth.state.user._id,\n\t\t\tsortParam: \"profile.tags\",\n\t\t\tlimit: 10,\n\t\t});\n\t});\n\n\t// Methods\n\tconst handleMembershipUpdate = ({ membership, status, target }, statusName, statusNumber) => {\n\t  memberships.mutations.handleMembershipUpdate(publics.value, membership, status, target, statusName, statusNumber)\n\t};\n</script>\n\n<style lang=\"scss\">\n\t.slide-fade-enter-active {\n\t\t// min-height: 100vh;\n\t  transition: all  0.3s cubic-bezier(0.4, 0, 0.2, 1);\n\t}\n\n\t.slide-fade-leave-active {\n\t\t// min-height: 100vh;\n\t  transition: all  0.3s cubic-bezier(0.4, 0, 0.2, 1);\n\t}\n\n\t.slide-fade-enter-from,\n\t.slide-fade-leave-to {\n\t\tmin-height: 0;\n\t\tposition: absolute;\n\t  transform: translateX(20px);\n\t  opacity: 0;\n\t  left: 0;\n\t  top: 0;\n\t}\n\n</style>\n",
                "name": "Publics.vue",
                "size": 2102,
                "type": "source"
              },
              {
                "path": "../../src/modules/organizations/components/sections/Unit.vue",
                "relativePath": "modules/organizations/components/sections/Unit.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"bg-white o-hidden radius-small pd-medium\">\n    <div class=\"mn-b-small\">\n      <h5 class=\"mn-b-small\">Название отдела:</h5>\n      <input type=\"text\" class=\"h3\" v-model=\"unit.name\" />\n\n    </div>\n    <hr class=\"mn-b-small\">\n    <div class=\"mn-b-small\">\n      <h5 class=\"mn-b-small\">Команда: </h5>\n\n      <ul class=\"mn-b-thin\">\n        <li v-if=\"unit.participants.length < 1\">В отделе еще нет участников</li>\n        <li v-for=\"(participant, index) in unit.participants\" :key=\"index\" class=\"mn-b-thin flex-v-center flex-nowrap flex\">\n          <p class=\"mn-r-small\">{{ participant }}</p>\n          <button @click=\"removeParticipant(index)\" class=\"button-small button\">x</button>\n        </li>\n      </ul>\n\n      <button @click=\"addParticipant\" class=\"button-small button\">Добавить</button>\n    </div>\n\n     <hr class=\"mn-b-small\">\n         <h5 class=\"mn-b-small\">Подотделы:</h5>\n    <div class=\" o-hidden mn-b-small radius-small subunit\" v-for=\"(subunit, index) in unit.subunits\" :key=\"index\">\n\n\n      <Unit  :unit=\"subunit\" @removeUnit=\"removeSubunit(index)\" @addParticipant=\"addParticipantToSubunit(index, $event)\" @addSubunit=\"addSubunitToSubunit(index)\"/>\n    \n\n    </div>\n    <button @click=\"addSubunit\" class=\"button-small mn-b-small button\">Добавить отдел</button>\n\n      <hr class=\"mn-b-small\">\n\n     <button @click=\"emitRemoveUnit\" class=\"w-100 br-dark bg-transp button-small button\">Удалить отдел</button>\n\n    \n  \n  </div>\n</template>\n\n<script setup>\nimport Unit   from '@martyrs/src/modules/organizations/components/sections/Unit.vue'\n\nconst props = defineProps({\n  unit: Object,\n});\n\nconst emits = defineEmits(['removeUnit', 'addParticipant', 'addSubunit']);\n\nfunction addParticipant(index) {\n  const participant = prompt('Enter participant name:');\n\n  if (participant) {\n    emits('addParticipant',participant)\n  }\n}\n\nfunction removeParticipant(index) {\n  props.unit.participants.splice(index, 1);\n}\n\nfunction addSubunit(index) {\n  emits('addSubunit',index);\n}\n\nfunction emitRemoveUnit(index) {\n  emits('removeUnit',index)\n}\n\nfunction removeSubunit(index) {\n  props.unit.subunits.splice(index, 1);\n}\n\nfunction addParticipantToSubunit(subunitIndex, participant) {\n  props.unit.subunits[subunitIndex].participants.push(participant);\n}\n\nfunction addSubunitToSubunit(subunitIndex) {\n  props.unit.subunits[subunitIndex].subunits.push({\n    name: 'Безымянный подотдел',\n    participants: [],\n    subunits: [],\n  });\n}\n\n</script>\n\n<style scoped>\n.subunit {\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  margin-top: 1rem;\n}\n</style>",
                "name": "Unit.vue",
                "size": 2556,
                "type": "source"
              }
            ]
          }
        }
      },
      "pages": {
        "controllers": {
          "factories": {
            "_files": [
              {
                "path": "../../src/modules/pages/controllers/factories/pages.factory.js",
                "relativePath": "modules/pages/controllers/factories/pages.factory.js",
                "extension": ".js",
                "content": "const createPageController = db => {\n  const Page = db.page;\n  async function populateChildrenRecursively(page) {\n    await page.populate('children');\n    for (let child of page.children) {\n      await populateChildrenRecursively(child);\n    }\n  }\n  const create = async (req, res) => {\n    try {\n      const page = await Page.create(req.body);\n      if (!page) {\n        return res.status(404).send({ message: 'Something wrong when creating page.' });\n      }\n      if (req.body.parent) {\n        const parentPage = await Page.findById(req.body.parent);\n        if (parentPage) {\n          if (!parentPage.children) {\n            parentPage.children = [];\n          }\n          parentPage.children.push(page._id);\n          await parentPage.save();\n        } else {\n          console.warn(`Parent page with id ${req.body.parent} not found.`);\n        }\n      }\n      res.status(200).send(page);\n    } catch (err) {\n      res.status(500).send({ message: err.message });\n    }\n  };\n  const read = async (req, res) => {\n    try {\n      const { url } = req.query;\n      if (url) {\n        // Fetch a single page\n        const page = await Page.findOne({ url }).populate('parent');\n        if (!page) {\n          return res.status(404).json({ message: 'Page not found' });\n        }\n        await populateChildrenRecursively(page);\n        res.status(200).send(page);\n      } else {\n        // Fetch all pages\n        const topLevelPages = await Page.find({ parent: null });\n        for (let page of topLevelPages) {\n          await populateChildrenRecursively(page);\n        }\n        res.json(topLevelPages);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      res.status(500).json({ message: 'Server error' });\n    }\n  };\n  const update = async (req, res) => {\n    try {\n      const page = await Page.findOneAndUpdate({ _id: req.body._id }, req.body);\n      if (!page) {\n        return res.status(404).send({ message: 'Page not found.' });\n      }\n      res.status(200).send(page);\n    } catch (err) {\n      res.status(500).send({ message: err.message });\n    }\n  };\n  const deletePage = async (req, res) => {\n    try {\n      const page = await Page.findOneAndDelete({ _id: req.body._id });\n      if (!page) {\n        return res.status(404).send({ message: 'Something wrong when deleting page.' });\n      }\n      res.status(200).send(page);\n    } catch (err) {\n      res.status(500).send({ message: err.message });\n    }\n  };\n  return {\n    create,\n    read,\n    update,\n    delete: deletePage,\n  };\n};\nexport default createPageController;\n",
                "name": "pages.factory.js",
                "size": 2561,
                "type": "source"
              }
            ]
          },
          "routes": {
            "_files": [
              {
                "path": "../../src/modules/pages/controllers/routes/pages.routes.js",
                "relativePath": "modules/pages/controllers/routes/pages.routes.js",
                "extension": ".js",
                "content": "import controllerFactory from '../factories/pages.factory.js';\nexport default (function (app, db, origins, publicPath) {\n  const controller = controllerFactory(db);\n  app.get('/api/pages/read', controller.read);\n  app.post('/api/pages/create', controller.create);\n  app.put('/api/pages/update', controller.update);\n  app.delete('/api/pages/delete', controller.delete);\n});\n",
                "name": "pages.routes.js",
                "size": 373,
                "type": "source"
              }
            ]
          }
        },
        "models": {
          "_files": [
            {
              "path": "../../src/modules/pages/models/page.model.js",
              "relativePath": "modules/pages/models/page.model.js",
              "extension": ".js",
              "content": "export default db => {\n  const PageSchema = new db.mongoose.Schema(\n    {\n      name: { type: Object },\n      url: { type: String },\n      groups: { type: Array },\n      content: { type: [Object, Array] },\n      parent: {\n        type: db.mongoose.Schema.Types.ObjectId,\n        ref: 'Page',\n      },\n      children: [\n        {\n          type: db.mongoose.Schema.Types.ObjectId,\n          ref: 'Page',\n        },\n      ],\n    },\n    {\n      timestamps: { currentTime: () => Date.now() },\n    }\n  );\n  const Page = db.mongoose.model('Page', PageSchema);\n  return Page;\n};\n",
              "name": "page.model.js",
              "size": 572,
              "type": "source"
            }
          ]
        },
        "_files": [
          {
            "path": "../../src/modules/pages/pages.client.js",
            "relativePath": "modules/pages/pages.client.js",
            "extension": ".js",
            "content": "// Store\nimport * as storePages from './views/store/pages.js';\n// Router\nimport routerPagesBackoffice from './views/router/pages.backoffice.router.js';\nimport routerPages from './views/router/pages.router.js';\n// Views\nimport Page from './views/components/pages/Page.vue';\nimport PageEdit from './views/components/pages/PageEdit.vue';\nimport Pages from './views/components/pages/Pages.vue';\n\n// Пример функции инициализации для модуля страниц\nfunction initializePages(app, store, router, options = {}) {\n  const routeHome = options.route?.home || 'Home';\n  const routeBO = options.route?.backoffice || 'Backoffice Root';\n\n  router.addRoute(routeHome, routerPages);\n  router.addRoute(routeBO, routerPagesBackoffice);\n\n  store.addStore('pages', storePages);\n}\n\nconst ModulePages = {\n  initialize: initializePages,\n  views: {\n    store: {\n      storePages,\n    },\n    router: {\n      routerPages,\n    },\n    components: {\n      // Pages\n      Pages,\n      Page,\n      PageEdit,\n    },\n  },\n};\n\nexport default ModulePages;\n",
            "name": "pages.client.js",
            "size": 1019,
            "type": "source"
          },
          {
            "path": "../../src/modules/pages/pages.server.js",
            "relativePath": "modules/pages/pages.server.js",
            "extension": ".js",
            "content": "import FactoryPage from './controllers/factories/pages.factory.js';\nimport RoutesPage from './controllers/routes/pages.routes.js';\nimport ModelPage from './models/page.model.js';\nfunction initializePages(app, db, origins, publicPath) {\n  // Setup models in the database object\n  db.page = ModelPage(db);\n  // Setup routes if the app object is provided\n  if (app) {\n    RoutesPage(app, db, origins, publicPath);\n  }\n}\nexport const models = {\n  ModelPage,\n};\nexport const routes = {\n  RoutesPage,\n};\nexport const controllers = {\n  FactoryPage,\n};\nexport { initializePages as initialize };\nexport default {\n  initialize: initializePages,\n  models,\n  routes,\n  controllers,\n};\n",
            "name": "pages.server.js",
            "size": 673,
            "type": "source"
          }
        ],
        "views": {
          "router": {
            "_files": [
              {
                "path": "../../src/modules/pages/views/router/pages.backoffice.router.js",
                "relativePath": "modules/pages/views/router/pages.backoffice.router.js",
                "extension": ".js",
                "content": "import Sidebar from '@martyrs/src/modules/backoffice/components/partials/Sidebar.vue';\n\nimport SidebarPages from '../components/partials/SidebarPages.vue';\n\nconst pages = {\n  path: 'pages',\n  meta: {\n    title: {\n      en: 'Pages',\n    },\n    sidebar: Sidebar,\n  },\n  children: [\n    {\n      path: '',\n      name: 'Backoffice Pages',\n      component: () => import(/* webpackChunkName: 'Pages' */ '../components/pages/Pages.vue'),\n    },\n    {\n      path: 'add',\n      name: 'Backoffice Pages Add',\n      meta: {\n        title: {\n          en: 'New Page',\n        },\n        sidebar: SidebarPages,\n      },\n      component: () => import(/* webpackChunkName: 'Pages' */ '../components/pages/PageEdit.vue'),\n    },\n    {\n      path: ':url+',\n      name: 'Backoffice Pages Edit',\n      meta: {\n        title: {\n          en: 'Edit Page',\n        },\n        sidebar: SidebarPages,\n      },\n      component: () => import(/* webpackChunkName: 'Pages' */ '../components/pages/PageEdit.vue'),\n    },\n  ],\n};\n\nexport default pages;\n",
                "name": "pages.backoffice.router.js",
                "size": 1022,
                "type": "source"
              },
              {
                "path": "../../src/modules/pages/views/router/pages.router.js",
                "relativePath": "modules/pages/views/router/pages.router.js",
                "extension": ".js",
                "content": "import layoutEmpty from '@martyrs/src/modules/globals/views/components/layouts/Empty.vue';\n\nconst pages = {\n  path: 'pages',\n  component: layoutEmpty,\n  meta: {\n    title: {\n      en: 'Pages',\n      ru: 'Информация',\n    },\n  },\n  children: [\n    {\n      path: ':url+',\n      name: 'Page',\n      meta: {\n        title: {\n          en: 'Page',\n          ru: 'Страница',\n        },\n      },\n      component: () => import(/* webpackChunkName: 'Page' */ '../components/pages/Page.vue'),\n    },\n  ],\n};\n\nexport default pages;\n",
                "name": "pages.router.js",
                "size": 521,
                "type": "source"
              }
            ]
          },
          "store": {
            "_files": [
              {
                "path": "../../src/modules/pages/views/store/pages.js",
                "relativePath": "modules/pages/views/store/pages.js",
                "extension": ".js",
                "content": "import { setError } from '@martyrs/src/modules/globals/views/store/globals.js';\nimport { reactive, watch } from 'vue';\n\nimport $axios from '@martyrs/src/modules/globals/views/utils/axios-instance.js';\n\nconst state = reactive({\n  all: [],\n  current: {\n    name: '',\n    localization: [],\n    groups: [],\n    url: '',\n    content: [],\n  },\n});\n\nconst actions = {\n  async create(page) {\n    try {\n      const response = await $axios.post(`/api/pages/create`, page);\n\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n\n  async read(options = {}) {\n    try {\n      const response = await $axios.get('/api/pages/read', { params: options });\n\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n\n  async update(page) {\n    try {\n      const response = await $axios.put(`/api/pages/update`, page);\n\n      state.current = response.data;\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n\n  async delete(page) {\n    try {\n      const response = await $axios.delete(`/api/pages/delete`, {\n        data: page,\n      });\n\n      state.all.splice(\n        state.all.findIndex(p => p._id == page),\n        1\n      );\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n};\n\nconst history = [];\nhistory.push(state);\n\nwatch(state, newState => {\n  history.push(newState);\n});\n\nexport { actions, state };\n",
                "name": "pages.js",
                "size": 1492,
                "type": "source"
              },
              {
                "path": "../../src/modules/pages/views/store/pages.store.js",
                "relativePath": "modules/pages/views/store/pages.store.js",
                "extension": ".js",
                "content": "import Store from '@martyrs/src/modules/globals/views/classes/globals.store.js';\n\nconst pages = new Store(`${process.env.API_URL}/api/pages`);\n\nexport default pages;\n",
                "name": "pages.store.js",
                "size": 166,
                "type": "source"
              }
            ]
          },
          "components": {
            "blocks": {
              "_files": [
                {
                  "path": "../../src/modules/pages/views/components/blocks/CardPage.vue",
                  "relativePath": "modules/pages/views/components/blocks/CardPage.vue",
                  "extension": ".vue",
                  "content": "<template>\n  <div>\n    <div :class=\"$attrs.class\">\n      <!-- {{ page.url }} -->\n      <div class=\"flex flex-nowrap gap-thin card-page-title\">\n        <router-link\n          :to=\"router.resolve({ name: 'Page', params: { url: page.url.split('/') } }).href\" \n           class=\"\n            z-index-2\n            cursor-pointer\n            mn-r-auto\n            t-truncate\n          \"\n          :class=\"{\n            't-main': $route.params.url && page.url === joinArrayToUrl($route.params.url)\n          }\"\n        >\n          {{ page.name }}\n        </router-link>\n\n        <router-link\n          v-if=\"hasAdminRights\"\n          :to=\"router.resolve({ name: 'Backoffice Pages Edit', params: { url: page.url.split('/') } }).href\" \n          class=\"\n            z-index-2\n            cursor-pointer \n            card-page-actions\n            radius-extra pd-micro bg-second\n          \"\n        >\n          <IconEdit\n            class=\"i-small\"\n            classes=\"fill-white\"\n          />\n        </router-link>\n\n        <button\n           v-if=\"hasAdminRights\"\n          @click=\"createPage(page)\"\n          class=\"\n            z-index-2\n            cursor-pointer \n            card-page-actions\n            radius-extra pd-micro bg-second\n          \"\n        >\n          <IconAdd\n            class=\"i-small\"\n            :fill=\"'white'\"\n          />\n        </button>\n      </div>\n    </div>\n\n    <div v-if=\"page.children && page.children.length > 0 && page.children[0].url && showChildren\" class=\"mn-l-small br-t br-solid br-black-transp-10\">\n      <CardPage \n        @createPage=\"createPage\" \n        v-for=\"childPage in page.children\" \n        :key=\"childPage.url\" \n        :page=\"childPage\" \n        :hasAdminRights=\"hasAdminRights\"\n        :class=\"$attrs.class\"\n      />\n    </div>\n    \n  </div>\n</template>\n\n<script setup>\n  import { ref } from 'vue'\n\n  import IconEdit from '@martyrs/src/modules/icons/navigation/IconEdit.vue'\n  import IconAdd from '@martyrs/src/modules/icons/navigation/IconAdd.vue'\n\n  import Button  from '@martyrs/src/components/Button/Button.vue'\n  import Field from \"@martyrs/src/components/Field/Field.vue\"; \n\n  import { useRouter } from 'vue-router'\n  \n  const router = useRouter()\n\n  const props = defineProps({\n    page: {\n      type: Object,\n      required: true\n    },\n    hasAdminRights: {\n      type: Boolean,\n      default: false\n    },\n    showChildren: {\n      type: Boolean,\n      default: true\n    }\n  })\n\n  const emits = defineEmits([\n    'createPage'\n  ])\n\n  const newPage = ref({\n    show: false,\n    name: null\n  })\n\n  async function createPage(page) {\n    emits('createPage', page)\n  }\n</script>\n\n<style lang=\"scss\">\n.card-page-title {\n  .card-page-actions {\n    display: none;\n  }\n\n  &:hover {\n    .card-page-actions {\n      display: block;\n    }\n  }\n}\n</style>",
                  "name": "CardPage.vue",
                  "size": 2806,
                  "type": "source"
                }
              ]
            },
            "pages": {
              "_files": [
                {
                  "path": "../../src/modules/pages/views/components/pages/Page.vue",
                  "relativePath": "modules/pages/views/components/pages/Page.vue",
                  "extension": ".vue",
                  "content": "<template>\n      \n  <div v-if=\"page && page.content\"  style=\"overflow: clip\" class=\" bg-light pos-relative\"> \n    \n    <div class=\"pd-medium pos-sticky mobile-only  z-index-1 pos-t-0 bg-light w-100 br-b br-solid br-black-transp-10\">\n      <button @click=\"showMenu\" class=\"cursor-pointer\">\n        {{ isMenuOpen === false ? 'Show Menu' : 'Hide Menu' }}\n      </button>\n    </div>\n\n    <div  v-if=\"isMenuOpen\" class=\"z-index-0  pos-relative\">\n      <ul \n        class=\"transition-ease-in-out w-100  bg-light\"\n      >\n        <CardPage \n          :page=\"pageParent\" \n          :hasAdminRights=\"hasAdminRights\"\n          class=\"pd-thin\"\n        />\n      </ul>  \n    </div>\n\n    <div  v-if=\"!isMenuOpen\" class=\"cols-2-1_3 h-100 bg-light z-index-0 pos-relative\">\n\n      <div v-if=\"pageParent.url !== page.url\" class=\"desktop-only h-100 bg-white o-scroll z-index-0  pos-relative\">\n        <ul \n          class=\"transition-ease-in-out w-100  bg-light\"\n        >\n          <CardPage \n            :page=\"pageParent\" \n            :hasAdminRights=\"hasAdminRights\"\n            class=\"bg-white pd-thin\"\n          />\n        </ul>  \n      </div>\n\n      <div class=\"o-scroll pd-medium\">\n        <Viewer\n          :content=\"page.content\"\n          class=\"\"\n        />\n\n        <div class=\"gap-thin cols-2\">\n          <div  v-if=\"navigationPages.previousPage\" class=\"bg-white pd-medium mn-b-thin radius-semi \">\n            <h4 class=\"mn-b-small\" >Read Previous</h4>\n\n            <CardPage \n              :page=\"navigationPages.previousPage\" \n              :showChildren=\"false\"\n              class=\"h3 t-main bg-white mn-b-thin radius-semi\"\n            />\n          </div>\n\n          <div v-if=\"navigationPages.children.length > 0\" class=\"bg-white pd-medium mn-b-thin radius-semi \">\n            <h4 class=\"mn-b-small pd-micro \">Table of Contents</h4>\n            <CardPage \n              v-for=\"childPage in navigationPages.children\" \n              :key=\"childPage.id\"\n              :page=\"childPage\" \n              class=\"bg-white pd-micro  radius-semi\"\n            />\n          </div>\n\n          <div v-if=\"navigationPages.nextPage\" class=\"bg-white pd-medium mn-b-thin radius-semi\">\n            <h4 class=\"mn-b-small\" >Read Next</h4>\n            <CardPage \n              :page=\"navigationPages.nextPage\" \n              class=\"h3 t-main  bg-white mn-b-thin radius-semi\"\n              :showChildren=\"false\"\n            />\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script setup>\n  // Import libs\n  import { computed, onMounted, ref, onServerPrefetch } from 'vue'\n\n  import { useRoute } from 'vue-router'\n  import { useI18n }    from 'vue-i18n'\n\n  import Viewer from '@martyrs/src/modules/constructor/components/sections/Viewer.vue';\n\n  import CardPage from '../blocks/CardPage.vue'\n\n  import * as pages from '../../store/pages';\n  import * as auth from '@martyrs/src/modules/auth/views/store/auth.js'\n\n  import { useGlobalMixins } from \"@martyrs/src/modules/globals/views/mixins/mixins.js\"\n\n  const isMenuOpen = ref(false)\n\n  function showMenu () {\n    isMenuOpen.value = !isMenuOpen.value\n  }\n\n  function flattenTree(tree) {\n    const pages = [];\n\n    function recursiveFlatten(nodes, parent = null) {\n      for (const node of nodes) {\n        pages.push({ ...node, parent }); // Сохраняем родителя для каждого узла\n        if (node.children.length > 0) {\n          recursiveFlatten(node.children, node);\n        }\n      }\n    }\n\n    recursiveFlatten(tree.children);\n    return pages;\n  }\n\n  // Получаем плоский список всех страниц\n  const allPages = computed(() => flattenTree(pageParent.value));\n\n  // Вычисляемая функция для нахождения предыдущей и следующей страниц\n  const navigationPages = computed(() => {\n    // Если текущая страница - рутовая\n    if (page.value._id === pageParent.value._id) {\n      return { children: page.value.children, previousPage: null, nextPage: null };\n    }\n\n    const currentIndex = allPages.value.findIndex(p => p._id === page.value._id);\n    \n    const previousPage = currentIndex > 0 \n      ? allPages.value[currentIndex - 1] \n      : pageParent.value;  // Если нет предыдущего, берем родителя\n    \n    const nextPage = currentIndex < allPages.value.length - 1 \n      ? allPages.value[currentIndex + 1] \n      : null;\n\n    return { previousPage, nextPage, children: [] };\n  });\n\n  const { \n    normalizeUrlParam, \n    joinArrayToUrl,\n    isAdmin\n  } = useGlobalMixins()\n\n  const hasAdminRights = computed(() => {\n    return isAdmin(auth.state.access.roles)\n  })\n\n  const { t, locale } = useI18n()\n\n  const route = useRoute()\n\n  const pageParent = ref(null)\n  const page = ref(null)\n\n  onMounted(async () => {\n    let urlParent = route.params.url\n    if (urlParent.length > 0) urlParent = urlParent[0]\n\n    pageParent.value = await pages.actions.read({url: urlParent})\n\n    let url = route.params.url\n    if (url.length > 0) url = joinArrayToUrl(url)\n    \n    page.value = await pages.actions.read({url: url})  \n  })\n</script>\n\n<style lang=\"scss\">\n</style>\n",
                  "name": "Page.vue",
                  "size": 5015,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/pages/views/components/pages/PageEdit.vue",
                  "relativePath": "modules/pages/views/components/pages/PageEdit.vue",
                  "extension": ".vue",
                  "content": "<template>\n  <!-- Toolbar -->\n  <div v-if=\"page\">\n    <section v-if=\"page\" class=\"w-100 mn-b-thin bg-light pd-big radius-semi\">\n      <Constructor \n        :content=\"page.content\"\n        @update=\"update => page.content = update\"\n      />\n    </section>\n   \n    <section v-if=\"page\" class=\"pos-sticky pos-l-0 pos-b-0 w-100 \">\n      <div class=\"pd-thin radius-big  bg-main w-100 flex-nowrap flex\">\n  \n       <Button \n        v-if=\"route.params.url\"\n        :submit=\"() => onDelete()\" \n        :callback=\"() => deletePageCallback()\" \n        class=\"t-nowrap bg-second w-max\"\n      >\n        Delete\n      </Button>\n\n       <Button \n        :submit=\"() => onSubmit()\" \n        class=\"mn-l-auto t-nowrap t-white bg-black w-max\"\n      >\n        Save\n      </Button>\n     </div>\n    </section>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\n\nimport { useGlobalMixins } from \"@martyrs/src/modules/globals/views/mixins/mixins.js\"\n\nconst { \n  normalizeUrlParam, \n  joinArrayToUrl\n} = useGlobalMixins()\n\n\nimport { state, actions } from '../../store/pages'\n\nimport Button  from '@martyrs/src/components/Button/Button.vue'\nimport Field from \"@martyrs/src/components/Field/Field.vue\"; \nimport CardPage from '../blocks/CardPage.vue'\nimport Block from '@martyrs/src/components/Block/Block.vue';\n\nimport Constructor from '@martyrs/src/modules/constructor/components/sections/Constructor.vue';\n\nimport IconDelete from '@martyrs/src/modules/icons/navigation/IconDelete.vue'\n\n// import EditCategories from '@martyrs/src/modules/products/components/blocks/EditCategories.vue'\n\nconst route = useRoute()\nconst router = useRouter()\n\nconst page = ref(null)\n\nonMounted(async () => {\n  let url\n\n  if (route.params.url) {\n    url = route.params.url\n\n    if (url.length > 0) url = joinArrayToUrl(url)\n  }\n\n  if (url) {\n    try {\n      page.value = await actions.read({url: url})\n    } catch (error) {\n      console.log('error', error)\n    }\n  } else {\n    page.value = state.current\n  }\n})\n\nasync function onSubmit() {\n  page.value.name = page.value.content[0].content\n  if (!page.value.url) page.value.url = normalizeUrlParam(page.value.name)\n\n  try {\n    if (route.params.url) {\n      await actions.update(page.value)\n    } else {\n      await actions.create(page.value)\n    }\n  } catch (error) {\n    console.log('error', error)\n  }\n\n  router.push(router.resolve({ name: 'Backoffice Pages Edit', params: { url: page.value.url.split('/') } }).href)\n\n}\n\nfunction createPageCallback() {\n  router.push(router.resolve({ name: 'Backoffice Pages Edit', params: { url: newPage.value.url.split('/') } }).href)\n}\n\nasync function onDelete() {\n  try {\n    await actions.delete(page.value)\n  } catch (error) {\n    console.log('error', error)\n  }\n}\n\nfunction deletePageCallback() {\n  if (page.value.parent) {\n    router.push(router.resolve({ name: 'Backoffice Pages Edit', params: { url: page.value.parent.url.split('/') } }).href)\n  } else {\n    router.push({ name: 'Backoffice Pages'})\n  }\n}\n</script>",
                  "name": "PageEdit.vue",
                  "size": 3047,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/pages/views/components/pages/Pages.vue",
                  "relativePath": "modules/pages/views/components/pages/Pages.vue",
                  "extension": ".vue",
                  "content": "<template>\n  <div>\n    <SectionPageTitle\n      title=\"Pages\"\n      :actions=\"[\n        { to: { name: 'Backoffice Pages Add'}, label: 'Create Page' }\n      ]\"\n      class=\"mn-b-small bg-light bg-light radius-big\"\n    />\n\n    <Block\n      v-if=\"pagesAll\"\n      class=\"mn-b-thin cols-1 gap-thin\"\n    >\n      <!-- Objects -->\n      <CardPage v-for=\"page in pagesAll\" :page=\"page\" :hasAdminRights=\"hasAdminRights\" class=\"bg-white pd-thin radius-small\"/>\n    </Block>\n  </div>\n</template>\n\n<script setup>\n  import { onMounted, ref, toRefs, computed } from 'vue'\n  \n  import { useRoute,useRouter } from 'vue-router'\n\n  import Block from '@martyrs/src/components/Block/Block.vue';\n  import SectionPageTitle from '@martyrs/src/modules/globals/views/components/sections/SectionPageTitle.vue'\n\n  import CardPage from '../blocks/CardPage.vue'\n\n  import * as pages from '../../store/pages.js'\n  import * as auth from '@martyrs/src/modules/auth/views/store/auth.js'\n\n  import { useGlobalMixins } from \"@martyrs/src/modules/globals/views/mixins/mixins.js\"\n\n  const { \n    normalizeUrlParam, \n    joinArrayToUrl,\n    isAdmin\n  } = useGlobalMixins()\n\n  const hasAdminRights = computed(() => {\n    return isAdmin(auth.state.access.roles)\n  })\n\n\n  const route = useRoute()\n  const router = useRouter()\n\n  const pagesAll = ref(null)\n\n  onMounted(async () => {\n    pagesAll.value = await pages.actions.read()\n  })\n\n</script>\n\n<style lang=\"scss\">\n  \n</style>\n",
                  "name": "Pages.vue",
                  "size": 1437,
                  "type": "source"
                }
              ]
            },
            "partials": {
              "_files": [
                {
                  "path": "../../src/modules/pages/views/components/partials/SidebarPages.vue",
                  "relativePath": "modules/pages/views/components/partials/SidebarPages.vue",
                  "extension": ".vue",
                  "content": "<template>\n  <Block\n    v-if=\"pagesAll\"\n    class=\"mn-b-thin pd-small radius-semi cols-1 gap-thin\"\n  >\n  \n    <CardPage \n      v-for=\"page in pagesAll\" \n      :page=\"page\" \n      class=\"radius-small pd-thin\"\n      :hasAdminRights=\"hasAdminRights\"\n      @createPage=\"openPulicationPopup\"\n    />\n\n    <Popup  \n      @close-popup=\"closePublicationPopup\" \n      :isPopupOpen=\"isPublicationPopup\"\n      class=\"w-m-33r t-left pd-big bg-white radius-big\"\n    >\n      <div class=\"h-max-20r o-scroll\">\n        <Constructor \n          :content=\"newPage.content\"\n          @update=\"update => newPage.content = update\"\n        />\n      </div>\n      <Button \n        :submit=\"() => onSubmit()\" \n        class=\"mn-l-auto t-nowrap t-white bg-black w-max\"\n      >\n        Save\n      </Button>\n    </Popup>\n  </Block>\n</template>\n\n<script setup>\n  import { onMounted, ref, toRefs, computed } from 'vue'\n  \n  import { useRoute,useRouter } from 'vue-router'\n\n  import Block from '@martyrs/src/components/Block/Block.vue';\n  import Popup from '@martyrs/src/components/Popup/Popup.vue'\n  import Button from '@martyrs/src/components/Button/Button.vue'\n\n  import Constructor from '@martyrs/src/modules/constructor/components/sections/Constructor.vue';\n\n  import CardPage from '../blocks/CardPage.vue'\n\n  import * as pages from '../../store/pages.js'\n  import * as auth from '@martyrs/src/modules/auth/views/store/auth.js'\n\n  import { useGlobalMixins } from \"@martyrs/src/modules/globals/views/mixins/mixins.js\"\n\n  const { \n    normalizeUrlParam, \n    joinArrayToUrl,\n    isAdmin\n  } = useGlobalMixins()\n\n  const hasAdminRights = computed(() => {\n    return isAdmin(auth.state.access.roles)\n  })\n \n\n  const route = useRoute()\n  const router = useRouter()\n\n  const pagesAll = ref(null)\n\n  onMounted(async () => {\n    pagesAll.value = await pages.actions.read()\n  })\n  // /////////////////////////////////////////\n  // Publication Popup\n  // /////////////////////////////////////////\n  const newPage = ref({\n    url: null,\n    name: null,\n    parent: null,\n    content: []\n  })\n\n  const isPublicationPopup = ref(false)\n\n  function openPulicationPopup(page) {\n    isPublicationPopup.value = true;\n\n    newPage.value.parent = page\n  }\n  function closePublicationPopup() {\n    isPublicationPopup.value = false;\n\n    newPage.value = {\n      url: null,\n      name: null,\n      parent: null,\n      content: []\n    }\n  }\n\n  async function onSubmit() {\n    newPage.value.name = newPage.value.content[0].content\n    newPage.value.url = newPage.value.parent.url + '/' + normalizeUrlParam(newPage.value.name)\n    newPage.value.parent = newPage.value.parent._id\n  \n    await pages.actions.create(newPage.value)\n\n    router.push(router.resolve({ name: 'Backoffice Pages Edit', params: { url: newPage.value.url.split('/') } }).href)\n  }\n\n\n</script>",
                  "name": "SidebarPages.vue",
                  "size": 2808,
                  "type": "source"
                }
              ]
            }
          }
        }
      },
      "products": {
        "controllers": {
          "_files": [
            {
              "path": "../../src/modules/products/controllers/categories.controller.js",
              "relativePath": "modules/products/controllers/categories.controller.js",
              "extension": ".js",
              "content": "import Cache from '@martyrs/src/modules/globals/controllers/classes/globals.cache.js';\nimport Logger from '@martyrs/src/modules/globals/controllers/classes/globals.logger.js';\nimport globalsQuery from '@martyrs/src/modules/globals/controllers/utils/queryProcessor.js';\nconst controllerFactory = db => {\n  const Category = db.category;\n  const logger = new Logger(db);\n  const cache = new Cache();\n  return {\n    async read(req, res) {\n      try {\n        // Используем верифицированные данные из middleware\n        let { parent, url, search, sortParam, sortOrder, skip, limit, excludeChildren, rootOnly, type } = req.verifiedQuery;\n        // Формируем ключ кэша\n        const cacheKey = JSON.stringify(req.verifiedQuery);\n        // Проверяем наличие данных в кэше\n        let cachedResult = await cache.get(cacheKey);\n\n        if (cachedResult) {\n          return res.status(200).json(cachedResult);\n        }\n        // Создаем условия для выборки категорий\n        const matchStage = {\n          ...(req.query.status && { status: req.query.status }),\n          ...(url && { url: url }),\n          ...(search && { name: { $regex: search, $options: 'i' } }),\n          ...(parent ? { parent: new db.mongoose.Types.ObjectId(parent) } : {}),\n          ...(rootOnly === 'true' && !search ? { parent: null } : {}),\n        };\n        // Добавляем фильтрацию по типу владельца\n        if (type === 'platform') {\n          matchStage['owner.type'] = 'platform';\n        } else if (type === 'organization' && req.query.organizationId) {\n          matchStage['owner.type'] = 'organization';\n          matchStage['owner.target'] = new db.mongoose.Types.ObjectId(req.query.organizationId);\n        }\n        if (search) {\n          excludeChildren = 'true';\n        }\n        // Базовый пайплайн для получения категорий\n        let pipeline = [\n          { $match: matchStage },\n          globalsQuery.getCreatorUserLookupStage(),\n          globalsQuery.getCreatorOrganizationLookupStage(),\n          // For owner\n          globalsQuery.getOwnerUserLookupStage(),\n          globalsQuery.getOwnerOrganizationLookupStage(),\n          globalsQuery.getAddFieldsCreatorOwnerStage(),\n          { $sort: { [sortParam]: sortOrder === 'asc' ? 1 : -1 } },\n          { $skip: Number(skip) },\n          { $limit: Number(limit) },\n          globalsQuery.removeTempPropeties(),\n        ];\n        // Если дочерние категории не исключаются, добавляем этап для получения потомков\n        if (excludeChildren !== 'true') {\n          pipeline.push({\n            $graphLookup: {\n              from: 'categories',\n              startWith: '$_id',\n              connectFromField: '_id',\n              connectToField: 'parent',\n              as: 'allDescendants',\n              maxDepth: 10,\n            },\n          });\n        }\n        // Выполняем агрегацию\n        const results = await Category.aggregate(pipeline);\n        let response;\n        // Если исключаем дочерние категории, просто возвращаем результаты\n        if (excludeChildren === 'true') {\n          response = results;\n        } else {\n          // Объединяем все категории и их потомков в один массив\n          let allCategories = [];\n          results.forEach(doc => {\n            // Добавляем текущую категорию (без allDescendants)\n            let category = { ...doc };\n            delete category.allDescendants;\n            allCategories.push(category);\n            // Добавляем потомков, если они есть\n            if (doc.allDescendants && doc.allDescendants.length > 0) {\n              allCategories.push(...doc.allDescendants);\n            }\n          });\n          // Удаляем дубликаты категорий по ID\n          let uniqueCategories = Array.from(new Map(allCategories.map(item => [item._id.toString(), item])).values());\n          // Строим дерево категорий\n          let tree = buildAdjacencyTree(uniqueCategories, sortParam, sortOrder);\n          // Если rootOnly=true, возвращаем все корневые категории из дерева\n          if (rootOnly === 'true') {\n            response = tree;\n          } else {\n            // Иначе возвращаем только те корневые категории, которые соответствуют запросу\n            const requestedCategoryIds = results.map(r => r._id.toString());\n            response = tree.filter(category => requestedCategoryIds.includes(category._id.toString()));\n          }\n        }\n        // Кэшируем результат с тегами для каждой категории\n        let tags = ['categories'];\n        // Добавляем тег для категорий организации, если применимо\n        if (type === 'organization' && req.query.organizationId) {\n          tags.push(`organization_${req.query.organizationId}`);\n        }\n        // Добавляем теги для отдельных категорий\n        for (const cat of response) {\n          if (cat._id) {\n            tags.push(`category_${cat._id}`);\n          }\n        }\n        await cache.setWithTags(cacheKey, response, tags);\n        res.status(200).json(response);\n      } catch (err) {\n        console.log(err)\n        logger.error(`Error reading categories: ${err.message}`);\n        res.status(500).json({ message: err.message });\n      }\n    },\n    async create(req, res) {\n      try {\n        // Используем верифицированные данные из middleware\n        const categoryData = req.verifiedBody;\n        // Если creator не задан, используем текущего пользователя\n        if (!categoryData.creator && req.userId) {\n          categoryData.creator = {\n            type: 'user',\n            target: req.userId,\n          };\n        }\n        // Если owner не задан, определяем по типу\n        if (!categoryData.owner) {\n          // Если задан organizationId, то владельцем будет организация\n          if (req.query.organizationId) {\n            categoryData.owner = {\n              type: 'organization',\n              target: req.query.organizationId,\n            };\n          } else {\n            // Иначе это платформенная категория\n            categoryData.owner = {\n              type: 'platform',\n              target: null,\n            };\n          }\n        }\n        const highestOrder = await Category.findOne().sort('-order');\n        const order = highestOrder ? highestOrder.order + 1 : 1;\n        // Создаем категорию\n        const category = new Category({\n          ...categoryData,\n          order,\n        });\n        // Обрабатываем родительскую категорию\n        if (categoryData.parent) {\n          const parent = await Category.findByIdAndUpdate(categoryData.parent, { $push: { children: category._id } }, { new: true });\n          if (!parent) throw new Error('Parent category not found');\n          category.parent = parent._id;\n        }\n        // Обрабатываем дочерние категории\n        if (categoryData.children && categoryData.children.length > 0) {\n          await Category.updateMany({ _id: { $in: categoryData.children } }, { $set: { parent: category._id } });\n        }\n        await category.save();\n        // Очищаем кэш для категорий\n        await cache.delByTags(['categories']);\n        // Если категория принадлежит организации, очищаем ее кэш\n        if (category.owner.type === 'organization') {\n          await cache.delByTag(`organization_${category.owner.target}`);\n        }\n        logger.info(`Category created: ${category._id}`);\n        res.status(201).json(category);\n      } catch (err) {\n        logger.error(`Error creating category: ${err.message}`);\n        res.status(err.message === 'Parent category not found' ? 404 : 500).json({ message: err.message });\n      }\n    },\n    async update(req, res) {\n      try {\n        // Используем верифицированные данные из middleware\n        const category = req.verifiedBody;\n        const updatedCategory = await Category.findByIdAndUpdate(category._id, { $set: category }, { new: true }).lean();\n        // Категория уже проверена middleware, но на всякий случай перепроверим\n        if (!updatedCategory) {\n          return res.status(404).json({ message: 'Category not found' });\n        }\n        // Очищаем кэш для этой категории\n        await cache.delByTag(`category_${category._id}`);\n        // Очищаем кэш для категорий\n        await cache.delByTags(['categories']);\n        // Если категория принадлежит организации, очищаем ее кэш\n        if (updatedCategory.owner && updatedCategory.owner.type === 'organization') {\n          await cache.delByTag(`organization_${updatedCategory.owner.target}`);\n        }\n        logger.info(`Category updated: ${category._id}`);\n        res.status(200).json(updatedCategory);\n      } catch (err) {\n        logger.error(`Category update error: ${err.message}`);\n        res.status(500).json({ message: 'Failed to update category' });\n      }\n    },\n    async updateOrder(req, res) {\n      try {\n        // Используем верифицированные данные из middleware\n        const { categories } = req.verifiedBody;\n        const bulkOps = categories.map(category => ({\n          updateOne: {\n            filter: { _id: category._id },\n            update: {\n              $set: {\n                order: category.order,\n                parent: category.parent ? new db.mongoose.Types.ObjectId(category.parent) : null,\n              },\n            },\n          },\n        }));\n        await Category.bulkWrite(bulkOps);\n        // Собираем ID категорий и организаций для очистки кэша\n        const categoryIds = categories.map(cat => cat._id);\n        const organizationIds = new Set();\n        // Получаем категории, чтобы выяснить, к каким организациям они принадлежат\n        const updatedCategories = await Category.find({ _id: { $in: categoryIds } }).lean();\n        // Собираем ID организаций\n        updatedCategories.forEach(cat => {\n          if (cat.owner && cat.owner.type === 'organization') {\n            organizationIds.add(cat.owner.target.toString());\n          }\n        });\n        // Очищаем кэш для категорий\n        await cache.delByTags(['categories']);\n        // Очищаем кэш для отдельных категорий\n        for (const catId of categoryIds) {\n          await cache.delByTag(`category_${catId}`);\n        }\n        // Очищаем кэш для организаций\n        for (const orgId of organizationIds) {\n          await cache.delByTag(`organization_${orgId}`);\n        }\n        // Получаем обновленные категории с учетом типа владельца\n        let query = {};\n        if (req.query.type === 'platform') {\n          query = { 'owner.type': 'platform' };\n        } else if (req.query.type === 'organization' && req.query.organizationId) {\n          query = {\n            'owner.type': 'organization',\n            'owner.target': new db.mongoose.Types.ObjectId(req.query.organizationId),\n          };\n        }\n        const result = await Category.find(query).sort({ order: 'asc' }).lean();\n        logger.info(`Categories order updated: ${categoryIds.join(', ')}`);\n        res.status(200).json(result);\n      } catch (err) {\n        logger.error(`Category order update error: ${err.message}`);\n        res.status(500).json({ message: 'Failed to update categories order' });\n      }\n    },\n    async delete(req, res) {\n      try {\n        // Категория уже загружена middleware\n        const category = req.currentResource;\n        // Сохраняем организацию владельца для очистки кэша\n        let ownerOrgId = null;\n        if (category.owner && category.owner.type === 'organization') {\n          ownerOrgId = category.owner.target;\n        }\n        // Используем $graphLookup для поиска всех потомков\n        const result = await Category.aggregate([\n          { $match: { _id: category._id } },\n          {\n            $graphLookup: {\n              from: 'categories',\n              startWith: '$_id',\n              connectFromField: '_id',\n              connectToField: 'parent',\n              as: 'descendants',\n            },\n          },\n          {\n            $project: { descendants: 1 },\n          },\n        ]);\n        // Собираем id текущей категории и всех найденных потомков\n        const idsToDelete = [category._id, ...(result[0]?.descendants || []).map(({ _id }) => _id)];\n        // Собираем ID для очистки кэша\n        const categoryIdsTags = idsToDelete.map(id => `category_${id}`);\n        // Удаляем все категории одним запросом\n        await Category.deleteMany({ _id: { $in: idsToDelete } });\n        // Очищаем кэш для категорий\n        await cache.delByTags(['categories']);\n        // Очищаем кэш для отдельных категорий\n        await cache.delByTags(categoryIdsTags);\n        // Очищаем кэш для организации, если категория ей принадлежала\n        if (ownerOrgId) {\n          await cache.delByTag(`organization_${ownerOrgId}`);\n        }\n        logger.info(`Category and its subcategories deleted: ${category.url}`);\n        res.status(200).json({ message: 'Category and its subcategories deleted successfully' });\n      } catch (err) {\n        logger.error(`Error deleting category: ${err.message}`);\n        res.status(500).json({ message: err.message || 'Internal server error' });\n      }\n    },\n  };\n  // Вспомогательная функция для построения дерева категорий\n  function buildAdjacencyTree(categories, sortParam, sortOrder) {\n    // Создаем карту категорий по ID для быстрого доступа\n    const categoryMap = new Map();\n    // Инициализируем каждую категорию с пустым массивом children\n    categories.forEach(category => {\n      categoryMap.set(category._id.toString(), {\n        ...category,\n        children: [],\n      });\n    });\n    // Строим дерево, связывая родительские и дочерние категории\n    const rootCategories = [];\n    categories.forEach(category => {\n      const categoryWithChildren = categoryMap.get(category._id.toString());\n      // Если у категории есть родитель и этот родитель есть в нашей карте\n      if (category.parent && categoryMap.has(category.parent.toString())) {\n        const parentCategory = categoryMap.get(category.parent.toString());\n        parentCategory.children.push(categoryWithChildren);\n      }\n      // Иначе это корневая категория\n      else if (!category.parent) {\n        rootCategories.push(categoryWithChildren);\n      }\n    });\n    // Рекурсивная функция для сортировки категорий на всех уровнях\n    function sortCategories(nodes) {\n      if (!nodes || nodes.length === 0) {\n        return nodes;\n      }\n      // Сортируем текущий уровень\n      nodes.sort((a, b) => {\n        const valueA = a[sortParam] ?? (sortParam === 'order' ? Number.MAX_SAFE_INTEGER : '');\n        const valueB = b[sortParam] ?? (sortParam === 'order' ? Number.MAX_SAFE_INTEGER : '');\n        if (typeof valueA === 'number' && typeof valueB === 'number') {\n          return sortOrder === 'asc' ? valueA - valueB : valueB - valueA;\n        } else {\n          const stringA = String(valueA);\n          const stringB = String(valueB);\n          return sortOrder === 'asc' ? stringA.localeCompare(stringB) : stringB.localeCompare(stringA);\n        }\n      });\n      // Рекурсивно сортируем дочерние категории\n      nodes.forEach(node => {\n        if (node.children && node.children.length > 0) {\n          sortCategories(node.children);\n        }\n      });\n      return nodes;\n    }\n    // Сортируем категории на всех уровнях и возвращаем результат\n    return sortCategories(rootCategories);\n  }\n};\nexport default controllerFactory;\n",
              "name": "categories.controller.js",
              "size": 15193,
              "type": "source"
            },
            {
              "path": "../../src/modules/products/controllers/leftovers.controller.js",
              "relativePath": "modules/products/controllers/leftovers.controller.js",
              "extension": ".js",
              "content": "import queryProcessorGlobals from '@martyrs/src/modules/globals/controllers/utils/queryProcessor.js';\n\nconst controllerFactory = db => {\n  const Leftover = db.leftover;\n\n  const read = async (req, res) => {\n    try {\n      \n      let stages = [\n        ...queryProcessorGlobals.getSearchOptions(req.query.search, {\n          fields: ['positions.name']\n        }),\n        ...queryProcessorGlobals.getBasicOptions(req.query),\n        // For creator\n        queryProcessorGlobals.getCreatorUserLookupStage(),\n        queryProcessorGlobals.getCreatorOrganizationLookupStage(),\n        // For owner\n        queryProcessorGlobals.getOwnerUserLookupStage(),\n        queryProcessorGlobals.getOwnerOrganizationLookupStage(),\n        queryProcessorGlobals.getAddFieldsCreatorOwnerStage(),\n        // Pagination\n        ...queryProcessorGlobals.getSortingOptions(req.query.sortParam, req.query.sortOrder),\n        ...queryProcessorGlobals.getPaginationOptions(req.query.skip, req.query.limit),\n      ];\n\n      const leftoveres = await Leftover.aggregate(stages).exec();\n\n      if (!leftoveres) {\n        return res.status(404).send({ message: 'LEFTOVERES_NOT_FOUND' });\n      }\n\n      res.status(200).send(leftoveres);\n    } catch (err) {\n      console.error(err);\n      res.status(500).send({ message: 'ERROR_GET_ALL_LEFTOVERES' });\n    }\n  };\n\n  const create = async (req, res) => {\n    try {\n\n      const leftover = await Leftover.create({\n        organization: req.body.organization,\n        type: req.body.type,\n        order: req.body.order,\n        comment: req.body.comment,\n        positions: req.body.positions,\n        creator: req.body.creator,\n        owner: req.body.owner,\n      });\n\n      if (!leftover) {\n        return res.status(404).send({ message: 'ERROR_CREATING_LEFTOVER' });\n      }\n\n      res.status(200).send(leftover);\n    } catch (err) {\n      console.log(err);\n      res.status(500).send({ message: 'ERROR_CREATE_LEFTOVER' });\n    }\n  };\n\n  const get = async (req, res) => {\n    try {\n      const leftover = await Leftover.findOne({ _id: req.params._id }).exec();\n\n      if (!leftover) {\n        return res.status(404).send({ message: 'LEFTOVER_NOT_FOUND' });\n      }\n\n      res.status(200).send(leftover);\n    } catch (err) {\n      res.status(500).send({ message: 'ERROR_GET_LEFTOVER' });\n    }\n  };\n\n  const update = async (req, res) => {\n    try {\n      const leftover = await Leftover.findOneAndUpdate({ _id: req.params._id }, req.body, {\n        new: true,\n        upsert: true,\n      }).exec();\n\n      if (!leftover) {\n        return res.status(404).send({ message: 'LEFTOVER_NOT_FOUND' });\n      }\n\n      res.status(200).send(leftover);\n    } catch (err) {\n      console.log(err);\n      res.status(500).send({ message: 'ERROR_UPDATING_LEFTOVER' });\n    }\n  };\n\n  const deleteLeftover = async (req, res) => {\n    try {\n      const leftover = await Leftover.findOneAndDelete({ _id: req.params._id });\n\n      if (!leftover) {\n        return res.status(404).send({ message: 'ERROR_DELETING_LEFTOVER' });\n      }\n      \n      res.status(200).send(leftover);\n    } catch (err) {\n      res.status(500).send({ message: 'ERROR_DELETE_LEFTOVER' });\n    }\n  };\n\n  return {\n    read,\n    create,\n    get,\n    update,\n    delete: deleteLeftover,\n  };\n};\nexport default controllerFactory;\n",
              "name": "leftovers.controller.js",
              "size": 3301,
              "type": "source"
            },
            {
              "path": "../../src/modules/products/controllers/products.controller.js",
              "relativePath": "modules/products/controllers/products.controller.js",
              "extension": ".js",
              "content": "import ChatGPT from '@martyrs/src/modules/integrations/openai/openai.globals.js';\n\nimport queryProcessorGlobals from '@martyrs/src/modules/globals/controllers/utils/queryProcessor.js';\nimport queryProcessorProducts from '@martyrs/src/modules/products/controllers/queries/products.queries.js';\n\nimport productLookupConfigs from '@martyrs/src/modules/products/controllers/configs/products.lookup.config.js';\n\n// Factory\nconst controllerFactory = db => {\n  const Product = db.product;\n\n  // Create product\n  const Create = async (req, res) => {\n    try {\n      const product = await new Product(req.body).save();\n      return res.status(201).json(product);\n    } catch (err) {\n      console.log(err)\n      return res.status(500).json({ message: err.message });\n    }\n  };\n\n  // Read products\n  const Read = async (req, res) => {\n    try {\n      const requestedLookups = queryProcessorGlobals.getRequestedLookups(req.query);\n      \n      const stages = [\n        ...queryProcessorGlobals.getBasicOptions(req.query),\n        ...queryProcessorGlobals.getSearchOptions(req.query.search, {\n          fields: ['name', 'description']\n        }),\n        ...queryProcessorGlobals.getPriceConditions(req.query.prices),\n\n        ...queryProcessorProducts.getCategoriesFilterStage(req.query.categories),\n        ...queryProcessorProducts.getDeliveryFilterStage(req.query.delivery),\n        ...queryProcessorProducts.getAttributeFiltersStage(req.query.filters),\n\n        ...queryProcessorGlobals.getLookupStages(requestedLookups, productLookupConfigs),\n        \n        queryProcessorGlobals.getCreatorUserLookupStage(),\n        queryProcessorGlobals.getCreatorOrganizationLookupStage(),\n        queryProcessorGlobals.getOwnerUserLookupStage(),\n        queryProcessorGlobals.getOwnerOrganizationLookupStage(),\n        queryProcessorGlobals.getAddFieldsCreatorOwnerStage(),\n        \n        ...queryProcessorGlobals.getSortingOptions(req.query.sortParam, req.query.sortOrder),\n        ...queryProcessorGlobals.getPaginationOptions(req.query.skip, req.query.limit),\n        \n        // Удаление временных полей\n        queryProcessorGlobals.removeTempPropeties(),\n        \n        // Дополнительные очистки для leftovers (если был запрошен)\n        ...(requestedLookups.includes('leftovers') ? [{ $project: { ingredientsQuantities: 0 } }] : [])\n      ].filter(Boolean);\n      \n      console.log('Products aggregation pipeline:', JSON.stringify(stages, null, 2));\n      \n      // Выполнение агрегации\n      const products = await Product.aggregate(stages);\n      \n      // Возвращаем только количество, если запрошено\n      if (req.query.count) {\n        return res.status(200).json({ count: products.length });\n      }\n\n      res.status(200).json(products);\n    } catch (err) {\n      console.error('Error in products Read controller:', err);\n      return res.status(500).json({ message: err.message });\n    }\n  };\n  \n  const Update = async (req, res) => {\n    try {\n      const { _id } = req.params;\n\n      const updatedProduct = await Product.findOneAndUpdate(\n        { _id },\n        {\n          name: req.body.name,\n          status: req.body.status,\n          listing: req.body.listing,\n          description: req.body.description,\n          price: req.body.price,\n          price_currency: req.body.price_currency,\n          price_cost: req.body.price_cost,\n          unit: req.body.unit,\n          category: req.body.category,\n          images: req.body.images,\n          variants: req.body.variants,\n          attributes: req.body.attributes,\n          localization: req.body.translations,\n          quantity: req.body.quantity,\n          discounts: req.body.discounts,\n          ingredients: req.body.ingredients,\n        },\n        { new: true }\n      );\n      if (!updatedProduct) {\n        return res.status(404).send({ message: 'Something wrong when updating product.' });\n      }\n      res.status(200).send(updatedProduct);\n    } catch (err) {\n      res.status(500).send({ message: err.message });\n    }\n  };\n  const Delete = async (req, res) => {\n    try {\n      const { _id } = req.params;\n      const deletedProduct = await Product.findOneAndDelete({ _id });\n      if (!deletedProduct) {\n        return res.status(404).send({ message: 'Product not found for deletion.' });\n      }\n      res.status(200).send(deletedProduct);\n    } catch (err) {\n      res.status(500).send({ message: err.message });\n    }\n  };\n  const getProductRecommendation = async (req, res) => {\n    const { mood } = req.body;\n    try {\n      const products = await Product.find({\n        status: 'published',\n      }).limit(40);\n      if (!products) {\n        console.log('no products');\n        return res.status(404).send({ message: 'Products not found.' });\n      }\n      const productsList = products\n        .map(p => {\n          const info = p.attributes || [];\n          const value0 = info[0] ? info[0].value : '';\n          const value1 = info[1] ? `(${info[1].value}%)` : '';\n          const value2 = info[2] ? `(${info[2].value})` : '';\n          return `${p._id}: ${p.name} (${value0}) ${value1} ${value2}`;\n        })\n        .join(', ');\n      \n      const prompt = `\n        1. When asked how the client wants to feel, they responded \"${mood}\".\n        2. Here is a list of products in our store: ${productsList}. \n        3. Based on the attributes about the products (strain, THC content) and the user's desires, choose 1 product to recommend to the user.\n        4. The response should be in the language that the user used in mood (${mood}).\n        5. Please format your response as a JSON object '{\"_id\": \"ID of the recommended product (it must correspond to one of the product IDs I sent)\", \"recommendationText\": \"Text explaining why this particular product\"'. Write only the JSON object without any other text outside of it.\n      `;\n\n      // Specify a model explicitly\n      const result = await ChatGPT.createChatCompletion(prompt, {\n        model: 'gpt-4',\n        temperature: 0.8,\n        systemPrompt: 'You are a product recommendation specialist with expertise in matching customer needs to product attributes.'\n      });\n\n      const recommendedProduct = await Product.findById(result._id);\n      \n      if (!recommendedProduct) {\n        console.log(`No product found with _id: ${result._id}`);\n        return res.status(404).send({ message: 'Recommended product not found.' });\n      }\n      res.status(200).json({ product: recommendedProduct, recommendationText: result.recommendationText });\n    } catch (err) {\n      console.log(err);\n      res.status(500).send({ message: err });\n    }\n  };\n  const getProductsPopular = (req, res) => {\n    Product.find({\n      status: 'published',\n      views: { $gt: 10 },\n    })\n      // .populate('variants')\n      .limit(10)\n      .exec((err, products) => {\n        // If error\n        if (err) {\n          return res.status(500).send({ message: err });\n        }\n        // If not found\n        if (!products) {\n          return res.status(404).send({ message: 'Products not found.' });\n        }\n        // If succes\n        res.status(200).send(products);\n      });\n  };\n  return {\n    Create,\n    Read,\n    Update,\n    Delete,\n    getProductsPopular,\n    getProductRecommendation,\n  };\n};\nexport default controllerFactory;\n",
              "name": "products.controller.js",
              "size": 7275,
              "type": "source"
            }
          ],
          "configs": {
            "_files": [
              {
                "path": "../../src/modules/products/controllers/configs/products.lookup.config.js",
                "relativePath": "modules/products/controllers/configs/products.lookup.config.js",
                "extension": ".js",
                "content": "// @martyrs/src/modules/products/controllers/utils/productLookupConfigs.js\nexport default  {\n  // Лукап для leftover-ов продукта\n  leftovers: {\n    lookup: {\n      from: 'leftovers',\n      let: { productId: '$_id', ingredientsIds: '$ingredients._id' },\n      pipeline: [\n        { $unwind: '$positions' },\n        {\n          $match: {\n            $expr: {\n              $or: [\n                { $eq: ['$positions._id', '$$productId'] },\n                { $in: ['$positions._id', { $ifNull: ['$$ingredientsIds', []] }] }\n              ]\n            }\n          }\n        },\n        {\n          $addFields: {\n            'positions.quantity': {\n              $cond: {\n                if: { $eq: ['$type', 'stock-in'] },\n                then: '$positions.quantity',\n                else: { $multiply: ['$positions.quantity', -1] }\n              }\n            }\n          }\n        },\n        {\n          $project: {\n            _id: '$positions._id',\n            quantity: '$positions.quantity',\n            name: '$positions.name'\n          }\n        }\n      ],\n      as: 'leftovers'\n    },\n    additionalStages: [\n      // Этап для расчета количеств по ингредиентам\n      {\n        $addFields: {\n          ingredientsQuantities: {\n            $cond: {\n              if: { $isArray: '$ingredients' },\n              then: {\n                $map: {\n                  input: '$ingredients',\n                  as: 'ingredient',\n                  in: {\n                    $let: {\n                      vars: {\n                        ingredientId: '$$ingredient._id',\n                        ingredientQuantity: { $ifNull: ['$$ingredient.quantity', 0] }\n                      },\n                      in: {\n                        $divide: [\n                          {\n                            $sum: {\n                              $map: {\n                                input: '$leftovers',\n                                as: 'leftover',\n                                in: {\n                                  $cond: {\n                                    if: { $eq: ['$$leftover._id', '$$ingredientId'] },\n                                    then: '$$leftover.quantity',\n                                    else: 0\n                                  }\n                                }\n                              }\n                            }\n                          },\n                          {\n                            $cond: {\n                              if: { $eq: ['$$ingredientQuantity', 0] },\n                              then: 1,\n                              else: '$$ingredientQuantity'\n                            }\n                          }\n                        ]\n                      }\n                    }\n                  }\n                }\n              },\n              else: []\n            }\n          }\n        }\n      },\n      // Этап для расчета доступного количества\n      {\n        $set: {\n          available: {\n            $cond: {\n              if: { $gt: [{ $size: { $ifNull: ['$ingredients', []] } }, 0] },\n              then: { $floor: { $min: '$ingredientsQuantities' } },\n              else: { $sum: '$leftovers.quantity' }\n            }  \n          }\n        }\n      }\n    ]\n  },\n  // Лукап для категорий продукта\n  categories: {\n    lookup: {\n      from: 'categories',\n      localField: 'category',\n      foreignField: '_id',\n      as: 'category'\n    },\n    additionalStages: []\n  }\n};",
                "name": "products.lookup.config.js",
                "size": 3443,
                "type": "source"
              }
            ]
          },
          "queries": {
            "_files": [
              {
                "path": "../../src/modules/products/controllers/queries/products.queries.js",
                "relativePath": "modules/products/controllers/queries/products.queries.js",
                "extension": ".js",
                "content": "// @martyrs/src/modules/products/controllers/utils/filterProcessor.js\nimport { Types } from 'mongoose';\nconst ObjectId = Types.ObjectId;\n\n/**\n * Обрабатывает фильтрацию по категориям\n * @param {string} categories - строка с ID категорий, разделенная запятыми\n * @returns {Array} этапы агрегации для фильтрации по категориям\n */\nfunction getCategoriesFilterStage(categories) {\n  if (!categories) return [];\n  \n  const categoryIds = categories.split(',').filter(Boolean);\n  if (categoryIds.length === 0) return [];\n  \n  return [{\n    $match: {\n      category: {\n        $in: categoryIds.map(id => new ObjectId(id))\n      }\n    }\n  }];\n}\n\n/**\n * Обрабатывает фильтрацию по опциям доставки\n * @param {string} delivery - строка с опциями доставки, разделенная запятыми\n * @returns {Array} этапы агрегации для фильтрации по доставке\n */\nfunction getDeliveryFilterStage(delivery) {\n  if (!delivery) return [];\n  \n  const deliveryOptions = delivery.split(',').filter(Boolean);\n  if (deliveryOptions.length === 0) return [];\n  \n  return [{\n    $match: {\n      delivery: { $in: deliveryOptions }\n    }\n  }];\n}\n\n/**\n * Обрабатывает сложные фильтры атрибутов\n * @param {string} filtersString - JSON-строка с фильтрами\n * @returns {Array} этапы агрегации для фильтрации по атрибутам\n */\nfunction getAttributeFiltersStage(filtersString) {\n  if (!filtersString) return [];\n  \n  try {\n    const filters = JSON.parse(filtersString);\n    if (!Array.isArray(filters) || filters.length === 0) return [];\n    \n    // Массив условий для каждого фильтра\n    const filterConditions = [];\n    \n    filters.forEach(filter => {\n      const { parameter, values, caseSensitive = false } = filter;\n      if (!values || values.length === 0) return;\n      \n      const conditions = values.map(value => {\n        const valueCondition = caseSensitive \n          ? value \n          : { $regex: `^${escapeRegex(value)}$`, $options: 'i' };\n        \n        return {\n          attributes: {\n            $elemMatch: {\n              name: parameter,\n              value: valueCondition\n            }\n          }\n        };\n      });\n      \n      if (conditions.length > 0) {\n        filterConditions.push({ $or: conditions });\n      }\n    });\n    \n    // Объединяем все фильтры через $and\n    return filterConditions.length > 0 \n      ? [{ $match: { $and: filterConditions } }] \n      : [];\n  } catch (error) {\n    console.error('Error parsing attribute filters:', error);\n    return [];\n  }\n}\n\n/**\n * Экранирует специальные символы в регулярном выражении\n * @private\n * @param {string} string - строка для экранирования\n * @returns {string} экранированная строка\n */\nfunction escapeRegex(string) {\n  return string.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\nexport { \n  getAttributeFiltersStage,\n  getCategoriesFilterStage,\n  getDeliveryFilterStage\n};\n\nexport default { \n  getAttributeFiltersStage,\n  getCategoriesFilterStage,\n  getDeliveryFilterStage \n};",
                "name": "products.queries.js",
                "size": 2917,
                "type": "source"
              }
            ]
          }
        },
        "middlewares": {
          "_files": [
            {
              "path": "../../src/modules/products/middlewares/categories.verifier.js",
              "relativePath": "modules/products/middlewares/categories.verifier.js",
              "extension": ".js",
              "content": "import Validator from '@martyrs/src/modules/globals/controllers/classes/globals.validator.js';\nimport Verifier from '@martyrs/src/modules/globals/controllers/classes/globals.verifier.js';\nexport default (function (db) {\n  // Конфигурация валидатора для запросов\n  const queryValidatorConfig = {\n    parent: { rule: 'optional', validator: Validator.schema().string() },\n    url: { rule: 'optional', validator: Validator.schema().string() },\n    search: { rule: 'optional', validator: Validator.schema().string() },\n    sortParam: {\n      rule: 'optional',\n      validator: Validator.schema().string().oneOf(['order', 'name', 'createdAt', 'updatedAt']),\n      default: 'order',\n    },\n    sortOrder: {\n      rule: 'optional',\n      validator: Validator.schema().string().oneOf(['asc', 'desc']),\n      default: 'asc',\n    },\n    skip: { rule: 'optional', validator: Validator.schema().number().integer().min(0), default: 0 },\n    limit: {\n      rule: 'optional',\n      validator: Validator.schema().number().integer().min(1).max(100),\n      default: 10,\n    },\n    excludeChildren: {\n      rule: 'optional',\n      validator: Validator.schema().string().oneOf(['true', 'false']),\n      default: 'true',\n    },\n    rootOnly: {\n      rule: 'optional',\n      validator: Validator.schema().string().oneOf(['true', 'false']),\n      default: 'false',\n    },\n    status: {\n      rule: 'optional',\n      validator: Validator.schema().string().oneOf(['draft', 'internal', 'published', 'removed']),\n    },\n    type: {\n      rule: 'optional',\n      validator: Validator.schema().string().oneOf(['platform', 'organization', 'all']),\n      default: 'all',\n    },\n    organizationId: { rule: 'optional', validator: Validator.schema().string() },\n  };\n  const bodyValidatorConfig = {\n    _id: { rule: 'optional', validator: Validator.schema().string() },\n    name: { rule: 'optional', validator: Validator.schema().string().required() },\n    description: { rule: 'optional', validator: Validator.schema().string() },\n    photo: { rule: 'optional', validator: Validator.schema().string() },\n    status: {\n      rule: 'optional',\n      validator: Validator.schema().string().oneOf(['draft', 'internal', 'published', 'removed']),\n      default: 'draft',\n    },\n    url: { rule: 'optional', validator: Validator.schema().string().required() },\n    parent: { rule: 'optional', validator: Validator.schema().oneOfTypes(['string', 'null']) },\n    localization: { rule: 'optional' },\n    filters: { rule: 'optional' },\n    owner: {\n      rule: 'optional',\n      validator: Validator.schema().object({\n        type: Validator.schema().string().oneOf(['platform', 'organization']).required(),\n        target: Validator.schema().string(),\n      }),\n    },\n    creator: {\n      rule: 'optional',\n      validator: Validator.schema().object({\n        type: Validator.schema().string().oneOf(['user', 'organization']).required(),\n        target: Validator.schema().string(),\n      }),\n    },\n    children: { rule: 'optional', validator: Validator.schema().array() },\n    order: { rule: 'optional', validator: Validator.schema().number() },\n  };\n  const orderBodyValidatorConfig = {\n    categories: {\n      rule: 'optional',\n      validator: Validator.schema().array().required(),\n      default: [],\n    },\n  };\n  const deleteBodyValidatorConfig = {\n    url: {\n      rule: 'optional',\n      validator: Validator.schema().string().required(),\n    },\n  };\n  const queryVerifier = new Verifier(queryValidatorConfig);\n  const bodyVerifier = new Verifier(bodyValidatorConfig);\n  const orderBodyVerifier = new Verifier(orderBodyValidatorConfig);\n  const deleteBodyVerifier = new Verifier(deleteBodyValidatorConfig);\n  return {\n    // Верификация параметров запроса\n    verifyQuery(req, res, next) {\n      const verification = queryVerifier.verify(req.query);\n\n      console.log('verification is', verification)\n      if (!verification.isValid) {\n        return res.status(400).json({\n          errors: verification.verificationErrors,\n          message: 'Invalid query parameters',\n        });\n      }\n      req.verifiedQuery = verification.verifiedData;\n      next();\n    },\n    // Верификация тела запроса для создания/обновления категории\n    verifyBody(req, res, next) {\n      const verification = bodyVerifier.verify(req.body);\n      if (!verification.isValid) {\n        return res.status(400).json({\n          errors: verification.verificationErrors,\n          message: 'Invalid request data',\n        });\n      }\n      req.verifiedBody = verification.verifiedData;\n      next();\n    },\n    // Верификация тела запроса для обновления порядка категорий\n    verifyOrderBody(req, res, next) {\n      const verification = orderBodyVerifier.verify(req.body);\n      if (!verification.isValid) {\n        return res.status(400).json({\n          errors: verification.verificationErrors,\n          message: 'Invalid request data',\n        });\n      }\n      req.verifiedBody = verification.verifiedData;\n      next();\n    },\n    // Верификация тела запроса для удаления категории\n    verifyDeleteBody(req, res, next) {\n      const verification = deleteBodyVerifier.verify(req.body);\n      if (!verification.isValid) {\n        return res.status(400).json({\n          errors: verification.verificationErrors,\n          message: 'Invalid request data',\n        });\n      }\n      req.verifiedBody = verification.verifiedData;\n      next();\n    },\n    // Проверка на существование категории с тем же URL (для создания)\n    async checkCategoryExistOrNot(req, res, next) {\n      try {\n        if (!req.verifiedBody.url) {\n          return res.status(400).json({ message: 'URL is required' });\n        }\n        const existingCategory = await db.category.findOne({ url: req.verifiedBody.url });\n        if (existingCategory) {\n          return res.status(409).json({\n            message: 'Category with this URL already exists',\n            category: existingCategory,\n          });\n        }\n        next();\n      } catch (error) {\n        res.status(500).json({ message: error.message });\n      }\n    },\n    // Загрузка категории для проверки ABAC (для обновления и удаления)\n    async loadCategoryForUpdate(req, res, next) {\n      try {\n        const categoryId = req.verifiedBody._id;\n        if (!categoryId) {\n          return res.status(400).json({ message: 'Category ID is required' });\n        }\n        const category = await db.category.findById(categoryId).lean();\n        if (!category) {\n          return res.status(404).json({ message: 'Category not found' });\n        }\n        req.currentResource = category; // Устанавливаем для ABAC\n        next();\n      } catch (error) {\n        res.status(500).json({ message: error.message });\n      }\n    },\n    // Загрузка категории по URL для удаления\n    async loadCategoryForDelete(req, res, next) {\n      try {\n        const url = req.verifiedBody.url;\n        if (!url) {\n          return res.status(400).json({ message: 'Category URL is required' });\n        }\n        const category = await db.category.findOne({ url }).lean();\n        if (!category) {\n          return res.status(404).json({ message: 'Category not found' });\n        }\n        req.currentResource = category; // Устанавливаем для ABAC\n        next();\n      } catch (error) {\n        res.status(500).json({ message: error.message });\n      }\n    },\n  };\n});\n",
              "name": "categories.verifier.js",
              "size": 7335,
              "type": "source"
            }
          ]
        },
        "models": {
          "_files": [
            {
              "path": "../../src/modules/products/models/category.model.js",
              "relativePath": "modules/products/models/category.model.js",
              "extension": ".js",
              "content": "import common from '@martyrs/src/modules/globals/models/schemas/common.schema.js';\nimport engagement from '@martyrs/src/modules/globals/models/schemas/engagement.schema.js';\nimport metadata from '@martyrs/src/modules/globals/models/schemas/metadata.schema.js';\nimport ownership from '@martyrs/src/modules/globals/models/schemas/ownership.schema.js';\n\nexport default db => {\n  const CategorySchema = new db.mongoose.Schema(\n    {\n      name: { type: String, required: true, trim: true },\n      description: { type: String, trim: true },\n      photo: { type: String },\n      order: { type: Number, required: true },\n      url: { type: String, required: true, trim: true, unique: true },\n      parent: { type: db.mongoose.Schema.Types.ObjectId, ref: 'Category' },\n      localization: { type: Array },\n      filters: { type: Array },\n    },\n    {\n      timestamps: { currentTime: () => Date.now() },\n    }\n  );\n  // Применяем глобальные схемы\n  common(CategorySchema, db);\n  ownership(CategorySchema, db);\n  metadata(CategorySchema, db);\n  engagement(CategorySchema, db);\n  CategorySchema.index({ parent: 1 });\n  CategorySchema.index({ name: 1 });\n  const Category = db.mongoose.model('Category', CategorySchema, 'categories');\n  return Category;\n};\n",
              "name": "category.model.js",
              "size": 1246,
              "type": "source"
            },
            {
              "path": "../../src/modules/products/models/leftover.model.js",
              "relativePath": "modules/products/models/leftover.model.js",
              "extension": ".js",
              "content": "import applyOwnershipSchema from '@martyrs/src/modules/globals/models/schemas/ownership.schema.js';\n\nexport default db => {\n  const LeftoverSchema = new db.mongoose.Schema(\n    {\n      type: {\n        type: String,\n        enum: ['stock-in', 'stock-out', 'write-off'],\n        default: 'stock-in',\n        required: true,\n      },\n      order: {\n        type: db.mongoose.Schema.Types.ObjectId,\n        ref: 'Order',\n      },\n      storage: {\n        type: db.mongoose.Schema.Types.ObjectId,\n        ref: 'Spot',\n      },\n      positions: [{\n        _id: {\n          type: db.mongoose.Schema.Types.ObjectId,\n        },\n        product: {\n          type: db.mongoose.Schema.Types.ObjectId,\n          ref: 'Product',\n        },\n        variant: {\n          _id: {\n            type: db.mongoose.Schema.Types.ObjectId,\n          },\n          name: {\n            type: String,\n          },\n          attributes: {\n            type: Array,\n          },\n        },\n        image: {\n          type: String,\n        },\n        name: {\n          type: String,\n        },\n        quantity: {\n          type: Number,\n        },\n        cost: {\n          type: Number,\n        },\n        unit: {\n          type: String,\n        }\n      }],\n      comment: {\n        type: String,\n      },\n    },\n    {\n      timestamps: {\n        currentTime: () => Date.now(),\n      },\n    }\n  );\n\n  applyOwnershipSchema(LeftoverSchema, db);\n\n  LeftoverSchema.index({ storage: 1, order: 1, type: 1 });\n\n  const Leftover = db.mongoose.model('Leftover', LeftoverSchema);\n\n  return Leftover;\n};\n",
              "name": "leftover.model.js",
              "size": 1562,
              "type": "source"
            },
            {
              "path": "../../src/modules/products/models/product.model.js",
              "relativePath": "modules/products/models/product.model.js",
              "extension": ".js",
              "content": "import applyCommonSchema from '@martyrs/src/modules/globals/models/schemas/common.schema.js';\nimport applyOwnershipSchema from '@martyrs/src/modules/globals/models/schemas/ownership.schema.js';\n\nimport discountschema from './schemas/discount.schema.js';\n\nexport default db => {\n  const DiscountSchema = discountschema(db);\n\n  const ProductSchema = new db.mongoose.Schema({\n    listing: {\n      type: String,\n      enum: ['sale', 'rent'],\n    },\n    sku: {\n      type: String,\n      trim: true,\n    },\n    category: [{\n      type: db.mongoose.Schema.Types.ObjectId,\n      ref: 'Category', \n    }],\n    variants: [{\n      type: db.mongoose.Schema.Types.ObjectId,\n      ref: 'Variant',\n    }],\n    images: {\n      type: Array,\n    },\n    name: {\n      type: String,\n    },\n    description: {\n      type: String,\n    },\n    attributes: [{\n      name: { type: String },\n      value: { type: String },\n    }],\n    translations: {\n      type: Array,\n    },\n    discounts: [DiscountSchema]\n  },{\n    timestamps: {\n      currentTime: () => Date.now(),\n    },\n  });\n\n  applyCommonSchema(ProductSchema, db);\n  applyOwnershipSchema(ProductSchema, db);\n\n  ProductSchema.index({ category: 1 });\n  ProductSchema.index({ name: 'text', description: 'text' });\n\n  const Product = db.mongoose.model('Product', ProductSchema);\n\n  return Product;\n};\n",
              "name": "product.model.js",
              "size": 1329,
              "type": "source"
            },
            {
              "path": "../../src/modules/products/models/variant.model.js",
              "relativePath": "modules/products/models/variant.model.js",
              "extension": ".js",
              "content": "import applyCommonSchema from '@martyrs/src/modules/globals/models/schemas/common.schema.js';\nimport applyOwnershipSchema from '@martyrs/src/modules/globals/models/schemas/ownership.schema.js';\n\nexport default db => {\n  const VariantSchema = new db.mongoose.Schema({\n    _id: {\n      type: db.mongoose.Schema.Types.ObjectId,\n      auto: true,\n    },\n    sku: {\n      type: String,\n      trim: true,\n    },\n    images: {\n      type: Array,\n    },\n    name: {\n      type: String,\n    },\n    price: {\n      type: Number,\n    },\n    cost: {\n      type: Number,\n      default: 0,\n    },\n    quantity: {\n      type: Number,\n      default: 1,\n    },\n    unit: {\n      type: String,\n      default: 'pcs',\n      enum: ['pcs', 'g', 'kg', 'ml', 'l', 'oz'],\n    },\n    ingredients: [\n      IngredientSchema\n    ],\n    attributes: [{\n      name: { type: String },\n      value: { type: String },\n    }],\n  },{\n    timestamps: {\n      currentTime: () => Date.now(),\n    },\n  });\n\n  applyCommonSchema(VariantSchema, db);\n  applyOwnershipSchema(VariantSchema, db);\n\n  VariantSchema.index({ Variant: 1, name: 1 });\n\n  const Variant = db.mongoose.model('Variant', VariantSchema);\n\n  return Variant;\n};\n",
              "name": "variant.model.js",
              "size": 1183,
              "type": "source"
            }
          ],
          "schemas": {
            "_files": [
              {
                "path": "../../src/modules/products/models/schemas/discount.schema.js",
                "relativePath": "modules/products/models/schemas/discount.schema.js",
                "extension": ".js",
                "content": "export default db => {\n  const DiscountSchema = new db.mongoose.Schema(\n    {\n      type: {\n        type: String,\n        enum: ['discount', 'special_price'],\n        default: 'discount',\n        required: true\n      },\n      value: {\n        type: Number,\n        required: true,\n        min: 0\n      },\n      quantity: {\n        type: Number,\n        min: 1,\n      },\n      date: {\n        start: Date,\n        end: Date\n      },\n      time: {\n        start: String, // 'HH:mm' формат\n        end: String\n      },\n      name: String,\n      description: String,\n    },\n    { _id: false }\n  );\n  return DiscountSchema;\n};",
                "name": "discount.schema.js",
                "size": 621,
                "type": "source"
              },
              {
                "path": "../../src/modules/products/models/schemas/ingredient.schema.js",
                "relativePath": "modules/products/models/schemas/ingredient.schema.js",
                "extension": ".js",
                "content": "export default db => {\n  const IngredientSchema = new db.mongoose.Schema({\n    _id: {\n      type: db.mongoose.Schema.Types.ObjectId,\n      ref: 'Product',\n    },\n    price: {\n      type: Number,\n      required: true,\n      default: 0,\n      min: [0, 'Price cannot be less than 0'],\n    },\n    cost: {\n      type: Number,\n      required: true,\n      default: 0,\n      min: [0, 'Price cannot be less than 0'],\n    },\n    quantity: {\n      type: Number,\n      required: true,\n      min: [1, 'Quantity cannot be less than 1'],\n    },\n    unit: {\n      type: String,\n      required: true,\n      default: 'g',\n    },\n    optional: {\n      type: Boolean,\n      default: false,\n      description: 'Является ли ингредиент опциональным',\n    },\n    replaceable: {\n      type: Boolean,\n      default: false,\n      description: 'Можно ли заменить ингредиент',\n    },\n    alternatives: [{\n      type: db.mongoose.Schema.Types.ObjectId,\n      ref: 'Product',\n      description: 'Альтернативные продукты для замены',\n    }],\n  });\n  return IngredientSchema;\n};\n",
                "name": "ingredient.schema.js",
                "size": 1046,
                "type": "source"
              }
            ]
          }
        },
        "_files": [
          {
            "path": "../../src/modules/products/products.client.js",
            "relativePath": "modules/products/products.client.js",
            "extension": ".js",
            "content": "// Router\nimport { createProductRoutes } from './router/products.router.js';\n\n//Store\nimport * as storeCategories from './store/categories.js';\nimport * as storeLeftovers from './store/leftovers.js';\nimport * as storeProducts from './store/products.js';\n\n// Layouts\n\n// Blocks\nimport CardCategory from './components/blocks/CardCategory.vue';\nimport CardLeftover from './components/blocks/CardLeftover.vue';\nimport CardPosition from './components/blocks/CardPosition.vue';\nimport CardProduct from './components/blocks/CardProduct.vue';\nimport Image360 from './components/elements/Image360.vue';\nimport ProductImages from './components/blocks/ProductImages.vue';\n\n// Sections\nimport EditVariants from './components/sections/EditVariants.vue';\nimport FilterProducts from './components/sections/FilterProducts.vue';\nimport HeroRecommendation from './components/sections/HeroRecommendation.vue';\nimport ProductsPopular from './components/sections/ProductsPopular.vue';\nimport SectionProduct from './components/sections/SectionProduct.vue';\n\n// Elements\nimport Price from './components/elements/Price.vue';\n// Pages\nimport LeftoverEdit from './components/pages/LeftoverEdit.vue';\nimport Leftovers from './components/pages/Leftovers.vue';\nimport Product from './components/pages/Product.vue';\nimport ProductEdit from './components/pages/ProductEdit.vue';\nimport ProductRecommendation from './components/pages/ProductRecommmendation.vue';\nimport Products from './components/pages/Products.vue';\n\n// Пример функции инициализации для модуля продуктов\nfunction initializeProducts(app, store, router, options = {}) {\n  const route = options.route || 'Home';\n\n  const routesProducts = createProductRoutes();\n\n  router.addRoute(route, routesProducts);\n\n  store.addStore('categories', storeCategories);\n  store.addStore('leftovers', storeLeftovers);\n  store.addStore('products', storeProducts);\n}\n\nconst ModuleProducts = {\n  initialize: initializeProducts,\n  views: {\n    store: {\n      storeCategories,\n      storeLeftovers,\n      storeProducts,\n    },\n    router: {\n      createProductRoutes,\n    },\n    components: {\n      // Elements\n      Price,\n      // Blocks\n      ProductImages,\n      CardCategory,\n      CardProduct,\n      CardLeftover,\n      Image360,\n      CardPosition,\n      // Sections\n      SectionProduct,\n      HeroRecommendation,\n      FilterProducts,\n      EditVariants,\n      ProductsPopular,\n      // Pages\n      Product,\n      ProductEdit,\n      LeftoverEdit,\n      ProductRecommendation,\n      Products,\n      Leftovers,\n      // Layouts\n    },\n  },\n};\n\nexport {\n  CardCategory,\n  CardLeftover,\n  CardPosition,\n  CardProduct,\n  LeftoverEdit,\n  EditVariants,\n  FilterProducts,\n  HeroRecommendation,\n  Image360,\n  // Blocks\n  ProductImages,\n  Leftovers,\n  ProductsPopular,\n  // Elements\n  Price,\n  // Pages\n  Product,\n  ProductEdit,\n  ProductRecommendation,\n  Products,\n  // Sections\n  SectionProduct,\n};\n\nexport default ModuleProducts;\n",
            "name": "products.client.js",
            "size": 2944,
            "type": "source"
          },
          {
            "path": "../../src/modules/products/products.server.js",
            "relativePath": "modules/products/products.server.js",
            "extension": ".js",
            "content": "import CategoryController from './controllers/categories.controller.js';\nimport LeftoverController from './controllers/leftovers.controller.js';\nimport ProductController from './controllers/products.controller.js';\nimport CategoryModel from './models/category.model.js';\nimport LeftoverModel from './models/leftover.model.js';\nimport ProductModel from './models/product.model.js';\nimport categoriesRoutes from './routes/categories.routes.js';\nimport leftoversRoutes from './routes/leftovers.routes.js';\nimport productsRoutes from './routes/products.routes.js';\nfunction initializeProduct(app, db, origins, publicPath) {\n  // Настраиваем модели в объекте базы данных\n  db.product = ProductModel(db);\n  db.category = CategoryModel(db);\n  db.leftover = LeftoverModel(db);\n  // Настраиваем маршруты, если объект приложения передан\n  if (app) {\n    productsRoutes(app, db, origins, publicPath);\n    categoriesRoutes(app, db, origins, publicPath);\n    leftoversRoutes(app, db, origins, publicPath);\n  }\n}\nexport const models = {\n  ProductModel,\n  CategoryModel,\n  LeftoverModel,\n};\nexport const routes = {\n  productsRoutes,\n  categoriesRoutes,\n  leftoversRoutes,\n};\nexport const controllers = {\n  ProductController,\n  CategoryController,\n  LeftoverController,\n};\nexport { initializeProduct as initialize };\nexport default {\n  initialize: initializeProduct,\n  models,\n  routes,\n  controllers,\n};\n",
            "name": "products.server.js",
            "size": 1389,
            "type": "source"
          }
        ],
        "router": {
          "_files": [
            {
              "path": "../../src/modules/products/router/categories.router.js",
              "relativePath": "modules/products/router/categories.router.js",
              "extension": ".js",
              "content": "import * as validationAuth from '@martyrs/src/modules/auth/views/middlewares/auth.validation.js';\n\nconst categoriesRoutes = [\n  {\n    path: 'categories',\n    name: 'Categories',\n    meta: {\n      title: {\n        en: 'Categories',\n        ru: 'Категории',\n      },\n    },\n    component: () => import('@martyrs/src/modules/products/components/pages/Categories.vue'),\n  },\n  {\n    path: 'categories/add',\n    name: 'Category Add',\n    meta: {\n      title: {\n        en: 'Add Category',\n        ru: 'Добавить Категорию',\n      },\n    },\n    component: () => import('@martyrs/src/modules/products/components/pages/CategoryEdit.vue'),\n  },\n  {\n    path: 'categories/:category/edit',\n    name: 'Category Edit',\n    meta: {\n      title: {\n        en: 'Edit Category',\n        ru: 'Редактировать Категорию',\n      },\n    },\n    beforeEnter: [validationAuth.requiresAuth],\n    component: () => import('@martyrs/src/modules/products/components/pages/CategoryEdit.vue'),\n  },\n];\n\nexport default categoriesRoutes;\n",
              "name": "categories.router.js",
              "size": 1002,
              "type": "source"
            },
            {
              "path": "../../src/modules/products/router/leftovers.router.js",
              "relativePath": "modules/products/router/leftovers.router.js",
              "extension": ".js",
              "content": "const productRoutes = [\n  {\n    path: 'leftovers',\n    name: 'Leftovers',\n    meta: {\n      title: {\n        en: 'Leftovers',\n        ru: 'Остатки',\n      },\n      authorize: [],\n    },\n    component: () => import(/* webpackChunkName: 'ProductsLeftovers' */ '@martyrs/src/modules/products/components/pages/Leftovers.vue'),\n  },\n  {\n    path: 'leftovers/add',\n    name: 'LeftoverAdd',\n    meta: {\n      title: {\n        en: 'Leftovers Add',\n        ru: 'Управление Остатками',\n      },\n      authorize: [],\n    },\n    component: () => import(/* webpackChunkName: 'LeftoverEdit' */ '@martyrs/src/modules/products/components/pages/LeftoverEdit.vue'),\n  },\n  {\n    path: 'leftovers/:leftover',\n    name: 'LeftoverEdit',\n    meta: {\n      title: {\n        en: 'Leftovers Edit',\n        ru: 'Управление Остатками',\n      },\n      authorize: [],\n    },\n    component: () => import(/* webpackChunkName: 'LeftoverEdit' */ '@martyrs/src/modules/products/components/pages/LeftoverEdit.vue'),\n  },\n];\n\nexport default productRoutes;\n",
              "name": "leftovers.router.js",
              "size": 1020,
              "type": "source"
            },
            {
              "path": "../../src/modules/products/router/products.router.js",
              "relativePath": "modules/products/router/products.router.js",
              "extension": ".js",
              "content": "import * as validationAuth from '@martyrs/src/modules/auth/views/middlewares/auth.validation.js';\n\nexport function createProductRoutes(prefix = '', options = {}) {\n  const nameWithPrefix = name => (prefix ? `${prefix}${name}` : name);\n\n  const routes = {\n    path: options.basePath || 'products',\n    children: [\n      {\n        path: '',\n        name: nameWithPrefix('Products'),\n        meta: {\n          title: {\n            en: 'Products',\n            ru: 'Товары',\n          },\n          authorize: options.productsAuthorize || [],\n        },\n        component: () => import(/* webpackChunkName: 'Products' */ '@martyrs/src/modules/products/components/pages/Products.vue'),\n      },\n      {\n        path: 'add',\n        name: nameWithPrefix('ProductAdd'),\n        meta: {\n          title: {\n            en: 'Add Product',\n            ru: 'Добавить товар',\n          },\n          authorize: options.addProductAuthorize || [],\n        },\n        component: () => import('@martyrs/src/modules/products/components/pages/ProductEdit.vue'),\n      },\n      {\n        path: ':product',\n        name: nameWithPrefix('Product'),\n        meta: {\n          title: {\n            en: 'Product',\n            ru: 'Продукт',\n          },\n          showShopCart: true,\n        },\n        component: () => import('@martyrs/src/modules/products/components/pages/Product.vue'),\n      },\n      {\n        path: ':product/edit',\n        name: nameWithPrefix('ProductEdit'),\n        meta: {\n          title: {\n            en: 'Edit Product',\n            ru: 'Редактировать продукт',\n          },\n          authorize: options.editProductAuthorize || [],\n        },\n        beforeEnter: [validationAuth.requiresAuth],\n        component: () => import('@martyrs/src/modules/products/components/pages/ProductEdit.vue'),\n      },\n      {\n        path: 'recommendation',\n        name: nameWithPrefix('ProductRecommmendation'),\n        meta: {\n          title: {\n            en: 'Product Recommmendation',\n            ru: 'Рекомендации продукта',\n          },\n          header_theme: 'dark',\n          footer_theme: 'dark',\n        },\n        component: () => import(/* webpackChunkName: 'Product Recommmendation' */ '@martyrs/src/modules/products/components/pages/ProductRecommmendation.vue'),\n        props: route => ({ mood: route.query.mood }),\n      },\n    ],\n  };\n\n  return routes;\n}\n",
              "name": "products.router.js",
              "size": 2362,
              "type": "source"
            }
          ]
        },
        "routes": {
          "_files": [
            {
              "path": "../../src/modules/products/routes/categories.routes.js",
              "relativePath": "modules/products/routes/categories.routes.js",
              "extension": ".js",
              "content": "import jwtFactory from '@martyrs/src/modules/auth/controllers/middlewares/authJwt.js';\nimport globalsabac from '@martyrs/src/modules/globals/controllers/classes/globals.abac.js';\nimport controllerFactory from '../controllers/categories.controller.js';\nimport verifierFactory from '../middlewares/categories.verifier.js';\nconst { getInstance } = globalsabac;\nexport default (function (app, db) {\n  const jwt = jwtFactory(db);\n  const verifier = verifierFactory(db);\n  const abac = getInstance(db);\n  const controller = controllerFactory(db);\n  // Маршруты API\n  app.get('/api/categories', jwt.verifyToken(true), verifier.verifyQuery, controller.read);\n  app.post('/api/categories/create', jwt.verifyToken(), verifier.verifyBody, verifier.checkCategoryExistOrNot, abac.middleware('category', 'create'), controller.create);\n  app.post('/api/categories/update', jwt.verifyToken(), verifier.verifyBody, verifier.loadCategoryForUpdate, abac.middleware('category', 'edit'), controller.update);\n  app.post('/api/categories/updateOrder', jwt.verifyToken(), verifier.verifyOrderBody, abac.middleware('category', 'edit'), controller.updateOrder);\n  app.post('/api/categories/delete', jwt.verifyToken(), verifier.verifyDeleteBody, verifier.loadCategoryForDelete, abac.middleware('category', 'delete'), controller.delete);\n});\nexport { controllerFactory };\n",
              "name": "categories.routes.js",
              "size": 1344,
              "type": "source"
            },
            {
              "path": "../../src/modules/products/routes/leftovers.routes.js",
              "relativePath": "modules/products/routes/leftovers.routes.js",
              "extension": ".js",
              "content": "import controllerFactory from '../controllers/leftovers.controller.js';\nexport default (function (app, db) {\n  const controller = controllerFactory(db);\n\n  app.get('/leftovers', controller.read);\n  \n  app.get('/leftovers/:_id', controller.get);\n\n  app.post('/leftovers/:_id', controller.update);\n\n  app.post('/leftovers', controller.create);\n\n  app.delete('/leftovers/:_id', controller.delete);\n\n});\n",
              "name": "leftovers.routes.js",
              "size": 400,
              "type": "source"
            },
            {
              "path": "../../src/modules/products/routes/products.routes.js",
              "relativePath": "modules/products/routes/products.routes.js",
              "extension": ".js",
              "content": "import controllerFactory from '../controllers/products.controller.js';\nexport default (function (app, db, allowedOrigins) {\n  const controller = controllerFactory(db);\n  // (C) Create product\n  app.post('/api/products/create', controller.Create);\n  // (R) Read products\n  app.get('/api/products/read', controller.Read);\n  // (U) Update product\n  app.post('/api/products/:_id', controller.Update);\n  // (D) Delete product\n  app.delete('/api/products/:_id', controller.Delete);\n  app.post('/api/product/recommended', controller.getProductRecommendation);\n});\n",
              "name": "products.routes.js",
              "size": 557,
              "type": "source"
            }
          ]
        },
        "store": {
          "_files": [
            {
              "path": "../../src/modules/products/store/categories.js",
              "relativePath": "modules/products/store/categories.js",
              "extension": ".js",
              "content": "// Dependencies\nimport { setError } from '@martyrs/src/modules/globals/views/store/globals.js';\nimport { reactive, watch } from 'vue';\n\nimport $axios from '@martyrs/src/modules/globals/views/utils/axios-instance.js';\n\n// State\nconst state = reactive({\n  all: [],\n\n  filter: {\n    status: null,\n    search: null,\n  },\n  current: {\n    order: 1,\n    photo: null,\n    name: '',\n    url: '',\n    status: 'draft',\n    creator: null,\n    owner: null,\n    parent: null,\n    children: [],\n    filters: [],\n    localization: [],\n  },\n});\n\n// Methods\nconst actions = {\n  async read(options = {}) {\n    try {\n      const response = await $axios.get('/api/categories', { params: options });\n\n      if (options.url) {\n        state.current = { ...response.data[0] };\n        return Promise.resolve(response.data[0]);\n      } else {\n        return Promise.resolve(response.data);\n      }\n    } catch (error) {\n      setError(error);\n      return Promise.reject(error);\n    }\n  },\n\n  async create(category) {\n    try {\n      const response = await $axios.post('/api/categories/create', category);\n      state.all.push(response.data);\n      return Promise.resolve(response.data);\n    } catch (error) {\n      setError(error);\n      return Promise.reject(error);\n    }\n  },\n\n  async update(category) {\n    try {\n      const response = await $axios.post('/api/categories/update', category);\n      return Promise.resolve(response.data);\n    } catch (error) {\n      setError(error);\n      return Promise.reject(error);\n    }\n  },\n\n  // Method for updating order of multiple categories\n  async updateOrder(categories) {\n    try {\n      const response = await $axios.post('/api/categories/updateOrder', {\n        categories: categories,\n      });\n\n      return Promise.resolve(response.data);\n    } catch (error) {\n      setError(error);\n      return Promise.reject(error);\n    }\n  },\n\n  async delete(url) {\n    try {\n      await $axios.post('/api/categories/delete', { url });\n      state.all = state.all.filter(c => c.url !== url);\n      return Promise.resolve();\n    } catch (error) {\n      setError(error);\n      return Promise.reject(error);\n    }\n  },\n\n  clean() {\n    state.current = {\n      order: 1,\n      name: '',\n      url: '',\n      status: 'draft',\n      parent: null,\n      children: [],\n      filters: [],\n      localization: [],\n    };\n  },\n};\n\nconst history = [];\nhistory.push(state);\n\nwatch(\n  state,\n  newState => {\n    history.push(newState);\n  },\n  { deep: true }\n);\n\nexport { actions, state };\n",
              "name": "categories.js",
              "size": 2494,
              "type": "source"
            },
            {
              "path": "../../src/modules/products/store/leftovers.js",
              "relativePath": "modules/products/store/leftovers.js",
              "extension": ".js",
              "content": "// leftovers.js - Updated store\nimport { reactive, watch } from 'vue';\nimport { setError } from '@martyrs/src/modules/globals/views/store/globals.js';\nimport $axios from '@martyrs/src/modules/globals/views/utils/axios-instance.js';\n\nconst state = reactive({\n  all: [],\n  current: {\n    storage: null,\n    type: '',\n    comment: null,\n    order: null,\n    positions: [],\n  },\n  settings: {\n    columnVisibility: {\n      product: true,\n      sku: true,\n      category: true,\n      supplier: true,\n      stock: true,\n      price: true\n    },\n    sortBy: 'available',\n    sortDirection: 'asc'\n  }\n});\n\nconst actions = {\n  // Using existing methods as instructed\n  async read(options) {\n    try {\n      const response = await $axios.get('/leftovers', { params: options });\n      state.all = response.data;\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n  \n  async fetch(_id) {\n    try {\n      const response = await $axios.get('/leftovers/' + _id);\n      state.current = response.data;\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n  \n  async create({ organization, type, order, positions, creator, owner, comment }) {\n    try {\n      const response = await $axios.post('/leftovers', {\n        organization,\n        type,\n        order,\n        positions,\n        creator,\n        owner,\n        comment,\n      });\n      state.all.push(response.data);\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n  \n  async update(leftover) {\n    try {\n      const response = await $axios.post('/leftovers/' + leftover._id, leftover);\n      state.current = response.data;\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n  \n  async delete(_id) {\n    try {\n      const response = await $axios.delete('/leftovers/' + _id);\n      state.all.splice(\n        state.all.findIndex(l => l._id == _id),\n        1\n      );\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  }\n};\n\nconst mutations = {\n  resetStock() {\n    state.current = {\n      storage: null,\n      type: '',\n      comment: null,\n      order: null,\n      positions: [],\n    };\n  },\n  \n  updateColumnSettings(settings) {\n    state.settings.columnVisibility = { ...state.settings.columnVisibility, ...settings };\n  }\n};\n\nconst history = [];\nhistory.push(state);\n\nwatch(state, newState => {\n  history.push(newState);\n});\n\nexport { actions, mutations, state };",
              "name": "leftovers.js",
              "size": 2565,
              "type": "source"
            },
            {
              "path": "../../src/modules/products/store/products.js",
              "relativePath": "modules/products/store/products.js",
              "extension": ".js",
              "content": "/////////////////////////////\n// DEPENDENCIES\n/////////////////////////////\nimport { reactive, watch } from 'vue';\n// Globals\nimport { setError } from '@martyrs/src/modules/globals/views/store/globals.js';\n// Setup Axios\nimport $axios from '@martyrs/src/modules/globals/views/utils/axios-instance.js';\n/////////////////////////////\n// STATE\n/////////////////////////////\nconst state = reactive({\n  all: [],\n  current: {\n    recommendation: false,\n    category: [],\n    status: 'unpublished',\n    listing: 'sale',\n    attributes: [],\n    images: [],\n    files: [],\n    image3d: false,\n    name: '',\n    sale: 0,\n    price: 0,\n    price_cost: 0,\n    localization: [],\n    variants: [],\n    discounts: [],\n    ingredients: [],\n    description: '',\n  },\n  filter: {\n    active: false,\n    class: 'mobile-only',\n    selected: {},\n    options: [\n      {\n        title: 'Price',\n        value: 'price',\n        options: [\n          { label: 'Pickup', value: 'pickup' },\n          { label: 'Courier', value: 'courier' },\n          { label: 'Post', value: 'post' },\n        ],\n      },\n    ],\n  },\n  sort: {\n    param: 'distance',\n    order: 'asc',\n    options: [\n      {\n        label: 'Distance',\n        value: 'distance',\n      },\n      {\n        label: 'Popularity',\n        value: 'views',\n      },\n      {\n        label: 'Products',\n        value: 'numberOfProducts',\n      },\n    ],\n  },\n});\n\n/////////////////////////////\n// ACTIONS\n/////////////////////////////\nconst actions = {\n  async create(product) {\n    return await $axios.post('/api/products/create', product).then(\n      response => {\n        set(response.data, 'current');\n        return Promise.resolve(response.data);\n      },\n      error => {\n        setError(error);\n        return Promise.reject(error);\n      }\n    );\n  },\n\n  async read(options = {}) {\n\n    try {\n      const response = await $axios.get('/api/products/read', { params: options });\n\n      if (options._id) {\n        state.current = { ...response.data[0] };\n        return Promise.resolve(response.data[0]);\n      } else {\n        return Promise.resolve(response.data);\n      }\n      return Promise.resolve(response.data);\n    } catch (error) {\n      setError(error);\n      return Promise.reject(error);\n    }\n  },\n\n  async update(_id, product) {\n    return await $axios.post('/api/products/' + _id, product).then(\n      response => {\n        return Promise.resolve(response.data);\n      },\n      error => {\n        setError(error);\n        return Promise.reject(error);\n      }\n    );\n  },\n\n  async deleteProduct(_id) {\n    return await $axios.delete('/api/products/' + _id).then(\n      response => {\n        return Promise.resolve(response.data);\n      },\n      error => {\n        setError(error);\n        return Promise.reject(error);\n      }\n    );\n  },\n\n  async submitMood(presetMood = null) {\n    return $axios.post('/api/product/recommended', { mood: presetMood }).then(\n      response => {\n        state.current = response.data.product;\n        state.current.recommendation = response.data.recommendationText;\n        return Promise.resolve(response.data);\n      },\n      error => {\n        setError(error);\n        return Promise.reject(error);\n      }\n    );\n  },\n\n  async fetchProducts() {\n    return await $axios.get(`/api/products/read`).then(\n      products => {\n        state.all = products.data;\n        return Promise.resolve(products.data);\n      },\n      error => {\n        setError(error);\n        return Promise.reject(error);\n      }\n    );\n  },\n\n  async fetchProductsPopular() {\n    return await $axios.get(`/api/products/popular`).then(\n      products => {\n        state.popular = products.data;\n        return Promise.resolve(products.data);\n      },\n      error => {\n        setError(error);\n        return Promise.reject(error);\n      }\n    );\n  },\n\n  async fetchProductsPublished() {\n    return await $axios.get(`/api/products`).then(\n      products => {\n        let publishedProduct = products.data.filter(function (product, index) {\n          return product.status !== 'unpublished';\n        });\n\n        state.all = publishedProduct;\n        state.filtered = publishedProduct.slice();\n        state.filteredPrice = state.filtered;\n\n        state.filteredPrice.sort(function (l, r) {\n          return l[state.sort.current] > r[state.sort.current] ? (state.sort.ascending ? 1 : -1) : l[state.sort.current] < r[state.sort.current] ? (state.sort.ascending ? -1 : 1) : 0;\n        });\n\n        return Promise.resolve(products.data);\n      },\n      error => {\n        setError(error);\n        return Promise.reject(error);\n      }\n    );\n  },\n\n  async fetchProductPopular() {\n    return await $axios.get(`/api/products`).then(\n      products => {\n        state.all = products.data.slice(1, 5);\n        return Promise.resolve(products.data.slice(1, 5));\n      },\n      error => {\n        setError(error);\n        return Promise.reject(error);\n      }\n    );\n  },\n};\n\nconst mutations = {\n  resetProduct(product) {\n    state.current = {\n      recommendation: false,\n      category: [],\n      status: 'unpublished',\n      attributes: [],\n      images: [],\n      files: [],\n      image3d: false,\n      name: '',\n      sale: 0,\n      price: 0,\n      price_cost: 0,\n      price_currency: '$',\n      localization: [],\n      variants: [],\n      discounts: [],\n      ingredients: [],\n      description: '',\n    };\n  },\n};\n\nfunction set(product, property) {\n  state[property] = product;\n}\n\n/////////////////////////////\n// GETTERS\n/////////////////////////////\nconst getters = {};\n\n/////////////////////////////\n// UTILS\n/////////////////////////////\n\n/////////////////////////////\n// HISTORY\n/////////////////////////////\nconst history = [];\nhistory.push(state);\n\n/////////////////////////////\n// WATCH\n/////////////////////////////\nwatch(state, (newState, oldState) => {\n  history.push(newState);\n});\n\n/////////////////////////////\n// Module Export\n/////////////////////////////\nexport { actions, getters, mutations, state };\n",
              "name": "products.js",
              "size": 5973,
              "type": "source"
            }
          ]
        },
        "components": {
          "blocks": {
            "_files": [
              {
                "path": "../../src/modules/products/components/blocks/CardCategory.vue",
                "relativePath": "modules/products/components/blocks/CardCategory.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"flex-v-center bg-light pd-small radius-small flex-column flex\">\n    <div class=\"w-100 flex-v-center flex-nowrap gap-thin flex\">\n      <img v-if=\"category.photo\" class=\"i-big radius-small object-fit-contain bg-white\" :src=\"(FILE_SERVER_URL || '') + category.photo\"/>\n      <h4 class=\"my-handle word-break t-truncate w-100 w-max-100 mn-r-auto\">{{category.name}}</h4>\n\n      <router-link\n       :to=\"{\n          name: 'Category Edit', \n          params: { \n            _id: route.params._id,\n            category: category.url\n          } \n        }\"\n        class=\"\n          i-semi\n          cursor-pointer \n          card-page-actions\n          radius-extra pd-micro bg-second\n          flex-child-default\n        \"\n      >\n        <IconEdit\n          class=\"w-100 h-100\" \n          classes=\"fill-white\"\n        />\n      </router-link>\n\n      <button\n        @click=\"deleteCategory(category)\"\n        class=\"\n          i-semi\n          cursor-pointer \n          card-page-actions\n          radius-extra pd-micro bg-second\n          flex-child-default\n        \"\n      >\n        <IconDelete\n          class=\"w-100 h-100\"\n          :fill=\"'white'\"\n        />\n      </button>\n    </div>\n\n    <!-- <p v-if=\" category.children.length > 0\" class=\"w-100\">Subcategories:</p> -->\n   <!--  <CardCategory\n      v-for=\"(subcategory,index) in category.children\"\n      :key=\"subcategory._id\"\n      :category=\"subcategory\" \n      class=\"pd-l-small bg-white w-100\"\n    /> -->\n\n   </div>\n</template>\n\n\n<script setup>\nimport { toRef, onMounted, defineEmits } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\n\nimport CardCategory from './CardCategory.vue'\n\nimport IconEdit from '@martyrs/src/modules/icons/navigation/IconEdit.vue'\nimport IconAdd from '@martyrs/src/modules/icons/navigation/IconAdd.vue'\nimport IconDelete from '@martyrs/src/modules/icons/navigation/IconDelete.vue'\n\n\nconst props = defineProps({\n  category: Object,\n});\n\nconst emits = defineEmits(['delete']);\n\nconst route = useRoute();\nconst router = useRouter();\n\nconst deleteCategory = (category) => {\n  emits('delete', category);\n};\n\n</script>\n\n\n\n<style lang=\"scss\">\n.card-title {\n  .card-page-actions {\n    display: none;\n  }\n\n  &:hover {\n    .card-page-actions {\n      display: block;\n    }\n  }\n}\n</style>\n",
                "name": "CardCategory.vue",
                "size": 2295,
                "type": "source"
              },
              {
                "path": "../../src/modules/products/components/blocks/CardLeftover.vue",
                "relativePath": "modules/products/components/blocks/CardLeftover.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"flex-column pos-relative flex-wrap\">\n\n    <CardHeader \n      :entity=\"leftover\"\n      :entityType=\"'leftover'\"\n      :user=\"user\"\n      :owner=\"leftover.creator\" \n      :creator=\"leftover.creator\"\n      :date=\"leftover.createdAt\"\n    />\n\n    <router-link \n      :to=\"{\n        name: 'LeftoverEdit', \n        params: {\n          _id: leftover.organization,\n          leftover: leftover._id\n        }\n      }\" \n      class=\"\n        cursor-pointer \n        pos-absolute pos-t-regular pos-r-regular\n        radius-extra pd-thin bg-second\n      \"\n    >\n      <IconEdit\n        class=\"i-regular\"\n        classes=\"fill-white\"\n      />\n    </router-link>\n\n    <div class=\"mn-t-small w-100 bg-white radius-small pd-small spoiler\">\n      <div @click=\"spoiler = !spoiler\"  class=\"flex-v-center flex\">\n        <span \n          class=\"flex-child flex-child-shrink-0 capitalize w-max mn-r-thin t-medium radius-medium pd-b-nano pd-t-nano pd-r-thin pd-l-thin\"\n          :class=\"{\n            'bg-green': leftover.type === 'stock-in',\n            'bg-red': leftover.type === 'stock-out'\n          }\"\n        >\n          {{leftover.type}}\n        </span>\n        <span class=\"flex-child flex-child-shrink-0\">Positions {{leftover.positions.length}}</span>\n        <span v-if=\"leftover.order\" class=\"mn-r-thin mn-l-thin t-transp\">|</span>\n        <span  class=\"flex-child flex-child-shrink-0\" v-if=\"leftover.order\">For order {{leftover.order}}</span>\n        <span v-if=\"leftover.comment\" class=\"mn-r-thin mn-l-thin t-transp\">|</span>\n        <p v-if=\"leftover.comment\" class=\"t-truncate\">Comment: {{leftover.comment}}</p>\n        <!-- <img loading=\"lazy\" :class=\"{ 'spoiler-active': spoiler }\" class=\"button-icon\" src=\"@/assets/icons/arrow-down-spoiler.svg\"> -->\n      </div>\n\n      <transition name=\"fade\">\n        <div v-if=\"spoiler\">\n          <div  v-for=\"position in leftover.positions\" class=\"mn-t-small w-100 mn-b-thin flex\"> \n            <div class=\" w-50 flex\">\n              <span>\n                {{position.name}}\n              </span>\n              <span class=\"mn-r-thin mn-l-thin t-transp\">|</span>\n\n              <span class=\"w-50\">\n                {{position.price}}\n                <span class=\"t-transp\">{{returnCurrency()}}</span> \n              </span>\n\n            </div>\n            \n            <div class=\"t-right w-50\">\n              {{position.quantity}}\n              <span class=\"t-transp\">{{position.type}}</span> \n            </div>\n          </div> \n        </div>\n      </transition>\n    </div>\n    \n\n  </div>\n</template>\n\n\n<script setup=\"props\">\n\timport { ref } from 'vue'\n\timport { useRouter } from 'vue-router'\n\n  import CardHeader  from '@martyrs/src/modules/globals/views/components/blocks/CardHeader.vue'\n\n  // Icons\n  import IconEdit from '@martyrs/src/modules/icons/navigation/IconEdit.vue'\n  import PlaceholderUserpic from '@martyrs/src/modules/icons/placeholders/PlaceholderUserpic.vue'\n\n\tconst router = useRouter()\n\n\tconst props = defineProps({\n\t  leftover: Object,\n\t});\n\n\n\tconst spoiler = ref(true)\n\n  function declOfNum(number, words) {  \n    return words[(number % 100 > 4 && number % 100 < 20) ? 2 : [2, 0, 1, 1, 1, 2][(number % 10 < 5) ? number % 10 : 5]];\n  }\n\t\n</script>\n\n<style lang=\"scss\" scoped>\n.shop-cart-item {\n\t&:first-of-type { padding-top: 0;}\n}\n\n.spoiler-active {\n  transform: rotate(180deg);\n}\n</style>\n\n\n",
                "name": "CardLeftover.vue",
                "size": 3374,
                "type": "source"
              },
              {
                "path": "../../src/modules/products/components/blocks/CardPosition.vue",
                "relativePath": "modules/products/components/blocks/CardPosition.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"bg-white radius-small pd-small flex-nowrap flex-v-center flex gap-thin\">\n    <!-- Thumbnail image -->\n    <div v-if=\"showThumbnail\" class=\"aspect-1x1 h-3r flex-child-default radius-small o-hidden\">\n      <img\n        v-if=\"image && image.length > 0\"\n        :src=\"(FILE_SERVER_URL || '') + image\"\n        alt=\"Item image\"\n        class=\"w-100 h-100 object-fit-cover\"\n      />\n      <PlaceholderImage v-else class=\"w-100 h-100\" />\n    </div>\n    \n    <!-- Item details -->\n    <div class=\"mn-micro-negative flex flex-column w-100 o-hidden\">\n      <p class=\"w-100 pd-micro t-trim trimmed capitalize t-medium\">{{ name || 'Unnamed Product' }}</p>\n      \n      <div class=\"flex pd-micro flex-v-center gap-micro w-max \">\n      \t<span v-if=\"title\" :class=\"title_class\" class=\"t-second  d-inline-block t-demi\">{{title}}</span>\n      \t<span v-if=\"subtitle\" class=\"t-transp p-small d-inline-block t-medium\">{{ subtitle }}</span>\n      </div>\n    \t<slot></slot>\n    </div>\n    <!-- <p>\n     \n\n      <span class=\"p-small t-transp\">\n        <template v-if=\"product.quantity\">{{returnCurrency() }}{{product.price}} </template>\n        × \n        <template v-if=\"product.listing === 'rent' && rentDates.start && rentDates.end\">\n          {{ rentalDays }} days\n        </template>\n        \n        <template v-else>\n          {{ product.quantity || 0 }} {{ product.unit || 'pcs' }}\n        </template>\n      </span>\n    </p>  -->\n    \n    <!-- Actions -->\n    <div class=\"flex gap-thin\">\n      <template v-for=\"(action, index) in actions\" :key=\"index\">\n        <div \n          :class=\"action.class || 'bg-light'\"\n          class=\"radius-small pd-small flex-center flex aspect-1x1 cursor-pointer hover-scale-1\"\n          @click=\"() => action.handler(item, index)\"\n        >\n          <component\n            :is=\"action.component\"\n            class=\"i-regular\"\n          />\n        </div>\n      </template>\n      <slot name=\"actions\"></slot>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { defineProps } from 'vue';\nimport PlaceholderImage from '@martyrs/src/modules/icons/placeholders/PlaceholderImage.vue';\nimport { useGlobalMixins } from '@martyrs/src/modules/globals/views/mixins/mixins.js';\n\nconst { formatPrice } = useGlobalMixins();\n\nconst props = defineProps({\n\timage: {\n    type: String,\n  },\n  name: {\n    type: String,\n  },\n  title: {\n    type: String,\n  },\n  title_class: {\n  \ttype: Array\n  },\n  subtitle: {\n    type: String,\n  },\n  showThumbnail: {\n    type: Boolean,\n    default: true\n  },\n  actions: {\n    type: Array,\n    default: () => []\n    // Expected format:\n    // [\n    //   {\n    //     component: IconEdit,\n    //     handler: (item, index) => {},\n    //     class: 'bg-light' // optional custom class\n    //   }\n    // ]\n  }\n});\n</script>",
                "name": "CardPosition.vue",
                "size": 2780,
                "type": "source"
              },
              {
                "path": "../../src/modules/products/components/blocks/CardProduct.vue",
                "relativePath": "modules/products/components/blocks/CardProduct.vue",
                "extension": ".vue",
                "content": "<template>\n\t<div \n\t\tclass=\"\n\t\t\tradius-medium \n\t\t\tcols-1\n\t\t\to-hidden\n\t\t\tpos-relative\n\t\t\"\n\t>\n\t\t<!-- Edit Button -->\n\t\t<router-link\n\t\t\tv-if=\"access\"\n      :to=\"organization ? { name: 'Organization_ProductEdit', params: { id: organization, product: product._id } } : { name: 'ProductEdit', params: { product: product._id } }\"\n      class=\"\n      \tz-index-2\n        cursor-pointer \n        pos-absolute pos-t-regular pos-r-regular\n        radius-extra pd-thin bg-second\n      \"\n    >\n      <IconEdit\n        class=\"i-regular\"\n        classes=\"fill-white\"\n      />\n    </router-link>\n\n\t\t<!-- Product Image Sqaure -->\n\t\t<div \n\t\t\tclass=\"o-hidden d-flex  pd-thin pd-b-zero radius-medium o-hidden w-100 pos-relative aspect-1x1\"\n\t\t>\n\t\t\t<div class=\"w-100  h-100 pos-relative\">\n\t\t\t\t<!-- Image Wrappers  -->\n\t\t\t\t<img loading=\"lazy\" \n\t\t\t\t\tv-if=\"product.images[0]\" \n\t\t\t\t\t:src=\"(FILE_SERVER_URL || '') + product.images[0].split('/').slice(0, -1).join('/') + '/thumbnail_' + product.images[0].split('/').pop()\"\n\t\t\t\t\tclass=\"pos-absolute object-fit-cover radius-small h-max-100 h-100  w-100\"\n\t\t\t\t>\n\n\t\t\t\t<PlaceholderImage\n\t\t\t\t\tv-else\n\t\t\t\t\tclass=\"radius-medium h-100 w-100\"\n\t\t\t\t/>\n\t\t\t\t<span v-if=\"product.available <= 0 && product.listing !== 'rent'\" class=\"pos-absolute bg-white t-black pd-thin radius-medium p-small t-medium pos-t-medium pos-l-medium\">Out of Stock</span>\n\t\t\t\t<THC v-if=\"product.attributes?.length > 0 && product.attributes[1]?.name === 'THC'\" :product=\"product\" />\n\t\t\t</div>\n\t\t</div>\n\n\t\t<!-- Product Info Start -->\n\t\t<div  class=\"pd-small cols-1 t-left\">\n\t\t\t<!-- Detail -->\n\t\t\t<p \n\t\t\t\tv-if=\"product.attributes.length > 0\"  \n\t\t\t\tclass=\"t-semi t-transp p-small mn-b-micro\"\n\t\t\t>\n\t\t\t\t{{product.attributes[0].value}}\n\t\t\t</p>\n\t\t\t<!-- Name -->\n\t\t\t<span style=\" hyphens: auto;\" class=\"word-break t-truncate p-medium mn-b-thin w-100 w-max-100 \">\n\t\t\t\t{{product.name}}\n\t\t\t</span>\n\n\t\t\t<p \n\t\t\t\tv-if=\"product.description && !product.translations && product.listing !== 'rent'\" \n\t\t\t\tclass=\"mn-b-small t-transp p-small\"\n\t\t\t>\n\t\t\t\t{{product.description.substring(0, 99)}}...\n\t\t\t</p>\n\n\t\t\t<div class=\"flex-v-center flex-nowrap flex\">\n\t\t\t\t<Price \n\t\t\t\t\t:product=\"product\" \n\t\t\t\t\tsize=\"small\" \n\t\t\t\t\tclass=\"bg-white h-100 p-medium flex flex-center pd-r-small pd-l-small radius-small mn-r-auto\" \n\t\t\t\t/>\n\t\t\t\t\n\t\t\t\t<button\n\t\t\t\t\tv-if=\"user\"\n\t\t      class=\"\n\t\t        cursor-pointer \n\t\t        radius-extra pd-thin bg-main\n\t\t      \"\n\t\t    >\n\t\t      <IconShopcartAdd\n\t\t\t\t\t\tclass=\"icon-button-main i-medium\"\n\t\t\t\t\t/>\n\t\t    </button>\n\t\t  </div>\n\t\t</div>\n\n\t</div>\n\n</template>\n\n\n<script setup=\"props\">\n\timport {computed } from 'vue'\n\timport { useI18n }    from 'vue-i18n'\n\n\timport IconEdit from '@martyrs/src/modules/icons/navigation/IconEdit.vue'\n\timport IconShopcartAdd from '@martyrs/src/modules/icons/actions/IconShopcartAdd.vue'\n\n\timport THC from '@martyrs/src/modules/products/components/elements/THC.vue'\n\timport Price from '@martyrs/src/modules/products/components/elements/Price.vue'\n\n\timport PlaceholderImage from '@martyrs/src/modules/icons/placeholders/PlaceholderImage.vue'\n\n\tconst props = defineProps({\n\t\tproduct: {\n\t\t\ttype: Object\n\t\t},\n\t\taccess: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\t\torganization: {\n\t\t\ttype: String\n\t\t},\n\t\tuser: {\n\t\t\ttype: [Object, String] \n\t\t},\n\t\ttype: {\n\t\t\ttype: Object\n\t\t}\n\t})\n\n  const { t } = useI18n()\n</script>\n\n<style lang=\"scss\">\n.word-break {\n  width: 100%; \n  overflow: auto;\n  overflow-wrap: break-word;\n  word-break: break-all;\n  white-space: -moz-pre-wrap;\n  white-space: -hp-pre-wrap;\n  white-space: -o-pre-wrap;\n  white-space: -pre-wrap; \n  white-space: pre-wrap; \n  white-space: pre-line; \n  word-wrap: break-word;\n}\n</style>\n\n\n",
                "name": "CardProduct.vue",
                "size": 3644,
                "type": "source"
              },
              {
                "path": "../../src/modules/products/components/blocks/ProductDiscounts.vue",
                "relativePath": "modules/products/components/blocks/ProductDiscounts.vue",
                "extension": ".vue",
                "content": "<template>\n  <div v-if=\"discounts && discounts.length\" class=\"mn-t-large mn-b-large\">\n    <div class=\"mn-b-small flex-nowrap flex flex-v-center\">\n      <IconDiscount class=\"mn-r-micro i-medium\"/>\n      <p class=\"t-medium\">Special Offers</p>\n    </div>\n\n    <div class=\"flex flex-column flex-wrap gap-thin\">\n      <div \n        v-for=\"(discount, index) in discounts\" \n        :key=\"index\" \n        class=\"discount-card pd-medium radius-medium br-1px br-solid br-light cursor-pointer hover-scale-1\"\n        @click=\"selectDiscount(discount)\"\n      >\n        <div class=\"flex flex-wrap gap-thin flex-v-center w-100\">\n\n          <Tooltip :text=\"discount.description || 'No description'\">\n            <span class=\"discount-name t-semi p-medium\">{{ discount.name }}</span>\n          </Tooltip>\n\n          <span class=\"t-main p-medium\">\n            {{returnCurrency()}}{{ discount.value }} per {{ currentVariant?.quantity || 1 }}{{ currentVariant?.unit || pcs }}\n          </span>\n\n        </div>\n        \n        <p v-if=\"discount.description\" class=\"t-small mn-t-thin t-transp\">{{ discount.description }}</p>\n\n        <div class=\"mn-t-small\"><Chips v-if=\"getConditionsAsChips.length > 0\" class=\"\" :chips=\"getConditionsAsChips(discount)\" /></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed } from 'vue';\nimport IconDiscount from '@martyrs/src/modules/icons/entities/IconDiscount.vue'\nimport Chips from '@martyrs/src/components/Chips/Chips.vue';\nimport Tooltip from '@martyrs/src/components/Tooltip/Tooltip.vue';\n\nconst props = defineProps({\n  discounts: { \n    type: Array, \n    default: () => [] \n  },\n  regularPrice: { \n    type: [String, Number], \n    default: 0 \n  },\n  selectedVariant: {\n    type: Object,\n    default: null\n  },\n  productVariants: {\n    type: Array,\n    default: () => []\n  }\n});\n\nconst emit = defineEmits(['select-discount']);\n\n// Helper to determine if a discount has date conditions\nconst hasDateCondition = (discount) => {\n  return discount.date && (discount.date.start || discount.date.end);\n};\n\n// Helper to determine if a discount has time conditions\nconst hasTimeCondition = (discount) => {\n  return discount.time && (discount.time.start || discount.time.end);\n};\n\n// Format date range for display\nconst formatDateRange = (dateRange) => {\n  if (!dateRange) return '';\n  \n  const start = dateRange.start ? new Date(dateRange.start).toLocaleDateString() : 'Anytime';\n  const end = dateRange.end ? new Date(dateRange.end).toLocaleDateString() : 'No end date';\n  \n  return `${start}-${end}`;\n};\n\n// Format time range for display\nconst formatTimeRange = (timeRange) => {\n  if (!timeRange) return '';\n  \n  const start = timeRange.start || 'Anytime';\n  const end = timeRange.end || 'No end time';\n  \n  // Check if we're referencing today\n  const now = new Date();\n  const isToday = true; // Simplification - in a real app we'd check if the date range includes today\n  \n  return isToday ? `${start}-${end} today` : `${start}-${end}`;\n};\n\n// Get the current variant (selected or default to first)\nconst currentVariant = computed(() => {\n  return props.selectedVariant || (props.productVariants?.length > 0 ? props.productVariants[0] : null);\n});\n\nconst getConditionsAsChips = (discount) => {\n  const chips = [];\n  \n  // Quantity condition - используем quantity из текущего варианта, а не из скидки\n  // if (currentVariant.value?.quantity && currentVariant.value.quantity > 0) {\n  //   chips.push({ \n  //     text: `+${discount.quantity}`, \n  //   });\n  // }\n  \n  // Date condition\n  if (hasDateCondition(discount)) {\n    chips.push({ \n      text: `Valid: ${formatDateRange(discount.date)}` \n    });\n  }\n  \n  // Time condition\n  if (hasTimeCondition(discount)) {\n    chips.push({ \n      text: `Available: ${formatTimeRange(discount.time)}` \n    });\n  }\n  \n  return chips;\n};\n// Handle discount selection\nconst selectDiscount = (discount) => {\n  emit('select-discount', discount);\n};\n</script>\n\n<style scoped>\n.discount-card {\n  transition: all 0.2s ease;\n}\n\n.discount-card:hover {\n  border-color: rgb(var(--main));\n}\n</style>",
                "name": "ProductDiscounts.vue",
                "size": 4074,
                "type": "source"
              },
              {
                "path": "../../src/modules/products/components/blocks/ProductImages.vue",
                "relativePath": "modules/products/components/blocks/ProductImages.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"w-100 o-hidden bg-light radius-medium flex-nowrap flex-column flex pos-relative\">\n    <!-- Main image container -->\n    <div class=\"pd-semi w-100 bg-light radius-semi o-hidden\" @click=\"openPopup(images[0])\">\n      <Image360\n        v-if=\"product && product.image3d\"\n        class=\"h-100 w-100\"\n        :imagePath=\"`/assets/images/products/${product.image3d}`\"\n        :imageCount=\"36\"\n      />\n      <img\n        loading=\"lazy\"\n        v-if=\"images[0] && !product?.image3d\"\n        class=\"h-max h-max-15r bg-white radius-semi w-100\"\n        style=\"object-fit: contain;\"\n        :src=\"(FILE_SERVER_URL || '') + images[0]\"\n      />\n      <PlaceholderImage\n        v-if=\"!images[0] && !product?.image3d\"\n        class=\"h-max-20r h-100 w-100\"\n        style=\"object-fit: cover;\"\n      />\n    </div>\n    \n    <!-- Thumbnails -->\n    <div v-if=\"images.length > 1\" class=\"o-scroll w-100 pd-semi pd-t-zero\">\n      <div class=\"no-responsive w-max flex flex-nowrap gap-thin\">\n        <img loading=\"lazy\" \n          v-for=\"(image, index) in images\"\n          :key=\"index\"\n          :src=\"(FILE_SERVER_URL || '') + image\" \n          @click=\"openPopup(image)\"\n          class=\"flex-child flex-child-grow-1 aspect-1x1 radius-semi bg-white o-hidden thumbnail\"\n        />\n      </div>\n    </div>\n    \n    <!-- Popup with photo viewer -->\n    <Popup @close-popup=\"closePopup\" :isPopupOpen=\"isPopupVisible\" class=\"radius-medium o-hidden\">\n      <PhotoViewer\n        :photoUrl=\"(FILE_SERVER_URL || '') + selectedImage\"\n      />\n    </Popup>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from \"vue\";\n\nimport Popup from '@martyrs/src/components/Popup/Popup.vue';\nimport PhotoViewer from '@martyrs/src/components/PhotoViewer/PhotoViewer.vue';\n\nimport PlaceholderImage from '@martyrs/src/modules/icons/placeholders/PlaceholderImage.vue'\n\nimport Image360 from '@martyrs/src/modules/products/components/elements/Image360.vue'\n\nconst props = defineProps({\n  images: {\n    type: Array,\n    required: true,\n  },\n  product: {\n    type: Object,\n    default: () => ({})\n  },\n});\n\nconst isPopupVisible = ref(false);\nconst selectedImage = ref(null);\n\nconst openPopup = (image) => {\n  if (!image) return;\n  selectedImage.value = image;\n  isPopupVisible.value = true;\n};\n\nconst closePopup = () => {\n  isPopupVisible.value = false;\n};\n</script>\n\n<style scoped>\n.thumbnail {\n  width: 100%;\n  max-width: 6rem;\n  height: 6rem;\n  object-fit: cover;\n  cursor: pointer;\n}\n</style>",
                "name": "ProductImages.vue",
                "size": 2468,
                "type": "source"
              },
              {
                "path": "../../src/modules/products/components/blocks/ProductVariants.vue",
                "relativePath": "modules/products/components/blocks/ProductVariants.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"w-100\">\n    <div v-if=\"selected\" class=\"mn-b-small\">\n      <span class=\"h2 t-bold\">${{ selected.price.toFixed(2) }}</span>\n    </div>\n\n    <div\n      v-for=\"group in groups\"\n      :key=\"group.label\"\n      class=\"w-100 mn-b-medium\"\n    >\n      <p class=\"capitalize mn-b-thin t-medium\">{{ group.label }}</p>\n      <div class=\"flex flex-wrap gap-small mn-b-medium\">\n        <button\n          v-for=\"item in group.items\"\n          :key=\"item.key\"\n          @click=\"group.label === 'Options' ? pick(item.variant) : pickAttr(group.label, item.value)\"\n          :disabled=\"item.off\"\n          class=\"h-3r w-min-3r flex-nowrap gap-thin radius-small flex flex-center pos-relative br-1px pd-micro\"\n          :class=\"[\n            isSelected(group, item) ? 'br-main' : 'br-black-transp-10',\n            item.off ? 'o-50 cursor-not-allowed' : 'cursor-pointer hover-scale-1',\n          ]\"\n        >\n          <img\n            v-if=\"item.img\"\n            :src=\"`${FILE_SERVER_URL}${item.img}`\"\n            class=\"h-100 radius-thin aspect-1x1 object-fit-contain\"\n          />\n          <span class=\"flex-center capitalize flex h-100 w-100 t-small t-center\">\n            {{ item.text }}\n          </span>\n          <div\n            v-if=\"isSelected(group, item)\"\n            class=\"pos-absolute pos-b-0 pos-r-0 pos-l-0 flex flex-center h-1r bg-main t-white t-small\"\n          >\n            Selected\n          </div>\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, watch, onMounted } from 'vue';\n\nconst props = defineProps({ productVariants: Array });\nconst emit = defineEmits(['variant-selected', 'update-images']);\n\nconst selectedAttributes = ref({});\nconst selected = ref(null);\n\nconst hasAttrs = computed(() =>\n  props.productVariants.some(v => v.attributes?.length)\n);\n\nconst groups = computed(() => {\n  if (hasAttrs.value) {\n    const labels = [...new Set(props.productVariants[0].attributes.map(a => a.name))];\n    return labels.map((lbl, i) => ({\n      label: lbl,\n      items: [...new Set(\n        props.productVariants.map(v => v.attributes.find(a => a.name === lbl)?.value)\n      )]\n        .filter(Boolean)\n        .map(val => {\n          const v = props.productVariants.find(x => x.attributes.find(a => a.name === lbl && a.value === val));\n          return {\n            key: lbl + val,\n            value: val,\n            img: i === 0 ? v.images?.[0] : null,\n            off: !v.available,\n            text: val,\n          };\n        }),\n    }));\n  }\n  if (props.productVariants.length > 1) {\n    return [{\n      label: 'Options',\n      items: props.productVariants.map(v => ({\n        key: v._id,\n        variant: v,\n        img: v.images?.[0],\n        off: !v.available,\n        text: v.name || v.sku,\n      })),\n    }];\n  }\n  return [];\n});\n\nconst pick = v => {\n  if (!v.available) return;\n  selectedAttributes.value = Object.fromEntries(v.attributes?.map(a => [a.name, a.value]) || []);\n  selected.value = v;\n  emit('variant-selected', v);\n  v.images?.length && emit('update-images', v.images);\n};\n\nconst pickAttr = (lbl, val) => {\n  const test = { ...selectedAttributes.value, [lbl]: val };\n  if (!props.productVariants.some(v =>\n    Object.entries(test).every(([k, x]) =>\n      v.attributes.find(a => a.name === k && a.value === x)\n    )\n  )) return;\n  selectedAttributes.value = test;\n};\n\nwatch(selectedAttributes, attrs => {\n  const m = props.productVariants.find(v =>\n    Object.entries(attrs).every(([k, x]) => v.attributes.find(a => a.name === k && a.value === x))\n  );\n  m ? pick(m) : (selected.value = null);\n});\n\nonMounted(() => props.productVariants.length === 1 && pick(props.productVariants[0]));\n\nconst isSelected = (g, i) =>\n  g.label === 'Options'\n    ? selected.value?._id === i.variant?._id\n    : selectedAttributes.value[g.label] === i.value;\n</script>\n",
                "name": "ProductVariants.vue",
                "size": 3853,
                "type": "source"
              }
            ]
          },
          "elements": {
            "_files": [
              {
                "path": "../../src/modules/products/components/elements/Image360.vue",
                "relativePath": "modules/products/components/elements/Image360.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"product-360-viewer\">\n    <svg class=\"pos-absolute z-index-2 pos-b-0 pd-small\" width=\"73\" height=\"50\" viewBox=\"0 0 73 50\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M42.5934 17.2017C42.5934 20.8208 39.8428 23.7544 36.45 23.7544C33.0573 23.7544 30.3066 20.8208 30.3066 17.2017C30.3066 13.5826 33.0573 10.6484 36.45 10.6484C39.8428 10.6484 42.5934 13.5826 42.5934 17.2017Z\" fill=\"rgb(var(--black))\" fill-opacity=\"0.1\"/>\n      <path d=\"M22.5953 29.4883H50.3053C53.7389 29.4883 56.5197 26.778 56.5197 23.4405V10.8396C56.5197 7.49996 53.739 4.79176 50.3053 4.79176H48.8712C48.2747 2.05313 45.7826 0 42.7962 0H30.1063C27.1179 0 24.6257 2.053 24.0313 4.78967H22.5971C19.1656 4.78967 16.3828 7.49788 16.3828 10.8375V23.4384C16.3807 26.778 19.1634 29.4882 22.595 29.4882L22.5953 29.4883ZM36.449 8.31471C41.4535 8.31471 45.5123 12.2648 45.5123 17.1352C45.5123 22.0062 41.4535 25.9582 36.449 25.9582C31.4445 25.9582 27.3856 22.0081 27.3856 17.1377C27.3856 12.2673 31.4445 8.31471 36.449 8.31471ZM20.9092 9.32597H24.0182C24.9472 9.32597 25.7019 10.0584 25.7019 10.9625C25.7019 11.8686 24.9493 12.6011 24.0182 12.6011H20.9092C19.9823 12.6011 19.2254 11.8707 19.2254 10.9625C19.2275 10.0604 19.9822 9.32597 20.9092 9.32597Z\" fill=\"rgb(var(--black))\" fill-opacity=\"0.1\"/>\n      <path d=\"M58.8645 12.2878C58.8645 12.2878 77.1839 21.8549 65.5604 32.0445C63.6718 33.6967 55.2747 38.9138 42.5947 39.9368V45.0519C50.0424 44.2514 61.7635 41.887 68.4037 34.9253C82.5323 20.1097 58.8657 12.2871 58.8657 12.2871L58.8645 12.2878Z\" fill=\"rgb(var(--black))\" fill-opacity=\"0.1\"/>\n      <path d=\"M37.6664 41.209L29.1818 35.5097C28.077 34.7658 27.1702 35.2358 27.1702 36.5516V39.5855C16.2598 38.0408 9.07761 33.565 7.35125 32.0517C-4.2894 21.858 14.0557 12.2871 14.0557 12.2871C14.0557 12.2871 -9.64257 20.1134 4.5039 34.9343C10.2723 40.9769 19.8619 43.5552 27.1712 44.656V44.952V48.5701C27.1712 49.8901 28.078 50.3554 29.1827 49.6141L37.6673 43.9127C38.7757 43.1683 38.7757 41.9525 37.6673 41.2092L37.6664 41.209Z\" fill=\"rgb(var(--black))\" fill-opacity=\"0.1\"/>\n    </svg>\n\n\n    <transition name=\"scale5\" :css=\"!firstImageLoad\" appear>\n      <div v-if=\"currentImage\" class=\"h-100 w-100 transition-ease\">\n        <img loading=\"lazy\" v-if=\"currentImage\" :key=\"currentImage\" class=\"h-100 w-100 transition-ease\" :src=\"(FILE_SERVER_URL || '') + currentImage.src\" alt=\"360 product view\" @mousedown=\"startRotation\" @mousemove=\"rotate\" @mouseup=\"stopRotation\" @mouseleave=\"stopRotation\" @touchstart=\"startRotation\" @touchmove=\"rotate\" @touchend=\"stopRotation\" @dragstart.prevent>\n\n      </div>\n    </transition>\n    <!-- Display the loading progress percentage next to the loader component -->\n    <transition name=\"scale5\">\n      <Loader v-if=\"!currentImage\" :progress=\"loadingProgress\" class=\"center z-index-5\"/>\n    </transition>\n  </div>\n</template>\n\n<script setup>\nimport { ref, watch, onMounted, onUnmounted, computed } from 'vue';\nimport Loader from '@martyrs/src/components/Loader/Loader.vue'\n\nconst props = defineProps({\n  imagePath: {\n    type: String,\n    required: true,\n  },\n  imageCount: {\n    type: Number,\n    default: 36,\n  },\n  autoRotateSpeed: {\n    type: Number,\n    default: 100,\n  },\n});\n\nconst imageIndex = ref(0);\nconst isRotating = ref(false);\nconst startClientX = ref(0);\n\nconst loadedImages = ref(0);\nconst loaded = ref(true);\n\nconst loadImages = async () => {\n  const images = [];\n\n  for (let i = 1; i <= props.imageCount; i++) {\n    const img = new Image();\n    img.src = `${props.imagePath}/${i}.jpg`;\n\n    try {\n      await img.decode();\n      // Increase the number of loaded images\n      loadedImages.value++;\n    } catch (error) {\n      console.warn(`Failed to decode ${props.imagePath}/${i}.jpg:`, error);\n    }\n\n    images.push(img);\n  }\n\n  return images;\n};\n\n// Add a computed property to calculate the loading progress percentage\nconst loadingProgress = computed(() => {\n  return Math.round((loadedImages.value / props.imageCount) * 100);\n});\n\nconst images = ref([]);\n\nconst currentImage = ref('');\nconst firstImageLoad = ref(null);\nwatch(imageIndex, (index) => {\n  currentImage.value = images.value[index] || '';\n});\n\nfunction startRotation(event) {\n  isRotating.value = true;\n  startClientX.value = event.clientX || event.touches[0].clientX;\n}\n\nfunction rotate(event) {\n  if (!isRotating.value) return;\n\n  const currentClientX = event.clientX || event.touches[0].clientX;\n  const diff = currentClientX - startClientX.value;\n\n  if (Math.abs(diff) >= 5) {\n    const direction = diff > 0 ? 1 : -1;\n    imageIndex.value = (imageIndex.value + direction) % props.imageCount;\n    if (imageIndex.value < 0) imageIndex.value = props.imageCount - 1;\n\n    startClientX.value = currentClientX;\n  }\n}\n\nfunction stopRotation() {\n  isRotating.value = false;\n}\n\nlet autoRotateInterval = null;\n\nconst unloadImages = () => {\n  images.value = [];\n};\n\n\n\nonMounted(async () => {\n  images.value = await loadImages();\n  currentImage.value = images.value[0] || ''; \n});\nonUnmounted(() => {\n  clearInterval(autoRotateInterval);\n  unloadImages();\n});\n</script>\n\n\n<style scoped>\n  .expand-enter-active,\n.expand-leave-active {\n  transition: max-height 0.5s ease-in-out;\n  overflow: hidden;\n}\n.scale-enter-active,\n.scale-leave-active {\n  transition: transform 0.5s ease-in-out;\n}\n.scale5-enter-from,\n.scale5-leave-to {\n  transform: scale(1.2);\n  opacity: 0;\n}\n.scale5-enter-to,\n.scale5-leave-from {\n  transform: scale(1);\n  opacity: 1;\n}\n\n.product-360-viewer {\n  user-select: none;\n   min-height: 16rem;\n}\n\n.product-360-viewer img {\n  max-width: 100%;\n  cursor: grab;\n\n  object-fit: cover;\n  transition: all 0.3s ease;\n}\n\n.product-360-viewer img:active {\n  cursor: grabbing;\n}\n\n/*.product-360-viewer img:hover {\n  transform: scale(1.1);\n}*/\n</style>",
                "name": "Image360.vue",
                "size": 5766,
                "type": "source"
              },
              {
                "path": "../../src/modules/products/components/elements/Price.vue",
                "relativePath": "modules/products/components/elements/Price.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"radius-small\">\n    <span\n      :class=\"{\n        'h4': !size,\n        'p-medium t-semi': size === 'small',\n        'h3 t-semi': size === 'big'\n      }\"\n      class=\"t-second\"\n    >\n      {{ returnCurrency() + variant.price }}\n    </span>\n\n    <span\n      :class=\"{\n        'p-medium': !size,\n        'p-small': size === 'small',\n        'p-big': size === 'big'\n      }\"\n      class=\"p-small mn-l-micro t-transp\"\n    >\n      {{ product.listing === 'rent' ? 'per day' : 'for ' + variant.quantity + variant.unit }}\n    </span>\n\n    <p\n      v-if=\"variant.sale\"\n      class=\"pd-r-small t-transp p-medium line-through price\"\n    >\n      {{ returnCurrency() + ((variant.price / 100) * (100 + variant.sale)) }}\n    </p>\n  </div>\n</template>\n\n<script setup>\nimport { computed } from 'vue';\n\nconst props = defineProps({\n  product: Object,\n  size: String\n});\n\nconst variant = computed(() => {\n  return props.product?.variants?.[0] || props.product;\n});\n</script>\n",
                "name": "Price.vue",
                "size": 978,
                "type": "source"
              },
              {
                "path": "../../src/modules/products/components/elements/QuantitySelector.vue",
                "relativePath": "modules/products/components/elements/QuantitySelector.vue",
                "extension": ".vue",
                "content": "<!-- QuantitySelector.vue -->\n<template>\n  <div class=\"flex flex-nowrap gap-thin\">\n    <button \n      @click=\"decrementQuantity\" \n      class=\"radius-small pd-small bg-light flex-center flex aspect-1x1 cursor-pointer hover-scale-1\"\n      :disabled=\"modelValue <= 1\"\n    >\n      <span class=\"i-regular\">-</span>\n    </button>\n\n    <div class=\"radius-small br-solid br-1px br-light w-3r pd-small\">\n    <input\n      type=\"number\"\n      v-model.number=\"modelValue\"\n      class=\"w-100 h-1r t-center\"\n      :min=\"1\"\n      :max=\"maxValue\"\n    />\n    </div>\n    <button \n      @click=\"incrementQuantity\" \n      class=\"radius-small pd-small bg-light flex-center flex aspect-1x1 cursor-pointer hover-scale-1\"\n      :disabled=\"modelValue >= maxValue\"\n    >\n      <span class=\"i-regular\">+</span>\n    </button>\n  </div>\n</template>\n\n<script setup>\nconst props = defineProps({\n  maxValue: {\n    type: Number,\n    default: Infinity\n  }\n});\n\nconst modelValue = defineModel();\n\nfunction incrementQuantity() {\n  if (modelValue.value < props.maxValue) {\n    modelValue.value++;\n  }\n}\n\nfunction decrementQuantity() {\n  if (modelValue.value > 1) {\n    modelValue.value--;\n  }\n}\n</script>\n",
                "name": "QuantitySelector.vue",
                "size": 1168,
                "type": "source"
              },
              {
                "path": "../../src/modules/products/components/elements/THC.vue",
                "relativePath": "modules/products/components/elements/THC.vue",
                "extension": ".vue",
                "content": "<template>\n\t<div v-if=\"product.attributes[1]\" class=\"thc\">\n    <p class=\"t-bold t-white\">{{product.attributes[1].value}} %</p>\n    <p class=\"t-white h6\">THC</p>\n    <!-- Polygon bg -->\n    <svg v-if=\"Number(product.attributes[1].value) >= 18\" width=\"60\" height=\"66\" viewBox=\"0 0 60 66\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill=\"#FF0000\" stroke=\"rgb(var(--white))\" stroke-width=\"3\" d=\"M26 3.3094C28.4752 1.88034 31.5248 1.88034 34 3.3094L53.7128 14.6906C56.188 16.1197 57.7128 18.7607 57.7128 21.6188V44.3812C57.7128 47.2393 56.188 49.8803 53.7128 51.3094L34 62.6906C31.5248 64.1197 28.4752 64.1197 26 62.6906L6.28719 51.3094C3.81198 49.8803 2.28719 47.2393 2.28719 44.3812V21.6188C2.28719 18.7607 3.81198 16.1197 6.28719 14.6906L26 3.3094Z\" />\n    </svg>\n    <svg v-if=\"Number(product.attributes[1].value) <= 18 && Number(product.attributes[1].value) >= 14\" width=\"60\" height=\"66\" viewBox=\"0 0 60 66\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill=\"#FF0099\" stroke=\"rgb(var(--white))\" stroke-width=\"3\" d=\"M26 3.3094C28.4752 1.88034 31.5248 1.88034 34 3.3094L53.7128 14.6906C56.188 16.1197 57.7128 18.7607 57.7128 21.6188V44.3812C57.7128 47.2393 56.188 49.8803 53.7128 51.3094L34 62.6906C31.5248 64.1197 28.4752 64.1197 26 62.6906L6.28719 51.3094C3.81198 49.8803 2.28719 47.2393 2.28719 44.3812V21.6188C2.28719 18.7607 3.81198 16.1197 6.28719 14.6906L26 3.3094Z\" />\n    </svg>\n    <svg v-if=\"Number(product.attributes[1].value) <= 14 && Number(product.attributes[1].value) >= 10\" width=\"60\" height=\"66\" viewBox=\"0 0 60 66\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill=\"#EB00FF\" stroke=\"rgb(var(--white))\" stroke-width=\"3\" d=\"M26 3.3094C28.4752 1.88034 31.5248 1.88034 34 3.3094L53.7128 14.6906C56.188 16.1197 57.7128 18.7607 57.7128 21.6188V44.3812C57.7128 47.2393 56.188 49.8803 53.7128 51.3094L34 62.6906C31.5248 64.1197 28.4752 64.1197 26 62.6906L6.28719 51.3094C3.81198 49.8803 2.28719 47.2393 2.28719 44.3812V21.6188C2.28719 18.7607 3.81198 16.1197 6.28719 14.6906L26 3.3094Z\" />\n    </svg>\n    <svg v-if=\"Number(product.attributes[1].value) <= 10\" width=\"60\" height=\"66\" viewBox=\"0 0 60 66\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill=\"#00FF29\" stroke=\"rgb(var(--white))\" stroke-width=\"3\" d=\"M26 3.3094C28.4752 1.88034 31.5248 1.88034 34 3.3094L53.7128 14.6906C56.188 16.1197 57.7128 18.7607 57.7128 21.6188V44.3812C57.7128 47.2393 56.188 49.8803 53.7128 51.3094L34 62.6906C31.5248 64.1197 28.4752 64.1197 26 62.6906L6.28719 51.3094C3.81198 49.8803 2.28719 47.2393 2.28719 44.3812V21.6188C2.28719 18.7607 3.81198 16.1197 6.28719 14.6906L26 3.3094Z\" />\n    </svg>\n  </div>\n</template>\n\n<script setup=\"props\">\n/////////////////////////////\n// COMPONENT DEPENDENCIES\n/////////////////////////////\nimport { ref, } from 'vue';\n\n/////////////////////////////\n// HELPERS\n/////////////////////////////\n\n/////////////////////////////\n// CREATED\n/////////////////////////////\n\nconst props = defineProps({\n  product: Object,\n});\n\n/////////////////////////////\n// MOUNTED\n/////////////////////////////\n</script>\n\n<style lang=\"scss\">\n.catalog-wrapper .thc { \n  // transform: scale(0.66);\n}\n\n.thc {\n  position: absolute;\n\n  right: 1rem;\n  top: 1rem;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n\n  width: 6rem;\n  height: 6rem;\n  transition: all linear 0.1s;\n\n  p:first-of-type {\n    font-size: 1.25rem;\n    letter-spacing: -2px;\n    z-index: 7;\n  }\n\n  p:last-of-type {\n    z-index: 7;\n  }\n\n  svg {\n    z-index: 6;\n    position: absolute;\n    width: 6rem;\n    height: 6rem;\n    left: 0;\n    top: 0;\n  }\n}\n   @media screen and (max-width: 1025px) {\n    .thc {\n      transform: scale(0.75) !important;\n      transform-origin: top right !important;\n    }\n  }\n    \n</style>\n",
                "name": "THC.vue",
                "size": 3811,
                "type": "source"
              }
            ]
          },
          "forms": {
            "_files": [
              {
                "path": "../../src/modules/products/components/forms/ColumnSettingsMenu.vue",
                "relativePath": "modules/products/components/forms/ColumnSettingsMenu.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"w-100\">\n    <p class=\"mn-b-medium t-transp\">\n      Customize which columns are visible in your inventory table.\n    </p>\n\n    <div class=\"mn-b-medium\">\n      <div\n        v-for=\"col in columns\"\n        :key=\"col.key\"\n        class=\"mn-b-small\"\n      >\n        <Checkbox\n          :label=\"col.label\"\n          name=\"columnVisibility\"\n          :value=\"col.key\"\n          class=\"w-100 bg-light radius-small pd-small\"\n          :checked=\"selected.includes(col.key)\"\n          @update:checked=\"val => toggle(col.key, val)\"\n        />\n      </div>\n    </div>\n\n    <div class=\"flex-nowrap flex gap-small\">\n      <button\n        @click=\"$emit('close')\"\n        class=\"pd-small radius-small flex-center flex w-max cursor-pointer t-transp\"\n      >\n        Cancel\n      </button>\n\n      <button\n        @click=\"saveSettings\"\n        class=\"pd-small radius-small flex-center flex w-100 cursor-pointer bg-main t-black\"\n      >\n        Save Settings\n      </button>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, watch } from 'vue'\nimport Checkbox from '@martyrs/src/components/Checkbox/Checkbox.vue'\n\nconst props = defineProps({\n  columns: {\n    type: Array,\n    required: true\n  }\n})\n\nconst emit = defineEmits(['save', 'close'])\n\n// Локальный массив выбранных ключей\nconst selected = ref(props.columns.filter(c => c.visible).map(c => c.key))\n\n// Синхронизируем, если проп изменится\nwatch(\n  () => props.columns,\n  cols => {\n    selected.value = cols.filter(c => c.visible).map(c => c.key)\n  }\n)\n\n// Добавление/удаление ключа\nfunction toggle(key, checked) {\n  const idx = selected.value.indexOf(key)\n  if (checked && idx === -1) {\n    selected.value.push(key)\n  } else if (!checked && idx !== -1) {\n    selected.value.splice(idx, 1)\n  }\n}\n\n// Эмитим массив видимых колонок\nfunction saveSettings() {\n  emit('save', selected.value)\n}\n</script>\n",
                "name": "ColumnSettingsMenu.vue",
                "size": 1870,
                "type": "source"
              },
              {
                "path": "../../src/modules/products/components/forms/ReorderSettingsForm.vue",
                "relativePath": "modules/products/components/forms/ReorderSettingsForm.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"w-100\">\n    <p class=\"mn-b-medium t-transp\">\n      Set up automatic reordering to maintain optimal inventory levels and avoid stockouts.\n    </p>\n    \n    <Field\n      v-model:field=\"threshold\"\n      label=\"Reorder Point\"\n      type=\"number\"\n      class=\"w-100 bg-light radius-small pd-medium mn-b-small\"\n    />\n    \n    <p class=\"mn-b-small t-small t-transp\">\n      Products will be flagged for reordering when the stock level drops below this threshold.\n    </p>\n    \n    <Field\n      v-model:field=\"quantity\"\n      label=\"Reorder Quantity\"\n      type=\"number\"\n      class=\"w-100 bg-light radius-small pd-medium mn-b-small\"\n    />\n    \n    <div class=\"mn-b-medium\">\n      <p class=\"mn-b-small t-medium\">Notification Options</p>\n      \n      <div class=\"mn-b-small\">\n        <Checkbox \n          v-model:checked=\"notifications.email\"\n          label=\"Email notification\"\n          class=\"w-100 mn-b-nano\"\n        />\n        \n        <Checkbox \n          v-model:checked=\"notifications.push\"\n          label=\"Push notification\"\n          class=\"w-100 mn-b-nano\"\n        />\n        \n        <Checkbox \n          v-model:checked=\"notifications.system\"\n          label=\"System alert\"\n          class=\"w-100\"\n        />\n      </div>\n    </div>\n    \n    <Checkbox \n      v-model:checked=\"autoOrder\"\n      label=\"Enable automatic purchase order creation\"\n      class=\"w-100 mn-b-small\"\n    />\n    \n    <div class=\"flex-nowrap flex gap-small\">\n      <button \n        @click=\"$emit('close')\" \n        class=\"pd-small radius-small flex-center flex w-max cursor-pointer t-transp\"\n      >\n        Cancel\n      </button>\n      \n      <button \n        @click=\"saveSettings\" \n        class=\"pd-small radius-small flex-center flex w-100 cursor-pointer bg-main t-black\"\n      >\n        Save Settings\n      </button>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\nimport Field from '@martyrs/src/components/Field/Field.vue'\nimport Checkbox from '@martyrs/src/components/Checkbox/Checkbox.vue'\n\nconst props = defineProps({\n  product: {\n    type: Object,\n    default: null\n  }\n})\n\nconst emit = defineEmits(['save', 'close'])\n\n// Form state\nconst threshold = ref(props.product ? (props.product.reorderThreshold || '5') : '5')\nconst quantity = ref(props.product ? (props.product.reorderQuantity || '10') : '10')\nconst autoOrder = ref(false)\nconst notifications = ref({\n  email: true,\n  push: false,\n  system: true\n})\n\nfunction saveSettings() {\n  const settings = {\n    threshold: parseInt(threshold.value || 5),\n    quantity: parseInt(quantity.value || 10),\n    autoOrder: autoOrder.value,\n    notifications: notifications.value\n  }\n  \n  emit('save', settings)\n}\n</script>",
                "name": "ReorderSettingsForm.vue",
                "size": 2703,
                "type": "source"
              },
              {
                "path": "../../src/modules/products/components/forms/StockAuditForm.vue",
                "relativePath": "modules/products/components/forms/StockAuditForm.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"w-100\">\n    <p class=\"mn-b-medium t-transp\">\n      Effortlessly update your inventory and track adjustments for accurate stock management.\n    </p>\n    \n   \n    <div class=\"mn-b-medium\">\n      <div class=\"mn-b-small flex-nowrap flex gap-thin\">\n        <Field\n          v-model:field=\"physicalCount\"\n          label=\"Physical Count\"\n          type=\"number\"\n          class=\"w-100 bg-light radius-small pd-medium\"\n        />\n        \n        <Field\n          :field=\"product.available\"\n          label=\"Available\"\n          type=\"text\"\n          :disabled=\"true\"\n          class=\"w-100 bg-light radius-small pd-medium\"\n        />\n      </div>\n      \n      <div class=\"bg-light pd-medium radius-small\">\n        <div class=\"flex-nowrap flex flex-v-center t-demi\">\n          <p class=\"mn-r-auto\">Discrepancy</p>\n          <p :class=\"discrepancy > 0 ? 't-green' : discrepancy < 0 ? 't-red' : ''\">\n            {{ discrepancy > 0 ? '+' : '' }}{{ discrepancy }}\n          </p>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"mn-b-medium\">\n      <p class=\"mn-b-small t-medium\">Adjustment Reason</p>\n      \n      <div class=\"cols-3 gap-small mn-b-small\">\n        <div \n          v-for=\"reason in adjustmentReasons\"\n          :key=\"reason.value\"\n          @click=\"selectedReason = reason.value\"\n          :class=\"{ 'bg-main t-black': selectedReason === reason.value, 'bg-light': selectedReason !== reason.value }\"\n          class=\"pd-small radius-small flex-column flex-center flex cursor-pointer\"\n        >\n          <component :is=\"reason.icon\" class=\"i-regular mn-b-nano\" />\n          <span>{{ reason.label }}</span>\n        </div>\n      </div>\n      \n      <Field\n        v-if=\"selectedReason === 'custom'\"\n        v-model:field=\"customReasonText\"\n        placeholder=\"Enter custom reason\"\n        class=\"w-100 bg-light radius-small pd-medium\"\n      />\n    </div>\n    \n    <Field\n      v-model:field=\"note\"\n      label=\"Note\"\n      type=\"textarea\"\n      placeholder=\"Add additional details about this adjustment...\"\n      class=\"w-100 bg-light radius-small pd-medium mn-b-medium\"\n    />\n    \n    <div class=\"flex-nowrap flex gap-small\">\n      <button \n        @click=\"$emit('close')\" \n        class=\"pd-small radius-small flex-center flex w-max cursor-pointer t-transp\"\n      >\n        Cancel\n      </button>\n      \n      <button \n        @click=\"saveAdjustment\" \n        class=\"pd-small radius-small flex-center flex w-100 cursor-pointer bg-main t-black\"\n      >\n        Save Adjustment\n      </button>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue'\nimport Field from '@martyrs/src/components/Field/Field.vue'\n\n// Icons for adjustment reasons\nimport IconDamage from '@martyrs/src/modules/icons/navigation/IconInfo.vue'\nimport IconExpire from '@martyrs/src/modules/icons/navigation/IconInfo.vue'\nimport IconMisplacement from '@martyrs/src/modules/icons/navigation/IconInfo.vue'\nimport IconThief from '@martyrs/src/modules/icons/navigation/IconInfo.vue'\nimport IconStocktake from '@martyrs/src/modules/icons/navigation/IconInfo.vue'\nimport IconCustom from '@martyrs/src/modules/icons/navigation/IconInfo.vue'\n\nconst props = defineProps({\n  product: {\n    type: Object,\n    required: true\n  }\n})\n\nconst emit = defineEmits(['save', 'close'])\n\n// Form state\nconst adjustmentType = ref('quantity')\nconst physicalCount = ref(props.product.available)\nconst valueAdjustment = ref('0')\nconst selectedReason = ref('stocktake')\nconst customReasonText = ref('')\nconst note = ref('')\n\n// Computed values\nconst discrepancy = computed(() => {\n  return parseInt(physicalCount.value || 0) - props.product.available\n})\n\n// Adjustment reason options\nconst adjustmentReasons = [\n  { label: 'Damage', value: 'damage', icon: IconDamage },\n  { label: 'Expire', value: 'expire', icon: IconExpire },\n  { label: 'Misplacement', value: 'misplacement', icon: IconMisplacement },\n  { label: 'Theft', value: 'theft', icon: IconThief },\n  { label: 'Stocktake', value: 'stocktake', icon: IconStocktake },\n  { label: 'Custom', value: 'custom', icon: IconCustom },\n]\n\nfunction formatPrice(price) {\n  return '$' + (parseFloat(price) || 0).toFixed(2)\n}\n\nfunction saveAdjustment() {\n  const adjustmentData = {\n    productId: props.product._id,\n    type: adjustmentType.value,\n    reason: selectedReason.value === 'custom' ? customReasonText.value : selectedReason.value\n  }\n  \n  if (adjustmentType.value === 'quantity') {\n    adjustmentData.physicalCount = parseInt(physicalCount.value || 0)\n    adjustmentData.discrepancy = discrepancy.value\n  } else {\n    adjustmentData.valueAdjustment = parseFloat(valueAdjustment.value || 0)\n  }\n  \n  if (note.value) {\n    adjustmentData.note = note.value\n  }\n  \n  emit('save', adjustmentData)\n}\n</script>",
                "name": "StockAuditForm.vue",
                "size": 4772,
                "type": "source"
              },
              {
                "path": "../../src/modules/products/components/forms/StockHistoryView.vue",
                "relativePath": "modules/products/components/forms/StockHistoryView.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"w-100\">\n    <div class=\"flex-nowrap flex flex-v-center mn-b-medium\">\n      <div class=\"flex-nowrap flex flex-v-center\">\n        <img \n          v-if=\"product.images && product.images.length > 0\"\n          :src=\"(FILE_SERVER_URL || '') + product.images[0]\" \n          alt=\"Product\" \n          class=\"w-3r h-3r radius-small object-fit-cover mn-r-small\"\n        />\n        <PlaceholderImage \n          v-else \n          class=\"w-3r h-3r radius-small mn-r-small\"\n        />\n        \n        <div>\n          <h3 class=\"mn-b-nano\">{{ product.name }}</h3>\n          <p class=\"t-small t-transp\">SKU: {{ product.sku }}</p>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"mn-b-medium w-100 h-max-30r o-scroll\">\n      <table class=\"w-100\">\n        <thead>\n          <tr class=\"bg-light\">\n            <th class=\"pd-small t-left\">Date</th>\n            <th class=\"pd-small t-left\">Type</th>\n            <th class=\"pd-small t-left\">Quantity</th>\n            <th class=\"pd-small t-left\">Reason</th>\n            <th class=\"pd-small t-left\">User</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-if=\"loading\">\n            <td colspan=\"5\" class=\"pd-medium t-center\">Loading history...</td>\n          </tr>\n          <tr v-else-if=\"history.length === 0\">\n            <td colspan=\"5\" class=\"pd-medium t-center\">No history available</td>\n          </tr>\n          <tr v-for=\"(entry, index) in history\" :key=\"index\" class=\"border-b\">\n            <td class=\"pd-small\">{{ formatDate(entry.createdAt) }}</td>\n            <td class=\"pd-small\">\n              <span \n                :class=\"entry.type === 'stock-in' ? 'bg-green t-white' : 'bg-red t-white'\"\n                class=\"pd-nano pd-r-small pd-l-small radius-small t-small\"\n              >\n                {{ entry.type === 'stock-in' ? 'Stock In' : 'Stock Out' }}\n              </span>\n            </td>\n            <td class=\"pd-small\">\n              {{ entry.positions[0]?.quantity || 0 }}\n            </td>\n            <td class=\"pd-small\">{{ entry.comment || 'Not specified' }}</td>\n            <td class=\"pd-small\">\n              <div class=\"flex-nowrap flex flex-v-center\">\n                <div class=\"w-2r h-2r radius-100 bg-light o-hidden mn-r-nano\">\n                  <img \n                    v-if=\"entry.creator?.target?.profile?.photo\" \n                    :src=\"(FILE_SERVER_URL || '') + entry.creator.target.profile.photo\" \n                    alt=\"User\" \n                    class=\"w-100 h-100 object-fit-cover\" \n                  />\n                  <PlaceholderImage v-else class=\"w-100 h-100\" />\n                </div>\n                {{ entry.creator?.target?.profile?.name || 'System' }}\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    \n    <button \n      @click=\"$emit('close')\" \n      class=\"pd-small radius-small flex-center flex w-max cursor-pointer bg-main t-black\"\n    >\n      Close\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport PlaceholderImage from '@martyrs/src/modules/icons/placeholders/PlaceholderImage.vue'\nimport * as leftovers from '@martyrs/src/modules/products/store/leftovers.js'\n\nconst props = defineProps({\n  product: {\n    type: Object,\n    required: true\n  }\n})\n\nconst emit = defineEmits(['close'])\n\n// State\nconst loading = ref(true)\nconst history = ref([])\n\nonMounted(async () => {\n  await loadHistory()\n})\n\nasync function loadHistory() {\n  try {\n    // Use the leftovers read action to get history for this product\n    const data = await leftovers.actions.read({ \n      'positions._id': props.product._id \n    })\n    \n    history.value = data || []\n  } catch (error) {\n    console.error('Error loading history:', error)\n  } finally {\n    loading.value = false\n  }\n}\n\nfunction formatDate(dateString) {\n  const date = new Date(dateString)\n  return date.toLocaleDateString('en-US', { \n    day: 'numeric', \n    month: 'short', \n    year: 'numeric' \n  })\n}\n</script>\n\n<style scoped>\n.border-b {\n  border-bottom: 1px solid rgba(var(--black), 0.1);\n}\n</style>",
                "name": "StockHistoryView.vue",
                "size": 4089,
                "type": "source"
              }
            ]
          },
          "pages": {
            "_files": [
              {
                "path": "../../src/modules/products/components/pages/Categories.vue",
                "relativePath": "modules/products/components/pages/Categories.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"pd-thin bg-white\">\n    <Block v-if=\"!MOBILE_APP\" \n      class=\"radius-medium mn-b-thin mobile:flex-wrap flex-nowrap flex-v-center flex\"\n    >\n      <h2 class=\"mn-r-auto\">\n        Categories\n      </h2>\n\n      <router-link \n        :to=\"{\n          name: 'Category Add', \n          params: { \n            _id: $route.params._id\n          } \n        }\"\n        class=\"uppercase t-medium pd-small radius-medium bg-white nav-link\"\n      >\n        Add New\n      </router-link>\n    </Block>\n\n     <Feed\n        :search=\"true\"\n        :showLoadMore=\"false\"\n        :states=\"{\n          empty: {\n            title: 'No Products Found',\n            description: 'Currently, there are no products available.'\n          }\n        }\"\n        :store=\"{\n          read: (options) => categories.actions.read(options),\n          state: categories.state\n        }\"\n        :options=\"{\n          user: auth.state.user._id,\n          rootOnly: true,\n          excludeChildren: false\n        }\"\n        v-model:sort=\"sort\"\n        v-model:items=\"categories.state.all\"\n        v-slot=\"{ \n          items \n        }\"\n        class=\"cols-1 pos-relative w-100 rows-1 gap-thin\"\n      >\n        <Tree \n          v-if=\"items\" \n          :items=\"categories.state.all\" \n          :state=\"categories.state.all\" \n          @update=\"updateCategoriesOrder\" \n          v-slot=\"{ item }\"\n        >\n          <CardCategory \n            :category=\"item\" \n            @delete=\"deleteCategory\" \n          />\n        </Tree>\n      </Feed>\n  </div>\n</template>\n\n<script setup>\n  import { onMounted, onUnmounted, computed, ref,reactive } from 'vue';\n  import { useRoute, useRouter } from 'vue-router';\n\n  import * as globals from '@martyrs/src/modules/globals/views/store/globals.js';\n  import * as auth from '@martyrs/src/modules/auth/views/store/auth.js'; \n  import * as categories from '@martyrs/src/modules/products/store/categories.js'; \n\n  const route = useRoute();\n  const router = useRouter();\n\n  import Button from \"@martyrs/src/components/Button/Button.vue\";\n  import Block from '@martyrs/src/components/Block/Block.vue';\n  import Feed from '@martyrs/src/components/Feed/Feed.vue'\n  import Tree from \"@martyrs/src/components/Tree/Tree.vue\";\n  \n  import CardCategory from '@martyrs/src/modules/products/components/blocks/CardCategory.vue';\n\n  import IconPlus from '@martyrs/src/modules/icons/navigation/IconPlus.vue'\n\n  let search = ref(null)\n\n  let sort = reactive({\n    param: 'order',\n    order: 'asc',\n    options: [{\n      label: 'Order',\n      value: 'order'\n    },{\n      label: 'Name',\n      value: 'name'\n    },{\n      label: 'Date',\n      value: 'createdAt'\n    }]\n  })\n\n  globals.state.navigation_bar.actions = [{\n    component: IconPlus,\n    props: {\n      fill: \"rgb(var(--main))\" \n    },\n    condition: () => auth.state.user && auth.state.user._id,\n    action: () => route.params._id ? router.push({ name: 'Category Add', params: { _id: route.params._id} }) : router.push({ name: 'Category Add' })\n  }],\n\n  onUnmounted(() => {\n    globals.state.navigation_bar.actions = [];\n  });\n\n  onMounted(async () => {\n    \n  });\n\n  // Функция для преобразования иерархического дерева категорий в плоский массив\n  function flattenCategoryTree(categories) {\n    let flatCategories = [];\n    \n    function flatten(category) {\n      const { children, ...categoryWithoutChildren } = category;\n      flatCategories.push(categoryWithoutChildren);\n      \n      if (children && Array.isArray(children)) {\n        children.forEach(child => flatten(child));\n      }\n    }\n    \n    categories.forEach(category => flatten(category));\n    return flatCategories;\n  }\n\n\n  // Функция для обновления порядка категорий\n  async function updateCategoriesOrder(updatedCategories) {\n    alert('helo')\n    try {\n      // Преобразуем категории в плоский массив\n      const flattenedCategories = flattenCategoryTree(categories.state.all);\n      \n      console.log(flattenedCategories)\n      console.log( categories.state.all)\n      await categories.actions.updateOrder(flattenedCategories);\n        \n      console.log('Categories order updated successfully');\n    } catch (error) {\n      console.error('Error updating categories order:', error);\n      throw error;\n    }\n  }\n\n  async function deleteCategory(category) {\n    // Запрашиваем подтверждение у пользователя\n    const isConfirmed = confirm(`Are you sure you want to delete the category \"${category.name}\"?`);\n    \n    // Если пользователь подтвердил удаление, продолжаем процесс\n    if (isConfirmed) {\n      await categories.actions.delete(category.url);\n    } else {\n      alert('Category deletion cancelled'); \n    }\n  }\n</script>\n\n<style lang=\"scss\">\n</style>",
                "name": "Categories.vue",
                "size": 4691,
                "type": "source"
              },
              {
                "path": "../../src/modules/products/components/pages/CategoryEdit.vue",
                "relativePath": "modules/products/components/pages/CategoryEdit.vue",
                "extension": ".vue",
                "content": "<template>\n  <div v-if=\"!isLoading\"  class=\"pd-thin bg-white for-transition w-100\">\n    <Block v-if=\"!MOBILE_APP\" class=\"radius-medium mn-b-thin flex-nowrap flex-v-center flex\">\n      <h1   class=\"mn-r-auto\">\n        {{route.params.category ? 'Edit Category' : 'Add Category'}}\n      </h1>\n\n      <Button \n        :submit=\"onSubmit\"\n        class=\"pd-small radius-medium bg-main t-black uppercase t-medium\"\n      >\n        Save Category \n      </Button>\n    </Block>\n    \n    <Block \n      title=\"Profile\"\n      class=\"mn-b-thin\"\n    >\n      <div class=\"mn-b-medium w-100 flex-nowrap gap-thin flex\">\n        <UploadImage \n           v-model:photo=\"categories.state.current.photo\"\n          :uploadPath=\"'categories'\"\n          class=\"w-8r aspect-1x1 o-hidden mn-r-small radius-extra\" \n        />\n       <Field\n            v-model:field=\"categories.state.current.name\"\n            label=\"Name\"\n            placeholder=\"Enter category name\"\n            class=\"w-100 mn-b-small bg-white radius-small pd-medium\"\n          />  \n      </div>\n\n        <div class=\"mn-b-medium w-100 flex-nowrap gap-thin flex\">\n\n\n         <Field\n            v-model:field=\"categories.state.current.order\"\n            label=\"Order\"\n            :disabled=\"true\"\n            class=\"w-40 bg-white radius-small pd-medium\"\n          />  \n         <Field\n            v-model:field=\"categories.state.current.url\"\n            label=\"URL\"\n            placeholder=\"Enter category URL\"\n            class=\"w-100 bg-white radius-small pd-medium\"\n          />  \n         \n      </div>\n\n      <Select \n        v-model:select=\"categories.state.current.status\"\n        label=\"Status\"\n        :options=\"[\n          'draft', \n          'internal',\n          'published',\n          'removed'\n        ]\"\n        placeholder=\"Display product\"\n        class=\"pos-relative w-100 mn-b-small bg-white radius-small pd-medium\"\n      />\n\n      <div class=\"flex-v-center flex-nowrap flex\">\n        <h4  class=\"mn-r-thin t-medium\">Localization</h4>\n          \n        <button \n          @click=\"() => categories.state.current.translations.push({locale: '', text: ''})\" \n          class=\"i-small pd-thin button-delete button\"\n        >\n          +\n        </button>\n      </div>\n      <div \n        class=\"gap-thin mn-b-thin flex-nowrap flex\" \n        v-for=\"(item, index) in categories.state.current.translations\" \n        :key=\"index\"\n      > \n        <Field\n          v-model:field=\"item.locale\"\n          placeholder=\"Locale\"\n          class=\"w-100 bg-white radius-small pd-medium\"\n        />  \n        <Field\n          v-model:field=\"item.text\"\n          placeholder=\"Text\"\n          class=\"w-100 bg-white radius-small pd-medium\"\n        />\n        <div\n          @click=\"() => categories.state.current.translations.splice(index, 1)\"  \n          class=\"radius-small pd-small flex-center flex aspect-1x1 bg-red\"\n        >\n          <IconDelete \n            class=\"i-medium\"\n          />\n        </div>\n      </div>\n\n      \n    </Block>\n     <!-- Filters -->\n    <Block\n      title=\"Filters\"\n      placeholder=\"No filters added yet\"\n      :actions=\"[{\n        label: '+',\n        function: () => categories.state.current.filters.push({name: '', url: ''})\n      }]\"\n    >\n      <div \n        class=\"gap-thin mn-b-thin flex-nowrap flex\" \n        v-for=\"(item, index) in categories.state.current.filters\" \n        :key=\"index\"\n      > \n        <Field\n          v-model:field=\"item.name\"\n          placeholder=\"Filter name\"\n          class=\"w-100 bg-white radius-small pd-medium\"\n        />  \n        <Field\n          v-model:field=\"item.options\"\n          placeholder=\"Filter options divided by ,\"\n          class=\"w-100 bg-white radius-small pd-medium\"\n        />\n        <div\n          @click=\"() => categories.state.current.filters.splice(index, 1)\"  \n          class=\"radius-small pd-small flex-center flex aspect-1x1 bg-red\"\n        >\n          <IconDelete \n            class=\"i-medium\"\n          />\n        </div>\n      </div> \n    </Block>\n  </div>\n \n</template>\n\n<script setup>\n  // Import libs\n  import { computed, onUnmounted, onMounted, ref } from 'vue'\n  import { useRoute,useRouter } from 'vue-router'\n  \n  import IconDelete from '@martyrs/src/modules/icons/navigation/IconDelete.vue';\n\n  import Button from \"@martyrs/src/components/Button/Button.vue\";\n  import Select from \"@martyrs/src/components/Select/Select.vue\";\n  import UploadImage from '@martyrs/src/components/UploadImage/UploadImage.vue';\n  import Field from \"@martyrs/src/components/Field/Field.vue\";\n  import Feed from '@martyrs/src/components/Feed/Feed.vue'\n\n\n  import Block from '@martyrs/src/components/Block/Block.vue';\n\n  import IconCheckmark from '@martyrs/src/modules/icons/navigation/IconCheckmark.vue'\n\n  // Import the new store structure\n  import * as globals from '@martyrs/src/modules/globals/views/store/globals.js';\n  import * as auth from '@martyrs/src/modules/auth/views/store/auth.js'; \n  import * as categories from '@martyrs/src/modules/products/store/categories.js';\n\n  const route = useRoute()\n  const router = useRouter()\n\n  const emits = defineEmits(['page-loading', 'page-loaded']);\n\n  // Data prefetching\n  const isLoading = ref(true)\n  onMounted(async () => {\n    emits('page-loading');\n    if (route.params.category) {\n      await categories.actions.read({url: route.params.category})\n    } else {\n      categories.actions.clean() // Adjusted based on the new store's method to reset the category state\n    }\n\n    emits('page-loaded');\n    isLoading.value = false\n  })\n\n  // Accessing state\n  const category = computed(() => categories.state.current)\n  const routePath = computed(() => route.name)\n\n  // Navigation Bar\n  globals.state.navigation_bar.actions = [{\n    component: IconCheckmark,\n    props: {\n      fill: \"rgb(var(--main))\" \n    },\n    condition: () => auth.state.user && auth.state.user._id,\n    action: () => onSubmit()\n  }],\n\n onUnmounted(() => {\n    globals.state.navigation_bar.actions = [];\n  });\n\n\n\n  // Functions\n  async function onSubmit() {\n    if (route.params.category) {\n\n      categories.state.current.creator = {\n        type: categories.state.current.creator.type,\n        hidden: categories.state.current.creator.hidden,\n        target: categories.state.current.creator.target._id\n      }\n\n      categories.state.current.owner = {\n        type: categories.state.current.owner.type,\n        target: categories.state.current.owner.target._id\n      }\n\n      await categories.actions.update(categories.state.current)\n\n      redirectTo()\n    } else {\n\n      categories.state.current.creator = {\n        type: 'user',\n        hidden: false,\n        target: auth.state.user._id\n      }\n\n      categories.state.current.owner = {\n        type: route.params._id ? 'organization' : 'platform',\n        hidden: false,\n        target: route.params._id ? route.params._id : null\n      }\n\n      await categories.actions.create(categories.state.current)\n      redirectTo()\n    }\n  }\n\n  function redirectTo () {\n    router.push({\n      name: 'Categories', \n      params: { \n        _id: route.params._id\n      } \n    })\n  }\n</script>\n\n<style lang=\"scss\">\n  /* Your styles here */\n</style>\n",
                "name": "CategoryEdit.vue",
                "size": 7147,
                "type": "source"
              },
              {
                "path": "../../src/modules/products/components/pages/LeftoverEdit.vue",
                "relativePath": "modules/products/components/pages/LeftoverEdit.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"pd-medium mobile:pd-thin\">\n    <header class=\"mn-b-medium gap-small flex-v-center flex-nowrap flex\">\n      <h2 class=\"\">{{route.params.leftover ? 'Edit ' : 'Add ' }} Inventory</h2>\n    </header>\n    \n    <Popup \n      title=\"Add position\" \n      @close-popup=\"closeProductsPopup\" \n      :isPopupOpen=\"isOpenProductsPopup\"\n      class=\"bg-white w-100 w-max-30r  radius-medium pd-medium\"\n    >\n      <Feed\n        :search=\"{\n          class: 'bg-light radius-small'\n        }\"\n        :states=\"{\n          empty: {\n            title: 'No Products Found',\n            description: 'Currently, there are no such products available.'\n          }\n        }\"\n        :store=\"{\n          read: (options) => products.actions.read(options),\n          state: null\n        }\"\n        :options=\"{\n          owner: route.params._id,\n        }\"\n        v-slot=\"{ \n          items \n        }\"\n        class=\"flex-column flex gap-thin h-max-20r o-scroll\"\n      >\n        <CardOrderItem\n          v-for=\"(product, index) in items\" :key=\"product._id\"\n          :editable=\"false\" \n          :product=\"product\" \n          @click=\"() => selectProduct(product)\"\n          class=\"bg-light pd-small radius-small w-100\"\n        />\n      </Feed>\n    </Popup>\n    \n    <!-- Popup for selecting variant of the product -->\n    <Popup \n      title=\"Select variant\" \n      @close-popup=\"closeVariantsPopup\" \n      :isPopupOpen=\"isVariantsPopupOpen\"\n      class=\"bg-white w-100 w-max-30r  radius-medium pd-medium\"\n    >\n      <div class=\"gap-thin flex flex-column\">\n        <div \n          v-for=\"(variant, index) in selectedProduct.variants\" \n          :key=\"index\"\n          @click=\"addVariantToInventory(variant)\"\n          class=\"w-100 cursor-pointer hover-scale-1 bg-light pd-small radius-small flex-v-center flex-nowrap flex gap-thin\"\n        >\n          <div v-if=\"variant.images && variant.images.length\" class=\"aspect-1x1 h-3r radius-small o-hidden\">\n            <img \n              :src=\"(FILE_SERVER_URL || '') + variant.images[0]\" \n              class=\"w-100 h-100 object-fit-cover\"\n            />\n          </div>\n          <div>\n            <p class=\"t-medium\">{{ variant.name || 'Default variant' }}</p>\n            <p v-if=\"variant.attributes && variant.attributes.length\" class=\"t-small t-transp\">\n              {{ variant.attributes.map(attr => `${attr.name}: ${attr.value}`).join(', ') }}\n            </p>\n          </div>\n          <p class=\"mn-l-auto\">{{ formatPrice(variant.cost) }}</p>\n        </div>\n      </div>\n    </Popup>\n\n    <Block\n      class=\"mn-b-thin\"\n    >\n       <Field\n        v-model:field=\"leftovers.state.current.comment\"\n        placeholder=\"Describe details of the leftover\"\n        type=\"textarea\"\n        class=\"w-100 bg-white radius-small pd-medium\"\n      />  \n      <div class=\"t-medium mn-t-thin\">Select Storage:</div>\n      <Feed\n        :states=\"{\n          empty: {\n            title: 'No Spots Found',\n            description: 'Currently, there are no spots available.'\n          }\n        }\"\n        :store=\"{\n          read: (options) => spots.actions.read(options),\n          state: leftovers.state.state\n        }\"\n        :options=\"{\n          user: auth.state.user._id,\n          organization: route.params._id,\n          limit: 3\n        }\"\n        v-slot=\"{ \n          items \n        }\"\n        class=\"flex-nowrap flex-column gap-thin flex\"\n      >\n        <CardSpot\n          v-for=\"(spot, index) in items\"\n          :key=\"index\"\n          :spot=\"spot\"\n          :organization=\"route.params._id\"\n          :selected=\"leftovers.state.current.storage === spot._id\"\n          @click=\"() => leftovers.state.current.storage = leftovers.state.current.storage === spot._id ? null : spot._id\"\n          class=\"radius-medium bg-white\"\n        />\n      </Feed>\n\n\n    </Block>\n\n    <Block\n      title=\"Positions\"\n      :actions=\"[{\n        label: '+',\n        function: () => openProductsPopup()\n      }]\"\n      placeholder=\"No positions added yet\"\n      class=\"h-100 flex-column flex gap-thin mn-b-thin\"\n    >\n      <CardPosition\n        v-for=\"(position, index) in leftovers.state.current.positions\" \n        :key=\"position._id || index\" \n        :image=\"position.image\"\n        :name=\"position.name\"\n        :title=\"formatPrice(position.cost * position.quantity)\"\n        :title_class=\"[position.cost * position.quantity < 0 ? 't-red' : 't-second']\"\n        :subtitle=\"`${formatPrice(position.cost)} × ${Math.abs(position.quantity)}${position.unit} `\"\n      >\n        <template v-slot:actions>\n          <QuantitySelector v-model=\"position.quantity\"/>\n         \n          <!-- <Dropdown\n            :label=\"{ component: IconEllipsis, class: 't-transp i-medium' }\"\n            class=\"cursor-pointer aspect-1x1 pd-nano radius-small hover-bg-light\"\n            align=\"right\"\n          >\n            <div class=\"bg-white radius-small\">\n              <button @click=\"leftovers.state.current.positions.splice(index, 1)\" class=\"cursor-pointer t-left t-nowrap w-100 pd-small\">\n                Delete\n              </button>\n            </div>\n          </Dropdown> -->\n\n        </template>\n      </CardPosition>\n  \n    </Block>\n\n     <!--  :actions=\"[{\n          component: IconEdit,\n          handler: () => globals.actions.add(leftovers.state.current.positions, position),\n          class: 'bg-light'\n        },{\n          component: IconDelete,\n          handler: () => leftovers.state.current.positions.splice(index, 1),\n          class: 'bg-red'\n        }]\" -->\n\n    <Block class=\"\">\n      <section class=\"gap-thin flex-v-center flex-nojustify flex\">\n        <span class=\"h3 mn-r-auto\">\n          In total: {{formatPrice(totalPrice)}}\n        </span>\n\n         <!-- Save -->\n        <Button\n          :submit=\"onSubmit\"\n          class=\"bg-main w-min-5r  button\"\n        >\n          <span>Save</span>\n        </Button>\n\n        <!-- Reset -->\n        <Button\n          :submit=\"onReset\"\n          class=\"t-white w-min-5r bg-second button\"\n        >\n          <span>Reset</span>\n        </Button>\n\n        <!-- Delete -->\n        <Button\n          v-if=\"route.params.leftover\"\n          :submit=\"onDelete\"\n          class=\"t-white w-min-5r bg-red button\"\n        >\n          <span>Delete</span>\n        </Button>\n      </section>\n    </Block>\n  </div>\n</template>\n\n\n<script setup>\n  import Block from '@martyrs/src/components/Block/Block.vue';\n  import Button from \"@martyrs/src/components/Button/Button.vue\";\n  import Field from '@martyrs/src/components/Field/Field.vue';\n  import Feed from '@martyrs/src/components/Feed/Feed.vue';\n  import Select from '@martyrs/src/components/Select/Select.vue';\n  import Dropdown from '@martyrs/src/components/Dropdown/Dropdown.vue'\n  import Popup from '@martyrs/src/components/Popup/Popup.vue';\n\n  import CardOrderItem from '@martyrs/src/modules/orders/components/blocks/CardOrderItem.vue';\n  import CardSpot from '@martyrs/src/modules/spots/components/blocks/CardSpot.vue'; \n\n  import CardPosition from '../blocks/CardPosition.vue';\n  import QuantitySelector from '../elements/QuantitySelector.vue';\n\n  import { computed, onMounted, ref, reactive } from 'vue';\n  import { useRoute, useRouter } from 'vue-router';\n  import { useGlobalMixins } from '@martyrs/src/modules/globals/views/mixins/mixins.js';\n \n  import * as globals from '@martyrs/src/modules/globals/views/store/globals.js';\n  import * as auth from '@martyrs/src/modules/auth/views/store/auth.js';\n  import * as leftovers from '@martyrs/src/modules/products/store/leftovers.js';\n  import * as products from '@martyrs/src/modules/products/store/products.js';\n  import * as spots from '@martyrs/src/modules/spots/store/spots.js';\n\n  import IconEdit from '@martyrs/src/modules/icons/navigation/IconEdit.vue';\n  import IconDelete from '@martyrs/src/modules/icons/navigation/IconDelete.vue';\n  import IconEllipsis from '@martyrs/src/modules/icons/navigation/IconEllipsis.vue'\n\n  const route = useRoute();\n  const router = useRouter();\n  const { formatPrice } = useGlobalMixins();\n  \n  const isOpenProductsPopup = ref(false);\n  const isVariantsPopupOpen = ref(false);\n  const selectedProduct = ref(null);\n\n  const totalPrice = computed(() => {\n    return leftovers.state.current.positions.reduce((sum, position) => {\n      return Number(sum) + Number(position.cost || 0) * Number(position.quantity || 1);\n    }, 0);\n  });\n\n  function openProductsPopup() {\n    isOpenProductsPopup.value = true;\n  }\n\n  function closeProductsPopup() {\n    isOpenProductsPopup.value = false;\n  }\n  \n  function closeVariantsPopup() {\n    isVariantsPopupOpen.value = false;\n    selectedProduct.value = null;\n  }\n  \n  function selectProduct(product) {\n    selectedProduct.value = product;\n    closeProductsPopup();\n    \n    // If product has only one variant, add it directly without showing popup\n    if (product.variants && product.variants.length === 1) {\n      addVariantToInventory(product.variants[0]);\n      return;\n    }\n    \n    // If product has multiple variants or no variants defined, show popup\n    isVariantsPopupOpen.value = true;\n  }\n\n  function formatProductName(product, variant) {\n    if (!variant || product.variants?.length === 1 && !(variant.attributes?.length))\n      return product.name;\n\n    const attrs = variant.attributes?.map(a => a.value).filter(Boolean);\n    return attrs?.length\n      ? `${product.name} / ${attrs.join(' / ')}`\n      : `${product.name} / ${variant.name}`;\n  }\n\n  \n  function addVariantToInventory(variant) {\n    // Create a position object that includes variant information\n    console.log('variant',variant)\n    const position = {\n      _id: variant._id,\n      product: selectedProduct.value._id, \n      name: formatProductName(selectedProduct.value, variant),\n      image: variant.images?.[0] || selectedProduct.value?.images?.[0] || null,\n      cost: variant.cost || variant.price || 0,\n      unit: variant.unit || 'pcs',\n      quantity: 1,\n      variant: {\n        _id: variant._id,\n        name: variant.name,\n        attributes: variant.attributes || []\n      }\n    };\n    // Add position to leftover state\n    globals.actions.add(leftovers.state.current.positions, position);\n    closeVariantsPopup();\n  }\n\n  onMounted(async () => {\n    if (route.params.leftover) {\n      try {\n        await leftovers.actions.fetch(route.params.leftover);\n      } catch (error) {\n        console.error('Error fetching leftover:', error);\n      }\n    } else {\n      leftovers.state.current = { type: \"stock-in\", positions: [] };\n    }\n  });\n\n  async function onReset() {\n    if (route.params.leftover) {\n      await leftovers.actions.fetch(route.params.leftover);\n    } else {\n      leftovers.state.current = { type: \"stock-in\", positions: [] };\n    }\n    return true\n  }\n\n  function onSubmit() {\n    leftovers.state.current.organization = route.params._id;\n\n    if (route.params.leftover) {\n      leftovers.actions.update(leftovers.state.current).then(\n        () => router.push({ name: 'Leftovers', params: {_id: route.params._id} }),\n        (error) => console.error('Error updating leftover:', error)\n      );\n    } else {\n      leftovers.state.current.creator = {\n        type: 'user',\n        target: auth.state.user._id\n      }\n      leftovers.state.current.owner = {\n        type: 'organization',\n        target: route.params._id\n      }\n\n      leftovers.actions.create(leftovers.state.current).then(\n        () => router.push({ name: 'Leftovers', params: {_id: route.params._id} }),\n        (error) => console.error('Error creating leftover:', error)\n      );\n    }\n  }\n\n  function onDelete() {\n    leftovers.actions.delete(route.params.leftover).then(\n      () => router.push({ name: 'Leftovers', params: {_id: route.params._id} }),\n      (error) => console.error('Error deleting leftover:', error)\n    );\n  }\n</script>",
                "name": "LeftoverEdit.vue",
                "size": 11780,
                "type": "source"
              },
              {
                "path": "../../src/modules/products/components/pages/Leftovers.vue",
                "relativePath": "modules/products/components/pages/Leftovers.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"pd-thin\">\n    <!-- Header -->\n    <header class=\"mn-b-medium flex-v-center flex-nowrap flex\">\n      <h2>Leftovers</h2>\n      <button\n        @click=\"router.push({ name: 'LeftoverAdd' })\"\n        class=\"mn-l-small radius-100 i-big hover-scale-1 cursor-pointer t-white bg-second\"\n        v-html=\"'+'\"\n      />\n    </header>\n\n    <!-- Products Feed -->\n    <Feed\n      :search=\"true\"\n      v-model:filter=\"filter\"\n      v-model:sort=\"sort\"\n      :store=\"{\n        read: (options) => products.actions.read(options),\n        state: products.state\n      }\"\n      :actions=\"[{\n        key: 'settings',\n        component: IconSettings,\n        props: {\n          class: 'h-3r pd-r-small pd-l-small flex-center flex bg-light t-black radius-small hover-scale-1 cursor-pointer'\n        },\n        handler: openViewSettings\n      }]\"\n      :options=\"{\n        limit: 15,\n        lookup: ['leftovers','categories'],\n        owner: route.params._id,\n        sortParam: sort.param,\n        sortOrder: sort.order\n      }\"\n      v-slot=\"{ items }\"\n    >\n      <Table\n        :columns=\"columns.filter(col => col.visible)\"\n        :items=\"items\"\n        class=\"bg-white z-index-1 br-solid br-1px br-light radius-medium\"\n      >\n        <!-- Name column (was \"product\") -->\n        <template #cell-name=\"{ row }\">\n          <div class=\"flex gap-small flex-nowrap flex-v-center\">\n            <img\n              v-if=\"row.images?.length\"\n              :src=\"(FILE_SERVER_URL || '') + row.images[0]\"\n              alt=\"Product\"\n              class=\"w-3r h-3r radius-small bg-light object-fit-cover\"\n            />\n            <PlaceholderImage v-else class=\"w-3r h-3r radius-small\" />\n            <span class=\"t-nowrap\">{{ row.name }}</span>\n          </div>\n        </template>\n\n        <!-- Categories -->\n        <template #cell-category=\"{ row }\">\n          <span\n            v-if=\"row.category\"\n            v-for=\"cat in row.category\"\n            :key=\"cat._id\"\n            class=\"pd-nano mn-r-micro pd-r-small pd-l-small radius-small bg-light t-small\"\n          >\n            {{ cat.name }}\n          </span>\n          <span v-else>=</span>\n        </template>\n\n        <!-- Supplier -->\n        <template #cell-supplier=\"{ row }\">\n          {{ row.owner?.target?.profile?.name || '-' }}\n        </template>\n\n        <!-- Available (replaces stock) -->\n        <template #cell-available=\"{ row }\">\n          <div class=\"flex-column flex\">\n            <span class=\"d-block mn-b-thin\">\n              {{ row.available }} ·\n              {{ row.available <= 5 ? 'Low' : row.available <= 10 ? 'Medium' : 'High' }}\n            </span>\n            <div class=\"w-100 h-micro radius-thin bg-light\">\n              <div\n                class=\"h-100 radius-thin\"\n                :class=\"\n                  row.available <= 1\n                    ? 'bg-red t-white'\n                    : row.available <= 2\n                    ? 'bg-orange t-white'\n                    : 'bg-green t-white'\n                \"\n                :style=\"`width: ${\n                  Math.min(\n                    (row.available / (row.alert !== undefined ? row.alert : 50)) * 100,\n                    100\n                  )\n                }%`\"\n              />\n            </div>\n          </div>\n        </template>\n        <!-- Price -->\n        <template #cell-price=\"{ row }\">\n          {{ formatPrice(row.price) }}\n        </template>\n\n        <!-- Actions -->\n        <template #cell-actions=\"{ row }\">\n          <Dropdown\n            :label=\"{ component: IconEllipsis, class: 't-transp i-medium' }\"\n            class=\"cursor-pointer aspect-1x1 pd-nano radius-small hover-bg-light\"\n            align=\"right\"\n          >\n            <div class=\"bg-white radius-small\">\n              <button @click=\"openStockAudit(row)\" class=\"cursor-pointer t-left t-nowrap w-100 pd-small\">\n                Audit Stock\n              </button>\n              <button @click=\"openStockHistory(row)\" class=\"cursor-pointer t-left t-nowrap w-100 pd-small\">\n                Stock History\n              </button>\n              <button @click=\"openReorderSettings(row)\" class=\"cursor-pointer t-left t-nowrap w-100 pd-small\">\n                Set Alerts\n              </button>\n            </div>\n          </Dropdown>\n        </template>\n      </Table>\n    </Feed>\n\n    <!-- Modals -->\n    <Popup\n      :isPopupOpen=\"showAuditModal\"\n      @close-popup=\"showAuditModal = false\"\n      title=\"Audit Stock\"\n      class=\"bg-white radius-medium pd-medium w-min-40r\"\n    >\n      <StockAuditForm\n        :product=\"selectedProduct\"\n        @close=\"showAuditModal = false\"\n        @save=\"handleAuditSave\"\n      />\n    </Popup>\n\n    <Popup\n      :isPopupOpen=\"showReorderModal\"\n      @close-popup=\"showReorderModal = false\"\n      title=\"Set Automatic Reorder\"\n      class=\"bg-white radius-medium pd-medium w-min-30r\"\n    >\n      <ReorderSettingsForm\n        :product=\"selectedProduct\"\n        @close=\"showReorderModal = false\"\n        @save=\"handleReorderSave\"\n      />\n    </Popup>\n\n    <Popup\n      :isPopupOpen=\"showHistoryModal\"\n      @close-popup=\"showHistoryModal = false\"\n      title=\"Stock History\"\n      class=\"bg-white radius-medium pd-medium w-min-50r\"\n    >\n      <StockHistoryView\n        :product=\"selectedProduct\"\n        @close=\"showHistoryModal = false\"\n      />\n    </Popup>\n\n    <Popup\n      :isPopupOpen=\"showSettingsModal\"\n      @close-popup=\"showSettingsModal = false\"\n      title=\"View Settings\"\n      class=\"bg-white radius-medium pd-medium w-min-30r\"\n    >\n      <ColumnSettingsMenu\n        :columns=\"columns\"\n        @save=\"handleColumnsUpdate\"\n        @close=\"showSettingsModal = false\"\n      />\n    </Popup>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\n\n// Components\nimport Table from '@martyrs/src/components/Table/Table.vue'\nimport Feed from '@martyrs/src/components/Feed/Feed.vue'\nimport PlaceholderImage from '@martyrs/src/modules/icons/placeholders/PlaceholderImage.vue'\nimport Dropdown from '@martyrs/src/components/Dropdown/Dropdown.vue'\nimport Popup from '@martyrs/src/components/Popup/Popup.vue'\n\n// Icons\nimport IconSettings from '@martyrs/src/modules/icons/entities/IconSettings.vue'\nimport IconEllipsis from '@martyrs/src/modules/icons/navigation/IconEllipsis.vue'\n\n// Forms\nimport StockAuditForm from '../forms/StockAuditForm.vue'\nimport ReorderSettingsForm from '../forms/ReorderSettingsForm.vue'\nimport StockHistoryView from '../forms/StockHistoryView.vue'\nimport ColumnSettingsMenu from '../forms/ColumnSettingsMenu.vue'\n\n// Stores\nimport * as products from '@martyrs/src/modules/products/store/products.js'\nimport * as leftovers from '@martyrs/src/modules/products/store/leftovers.js'\n\n// Router\nconst route = useRoute()\nconst router = useRouter()\n\n// Feed controls\nconst sort = ref({\n  param: 'available',\n  order: 'asc',\n  options: [\n    { label: 'Available', value: 'available' },\n    { label: 'Name', value: 'name' },\n    { label: 'Price', value: 'price' },\n    { label: 'Created', value: 'createdAt' }\n  ]\n})\n\nconst filter = reactive({\n  active: false,\n  class: '',\n  selected: { category: [], stockLevel: [] },\n  options: [\n    { title: 'Categories', value: 'category', options: [] },\n    {\n      title: 'Stock Level',\n      value: 'stockLevel',\n      options: [\n        { label: 'Low', value: 'low' },\n        { label: 'Medium', value: 'medium' },\n        { label: 'High', value: 'high' }\n      ]\n    }\n  ]\n})\n\n// Column definitions + visibility, combined into one\nconst columns = reactive([\n  { key: 'name',     label: 'Product Name', component: true, visible: true },\n  { key: 'category', label: 'Categories',   component: true, visible: true },\n  { key: 'supplier', label: 'Supplier',     visible: true },\n  { key: 'available',label: 'Available',    component: true, visible: true },\n  { key: 'price',    label: 'Unit Price',   component: true, visible: true },\n  { key: 'actions',  label: '',             component: true, visible: true }\n])\n\n// Modal & selection state\nconst showAuditModal    = ref(false)\nconst showReorderModal  = ref(false)\nconst showHistoryModal  = ref(false)\nconst showSettingsModal = ref(false)\nconst selectedProduct   = ref(null)\n\n// Handlers\nfunction openStockAudit(row) {\n  selectedProduct.value = row\n  showAuditModal.value = true\n}\nfunction openReorderSettings(row = null) {\n  selectedProduct.value = row\n  showReorderModal.value = true\n}\nfunction openStockHistory(row) {\n  selectedProduct.value = row\n  showHistoryModal.value = true\n}\nfunction openViewSettings() {\n  showSettingsModal.value = true\n}\nasync function handleAuditSave(audit) {\n  try {\n    await leftovers.actions.create({\n      organization: route.params._id,\n      type: audit.discrepancy > 0 ? 'stock-in' : 'stock-out',\n      comment: audit.note,\n      positions: [{\n        _id: selectedProduct.value._id,\n        name: selectedProduct.value.name,\n        quantity: Math.abs(audit.discrepancy),\n        price: selectedProduct.value.price || 0,\n        type: 'pcs'\n      }],\n      creator: {\n        type: 'user',\n        target: window.auth?.state?.user?._id\n      },\n      owner: {\n        type: 'organization',\n        target: route.params._id\n      }\n    })\n    showAuditModal.value = false\n  } catch (err) {\n    console.error(err)\n  }\n}\nasync function handleReorderSave(settings) {\n  alert(`Reorder threshold set to ${settings.threshold} for ${selectedProduct.value?.name || 'all products'}`)\n  showReorderModal.value = false\n}\nfunction handleColumnsUpdate(updated) {\n  leftovers.mutations.updateColumnSettings(updated)\n  showSettingsModal.value = false\n}\n</script>\n\n<style>\n.bg-orange {\n  background-color: rgb(var(--orange));\n}\n</style>\n",
                "name": "Leftovers.vue",
                "size": 9713,
                "type": "source"
              },
              {
                "path": "../../src/modules/products/components/pages/Product.vue",
                "relativePath": "modules/products/components/pages/Product.vue",
                "extension": ".vue",
                "content": "<template>\n  <div v-if=\"products.state.current\" class=\"h-100 w-100 mobile:pd-thin pd-big bg-white\">\n    <div class=\"cols-2-1_2 w-100 gap-medium\">\n\n      <ProductImages\n        :images=\"currentImages\"\n        :product=\"product\"\n      />\n\n      <div class=\"pos-relative w-100 h-100 flex-column flex-h-center flex\">\n        <!-- Edit Button -->\n        <router-link\n          v-if=\"hasAccess(route.params._id, 'products', 'edit', auth.state.accesses, auth.state.access.roles)\"\n          :to=\"\n            route.params._id \n            ? { name: 'Organization_ProductEdit', params: { id: route.params._id, product: product._id } } \n            : { name: 'ProductEdit', params: { product: product._id } }\n          \"\n          class=\"\n            z-index-2\n            cursor-pointer \n            pos-absolute pos-t-zero pos-r-zero\n            radius-extra pd-thin bg-second\n          \"\n        >\n          <IconEdit\n            class=\"i-regular\"\n            classes=\"fill-white\"\n          />\n        </router-link>\n\n        <h2 class=\"w-100 h1-product mn-b-small\">{{ product.name }}</h2>\n        \n        <!-- Показываем цену, если нет вариантов или не выбран ни один вариант -->\n        <Price \n          v-if=\"!selectedVariant\"\n          :product=\"product\" \n          size=\"big\" \n          class=\"flex gap-micro flex-center pd-small br-solid br-1px br-black-transp-10 w-max mn-b-medium\" \n        />\n        \n        <!-- Показываем цену выбранного варианта -->\n        <div \n          v-else \n          class=\"flex gap-micro flex-center pd-small br-solid br-1px br-black-transp-10 w-max mn-b-medium\"\n        >\n          <span class=\"h2 t-bold\">{{ returnCurrency() }}{{ selectedVariant.price.toFixed(2) }}</span>\n        </div>\n\n        <p v-if=\"product.description\" class=\"w-100 mn-b-medium\">\n          {{ product.translations?.length > 1 ? t('description') : product.description }}\n        </p>\n       \n        <!-- Компонент выбора вариантов товара -->\n        <ProductConfigurator\n          v-if=\"product.variants.length > 0\"\n          :product-variants=\"product.variants\"\n          :product-id=\"product._id\"\n          :product-name=\"product.name\"\n          :discounts=\"product.discounts\"\n          :regularPrice=\"100\"\n          @variant-selected=\"handleVariantSelected\"\n          @add-to-cart=\"handleAddVariantToCart\"\n          @update-images=\"handleUpdateImages\"\n        />\n\n        <div class=\"mn-b-small flex-nowrap flex flex-v-center\">\n          <IconInfo class=\"mn-r-micro i-medium\"/>\n          <p class=\"t-medium \">Product Details</p>\n        </div>\n\n        <div class=\"cols-2 mn-b-medium w-100 gap-small\">\n          <div\n            v-if=\"product.attributes && product.attributes.length > 0\"\n            v-for=\"attributes in product.attributes\"\n            class=\"w-100 pd-small radius-small bg-light product-attributes\"\n          >\n            <p class=\"mn-b-thin t-demi\">{{ attributes.name }}</p>\n            <p>{{ attributes.value }}</p>\n          </div>\n        </div>\n\n        <div class=\"mn-b-small flex-nowrap flex flex-v-center\">\n          <IconGroups class=\"mn-r-micro i-medium\"/>\n          <p class=\"t-medium \">Provided by</p>\n        </div>\n\n        <CardOrganization \n          v-if=\"product.owner\"\n          :organization=\"product.owner.target\"\n          :showRating=\"true\"\n          :showFollowers=\"false\"\n          :showProducts=\"false\"\n          class=\"bg-light w-100 o-hidden radius-medium pd-small \"\n        />\n      </div>\n    </div>\n\n    <div class=\"h-max mn-t-big pos-relative\">\n      <h3 class=\"pd-b-small\">Most Popular</h3>\n      <ProductsPopular class=\"mn-r-big-negative mn-l-big-negative\"/>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed, ref, onMounted, getCurrentInstance } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\nimport { useI18n } from 'vue-i18n'\nimport { useGlobalMixins } from \"@martyrs/src/modules/globals/views/mixins/mixins.js\"\n\nimport * as auth from '@martyrs/src/modules/auth/views/store/auth.js'\nimport * as globals from '@martyrs/src/modules/globals/views/store/globals.js'\nimport * as products from '@martyrs/src/modules/products/store/products.js'\nimport * as categories from '@martyrs/src/modules/products/store/categories.js'\nimport * as shopcart from '@martyrs/src/modules/orders/store/shopcart.js'\n\nimport Button from '@martyrs/src/components/Button/Button.vue'\nimport Popup from '@martyrs/src/components/Popup/Popup.vue'\nimport Tab from '@martyrs/src/components/Tab/Tab.vue'\nimport Calendar from '@martyrs/src/components/DatePicker/Calendar.vue'\n\nimport IconEdit from '@martyrs/src/modules/icons/navigation/IconEdit.vue'\nimport IconShopcartAdd from '@martyrs/src/modules/icons/actions/IconShopcartAdd.vue'\n\nimport IconInfo from '@martyrs/src/modules/icons/navigation/IconInfo.vue'\nimport IconGroups from '@martyrs/src/modules/icons/entities/IconGroups.vue'\n\nimport ProductImages from '@martyrs/src/modules/products/components/blocks/ProductImages.vue'\nimport Price from '@martyrs/src/modules/products/components/elements/Price.vue'\nimport ProductsPopular from '@martyrs/src/modules/products/components/sections/ProductsPopular.vue'\nimport ProductConfigurator from '@martyrs/src/modules/products/components/sections/ProductConfigurator.vue'\n\nimport CardOrganization from '@martyrs/src/modules/organizations/components/blocks/CardOrganization.vue'\n\nconst route = useRoute()\nconst router = useRouter()\nconst { proxy } = getCurrentInstance()\nconst { returnCurrency, hasAccess } = useGlobalMixins()\n\nconst product = computed(() => products.state.current)\nconst productImages = computed(() => products.state.current.images || [])\n\n// Состояние для отслеживания текущих изображений (товара или варианта)\nconst currentImages = ref([])\n// Выбранный вариант товара\nconst selectedVariant = ref(null)\n\nconst text = {\n  en: { addtoorder: 'Add to Cart', fastorder: 'Fast Order', description: 'Description' },\n  ru: { addtoorder: 'Добавить в корзину', fastorder: 'Быстрый заказ', description: 'Описание' }\n}\n\nconst { t } = useI18n({ messages: text })\n\nconst emits = defineEmits(['page-loading', 'page-loaded']);\n\nconst recommendation = defineProps({\n  recommendation: {\n    type: Boolean,\n    default: false\n  }\n})\n  \nproducts.state.current = null\n\nonMounted(async () => {\n  emits('page-loading');\n  \n  await products.actions.read({ _id: route.params.product })\n  \n  // Инициализируем текущие изображения изображениями товара\n  currentImages.value = [...productImages.value]\n\n  if (typeof gtag === 'function') {\n    gtag('event', 'view_item', {\n      currency: returnCurrency(),\n      value: product.value.price || 0,\n      items: [{\n        item_id: product.value._id,\n        item_name: product.value.name,\n        price: product.value.price || 0,\n        item_category: product.value.category || '',\n        item_brand: product.value.owner?.target?.profile.name || ''\n      }]\n    });\n  }\n\n  emits('page-loaded');\n})\n\n// Обработчик выбора варианта\nfunction handleVariantSelected(variant) {\n  selectedVariant.value = variant\n}\n\n// Обработчик обновления изображений при выборе варианта\nfunction handleUpdateImages(images) {\n  if (images && images.length > 0) {\n    currentImages.value = [...images]\n  } else {\n    // Если у варианта нет изображений, возвращаем изображения товара\n    currentImages.value = [...productImages.value]\n  }\n}\n\n// Обработчик добавления варианта в корзину\nasync function handleAddVariantToCart(variantItem) {\n  try {\n    if (!shopcart.state.organization) {\n      shopcart.state.organization = product.value.owner.target._id\n    }\n    \n    // Проверка на товар с арендой\n    if (product.value.listing === 'rent') {\n      const selectedDates = await proxy.$dateSelector({\n        product: product.value\n      });\n      \n      if (!selectedDates) throw new Error('Date selection cancelled')\n      \n      variantItem.selectedDates = selectedDates\n    }\n    \n    // Проверка на разные организации в корзине\n    if (shopcart.state.organization !== product.value.owner.target._id) {\n      const result = await proxy.$alert({\n        title: 'Replace items in your cart?',\n        message: `Your cart has items from another vendor. If you continue, we'll clear it so you can order from this one instead.`,\n        actions: [\n          { label: 'Cancel', value: false },\n          { label: 'Replace', value: true }\n        ]\n      })\n\n      if (!result) throw new Error('Cart replacement cancelled')\n\n      shopcart.state.positions = []\n      shopcart.state.organization = product.value.owner.target._id\n    }\n\n    // Аналитика: регистрируем добавление в корзину\n    if (typeof gtag === 'function') {\n      gtag('event', 'add_to_cart', {\n        currency: returnCurrency(),\n        value: variantItem.price || 0,\n        items: [{\n          item_id: variantItem._id,\n          item_name: variantItem.name,\n          price: variantItem.price || 0,\n          quantity: 1,\n          item_category: product.value.category || '',\n          item_brand: product.value.owner?.target?.profile?.name || ''\n        }]\n      });\n    }\n    \n    // Добавляем вариант в корзину\n    await shopcart.actions.addVariantToCart(variantItem, product.value.owner.target._id)\n    return true\n  } catch (error) {\n    console.error('Error while adding variant to cart:', error)\n    throw error\n  }\n}\n\n// Оригинальная функция добавления товара в корзину (для товаров без вариантов)\nasync function addToCart(product) {\n  let selectedDates = null\n\n  try {\n    if (!shopcart.state.organization) {\n      shopcart.state.organization = product.owner.target._id\n    }\n    if (product.listing === 'rent') {\n      selectedDates = await proxy.$dateSelector({\n        product: product.value\n      });\n      \n      if (!selectedDates) throw new Error('Date selection cancelled')\n      \n    }\n    // Если организация товара отличается от текущей в корзине\n    if (shopcart.state.organization !== product.owner.target._id) {\n      const result = await proxy.$alert({\n        title: 'Replace items in your cart?',\n        message: `Your cart has items from another vendor. If you continue, we'll clear it so you can order from this one instead.`,\n        actions: [\n          { label: 'Cancel', value: false },\n          { label: 'Replace', value: true }\n        ]\n      })\n\n      if (!result) throw new Error('Cart replacement cancelled')\n\n      shopcart.state.positions = []\n      shopcart.state.organization = product.owner.target._id\n    }\n\n    if (typeof gtag === 'function') {\n      gtag('event', 'add_to_cart', {\n        currency: returnCurrency(),\n        value: product.price || 0,\n        items: [{\n          item_id: product._id,\n          item_name: product.name,\n          price: product.price || 0,\n          quantity: 1,\n          item_category: product.category || '',\n          item_brand: product.owner?.target?.profile?.name || ''\n        }]\n      });\n    }\n    \n    await shopcart.actions.addProductToCart(product, product.owner.target._id, selectedDates)\n    return true\n  } catch (error) {\n    console.error('Error while adding product to cart:', error)\n    throw error\n  }\n}\n</script>",
                "name": "Product.vue",
                "size": 11061,
                "type": "source"
              },
              {
                "path": "../../src/modules/products/components/pages/ProductEdit.vue",
                "relativePath": "modules/products/components/pages/ProductEdit.vue",
                "extension": ".vue",
                "content": "<template>\n  <div v-if=\"isPageLoaded\" class=\"w-100 bg-white pd-thin gap-thin\">\n    \n    <Block v-if=\"!MOBILE_APP\" class=\"flex-nowrap gap-thin flex-v-center flex\">\n      <h2 class=\"t-truncate mn-r-auto\">\n        {{ route.params.product ? products.state.current.name : 'Create Product' }}\n      </h2>\n\n      <Button \n        v-if=\"route.params.product\"\n        :submit=\"onDelete\" \n        :callback=\"redirectTo\"\n        class=\"w-10 w-max-20r w-min-8r bg-red\"\n      >\n        Delete \n      </Button>\n\n      <Button \n        :submit=\"onSubmit\" \n        :callback=\"redirectTo\"\n        class=\"w-10 w-max-20r w-min-8r bg-main\"\n      >\n        Save\n      </Button>\n    </Block>\n\n    <!-- Tab Navigation -->\n    <Tab\n      v-model:selected=\"activeTab\"\n      :tabs=\"[\n        { label: 'Details', value: 'details' },\n        { label: 'Variants', value: 'variants' },\n        { label: 'Discounts', value: 'discounts' },\n        { label: 'Localization', value: 'localization' }\n      ]\"\n      class=\"flex-child-default bg-light radius-medium h-max pd-thin o-x-scroll\"\n    />\n\n    <!-- Tab Content -->\n    <div v-if=\"activeTab === 'details'\" class=\"cols-1 gap-thin\">\n      <!-- Product Images -->\n      <Block\n        placeholder=\"The product doesn't have any images yet.\"\n        class=\"h-min\"\n      >\n        <EditImages \n          :images=\"products.state.current.images\"\n          :uploadPath=\"'photos'\" \n          @update:images=\"(imagesNew) => { products.state.current.images = imagesNew }\" \n        />\n      </Block>\n\n      <!-- Product Profile -->\n      <Block title=\"Profile\">\n        <div class=\"mn-b-thin flex-nowrap flex gap-thin\">\n          <Select \n            v-model:select=\"products.state.current.status\"\n            label=\"Status\"\n            :options=\"[\n              'draft', \n              'published',\n              'featured',\n              'archived',\n              'removed'\n            ]\"\n            placeholder=\"Display product\"\n            class=\"pos-relative w-100 bg-white radius-small pd-medium\"\n          />\n          <Select \n            v-model:select=\"products.state.current.listing\"\n            label=\"Type\"\n            :options=\"[\n              'sale', \n              'rent',\n            ]\"\n            placeholder=\"Type of listing\"\n            class=\"pos-relative w-100 bg-white radius-small pd-medium\"\n          />\n        </div>\n\n        <Field \n          v-model:field=\"products.state.current.name\" \n          placeholder=\"Enter product name\"\n          class=\"w-100 mn-b-thin bg-white radius-small pd-medium\"\n        />\n        <Field\n          v-model:field=\"products.state.current.description\" \n          placeholder=\"Enter product description\" \n          class=\"w-100 bg-white radius-small pd-medium\"\n          type=\"textarea\"\n        />\n      </Block>\n      {{products.state.current.category}}\n      <!-- Categories -->\n       <Block title=\"Categories\">\n        <BlockMultiselect\n          v-model=\"products.state.current.category\"\n          placeholder=\"Search categories...\"\n          :multiple=\"true\"\n          :store=\"{\n            read: (options) => categories.actions.read(options),\n            state: categories.state\n          }\"\n          :options=\"{\n            rootOnly: false,\n            excludeChildren: false,\n            limit: 50\n          }\"\n          :skeleton=\"{\n\t\t\t\t    hide: false,\n\t\t\t\t    horizontal: true,\n\t\t\t\t    structure: [\n\t\t\t\t      { block: 'text', size: 'large' }\n\t\t\t\t    ]\n\t\t\t\t  }\"\n          :states=\"{\n            empty: {\n              title: 'No categories found',\n              description: 'Try different search terms or create a new category'\n            }\n          }\"\n          key=\"_id\"\n          :label=\"item => item.name\"\n          classSearch=\"bg-white radius-small\"\n          classSelected=\"bg-white pd-small radius-small mn-b-thin\"\n          classDropdown=\"bg-white pd-small radius-medium bs-small\"\n          classItem=\"pd-small radius-small hover-bg-light cursor-pointer mn-b-thin\"\n         \tclassFeed=\"h-max-30r o-scroll\"\n        >\n          <!-- Слот для выбранных категорий -->\n          <template #selected=\"{ item, clear }\">\n            <div class=\"flex-nowrap flex-v-center flex gap-thin\">\n              <span class=\"t-medium\">{{ item.name }}</span>\n              <button \n                @click.stop=\"clear\"\n                class=\"i-small pd-micro bg-red radius-extra flex-center flex aspect-1x1 hover-scale-1\"\n              >\n                <IconCross class=\"i-micro fill-white\" />\n              </button>\n            </div>\n          </template>\n          \n          <!-- Слот для элементов в списке -->\n          <template #item=\"{ item }\">\n            <div class=\"flex-nowrap flex-v-center flex\">\n              <img \n                v-if=\"item.photo\" \n                :src=\"(FILE_SERVER_URL || '') + item.photo\"\n                class=\"i-medium radius-small object-fit-cover mn-r-thin\"\n              />\n              <div class=\"w-100\">\n                <p class=\"t-medium\">{{ item.name }}</p>\n                <p v-if=\"item.description\" class=\"t-small t-transp\">{{ item.description }}</p>\n              </div>\n            </div>\n          </template>\n        </BlockMultiselect>\n      </Block>\n\n\n      <!-- Attributes -->\n      <EditAttributes \n        v-model:attributes=\"products.state.current.attributes\" \n      />\n    </div>\n\n    <!-- Variants Tab -->\n    <EditVariants\n\t\t\tv-if=\"activeTab === 'variants'\"\n      v-model:variants=\"products.state.current.variants\" \n    />\n\n    <!-- Discounts Tab -->\n    <EditDiscounts\n\t\t\tv-if=\"activeTab === 'discounts'\"\n      v-model:discounts=\"products.state.current.discounts\"\n    />\n\n    <!-- Localization Tab -->\n    <Block\n\t\t  v-if=\"activeTab === 'localization'\"\n      title=\"Localization\"\n      placeholder=\"No localizations added yet\"\n      :actions=\"[{\n        label: '+',\n        function: () => products.state.current.translations.push({locale: '', name: '', description: ''})\n      }]\"\n    >\n      <div \n        class=\"gap-thin mn-b-thin flex-nowrap flex\" \n        v-for=\"(item, index) in products.state.current.translations\" \n        :key=\"index\"\n      > \n        <Field\n          v-model:field=\"item.locale\"\n          placeholder=\"Locale (en, ru, etc.)\"\n          class=\"w-30 bg-white radius-small pd-medium\"\n        />  \n        <Field\n          v-model:field=\"item.name\"\n          placeholder=\"Product name\"\n          class=\"w-100 bg-white radius-small pd-medium\"\n        />\n        <Field\n          v-model:field=\"item.description\"\n          placeholder=\"Product description\"\n          class=\"w-100 bg-white radius-small pd-medium\"\n        />\n        <div class=\"radius-small pd-small flex-center flex aspect-1x1 bg-red cursor-pointer hover-scale-1\">\n          <IconDelete \n            @click=\"() => products.state.current.translations.splice(index, 1)\" \n            class=\"i-medium\"\n          />\n        </div>\n      </div>\n    </Block>\n\n    <!-- Bottom Action Buttons -->\n    <div class=\"flex-nowrap flex gap-thin\">\n      <Button \n        v-if=\"route.params.product\"\n        :submit=\"onDelete\" \n        :callback=\"redirectTo\"\n        class=\"bg-red t-white w-100 mn-t-thin\"\n      >\n        Delete \n      </Button>\n\n      <Button \n        :submit=\"onSubmit\" \n        :callback=\"redirectTo\"\n        class=\"w-100 bg-main\"\n      >\n        Save\n      </Button>\n    </div>\n  </div>\n</template>\n\n<script setup>\n// Import libs\nimport { reactive, computed, onMounted, ref } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\n\n// Import components\nimport Block from '@martyrs/src/components/Block/Block.vue';\nimport Tab from \"@martyrs/src/components/Tab/Tab.vue\";\nimport Field from \"@martyrs/src/components/Field/Field.vue\";\nimport Select from '@martyrs/src/components/Select/Select.vue';\nimport Checkbox from \"@martyrs/src/components/Checkbox/Checkbox.vue\";\nimport Button from \"@martyrs/src/components/Button/Button.vue\";\nimport Tree from \"@martyrs/src/components/Tree/Tree.vue\";\nimport EditImages from '@martyrs/src/components/EditImages/EditImages.vue';\n\nimport BlockMultiselect from '@martyrs/src/modules/globals/views/components/blocks/BlockMultiselect.vue';\nimport IconCross from '@martyrs/src/modules/icons/navigation/IconCross.vue';\nimport IconDelete from '@martyrs/src/modules/icons/navigation/IconDelete.vue';\n\nimport EditVariants from '@martyrs/src/modules/products/components/sections/EditVariants.vue';\nimport EditAttributes from '@martyrs/src/modules/products/components/sections/EditAttributes.vue';\nimport EditDiscounts from '@martyrs/src/modules/products/components/sections/EditDiscounts.vue';\nimport EditCategories from '@martyrs/src/modules/products/components/sections/EditCategories.vue';\n\n\n// Accessing router and store\nimport * as globals from '@martyrs/src/modules/globals/views/store/globals.js';\nimport * as auth from '@martyrs/src/modules/auth/views/store/auth.js';\nimport * as products from '@martyrs/src/modules/products/store/products.js';\nimport * as categories from '@martyrs/src/modules/products/store/categories.js';\n\nimport { setError } from '@martyrs/src/modules/globals/views/store/globals.js'\n\nconst route = useRoute()\nconst router = useRouter()\nconst emits = defineEmits(['page-loading', 'page-loaded']);\n\nlet isPageLoaded = ref(false)\nlet activeTab = ref('details')\n\nonMounted(async() => { \n  emits('page-loading');\n\n  products.mutations.resetProduct();\n\n  if (route.params.product) {\n    await products.actions.read({ _id: route.params.product, lookup: ['variants'] });\n  } else {\n    // Создаем дефолтный вариант для нового товара\n    if (!products.state.current.variants || products.state.current.variants.length === 0) {\n      products.state.current.variants = [{\n        name: 'Default',\n        sku: '',\n        images: [],\n        price: 0,\n        cost: 0,\n        quantity: 1,\n        unit: 'pcs',\n        available: 0,\n        ingredients: [],\n        attributes: []\n      }];\n    }\n  }\n\n  // Убедимся, что массивы инициализированы\n  if (!products.state.current.translations) {\n    products.state.current.translations = []\n  }\n  if (!products.state.current.discounts) {\n    products.state.current.discounts = []\n  }\n\n  try {\n    // Data prefetching\n    categories.state.all = await categories.actions.read({\n      user: auth.state.user._id,\n      rootOnly: true,\n      excludeChildren: false,\n      limit: 100\n    })\n  } catch (error) {\n    console.error('error loading categories:', error);\n  }\n\n  emits('page-loaded');\n  isPageLoaded.value = true\n})\n\nasync function onSubmit() {\n  try {\n    // Проверка на наличие хотя бы одного варианта\n    if (!products.state.current.variants || products.state.current.variants.length === 0) {\n      setError({ response: { data: { errorCode: \"PRODUCT_MUST_HAVE_VARIANT\" }} })\n      return;\n    }\n\n    if (route.params.product) {\n      await products.actions.update(route.params.product, products.state.current)\n    } else {\n      products.state.current.owner = {\n        target: route.params._id || auth.state.user._id,\n        type: route.params._id ? 'organization' : 'user'\n      }\n      \n      products.state.current.creator = {\n        target: auth.state.user._id,\n        type: 'user',\n        hidden: false\n      }\n      await products.actions.create(products.state.current)\n    }\n    \n    redirectTo()\n  } catch (error) {\n    setError({ response: { data: { errorCode: \"PRODUCT_NOT_CREATED\" }} })\n    console.error('Product creation error:', error)\n  }\n}\n\nfunction onDelete() {\n  products.actions.deleteProduct(products.state.current._id)\n}\n\nfunction redirectTo() {\n  router.push({\n    name: route.params._id ? 'Organization' : 'Products', \n    params: route.params._id ? { _id: route.params._id } : {}\n  })\n}\n</script>",
                "name": "ProductEdit.vue",
                "size": 11655,
                "type": "source"
              },
              {
                "path": "../../src/modules/products/components/pages/ProductRecommmendation.vue",
                "relativePath": "modules/products/components/pages/ProductRecommmendation.vue",
                "extension": ".vue",
                "content": "<template>\n    <div id=\"product-recommendation\" class=\"h-min-100 pd-thin t-white bg-black\">\n        <Loader v-if=\"loading\" :status=\"loadingText\" class=\"pos-fixed\"/>\n\n        <div v-if=\"!loading && !showInput\" class=\"section\">\n\n            <div v-if=\"!loading\" class=\"mn-b-thin\">\n                <FieldBig \n                    :input=\"inputValue\" \n                    :loopTyping=\"false\"\n                    :enableTyping=\"false\"\n                    :placeholder=\"t('placeholder')\"\n                    :action=\"t('action')\"\n                    @update:input=\"inputValue = $event\"\n                    @action=\"submitInput\"\n                    class=\"t-white bg-dark-transp-50 w-100\"\n                 />\n            </div>\n\n            <SectionProduct \n                :product=\"products.state.current\" \n                :recommendation=\"products.state.current.recommendation\" \n                class=\"bg-dark-transp-50 pd-big radius-medium\"\n            />\n        </div>\n    </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, watchEffect } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useI18n } from 'vue-i18n'\nimport Loader from '@martyrs/src/components/Loader/Loader.vue'\nimport Breadcrumbs from '@martyrs/src/components/Breadcrumbs/Breadcrumbs.vue'\nimport FieldBig from \"@martyrs/src/components/FieldBig/FieldBig.vue\";\nimport SectionProduct from '@martyrs/src/modules/products/components/sections/SectionProduct.vue'\nimport HeroRecommendation           from '@martyrs/src/modules/products/components/sections/HeroRecommendation.vue'\n\nimport * as products from '@martyrs/src/modules/products/store/products.js';\n\nconst router = useRouter()\nconst loading = ref(true)\nconst showInput = ref(false)\nconst loadingTexts = ref([\n    \"Loading all we know about the buds\",\n    \"Processing the cannabis universe\",\n    \"Creating a strain of knowledge\",\n    \"Harvesting taste insights\",\n])\n\nconst text = {\n    messages: {\n        en: {\n            TITLE: \"Increase Your High,<br><b class='t-white'>Powered by AI Budtender</b>\",\n            DESCRIPTION: \"AI's got your chill, bro. We're picking out the most cosmic weed strains based on your desired vibe:\",\n            placeholder: 'Describe your desired high, bro...',\n            action: \"Transmit →\",\n        },\n        ru: {\n            TITLE: \"Персональный Накур,<br><b class='t-white'>Напрямую от AI</b>\",\n            DESCRIPTION: \"AI на страже твоего релакса, бро. Мы подбираем самые космические сорта травы, исходя из твоего желаемого настроения:\",\n            placeholder: 'Опиши свой желамый хай, bro...',\n            action: \"Передать →\",\n        }\n    }\n}\n\nconst { t } = useI18n(text)\n\nconst loadingText = ref(loadingTexts.value[0])\n\nlet mood = ref(router.currentRoute.value.query.mood || t('Recommend me something'))\n\nwatchEffect(async () => {\n    mood.value = router.currentRoute.value.query.mood || t('Recommend me something')\n    loading.value = true\n    await products.actions.submitMood(mood.value)\n    loading.value = false\n})\n\nonMounted(async () => {\n    // await products.actions.submitMood(mood.value)\n    // loading.value = false\n})\n\nsetInterval(() => {\n    const index = loadingTexts.value.indexOf(loadingText.value)\n    loadingText.value = loadingTexts.value[(index + 1) % loadingTexts.value.length]\n}, 2000)\n\nlet inputValue = ref(router.currentRoute.value.query.mood || t('Recommend me something'))\n\nfunction submitInput() {\n    router.push({ name: 'Product Recommmendation', query: { mood: inputValue.value } })\n}\n\n\nfunction tryAgain() {\n    loading.value = true\n    showInput.value = true\n}\n\nfunction hideInput() {\n    showInput.value = false\n}\n</script>\n\n<style scoped>\n/* Add your styles here */\n</style>\n",
                "name": "ProductRecommmendation.vue",
                "size": 3694,
                "type": "source"
              },
              {
                "path": "../../src/modules/products/components/pages/Products.vue",
                "relativePath": "modules/products/components/pages/Products.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"h-100 pos-relative\">\n    <header \n      v-if=\"route.name !== 'Organization' && !MOBILE_APP\"\n      class=\"pd-medium flex-v-center flex-nowrap flex\"\n    >\n      <h2 class=\"mn-r-medium\">Products</h2>\n      <button \n        v-if=\"hasAccess(route.params._id, 'products', 'create', auth.state.accesses, auth.state.access.roles)\"\n        @click=\"$router.push({\n          name: route.params?._id ? 'Organization_ProductAdd' : 'ProductAdd'\n        })\" \n        class=\"radius-100 i-big hover-scale-1 cursor-pointer t-white bg-second\">\n          +\n      </button>\n    </header>\n\n  <Tab \n    v-if=\"route.name !== 'Organization' &&  isAdmin\"\n    v-model:selected=\"tabProducts\"\n    :tabs=\"[\n      { name: 'All',          value: 'all' },\n      { name: 'Published',    value: 'published' },\n      { name: 'Unpublished',  value: 'unpublished' }, \n      { name: 'Archivied',    value: 'archivied' } \n    ]\"\n    style=\"flex: 0 0 auto\"\n   class=\"\n\n        p-medium\n        br-t br-solid br-light \n        bg-white\n        gap-micro pd-medium pd-t-thin pd-b-thin\n        z-index-1\n\n      \"\n      tabClass=\"bg-light  uppercase pd-small radius-small w-100\"\n  />\n\n  <div class=\"cols-2-1_3 br-1px br-solid br-light h-100 z-index-3 pos-relative radius-medium\">\n\n  <div class=\"o-y-scroll br-r br-solid br-light pd-medium z-index-2 desktop-only h-100 pos-relative\">\n    <BlockFilter\n      v-model:filter=\"products.state.filter\"\n      :options=\"products.state.filter.options\"\n      class=\"h-100 w-100\"\n    />\n  </div>\n\n    <div class=\"w-100 pd-thin h-max pos-relative o-hidden\">\n      <slot></slot>\n      <div class=\"pos-relative w-100  z-index-3 radius-tl-big radius-tr-big\">\n        <BlockSearch \n          @search=\"debouncedSearch\"\n          placeholder=\"Enter product name\"\n          class=\"bg-light mn-b-thin h-4r\"\n        />\n      </div>\n      <Feed\n        v-model:filter=\"products.state.filter\"\n        :showLoadMore=\"false\"\n        :states=\"{\n          empty: {\n            title: 'No Products Found',\n            description: 'Currently, there are no products available.'\n          }\n        }\"\n        :store=\"{\n          read: (options) => products.actions.read(options),\n          state: products.state\n        }\"\n        :options=\"{\n          limit: 16,\n          owner: route.params._id,\n          categories: route.query.categories,\n          filters: generateFilters(products.state.filter.selected),\n          prices: route.query.prices,\n          delivery: route.query.delivery,\n          search: route.query.search,\n          ...(tabProducts !== 'all' && { status: tabProducts })\n          // user: user\n        }\"\n        v-slot=\"{ \n          items \n        }\"\n        class=\"cols-4 pos-relative w-100 rows-1 gap-thin\"\n       \n      >\n        <router-link  \n          v-for=\"product in items\" \n          :to=\"route.params._id ? { name: 'Organization_Product', params: { _id: route.params._id, product: product._id  } } : { name: 'Product', params: { product: product._id  } }\"\n           class=\"pos-relative h-100 w-100\"\n          >\n          <CardProduct\n            :key=\"product._id\"\n            :product=\"product\"\n            :user=\"auth.state.access\"\n            :organization=\"route.params._id\"\n            :access=\"hasAccess(route.params._id, 'products', 'edit', auth.state.accesses, auth.state.access.roles)\"\n            class=\"pos-relative  h-100 w-100 bg-light\"\n          />\n        </router-link>\n      </Feed>\n\n    </div>\n  </div>\n</div>\n</template>\n\n\n<script setup=\"props\">\n  // Import libs\n  import { ref, computed, watch, onMounted, onUnmounted } from 'vue'\n  import { useRoute, useRouter } from 'vue-router'\n\n  // Import components\n  import Tab from '@martyrs/src/components/Tab/Tab.vue'\n  import Feed from '@martyrs/src/components/Feed/Feed.vue'\n\n  import FilterProducts from '@martyrs/src/modules/products/components/sections/FilterProducts.vue'\n  import BlockSearch from '@martyrs/src/modules/globals/views/components/blocks/BlockSearch.vue'\n  import BlockFilter  from '@martyrs/src/modules/globals/views/components/blocks/BlockFilter.vue'\n\n  import CardProduct from '@martyrs/src/modules/products/components/blocks/CardProduct.vue'\n\n  import IconPlus from '@martyrs/src/modules/icons/navigation/IconPlus.vue'\n\n  // Accessing router and store\n  import * as auth from '@martyrs/src/modules/auth/views/store/auth.js';\n  import * as globals from '@martyrs/src/modules/globals/views/store/globals.js';\n  import * as products from '@martyrs/src/modules/products/store/products.js';\n  import * as marketplace from '@martyrs/src/modules/marketplace/views/store/marketplace.js';\n  import * as categories from '@martyrs/src/modules/products/store/categories.js';\n\n  const route = useRoute()\n  const router = useRouter()\n\n  // Tab logic\n  const tabProducts = ref(route.query.tabProducts ? route.query.tabProducts : 'all')\n\n  if (route.name !== 'Organization') route.query.tabProducts = tabProducts.value\n  \n  if (route.query) {\n    const query = route.query;\n\n    products.state.filter.selected.categories = query.categories ? query.categories.split(',') : [];\n    products.state.filter.selected.prices = query.prices ? query.prices.split(',') : [];\n    products.state.filter.selected.delivery = query.delivery ? query.delivery.split(',') : [];\n    products.state.filter.selected.brand = query.brand ? query.brand.split(',') : [];\n  }\n\n\n  watch(tabProducts, (newValue) => {\n    if (route.name !== 'Organization') router.replace({ query: { ...route.query, tabProducts: newValue } });\n  });\n\n  globals.state.navigation_bar.actions = [{\n    component: IconPlus,\n    props: {\n      fill: \"rgb(var(--main))\" \n    },\n    condition: () => auth.state.user && auth.state.user._id,\n    action: () => route.params._id ? router.push({ name: 'Organization_ProductAdd', params: { _id: route.params._id} }) : router.push({ name: 'ProductAdd' })\n  }],\n\n  onMounted(async () => {\n    let categoriesFilter = await categories.actions.read({rootOnly:true});\n\n    categoriesFilter = categoriesFilter.map(category => ({\n      value: category._id,\n      label: category.name\n    }));\n\n    const index = products.state.filter.options.findIndex(option => option.value === 'categories');\n\n    const categoryOption = {\n      title: 'Categories',\n      value: 'categories',\n      options: categoriesFilter\n    };\n\n    if (index !== -1) {\n        products.state.filter.options[index] = categoryOption;\n    } else {\n        products.state.filter.options.unshift(categoryOption);\n    }\n  })\n\n  onUnmounted(() => {\n    globals.state.navigation_bar.actions = [];\n  });\n\n  watch(() => products.state.sort, (newSortValue, oldSortValue) => {\n    let query = { ...route.query}\n    \n    query.sortParam = newSortValue.param\n    query.sortOrder = newSortValue.order\n    \n    // replace the current route\n    router.replace({ query });\n  }, { deep: true });\n\n\n  watch(() => products.state.filter.selected, (newFilterValue, oldFilterValue) => {\n    // Переводим фильтр в формат query\n    const query = { ...route.query };\n\n    // Удаляем старые значения фильтра из query\n    Object.keys(oldFilterValue).forEach(key => {\n      if (query[key]) {\n        delete query[key];\n      }\n    });\n\n    // Добавляем новые значения фильтра в query\n    const newQueryValues = Object.fromEntries(\n      Object.entries(newFilterValue)\n        .filter(([key, value]) => Array.isArray(value) && value.length > 0)\n        .map(([key, value]) => [key, value.join(',')])\n    );\n\n    delete query.options;\n    Object.assign(query, newQueryValues);\n\n    // Обновляем маршрут с новым query\n    router.replace({ query });\n  }, { deep: true })\n\n\nfunction debounce(fn, delay) {\n  let timeoutId = null;\n  return (...args) => {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => fn(...args), delay);\n  };\n}\n\nconst debouncedSearch = debounce((search) => {\n let query = { ...route.query}\n    \n  query.search = search\n  \n  router.replace({ query });\n}, 500);\n\n</script>\n\n<style lang=\"scss\">\n\n\n</style>\n",
                "name": "Products.vue",
                "size": 7966,
                "type": "source"
              }
            ]
          },
          "sections": {
            "_files": [
              {
                "path": "../../src/modules/products/components/sections/EditAttributes.vue",
                "relativePath": "modules/products/components/sections/EditAttributes.vue",
                "extension": ".vue",
                "content": "<template>\n  <Block\n    title=\"Parameters\"\n    placeholder=\"No parameters added yet\"\n    :actions=\"[{\n      label: '+',\n      function: () => openAttributePopup()\n    }]\"\n  >\n    <div v-if=\"attributes.length > 0\" class=\"cols-1 gap-thin\">\n      <div\n        v-for=\"(attribute, index) in attributes\"\n        :key=\"index\"\n        class=\"bg-white radius-small pd-small flex-nowrap flex-v-center flex gap-thin\"\n      >\n        <div class=\"w-100\">\n          <p class=\"p-medium mn-b-thin t-medium d-block\">{{ attribute.name || 'Unnamed parameter' }}</p>\n          <p class=\"t-medium t-transp\">{{ attribute.value || 'No value' }}</p>\n        </div>\n        \n        <div class=\"flex gap-thin\">\n          <div @click=\"() => openAttributePopup(index)\" class=\"radius-small pd-small flex-center flex aspect-1x1 bg-light cursor-pointer hover-scale-1\">\n            <IconEdit\n              class=\"i-regular\"\n            />\n          </div>\n          <div @click=\"() => attributes.splice(index, 1)\" class=\"radius-small pd-small flex-center flex aspect-1x1 bg-red cursor-pointer hover-scale-1\">\n            <IconDelete\n              class=\"i-regular\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  </Block>\n\n  <Popup\n    title=\"Edit Parameter\"\n    @close-popup=\"closeAttributePopup\"\n    :isPopupOpen=\"isAttributePopupOpen\"\n    class=\"bg-white w-max-40r radius-medium pd-medium\"\n  >\n    <div class=\"cols-1 gap-thin\">\n      <Field\n        v-model:field=\"currentAttribute.name\"\n        label=\"Name\"\n        placeholder=\"Parameter Name\"\n        class=\"w-100 bg-light radius-small pd-small\"\n      />\n\n      <Field\n        v-model:field=\"currentAttribute.value\"\n        label=\"Value\"\n        placeholder=\"Parameter Value\"\n        class=\"w-100 bg-light radius-small pd-small\"\n      />\n\n      <div class=\"flex gap-thin mn-t-medium\">\n        <Button\n          :showSuccess=\"false\"\n          :showLoader=\"false\"\n          class=\"bg-red t-white w-100\"\n          @click=\"closeAttributePopup\"\n        >\n          Cancel\n        </Button>\n        <Button\n          class=\"bg-main w-100\"\n          @click=\"saveAttribute\"\n        >\n          Save Parameter\n        </Button>\n      </div>\n    </div>\n  </Popup>\n</template>\n\n<script setup>\nimport { ref, reactive, defineModel } from 'vue';\nimport Block from '@martyrs/src/components/Block/Block.vue';\nimport Field from '@martyrs/src/components/Field/Field.vue';\nimport Button from '@martyrs/src/components/Button/Button.vue';\nimport Popup from '@martyrs/src/components/Popup/Popup.vue';\nimport IconEdit from '@martyrs/src/modules/icons/navigation/IconEdit.vue';\nimport IconDelete from '@martyrs/src/modules/icons/navigation/IconDelete.vue';\n\n// Используем defineModel для работы с v-model в родительском компоненте\nconst attributes = defineModel('attributes');\n\n// Локальное состояние\nconst isAttributePopupOpen = ref(false);\nconst editingAttributeIndex = ref(null);\nconst currentAttribute = reactive({\n  name: '',\n  value: ''\n});\n\n// Функция открытия попапа добавления/редактирования\nfunction openAttributePopup(index) {\n  // Если передан индекс, это редактирование существующего атрибута\n  if (index !== undefined) {\n    editingAttributeIndex.value = index;\n    const attribute = attributes.value[index];\n    \n    // Копируем данные в currentAttribute\n    Object.assign(currentAttribute, {\n      name: attribute.name || '',\n      value: attribute.value || ''\n    });\n  } else {\n    // Сброс данных при создании нового атрибута\n    editingAttributeIndex.value = null;\n    Object.assign(currentAttribute, {\n      name: '',\n      value: ''\n    });\n  }\n  \n  isAttributePopupOpen.value = true;\n}\n\n// Закрытие попапа\nfunction closeAttributePopup() {\n  isAttributePopupOpen.value = false;\n  editingAttributeIndex.value = null;\n}\n\n// Сохранение атрибута\nfunction saveAttribute() {\n  // Проверка на основные поля\n  if (!currentAttribute.name) {\n    alert('Parameter name is required');\n    return;\n  }\n\n  // Создаем копию текущего атрибута для сохранения\n  const attributeToSave = {\n    name: currentAttribute.name,\n    value: currentAttribute.value\n  };\n\n  // Если редактируем существующий атрибут\n  if (editingAttributeIndex.value !== null) {\n    // Обновляем существующий атрибут\n    attributes.value.splice(editingAttributeIndex.value, 1, attributeToSave);\n  } else {\n    // Добавляем новый атрибут\n    attributes.value.push(attributeToSave);\n  }\n\n  // Закрываем попап\n  closeAttributePopup();\n}\n</script>",
                "name": "EditAttributes.vue",
                "size": 4443,
                "type": "source"
              },
              {
                "path": "../../src/modules/products/components/sections/EditCategories.vue",
                "relativePath": "modules/products/components/sections/EditCategories.vue",
                "extension": ".vue",
                "content": "<template>\n  <Block\n    title=\"Categories\"\n    placeholder=\"No categories selected\"\n  >\n    <SelectMulti\n      v-model=\"selectedCategories\"\n      :options=\"availableCategories\"\n      :multiple=\"true\"\n      :searchable=\"true\"\n      :close-on-select=\"true\"\n      :clear-on-select=\"false\"\n      :preserve-search=\"true\"\n      :placeholder=\"'Add product categories...'\"\n      :label=\"'name'\"\n      :track-by=\"_id\"\n      :custom-label=\"getCategoryLabel\"\n      :taggable=\"false\"\n      :show-labels=\"false\"\n      @update:modelValue=\"handleSelectionChanged\"\n      class=\"bg-white radius-medium\"\n    />\n\n    <div v-if=\"suggestedCategories.length > 0\" class=\"mn-t-small\">\n      <p class=\"p-small mn-b-thin t-transp\">Suggested categories:</p>\n      <div class=\"flex flex-wrap gap-nano\">\n        <span \n          v-for=\"category in suggestedCategories\" \n          :key=\"category._id\"\n          @click=\"addCategory(category)\"\n          class=\"cursor-pointer hover-scale-1 bg-main t-black radius-extra pd-thin\"\n        >\n          {{ getCategoryPath(category) }}\n        </span>\n      </div>\n    </div>\n  </Block>\n</template>\n\n<script setup>\nimport { ref, computed, watch } from 'vue';\nimport Block from '@martyrs/src/components/Block/Block.vue';\n\nimport SelectMulti from '@martyrs/src/components/SelectMulti/SelectMulti.vue';\n\nconst props = defineProps({\n  /**\n   * Array of selected category IDs (v-model)\n   */\n  modelValue: {\n    type: Array,\n    default: () => []\n  },\n  /**\n   * Flat array of all available categories\n   * Each category: { _id, name, parent, path }\n   */\n  categories: {\n    type: Array,\n    required: true\n  },\n  /**\n   * Maximum number of categories to suggest\n   */\n  maxSuggestions: {\n    type: Number,\n    default: 5\n  }\n});\n\nconst emit = defineEmits(['update:modelValue']);\n\n// State\nconst categoryMap = ref({});\nconst selectedCategories = ref([]);\n\n// Build category map for quick lookups\nfunction buildCategoryMap() {\n  categoryMap.value = {};\n  props.categories.forEach(cat => {\n    categoryMap.value[cat._id] = cat;\n  });\n}\n\n// Initialize category map\nwatch(() => props.categories, () => {\n  buildCategoryMap();\n}, { immediate: true });\n\n// Sync modelValue (IDs) with selectedCategories (objects)\nwatch(() => props.modelValue, (newIds) => {\n  selectedCategories.value = newIds.map(id => categoryMap.value[id]).filter(Boolean);\n}, { immediate: true });\n\n// Get full category path (e.g., \"Electronics > Phones > Smartphones\")\nfunction getCategoryPath(category) {\n  if (!category) return '';\n  \n  const path = [category.name];\n  let current = category;\n  \n  while (current.parent && categoryMap.value[current.parent]) {\n    current = categoryMap.value[current.parent];\n    path.unshift(current.name);\n  }\n  \n  return path.join(' › ');\n}\n\n// Custom label for multiselect display\nfunction getCategoryLabel(category) {\n  return category.name;\n}\n\n// Available categories (not selected)\nconst availableCategories = computed(() => {\n  return props.categories.filter(cat => \n    !props.modelValue.includes(cat._id)\n  );\n});\n\n// Get suggested categories (most popular or relevant)\nconst suggestedCategories = computed(() => {\n  // Filter out already selected categories\n  const available = props.categories.filter(cat => \n    !props.modelValue.includes(cat._id)\n  );\n  \n  // You can implement your own logic here\n  // For example: sort by popularity, relevance, or just take first N\n  return available.slice(0, props.maxSuggestions);\n});\n\n// Handle selection changes from Multiselect\nfunction handleSelectionChanged(newSelection) {\n  const newIds = newSelection.map(cat => cat._id);\n  emit('update:modelValue', newIds);\n}\n\n// Add category from suggestions\nfunction addCategory(category) {\n  if (!props.modelValue.includes(category._id)) {\n    const newIds = [...props.modelValue, category._id];\n    emit('update:modelValue', newIds);\n    // Update selectedCategories for immediate UI update\n    selectedCategories.value = [...selectedCategories.value, category];\n  }\n}\n</script>",
                "name": "EditCategories.vue",
                "size": 3985,
                "type": "source"
              },
              {
                "path": "../../src/modules/products/components/sections/EditDiscounts.vue",
                "relativePath": "modules/products/components/sections/EditDiscounts.vue",
                "extension": ".vue",
                "content": "<template>\n  <Block\n    title=\"Discounts\"\n    placeholder=\"No discounts added yet\"\n    :actions=\"[{\n      label: '+',\n      function: () => openDiscountPopup()\n    }]\"\n  >\n    <div v-if=\"discounts.length > 0\" class=\"cols-1 gap-thin\">\n      <div\n        v-for=\"(discount, index) in discounts\"\n        :key=\"index\"\n        class=\"bg-white radius-small pd-small flex-nowrap flex-v-center flex gap-thin\"\n      >\n        <div class=\"w-100\">\n          <p class=\"p-medium mn-b-thin t-medium d-block\">{{ discount.name || 'Unnamed discount' }}</p>\n          <p class=\"t-medium t-transp\">\n            <template v-if=\"discount.type === 'special_price'\">\n              Special price: {{ formatPrice(discount.value) }}\n            </template>\n            <template v-else>\n              {{ discount.value }}% off\n            </template>\n          </p>\n          <p v-if=\"discount.date && (discount.date.start || discount.date.end)\" class=\"t-small t-transp\">\n            {{ formatDateRange(discount.date) }}\n          </p>\n        </div>\n        \n        <div class=\"flex gap-thin\">\n          <div @click=\"() => openDiscountPopup(index)\" class=\"radius-small pd-small flex-center flex aspect-1x1 bg-light cursor-pointer hover-scale-1\">\n            <IconEdit\n              class=\"i-regular\"\n            />\n          </div>\n          <div @click=\"() => discounts.splice(index, 1)\" class=\"radius-small pd-small flex-center flex aspect-1x1 bg-red cursor-pointer hover-scale-1\">\n            <IconDelete\n              class=\"i-regular\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  </Block>\n\n  <Popup\n    title=\"Edit Discount\"\n    @close-popup=\"closeDiscountPopup\"\n    :isPopupOpen=\"isDiscountPopupOpen\"\n    class=\"bg-white w-max-40r radius-medium pd-medium\"\n  >\n    <div class=\"cols-1 gap-thin\">\n      <Field\n        v-model:field=\"currentDiscount.name\"\n        label=\"Name\"\n        placeholder=\"Discount Name\"\n        class=\"w-100 bg-light radius-small pd-small\"\n      />\n\n      <Field\n        v-model:field=\"currentDiscount.description\"\n        label=\"Description\"\n        type=\"textarea\"\n        placeholder=\"Discount Description\"\n        class=\"w-100 bg-light radius-small pd-small\"\n      />\n\n      <Field\n        v-model:field=\"currentDiscount.value\"\n       :label=\"currentDiscount.type === 'special_price' ? 'Special Price' : 'Discount'\"\n        :placeholder=\"currentDiscount.type === 'special_price' ? 'New price' : 'Discount percentage'\"\n        class=\"w-100 bg-light radius-small pd-small\"\n      >\n        <Select \n          v-model:select=\"currentDiscount.type\" \n          placeholder=\"Select type\"\n          value=\"label\"\n          property=\"value\"\n          :options=\"[\n            { value: 'discount', label: 'Discount (%)' },\n            { value: 'special_price', label: 'Special Price' },\n          ]\"\n          class=\"pos-relative t-nowrap bg-white gap-small flex flex-column pd-thin radius-thin\"\n        />\n      </Field>\n\n      <Field\n        v-model:field=\"currentDiscount.quantity\"\n        label=\"Quantity\"\n        type=\"number\"\n        placeholder=\"Quantity to get discount\"\n        class=\"w-100 bg-light radius-small pd-small\"\n      />\n\n      <div class=\"t-medium mn-t-micro mn-b-micro\">Date Range</div>\n      <div class=\"cols-2 mobile:cols-1 gap-thin\">\n        <Field\n          v-model:field=\"currentDiscount.date.start\"\n          label=\"Start Date\"\n          type=\"date\"\n          class=\"w-100 bg-light radius-small pd-small\"\n        />\n        \n        <Field\n          v-model:field=\"currentDiscount.date.end\"\n          label=\"End Date\"\n          type=\"date\"\n          class=\"w-100 bg-light radius-small pd-small\"\n        />\n      </div>\n\n      <div class=\"t-medium mn-t-micro mn-b-micro\">Time Range</div>\n      <div class=\"cols-2 mobile:cols-1 gap-thin\">\n        <Field\n          v-model:field=\"currentDiscount.time.start\"\n          label=\"Start Time\"\n          type=\"time\"\n          class=\"w-100 bg-light radius-small pd-small\"\n        />\n        \n        <Field\n          v-model:field=\"currentDiscount.time.end\"\n          label=\"End Time\"\n          type=\"time\"\n          class=\"w-100 bg-light radius-small pd-small\"\n        />\n      </div>\n      \n    \n     \n      <div class=\"flex gap-thin mn-t-medium\">\n        <Button\n          :showSuccess=\"false\"\n          :showLoader=\"false\"\n          class=\"bg-red t-white w-100\"\n          @click=\"closeDiscountPopup\"\n        >\n          Cancel\n        </Button>\n        <Button\n          class=\"bg-main w-100\"\n          @click=\"saveDiscount\"\n        >\n          Save Discount\n        </Button>\n      </div>\n    </div>\n  </Popup>\n</template>\n\n<script setup>\nimport { ref, reactive, defineModel, computed } from 'vue';\nimport Block from '@martyrs/src/components/Block/Block.vue';\nimport Field from '@martyrs/src/components/Field/Field.vue';\nimport Button from '@martyrs/src/components/Button/Button.vue';\nimport Popup from '@martyrs/src/components/Popup/Popup.vue';\nimport Select from '@martyrs/src/components/Select/Select.vue';\nimport IconEdit from '@martyrs/src/modules/icons/navigation/IconEdit.vue';\nimport IconDelete from '@martyrs/src/modules/icons/navigation/IconDelete.vue';\n\n// Используем defineModel для более простой работы с v-model в родительском компоненте\nconst discounts = defineModel('discounts', { default: () => [] });\n\n// Локальное состояние\nconst isDiscountPopupOpen = ref(false);\nconst editingDiscountIndex = ref(null);\nconst currentDiscount = reactive({\n  name: '',\n  description: '',\n  type: 'discount', // discount или special_price\n  value: 0,\n  quantity: 1,\n  date: {\n    start: null,\n    end: null\n  },\n  time: {\n    start: '',\n    end: ''\n  },\n  users: []\n});\n\n// Используется для форматирования диапазона дат\nfunction formatDateRange(dateRange) {\n  if (!dateRange) return '';\n  \n  let result = '';\n  \n  if (dateRange.start) {\n    const startDate = new Date(dateRange.start);\n    result += startDate.toLocaleDateString();\n  }\n  \n  result += ' - ';\n  \n  if (dateRange.end) {\n    const endDate = new Date(dateRange.end);\n    result += endDate.toLocaleDateString();\n  }\n  \n  return result;\n}\n\n// Функция открытия попапа добавления/редактирования\nfunction openDiscountPopup(index) {\n  // Если передан индекс, это редактирование существующей скидки\n  if (index !== undefined) {\n    editingDiscountIndex.value = index;\n    const discount = discounts.value[index];\n    \n    // Копируем данные в currentDiscount\n    Object.assign(currentDiscount, {\n      name: discount.name || '',\n      description: discount.description || '',\n      type: discount.type || 'discount',\n      value: discount.value || 0,\n      quantity: discount.quantity || 1,\n      date: {\n        start: discount.date?.start || null,\n        end: discount.date?.end || null\n      },\n      time: {\n        start: discount.time?.start || '',\n        end: discount.time?.end || ''\n      },\n      users: Array.isArray(discount.users) ? [...discount.users] : []\n    });\n  } else {\n    // Сброс данных при создании новой скидки\n    editingDiscountIndex.value = null;\n    Object.assign(currentDiscount, {\n      name: '',\n      description: '',\n      type: 'discount',\n      value: 0,\n      quantity: 1,\n      date: {\n        start: null,\n        end: null\n      },\n      time: {\n        start: '',\n        end: ''\n      },\n      users: []\n    });\n  }\n  \n  isDiscountPopupOpen.value = true;\n}\n\n// Закрытие попапа\nfunction closeDiscountPopup() {\n  isDiscountPopupOpen.value = false;\n  editingDiscountIndex.value = null;\n}\n\n\n\n// Сохранение скидки\nfunction saveDiscount() {\n  // Проверка на основные поля\n  if (currentDiscount.type === 'discount' && (currentDiscount.value < 0 || currentDiscount.value > 100)) {\n    alert('Discount value must be between 0 and 100');\n    return;\n  }\n\n  if (currentDiscount.type === 'special_price' && currentDiscount.value < 0) {\n    alert('Special price must be greater than or equal to 0');\n    return;\n  }\n\n  // Создаем копию текущей скидки для сохранения\n  const discountToSave = {\n    name: currentDiscount.name,\n    description: currentDiscount.description,\n    type: currentDiscount.type || 'discount',\n    value: parseFloat(currentDiscount.value) || 0,\n    quantity: parseInt(currentDiscount.quantity) || 1,\n    date: {\n      start: currentDiscount.date.start,\n      end: currentDiscount.date.end\n    },\n    time: {\n      start: currentDiscount.time.start,\n      end: currentDiscount.time.end\n    },\n    users: [...currentDiscount.users]\n  };\n\n  // Если редактируем существующую скидку\n  if (editingDiscountIndex.value !== null) {\n    // Обновляем существующую скидку\n    discounts.value.splice(editingDiscountIndex.value, 1, discountToSave);\n  } else {\n    // Добавляем новую скидку\n    if (!discounts.value) {\n      discounts.value = [];\n    }\n    discounts.value.push(discountToSave);\n  }\n\n  // Закрываем попап\n  closeDiscountPopup();\n}\n</script>",
                "name": "EditDiscounts.vue",
                "size": 8846,
                "type": "source"
              },
              {
                "path": "../../src/modules/products/components/sections/EditIngredients.vue",
                "relativePath": "modules/products/components/sections/EditIngredients.vue",
                "extension": ".vue",
                "content": "<template>\n  <Block\n    title=\"Ingredients\"\n    placeholder=\"No ingredients added yet\"\n    :actions=\"[{\n      label: '+',\n      function: () => openIngredientPopup()\n    }]\"\n  >\n    <div v-if=\"ingredients.length > 0\" class=\"rows-1 gap-thin\">\n      <CardPosition \n        v-for=\"(product, index) in ingredients\" \n        :key=\"product._id\" \n        :product=\"product\"\n        :array=\"ingredients\"\n        :products=\"Products\"\n        :showPrice=\"false\"\n        @add=\"(item) => {\n          globals.actions.add(ingredients, item);\n          closeIngredientPopup();\n        }\"\n        @update=\"(item) => {\n          globals.actions.update(ingredients, item, index);\n          closeIngredientPopup();\n        }\"\n        @delete=\"(item) => {\n          globals.actions.delete(ingredients, item, index);\n          closeIngredientPopup();\n        }\"\n      />\n    </div>\n  </Block>\n\n  <Popup \n    title=\"Add ingredient\" \n    @close-popup=\"closeIngredientPopup\" \n    :isPopupOpen=\"isIngredientPopupOpen\"\n    class=\"bg-white w-min-30r w-max-30r radius-medium pd-medium\"\n  >\n    <div class=\"bg-light mn-b-thin h-min-20r h-max-20r o-scroll pd-medium radius-medium\">\n      <Feed\n        :search=\"{\n          class: 'bg-white mn-b-thin'\n        }\"\n        :states=\"{\n          empty: {\n            title: 'No Products Found',\n            description: 'Currently, there are no such products available.'\n          }\n        }\"\n        :store=\"{\n          read: (options) => products.actions.read(options),\n          state: null\n        }\"\n        :options=\"{\n          owner: route.params._id,\n        }\"\n        v-slot=\"{ items }\"\n        class=\"\"\n      >\n        <CardOrderItem\n          v-for=\"(product, index) in items\" :key=\"product._id\"\n          :editable=\"false\" \n          :product=\"product\" \n          @click=\"() => { \n            let p = { ...product };\n            p.quantity = 1;\n            p.type = 'pcs'\n            globals.actions.add(ingredients, p);\n            closeIngredientPopup();\n          }\"\n          class=\"bg-white pd-thin radius-medium w-100 mn-b-thin\"\n        />\n      </Feed>\n    </div>\n  </Popup>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, defineModel } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\n\n// Импорт компонентов\nimport Block from '@martyrs/src/components/Block/Block.vue';\nimport Popup from '@martyrs/src/components/Popup/Popup.vue';\nimport Feed from '@martyrs/src/components/Feed/Feed.vue';\n\n// Импорт модулей и глобальных хранилищ\nimport * as globals from '@martyrs/src/modules/globals/views/store/globals.js';\nimport * as auth from '@martyrs/src/modules/auth/views/store/auth.js';\nimport * as products from '@martyrs/src/modules/products/store/products.js';\n\n// Импорт карточек\nimport CardPosition from '@martyrs/src/modules/products/components/blocks/CardPosition.vue';\nimport CardOrderItem from '@martyrs/src/modules/orders/components/blocks/CardOrderItem.vue';\n\n// Получение route и router\nconst route = useRoute();\nconst router = useRouter();\n\n// Используем defineModel для работы с v-model в родительском компоненте\nconst ingredients = defineModel('ingredients');\n\n// Локальное состояние\nconst isIngredientPopupOpen = ref(false);\nconst Products = ref([]);\n\n// При монтировании компонента загружаем доступные продукты\nonMounted(async () => {\n  try {\n    const productsResponse = await products.actions.read({\n      organization: route.params._id,\n      limit: 100\n    });\n    Products.value = productsResponse;\n  } catch (error) {\n    console.error('Error loading products for ingredients:', error);\n  }\n});\n\n// Открытие попапа для добавления ингредиента\nfunction openIngredientPopup() {\n  isIngredientPopupOpen.value = true;\n}\n\n// Закрытие попапа\nfunction closeIngredientPopup() {\n  isIngredientPopupOpen.value = false;\n}\n</script>",
                "name": "EditIngredients.vue",
                "size": 3801,
                "type": "source"
              },
              {
                "path": "../../src/modules/products/components/sections/EditVariants.vue",
                "relativePath": "modules/products/components/sections/EditVariants.vue",
                "extension": ".vue",
                "content": "<template>\n  <Block\n    title=\"Variants\"\n    placeholder=\"No variants added yet. At least one variant is required.\"\n    :actions=\"[{\n      label: '+',\n      function: () => openVariantPopup()\n    }]\"\n  >\n    <div v-if=\"variants.length > 0\" class=\"cols-1 gap-thin\">\n      <div\n        v-for=\"(variant, index) in variants\"\n        :key=\"variant._id || index\"\n        class=\"bg-white radius-small pd-small flex-nowrap flex-v-center flex gap-thin\"\n      >\n        <div class=\"aspect-1x1 h-3r flex-child-default radius-small o-hidden\">\n          <img\n            v-if=\"variant.images && variant.images.length > 0\"\n            :src=\"(FILE_SERVER_URL || '') + variant.images[0]\"\n            alt=\"Variant image\"\n            class=\"w-100 h-100 object-fit-cover\"\n          />\n          <PlaceholderImage v-else class=\"w-100 h-100\" />\n        </div>\n        \n        <div class=\"w-100\">\n          <p class=\"p-medium mn-b-nano t-medium d-block\">{{ variant.name || 'Unnamed variant' }}</p>\n          <p class=\"t-medium t-transp\">{{ returnCurrency() }}{{ variant.price }} / {{ variant.quantity }}{{ variant.unit }}</p>\n          <p v-if=\"variant.ingredients?.length\" class=\"t-small t-transp\">{{ variant.ingredients.length }} ingredients</p>\n        </div>\n        \n        <div class=\"flex gap-thin\">\n          <div @click=\"() => copyVariant(index)\" class=\"radius-small pd-small flex-center flex aspect-1x1 bg-light cursor-pointer hover-scale-1\">\n            <IconDuplicate class=\"i-regular\" />\n          </div>\n          <div @click=\"() => openVariantPopup(index)\" class=\"radius-small pd-small flex-center flex aspect-1x1 bg-light cursor-pointer hover-scale-1\">\n            <IconEdit class=\"i-regular\" />\n          </div>\n          <div @click=\"() => deleteVariant(index)\" class=\"radius-small pd-small flex-center flex aspect-1x1 bg-red cursor-pointer hover-scale-1\">\n            <IconDelete class=\"i-regular\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  </Block>\n\n  <Popup\n    title=\"Edit Variant\"\n    @close-popup=\"closeVariantPopup\"\n    :isPopupOpen=\"isVariantPopupOpen\"\n    align=\"center right\"\n    class=\"bg-white h-min-100 w-max-50r pd-medium\"\n  >\n    <div class=\"cols-1 gap-thin o-y-scroll\">\n      <!-- Basic Info -->\n      <Field\n        v-model:field=\"currentVariant.name\"\n        label=\"Name\"\n        placeholder=\"Variant Name\"\n        class=\"w-100 bg-light radius-small pd-small\"\n      />\n\n      <Field\n        v-model:field=\"currentVariant.sku\"\n        label=\"SKU\"\n        placeholder=\"SKU\"\n        class=\"w-100 bg-light radius-small pd-small\"\n      />\n\n      <div class=\"flex gap-thin\">\n        <Field\n          v-model:field=\"currentVariant.price\"\n          label=\"Price\"\n          type=\"number\"\n          placeholder=\"Price\"\n          class=\"w-100 bg-light radius-small pd-small\"\n        />\n        \n        <Field\n          v-model:field=\"currentVariant.cost\"\n          label=\"Cost\"\n          type=\"number\"\n          placeholder=\"Cost\"\n          class=\"w-100 bg-light radius-small pd-small\"\n        />\n      </div>\n\n      <Field \n        v-model:field=\"currentVariant.quantity\" \n        label=\"Quantity\"\n        placeholder=\"Enter quantity\" \n        class=\"w-100 bg-light radius-small pd-small\"\n        type=\"number\"\n      >\n        <Select \n          v-model:select=\"currentVariant.unit\" \n          placeholder=\"Unit\"\n          :options=\"['pcs', 'g', 'kg', 'ml', 'l', 'oz']\"\n          class=\"pos-relative bg-white gap-small flex flex-column pd-thin radius-thin\"\n        />\n      </Field>\n      \n      <!-- Attributes Section -->\n      <div class=\"t-medium mn-t-small mn-b-small\">Attributes</div>\n      <div \n        class=\"gap-micro flex-nowrap flex mn-b-small\" \n        v-for=\"(attr, attrIndex) in currentVariant.attributes\" \n        :key=\"attrIndex\"\n      > \n        <Field\n          v-model:field=\"attr.name\"\n          placeholder=\"Attribute Name\"\n          class=\"w-100 bg-light radius-small pd-small\"\n        />  \n        <Field\n          v-model:field=\"attr.value\"\n          placeholder=\"Attribute Value\"\n          class=\"w-100 bg-light radius-small pd-small\"\n        />\n        <div class=\"radius-small h-100 flex-center flex-child-default flex aspect-1x1 bg-red cursor-pointer hover-scale-1\">\n          <IconDelete \n            @click=\"() => currentVariant.attributes.splice(attrIndex, 1)\" \n            class=\"i-regular\"\n          />\n        </div>\n      </div>\n\n      <Button\n        class=\"bg-light w-100\"\n        :showSuccess=\"false\"\n        :showLoader=\"false\"\n        @click=\"addAttribute\"\n      >\n        Add Attribute\n      </Button>\n\n      <!-- Ingredients Section - используем существующий компонент -->\n      <div class=\"mn-t-medium\">\n        <EditIngredients \n          v-model:ingredients=\"currentVariant.ingredients\"\n        />\n      </div>\n\n      <!-- Images Section -->\n      <div class=\"t-medium mn-t-small mn-b-small\">Images</div>\n      <EditImages\n        :images=\"currentVariant.images || []\"\n        :uploadPath=\"'variants'\"\n        class=\"bg-light pd-small radius-small\"\n        @update:images=\"(newImages) => { currentVariant.images = newImages }\"\n      />\n     \n      <!-- Action Buttons -->\n      <div class=\"flex gap-thin mn-t-medium\">\n        <Button\n          :showSuccess=\"false\"\n          :showLoader=\"false\"\n          class=\"bg-red t-white w-100\"\n          @click=\"closeVariantPopup\"\n        >\n          Cancel\n        </Button>\n        <Button\n          class=\"bg-main w-100\"\n          @click=\"saveVariant\"\n        >\n          Save Variant\n        </Button>\n      </div>\n    </div>\n  </Popup>\n</template>\n\n<script setup>\nimport { ref, reactive, defineModel } from 'vue';\nimport { useRoute } from 'vue-router';\n\nimport Block from '@martyrs/src/components/Block/Block.vue';\nimport Field from '@martyrs/src/components/Field/Field.vue';\nimport Button from '@martyrs/src/components/Button/Button.vue';\nimport Popup from '@martyrs/src/components/Popup/Popup.vue';\nimport Select from '@martyrs/src/components/Select/Select.vue';\nimport EditImages from '@martyrs/src/components/EditImages/EditImages.vue';\n\n// Импортируем существующий компонент EditIngredients\nimport EditIngredients from '@martyrs/src/modules/products/components/sections/EditIngredients.vue';\n\nimport PlaceholderImage from '@martyrs/src/modules/icons/placeholders/PlaceholderImage.vue';\nimport IconEdit from '@martyrs/src/modules/icons/navigation/IconEdit.vue';\nimport IconDelete from '@martyrs/src/modules/icons/navigation/IconDelete.vue';\nimport IconDuplicate from '@martyrs/src/modules/icons/actions/IconDuplicate.vue';\n\nconst route = useRoute();\nconst variants = defineModel('variants');\n\n// Локальное состояние\nconst isVariantPopupOpen = ref(false);\nconst editingVariantIndex = ref(null);\nconst currentVariant = reactive({\n  name: '',\n  sku: '',\n  images: [],\n  price: 0,\n  cost: 0,\n  quantity: 1,\n  unit: 'pcs',\n  available: 0,\n  ingredients: [],\n  attributes: []\n});\n\n// Функция открытия попапа варианта\nfunction openVariantPopup(index) {\n  if (index !== undefined) {\n    editingVariantIndex.value = index;\n    const variant = variants.value[index];\n    \n    Object.assign(currentVariant, {\n      name: variant.name || '',\n      sku: variant.sku || '',\n      images: [...(variant.images || [])],\n      price: variant.price || 0,\n      cost: variant.cost || 0,\n      quantity: variant.quantity || 1,\n      unit: variant.unit || 'pcs',\n      available: variant.available || 0,\n      ingredients: [...(variant.ingredients || [])],\n      attributes: (variant.attributes || []).map(attr => ({ ...attr }))\n    });\n  } else {\n    editingVariantIndex.value = null;\n    Object.assign(currentVariant, {\n      name: '',\n      sku: '',\n      images: [],\n      price: 0,\n      cost: 0,\n      quantity: 1,\n      unit: 'pcs',\n      available: 0,\n      ingredients: [],\n      attributes: []\n    });\n  }\n  \n  isVariantPopupOpen.value = true;\n}\n\nfunction closeVariantPopup() {\n  isVariantPopupOpen.value = false;\n  editingVariantIndex.value = null;\n}\n\nfunction addAttribute() {\n  currentVariant.attributes.push({ name: '', value: '' });\n}\n\nfunction copyVariant(index) {\n  const variantToCopy = variants.value[index];\n  \n  const variantCopy = {\n    name: `${variantToCopy.name} (Copy)`,\n    sku: variantToCopy.sku ? `${variantToCopy.sku}-copy` : '',\n    images: [...(variantToCopy.images || [])],\n    price: variantToCopy.price || 0,\n    cost: variantToCopy.cost || 0,\n    quantity: variantToCopy.quantity || 1,\n    unit: variantToCopy.unit || 'pcs',\n    available: variantToCopy.available || 0,\n    ingredients: (variantToCopy.ingredients || []).map(ing => ({ ...ing })),\n    attributes: (variantToCopy.attributes || []).map(attr => ({ ...attr }))\n  };\n  \n  variants.value.push(variantCopy);\n}\n\nfunction deleteVariant(index) {\n  if (variants.value.length === 1) {\n    alert('Product must have at least one variant');\n    return;\n  }\n  \n  variants.value.splice(index, 1);\n}\n\nfunction saveVariant() {\n  if (!currentVariant.name) {\n    alert('Variant name is required');\n    return;\n  }\n\n  const variantToSave = {\n    name: currentVariant.name,\n    sku: currentVariant.sku,\n    images: [...currentVariant.images],\n    price: parseFloat(currentVariant.price) || 0,\n    cost: parseFloat(currentVariant.cost) || 0,\n    quantity: parseInt(currentVariant.quantity) || 1,\n    unit: currentVariant.unit || 'pcs',\n    available: currentVariant.available || 0,\n    ingredients: currentVariant.ingredients.map(ing => ({ ...ing })),\n    attributes: currentVariant.attributes.filter(attr => attr.name || attr.value)\n  };\n\n  if (editingVariantIndex.value !== null) {\n    if (variants.value[editingVariantIndex.value]._id) {\n      variantToSave._id = variants.value[editingVariantIndex.value]._id;\n    }\n    \n    variants.value.splice(editingVariantIndex.value, 1, variantToSave);\n  } else {\n    variants.value.push(variantToSave);\n  }\n\n  closeVariantPopup();\n}\n</script>",
                "name": "EditVariants.vue",
                "size": 9863,
                "type": "source"
              },
              {
                "path": "../../src/modules/products/components/sections/FilterProducts.vue",
                "relativePath": "modules/products/components/sections/FilterProducts.vue",
                "extension": ".vue",
                "content": "  <template>\n    <div class=\"pd-medium bg-light radius-medium\">\n      <!-- Categories Filter -->\n      <Spoiler \n        class=\"radius-small o-hidden mn-b-small\"\n        :status=\"true\"\n      >\n        <template #header>\n          <p class=\"cursor-pointer mn-r-auto t-medium p-big\">{{ t('categoriesTitle') }}</p>\n          <!-- SVG Icon -->\n        </template>\n        <template #content>\n          <Checkbox \n            v-for=\"(category, index) in  categories.state.all\"\n            :key=\"index\"\n            :label=\"category.name\"\n            :value=\"category.url\"\n            class=\"w-100 mn-t-small mn-b-small bg-white radius-small pd-small\"\n            :radio=\"marketplace.state.filter.categories\"\n            @update:radio=\"event => marketplace.state.filter.categories = event\"\n          />\n        </template>\n      </Spoiler>\n\n      <hr class=\"mn-b-small t-transp\">\n\n      <!-- Prices Filter -->\n      <Spoiler \n        class=\"radius-small o-hidden mn-b-small\"\n        :status=\"false\"\n      >\n        <template #header>\n          <p class=\"cursor-pointer  mn-r-auto t-medium p-big\">{{ t('filters.price.title') }}</p>\n          <!-- SVG Icon -->\n        </template>\n        <template #content>\n          <Checkbox \n            v-for=\"(price, index) in prices\"\n            :key=\"index\"\n            :label=\"price.label\"\n            :value=\"price.value\"\n            class=\"w-100 mn-t-small bg-white radius-small pd-small\"\n            :radio=\"marketplace.state.filter.prices\"\n            @update:radio=\"event => marketplace.state.filter.prices = event\"\n          />\n        </template>\n      </Spoiler>\n\n      <hr class=\"mn-b-small\">\n\n      <!-- Delivery Filter -->\n      <Spoiler \n        class=\"radius-small o-hidden mn-b-small\"\n        :status=\"false\"\n      >\n        <template #header>\n          <p class=\"cursor-pointer  mn-r-auto t-medium p-big\">Delivery</p>\n        </template>\n        <template #content>\n          <Checkbox \n            v-for=\"(deliveryOption, index) in deliveryOptions\"\n            :key=\"index\"\n            :label=\"deliveryOption.label\"\n            :value=\"deliveryOption.value\"\n            class=\"w-100 mn-t-small bg-white radius-small pd-small\"\n            :radio=\"marketplace.state.filter.delivery\"\n            @update:radio=\"event => marketplace.state.filter.delivery = event\"\n          />\n        </template>\n      </Spoiler>\n\n      <hr class=\"mn-b-semi\">\n\n      <!-- Reset filter -->\n      <button @click=\"resetFilters\" class=\"bg-main w-100 button\">{{ t('filters.reset') }}</button>\n    </div>\n  </template>\n\n<script setup>\nimport { ref, watch, onMounted } from 'vue'\n\nimport Spoiler from \"@martyrs/src/components/Spoiler/Spoiler.vue\"\nimport Checkbox from \"@martyrs/src/components/Checkbox/Checkbox.vue\"\n\nimport { useI18n } from 'vue-i18n'\nimport { useRoute, useRouter,onBeforeRouteLeave } from 'vue-router'\n\nconst route = useRoute()\nconst router = useRouter()\n\nimport * as categories from '@martyrs/src/modules/products/store/categories.js';\nimport * as marketplace from '@martyrs/src/modules/marketplace/views/store/marketplace.js';\n\nlet options = {\n  status: 'published'\n}\n\nlet selectedFilters = ref({\n  categories: [],\n  prices: [],\n  delivery: [],\n  extra: []\n})\n\n// Пропсы и данные, которые вы передаёте в компонент\nconst props = defineProps({\n  selectedFilters: Object,\n  prices: {\n    type: Array,\n    default: () => [\n    { label: 'Under 300฿',        value: '<300' },\n    { label: '300฿ to 600฿',      value: '300-600' },\n    { label: '600฿ to 1200฿',     value: '600-1200' },\n    { label: '$1200 and above',   value: '>1200' }\n  ]\n  },\n  deliveryOptions: {\n    type: Array,\n    default: () => [\n      { label: 'Pickup', value: { min: 0, max: 25 } },\n      { label: 'Courier', value: { min: 25, max: 50 } },\n      { label: 'Post', value: { min: 50, max: 100 } }\n    ]\n  }\n})\n\nwatch(() => marketplace.state.filter, (newFilterValue, oldFilterValue) => {\n  // Переводим фильтр в формат query\n  const query = { ...route.query };\n\n  // Удаляем старые значения фильтра из query\n  Object.keys(oldFilterValue).forEach(key => {\n    if (query[key]) {\n      delete query[key];\n    }\n  });\n\n  // Добавляем новые значения фильтра в query\n  const newQueryValues = Object.fromEntries(\n    Object.entries(newFilterValue)\n      .filter(([key, value]) => Array.isArray(value) && value.length > 0)\n      .map(([key, value]) => [key, value.join(',')])\n  );\n  Object.assign(query, newQueryValues);\n\n  // Обновляем маршрут с новым query\n  router.repalce({ query });\n}, { deep: true })\n\nonMounted(async () => {\n  await categories.actions.read(options)\n  \n  if (route.query) {\n    const query = route.query;\n    const newFilterValue = {\n      categories: query.categories ? query.categories.split(',') : [],\n      prices: query.prices ? query.prices.split(',') : [],\n      delivery: query.delivery ? query.delivery.split(',') : [],\n      // Продолжайте этот паттерн для остальных полей фильтра\n    };\n    marketplace.state.filter.innerHTML = newFilterValue;\n  }\n})\n\nconst emit = defineEmits(['updateFilters', 'resetFilters'])\n\nconst emitFilterChange = (filterType, value) => {\n  emit('updateFilters', { filterType, value })\n}\n\nconst resetFilters = () => {\n  emit('resetFilters')\n}\nconst text = {\n    locale: 'en',\n    messages: {\n      en: {\n        categoriesTitle: 'Category',\n        categories: [],\n        filters: {\n          title: 'Filters',\n          price: {\n            title: 'Price',\n            from: 'From',\n            to: 'To'\n          },\n          filters: [],\n          reset: 'Reset Filters'\n        }\n      },\n      ru: {\n        categoriesTitle: 'Категория',\n        categories: [],\n        filters: {\n          title: 'Фильтры',\n          price: {\n            title: 'Цена',\n            from: 'От',\n            to: 'До'\n          },\n          filters: [],\n          reset: 'Сбросить фильтры',\n        }\n      }\n    }\n  }\n\n  categories.state.all.forEach( category => {\n    category.translations.forEach( localization => {\n      text.messages[localization.locale].categories.push(localization.text)\n    })\n  })\n\n  const { t } = useI18n(text)\n  \n\n\n// Добавьте свою локализацию и методы t, если они нужны\n</script>\n\n<style>\n/* Ваши стили */\n</style>\n",
                "name": "FilterProducts.vue",
                "size": 6191,
                "type": "source"
              },
              {
                "path": "../../src/modules/products/components/sections/HeroRecommendation.vue",
                "relativePath": "modules/products/components/sections/HeroRecommendation.vue",
                "extension": ".vue",
                "content": "<script setup>\n\timport { ref, onMounted } from 'vue'\n\n\timport FieldBig from \"@martyrs/src/components/FieldBig/FieldBig.vue\";\n\timport Shader from \"@martyrs/src/components/Shader/Shader.vue\";\n\n\timport { useRouter } from 'vue-router'\n\timport { useI18n } from 'vue-i18n'\n\n\timport * as products from '@martyrs/src/modules/products/store/products.js';\n\n\tconst router = useRouter()\n\n\tconst text = {\n    messages: {\n      \"en\": {\n\t\t    \"title\": \"Increase Your High <br><b class='t-main'>Boosted by AI Budtender</b>\",\n\t\t    \"description\": \"Just tell us what you're want, and Weeder will find your ideal match.\",\n\t\t    \"placeholderTexts\": [\n\t\t    \t'Lowest THC, please!',\n\t\t    \t'Something with banana flavors?',\n\t\t    \t\"I'm in the mood for trippy vibes.\"\n\t\t    ],\n\t\t    \"subdescription\": \"AI Curated Recommendations for Your Mood:\",\n\t\t    \"presets\": {\n\t\t      \"sleep\": \"sleep\",\n\t\t      \"creative\": \"creative\",\n\t\t      \"giggly\": \"giggly\",\n\t\t      \"libido\": \"libido\",\n\t\t      \"trippy\": \"trippy\",\n\t\t      \"euphoric\": \"euphoric\"\n\t\t    },\n\t\t    \"placeholder\": \"Tell us what you're after...\",\n\t\t    \"action\": \"Transmit\"\n\t\t  },\n\t\t  \"ru\": {\n\t\t    \"title\": \"Персональный Накур,<br><b class='t-main'>Напрямую от AI</b>\",\n\t\t    \"description\": \"AI на страже твоего релакса, бро. Мы подбираем самые космические товары с учетом твоего желаемого настроения:\",\n\t\t    \"placeholderTexts\": [\n\t\t    \t'Я хочу самый низкий THC',\n\t\t    \t'Я хочу чего-нибудь бананового',\n\t\t    \t'Я хочу курнуть хейза'\n\t\t    ],\n\t\t   \t \"presets\": {\n\t\t      \"sleep\": \"сон\",\n\t\t      \"creative\": \"креатив\",\n\t\t      \"giggly\": \"смех\",\n\t\t      \"libido\": \"либидо\",\n\t\t      \"trippy\": \"трип\",\n\t\t      \"euphoric\": \"кайф\"\n\t\t    },\n\t\t    \"subdescription\": \"Или выберите тег, и наш AI направит тебя к самым крутым вариантам:\",\n\t\t    \"placeholder\": \"Опиши свой желаемый хай, bro...\",\n\t\t    \"action\": \"Передать\"\n\t\t  }\n\t\t}\t\n\t}\n\n\tconst { t, rt } = useI18n(text)\n\n\tlet mood = ref('')\n\n\tconst presets = ['sleep','creative','giggly','libido','trippy','euphoric'];\n\n\tasync function submitMood(presetMood = null) {\n\t\tconst moodToSend = presetMood || mood.value;\n\t\tawait products.actions.submitMood(moodToSend);\n\t}\n\n\t\n</script>\n\n<template>\n\t<div \n\t\tclass=\"pd-big bg-black t-white pos-relative o-hidden \"\n\t>\n\t\t<div class=\"flex-column flex-center flex t-center pos-relative z-index-1\">\n\t\t\t\n\t\t\t<h1 \n\t\t\t\tclass=\"mn-b-semi\" \n\t\t\t\tv-html=\"t('title')\"\n\t\t\t/>\n\n\t\t\t<p \n\t\t\t\tclass=\"mn-b-big p-big t-transp\" \n\t\t\t\tv-html=\"t('description')\"\n\t\t\t/>\n\t\t\t\n\t\t\t<FieldBig \n\t\t\t\t:input=\"mood\" \n\t\t    :typingSpeed=\"100\"\n\t\t    :loopTyping=\"true\"\n\t\t    :enableTyping=\"true\"\n\t\t    :placeholder=\"t('placeholder')\"\n\t\t    :action=\"t('action')\"\n\t\t    @update:input=\"mood = $event\"\n\t\t    @action=\"router.push({name: 'Product Recommmendation', query: {mood: mood}})\"\n\t\t\t\tclass=\"mn-b-big pd-big bg-dark-transp-50 bg-blur-thin w-100 w-max-40r\"\n\t\t\t/>\n\n\t\t\t<p \n\t\t\t\tclass=\"w-m-60r t-transp mn-b-semi p-medium\" \n\t\t\t\tv-html=\"t('subdescription')\"\n\t\t\t/>\n\n\t\t\t<div style=\"max-width: 50rem;\" class=\"w-100 h-max gap-thin cols-6\">\n\n\t\t\t\t<button \n\t\t\t\t\tv-for=\"(preset,index) in presets\" \n\t\t\t\t\t:key=\"preset\" \n\t\t\t\t\t@click.stop=\"router.push({name: 'ProductRecommmendation', query: {mood: preset}})\"\n\t\t\t\t\tclass=\"\n\t\t\t\t\t\tuppercase \n\t\t\t\t\t\tpd-thin\n\t\t\t\t\t\tt-medium\n\t\t\t\t\t\tflex-center\n\t\t\t\t\t\tflex-column\n\t\t\t\t\t\tflex-nowrap\n\t\t\t\t\t\tflex\n\t\t\t\t\t\tbg-dark-transp-50 \n\t\t\t\t\t\tbg-blur-thin\n\t\t\t\t\t\tradius-semi\n\t\t\t\t\t\tcursor-pointer\n\t\t\t\t\t\ttransition-elastic\n\t\t\t\t\t\thover-easeInOut-1 \n\t\t\t\t\t\"\n\t\t\t\t>\n\t\t\t\t\t<img loading=\"lazy\" \n\t\t\t\t\t\t:src=\"(FILE_SERVER_URL || '') + '/icons/moods/' + preset + '.svg'\" \n\t\t\t\t\t\tclass=\"w-100\"\n\t\t\t\t\t/>\n\n\t\t\t\t\t<span class=\"t-white\"> \n\t\t\t\t\t\t{{ t(`presets.` + preset) }}\n\t\t\t\t\t</span>\n\t\t\t\t</button>\n\n\t\t\t</div>\n\n\t\t</div>\n\n\t\t<!-- <Shader class=\"w-100 h-100 flex flex-center pos-absolute pos-t-0 pos-r-0 z-index-0\"/> -->\n\n    <!-- <div class=\"w-100 h-100 flex flex-center pos-absolute pos-t-0 pos-r-0 z-index-0\">\n  \t  <div style=\"background-image: url(/spiral.jpg)\" class=\"spiral\"></div>\n    </div> -->\n\n\t</div>\n</template>\n\n<style style=\"scoped\">\n.spiral {\n\t\n  background-size: cover;\n  width: 100rem;\n  height: 100rem;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  opacity: 0.066;\n  transform: translate(-50%, -50%) rotate(0deg);\n  transform-origin: center center;\n  animation: spin 5s linear infinite;\n}\n\n@keyframes spin {\n  0% {\n    transform: translate(-50%, -50%) rotate(0deg);\n  }\n  100% {\n    transform: translate(-50%, -50%) rotate(360deg);\n  }\n}\n</style>",
                "name": "HeroRecommendation.vue",
                "size": 4420,
                "type": "source"
              },
              {
                "path": "../../src/modules/products/components/sections/ProductsPopular.vue",
                "relativePath": "modules/products/components/sections/ProductsPopular.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"embla\" ref=\"emblaNode\">\n    <div class=\"embla__container\">\n      <div \n        class=\"embla__slide h-100 pos-relative pd-nano\" \n        v-for=\"(value, key) in productsState\" \n        :key=\"value?._id || key\"\n      >\n        <router-link  \n          :to=\"{ name: 'Organization_Product', params: { _id: value.owner.target, product: value._id  } }\"\n          class=\"h-100 pos-relative\"\n        >\n          <transition name=\"fade\" mode=\"out-in\" appear>\n            <div \n              v-if=\"isLoading || !value?.name\" \n              class=\"h-100 w-100 radius-medium flex-center bg-light\"\n            >\n              <Loader class=\"pos-relative\"/>\n            </div>\n            \n            <CardProduct  \n              v-else\n              :key=\"value._id\" \n              :product=\"value\"\n              class=\"h-max-40r h-100 bg-light\"\n            />\n          </transition>\n        </router-link>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, onUnmounted } from 'vue'\nimport { useRouter } from 'vue-router'\n    \nimport emblaCarouselVue from 'embla-carousel-vue'\nimport Autoplay from 'embla-carousel-autoplay'\n\nimport Loader from '@martyrs/src/components/Loader/Loader.vue'\n\nimport CardProduct from '@martyrs/src/modules/products/components/blocks/CardProduct.vue'\n\nimport * as products from '@martyrs/src/modules/products/store/products.js'\n\nconst router = useRouter()\nconst productsState = ref([]) // Инициализируем как пустой массив\nconst isLoading = ref(true)\nconst selectedIndex = ref(0)\nconst scrollSnaps = ref([])\n\n// Конфигурация автоплея\nconst autoplayOptions = {\n  delay: 2000,\n  jump: false,\n  stopOnInteraction: false,\n  stopOnMouseEnter: false,\n  stopOnFocusIn: true,\n  stopOnLastSnap: false,\n  rootNode: (emblaRoot) => emblaRoot.parentElement\n}\n\n// Инициализация карусели\nconst [emblaNode, emblaApi] = emblaCarouselVue(\n  { loop: true }, \n  [Autoplay(autoplayOptions)]\n)\n\n// Методы управления каруселью\nconst scrollTo = (index) => emblaApi.value?.scrollTo(index)\nconst onInit = () => {\n  if (emblaApi.value) {\n    scrollSnaps.value = emblaApi.value.scrollSnapList()\n  }\n}\nconst onSelect = () => {\n  if (emblaApi.value) {\n    selectedIndex.value = emblaApi.value.selectedScrollSnap()\n  }\n}\n\n// Обработчик клика по продукту\nconst handleProductClick = (product) => {\n  if (product?._id && product?.owner?.target) {\n    router.push({\n      name: 'Organization_Product', \n      params: { \n        _id: product.owner.target, \n        product: product._id \n      } \n    })\n  }\n}\n\n// Загрузка данных\nconst loadProducts = async () => {\n  try {\n    isLoading.value = true\n    const response = await products.actions.read({\n      limit: 10, \n      organization: '657e7134efb8110c51b8b713'\n    })\n    productsState.value = Array.isArray(response) ? response : []\n  } catch (error) {\n    console.error('Error loading products:', error)\n    productsState.value = []\n  } finally {\n    isLoading.value = false\n  }\n}\n\nonMounted(async () => {\n  // Загружаем данные\n  await loadProducts()\n  \n  // Инициализируем карусель\n  onInit()\n  onSelect()\n  \n  // Добавляем слушатели событий\n  if (emblaApi.value) {\n    emblaApi.value.on('reInit', onInit)\n    emblaApi.value.on('reInit', onSelect)\n    emblaApi.value.on('select', onSelect)\n  }\n})\n\n// Очистка слушателей при размонтировании\nonUnmounted(() => {\n  if (emblaApi.value) {\n    emblaApi.value.off('reInit', onInit)\n    emblaApi.value.off('reInit', onSelect)\n    emblaApi.value.off('select', onSelect)\n  }\n})\n</script>\n\n<style lang=\"scss\">\n.embla {\n  overflow: hidden;\n}\n.embla__container {\n  display: flex;\n}\n.embla__slide {\n  flex: 0 0 25%;\n  min-width: 0;\n}\n@media screen and (max-width: 1025px) {\n  .embla__slide {\n    flex: 0 0 75%;\n    min-width: 0;\n  }\n}\n</style>",
                "name": "ProductsPopular.vue",
                "size": 3785,
                "type": "source"
              },
              {
                "path": "../../src/modules/products/components/sections/ProductConfigurator.vue",
                "relativePath": "modules/products/components/sections/ProductConfigurator.vue",
                "extension": ".vue",
                "content": "<template>\n  <div v-if=\"productVariants?.length\" class=\"w-100\">\n    <!-- Variants Selection Component -->\n    <ProductVariants\n      :productVariants=\"productVariants\"\n      :productId=\"productId\"\n      :productName=\"productName\"\n      @variant-selected=\"handleVariantSelected\"\n      @update-images=\"$emit('update-images', $event)\"\n    />\n    \n    <!-- Discounts Component -->\n    <ProductDiscounts\n      :discounts=\"discounts\"\n      :regularPrice=\"regularPrice\"\n      :selectedVariant=\"selectedVariant\"\n      :productVariants=\"productVariants\"\n      @select-discount=\"handleDiscountSelected\"\n    />\n    \n    <!-- Quantity Selection -->\n    <div class=\"w-100 mn-b-medium\">\n      <div class=\"flex flex-nowrap flex-v-center mn-b-thin\">\n        <p class=\"t-medium\">Quantity</p>\n        <span v-if=\"selectedVariant\" class=\"t-small t-transp mn-l-thin\">\n          (Max: {{ maxQuantity }})\n        </span>\n      </div>\n      \n      <QuantitySelector v-model=\"quantity\" :maxValue=\"maxQuantity\" />\n    </div>\n\n    <!-- Out of stock notice -->\n    <div v-if=\"selectedVariant && !selectedVariant.available\" class=\"mn-b-medium\">\n      <div class=\"flex flex-nowrap gap-small pd-small bg-error-light radius-small t-error\">\n        <span>Out of stock</span>\n      </div>\n    </div>\n\n    <!-- Add to cart button -->\n    <div class=\"w-100 mn-b-small\">\n      <Button\n        v-if=\"isVariantAvailable\"\n        :submit=\"addVariantToCart\"\n        class=\"cursor-pointer pd-medium radius-big w-100 bg-main button h-3r\"\n      >\n        <div class=\"gap-micro flex flex-center flex-nowrap\">\n          <IconShopcartAdd class=\"i-semi\"/>\n          <span class=\"t-nowrap\">{{ t('addtoorder') }}</span>\n        </div>\n      </Button>\n\n      <div\n        v-else\n        class=\"flex-center flex uppercase radius-big t-black w-100 pd-medium t-medium bg-grey h-3r\"\n      >\n        <span v-if=\"!selectedVariant && productVariants.length > 1\">Select variant</span>\n        <span v-else>Out of Stock</span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, watch } from 'vue';\nimport { useI18n } from 'vue-i18n';\nimport IconShopcartAdd from '@martyrs/src/modules/icons/actions/IconShopcartAdd.vue';\nimport Button from '@martyrs/src/components/Button/Button.vue';\n\nimport ProductVariants from '../blocks/ProductVariants.vue';\nimport ProductDiscounts from '../blocks/ProductDiscounts.vue';\nimport QuantitySelector from '../elements/QuantitySelector.vue';\n\nconst props = defineProps({\n  productVariants: { type: Array, default: () => [] },\n  productId: { type: String, required: true },\n  productName: { type: String, required: true },\n  discounts: { type: Array, default: () => [] },\n  regularPrice: { type: String, required: true }\n});\n\nconst emits = defineEmits(['variant-selected', 'add-to-cart', 'update-images']);\nconst { t } = useI18n({ messages: { en: { addtoorder: 'Add to Cart' }, ru: { addtoorder: 'Добавить в корзину' } } });\n\nconst selectedVariant = ref(null);\nconst quantity = ref(1);\n\n// Computed properties\nconst isVariantAvailable = computed(() => \n  selectedVariant.value ? selectedVariant.value.available :\n  props.productVariants.length === 1 ? props.productVariants[0].available : false\n);\n\nconst maxQuantity = computed(() => \n  selectedVariant.value ? selectedVariant.value.available : \n  props.productVariants.length === 1 ? props.productVariants[0].available || 1 : 1\n);\n\n// Methods\nfunction handleVariantSelected(variant) {\n  selectedVariant.value = variant;\n  if (quantity.value > variant.available) quantity.value = variant.available;\n  emits('variant-selected', variant);\n}\n\nfunction handleDiscountSelected(discount) {\n  // Update quantity based on discount requirements\n  if (discount.quantity && discount.quantity > quantity.value) {\n    quantity.value = discount.quantity;\n  }\n}\n\nfunction addVariantToCart() {\n  const variant = selectedVariant.value || \n    (props.productVariants.length === 1 ? props.productVariants[0] : null);\n  \n  if (!variant || !variant.available || quantity.value > variant.available) return false;\n  \n  emits('add-to-cart', {\n    _id: props.productId,\n    variantId: variant._id,\n    sku: variant.sku,\n    name: props.productName,\n    price: variant.price,\n    quantity: quantity.value,\n    attributes: variant.attributes || []\n  });\n  \n  return true;\n}\n</script>",
                "name": "ProductConfigurator.vue",
                "size": 4312,
                "type": "source"
              },
              {
                "path": "../../src/modules/products/components/sections/ProductInformationSection.vue",
                "relativePath": "modules/products/components/sections/ProductInformationSection.vue",
                "extension": ".vue",
                "content": "<template>\n\t<!-- -------------------------------- -->\n\t<!-- Product data -->\n\t<!-- -------------------------------- -->\n\t<div class=\"product-info-wrapper\">\n\t\t<!-- Product data header  -->\n\t\t<div class=\"mn-b-big product-tab-header\">\n\t\t\t<button @click=\"changeTab('description')\" :class=\"{'product-tab-active':data.currentTab === 'description'}\" class=\"mn-r-semi product-tab\">\n\t\t\t\t<img loading=\"lazy\" class=\"mn-r-small\" src=\"@/assets/icons/description.svg\">\n\t\t\t\tОписание товара\n\t\t\t</button>\n\n\t\t\t<button @click=\"changeTab('delivery')\" :class=\"{'product-tab-active':data.currentTab === 'delivery'}\" class=\"mn-r-semi product-tab\">\n\t\t\t\t<img loading=\"lazy\" class=\"mn-r-small\" src=\"@/assets/icons/delivery.svg\">\n\t\t\t\tДоставка\n\t\t\t</button>\n\n\t\t\t<button @click=\"changeTab('payment')\" :class=\"{'product-tab-active':data.currentTab === 'payment'}\" class=\"mn-r-semi product-tab\">\n\t\t\t\t<img loading=\"lazy\" class=\"mn-r-small\" src=\"@/assets/icons/payment.svg\">\n\t\t\t\tОплата\n\t\t\t</button>\n\n\t\t</div>\n\t\t<!-- -------------------------------- -->\n\t\t<!-- Product data content -->\n\t\t<!-- -------------------------------- -->\n\t\t<!-- Description -->\n\t\t<div class=\"product-content\">\n\t\t\t<div v-if=\"data.currentTab === 'description'\" class=\"product-description\">\n\t\t\t\t\n\t\t\t</div>\n\t\t</div>\n\t\t<!-- Delivery -->\n\t\t<div v-if=\"data.currentTab === 'delivery'\" class=\"product-description\">\n\t\t\t<div class=\"cols-2\">\n\t\t\t\t<!-- Left col -->\n\t\t\t\t<div class=\"mn-r-medium col\">\n\t\t\t\t\t<img loading=\"lazy\" class=\"mn-b-medium\" src=\"@/assets/icons/shopping-bag.svg\">\n\t\t\t\t\t<p class=\"mn-b-small t-demi\">Если вы в Москве</p>\n\t\t\t\t\t<p class=\"mn-b-small\">\n\t\t\t\t\t\tДоставляем по Москве курьером в примеркой! У нас свои вежливые и пунктуальные курьеры.\n\t\t\t\t\t</p>\n\t\t\t\t\t<ul style=\"list-style: disc; line-height: 1.5;\" class=\"mn-b-big\">\n\t\t\t\t\t\t\t<li>Не ограничиваем количество моделей на примерку - привезём все, что понравится</li>\n\t\t\t\t\t\t\t<li>Не ограничиваем время на примерку</li>\n\t\t\t\t\t\t\t<li>Если ничего не подойдёт, вы платите только за доставку</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t<p class=\"mn-b-small t-demi\">Тарифы</p>\n\t\t\t\t\t<p class=\"mn-b-thin\">В пределах МКАД — <span class=\"mn-b-small t-demi\">350 ₽</span></p>\n\t\t\t\t\t<p class=\"mn-b-small\">За пределы МКАД — <span class=\"mn-b-small t-demi\">550 ₽</span></p>\n\t\t\t\t</div>\n\t\t\t\t<!-- Right col -->\n\t\t\t\t<div class=\"col\">\n\t\t\t\t\t<img loading=\"lazy\" class=\"mn-b-medium\" src=\"@/assets/icons/globe.svg\">\n\t\t\t\t\t<p class=\"mn-b-small t-demi\">Доставка в любую точку мира</p>\n\t\t\t\t\t<p class=\"mn-b-small\">В другие города отправляем почтой России или компанией СДЭК по 100% предоплате на карту.</p>\n\t\t\t\t\t<p class=\"mn-b-small\">Наши менеджеры на связи с вами ежедневно с 10 до 21 часов и готовы ответить на любые вопросы, а так же сделать дополнительные замеры, фото или видео вещей.</p>  \n\t\t\t\t\t<p class=\"mn-b-small\">Стоимость доставки рассчитывается индивидуально🌷</p>\n\t\t\t\t\t<p>Срок доставки от 6 до 15 дней.</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<!-- Payment -->\n\t\t<div v-if=\"data.currentTab === 'payment'\" class=\"product-description\">\n\t\t\t<div class=\"cols-2\">\n\t\t\t\t<!-- Left col -->\n\t\t\t\t<div class=\"mn-r-medium col\">\n\t\t\t\t\t<p class=\"mn-b-small t-demi\">Если вы в Москве</p>\n\t\t\t\t\t<ul style=\"list-style: decimal; line-height: 1.5;\" class=\"mn-b-medium\">\n\t\t\t\t\t\t<li class=\"mn-b-thin\">Положите выбранные товары в корзину и оформите заказ.</li>\n\t\t\t\t\t\t<li class=\"mn-b-thin\">Наши менеджеры свяжутся с вами в рабочее время для уточнения деталей</li>\n\t\t\t\t\t\t<li class=\"mn-b-thin\">После утверждения заказа, менеджер осуществит сброку ипередаст его на доставку нашим курьерам</li>\n\t\t\t\t\t\t<li class=\"mn-b-thin\">Ожидайте курьера в назначенную дату. Вы можете примерить все что заказали, выбрать и оплатить только то, что вам подошло + за доставку курьеру</li>\n\t\t\t\t\t\t<li class=\"mn-b-thin\">Оплатить можно как наличными, так и по карте, у наших курьеров всегда с собой терминал</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<!-- <p>В <a  @click=\"store.commit('toggleShopAdress')\"  class=\"t-demi underline\">шоуруме в Москве</a> оплатить товары вы сможете как наличными, так и по карте.</p> -->\n\t\t\t\t</div>\n\t\t\t\t<!-- Right col -->\n\t\t\t\t<div class=\"col\">\n\t\t\t\t\t<p class=\"mn-b-small t-demi\">Если вы не Москве</p>\n\t\t\t\t\t<ul style=\"list-style: decimal; line-height: 1.5;\" class=\"mn-b-medium\">\n\t\t\t\t\t\t<li class=\"mn-b-thin\">Положите выбранные товары в корзину и оформите заказ.</li>\n\t\t\t\t\t\t<li class=\"mn-b-thin\">Наши менеджеры свяжутся с вами в рабочее время для уточнения деталей</li>\n\t\t\t\t\t\t<li class=\"mn-b-thin\">После утверждения заказа, менеджер вышлет ссылку для оплаты удобным вам способом</li>\n\t\t\t\t\t\t<li class=\"mn-b-thin\">После оплаты вы получите электронный чек и трек-номер для отслеживания посылки на эл.почту или в Whatsapp</li>\n\t\t\t\t\t\t<li class=\"mn-b-thin\">Ожидайте доставку оплаченного заказа в выбранной транспортной компании (Почта России или СДЭК)</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t</div>\n\t<!-- -------------------------------- -->\n\t<!-- Product data end -->\n\t<!-- -------------------------------- -->\n</template>\n\n\n<script setup scoped>\n\timport { ref, computed, toRefs, reactive } from 'vue'\n\t\n\n\tlet data = reactive({currentTab: 'description'})\n\tlet reactiveData = toRefs(data)\n\n\tfunction changeTab (tab) {data.currentTab = tab; console.log(data.currentTab) }\n\n\n</script>\n\n<style lang=\"scss\">\n\n.product-tab-header {\n\tdisplay: flex; \n\n\tborder-bottom: 1px solid rgba(0,0,0,0.1);\n\t\n\t.product-tab {\n\n\t\tdisplay: flex;\n\n\t\tmin-height: 2.5rem;\n\n\t\ttext-transform: uppercase;\n\n\t\tbackground: transparent;\n\n\t\tborder-bottom: 1px solid rgba(0,0,0,0);\n\n\t\topacity: 0.33;\n\n\t\t&-active {\n\t\t\topacity: 1;\n\t\t\tborder-bottom: 1px solid rgba(0,0,0,1);\n\t\t}\n\t}\n}\n\n</style>\n\n\n",
                "name": "ProductInformationSection.vue",
                "size": 5560,
                "type": "source"
              },
              {
                "path": "../../src/modules/products/components/sections/SectionProduct.vue",
                "relativePath": "modules/products/components/sections/SectionProduct.vue",
                "extension": ".vue",
                "content": "<template>\n\t<div class=\"cols-2-1_2 pd-small w-100 gap-thin\">\n\t\t\n\t\t<div class=\"pd-small  bg-light radius-medium flex-nowrap flex-column flex pos-relative\">\n\t\t\t<div class=\"w-100 bg-light radius-semi o-hidden\">\n\t\t\t\t<!-- PRODUCT IMAGE -->\n\t\t\t\t<Image360\n\t\t\t\t\tv-if=\"product && product.image3d\"\n\t\t\t\t\tclass=\"h-100 w-100\"\n\t\t\t\t\t:imagePath=\"`/assets/images/products/${product.image3d}`\"\n\t\t\t\t\t:imageCount=\"36\"\n\t\t\t\t/>\n\n\t\t\t\t<img loading=\"lazy\" \n\t\t\t\t\tv-if=\"images[0] && !product.image3d\"\n\t\t\t\t\tclass=\"h-max bg-light w-100\"\n\t\t\t\t\tstyle=\"object-fit: contain;\"\n\t\t\t\t\t:src=\"(FILE_SERVER_URL || '') + images[0]\"\n\t\t\t\t/>\n\n\t\t\t\t<PlaceholderImage\n\t\t\t\t\tv-if=\"!images[0] && !product.image3d\"\n\t\t\t\t\tclass=\"h-max-20r h-100 w-100\"\n\t\t\t\t\tstyle=\"object-fit: cover;\"\n\t\t\t\t/>\n\n\t\t\t</div>\n\n\t\t\t<ProductImages\n\t\t\t\tv-if=\"images.length > 1\"\n\t\t\t\t:images=\"images\"\n\t\t\t\tclass=\"mn-t-thin\"\n\t\t\t/>\n\t\t</div>\n\n\t\t<div class=\"radius-medium pos-relative w-100 h-100 flex-column flex-justify flex col\">\n\n\t\t\t<IconEdit\n\t\t\t\tv-if=\"accesses && hasAccess(route.params._id, 'products', 'edit', accesses)\"\n\t\t\t\t@click=\"$router.push({\n\t\t\t\t\tname: 'ProductEdit', \n\t\t\t\t\tparams: {\n\t\t\t\t\t\t_id: product.owner.target,\n\t\t\t\t\t\tproduct: product._id\n\t\t\t\t\t}\n\t\t\t\t})\" \n\t\t\t\tclass=\"pos-absolute pos-t-regular pos-r-regular i-regular t-transp\"\n\t\t\t/>\n\n\t\t\t<h2 v-if=\"recommendation\" class=\"t-main t-semi p-big\">{{t('airecommend')}}</h2>\n\t\t\t<!-- Name -->\n\t\t\t<h1 class=\"w-100 h1-product mn-b-small\">{{ product.name }}</h1>\n\t\t\t<!-- Price -->\n\t\t\t<Price v-if=\"product.listing !== 'rent'\" :product=\"product\" size=\"big\" class=\"mn-b-semi\" />\n\t\t\t<!-- Variants -->\n\t\t\t<!-- <div v-if=\"product.variants.length > 0\" class=\"flex-nojustify  flex\">\n\t\t\t\t<SelectElement v-if=\"sizes2.length > 0\" :elements=\"sizes2\" :selected=\"product.selectedSize\" class=\"mn-r-medium\" />\n\t\t\t</div> -->\n\t\t\t<!-- Description -->\n\t\t\t<h3 v-if=\"recommendation\" class=\"mn-b-semi\">\n\t\t\t\t{{ recommendation }}\n\t\t\t</h3>\n\n\t\t\t<Tab \n\t\t\t\tv-model:selected=\"tabProduct\"\n\t\t\t\t:tabs=\"[\n\t\t\t\t\t{name: 'Description', value: 'description'},\n\t\t\t\t\t{name: 'Specifications', value: 'specifications'}\n\t\t\t\t]\"\n\t\t\t\ttabClass=\"pd-small pd-r-medium pd-l-medium w-100 pd-small radius-small\"\n\t\t\t\tclass=\"bg-light mn-b-small\"\n\t\t\t/>\n\n\t\t\t<div class=\"h-min-5r pos-relative\">\n\t\t\t\t<transition name=\"slide-fade\">\n\n\t\t\t\t\t<div v-if=\"tabProduct === 'description'\"  class=\"pd-medium radius-medium bg-light \">\n\t\t\t\t\t\t<p v-if=\"product.description && !product.translations < 1 && !recommendation\" class=\"w-100 t-transp\">\n\t\t\t\t\t\t\t{{ product.description }}\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<p v-if=\"product.translations && product.translations.length > 1 && !recommendation\" class=\"w-100 t-transp\">\n\t\t\t\t\t\t\t{{ t('description') }}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div \n\t\t\t\t\t\tv-else\n\t\t\t\t\t\tclass=\"cols-2 w-100 bg-light radius-medium pd-medium gap-small\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div \n\t\t\t\t\t\t\tv-if=\"product.attributes.length > 0\" \n\t\t\t\t\t\t\tv-for=\"attributes in product.attributes\" \n\t\t\t\t\t\t\tclass=\"w-100 pd-small radius-small bg-white product-attributes\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<p class=\"t-demi\">{{ attributes.name }}</p>\n\t\t\t\t\t\t\t<p>{{ attributes.value }}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</transition>\n\t\t\t</div>\n\n\t\t\t<div v-if=\"product.listing === 'rent'\" class=\"mn-t-small max-w-33rem mobile-w-100 t-white gap-small cols-2\">\n\t\t\t\t<Button\n\t\t\t\t\t:submit=\"() => { addToCart(product) } \" \n\t\t\t\t\t:text=\"{\n\t\t\t\t\t\tsuccess: ' ✔ Added',\n\t\t\t\t\t\terror: 'error'\n\t\t\t\t\t}\"\n\t\t\t\t\tclass=\"h-3r w-100 mn-r-small bg-main button\"\n\t\t\t\t> \n\t\t\t\t\t{{ t('addtoorder') }}\n\t\t\t\t</Button>\n\t\t\t</div>\n\n\t\t\t<!-- Actions -->\n\t\t\t<div v-else class=\"mn-t-small max-w-33rem mobile-w-100 t-white gap-small cols-2\">\n\t\t\t\t<Button\n\t\t\t\t\tv-if=\"product.quantity > 0\"\n\t\t\t\t\t:submit=\"a => addToCart(product)\" \n\t\t\t\t\t:disabled=\"validateToCard(product)\" \n\t\t\t\t\t:text=\"{\n\t\t\t\t\t\tsuccess: ' ✔ Added',\n\t\t\t\t\t\terror: 'error'\n\t\t\t\t\t}\"\n\t\t\t\t\tclass=\"h-3r w-100 mn-r-small bg-main button\"\n\t\t\t\t> \n\t\t\t\t\t\t{{ t('addtoorder') }}\n\t\t\t\t</Button>\n\t\t\t\t<div v-else class=\"flex-center flex uppercase radius-medium t-black w-max pd-small t-medium bg-grey h-3r w-100 mn-r-smallbutton\">\n\t\t\t\t\tOut of Stock\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script setup>\nimport Button from '@martyrs/src/components/Button/Button.vue'\nimport Tab from '@martyrs/src/components/Tab/Tab.vue'\nimport IconEdit from '@martyrs/src/modules/icons/navigation/IconEdit.vue'\nimport PlaceholderImage from '@martyrs/src/modules/icons/placeholders/PlaceholderImage.vue'\n\nimport Image360 \tfrom '@martyrs/src/modules/products/components/elements/Image360.vue'\nimport ProductImages from \"@martyrs/src/modules/products/components/blocks/ProductImages.vue\";\n\nimport THC from '@martyrs/src/modules/products/components/elements/THC.vue'\nimport Price from '@martyrs/src/modules/products/components/elements/Price.vue'\n// import SelectElement \tfrom '@/components/elements/SelectElement.vue'\n\nimport { computed, ref } from 'vue'\n\n\timport { useRoute,useRouter } from 'vue-router'\nimport { useI18n }    from 'vue-i18n'\n\nimport * as shopcart from '@martyrs/src/modules/orders/store/shopcart.js';\n\n// Props\nconst props = defineProps({\n  product: {\n    type: Object,\n    required: true\n  },\n  user: {\n    type: String,\n  },\n  accesses: {\n    type: Object,\n\t  default: null\n  },\n  recommendation: {\n  \ttype: String\n  }\n})\n\n\n\n\tconst route = useRoute()\n\tconst router = useRouter()\n\n// Computed properties\nconst images = computed(() => {\n  return props.product.images\n})\n\nconst tabProduct = ref('description')\n\nconst text = {\n\tmessages: {\n\t  en: {\n\t  \tairecommend: 'AI Recommends You',\n\t  \tdescription: '',\n\t  \taddtoorder: 'Add to order',\n\t    fastorder: 'Fast Order'\n\t  },\n\t  ru: {\n\t  \tairecommend: 'AI Рекомендует вам',\n\t  \tdescription: '',\n\t  \taddtoorder: 'Добавить в корзину',\n\t    fastorder: 'Быстрый заказ'\n\t  }\n\t}\n}\n\nconst { t } = useI18n(text)\n\n// Methods\nfunction validateToCard(product) {\n  if (product.quantity > 0) {\n    return false\n  }\n  return true\n}\nasync function addToCart(product) {\n\tconsole.log(product)\n    try {\n        if (shopcart.state.organization !== product.owner.target) {\n            shopcart.state.organization = product.owner.target\n            shopcart.state.positions = []\n        }\n        await shopcart.actions.addProductToCart(product, product.owner.target)\n        return true // Make sure we return something\n    } catch (error) {\n        console.error('Ошибка при добавлении товара в корзину:', error)\n        throw error\n    }\n}\n</script>\n",
                "name": "SectionProduct.vue",
                "size": 6322,
                "type": "source"
              }
            ]
          }
        }
      },
      "rents": {
        "controllers": {
          "routes": {
            "_files": [
              {
                "path": "../../src/modules/rents/controllers/routes/rents.routes.js",
                "relativePath": "modules/rents/controllers/routes/rents.routes.js",
                "extension": ".js",
                "content": "import middlewareFactoryAuth from '@martyrs/src/modules/auth/controllers/middlewares/index.js';\nimport globalsabac from '@martyrs/src/modules/globals/controllers/classes/globals.abac.js';\nimport controllerFactory from '../services/rents.services.js';\n// const middlewareFactoryRents = require('../middlewares/rent');\n// ABAC\nconst { getInstance } = globalsabac;\nexport default (function (app, db) {\n  const controller = controllerFactory(db);\n  const abac = getInstance(db);\n  // Middleware для аутентификации\n  const { authJwt } = middlewareFactoryAuth(db);\n  // Middleware для валидации rent-specific данных\n  // const { verifyRent } = middlewareFactoryRents(db);\n  // Чтение записей об аренде\n  app.get(\n    '/api/rents',\n    [\n      authJwt.verifyToken(), // Требуется аутентификация\n      abac.middleware('rents', 'read'),\n    ],\n    controller.read\n  );\n  // Создание записи об аренде\n  app.post(\n    '/api/rents',\n    [\n      authJwt.verifyToken(), // Требуется аутентификация\n      abac.middleware('rents', 'create'), // Проверка прав доступа\n      // verifyRent.checkRequiredFields, // Проверка обязательных полей\n      // verifyRent.checkAvailability // Проверка доступности\n    ],\n    controller.create\n  );\n  // Обновление записи об аренде\n  app.put(\n    '/api/rents/update',\n    [\n      authJwt.verifyToken(), // Требуется аутентификация\n      abac.middleware('rents', 'update'), // Проверка прав доступа\n    ],\n    controller.update\n  );\n  // Удаление записи об аренде\n  app.delete(\n    '/api/rents/:id',\n    [\n      authJwt.verifyToken(), // Требуется аутентификация\n      abac.middleware('rents', 'delete'), // Проверка прав доступа\n    ],\n    controller.delete\n  );\n  // Проверка доступности\n  app.get(\n    '/api/rents/availability',\n    [\n      authJwt.verifyToken(true),\n      abac.middleware('rents', 'read', {\n        allowUnauthenticated: true, // Разрешить неаутентифицированным пользователям\n      }),\n    ],\n    controller.getAvailability\n  );\n});\n",
                "name": "rents.routes.js",
                "size": 1973,
                "type": "source"
              }
            ]
          },
          "services": {
            "_files": [
              {
                "path": "../../src/modules/rents/controllers/services/rents.services.js",
                "relativePath": "modules/rents/controllers/services/rents.services.js",
                "extension": ".js",
                "content": "import Cache from '@martyrs/src/modules/globals/controllers/classes/globals.cache.js';\nimport Logger from '@martyrs/src/modules/globals/controllers/classes/globals.logger.js';\nimport Validator from '@martyrs/src/modules/globals/controllers/classes/globals.validator.js';\nimport Verifier from '@martyrs/src/modules/globals/controllers/classes/globals.verifier.js';\nimport queryProcessorGlobals from '@martyrs/src/modules/globals/controllers/utils/queryProcessor.js';\n// Validation configs\nconst queryValidatorConfig = {\n  // status: { rule: 'optional', validator: Validator.schema().string().oneOf(['published', 'pending']), default: 'pending' },\n  owner: { rule: 'optional', validator: Validator.schema().string(), default: null },\n  order: { rule: 'optional', validator: Validator.schema().string(), default: null },\n  dateStart: { rule: 'optional', validator: Validator.schema().date(), default: null },\n  dateEnd: { rule: 'optional', validator: Validator.schema().date(), default: null },\n  startDate: { rule: 'optional', validator: Validator.schema().date(), default: null },\n  endDate: { rule: 'optional', validator: Validator.schema().date(), default: null },\n  sortParam: { rule: 'optional', validator: Validator.schema().string(), default: null },\n  sortOrder: {\n    rule: 'optional',\n    validator: Validator.schema().string().oneOf(['asc', 'desc']),\n    default: 'asc',\n  },\n  skip: { rule: 'optional', validator: Validator.schema().number().integer().min(0), default: 0 },\n  limit: {\n    rule: 'optional',\n    validator: Validator.schema().number().integer().min(1).max(100),\n    default: 10,\n  },\n  productId: { rule: 'optional', validator: Validator.schema().string(), default: null },\n};\nconst bodyValidatorConfig = {\n  // _id: { rule: 'optional', validator: Validator.schema().string() },\n  // order: { rule: 'optional', validator: Validator.schema().string() },\n  product: { rule: 'optional', validator: Validator.schema().string().required() },\n  // quantity: { rule: 'optional', validator: Validator.schema().number().integer().min(1).required() },\n  startDate: { rule: 'optional', validator: Validator.schema().date().required() },\n  endDate: { rule: 'optional', validator: Validator.schema().date().required() },\n  status: {\n    rule: 'optional',\n    validator: Validator.schema().string().oneOf(['pending', 'confirmed', 'active', 'completed', 'canceled']),\n    default: 'pending',\n  },\n  creator: {\n    rule: 'optional',\n    validator: Validator.schema()\n      .object({\n        type: Validator.schema().string().oneOf(['user', 'organization', 'customer', 'User', 'Organization', 'Customer']).required(),\n        target: Validator.schema().string().required(),\n      })\n      .required(),\n  },\n  owner: {\n    rule: 'optional',\n    validator: Validator.schema()\n      .object({\n        type: Validator.schema().string().oneOf(['organization', 'Organization']).required(),\n        target: Validator.schema().string().required(),\n      })\n      .required(),\n  },\n  comment: { rule: 'optional', validator: Validator.schema().string(), default: '' },\n};\nconst queryVerifier = new Verifier(queryValidatorConfig);\nconst bodyVerifier = new Verifier(bodyValidatorConfig);\n// Controller\nconst controller = db => {\n  const Rent = db.rent;\n  // Initialize logger and cache\n  const logger = new Logger(db);\n  const cache = new Cache({ ttlSeconds: 300 });\n  const cacheMetadata = new Map();\n  const invalidateCacheForRent = async (rentId, productId, startDate, endDate) => {\n    // 1. Всегда инвалидируем кеш по конкретной аренде и продукту\n    const specificTags = [`rent:${rentId}`, `product:${productId}`];\n    await cache.delByTags(specificTags);\n    // Выходим, если даты не предоставлены\n    if (!startDate || !endDate) {\n      await logger.info(`Cache invalidated for specific rent:${rentId} and product:${productId}`);\n      return;\n    }\n    // 2. Ищем ключи кешей, которые могут перекрываться с новой арендой\n    const keysToInvalidate = [];\n    for (const [cacheKey, metadata] of cacheMetadata.entries()) {\n      // Проверяем есть ли пересечение диапазонов дат\n      if ((!metadata.dateStart || new Date(metadata.dateStart) <= new Date(endDate)) && (!metadata.dateEnd || new Date(metadata.dateEnd) >= new Date(startDate))) {\n        keysToInvalidate.push(cacheKey);\n      }\n    }\n    // 3. Инвалидируем найденные ключи\n    if (keysToInvalidate.length > 0) {\n      for (const key of keysToInvalidate) {\n        await cache.del(key);\n        cacheMetadata.delete(key);\n      }\n      await logger.info(`Invalidated ${keysToInvalidate.length} date-related cache entries for rent:${rentId}`);\n    }\n  };\n  const read = async (req, res) => {\n    try {\n      const validationResult = queryVerifier.verify(req.query, {\n        applyDefaults: true,\n        removeInvalid: true,\n      });\n      if (!validationResult.isValid) {\n        await logger.info(`Invalid query parameters: ${JSON.stringify(validationResult.verificationErrors)}`);\n        return res.status(400).json({\n          errorCode: 'INVALID_QUERY_PARAMS',\n          message: 'Invalid query parameters.',\n          details: validationResult.verificationErrors,\n        });\n      }\n      const verifiedData = validationResult.verifiedData;\n      const cacheKey = `rents:${JSON.stringify(verifiedData)}`;\n      const cachedResult = await cache.get(cacheKey);\n      if (cachedResult) {\n        await logger.info(`Cache hit for key: ${cacheKey}`);\n        return res.status(200).json(cachedResult);\n      }\n      // Создаем pipeline с использованием utility-функций\n      const stages = [\n        // Базовые фильтры\n        ...queryProcessorGlobals.getBasicOptions(verifiedData),\n        // Фильтр по датам\n        ...queryProcessorGlobals.getFilterDate(verifiedData.dateStart, verifiedData.dateEnd, {\n          start: 'startDate',\n          end: 'endDate',\n        }),\n        // Добавляем lookup продуктов\n        {\n          $lookup: {\n            from: 'products',\n            localField: 'product',\n            foreignField: '_id',\n            as: 'productDetails',\n          },\n        },\n        {\n          $unwind: {\n            path: '$productDetails',\n            preserveNullAndEmptyArrays: true,\n          },\n        },\n        // Добавляем стейджи для creator и owner\n        queryProcessorGlobals.getCreatorUserLookupStage(),\n        queryProcessorGlobals.getCreatorOrganizationLookupStage(),\n        queryProcessorGlobals.getCreatorCustomerLookupStage(),\n        queryProcessorGlobals.getOwnerUserLookupStage(),\n        queryProcessorGlobals.getOwnerOrganizationLookupStage(),\n        queryProcessorGlobals.getAddFieldsCreatorOwnerStage(),\n        // Проекция нужных полей\n        {\n          $project: {\n            product: 1,\n            productDetails: 1,\n            quantity: 1,\n            startDate: 1,\n            endDate: 1,\n            status: 1,\n            creator: 1,\n            owner: 1,\n            comment: 1,\n          },\n        },\n        // Удаляем временные свойства\n        queryProcessorGlobals.removeTempPropeties(),\n        // Сортировка и пагинация\n        ...queryProcessorGlobals.getSortingOptions(verifiedData.sortParam, verifiedData.sortOrder),\n        ...queryProcessorGlobals.getPaginationOptions(verifiedData.skip, verifiedData.limit),\n      ];\n      const results = await Rent.aggregate(stages);\n      // Добавляем теги для каждой аренды и продукта\n      const tags = results.map(rent => [`rent:${rent._id}`, `product:${rent.product}`]).flat();\n      // Сохраняем метаданные о дате для последующей инвалидации\n      cacheMetadata.set(cacheKey, {\n        dateStart: verifiedData.dateStart,\n        dateEnd: verifiedData.dateEnd,\n        timestamp: Date.now(),\n      });\n      await cache.setWithTags(cacheKey, results, tags);\n      await logger.info(`Rents fetched and cached: ${results.length} items`);\n      return res.status(200).json(results);\n    } catch (err) {\n      console.log(err);\n      await logger.error(`Error fetching rents: ${err.message}`);\n      const errorCode = err.name === 'MongoError' ? 'DATABASE_ERROR' : 'INTERNAL_SERVER_ERROR';\n      return res.status(500).json({ errorCode, message: 'Error occurred.', details: err.message });\n    }\n  };\n  const create = async (req, res) => {\n    try {\n      const validationResult = bodyVerifier.verify(req.body, {\n        applyDefaults: true,\n        removeInvalid: false,\n      });\n      if (!validationResult || !validationResult.isValid) {\n        console.log(validationResult);\n        await logger.info(`Invalid request body: ${JSON.stringify(validationResult.verificationErrors)}`);\n        return res.status(400).json({\n          errorCode: 'INVALID_BODY',\n          message: 'Invalid request body.',\n          details: validationResult.verificationErrors,\n        });\n      }\n      const rent = await Rent.create(validationResult.verifiedData);\n      const populatedRent = await Rent.findById(rent._id).populate('product');\n      await logger.info(`Rent created: ${rent._id}`);\n      // Инвалидируем кеши с перекрывающимися датами\n      await invalidateCacheForRent(rent._id, rent.product, rent.startDate, rent.endDate);\n      return res.status(201).json(populatedRent);\n    } catch (err) {\n      console.log(err);\n      await logger.error(`Error creating rent: ${err.message}`);\n      const errorCode = err.name === 'MongoError' ? 'DATABASE_ERROR' : 'INTERNAL_SERVER_ERROR';\n      return res.status(500).json({ errorCode, message: 'Error occurred while creating rent.', details: err.message });\n    }\n  };\n  // Периодическая очистка устаревших метаданных о кеше\n  const cleanupCacheMetadata = () => {\n    const now = Date.now();\n    const maxAge = 24 * 60 * 60 * 1000; // 24 часа\n    for (const [key, metadata] of cacheMetadata.entries()) {\n      if (now - metadata.timestamp > maxAge) {\n        cacheMetadata.delete(key);\n      }\n    }\n  };\n  // Запускаем очистку каждый час\n  setInterval(cleanupCacheMetadata, 60 * 60 * 1000);\n  const update = async (req, res) => {\n    try {\n      const validationResult = bodyVerifier.verify(req.body, {\n        applyDefaults: false,\n        removeInvalid: false,\n      });\n      if (!validationResult || !validationResult.isValid) {\n        await logger.info(`Invalid update body: ${JSON.stringify(validationResult.verificationErrors)}`);\n        return res.status(400).json({\n          errorCode: 'INVALID_BODY',\n          message: 'Invalid request body.',\n          details: validationResult.verificationErrors,\n        });\n      }\n      const { _id, ...updateData } = validationResult.verifiedData;\n      const updatedRent = await Rent.findOneAndUpdate({ _id }, updateData, { new: true }).populate('product');\n      if (!updatedRent) {\n        await logger.info(`Rent not found for update: ${_id}`);\n        return res.status(404).json({ errorCode: 'RENT_NOT_FOUND', message: 'Rent not found.' });\n      }\n      await logger.info(`Rent updated: ${_id}`);\n      await invalidateCacheForRent(_id, updatedRent.product);\n      return res.status(200).json(updatedRent);\n    } catch (err) {\n      await logger.error(`Error updating rent: ${err.message}`);\n      const errorCode = err.name === 'MongoError' ? 'DATABASE_ERROR' : 'INTERNAL_SERVER_ERROR';\n      return res.status(500).json({ errorCode, message: 'Error occurred while updating rent.', details: err.message });\n    }\n  };\n  const deleteRent = async (req, res) => {\n    try {\n      const validationResult = bodyVerifier.verify({ _id: req.body._id }, { applyDefaults: false, removeInvalid: false });\n      if (!validationResult || !validationResult.isValid) {\n        await logger.info(`Invalid delete body: ${JSON.stringify(validationResult.verificationErrors)}`);\n        return res.status(400).json({\n          errorCode: 'INVALID_BODY',\n          message: 'Invalid request body.',\n          details: validationResult.verificationErrors,\n        });\n      }\n      const { _id } = validationResult.verifiedData;\n      // Get the rent data before deletion to invalidate cache\n      const rentToDelete = await Rent.findById(_id);\n      if (!rentToDelete) {\n        await logger.info(`Rent not found for deletion: ${_id}`);\n        return res.status(404).json({ errorCode: 'RENT_NOT_FOUND', message: 'Rent not found.' });\n      }\n      const deletedRent = await Rent.findOneAndDelete({ _id }).populate('product');\n      await logger.info(`Rent deleted: ${_id}`);\n      await invalidateCacheForRent(_id, rentToDelete.product);\n      return res.status(200).json(deletedRent);\n    } catch (err) {\n      await logger.error(`Error deleting rent: ${err.message}`);\n      const errorCode = err.name === 'MongoError' ? 'DATABASE_ERROR' : 'INTERNAL_SERVER_ERROR';\n      return res.status(500).json({ errorCode, message: 'Error occurred while deleting rent.', details: err.message });\n    }\n  };\n  const getAvailability = async (req, res) => {\n    try {\n      const validationResult = queryVerifier.verify(req.query, {\n        applyDefaults: true,\n        removeInvalid: true,\n        only: ['productId', 'startDate', 'endDate'],\n      });\n      if (!validationResult || !validationResult.isValid) {\n        await logger.info(`Invalid query parameters: ${JSON.stringify(validationResult.verificationErrors)}`);\n        return res.status(400).json({\n          errorCode: 'INVALID_QUERY_PARAMS',\n          message: 'Invalid query parameters.',\n          details: validationResult.verificationErrors,\n        });\n      }\n      const { productId, startDate, endDate } = validationResult.verifiedData;\n      if (!productId || !startDate || !endDate) {\n        return res.status(400).json({\n          errorCode: 'MISSING_REQUIRED_PARAMS',\n          message: 'productId, startDate, and endDate are required parameters.',\n        });\n      }\n      const cacheKey = `availability:${productId}:${startDate}:${endDate}`;\n      const cachedResult = await cache.get(cacheKey);\n      if (cachedResult) {\n        await logger.info(`Cache hit for availability: ${cacheKey}`);\n        return res.status(200).json(cachedResult);\n      }\n      // Получаем информацию о продукте\n      const product = await db.product.findById(productId);\n      if (!product) {\n        await logger.info(`Product not found: ${productId}`);\n        return res.status(404).json({ errorCode: 'PRODUCT_NOT_FOUND', message: 'Product not found.' });\n      }\n      const totalAvailable = product.quantity || 1;\n      // Парсим даты как UTC\n      const start = new Date(`${startDate}T00:00:00Z`);\n      const end = new Date(`${endDate}T23:59:59Z`);\n      const dateRange = [];\n      // Генерируем диапазон дат в UTC\n      for (let dt = new Date(start); dt <= end; dt.setUTCDate(dt.getUTCDate() + 1)) {\n        dateRange.push(new Date(dt));\n      }\n      // Ищем активные ренты, пересекающиеся с диапазоном\n      const activeRents = await Rent.find({\n        product: productId,\n        status: { $in: ['pending', 'confirmed', 'active'] },\n        $or: [{ startDate: { $lte: end }, endDate: { $gte: start } }],\n      });\n      // Вычисляем доступность для каждой даты\n      const availabilityByDate = dateRange.map(date => {\n        const dateStr = date.toISOString().split('T')[0];\n        let rentedQuantity = 0;\n        activeRents.forEach(rent => {\n          const rentStart = new Date(rent.startDate);\n          const rentEnd = new Date(rent.endDate);\n          // Проверяем, пересекается ли рента с текущей датой\n          if (date >= rentStart && date <= rentEnd) {\n            rentedQuantity += rent.quantity;\n          }\n        });\n        const available = Math.max(0, totalAvailable - rentedQuantity);\n        return {\n          date: dateStr,\n          totalQuantity: totalAvailable,\n          rentedQuantity,\n          availableQuantity: available,\n        };\n      });\n      const result = {\n        productId,\n        period: {\n          startDate: start.toISOString().split('T')[0],\n          endDate: end.toISOString().split('T')[0],\n        },\n        availability: availabilityByDate,\n      };\n      await cache.setWithTags(cacheKey, result, [`product:${productId}`]);\n      await logger.info(`Availability calculated for product: ${productId}`);\n      return res.status(200).json(result);\n    } catch (err) {\n      await logger.error(`Error checking availability: ${err.message}`);\n      const errorCode = err.name === 'MongoError' ? 'DATABASE_ERROR' : 'INTERNAL_SERVER_ERROR';\n      return res.status(500).json({\n        errorCode,\n        message: 'Error occurred while checking availability.',\n        details: err.message,\n      });\n    }\n  };\n  return {\n    read,\n    create,\n    update,\n    delete: deleteRent,\n    getAvailability,\n  };\n};\nexport default controller;\n",
                "name": "rents.services.js",
                "size": 16623,
                "type": "source"
              }
            ]
          }
        },
        "models": {
          "_files": [
            {
              "path": "../../src/modules/rents/models/rent.model.js",
              "relativePath": "modules/rents/models/rent.model.js",
              "extension": ".js",
              "content": "export default (db, additionalFields = {}) => {\n  const RentSchema = new db.mongoose.Schema({\n    order: {\n      type: db.mongoose.Schema.Types.ObjectId,\n      ref: 'Order',\n      default: null,\n    },\n    product: { type: db.mongoose.Schema.Types.ObjectId, ref: 'Product', required: true },\n    quantity: {\n      type: Number,\n      required: true,\n      min: 1,\n      default: 1,\n    },\n    startDate: {\n      type: Date,\n      required: true,\n    },\n    endDate: {\n      type: Date,\n      required: true,\n    },\n    status: {\n      type: String,\n      enum: ['pending', 'confirmed', 'active', 'completed', 'canceled'],\n      default: 'pending',\n    },\n    creator: {\n      type: {\n        type: String,\n        enum: ['user', 'organization', 'customer', 'User', 'Organization', 'Customer'],\n        required: true,\n      },\n      target: { type: db.mongoose.Schema.Types.ObjectId, required: true },\n    },\n    owner: {\n      type: {\n        type: String,\n        enum: ['user', 'organization', 'customer', 'User', 'Organization', 'Customer'],\n        required: true,\n      },\n      target: { type: db.mongoose.Schema.Types.ObjectId, required: true },\n    },\n    comment: { type: String, default: '' },\n    ...additionalFields,\n  });\n  return db.mongoose.model('Rent', RentSchema);\n};\n",
              "name": "rent.model.js",
              "size": 1287,
              "type": "source"
            }
          ]
        },
        "_files": [
          {
            "path": "../../src/modules/rents/rents.client.js",
            "relativePath": "modules/rents/rents.client.js",
            "extension": ".js",
            "content": "// Store\nimport * as storeRenting from './views/store/rents.store.js';\n\n// Router\nimport { createRentsRoutes } from './views/router/rents.router.js';\n\n// Views\nimport CardRent from './views/components/blocks/CardRent.vue';\nimport GanttChart from './views/components/pages/GanttChart.vue';\nimport Rents from './views/components/pages/Rents.vue';\nimport RentsEdit from './views/components/pages/RentsEdit.vue';\n\n// Функция инициализации для модуля аренды\nfunction initializeRenting(app, store, router, options = {}) {\n  const route = options.route || 'Home';\n\n  const routesRenting = createRentsRoutes('', options);\n\n  router.addRoute(route, routesRenting);\n  router.addRoute('Backoffice Root', createRentsRoutes('Backoffice', options));\n\n  store.addStore('rents', storeRenting);\n}\n\nconst ModuleRenting = {\n  initialize: initializeRenting,\n  views: {\n    store: {\n      storeRenting,\n    },\n    router: {\n      createRentsRoutes,\n    },\n    components: {\n      // Blocks\n      CardRent,\n      // Sections\n      // Pages\n      Rents,\n      GanttChart,\n      RentsEdit,\n    },\n  },\n};\n\nexport {\n  // Blocks\n  CardRent,\n  createRentsRoutes,\n  GanttChart,\n  initializeRenting,\n  // Sections\n  // Pages\n  Rents,\n  RentsEdit,\n  storeRenting,\n};\n\nexport default ModuleRenting;\n",
            "name": "rents.client.js",
            "size": 1268,
            "type": "source"
          },
          {
            "path": "../../src/modules/rents/rents.server.js",
            "relativePath": "modules/rents/rents.server.js",
            "extension": ".js",
            "content": "import RentRoutes from './controllers/routes/rents.routes.js';\nimport RentServices from './controllers/services/rents.services.js';\nimport RentModel from './models/rent.model.js';\nfunction initializeRenting(app, db, origins, publicPath, options = {}) {\n  // Получаем дополнительные поля для модели из options\n  const { rentFields = {} } = options;\n  // Инициализируем модель с дополнительными полями\n  db.rent = RentModel(db, rentFields);\n  // Настраиваем маршруты, если объект приложения передан\n  if (app) {\n    RentRoutes(app, db, origins, publicPath);\n  }\n}\nexport const models = {\n  RentModel,\n};\nexport const controllers = {\n  RentServices,\n  RentRoutes,\n};\nexport { initializeRenting as initialize };\nexport default {\n  initialize: initializeRenting,\n  models,\n  controllers,\n};\n",
            "name": "rents.server.js",
            "size": 786,
            "type": "source"
          }
        ],
        "views": {
          "router": {
            "_files": [
              {
                "path": "../../src/modules/rents/views/router/rents.router.js",
                "relativePath": "modules/rents/views/router/rents.router.js",
                "extension": ".js",
                "content": "import * as validationOwnership from '@martyrs/src/modules/auth/views/middlewares/ownership.validation.js';\n\nexport function createRentsRoutes(prefix = '', options = {}) {\n  const nameWithPrefix = name => (prefix ? `${prefix}${name}` : name);\n\n  const routes = {\n    path: options.basePath || 'rents',\n    meta: {\n      title: {\n        en: 'Renting',\n        ru: 'Аренда',\n      },\n    },\n    children: [\n      {\n        path: '',\n        name: nameWithPrefix('Rents'),\n        meta: {\n          title: {\n            en: 'Rents',\n            ru: 'Аренды',\n          },\n        },\n        beforeEnter: [validationOwnership.requiresAccess('rents', 'read')],\n        component: () => import(/* webpackChunkName: 'Renting' */ '../components/pages/Rents.vue'),\n      },\n      {\n        path: 'create',\n        name: nameWithPrefix('Create Rent'),\n        meta: {\n          title: {\n            en: 'Create Rent',\n            ru: 'Создать Аренду',\n          },\n        },\n        beforeEnter: [validationOwnership.requiresAccess('rents', 'create')],\n        component: () => import(/* webpackChunkName: 'Renting' */ '../components/pages/RentsEdit.vue'),\n      },\n      {\n        path: ':_id/edit',\n        name: nameWithPrefix('Edit Rent'),\n        meta: {\n          title: {\n            en: 'Edit Rent',\n            ru: 'Редактировать Аренду',\n          },\n        },\n        beforeEnter: [validationOwnership.requiresAccess('rents', 'edit')],\n        component: () => import(/* webpackChunkName: 'Renting' */ '../components/pages/RentsEdit.vue'),\n      },\n    ],\n  };\n\n  return routes;\n}\n",
                "name": "rents.router.js",
                "size": 1585,
                "type": "source"
              }
            ]
          },
          "store": {
            "_files": [
              {
                "path": "../../src/modules/rents/views/store/rents.store.js",
                "relativePath": "modules/rents/views/store/rents.store.js",
                "extension": ".js",
                "content": "// Vue modules\nimport { reactive } from 'vue';\n// Setup Axios\nimport $axios from '@martyrs/src/modules/globals/views/utils/axios-instance.js';\n// Globals\nimport { setError } from '@martyrs/src/modules/globals/views/store/globals.js';\n\n/**\n * Реактивное состояние для модуля аренды.\n */\nconst state = reactive({\n  all: [],\n  filter: {\n    productIds: [],\n    startDate: null,\n    endDate: null,\n  },\n  pagination: {\n    page: 1,\n    perPage: 10,\n  },\n  sort: {\n    current: 'startDate',\n    ascending: true,\n  },\n  current: {\n    product: null,\n    startDate: null,\n    endDate: null,\n    status: 'active',\n  },\n});\n\nconst mutations = {\n  set(property, data) {\n    state[property] = data;\n  },\n  clean() {\n    state.current = {\n      product: null,\n      startDate: null,\n      endDate: null,\n      status: 'active',\n    };\n  },\n};\n\nconst actions = {\n  async read(options = {}) {\n    try {\n      const response = await $axios.get('/api/rents', { params: options });\n\n      if (options._id) {\n        mutations.set('current', response.data);\n      } else {\n        mutations.set('all', response.data);\n      }\n      return response.data;\n    } catch (err) {\n      console.error('Ошибка при чтении аренд:', err);\n      setError(err);\n      throw err;\n    }\n  },\n\n  async create(rentData) {\n    if (!rentData.product || !rentData.startDate || !rentData.endDate) {\n      const error = new Error('Отсутствуют обязательные поля');\n      setError(error);\n      throw error;\n    }\n    try {\n      const response = await $axios.post('/api/rents', rentData);\n      mutations.set('current', response.data);\n      return response.data;\n    } catch (error) {\n      console.error('Ошибка при создании аренды:', error);\n      setError(error);\n      throw error;\n    }\n  },\n\n  async update(rentData) {\n    if (!rentData._id) {\n      const error = new Error('Отсутствует ID для обновления аренды');\n      setError(error);\n      throw error;\n    }\n    try {\n      const response = await $axios.post('/api/rents/update', rentData);\n      mutations.set('current', response.data);\n      return response.data;\n    } catch (error) {\n      console.error('Ошибка при обновлении аренды:', error);\n      setError(error);\n      throw error;\n    }\n  },\n\n  async delete(_id) {\n    if (!_id) {\n      const error = new Error('Отсутствует ID для удаления аренды');\n      setError(error);\n      throw error;\n    }\n    try {\n      const response = await $axios.post('/api/rents/delete', { _id });\n      const index = state.all.findIndex(r => r._id === _id);\n      if (index !== -1) {\n        state.all.splice(index, 1);\n      }\n      return response.data;\n    } catch (error) {\n      console.error('Ошибка при удалении аренды:', error);\n      setError(error);\n      throw error;\n    }\n  },\n\n  async loadAvailability(params) {\n    if (!params.productId) {\n      const error = new Error('Product ID is required');\n      setError(error);\n      throw error;\n    }\n\n    try {\n      const response = await $axios.get('/api/rents/availability', { params });\n      return response.data;\n    } catch (error) {\n      console.error('Error loading availability data:', error);\n      setError(error);\n      throw error;\n    }\n  },\n};\n\nasync function loadAvailability(params) {\n  if (!params.productId) {\n    const error = new Error('Product ID is required');\n    setError(error);\n    throw error;\n  }\n\n  try {\n    const response = await $axios.get('/api/rents/availability', { params });\n    return response.data;\n  } catch (error) {\n    console.error('Error loading availability data:', error);\n    setError(error);\n    throw error;\n  }\n}\n\nexport { actions, loadAvailability, mutations, state };\n",
                "name": "rents.store.js",
                "size": 3648,
                "type": "source"
              }
            ]
          },
          "components": {
            "blocks": {
              "_files": [
                {
                  "path": "../../src/modules/rents/views/components/blocks/CardRent.vue",
                  "relativePath": "modules/rents/views/components/blocks/CardRent.vue",
                  "extension": ".vue",
                  "content": "<template>\n  <div class=\"order-card\">\n    <div class=\"order-status flex-v-center flex-nojustify flex\">\n      <span>{{ rent.status }}</span>\n      <span class=\"mn-l-auto\">{{ totalDays }} days</span>\n    </div>\n    <div class=\"pd-small\">\n      <p><strong>Start:</strong> {{ formatDate(rent.startDate) }}</p>\n      <p><strong>End:</strong> {{ formatDate(rent.endDate) }}</p>\n      <p v-if=\"rent.comment\"><strong>Comment:</strong> {{ rent.comment }}</p>\n      <button \n        @click=\"$router.push({ name: 'Edit Rent', params: { _id: rent._id } })\"\n        class=\"bg-main t-white button mn-t-small\"\n      >\n        Edit\n      </button>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed } from 'vue';\n\nconst props = defineProps({\n  rent: { type: Object, required: true },\n});\n\nconst totalDays = computed(() => {\n  const start = new Date(props.rent.startDate);\n  const end = new Date(props.rent.endDate);\n  const diffTime = Math.abs(end - start);\n  return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n});\n\n\n\nfunction formatDate(date) {\n  return new Date(date).toLocaleDateString();\n}\n</script>\n\n<style lang=\"scss\">\n.order-card {\n  border-radius: 0.25rem;\n  overflow: hidden;\n  box-shadow: 0 8px 8px -8px rgb(36 36 36 / 10%);\n  .order-status {\n    color: black;\n    background: #EEF2F6;\n    width: 100%;\n    padding: 0.75rem 1.5rem;\n    margin: 0;\n  }\n}\n</style>",
                  "name": "CardRent.vue",
                  "size": 1371,
                  "type": "source"
                }
              ]
            },
            "pages": {
              "_files": [
                {
                  "path": "../../src/modules/rents/views/components/pages/GanttChart.vue",
                  "relativePath": "modules/rents/views/components/pages/GanttChart.vue",
                  "extension": ".vue",
                  "content": "<template>\n  <div class=\"gantt-chart-container\">\n     \n\n    <div class=\"flex-nowrap  w-100 flex bg-light pd-small radius-small mn-b-small\">\n      <div class=\"flex w-100 gap-thin flex-v-center flex-nowrap\">\n        <Tab\n          :tabs=\"viewOptions\"\n          @tab-click=\"switchView($event.tab.value)\"\n          class=\"mn-r-auto h-100 flex-child-default o-hidden p-small pd-nano radius-small bg-white\"\n          tabClass=\" pd-thin radius-thin\"\n        />\n\n        <button @click=\"navigatePrevious\" class=\"h-100 bg-white aspect-1x1 pd-x-small radius-small bg-light mn-r-x-small\">\n          <IconChevronLeft class=\"i-small\"/>\n        </button>\n        \n        <div class=\"month-year-selector flex-v-center\">\n\n         <!--  <Select \n            v-model:select=\"currentMonth\"\n            :options=\"months\"\n            class=\"pos-relative w-100 bg-white radius-small pd-thin \"\n          /> -->\n          <select v-model=\"currentMonth\" style=\"border: 0\" class=\"pd-thin h-100 t-black radius-small bg-white mn-r-micro\">\n            <option v-for=\"(month, index) in months\" :key=\"index\" :value=\"index\">\n              {{ month }}\n            </option>\n          </select>\n\n           <Select \n            v-model:select=\"currentYear\"\n            :options=\"yearOptions\"\n            class=\"pos-relative w-100 bg-white radius-small pd-thin \"\n          />\n        </div>\n        \n        <button @click=\"navigateNext\" class=\"h-100 bg-white aspect-1x1 pd-x-small radius-small bg-light mn-r-x-small\">\n          <IconChevronRight class=\"i-small\"/>\n        </button>\n        \n        <button @click=\"goToToday\" class=\"h-100 pd-r-small p-small pd-l-small radius-small bg-second t-white mn-l-small\">\n          Today\n        </button>\n      </div>\n    </div>\n\n    <!-- Gantt Chart View -->\n    <div \n      class=\"gantt-chart scroller o-scroll\nscroll-snap-type-x-mandatory  scroll-pd-regular  bg-white radius-small\" \n      ref=\"ganttContainer\"\n      @scroll=\"handleScroll\"\n    >\n      <!-- Header with dates -->\n      <div class=\"gantt-header\">\n        <div class=\"gantt-header-row\">\n          <div class=\"gantt-header-item product-column z-index-2\">Product</div>\n          <div class=\"gantt-timeline-header bg-white br-b br-solid br-black-transp\" ref=\"timelineHeader\">\n            <!-- Hours view -->\n            <template v-if=\"currentView === 'hours'\">\n              <div \n                v-for=\"(hour, index) in visibleHours\" \n                :key=\"`hour-${index}`\"\n                class=\"gantt-header-cell\"\n                :class=\"{ \n                  'is-current-hour': isCurrentHour(hour.date, hour.hour),\n                  'is-today': isToday(hour.date)\n                }\"\n              >\n                <div class=\"date-label\">\n                  <div v-if=\"hour.hour === 0 || index === 0\" class=\"day-month-label\">\n                    {{ formatShortDate(hour.date) }}\n                  </div>\n                  <div class=\"hour-number\">{{ formatHour(hour.hour) }}</div>\n                </div>\n              </div>\n            </template>\n            \n            <!-- Days view -->\n            <template v-else-if=\"currentView === 'days'\">\n              <div \n                v-for=\"(date, index) in visibleDates\" \n                :key=\"`day-${index}`\"\n                class=\"gantt-header-cell\"\n                :class=\"{ \n                  'is-weekend': isWeekend(date),\n                  'is-today': isToday(date),\n                  'is-month-start': date.getDate() === 1\n                }\"\n              >\n                <div class=\"date-label\">\n                  <div v-if=\"date.getDate() === 1 || index === 0\" class=\"month-label\">\n                    {{ formatMonth(date) }}\n                  </div>\n                  <div class=\"day-number\">{{ date.getDate() }}</div>\n                  <div class=\"day-name\">{{ formatDay(date) }}</div>\n                </div>\n              </div>\n            </template>\n            \n            <!-- Weeks view -->\n            <template v-else-if=\"currentView === 'weeks'\">\n              <div \n                v-for=\"(week, index) in visibleWeeks\" \n                :key=\"`week-${index}`\"\n                class=\"gantt-header-cell gantt-week-cell\"\n                :class=\"{ \n                  'is-current-week': isCurrentWeek(week.start),\n                  'is-month-start': week.start.getDate() <= 7 && week.start.getDay() === 0\n                }\"\n              >\n                <div class=\"date-label\">\n                  <div v-if=\"week.isMonthStart || index === 0\" class=\"month-label\">\n                    {{ formatMonth(week.start) }}\n                  </div>\n                  <div class=\"week-range\">\n                    {{ formatDateRange(week.start, week.end) }}\n                  </div>\n                  <div class=\"week-number\">W{{ getWeekNumber(week.start) }}</div>\n                </div>\n              </div>\n            </template>\n          </div>\n        </div>\n      </div>\n\n      <!-- Body with products and rentals -->\n      <div class=\"gantt-body\">\n  <div \n    v-for=\"(group, index) in groupedItems\" \n    :key=\"group.title\" \n    class=\"gantt-row\"\n    :class=\"{ 'is-even': index % 2 === 0 }\"\n  >\n    <div class=\"gantt-row-item product-column z-index-2\">\n      <div class=\"product-title\">{{ group.title }}</div>\n      <div class=\"product-status\" :class=\"getStatusClass(group)\">\n        {{ group.status }}\n      </div>\n    </div>\n    \n    <div class=\"gantt-timeline-row\">\n      <!-- Hours cells -->\n      <template v-if=\"currentView === 'hours'\">\n        <div \n          v-for=\"(hour, hourIndex) in visibleHours\" \n          :key=\"`hour-cell-${hourIndex}`\"\n          class=\"gantt-cell\"\n          :class=\"{ \n            'is-current-hour': isCurrentHour(hour.date, hour.hour),\n            'is-today': isToday(hour.date) \n          }\"\n        ></div>\n      </template>\n      \n      <!-- Days cells -->\n      <template v-else-if=\"currentView === 'days'\">\n        <div \n          v-for=\"(date, dateIndex) in visibleDates\" \n          :key=\"`day-cell-${dateIndex}`\"\n          class=\"gantt-cell\"\n          :class=\"{ \n            'is-weekend': isWeekend(date),\n            'is-today': isToday(date) \n          }\"\n        ></div>\n      </template>\n      \n      <!-- Weeks cells -->\n      <template v-else-if=\"currentView === 'weeks'\">\n        <div \n          v-for=\"(week, weekIndex) in visibleWeeks\" \n          :key=\"`week-cell-${weekIndex}`\"\n          class=\"gantt-cell gantt-week-cell\"\n          :class=\"{ \n            'is-current-week': isCurrentWeek(week.start)\n          }\"\n        ></div>\n      </template>\n      \n      <div \n        v-for=\"bar in getItemBars(group)\"\n        :key=\"`${group.title}-${bar.start}-${bar.item[idKey]}`\"\n        class=\"gantt-bar\"\n        :class=\"getBarStatusClass(bar.item)\"\n        :style=\"{\n          left: `${bar.left}px`,\n          width: `${bar.width}px`,\n          top: `${bar.rowIndex * rowHeight.value}px`,\n          zIndex: 10 - bar.rowIndex // Ensure bars in front rows appear above those in back rows\n        }\"\n        @click=\"$emit('item-click', bar.item)\"\n      >\n        <div class=\"gantt-bar-label\">{{ getItemTitle(bar.item) }}</div>\n      </div>\n    </div>\n  </div>\n</div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, watch, nextTick } from 'vue';\n\nimport Tab from '@martyrs/src/components/Tab/Tab.vue';\nimport Select from \"@martyrs/src/components/Select/Select.vue\";\n\n\nimport IconChevronRight from '@martyrs/src/modules/icons/navigation/IconChevronRight.vue';\nimport IconChevronLeft from '@martyrs/src/modules/icons/navigation/IconChevronLeft.vue';\n\nconst props = defineProps({\n  items: {\n    type: Array,\n    required: true\n  },\n  startDate: {\n    type: Date,\n    required: true\n  },\n  endDate: {\n    type: Date,\n    required: true\n  },\n  startDateKey: {\n    type: String,\n    default: 'startDate'\n  },\n  endDateKey: {\n    type: String,\n    default: 'endDate'\n  },\n  titleKey: {\n    type: String,\n    default: 'title'\n  },\n  statusKey: {\n    type: String,\n    default: 'status'\n  },\n  idKey: {\n    type: String,\n    default: 'id'\n  }\n});\n\nconst emit = defineEmits(['load-more', 'item-click']);\n\n// References\nconst ganttContainer = ref(null);\nconst timelineHeader = ref(null);\n\n// State\nconst months = [\n  'January', 'February', 'March', 'April', 'May', 'June', \n  'July', 'August', 'September', 'October', 'November', 'December'\n];\n\nconst weekdays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\nconst viewOptions = [\n  { name: 'Hours',label: 'Hours', value: 'hours' },\n  { name: 'Days',label: 'Days', value: 'days' },\n  { name: 'Weeks',label: 'Weeks', value: 'weeks' }\n];\n\nconst currentView = ref('days');\nconst displayStartDate = ref(new Date(props.startDate));\nconst displayEndDate = ref(new Date(props.endDate));\nconst currentMonth = ref(months[new Date().getMonth()]);\nconst currentYear = ref(new Date().getFullYear());\nconst cellWidth = ref(60); \n\n// Calculate years to display in the dropdown (current year ±5 years)\nconst currentYearValue = new Date().getFullYear();\nconst yearOptions = computed(() => {\n  const years = [];\n  for (let i = currentYearValue - 5; i <= currentYearValue + 5; i++) {\n    years.push(i);\n  }\n  return years;\n});\n\n// Calculate visible dates based on current view (for days view)\nconst visibleDates = computed(() => {\n  const dates = [];\n  const start = new Date(displayStartDate.value);\n  const end = new Date(displayEndDate.value);\n  \n  // For days view\n  for (let current = new Date(start); current <= end; current.setDate(current.getDate() + 1)) {\n    dates.push(new Date(current));\n  }\n  \n  return dates;\n});\n\n// Calculate visible hours for hours view\nconst visibleHours = computed(() => {\n  const hours = [];\n  const start = new Date(displayStartDate.value);\n  const end = new Date(displayEndDate.value);\n  \n  // Set hours to cover a full day (24 hours per day)\n  for (let current = new Date(start); current <= end;) {\n    for (let hour = 0; hour < 24; hour += 2) { // Show every 2 hours to fit more on screen\n      hours.push({\n        date: new Date(current),\n        hour: hour\n      });\n    }\n    current.setDate(current.getDate() + 1);\n  }\n  \n  return hours;\n});\n\n// Calculate visible weeks for weeks view\nconst visibleWeeks = computed(() => {\n  const weeks = [];\n  const start = new Date(displayStartDate.value);\n  const end = new Date(displayEndDate.value);\n  \n  // Start from the beginning of the week\n  const weekStart = new Date(start);\n  weekStart.setDate(start.getDate() - start.getDay()); // Move to Sunday\n  \n  for (let current = new Date(weekStart); current <= end;) {\n    const weekEnd = new Date(current);\n    weekEnd.setDate(current.getDate() + 6); // Saturday\n    \n    weeks.push({\n      start: new Date(current),\n      end: new Date(weekEnd),\n      isMonthStart: current.getDate() <= 7 && current.getDay() === 0\n    });\n    \n    current.setDate(current.getDate() + 7); // Move to next week\n  }\n  \n  return weeks;\n});\n\n// Function to switch between views\nconst switchView = (viewType) => {\n  currentView.value = viewType;\n  \n  // Adjust date range based on the view\n  updateDateRangeForView();\n  \n  // Reset scrolling\n  nextTick(() => {\n    if (ganttContainer.value) {\n      ganttContainer.value.scrollLeft = 0;\n    }\n  });\n};\n\n// Update date range based on selected view\nconst isInitialLoad = ref(true);\nconst updateDateRangeForView = () => {\n  // If it's the initial load and we have props, use those values instead\n  if (isInitialLoad.value) {\n    isInitialLoad.value = false;\n    // Keep the props dates, don't modify them\n    return;\n  }\n\n  const currentDate = new Date(currentYear.value, currentMonth.value, 1);\n  \n  switch (currentView.value) {\n    case 'hours':\n      // For hours, show 3 days centered on the selected date\n      displayStartDate.value = new Date(currentDate);\n      displayEndDate.value = new Date(currentDate);\n      displayEndDate.value.setDate(displayStartDate.value.getDate() + 2);\n      cellWidth.value = 30; // Narrower cells for hours\n      break;\n      \n    case 'days':\n      // For days, show the whole month plus some padding\n      displayStartDate.value = new Date(currentDate);\n      displayEndDate.value = new Date(currentDate);\n      displayEndDate.value.setMonth(displayEndDate.value.getMonth() + 1);\n      displayEndDate.value.setDate(0); // Last day of the month\n      cellWidth.value = 60; // Default cell width for days\n      break;\n      \n    case 'weeks':\n      // For weeks, show around 8 weeks\n      displayStartDate.value = new Date(currentDate);\n      // Move to the start of the first week of the month\n      displayStartDate.value.setDate(1);\n      displayStartDate.value.setDate(displayStartDate.value.getDate() - displayStartDate.value.getDay());\n      \n      displayEndDate.value = new Date(displayStartDate.value);\n      displayEndDate.value.setDate(displayStartDate.value.getDate() + 7 * 8); // 8 weeks\n      cellWidth.value = 140; // Wider cells for weeks\n      break;\n  }\n};\n\n// Watch for changes in month/year to update displayed dates\nwatch([currentMonth, currentYear], () => {\n  updateDateRangeForView();\n});\n\n// Watch for changes in view to adjust the cell width and date range\nwatch(currentView, () => {\n  updateDateRangeForView();\n});\n\n// Navigation functions\n// Добавляем переменные для отслеживания состояния загрузки\n\n\nconst navigatePrevious = () => {\n  switch (currentView.value) {\n    case 'hours':\n      // Navigate back 3 days in hours view\n      displayStartDate.value.setDate(displayStartDate.value.getDate() - 3);\n      displayEndDate.value.setDate(displayEndDate.value.getDate() - 3);\n      updateMonthYearFromDates();\n      break;\n      \n    case 'days':\n      // Navigate back 1 month in days view\n      if (currentMonth.value === 0) {\n        currentMonth.value = 11;\n        currentYear.value--;\n      } else {\n        currentMonth.value--;\n      }\n      break;\n      \n    case 'weeks':\n      // Navigate back 4 weeks in weeks view\n      displayStartDate.value.setDate(displayStartDate.value.getDate() - 28);\n      displayEndDate.value.setDate(displayEndDate.value.getDate() - 28);\n      updateMonthYearFromDates();\n      break;\n  }\n};\n\nconst navigateNext = () => {\n  switch (currentView.value) {\n    case 'hours':\n      // Navigate forward 3 days in hours view\n      displayStartDate.value.setDate(displayStartDate.value.getDate() + 3);\n      displayEndDate.value.setDate(displayEndDate.value.getDate() + 3);\n      updateMonthYearFromDates();\n      break;\n      \n    case 'days':\n      // Navigate forward 1 month in days view\n      if (currentMonth.value === 11) {\n        currentMonth.value = 0;\n        currentYear.value++;\n      } else {\n        currentMonth.value++;\n      }\n      break;\n      \n    case 'weeks':\n      // Navigate forward 4 weeks in weeks view\n      displayStartDate.value.setDate(displayStartDate.value.getDate() + 28);\n      displayEndDate.value.setDate(displayEndDate.value.getDate() + 28);\n      updateMonthYearFromDates();\n      break;\n  }\n};\nconst goToToday = () => {\n  const today = new Date();\n  currentMonth.value = today.getMonth();\n  currentYear.value = today.getFullYear();\n  \n  // Ensure the view updates to show today\n  nextTick(() => {\n    // Center the view on today\n    if (ganttContainer.value) {\n      centerViewOnDate(today);\n    }\n  });\n};\n\nconst centerViewOnDate = (date) => {\n  if (!ganttContainer.value) return;\n  \n  setTimeout(() => {\n    let scrollPos = 0;\n    const clientWidth = ganttContainer.value.clientWidth;\n    \n    if (currentView.value === 'hours') {\n      // For hours view, find the hour that corresponds to the current time\n      const hourIndex = visibleHours.value.findIndex(h => \n        h.date.getDate() === date.getDate() && \n        h.date.getMonth() === date.getMonth() && \n        h.date.getFullYear() === date.getFullYear() &&\n        h.hour === Math.floor(date.getHours() / 2) * 2 // Round to nearest 2-hour slot\n      );\n      \n      if (hourIndex >= 0) {\n        scrollPos = hourIndex * cellWidth.value - clientWidth / 2;\n      }\n    } else if (currentView.value === 'days') {\n      // For days view, find the index of today\n      const dayIndex = visibleDates.value.findIndex(d => \n        d.getDate() === date.getDate() && \n        d.getMonth() === date.getMonth() && \n        d.getFullYear() === date.getFullYear()\n      );\n      \n      if (dayIndex >= 0) {\n        scrollPos = dayIndex * cellWidth.value - clientWidth / 2;\n      }\n    } else if (currentView.value === 'weeks') {\n      // For weeks view, find the index of the week containing today\n      const weekIndex = visibleWeeks.value.findIndex(w => {\n        const weekStart = new Date(w.start);\n        const weekEnd = new Date(w.end);\n        return date >= weekStart && date <= weekEnd;\n      });\n      \n      if (weekIndex >= 0) {\n        scrollPos = weekIndex * cellWidth.value - clientWidth / 2;\n      }\n    }\n    \n    ganttContainer.value.scrollLeft = Math.max(0, scrollPos);\n  }, 100);\n};\n\nconst updateMonthYearFromDates = () => {\n  // Update month/year based on middle date of current view\n  const middleDate = new Date(displayStartDate.value);\n  \n  if (currentView.value === 'weeks') {\n    middleDate.setDate(middleDate.getDate() + 14);\n  } else if (currentView.value === 'hours') {\n    middleDate.setDate(middleDate.getDate() + 1);\n  }\n  \n  currentMonth.value = middleDate.getMonth();\n  currentYear.value = middleDate.getFullYear();\n};\n\n// Date formatting utilities\nconst formatMonth = (date) => {\n  return months[date.getMonth()].substring(0, 3) + ' ' + date.getFullYear();\n};\n\nconst formatDay = (date) => {\n  return weekdays[date.getDay()];\n};\n\nconst formatHour = (hour) => {\n  return `${hour}:00`;\n};\n\nconst formatShortDate = (date) => {\n  return `${date.getDate()}/${date.getMonth() + 1}`;\n};\n\nconst formatDateRange = (start, end) => {\n  return `${start.getDate()}-${end.getDate()}`;\n};\n\nconst getWeekNumber = (date) => {\n  const firstDayOfYear = new Date(date.getFullYear(), 0, 1);\n  const pastDaysOfYear = (date - firstDayOfYear) / 86400000;\n  return Math.ceil((pastDaysOfYear + firstDayOfYear.getDay() + 1) / 7);\n};\n\n// Date checks\nconst isWeekend = (date) => {\n  const day = date.getDay();\n  return day === 0 || day === 6;\n};\n\nconst isToday = (date) => {\n  const today = new Date();\n  return date.getDate() === today.getDate() && \n         date.getMonth() === today.getMonth() && \n         date.getFullYear() === today.getFullYear();\n};\n\nconst isCurrentHour = (date, hour) => {\n  const now = new Date();\n  return isToday(date) && now.getHours() === hour;\n};\n\nconst isCurrentWeek = (weekStart) => {\n  const today = new Date();\n  const weekEnd = new Date(weekStart);\n  weekEnd.setDate(weekStart.getDate() + 6);\n  \n  return today >= weekStart && today <= weekEnd;\n};\n\n// Item data retrieval\nconst getItemTitle = (item) => {\n  // If using the product field from your data\n  if (item.productDetails && item.productDetails.name) {\n    return item.productDetails.name;\n  }\n  \n  // Fallback to the standard title property\n  return item[props.titleKey] || 'Unnamed Item';\n};\n\nconst getStatusClass = (item) => {\n  // If it's a group object\n  if (item.status) {\n    return `status-${item.status.toLowerCase()}`;\n  }\n  \n  // If it's an individual item\n  const status = item[props.statusKey] || 'default';\n  return `status-${status.toLowerCase()}`;\n};\n\nconst getBarStatusClass = (item) => {\n  const status = item[props.statusKey] || 'default';\n  return `gantt-bar-${status.toLowerCase()}`;\n};\n\n// Calculate bar positions for each item\n// Add this computed property to group items by product name\nconst groupedItems = computed(() => {\n  const groups = {};\n  \n  props.items.forEach(item => {\n    const title = getItemTitle(item);\n    if (!groups[title]) {\n      groups[title] = {\n        title,\n        items: [],\n        status: item[props.statusKey] || 'default' // Use the status from the first item with this title\n      };\n    }\n    groups[title].items.push(item);\n  });\n  \n  return Object.values(groups);\n});\n\nconst organizeBarsIntoRows = (bars) => {\n  if (!bars.length) return [];\n  \n  // Sort bars by start date\n  bars.sort((a, b) => a.start - b.start);\n  \n  const rows = [];\n  \n  // Place each bar in the first row where it doesn't overlap\n  bars.forEach(bar => {\n    let rowIndex = 0;\n    let placed = false;\n    \n    while (!placed) {\n      if (!rows[rowIndex]) {\n        rows[rowIndex] = [];\n        rows[rowIndex].push({...bar, rowIndex});\n        placed = true;\n      } else {\n        // Check if this bar overlaps with any bar in this row\n        const overlaps = rows[rowIndex].some(existingBar => {\n          return (\n            (bar.start <= existingBar.end && bar.end >= existingBar.start)\n          );\n        });\n        \n        if (!overlaps) {\n          rows[rowIndex].push({...bar, rowIndex});\n          placed = true;\n        } else {\n          rowIndex++;\n        }\n      }\n    }\n  });\n  \n  // Flatten the rows into a single array\n  return rows.flat();\n};\n\n// Replace the current getItemBars function with this updated version\nconst getItemBars = (groupData) => {\n  const bars = [];\n  \n  // Process all items in the group\n  groupData.items.forEach(item => {\n    const startDateStr = item[props.startDateKey];\n    const endDateStr = item[props.endDateKey];\n    \n    if (!startDateStr || !endDateStr) return;\n    \n    // Parse dates (handle both ISO strings and Date objects)\n    let startDate = startDateStr instanceof Date ? new Date(startDateStr) : new Date(startDateStr);\n    let endDate = endDateStr instanceof Date ? new Date(endDateStr) : new Date(endDateStr);\n    \n    // Check if dates are valid\n    if (isNaN(startDate.getTime()) || isNaN(endDate.getTime())) return;\n    \n    // Fix dates if endDate is before startDate\n    if (endDate < startDate) {\n      [startDate, endDate] = [endDate, startDate];\n    }\n    \n    // Check if item is within visible range\n    if (endDate < displayStartDate.value || startDate > displayEndDate.value) return;\n    \n    let left, width;\n    \n    // Calculate position and width based on the current view\n    if (currentView.value === 'hours') {\n      const hourMilliseconds = 60 * 60 * 1000;\n      const firstVisibleDate = new Date(visibleHours.value[0].date);\n      firstVisibleDate.setHours(visibleHours.value[0].hour, 0, 0, 0);\n      \n      // Clamp dates to visible range\n      const visibleStartDate = startDate < displayStartDate.value ? displayStartDate.value : startDate;\n      const visibleEndDate = endDate > displayEndDate.value ? displayEndDate.value : endDate;\n      \n      // Calculate hours difference (for 2-hour slots)\n      const startHoursDiff = Math.max(0, (visibleStartDate - firstVisibleDate) / hourMilliseconds) / 2;\n      const endHoursDiff = Math.max(0, (visibleEndDate - firstVisibleDate) / hourMilliseconds) / 2;\n      \n      left = startHoursDiff * cellWidth.value;\n      width = Math.max((endHoursDiff - startHoursDiff) * cellWidth.value, cellWidth.value);\n    } \n    else if (currentView.value === 'days') {\n      const dayMilliseconds = 24 * 60 * 60 * 1000;\n      const firstVisibleDate = new Date(visibleDates.value[0]);\n      firstVisibleDate.setHours(0, 0, 0, 0);\n      \n      // Clamp dates to visible range\n      const visibleStartDate = startDate < displayStartDate.value ? displayStartDate.value : startDate;\n      const visibleEndDate = endDate > displayEndDate.value ? displayEndDate.value : endDate;\n      \n      const startDaysDiff = Math.max(0, Math.floor((visibleStartDate - firstVisibleDate) / dayMilliseconds));\n      const endDaysDiff = Math.max(0, Math.floor((visibleEndDate - firstVisibleDate) / dayMilliseconds));\n      \n      left = startDaysDiff * cellWidth.value;\n      width = Math.max((endDaysDiff - startDaysDiff + 1) * cellWidth.value, cellWidth.value);\n    }\n    else if (currentView.value === 'weeks') {\n      const dayMilliseconds = 24 * 60 * 60 * 1000;\n      const firstVisibleWeekStart = new Date(visibleWeeks.value[0].start);\n      \n      // Clamp dates to visible range\n      const visibleStartDate = startDate < displayStartDate.value ? displayStartDate.value : startDate;\n      const visibleEndDate = endDate > displayEndDate.value ? displayEndDate.value : endDate;\n      \n      // Calculate week index\n      const startWeekIndex = Math.floor((visibleStartDate - firstVisibleWeekStart) / (7 * dayMilliseconds));\n      const endWeekIndex = Math.floor((visibleEndDate - firstVisibleWeekStart) / (7 * dayMilliseconds));\n      \n      left = startWeekIndex * cellWidth.value;\n      width = Math.max((endWeekIndex - startWeekIndex + 1) * cellWidth.value, cellWidth.value);\n    }\n    \n    bars.push({\n      item,\n      start: startDate,\n      end: endDate,\n      left,\n      width\n    });\n  });\n  \n  // Organize bars into rows to prevent overlapping\n  return organizeBarsIntoRows(bars);\n};\n\n// Add a new CSS variable for the height of each bar\nconst rowHeight = ref(22); // Height in pixels for each bar\n\n// Scroll handling for infinite loading\nlet isLoadingLeft = false;\nlet isLoadingRight = false;\nlet scrollThrottle = null;\n\nconst handleScroll = () => {\n  if (!ganttContainer.value) return;\n  \n  // Отменяем предыдущий отложенный вызов, если он есть\n  if (scrollThrottle) {\n    clearTimeout(scrollThrottle);\n  }\n  \n  // Используем throttle для ограничения частоты вызовов\n  scrollThrottle = setTimeout(() => {\n    const container = ganttContainer.value;\n    const scrollLeft = container.scrollLeft;\n    const scrollWidth = container.scrollWidth;\n    const clientWidth = container.clientWidth;\n    \n    // Sync timeline header with body scroll\n    if (timelineHeader.value) {\n      // timelineHeader.value.style.transform = `translateX(-${scrollLeft}px)`;\n    }\n    \n    // Load more data when scrolling near the edges\n    if (scrollLeft < 10 && !isLoadingLeft) {\n      // Near left edge, load earlier dates\n      isLoadingLeft = true;\n      \n      let newStartDate;\n      \n      if (currentView.value === 'hours') {\n        newStartDate = new Date(displayStartDate.value);\n        newStartDate.setDate(newStartDate.getDate() - 3);\n      } else if (currentView.value === 'days') {\n        newStartDate = new Date(displayStartDate.value);\n        newStartDate.setMonth(newStartDate.getMonth() - 1);\n      } else if (currentView.value === 'weeks') {\n        newStartDate = new Date(displayStartDate.value);\n        newStartDate.setDate(newStartDate.getDate() - 28);\n      }\n      \n      // navigatePrevious();\n      emit('load-more', { direction: 'backward', date: newStartDate });\n      \n      // Сбросить флаг загрузки после задержки\n      setTimeout(() => {\n        isLoadingLeft = false;\n      }, 500); // Предотвращаем повторную загрузку в течение 500 мс\n      \n    } else if (scrollWidth - (scrollLeft + clientWidth) < 10 && !isLoadingRight) {\n      // Near right edge, load later dates\n      isLoadingRight = true;\n      \n      let newEndDate;\n      \n      if (currentView.value === 'hours') {\n        newEndDate = new Date(displayEndDate.value);\n        newEndDate.setDate(newEndDate.getDate() + 3);\n      } else if (currentView.value === 'days') {\n        newEndDate = new Date(displayEndDate.value);\n        newEndDate.setMonth(newEndDate.getMonth() + 1);\n      } else if (currentView.value === 'weeks') {\n        newEndDate = new Date(displayEndDate.value);\n        newEndDate.setDate(newEndDate.getDate() + 28);\n      }\n      \n      // navigateNext();\n      emit('load-more', { direction: 'forward', date: newEndDate });\n      \n      // Сбросить флаг загрузки после задержки\n      setTimeout(() => {\n        isLoadingRight = false;\n      }, 500); // Предотвращаем повторную загрузку в течение 500 мс\n    }\n  }, 100); // Задержка в 100 мс перед обработкой скролла\n};\n\n// Initialize component\nonMounted(() => {\n  // Set initial view\n  switchView('days');\n  \n  // Center timeline on current month\n  goToToday();\n  \n  // Set initial scroll position to today\n  nextTick(() => {\n    if (ganttContainer.value) {\n      const today = new Date();\n      centerViewOnDate(today);\n    }\n  });\n});\n</script>\n\n<style scoped>\n.gantt-chart-container {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  font-size: 14px;\n}\n\n\n.gantt-chart {\n  position: relative;\n  height: 500px;\n  overflow: auto;\n  border: 1px solid #eee;\n}\n\n.gantt-header {\n  position: sticky;\n  top: 0;\n  z-index: 2;\n/*  background-color: #f8f9fa;*/\n/*  box-shadow: 0 2px 4px rgba(0,0,0,0.05);*/\n}\n\n.gantt-header-row {\n  display: flex;\n  position: relative;\n}\n\n.gantt-timeline-header {\n  display: flex;\n  position: sticky;\n  left: 200px;\n}\n\n.product-column {\n  width: 200px;\n  min-width: 200px;\n  position: sticky;\n  left: 0;\n/*  z-index: 1;*/\n  background-color: #f8f9fa;\n  border-right: 1px solid #eee;\n  padding: 8px;\n}\n\n.gantt-header-cell {\n  min-width: var(--cell-width, 60px);\n  width: var(--cell-width, 60px);\n  border-right: 1px solid #eee;\n  text-align: center;\n  padding: 8px 4px;\n  overflow: hidden;\n}\n\n.gantt-header-cell.is-weekend {\n  background-color: #f1f3f5;\n}\n\n.gantt-header-cell.is-today {\n  background-color: #e3f2fd;\n}\n\n.gantt-header-cell.is-month-start {\n  border-left: 2px solid #adb5bd;\n}\n\n.date-label {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.month-label {\n  font-weight: bold;\n  font-size: 12px;\n  width: 100%;\n}\n\n.day-number {\n  font-weight: bold;\n  font-size: 16px;\n}\n\n.day-name {\n  font-size: 12px;\n  color: #6c757d;\n}\n\n.gantt-body {\n  position: relative;\n}\n\n.gantt-row {\n  display: flex;\n  border-bottom: 1px solid #eee;\n}\n\n\n\n.gantt-row.is-even .gantt-timeline-row {\n   background-color: #f8f9fa;\n}\n\n.gantt-row-item {\n  padding: 8px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n\n.product-title {\n  font-weight: bold;\n  margin-bottom: 4px;\n  text-wrap-mode: nowrap;\n  width: 100%;\n  overflow: hidden;\n}\n\n.product-status {\n  font-size: 12px;\n  padding: 2px 6px;\n  border-radius: 4px;\n  display: inline-block;\n}\n\n.status-active {\n  background-color: #d1e7dd;\n  color: #0f5132;\n}\n\n.status-completed {\n  background-color: #cff4fc;\n  color: #055160;\n}\n\n.status-canceled {\n  background-color: #f8d7da;\n  color: #842029;\n}\n\n.status-default {\n  background-color: #e2e3e5;\n  color: #41464b;\n}\n\n.gantt-timeline-row {\n  display: flex;\n  position: relative;\n  height: 60px;\n  flex-grow: 1;\n}\n\n.gantt-cell {\n  min-width: var(--cell-width, 60px);\n  width: var(--cell-width, 60px);\n  border-right: 1px solid #eee;\n  height: 100%;\n}\n\n.gantt-cell.is-weekend {\n  background-color: #f1f3f5;\n}\n\n.gantt-cell.is-today {\n  background-color: #e3f2fd;\n}\n\n.gantt-bar {\n  position: absolute;\n  height: 40px;\n  top: 10px;\n  border-radius: 4px;\n  background-color: #4dabf7;\n  color: white;\n  cursor: pointer;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  padding: 4px 8px;\n  box-shadow: 0 2px 5px rgba(0,0,0,0.1);\n  transition: box-shadow 0.2s, transform 0.1s;\n}\n\n.gantt-bar:hover {\n  box-shadow: 0 4px 8px rgba(0,0,0,0.15);\n  transform: translateY(-2px);\n}\n\n.gantt-bar-active {\n  background-color: #4dabf7;\n}\n\n.gantt-bar-completed {\n  background-color: #20c997;\n}\n\n.gantt-bar-canceled {\n  background-color: #fa5252;\n  text-decoration: line-through;\n}\n\n.gantt-bar-label {\n  font-size: 12px;\n  font-weight: bold;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.view-controls button, \n.date-controls button,\n.date-controls select {\n  border: 1px solid #dee2e6;\n  background-color: white;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.view-controls button:hover, \n.date-controls button:hover,\n.date-controls select:hover {\n  background-color: #e9ecef;\n}\n\n.flex-v-center {\n  display: flex;\n  align-items: center;\n}\n\n/* Set cell width based on current view */\n:root {\n  --cell-width: v-bind('cellWidth.value + \"px\"');\n}\n</style>",
                  "name": "GanttChart.vue",
                  "size": 31656,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/rents/views/components/pages/Rents.vue",
                  "relativePath": "modules/rents/views/components/pages/Rents.vue",
                  "extension": ".vue",
                  "content": "<template>\n  <div class=\"pd-medium mobile:pd-thin bg-white\">\n    <header class=\"mn-b-medium flex-v-center flex-nowrap flex\">\n      <h2 class=\"mn-r-medium\">Rents</h2>\n      <button \n        @click=\"$router.push({ name: 'Organization_Create Rent', params: {_id: route.params._id}})\" \n        class=\"radius-100 i-big hover-scale-1 cursor-pointer t-white bg-second\"\n      >\n        +\n      </button>\n      <div class=\"mn-l-auto flex-v-center\">\n        <button \n          @click=\"toggleView\" \n          class=\"pd-small radius-small bg-light mn-r-small\"\n        >\n          {{ isCalendarView ? 'List View' : 'Calendar View' }}\n        </button>\n      </div>\n    </header>\n\n    <Tab\n      v-model:selected=\"tab\"\n      :tabs=\"[\n        { name: 'All', value: 'all' },\n        { name: 'Active', value: 'active' },\n        { name: 'Completed', value: 'completed' },\n        { name: 'Canceled', value: 'canceled' }\n      ]\"\n      class=\"mn-b-small o-hidden h5 radius-big bg-light\"\n    />\n\n    <Feed\n      :search=\"true\"\n      :states=\"{\n        empty: {\n          title: 'No Rents Found',\n          description: 'Currently, there are no rents available.'\n        }\n      }\"\n      :store=\"{ read: (options) => rents.actions.read(options) }\"\n      :options=\"{\n        limit: 15,\n        owner: route.params._id,\n        ...(tab !== 'all' && { status: tab })\n      }\"\n      v-slot=\"{ items }\"\n    >\n      <GanttChart\n        :items=\"items\"\n        :startDate=\"calendarStartDate\"\n        :endDate=\"calendarEndDate\"\n        startDateKey=\"startDate\"\n        endDateKey=\"endDate\"\n        titleKey=\"title\"\n        statusKey=\"status\"\n        idKey=\"_id\"\n        class=\"mn-b-small\"\n        @item-click=\"viewRentDetails\"\n        @load-more=\"loadMoreData\"\n      >\n      </GanttChart>\n\n     <!--  <CardRent\n        v-else\n        v-for=\"rent in items\"\n        :key=\"rent._id\"\n        :rent=\"rent\"\n        class=\"bg-light pd-small mn-b-thin radius-small\"\n      /> -->\n    </Feed>\n  </div>\n</template>\n\n<script setup>\nimport Tab from '@martyrs/src/components/Tab/Tab.vue';\nimport Feed from '@martyrs/src/components/Feed/Feed.vue';\n\nimport CardRent from '@martyrs/src/modules/rents/views/components/blocks/CardRent.vue';\nimport GanttChart from '@martyrs/src/modules/rents/views/components/pages/GanttChart.vue';\n\nimport { computed, onMounted, ref, watch } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\n\nimport * as rents from '@martyrs/src/modules/rents/views/store/rents.store';\n\nconst route = useRoute();\nconst router = useRouter();\n\nconst tab = ref(route?.query ? route.query.tab : 'all');\nconst isCalendarView = ref(true);\n\n// Set initial date range - current month plus 15 days before and 45 days after\nconst today = new Date();\nconst calendarStartDate = ref(new Date(today));\ncalendarStartDate.value.setDate(today.getDate() - 30);\n\nconst calendarEndDate = ref(new Date(today));\ncalendarEndDate.value.setDate(today.getDate() + 30);\n\n// Toggle between calendar and list view\nconst toggleView = () => {\n  isCalendarView.value = !isCalendarView.value;\n};\n\n// Navigate to rent details page\nconst viewRentDetails = (rent) => {\n  router.push({ name: 'Rent Details', params: { _id: rent._id } });\n};\n\n// Load more data when scrolling the Gantt chart\nconst loadMoreData = async ({ direction, date }) => {\n  // alert(direction)\n  console.log('scroll direction is', direction)\n  console.log('current date is', date)\n  // Update the visible range\n  if (direction === 'forward') {\n    calendarEndDate.value = date;\n  } else {\n    calendarStartDate.value = date;\n  }\n  // Here you can add logic to fetch more rents if they fall within the new date range\n  try {\n    // You might need to adjust this depending on your API and data structure\n    const startDateParam = new Date(calendarStartDate.value);\n    startDateParam.setDate(startDateParam.getDate() - 30); // Fetch a bit more to cover edge cases\n    \n    const endDateParam = new Date(calendarEndDate.value);\n    endDateParam.setDate(endDateParam.getDate() + 30);\n    \n    await rents.actions.read({\n      owner: route.params._id,\n      startDate: startDateParam.toISOString(),\n      endDate: endDateParam.toISOString(),\n      ...(tab.value !== 'all' && { status: tab.value })\n    });\n  } catch (error) {\n    console.error('Error loading additional rent data:', error);\n  }\n};\n</script>\n\n<style lang=\"scss\">\n</style>",
                  "name": "Rents.vue",
                  "size": 4351,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/rents/views/components/pages/RentsEdit.vue",
                  "relativePath": "modules/rents/views/components/pages/RentsEdit.vue",
                  "extension": ".vue",
                  "content": "<template>\n  <div class=\"pd-thin\">\n    <header class=\"mn-b-medium gap-small flex-v-center flex-nowrap flex\">\n      <h2>{{ route.params._id ? 'Edit' : 'Add' }} Rent</h2>\n    </header>\n\n    <Popup \n      title=\"Add Product to Rent\" \n      @close-popup=\"closeProductsPopup\" \n      :isPopupOpen=\"isOpenProductsPopup\"\n      class=\"bg-white w-min-30r w-max-30r radius-big pd-medium\"\n    >\n      <div class=\"bg-light mn-b-thin h-min-20r h-max-20r o-scroll pd-medium radius-big\">\n        <Feed\n          :search=\"true\"\n          :states=\"{ empty: { title: 'No Products Found', description: 'No products available for rent.' } }\"\n          :store=\"{ read: (options) => products.actions.read(options) }\"\n          :options=\"{ organization: route.params._id, listing: 'rent' }\"\n          v-slot=\"{ items }\"\n        >\n          <CardOrderItem\n            v-for=\"product in items\" \n            :key=\"product._id\"\n            :editable=\"false\" \n            :product=\"product\" \n            @click=\"addProduct(product)\"\n            class=\"bg-white pd-thin radius-medium w-100 mn-b-thin\"\n          />\n        </Feed>\n      </div>\n    </Popup>\n\n    <Block title=\"Rent Period\" class=\"mn-b-semi\">\n      <div class=\"flex gap-small\">\n        <Field v-model:field=\"rents.state.current.startDate\" label=\"Start Date\" type=\"date\" class=\"w-100 bg-white radius-small pd-medium\" />\n        <Field v-model:field=\"rents.state.current.endDate\" label=\"End Date\" type=\"date\" class=\"w-100 bg-white radius-small pd-medium\" />\n      </div>\n    </Block>\n\n    <Block\n      title=\"Rented Products\"\n      :actions=\"[{ label: '+', function: openProductsPopup }]\"\n      placeholder=\"No products added yet\"\n      class=\"mn-b-semi\"\n    >\n      <CardOrderItem\n        v-if=\"rents.state.current.product\"\n        :key=\"rents.state.current.product\" \n        :product=\"rents.state.current.product\"\n        :editable=\"false\" \n        @click=\"() => rents.state.current.product = null\"\n        class=\"mn-b-small radius-medium bg-white pd-small\"\n      />\n    </Block>\n\n    <Block title=\"Comment\" class=\"mn-b-semi\">\n      <Field v-model:field=\"rents.state.current.comment\" label=\"Comment\" type=\"textarea\" class=\"w-100 bg-white radius-small pd-medium\" />  \n    </Block>\n\n    <Block>\n      <section class=\"gap-thin flex-v-center flex-nojustify flex\">\n        <h3 class=\"mn-r-auto\">Total Days: {{ totalDays }}</h3>\n        <a @click=\"onSubmit\" class=\"bg-main button\">Save</a> \n        <a @click=\"onReset\" class=\"t-white bg-second button\">Reset</a>\n        <a v-if=\"route.params._id\" @click=\"onDelete\" class=\"t-white bg-red button\">Delete</a>\n      </section>\n    </Block>\n  </div>\n</template>\n\n<script setup>\nimport Block from '@martyrs/src/components/Block/Block.vue';\nimport Field from '@martyrs/src/components/Field/Field.vue';\nimport Feed from '@martyrs/src/components/Feed/Feed.vue';\nimport Popup from '@martyrs/src/components/Popup/Popup.vue';\nimport CardPosition from '@martyrs/src/modules/products/components/blocks/CardPosition.vue';\nimport CardOrderItem from '@martyrs/src/modules/orders/components/blocks/CardOrderItem.vue';\n\nimport { computed, onMounted, ref } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport * as auth from '@martyrs/src/modules/auth/views/store/auth.js';\nimport * as rents from '@martyrs/src/modules/rents/views/store/rents.store';\nimport * as products from '@martyrs/src/modules/products/store/products.js';\n\nconst route = useRoute();\nconst router = useRouter();\n\nconst Products = ref(products.state.all);\nconst isOpenProductsPopup = ref(false);\n\nconst totalDays = computed(() => {\n  const start = new Date(rents.state.current.startDate);\n  const end = new Date(rents.state.current.endDate);\n  if (!start || !end) return 0;\n  const diffTime = Math.abs(end - start);\n  return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n});\n\nfunction openProductsPopup() { isOpenProductsPopup.value = true; }\nfunction closeProductsPopup() { isOpenProductsPopup.value = false; }\n\nfunction addProduct(product) {\n  rents.state.current.product = product\n  closeProductsPopup();\n}\n\nfunction updateItem(index, updatedItem) {\n  rents.state.current.items[index] = { product: updatedItem.product._id || updatedItem.product, quantity: updatedItem.quantity || 1 };\n}\n\nfunction deleteItem(index) {\n  try {\n    rents.state.current.items.splice(index, 1);\n  } catch (error) {\n    console.error('Ошибка при удалении элемента:', error);\n  }\n}\n\nonMounted(async () => {\n  try {\n    if (route.params.rent) {\n      await rents.actions.read({ _id: route.params.rent });\n    } else {\n      rents.mutations.clean();\n    }\n\n    await products.actions.read({ organization: route.params._id, listing: 'rent', limit: 100 });\n    Products.value = products.state.all;\n  } catch (error) {\n    console.error('Ошибка при загрузке данных:', error);\n  }\n});\n\nasync function onSubmit() {\n  try {\n    if (route.params.rent) {\n      let newProduct = rents.state.current\n      newProduct.product = rents.state.current.product._id\n      newProduct.startDate = new Date(rents.state.current.startDate);\n      newProduct.endDate = new Date(rents.state.current.endDate);\n      await rents.actions.update(newProduct);\n    } else {\n      rents.state.current.creator = { type: 'user', target: auth.state.user._id };\n      rents.state.current.owner = { type: 'organization', target: route.params._id };\n      rents.state.current.owner = { type: 'organization', target: route.params._id };\n      let newProduct = rents.state.current\n      newProduct.product = rents.state.current.product._id\n      newProduct.startDate = new Date(rents.state.current.startDate);\n      newProduct.endDate = new Date(rents.state.current.endDate);\n      await rents.actions.create(newProduct);\n    }\n    // router.push({ name: 'Rents', params: { _id: route.params._id } });\n  } catch (error) {\n    console.error('Ошибка при отправке данных:', error);\n  }\n}\n\nasync function onReset() {\n  try {\n    if (route.params._id) {\n      await rents.actions.read({ _id: route.params._id });\n    } else {\n      rents.mutations.clean();\n    }\n  } catch (error) {\n    console.error('Ошибка при сбросе данных:', error);\n  }\n}\n\nasync function onDelete() {\n  try {\n    await rents.actions.delete(route.params._id);\n    router.push({ name: 'Rents', params: { _id: route.params._id } });\n  } catch (error) {\n    console.error('Ошибка при удалении:', error);\n  }\n}\n\n</script>\n\n<style lang=\"scss\">\n.round-stat {\n  padding: 1rem;\n  border-radius: 5rem;\n  width: 3rem;\n  height: 3rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid rgba(0,0,0,0.1);\n}\n</style>",
                  "name": "RentsEdit.vue",
                  "size": 6585,
                  "type": "source"
                }
              ]
            }
          }
        }
      },
      "reports": {
        "controllers": {
          "_files": [
            {
              "path": "../../src/modules/reports/controllers/reports.controller.js",
              "relativePath": "modules/reports/controllers/reports.controller.js",
              "extension": ".js",
              "content": "const controllerFactory = db => {\n  const Report = db.report;\n  const read = async (req, res) => {\n    try {\n      const reports = await Report.find({});\n      if (reports.length === 0) {\n        return res.status(404).json({ errorCode: 'REPORTS_NOT_FOUND' });\n      }\n      res.status(200).json(reports);\n    } catch (err) {\n      res.status(500).json({ errorCode: 'INTERNAL_SERVER_ERROR', message: err.message });\n    }\n  };\n  const create = async (req, res) => {\n    const newReport = new Report(req.body);\n    try {\n      const savedReport = await newReport.save();\n      res.status(201).json(savedReport);\n    } catch (err) {\n      console.log(err);\n      res.status(500).json({ errorCode: 'INTERNAL_SERVER_ERROR', message: err.message });\n    }\n  };\n  const update = async (req, res) => {\n    const { _id } = req.body;\n    try {\n      const updatedReport = await Report.findOneAndUpdate({ _id }, req.body, {\n        new: true,\n        runValidators: true,\n      });\n      if (!updatedReport) {\n        return res.status(404).json({ errorCode: 'REPORT_NOT_FOUND' });\n      }\n      res.status(200).json(updatedReport);\n    } catch (err) {\n      res.status(500).json({ errorCode: 'INTERNAL_SERVER_ERROR', message: err.message });\n    }\n  };\n  const deleteReport = async (req, res) => {\n    const { _id } = req.body;\n    try {\n      const report = await Report.findOneAndDelete({ _id });\n      if (!report) {\n        return res.status(404).json({ errorCode: 'REPORT_NOT_FOUND' });\n      }\n      res.status(200).json({ message: 'Report deleted successfully.' });\n    } catch (err) {\n      res.status(500).json({ errorCode: 'INTERNAL_SERVER_ERROR', message: err.message });\n    }\n  };\n  return {\n    read,\n    create,\n    update,\n    delete: deleteReport,\n  };\n};\nexport default controllerFactory;\n",
              "name": "reports.controller.js",
              "size": 1798,
              "type": "source"
            }
          ]
        },
        "models": {
          "_files": [
            {
              "path": "../../src/modules/reports/models/report.model.js",
              "relativePath": "modules/reports/models/report.model.js",
              "extension": ".js",
              "content": "export default db => {\n  const ReportSchema = new db.mongoose.Schema(\n    {\n      status: {\n        type: String,\n        enum: ['new', 'in progress', 'canceled', 'closed'],\n        default: 'new',\n      },\n      user: {\n        type: String,\n        default: 'anonymous',\n        required: true,\n      },\n      type: {\n        type: String,\n        enum: ['user', 'organization', 'blogpost', 'event', 'comment'],\n        default: 'spam',\n        required: true,\n      },\n      reason: {\n        type: String,\n        enum: ['spam', 'harassment', 'inappropriate', 'misinformation', 'copyright', 'other'],\n        default: 'spam',\n        required: true,\n      },\n      target: {\n        type: db.mongoose.Schema.Types.ObjectId,\n        ref: function (value) {\n          if (this.type === 'user') return 'User';\n          if (this.type === 'organization') return 'Organization';\n        },\n        required: true,\n      },\n    },\n    {\n      timestamps: { currentTime: () => Date.now() },\n    }\n  );\n  const Report = db.mongoose.model('Report', ReportSchema);\n  return Report;\n};\n",
              "name": "report.model.js",
              "size": 1079,
              "type": "source"
            }
          ]
        },
        "_files": [
          {
            "path": "../../src/modules/reports/reports.client.js",
            "relativePath": "modules/reports/reports.client.js",
            "extension": ".js",
            "content": "// Store\nimport * as storeReports from './store/reports.js';\n\n// Router\n// import { createReportsRoutes } from './router/reports.js';\n\n// Views\n// Предполагаем, что у нас есть компонент для отображения отчетов\n// import ReportPage from './components/pages/ReportPage.vue';\n\n// Пример функции инициализации для модуля отчетов\nfunction initializeReports(app, store, router, options = {}) {\n  const route = options.route || 'Home';\n\n  // const routesReports = createReportsRoutes();\n\n  // router.addRoute(route, routesReports);\n\n  store.addStore('reports', storeReports);\n}\n\nconst ModuleReports = {\n  initialize: initializeReports,\n  views: {\n    store: {\n      storeReports,\n    },\n    router: {\n      // createReportsRoutes\n    },\n    components: {\n      // Pages\n      // ReportPage\n    },\n  },\n};\n\nexport default ModuleReports;\n",
            "name": "reports.client.js",
            "size": 829,
            "type": "source"
          },
          {
            "path": "../../src/modules/reports/reports.server.js",
            "relativePath": "modules/reports/reports.server.js",
            "extension": ".js",
            "content": "import ReportsController from './controllers/reports.controller.js';\nimport ReportModel from './models/report.model.js';\nimport reportsRoutes from './routes/reports.routes.js';\nfunction initializeReports(app, db, origins, publicPath) {\n  // Настраиваем модели в объекте базы данных\n  db.report = ReportModel(db);\n  // Настраиваем маршруты, если объект приложения передан\n  if (app) {\n    reportsRoutes(app, db, origins, publicPath);\n  }\n}\nexport const models = {\n  ReportModel,\n};\nexport const routes = {\n  reportsRoutes,\n};\nexport const controllers = {\n  ReportsController,\n};\nexport { initializeReports as initialize };\nexport default {\n  initialize: initializeReports,\n  models,\n  routes,\n  controllers,\n};\n",
            "name": "reports.server.js",
            "size": 710,
            "type": "source"
          }
        ],
        "routes": {
          "_files": [
            {
              "path": "../../src/modules/reports/routes/reports.routes.js",
              "relativePath": "modules/reports/routes/reports.routes.js",
              "extension": ".js",
              "content": "import controllerFactory from '../controllers/reports.controller.js';\nexport default (function (app, db, origins) {\n  const controller = controllerFactory(db);\n  // const { authJwt } = middlewareFactoryGlobal(db);\n  app.get('/reports', controller.read);\n  app.post('/reports', controller.create);\n  app.post('/reports', controller.update);\n  app.post('/reports', controller.delete);\n});\n",
              "name": "reports.routes.js",
              "size": 387,
              "type": "source"
            }
          ]
        },
        "store": {
          "_files": [
            {
              "path": "../../src/modules/reports/store/reports.js",
              "relativePath": "modules/reports/store/reports.js",
              "extension": ".js",
              "content": "import { setError } from '@martyrs/src/modules/globals/views/store/globals.js';\nimport axios from 'axios';\nimport { reactive, watch } from 'vue';\n\nconst $axios = axios.create({ baseURL: process.env.API_URL });\n\nconst state = reactive({\n  all: [],\n  current: {\n    _id: '',\n    status: '',\n    user: '',\n    type: '',\n    reason: '',\n    target: '',\n  },\n  form: {\n    isOpen: false,\n    status: '',\n    user: '',\n    type: '',\n    reason: '',\n    target: '',\n  },\n});\n\n// Действия, относящиеся к асинхронным операциям\nconst actions = {\n  async read() {\n    try {\n      const response = await $axios.get(`/reports`);\n      mutations.setAll(response.data);\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n  async create(report) {\n    try {\n      console.log(report);\n      const response = await $axios.post('/reports', report);\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n\n  async update(report) {\n    try {\n      const response = await $axios.put('/reports/' + report._id, report);\n      mutations.updateReportInAll(response.data);\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n\n  async remove(report) {\n    try {\n      const response = await $axios.delete('/reports/' + report._id);\n      mutations.removeReportFromAll(report._id);\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n};\n\nconst mutations = {\n  setAll(reports) {\n    state.all = reports;\n  },\n\n  setCurrent(report) {\n    state.current = report;\n  },\n\n  updateReportInAll(updatedReport) {\n    const index = state.all.findIndex(r => r._id === updatedReport._id);\n    if (index !== -1) {\n      state.all[index] = updatedReport;\n    }\n  },\n\n  removeReportFromAll(reportId) {\n    const index = state.all.findIndex(r => r._id === reportId);\n    if (index !== -1) {\n      state.all.splice(index, 1);\n    }\n  },\n\n  toggleForm() {\n    state.form.isOpen = !state.form.isOpen;\n    state.form = {\n      status: '',\n      user: '',\n      type: '',\n      reason: '',\n      target: '',\n    };\n  },\n};\n\nconst history = [];\n\nhistory.push(state);\n\nwatch(state, (newState, oldState) => {\n  history.push(newState);\n});\n\nexport { actions, mutations, state };\n",
              "name": "reports.js",
              "size": 2326,
              "type": "source"
            }
          ]
        },
        "components": {
          "pages": {
            "_files": [
              {
                "path": "../../src/modules/reports/components/pages/BackofficeReports.vue",
                "relativePath": "modules/reports/components/pages/BackofficeReports.vue",
                "extension": ".vue",
                "content": "<template>\n  <div>\n    <div class=\"flex-v-center flex-nowrap flex mn-b-medium\">\n      <h3 class=\"mn-r-medium\">Reports</h3> <!-- Updated this line -->\n    </div>\n\n    <div class=\"cols-3 mobile:cols-1 gap-thin\">\n      <div \n        v-for=\"report in state.all\"\n        :key=\"report._id\"\n        class=\"radius-medium pd-small bg-light\"\n      >\n        <!-- Here, you should update the properties of the report object to reflect the actual structure of a report -->\n        <!-- For example, I'm using 'user', 'type', and 'reason'. You should replace them with actual report properties -->\n\n        <p class=\"t-black p-small mn-b-small\">\n          <span class=\"uppercase t-transp\">User</span>\n          <br> \n          <span class=\"pd-2px radius-big d-inline-block bg-light t-semi\">{{report.user}}</span> <!-- Updated this line -->\n        </p>\n\n        <p class=\"t-black p-small mn-b-small\">\n          <span class=\"uppercase t-transp\">Type</span>\n          <br> \n          <span class=\"pd-2px radius-big d-inline-block bg-light t-semi\">{{report.type}}</span> <!-- Updated this line -->\n        </p>\n\n        <p class=\"t-black p-small mn-b-small\">\n          <span class=\"uppercase t-transp\">Reason</span>\n          <br> \n          <span class=\"pd-2px radius-big d-inline-block bg-light t-semi\">{{report.reason}}</span> <!-- Updated this line -->\n        </p>\n\n        <div class=\"gap-thin flex-nowrap flex\">\n          <!-- Update buttons and actions as needed -->\n          <button class=\"button-small w-100 bg-black t-white button\">\n            Close Report\n          </button>\n          <button class=\"button-small w-100 bg-black t-white button\">\n            Hide Content\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\nimport { actions as reportActions, state } from '../../store/reports'; // Update the import path\n\n// You might want to handle other lifecycle hooks or methods depending on your needs.\n// Here, I'll demonstrate using the 'deleteReport' method as an example.\n\nconst deleteReport = async (id) => {\n  try {\n    await reportActions.remove({ _id: id });  // Updated method name and parameter\n    // Optionally, add a notification about successful deletion here\n  } catch (error) {\n    console.error(error);\n    // Optionally, add a notification about the error here\n  }\n};\n\n// Fetch all reports on component mount. This part depends on how your store is structured.\nreportActions.read();  // Updated method name\n</script>\n",
                "name": "BackofficeReports.vue",
                "size": 2508,
                "type": "source"
              }
            ]
          },
          "sections": {
            "_files": [
              {
                "path": "../../src/modules/reports/components/sections/FormReport.vue",
                "relativePath": "modules/reports/components/sections/FormReport.vue",
                "extension": ".vue",
                "content": "<template>\n\n\t<div \n\t\t@click.native=\"openReportPopup()\"\n\t>\n\t\t<slot></slot>\n\n\t\t<Popup \n\t\t  @close-popup=\"closeReportPopup\" \n\t\t  :isPopupOpen=\"isReportPopup\"\n\t\t  class=\"w-m-33r t-left pd-big bg-white radius-big\"\n\t\t>\n\t\t    <h3 \n\t\t    \tclass=\"mn-b-small\"\n\t\t    >\n\t\t\t\tReport Content\n\t\t\t</h3>\n\t\t    \n\t\t    <p \n\t\t    \tclass=\"p-medium mn-b-small\"\n\t\t    >\n\t\t    \tWe strive to maintain a safe and comfortable environment for all users. If you encounter content that you believe violates our guidelines, please report it:\n\t\t    </p>\n\t\t    <Select \n\t\t\t\tv-model:select=\"form.reason\" \n\t\t        :options=\"[\n\t\t        \t'harassment',\n\t\t        \t'spam',\n\t\t        \t'inappropriate',\n\t\t        \t'misinformation',\n\t\t        \t'copyright',\n\t\t        \t'other'\n\t\t        ]\"\n\t\t        :placeholder=\"'Select reason'\"\n\t\t\t\tclass=\"mn-b-small bg-white br-solid br-black-transp br-1px uppercase pd-medium t-semi bg-white t-black radius-medium\"\n\t\t      />\n\t\t    \n\t\t    <p class=\"p-medium mn-b-small\">Our moderators will review your report within 24 hours and take action if it violates our policies.</p>\n\t\t    \n\t\t    <Button \n\t\t    \t:submit=\"onSubmit\" \n\t\t    \t:callback=\"closeReportPopup\" \n\t\t    \tclass=\"w-100 bg-black t-white\">\n\t\t    \tReport\n\t\t    </Button>\n\t\t</Popup>\n\t</div>\n</template>\n\n<script setup=\"props\">\n\t// Dependencies\n\timport { computed,ref,reactive } from 'vue'\n\t// Elements Import\n\timport Popup from '@martyrs/src/components/Popup/Popup.vue';\n\timport Button from '@martyrs/src/components/Button/Button.vue';\n\timport Select from '@martyrs/src/components/Select/Select.vue';\n\t// Store Import\n\timport * as reports from '@martyrs/src/modules/reports/store/reports.js'\n\t// ///////////////////////////////////////\n \t// Components Props\n \t// ///////////////////////////////////////\n \tconst props = defineProps({\n \t\tuser: {\n      type: String,\n      required: false\n    },\n    type: {\n      type: String,\n      required: false\n    },\n    reason: {\n      type: String,\n      required: false\n    },\n    target: {\n      type: String,\n      required: true\n    },\n\t  text: {\n\t\t\ttype: String,\n\t\t\tdefault: '!'\n\t\t},\n    status: {\n      type: String,\n      default: 'new'\n    }\n \t})\n \t// ///////////////////////////////////////\n \t// Form Logic\n \t// ///////////////////////////////////////\n \tconst form = reactive({\n\t\tuser: props.user,\n\t\ttype: props.type,\n\t\treason: props.reason, \n\t\ttarget: props.target,\n\t\tstatus: props.status,\n\t})\n\n\tfunction onSubmit () {\n\t    if (form.user === null) {\n\t    \tdelete form.user\n\t    }\n\t  \treports.actions.create(form)\n\t}\n \t// ///////////////////////////////////////\n\t// Popup logic\n\t// ///////////////////////////////////////\n\tconst isReportPopup = ref(false)\n\n\tfunction openReportPopup() {\n\t  isReportPopup.value = true;\n\t}\n\tfunction closeReportPopup() {\n\t  isReportPopup.value = false;\n\t}\n</script>",
                "name": "FormReport.vue",
                "size": 2798,
                "type": "source"
              }
            ]
          }
        }
      },
      "spots": {
        "controllers": {
          "queries": {
            "_files": [
              {
                "path": "../../src/modules/spots/controllers/queries/getIsOpenNowStage.js",
                "relativePath": "modules/spots/controllers/queries/getIsOpenNowStage.js",
                "extension": ".js",
                "content": "export default (function getIsOpenNowStage() {\n  const now = new Date();\n  const currentDay = now.getDay();\n  const currentTime = `${String(now.getHours()).padStart(2, '0')}:${String(now.getMinutes()).padStart(2, '0')}`;\n  return {\n    $addFields: {\n      isOpenNow: {\n        $let: {\n          vars: {\n            // Найдем особую дату на сегодня, если она есть\n            specialDay: {\n              $filter: {\n                input: { $ifNull: ['$worktime.special', []] },\n                as: 'special',\n                cond: {\n                  $eq: [{ $dateToString: { format: '%Y-%m-%d', date: '$$special.date' } }, { $dateToString: { format: '%Y-%m-%d', date: new Date() } }],\n                },\n              },\n            },\n          },\n          in: {\n            $cond: {\n              if: { $gt: [{ $size: '$$specialDay' }, 0] },\n              then: {\n                $let: {\n                  vars: { day: { $arrayElemAt: ['$$specialDay', 0] } },\n                  in: {\n                    $cond: {\n                      if: '$$day.isOpen',\n                      then: {\n                        $anyElementTrue: {\n                          $map: {\n                            input: { $ifNull: ['$$day.periods', []] },\n                            as: 'period',\n                            in: {\n                              $and: [{ $lte: ['$$period.open', currentTime] }, { $gt: ['$$period.close', currentTime] }],\n                            },\n                          },\n                        },\n                      },\n                      else: false,\n                    },\n                  },\n                },\n              },\n              else: {\n                $let: {\n                  vars: {\n                    regularDay: {\n                      $filter: {\n                        input: { $ifNull: ['$worktime.regular', []] },\n                        as: 'day',\n                        cond: { $eq: ['$$day.dayOfWeek', currentDay] },\n                      },\n                    },\n                  },\n                  in: {\n                    $cond: {\n                      if: { $gt: [{ $size: '$$regularDay' }, 0] },\n                      then: {\n                        $let: {\n                          vars: { day: { $arrayElemAt: ['$$regularDay', 0] } },\n                          in: {\n                            $cond: {\n                              if: '$$day.isOpen',\n                              then: {\n                                $anyElementTrue: {\n                                  $map: {\n                                    input: { $ifNull: ['$$day.periods', []] },\n                                    as: 'period',\n                                    in: {\n                                      $and: [{ $lte: ['$$period.open', currentTime] }, { $gt: ['$$period.close', currentTime] }],\n                                    },\n                                  },\n                                },\n                              },\n                              else: false,\n                            },\n                          },\n                        },\n                      },\n                      else: false,\n                    },\n                  },\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n});\n",
                "name": "getIsOpenNowStage.js",
                "size": 3338,
                "type": "source"
              }
            ]
          },
          "_files": [
            {
              "path": "../../src/modules/spots/controllers/spots.controller.js",
              "relativePath": "modules/spots/controllers/spots.controller.js",
              "extension": ".js",
              "content": "import queryProcessorGlobals from '@martyrs/src/modules/globals/controllers/utils/queryProcessor.js';\nimport getIsOpenNowStage from './queries/getIsOpenNowStage.js';\nconst controllerFactory = db => {\n  const Spot = db.spot;\n  const read = async (req, res) => {\n    let stages = [\n      ...queryProcessorGlobals.getBasicOptions(req.query),\n      getIsOpenNowStage(),\n      // Tags\n      ...queryProcessorGlobals.getTagsOptions(req.query.tags),\n      // For creator\n      queryProcessorGlobals.getCreatorUserLookupStage(),\n      queryProcessorGlobals.getCreatorOrganizationLookupStage(),\n      queryProcessorGlobals.getCreatorCustomerLookupStage(),\n      // For owner\n      queryProcessorGlobals.getOwnerUserLookupStage(),\n      queryProcessorGlobals.getOwnerOrganizationLookupStage(),\n      queryProcessorGlobals.getAddFieldsCreatorOwnerStage(),\n      queryProcessorGlobals.removeTempPropeties(),\n      // Pagination\n      ...queryProcessorGlobals.getSortingOptions(req.query.sortParam, req.query.sortOrder),\n      ...queryProcessorGlobals.getPaginationOptions(req.query.skip, req.query.limit),\n    ];\n    try {\n      const spots = await Spot.aggregate(stages);\n      if (!spots) {\n        return res.status(404).send({ errorCode: 'SPOTS_NOT_FOUND', message: 'Spots not found.' });\n      }\n      res.status(200).send(spots);\n    } catch (err) {\n      console.log(err);\n      res.status(500).send({\n        errorCode: 'GET_SPOTS_FAILED',\n        message: 'Error occurred while fetching spots.',\n        error: err,\n      });\n    }\n  };\n  const readOne = (req, res) => {\n    Spot.findOne({ _id: req.params._id })\n      .then(spot => {\n        if (!spot) {\n          return res.status(404).send({ message: 'Отдел не найден' });\n        }\n        res.send(spot);\n      })\n      .catch(err => {\n        res.status(500).send({ message: err.message });\n      });\n  };\n  const create = async (req, res) => {\n    try {\n      const newSpot = new Spot({\n        ...req.body,\n        organization: req.params._id,\n      });\n      const data = await newSpot.save();\n      res.send(data);\n    } catch (err) {\n      console.log(err);\n      res.status(500).send({ message: err.message });\n    }\n  };\n  const update = (req, res) => {\n    Spot.findOneAndUpdate({ _id: req.body._id }, req.body, { new: true })\n      .then(spot => {\n        if (!spot) {\n          return res.status(404).send({ message: 'Spot not found' });\n        }\n        res.send(spot);\n      })\n      .catch(err => {\n        res.status(500).send({ message: err.message });\n      });\n  };\n  const deleteSpot = (req, res) => {\n    Spot.findOneAndDelete({ _id: req.body._id, organization: req.params._id })\n      .then(spot => {\n        if (!spot) {\n          return res.status(404).send({ message: 'Spot not found' });\n        }\n        res.send({ message: 'Spot deleted successfully' });\n      })\n      .catch(err => {\n        res.status(500).send({ message: err.message });\n      });\n  };\n  return {\n    read,\n    readOne,\n    create,\n    update,\n    delete: deleteSpot,\n  };\n};\nexport default controllerFactory;\n",
              "name": "spots.controller.js",
              "size": 3064,
              "type": "source"
            }
          ]
        },
        "models": {
          "_files": [
            {
              "path": "../../src/modules/spots/models/spot.model.js",
              "relativePath": "modules/spots/models/spot.model.js",
              "extension": ".js",
              "content": "export default db => {\n  // Схема отдела\n  const spotSchema = new db.mongoose.Schema({\n    owner: {\n      type: db.mongoose.Schema.Types.ObjectId,\n      ref: 'User',\n    },\n    organization: {\n      type: db.mongoose.Schema.Types.ObjectId,\n      ref: 'Organization',\n    },\n    profile: {\n      photo: { type: String },\n      name: { type: String, required: true },\n      description: { type: String },\n      categories: [String],\n    },\n    minorder: { type: Number },\n    position: {\n      hide: { type: Boolean },\n    },\n    // Working hours\n    address: String,\n    // Position on map\n    location: {\n      type: {\n        type: String,\n        enum: ['Point'],\n        default: 'Point',\n        required: true,\n      },\n      coordinates: {\n        type: [Number],\n        required: true,\n      },\n    },\n    // Обновленная структура для часов работы\n    worktime: {\n      // Стандартные часы работы\n      regular: [\n        {\n          // 0 = воскресенье, 6 = суббота (соответствует JavaScript Date.getDay())\n          dayOfWeek: { type: Number, min: 0, max: 6, required: true },\n          isOpen: { type: Boolean, default: true },\n          periods: [\n            {\n              open: { type: String, required: true }, // формат \"HH:MM\" 24-часовой\n              close: { type: String, required: true }, // формат \"HH:MM\" 24-часовой\n            },\n          ],\n        },\n      ],\n      // Особые даты (праздники, особые события и т.д.)\n      special: [\n        {\n          date: { type: Date, required: true },\n          isOpen: { type: Boolean, default: false },\n          periods: [\n            {\n              open: { type: String }, // формат \"HH:MM\" 24-часовой\n              close: { type: String }, // формат \"HH:MM\" 24-часовой\n            },\n          ],\n          description: { type: String }, // описание особого дня (например, \"Новый год\")\n        },\n      ],\n    },\n    // Marketplace options\n    delivery: [String],\n    payment: [String],\n    members: [\n      {\n        user: {\n          type: db.mongoose.Schema.Types.ObjectId,\n          ref: 'User',\n        },\n        position: {\n          type: String,\n          default: 'Member',\n        },\n      },\n    ],\n    subspots: [\n      {\n        type: db.mongoose.Schema.Types.ObjectId,\n        ref: 'Spot',\n      },\n    ],\n  });\n  // Индексы\n  spotSchema.index({ organization: 1 });\n  spotSchema.index({ location: '2dsphere' });\n  // Виртуальное свойство для проверки открыт ли спот в данный момент\n  spotSchema.virtual('isOpenNow').get(function () {\n    const now = new Date();\n    const currentDay = now.getDay();\n    const currentTime = `${String(now.getHours()).padStart(2, '0')}:${String(now.getMinutes()).padStart(2, '0')}`;\n    // Проверка особых дат\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    const specialDay = this.worktime?.special?.find(special => special.date.getTime() === today.getTime());\n    if (specialDay) {\n      if (!specialDay.isOpen) return false;\n      return specialDay.periods.some(period => period.open <= currentTime && period.close > currentTime);\n    }\n    // Проверка обычных часов работы\n    const regularHours = this.worktime?.regular?.find(day => day.dayOfWeek === currentDay);\n    if (!regularHours || !regularHours.isOpen) return false;\n    return regularHours.periods.some(period => period.open <= currentTime && period.close > currentTime);\n  });\n  spotSchema.set('toJSON', { virtuals: true });\n  spotSchema.set('toObject', { virtuals: true });\n  const Spot = db.mongoose.model('Spot', spotSchema);\n  return Spot;\n};\n",
              "name": "spot.model.js",
              "size": 3565,
              "type": "source"
            }
          ]
        },
        "router": {
          "_files": [
            {
              "path": "../../src/modules/spots/router/spots.js",
              "relativePath": "modules/spots/router/spots.js",
              "extension": ".js",
              "content": "import layoutEmpty from '@martyrs/src/modules/globals/views/components/layouts/Empty.vue';\nimport layoutSpots from '../components/layouts/Spots.vue';\n\nimport * as validationAuth from '@martyrs/src/modules/auth/views/middlewares/auth.validation.js';\n\nconst spots = {\n  path: 'spots',\n  component: layoutEmpty,\n  meta: {\n    title: {\n      en: 'Spots',\n      ru: 'Места',\n    },\n    breadcrumbs: {\n      hide: true,\n      hidden: true,\n    },\n  },\n  children: [\n    {\n      path: ':country?',\n      component: layoutSpots,\n      meta: {\n        title: {\n          en: 'Spots',\n          ru: 'Места',\n        },\n        header_theme: 'dark',\n        footer_theme: 'dark',\n      },\n      children: [\n        {\n          path: ':state?',\n          name: 'Spots tate',\n          component: () => import(/* webpackChunkName: 'Deliveries' */ '../components/pages/Map.vue'),\n          children: [\n            {\n              path: ':city?',\n              name: 'Spots City',\n              component: () => import(/* webpackChunkName: 'Deliveries' */ '../components/pages/Map.vue'),\n            },\n          ],\n        },\n      ],\n    },\n    {\n      path: ':_id/spots/create',\n      name: 'Spot Creation',\n      meta: {\n        title: 'Создание точки',\n      },\n      beforeEnter: [validationAuth.requiresAuth],\n      component: () => import(/* webpackChunkName: \"spot\" */ '@martyrs/src/modules/spots/components/pages/SpotEdit.vue'),\n    },\n    {\n      path: ':_id/spots/:spot',\n      name: 'Spot',\n      meta: {\n        title: 'Точка',\n      },\n      beforeEnter: [validationAuth.requiresAuth],\n      component: () => import(/* webpackChunkName: \"spot\" */ '@martyrs/src/modules/spots/components/pages/Spot.vue'),\n    },\n    {\n      path: ':_id/spots/:spot/edit',\n      name: 'Spot Edit',\n      meta: {\n        title: 'Редактирование точки',\n      },\n      beforeEnter: [validationAuth.requiresAuth],\n      component: () => import(/* webpackChunkName: \"spot\" */ '@martyrs/src/modules/spots/components/pages/SpotEdit.vue'),\n    },\n  ],\n};\n\nexport default spots;\n",
              "name": "spots.js",
              "size": 2051,
              "type": "source"
            }
          ]
        },
        "routes": {
          "_files": [
            {
              "path": "../../src/modules/spots/routes/spots.routes.js",
              "relativePath": "modules/spots/routes/spots.routes.js",
              "extension": ".js",
              "content": "import controllerFactory from '../controllers/spots.controller.js';\nexport default (function (app, db) {\n  const controller = controllerFactory(db);\n  app.get('/api/spots', controller.read);\n  // Get spot by _id\n  app.get('/api/spots/get/:_id', controller.readOne);\n  // Add organization spot\n  app.post('/api/spots/:_id/create', controller.create);\n  // Update organization spot\n  app.post('/api/spots/:_id/update', controller.update);\n  // Delete organization spot\n  app.delete('/api/spots/:_id/delete', controller.delete);\n});\n",
              "name": "spots.routes.js",
              "size": 530,
              "type": "source"
            }
          ]
        },
        "_files": [
          {
            "path": "../../src/modules/spots/spots.client.js",
            "relativePath": "modules/spots/spots.client.js",
            "extension": ".js",
            "content": "// Store\nimport * as storeSpots from './store/spots.js';\n// Router\nimport routerSpots from './router/spots.js';\n// Views\nimport Spots from './components/layouts/Spots.vue';\nimport Map from './components/pages/Map.vue';\nimport Spot from './components/pages/Spot.vue';\nimport SpotEdit from './components/pages/SpotEdit.vue';\n// Importing blocks components\nimport CardSpot from './components/blocks/CardSpot.vue';\nimport SpotMemberModify from './components/blocks/SpotMemberModify.vue';\nimport SpotSub from './components/blocks/SpotSub.vue';\n\nfunction initializeSpots(app, store, router) {\n  router.addRoute('Home', routerSpots);\n  store.addStore('spots', storeSpots);\n}\n\nconst ModuleSpot = {\n  initialize: initializeSpots,\n  views: {\n    store: {\n      storeSpots,\n    },\n    router: {\n      routerSpots,\n    },\n    components: {\n      // Pages\n      Spots,\n      Spot,\n      SpotEdit,\n      Map,\n      // Blocks\n      CardSpot,\n      SpotMemberModify,\n      SpotSub,\n    },\n  },\n};\n\nexport default ModuleSpot;\n",
            "name": "spots.client.js",
            "size": 1009,
            "type": "source"
          },
          {
            "path": "../../src/modules/spots/spots.server.js",
            "relativePath": "modules/spots/spots.server.js",
            "extension": ".js",
            "content": "import FactorySpot from './controllers/spots.controller.js';\nimport ModelSpot from './models/spot.model.js';\nimport RoutesSpot from './routes/spots.routes.js';\nfunction initializeSpots(app, db, origins, publicPath) {\n  // Setup models in the database object\n  db.spot = ModelSpot(db);\n  // Setup routes if the app object is provided\n  if (app) {\n    RoutesSpot(app, db, origins, publicPath);\n  }\n}\nexport const models = {\n  ModelSpot,\n};\nexport const routes = {\n  RoutesSpot,\n};\nexport const controllers = {\n  FactorySpot,\n};\nexport { initializeSpots as initialize };\nexport default {\n  initialize: initializeSpots,\n  models,\n  routes,\n  controllers,\n};\n",
            "name": "spots.server.js",
            "size": 654,
            "type": "source"
          }
        ],
        "store": {
          "_files": [
            {
              "path": "../../src/modules/spots/store/spots.js",
              "relativePath": "modules/spots/store/spots.js",
              "extension": ".js",
              "content": "// Vue modules\nimport { reactive, watch } from 'vue';\n// Globals\nimport { setError } from '@martyrs/src/modules/globals/views/store/globals.js';\n// Setup Axios\nimport $axios from '@martyrs/src/modules/globals/views/utils/axios-instance.js';\n// State\nconst state = reactive({\n  spots: [],\n  spot: {\n    status: 'unpublished',\n    organization: '',\n\n    profile: {\n      photo: '',\n      name: '',\n      description: '',\n      categories: [],\n    },\n    position: {\n      address: undefined,\n      location: undefined,\n      hide: false,\n    },\n\n    address: undefined,\n    location: undefined,\n\n    worktime: {\n      regular: [],\n      special: [],\n    },\n    delivery: [],\n    payment: [],\n    members: [],\n    subspots: [],\n  },\n  error: null,\n});\n\n// Methods\nconst actions = {\n  async readOne(spotID) {\n    try {\n      const response = await $axios.get(`/api/spots/get/${spotID}`);\n\n      state.spot = response.data;\n    } catch (error) {\n      setError(error);\n    }\n  },\n  async read(options) {\n    try {\n      const response = await $axios.get(`/api/spots`, { params: options });\n      state.spots = response.data;\n      return response.data;\n    } catch (error) {\n      setError(error);\n    }\n  },\n\n  async create(organizationId, spot) {\n    try {\n      const response = await $axios.post(`/api/spots/${organizationId}/create`, spot);\n\n      state.spot = response.data;\n    } catch (error) {\n      setError(error);\n    }\n  },\n  async update(organizationId, spot) {\n    try {\n      await $axios.post(`/api/spots/${organizationId}/update`, spot);\n    } catch (error) {\n      setError(error);\n    }\n  },\n  async delete(organizationId, spotId) {\n    try {\n      await $axios.delete(`/api/spots/${organizationId}/delete`, { data: { _id: spotId } });\n    } catch (error) {\n      setError(error);\n    }\n  },\n};\n\n// History\nconst history = [];\nhistory.push(state);\n\n// Watch\nwatch(state, (newState, oldState) => {\n  history.push(newState);\n});\n\n// Module Export\nexport { actions, state };\n",
              "name": "spots.js",
              "size": 1987,
              "type": "source"
            }
          ]
        },
        "components": {
          "blocks": {
            "_files": [
              {
                "path": "../../src/modules/spots/components/blocks/CardSpot.vue",
                "relativePath": "modules/spots/components/blocks/CardSpot.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"pos-relative pd-small rows-1\">\n\n\n    <div class=\"w-100 flex-nowrap flex gap-thin\">\n      <div\n        class=\"aspect-1x1 h-100\"\n      >\n        <Map \n          :apiKey=\"GOOGLE_MAPS_API_KEY\" \n          :location=\"{\n            lat: spot.location.coordinates[1],\n            lng: spot.location.coordinates[0]\n          }\" \n          :locale=\"$i18n.locale\"\n          class=\"radius-small o-hidden\"\n       \n        />\n      </div>\n      <div>\n\n        <!-- Edit Button -->\n        <router-link\n          v-if=\"editAccess\"\n          :to=\"{\n          name: 'Spot Edit',\n          params: {\n            _id: props.organization._id || props.organization,\n            spot: spot._id\n          }\n        }\"\n          class=\"\n            z-index-2\n            cursor-pointer \n            pos-absolute pos-t-regular pos-r-regular\n            radius-extra pd-thin bg-second\n          \"\n        >\n          <IconEdit\n            class=\"i-regular\"\n            classes=\"fill-white\"\n          />\n        </router-link>\n\n        <IconCheckmark\n          v-if=\"selected\"\n          :fill=\"'rgb(var(--white))'\"\n          class=\"z-index-2 pos-absolute pos-t-regular pos-r-regular radius-extra bg-second pd-thin i-semi\"\n        />\n     \n        <p\n          class=\"mn-b-thin p-medium t-medium d-inline-block w-100\"\n          v-html=\"spot.profile.name\"\n        />\n        \n        <p v-if=\"spot.profile.description\" class=\"d-block p-big mn-b-thin\">\n          {{spot.profile.description}}\n        </p>\n\n        <div class=\"bg-light pd-thin radius-thin\">\n          <p class=\"text-box-trim-end  p-small w-100 t-truncate\">\n            {{spot.address}}\n          </p>\n        </div>\n\n        <p class=\"uppercase t-medium mn-t-small mn-b-thin\" v-if=\"showDeliveryOptions\">Delivery</p>\n        <Chips \n          v-if=\"showDeliveryOptions && spot.delivery.length > 0\" \n          :chips=\"spot.delivery\"\n        />\n\n        <p class=\"uppercase t-medium  mn-t-small mn-b-thin\"  v-if=\"showPaymentOptions\">Accepted Payment</p>\n        <Chips \n          v-if=\"showPaymentOptions && spot.payment.length > 0\" \n          :chips=\"spot.payment\"\n        />\n      </div>\n\n\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nimport IconEdit from '@martyrs/src/modules/icons/navigation/IconEdit.vue';\n\nimport IconCheckmark from '@martyrs/src/modules/icons/navigation/IconCheckmark.vue';\n\n\nimport Chips  from '@martyrs/src/components/Chips/Chips.vue';\nimport Map      from '@martyrs/src/components/Map/Map.vue';\n\nconst props = defineProps({\n  spot: Object,\n  organization: Object,\n  editAccess: Boolean,\n  showDeliveryOptions: Boolean,\n  showPaymentOptions: Boolean,\n  selected: Boolean\n});\n</script>\n<style scoped>\n.subspotsartment {\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  margin-top: 1rem;\n}\n</style>",
                "name": "CardSpot.vue",
                "size": 2805,
                "type": "source"
              },
              {
                "path": "../../src/modules/spots/components/blocks/SpotMemberModify.vue",
                "relativePath": "modules/spots/components/blocks/SpotMemberModify.vue",
                "extension": ".vue",
                "content": "<template>\n  <div>\n    <div class=\"br-grey-transp-25 radius-small mn-b-small\">\n      <VueSelect \n        v-if=\"props.spot === null\"\n        v-model=\"spotForm.subspot\"\n        :options=\"filteredSpots\"\n        :get-option-label='option => option.name' \n        class=\"w-100 mn-b-small\"\n      /> \n      <div v-else class=\"pd-small br-grey-transp-25 br-1px br-solid\">\n        {{ spotForm.name ? spotForm.name : 'Безымянный' }}\n      </div>\n    </div>\n\n    <button :disabled=\"!spotForm.subspot\" v-if=\"props.spot === null\" @click=\"submitForm\" class=\"w-100 button bg-second t-white\">\n      Добавить отдел\n    </button>\n\n    <button v-if=\"props.spot !== null\" @click=\"removeMember\" class=\"w-100 button bg-fourth t-white\">\n      Удалить отдел\n    </button> \n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from \"vue\";\n\nimport Field from \"@martyrs/src/components/Field/Field.vue\";\nimport Select from \"@martyrs/src/components/Select/Select.vue\";\nconst props = defineProps({\n  isPopupOpen: Boolean,\n  spot: Number,\n  spots: Array,\n  mainspot: Object,\n  allspots: Array,\n});\n\nconst emits = defineEmits(['callback', 'remove']);\n\nconst spotForm = ref({\n  subspot: null,\n});\n\nif (props.spot !== null) {\n  spotForm.value = props.spots[props.spot];\n}\n\nfunction filterSpots(allSpots, spots, editingSpot) {\n  return allSpots.filter((spot) => {\n    if (spots.some((dept) => dept._id === spot._id)) {\n      return false;\n    }\n    if (editingSpot._id === spot._id) {\n      return false;\n    }\n    return true;\n  });\n}\n\nconst filteredSpots = computed(() => {\n  return filterSpots(props.allspots, props.spots, props.mainspot);\n});\n\nasync function submitForm() {\n  props.spots.push(spotForm.value.subspot);\n  emits(\"callback\");\n}\n\nasync function removeMember() {\n  props.spots.splice(props.spot, 1);\n  emits(\"callback\");\n}\n</script>\n\n<style scoped>\n.form-group {\n  margin-bottom: 1rem;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 0.5rem;\n}\n\ninput {\n  width: 100%;\n  padding: 0.5rem;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n}\n</style>\n",
                "name": "SpotMemberModify.vue",
                "size": 2033,
                "type": "source"
              },
              {
                "path": "../../src/modules/spots/components/blocks/SpotSub.vue",
                "relativePath": "modules/spots/components/blocks/SpotSub.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"pd-small flex-nowrap flex\">\n    <!-- <img loading=\"lazy\" :src=\"(FILE_SERVER_URL || '') + avatar\" :alt=\"`${name} avatar`\" class=\"user-card__avatar\" /> -->\n    <div class=\"user-card__info\">\n      <p class=\"user-card__name\">{{ department.name ? department.name : 'Безымянный' }}</p>\n      <p class=\"user-card__position\">{{ department.members ? department.members.length : '0' }} человек</p>\n      <!-- Render other properties here -->\n    </div>\n  </div>\n</template>\n\n<script setup>\n  const props = defineProps({\n    department: {\n      type: Object,\n      required: true\n    },\n    // Define other props here\n  });\n</script>\n\n<style scoped>\n  /* Add styles for the user card component here */\n</style>",
                "name": "SpotSub.vue",
                "size": 724,
                "type": "source"
              }
            ]
          },
          "layouts": {
            "_files": [
              {
                "path": "../../src/modules/spots/components/layouts/Spots.vue",
                "relativePath": "modules/spots/components/layouts/Spots.vue",
                "extension": ".vue",
                "content": "<template>\n\t<div class=\"w-100 h-100\">\n\t\t<!-- Catalog wrapper -->\n\t\t<div class=\"h-100 w-100 flex-nowrap flex-column flex gap-thin\">\n\n\t\t\t\t<!-- Sorting section -->\n\t\t\t\t<div class=\"pos-absolute z-index-2 w-100\">\n\t      \t<h2 class=\"bg-black-transp-25 t-white pd-small w-100 bg-blur-big mn-l-auto mn-r-auto t-center\">\n\t      \t\t<span class=\"\">Weed in </span>\n\n\t      \t\t<span @click=\"a => { globals.state.isOpenLocationPopup = true }\" v-if=\"localPosition.city || localPosition.state || localPosition.country\" class=\"t-semi t-main\">\n      \t\t\t\t<span v-if=\"localPosition.city\">{{localPosition.city}}, </span>\n      \t\t\t\t<span v-if=\"localPosition.state\">{{localPosition.state}}, </span>\n      \t\t\t\t<span v-if=\"localPosition.country\">{{localPosition.country}}</span>\n\t      \t\t</span>\n\n\t      \t\t<span v-else @click=\"a => { globals.state.isOpenLocationPopup = true }\"  class=\"t-semi t-main\">\n\t\t\t\t\t\t\t\tThe World\n\t      \t\t</span>\n\t      \t</h2>\n\t\t\t\t\t</div>\n\n\n\t\t\t\t<!-- <Filters/> -->\n\n\t\t\t\t<!-- Products section -->\n\t\t\t\t<router-view  v-slot=\"{ Component, route }\">\n\t\t\t\t\t<transition name=\"scaleIn\" mode=\"out-in\">\n\t\t\t\t\t\t<component \n\t\t\t\t\t\t\tref=\"page\" \n\t\t\t\t\t\t\t:key=\"route.path\" \n\t\t\t\t\t\t\t:localPosition=\"localPosition\" \n\t\t\t\t\t\t\t:is=\"Component\"\n\t\t\t\t\t\t\t:apiKey=\"GOOGLE_MAPS_API_KEY\" \n      \t\t\t\t:locale=\"$i18n.locale\"\n\t\t\t\t\t\t\tclass=\"\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</transition>\n\t\t\t\t</router-view>\n\n\t\t</div>\n\t</div>\n</template>\n\n\n<script setup=\"props\">\n\t// Import libs\n\timport { computed, onMounted, watch, watchEffect, ref } from 'vue'\n\timport { useRoute, useRouter,onBeforeRouteLeave } from 'vue-router'\n\timport { useI18n }    from 'vue-i18n'\n  // Martyrs\n\timport Spoiler from \"@martyrs/src/components/Spoiler/Spoiler.vue\";\n \timport Checkbox from \"@martyrs/src/components/Checkbox/Checkbox.vue\";\n \timport Field from \"@martyrs/src/components/Field/Field.vue\";\n \t// Partials\n\timport Breadcrumbs from '@martyrs/src/components/Breadcrumbs/Breadcrumbs.vue'\n \timport Dropdown from \"@martyrs/src/components/Dropdown/Dropdown.vue\";\n\n\timport * as globals from '@martyrs/src/modules/globals/views/store/globals.js';\n\timport * as categories from '@martyrs/src/modules/products/store/categories.js';\n\timport * as marketplace from '@martyrs/src/modules/marketplace/views/store/marketplace.js';\n\n\t// Accessing router and store\n\tconst route = useRoute()\n\tconst router = useRouter()\n\n\tconst localPosition = ref({\n\t\tcity: null,\n\t\tstate: null,\n\t\tcountry: null\n\t});\n\n\n\tfunction denormalizeUrlParam(param) {\n\t  return param\n\t    .replace(/-/g, ' ') // Замена дефисов на пробелы\n\t    .replace(/\\b\\w/g, l => l.toUpperCase()); // Преобразование первой буквы каждого слова в заглавную\n\t}\n\n\tonMounted(async () => {\n\t  if (route.params) {\n\t    // Загружаем новые значения из параметров маршрута в состояние\n\t    let newState = {\n\t      country: denormalizeUrlParam(route.params.country),\n\t      state: denormalizeUrlParam(route.params.state),\n\t      city: denormalizeUrlParam(route.params.city),\n\t    };\n\n\t\t  // Обновляем глобальное состояние\n\t\t  localPosition.value = newState;\n\t\t}\n\n\t\tif (route.query) {\n\t\t const query = route.query;\n\t\t  const newFilterValue = {\n\t\t    categories: query.categories ? query.categories.split(',') : [],\n\t\t    prices: query.prices ? query.prices.split(',') : [],\n\t\t    delivery: query.delivery ? query.delivery.split(',') : [],\n\t\t    // Продолжайте этот паттерн для остальных полей фильтра\n\t\t  };\n\t\t  marketplace.state.filter.selected = newFilterValue;\n\t\t}\n\n\n\t\t// Data fetching\n\t\tawait categories.actions.read()\n\t})\n\n\twatch(() => marketplace.state.filter.selected, (newFilterValue, oldFilterValue) => {\n\t  // Переводим фильтр в формат query\n\t  const query = { ...route.query };\n\n\t  // Удаляем старые значения фильтра из query\n\t  Object.keys(oldFilterValue).forEach(key => {\n\t    if (query[key]) {\n\t      delete query[key];\n\t    }\n\t  });\n\n\t  // Добавляем новые значения фильтра в query\n\t  const newQueryValues = Object.fromEntries(\n\t    Object.entries(newFilterValue)\n\t      .filter(([key, value]) => Array.isArray(value) && value.length > 0)\n\t      .map(([key, value]) => [key, value.join(',')])\n\t  );\n\t  Object.assign(query, newQueryValues);\n\n\t  // Обновляем маршрут с новым query\n\t  router.push({ query });\n\t}, { deep: true })\n\n\t\n\tfunction normalizeUrlParam(param) {\n\t  return param\n\t    .toLowerCase() // Преобразование всех символов в нижний регистр\n\t    .replace(/ /g, '-') // Замена всех пробелов на дефисы\n\t    .replace(/[^a-z0-9-]/g, ''); // Удаление всех символов, которые не являются буквами, цифрами или дефисами\n\t}\n\n\twatch(() => globals.state.position, (newPosition) => {\n\t  // get the current route\n\t  const currentRoute = { ...router.currentRoute.value };\n\t  \n\t  // create new parameters based on globals state position\n\t  let newParams = {\n\t    country: normalizeUrlParam(newPosition.country),\n\t    state: normalizeUrlParam(newPosition.state),\n\t    city: normalizeUrlParam(newPosition.city),\n\t  };\n\t  \t\n\t  // update route params\n\t  currentRoute.params = newParams;\n\t  \n\t  // replace the current route\n\t  router.replace(currentRoute);\n\t}, { deep: true });\n\t\n  const text = {\n    locale: 'en',\n    messages: {\n      en: {\n\t     \tmeta: {\n          title: \"Marketplace – Shop Our Wide Selection of Quality Weed for Delivery\",\n          description: \"Browse our marketplace of top-grade weed strains and choose from a variety of delivery options. Order now and have your favorite strains delivered straight to your door. Safe, fast, and reliable.\",\n        },\n      \tbreadcrumbs: {\n      \t\thome: 'Home',\n      \t\tstore: 'Marketplace',\n      \t},\n      \tcategoriesTitle: 'Category',\n      \tcategories: [],\n      \tsort: {\n      \t\tprice: 'By price',\n      \t\tnewest: 'By newest',\n      \t\tpopularity: 'By popularity'\n      \t},\n      \tfilters: {\n      \t\ttitle: 'Filters',\n      \t\tprice: {\n      \t\t\ttitle: 'Price',\n      \t\t\tfrom: 'From',\n      \t\t\tto: 'To'\n      \t\t},\n      \t\tfilters: [],\n      \t\treset: 'Reset Filters'\n      \t}\n      },\n      ru: {\n\t      meta: {\n          title: \"Маркетплейс – Выбирайте из нашего ассортимента качественной травки для доставки\",\n          description: \"Маркетплейс – Изучите наши продукты высокого качества и выбирайте из различных вариантов доставки. Закажите сейчас и получите свои любимые сорта на дом. Безопасно, быстро и надежно.\",\n        },\n      \tbreadcrumbs: {\n      \t\thome: 'Главная',\n      \t\tstore: 'Маркетплейс',\n      \t},\n      \tcategoriesTitle: 'Категория',\n      \tcategories: [],\n      \tsort: {\n      \t\tprice: 'По цене',\n      \t\tnewest: 'По новизне',\n      \t\tpopularity: 'По популярности'\n      \t},\n      \tfilters: {\n      \t\ttitle: 'Фильтры',\n      \t\tprice: {\n      \t\t\ttitle: 'Цена',\n      \t\t\tfrom: 'От',\n      \t\t\tto: 'До'\n      \t\t},\n      \t\tfilters: [],\n      \t\treset: 'Сбросить фильтры',\n      \t}\n      }\n    }\n  }\n\n \tcategories.state.all.forEach( category => {\n  \tcategory.localization.forEach( localization => {\n    \ttext.messages[localization.locale].categories.push(localization.text)\n  \t})\n\t})\n\n \tconst { t } = useI18n(text)\n\n</script>\n\n<style lang=\"scss\">\n\n\n</style>\n",
                "name": "Spots.vue",
                "size": 6983,
                "type": "source"
              }
            ]
          },
          "pages": {
            "_files": [
              {
                "path": "../../src/modules/spots/components/pages/Map.vue",
                "relativePath": "modules/spots/components/pages/Map.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"h-100 w-100 pos-relative\">\n    <div class=\"w-100 pos-absolute  z-index-2 pos-b-10 \">\n      <Button \n        :submit=\"searchInCurrentLocation\"  \n        class=\"mn-l-auto mn-r-auto  bg-black t-white w-min-20 button\"\n      >\n        Search in This Location\n      </Button>\n    </div>\n\n    <div id=\"map\" class=\"h-100 w-100 pos-relative o-hidden\">\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { onMounted, watch, ref } from 'vue';\nimport { useRoute, useRouter } from 'vue-router'\n\nimport { Loader as GMLoader } from \"@googlemaps/js-api-loader\";\n\nimport Button from '@martyrs/src/components/Button/Button.vue'\n\nimport { state, actions } from '@martyrs/src/modules/organizations/store/organizations.js'\n\nimport * as globals from '@martyrs/src/modules/globals/views/store/globals.js';\nimport * as marketplace from '@martyrs/src/modules/marketplace/views/store/marketplace.js';\n\nconst router = useRouter();\nconst route = useRoute();\n\nconst props = defineProps({\n  localPosition: Object,\n  location: {\n    type: Object,\n    default: () => ({ lat: 15.8700, lng: 100.9925 })\n  },\n  address: {\n    type: String,\n    default: null\n  },\n  apiKey: String,\n  locale: {\n    type: String,\n    default: 'en'\n  }\n})\n\nlet map = ref(null);\nlet markers = ref([]);\n\nlet skip = ref(0);\nlet limit = ref(50);\n\nlet currentMapCenter = ref({lat: 0, lng: 0});\nlet currentMapZoom = ref(null);\n\nasync function getCountry() {\n  try {\n    const response = await fetch('https://ip2c.org/s');\n    const result = await response.text();\n\n    if (!result || result[0] !== '1') {\n      throw new Error('Unable to fetch the country');\n    }\n\n    // Разделение строки и извлечение кода страны\n    const parts = result.split(';');\n    if (parts.length < 4) {\n      throw new Error('Invalid response format');\n    }\n\n    console.log(parts[3])\n\n    return parts[3]; // Возвращает двухбуквенный код страны\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n\n\nonMounted(async () => {\n  let lat = parseFloat(route.query.lat || globals.state.position?.location?.lat);\n  let lng = parseFloat(route.query.lng || globals.state.position?.location?.lng);\n\n  let zoomLevel;\n\n  // Определите уровень зума в зависимости от доступной информации\n  if (route.params.location || globals.state.position?.location) {\n    zoomLevel = 15;\n  } else if (route.params.country || globals.state.position?.country) {\n    zoomLevel = 9;\n  } else if (route.params.state || globals.state.position?.state) {\n    zoomLevel = 6;\n  } else if (route.params.city || globals.state.position?.city) {\n    zoomLevel = 14;\n  } else {\n    zoomLevel = 2;\n  }\n\n  const loader = new GMLoader({\n    apiKey: props.apiKey,\n    version: \"weekly\",\n    libraries: [\"places\"],\n    language: 'en'\n  });\n\n  loader.load().then(async () => {\n\n    // Если координаты не заданы, попробуйте их получить\n    if (!lat || !lng) {\n      let country\n\n      const geocoder = new google.maps.Geocoder();\n\n      try {\n        country = await getCountry();\n      } catch {\n        country = 'Thailand' \n        console.log(error)\n      }\n\n      try {\n        const results = await geocoder.geocode({ 'address': country })\n\n        console.log(results);\n\n        if (results) {\n          lat = results.results[0].geometry.location.lat();\n          lng = results.results[0].geometry.location.lng();\n          zoomLevel = 6;\n        } else {\n          console.error('No results found for the country code.');\n        }\n      } catch (error) {\n        console.error('Error getting coordinates from country code:', error);\n      }\n    }\n    \n    // If there's no lat/lng in the query, try to use country/state/city to get the lat/lng\n    if (!lat && !lng && (route.params.country || route.params.state || route.params.city)) {\n      const geocoder = new google.maps.Geocoder();\n\n      const address = [\n        route.params.city,\n        route.params.state,\n        route.params.country\n      ].filter(Boolean).join(', ');\n\n      try {\n        const results = await geocoder.geocode({ address });\n\n        if (results[0]) {\n          lat = results[0].geometry.location.lat();\n          lng = results[0].geometry.location.lng();\n        }\n\n      } catch (error) {\n        console.error('Error getting coordinates:', error);\n      }\n    }\n\n\n    skip.value += limit.value;\n\n    const params = {\n      // country: route.params.country,\n      // state: route.params.state,\n      // city: route.params.city,\n      // categories: route.query.categories,\n      // prices: route.query.prices,\n      // delivery: route.query.delivery,\n      country: route.params.country,\n      state: route.params.state,\n      city: route.params.city,\n      categories: route.query.categories,\n      prices: route.query.prices,\n      delivery: route.query.delivery,\n      sortParam: route.query.sortParam || marketplace.state.sort.param,\n      sortOrder: route.query.sortOrder || marketplace.state.sort.order,\n      location: {coordinates: [lng,lat] },\n      locationRadius: 1000,\n      limit: 500,\n    };\n\n    console.log(params)\n\n    const data = await actions.read(params);\n\n    state.all = [...state.all, ...data];\n\n    map.value = new google.maps.Map(document.getElementById('map'), {\n      mapTypeControl: false,\n      fullscreenControl: false,\n      styles: [\n        {\n          \"elementType\": \"geometry\",\n          \"stylers\": [\n            {\n              \"color\": \"#212121\"\n            }\n          ]\n        },\n        {\n          \"elementType\": \"labels.icon\",\n          \"stylers\": [\n            {\n              \"visibility\": \"off\"\n            }\n          ]\n        },\n        {\n          \"elementType\": \"labels.text.fill\",\n          \"stylers\": [\n            {\n              \"color\": \"#757575\"\n            }\n          ]\n        },\n        {\n          \"elementType\": \"labels.text.stroke\",\n          \"stylers\": [\n            {\n              \"color\": \"#212121\"\n            }\n          ]\n        },\n        {\n          \"featureType\": \"administrative\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [\n            {\n              \"color\": \"#757575\"\n            },\n            {\n              \"visibility\": \"off\"\n            }\n          ]\n        },\n        {\n          \"featureType\": \"administrative.country\",\n          \"elementType\": \"labels.text.fill\",\n          \"stylers\": [\n            {\n              \"color\": \"#9e9e9e\"\n            }\n          ]\n        },\n        {\n          \"featureType\": \"administrative.land_parcel\",\n          \"stylers\": [\n            {\n              \"visibility\": \"off\"\n            }\n          ]\n        },\n        {\n          \"featureType\": \"administrative.locality\",\n          \"elementType\": \"labels.text.fill\",\n          \"stylers\": [\n            {\n              \"color\": \"#bdbdbd\"\n            }\n          ]\n        },\n        {\n          \"featureType\": \"administrative.neighborhood\",\n          \"stylers\": [\n            // {\n            //   \"visibility\": \"off\"\n            // }\n          ]\n        },\n        {\n          \"featureType\": \"poi\",\n          \"stylers\": [\n            {\n              \"visibility\": \"off\"\n            }\n          ]\n        },\n        {\n          \"featureType\": \"poi\",\n          \"elementType\": \"labels.text.fill\",\n          \"stylers\": [\n            {\n              \"color\": \"#757575\"\n            }\n          ]\n        },\n        {\n          \"featureType\": \"poi.park\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [\n            {\n              \"color\": \"#181818\"\n            }\n          ]\n        },\n        {\n          \"featureType\": \"poi.park\",\n          \"elementType\": \"labels.text.fill\",\n          \"stylers\": [\n            {\n              \"color\": \"#616161\"\n            }\n          ]\n        },\n        {\n          \"featureType\": \"poi.park\",\n          \"elementType\": \"labels.text.stroke\",\n          \"stylers\": [\n            {\n              \"color\": \"#1b1b1b\"\n            }\n          ]\n        },\n        {\n          \"featureType\": \"road\",\n          \"elementType\": \"geometry.fill\",\n          \"stylers\": [\n            {\n              \"color\": \"#2c2c2c\"\n            }\n          ]\n        },\n        {\n          \"featureType\": \"road\",\n          \"elementType\": \"labels\",\n          \"stylers\": [\n            {\n              \"visibility\": \"off\"\n            }\n          ]\n        },\n        {\n          \"featureType\": \"road\",\n          \"elementType\": \"labels.icon\",\n          \"stylers\": [\n            {\n              \"visibility\": \"off\"\n            }\n          ]\n        },\n        {\n          \"featureType\": \"road\",\n          \"elementType\": \"labels.text.fill\",\n          \"stylers\": [\n            {\n              \"color\": \"#8a8a8a\"\n            }\n          ]\n        },\n        {\n          \"featureType\": \"road.arterial\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [\n            {\n              \"color\": \"#373737\"\n            }\n          ]\n        },\n        {\n          \"featureType\": \"road.arterial\",\n          \"elementType\": \"labels\",\n          \"stylers\": [\n          ]\n        },\n        {\n          \"featureType\": \"road.highway\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [\n            {\n              \"color\": \"#3c3c3c\"\n            }\n          ]\n        },\n        {\n          \"featureType\": \"road.highway\",\n          \"elementType\": \"labels\",\n          \"stylers\": [\n            {\n              \"visibility\": \"off\"\n            }\n          ]\n        },\n        {\n          \"featureType\": \"road.highway.controlled_access\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [\n            {\n              \"color\": \"#4e4e4e\"\n            }\n          ]\n        },\n        {\n          \"featureType\": \"road.local\",\n          \"stylers\": [\n          ]\n        },\n        {\n          \"featureType\": \"road.local\",\n          \"elementType\": \"labels.text.fill\",\n          \"stylers\": [\n            {\n              \"color\": \"#616161\"\n            }\n          ]\n        },\n        {\n          \"featureType\": \"transit\",\n          \"stylers\": [\n            {\n              \"visibility\": \"off\"\n            }\n          ]\n        },\n        {\n          \"featureType\": \"transit\",\n          \"elementType\": \"labels.text.fill\",\n          \"stylers\": [\n            {\n              \"color\": \"#757575\"\n            }\n          ]\n        },\n        {\n          \"featureType\": \"water\",\n          \"elementType\": \"geometry\",\n          \"stylers\": [\n            {\n              \"color\": \"#000000\"\n            }\n          ]\n        },\n        {\n          \"featureType\": \"water\",\n          \"elementType\": \"labels.text\",\n          \"stylers\": [\n            {\n              \"visibility\": \"off\"\n            }\n          ]\n        },\n        {\n          \"featureType\": \"water\",\n          \"elementType\": \"labels.text.fill\",\n          \"stylers\": [\n            {\n              \"color\": \"#3d3d3d\"\n            }\n          ]\n        }\n      ],\n      center: { lat, lng },\n      zoom: parseInt(route.query.zoom || zoomLevel || '12')\n    });\n\n   \n\n      for (let marker of markers.value) {\n        marker.setMap(null);\n      }\n\n      markers.value = [];\n\n      // Add new markers\n      markers.value = data.map(org => {\n        // Get the first spot's location\n        let location = org.spots[0]?.location;\n\n        if (location && location.type === 'Point') {\n          let [lng, lat] = location.coordinates; // Note that coordinates are in [lng, lat] format\n          \n          let markerIcon = '/marker_2.png'; // Default marker icon\n\n          if (org.products && org.products.length === 0) {\n            markerIcon = '/marker.png'; // If there are no products, set a different icon\n          }\n          \n          const marker = new google.maps.Marker({\n            position: { lng, lat },\n            map: map.value,\n            icon: {\n              url: markerIcon, // URL to the icon\n              scaledSize: new google.maps.Size(32, 48), // icon dimensions\n              origin: new google.maps.Point(0,0), // coordinate origin for this icon\n              anchor: new google.maps.Point(16, 48) // point on the icon that corresponds to the geographic location of the marker\n            }\n          });\n\n          // Add click listener to the marker\n          marker.addListener('click', () => {\n            router.push({name: 'Organization', params: {_id: org._id}});\n          });\n\n          return marker;\n      }\n      return null;\n    }).filter(marker => marker !== null); // Remove null markers\n\n    google.maps.event.addListener(map.value, 'center_changed', () => {\n      let center = map.value.getCenter();\n      currentMapCenter.value = {\n        lat: center.lat(),\n        lng: center.lng()\n      };\n    });\n\n    google.maps.event.addListener(map.value, 'zoom_changed', () => {\n      currentMapZoom.value = map.value.getZoom();\n    });\n\n  })\n\n});\n\nconst searchInCurrentLocation = async () => {\n  // Use currentMapCenter for the location\n  const params = {\n    country: route.params.country,\n    state: route.params.state,\n    city: route.params.city,\n    categories: route.query.categories,\n    prices: route.query.prices,\n    delivery: route.query.delivery,\n    sortParam: route.query.sortParam || marketplace.state.sort.param,\n    sortOrder: route.query.sortOrder || marketplace.state.sort.order,\n    locationRadius: 8000/currentMapZoom.value,\n    limit: 100,\n    location: {\n      type: \"Point\",\n      coordinates: [currentMapCenter.value.lng, currentMapCenter.value.lat]\n    }\n  };\n\n  console.log([currentMapCenter.value.lng, currentMapCenter.value.lat])\n\n  try {\n    const data = await actions.read(params);\n    // Remove old markers\n    for (let marker of markers.value) {\n      marker.setMap(null);\n    }\n    markers.value = [];\n\n    // Add new markers\n    markers.value = data.map(org => {\n      let location = org.spots[0]?.location;\n      if (location && location.type === 'Point') {\n        let [lng, lat] = location.coordinates; // Note that coordinates are in [lng, lat] format\n        let markerIcon = org.products && org.products.length > 0 ? '/marker_2.png' : '/marker.png';\n\n        const marker = new google.maps.Marker({\n          position: { lng, lat },\n          map: map.value,\n          icon: {\n            url: markerIcon, // URL to the icon\n            scaledSize: new google.maps.Size(32, 48), // icon dimensions\n            origin: new google.maps.Point(0,0), // coordinate origin for this icon\n            anchor: new google.maps.Point(16, 48) // point on the icon that corresponds to the geographic location of the marker\n          }\n        });\n\n        // Add click listener to the marker\n        marker.addListener('click', () => {\n          router.push({ name: 'Organization', params: { _id: org._id } });\n        });\n\n        return marker;\n      }\n      return null;\n    }).filter(marker => marker !== null); // Remove null markers\n  } catch (error) {\n    console.error('Error fetching organizations:', error);\n  }\n};\n\n\n\n</script>\n\n<style scoped lang=\"scss\">\n  #map {\n    &:focus {\n      outline: none;\n    }\n  }\n</style>\n",
                "name": "Map.vue",
                "size": 14951,
                "type": "source"
              },
              {
                "path": "../../src/modules/spots/components/pages/Spot.vue",
                "relativePath": "modules/spots/components/pages/Spot.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"radius-big o-hidden cols-2-1_3\">\n    <Map :location=\"{lat: spot.location.coordinates[1] ,lng: spot.location.coordinates[0]}\" class=\"\"/>\n\n    <div class=\"pd-medium w-100\">\n     <svg  @click=\"$router.push(`/app/organization/${props.organization._id}/spots/${spot._id}/edit`)\" class=\"i-regular pos-absolute pos-r-0 pos-t-0 t-transp\" width=\"652\" height=\"652\" viewBox=\"0 0 652 652\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M515.693 9.52082C510.095 3.91669 502.49 0.765625 494.563 0.765625C486.635 0.765625 479.036 3.91669 473.432 9.52082L48.7255 434.307C44.8244 438.214 42.0848 443.125 40.8088 448.496L0.939444 615.069C-1.47202 625.168 1.528 635.788 8.86652 643.132C16.2103 650.47 26.8305 653.47 36.9292 651.059L203.516 611.261H203.511C208.88 609.985 213.792 607.246 217.699 603.35L642.485 178.496C648.089 172.892 651.241 165.293 651.241 157.366C651.241 149.439 648.089 141.835 642.485 136.235L515.693 9.52082ZM113.76 453.708L388.307 179.161L472.828 263.682L198.281 538.229L113.76 453.708ZM87.1041 511.5L140.416 564.812L70.3014 581.614L87.1041 511.5ZM515.091 221.793L430.195 136.897L494.184 72.9075L579.08 157.429L515.091 221.793Z\" fill=\"rgb(var(--black))\"/>\n      </svg>\n      \n      <h3 \n        @click=\"$router.push(`/app/organization/${props.organization._id}/spots/${spot._id}`)\"\n        class=\"mn-b-small w-100\"\n        v-html=\"spot.profile.name\"\n      />\n\n       <p \n        @click=\"$router.push(`/app/organization/${props.organization._id}/spots/${spot._id}`)\"\n        class=\"mn-b-small p-big w-100\"\n        v-html=\"spot.address\"\n      />\n\n      \n    \n      <Spoiler \n        class=\"\n          radius-small \n          o-hidden\n          br-1px br-solid br-grey-transp-25 \n          mn-b-thin\n        \"\n        >\n        <template #header>\n          <div class=\"pd-small flex-v-center flex-nowrap flex\">\n            <h5 class=\"w-100\" >Contacts </h5>\n            <p class=\"mn-r-small\">{{spot.members.length}}&nbsp;человек</p>\n            <svg width=\"14\" height=\"9\" viewBox=\"0 0 14 9\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.4697 0.469727L13.5304 1.53039L7.00006 8.06072L0.469727 1.53039L1.53039 0.469727L7.00006 5.9394L12.4697 0.469727Z\" fill=\"#8A8A8A\"/>\n            </svg>\n\n          </div>\n        </template>\n        <template #content>\n           <ul>\n            <li v-if=\"spot.members.length < 1\">В отделе еще нет участников</li>\n            <User \n              class=\"br-b br-solid br-grey-transp-25\" \n              v-for=\"(member, index) in spot.members\" \n              :key=\"index\" \n              :user=\"member.user\" \n              :position=\"member.position\" \n              @click=\"$router.push(`/app/profile/${member.user._id}`)\" \n            />\n          </ul>\n        </template>\n      </Spoiler>\n\n      <Spoiler \n        class=\"\n          radius-small \n          o-hidden\n          br-1px br-solid br-grey-transp-25 \n          mn-b-thin\n        \"\n        >\n        <template #header>\n          <div class=\"pd-small flex-v-center flex-nowrap flex\">\n            <h5 class=\"w-100\" >Working Hours </h5>\n            <p class=\"mn-r-small\">{{spot.subspots ? spot.subspots.length : 0}}&nbsp;отделов</p>\n            <svg width=\"14\" height=\"9\" viewBox=\"0 0 14 9\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.4697 0.469727L13.5304 1.53039L7.00006 8.06072L0.469727 1.53039L1.53039 0.469727L7.00006 5.9394L12.4697 0.469727Z\" fill=\"#8A8A8A\"/>\n            </svg>\n\n          </div>\n        </template>\n        <template #content>\n          <ul>\n            <li v-if=\"spot.subspots.length < 1\">В отделе еще нет подотделов</li>\n            <SpotSub  v-for=\"(subspotsartment, index) in spot.subspots\" @click=\"$router.push(`/app/organization/spots/${subspotsartment._id}`)\" :key=\"index\" class=\"br-b br-solid br-grey-transp-25\" :spot=\"subspotsartment\" />\n          </ul>\n        </template>\n      </Spoiler>\n\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nimport Spoiler  from '@martyrs/src/components/Spoiler/Spoiler.vue';\nimport Map      from '@martyrs/src/components/Map/Map.vue';\n\n\nimport SpotSub from '@martyrs/src/modules/spots/components/blocks/SpotSub.vue';\nimport User from '@martyrs/src/modules/auth/views/components/blocks/CardUser.vue';\n\nconst props = defineProps({\n  spot: Object,\n  organization: Object\n});\n</script>\n<style scoped>\n.subspotsartment {\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  margin-top: 1rem;\n}\n</style>",
                "name": "Spot.vue",
                "size": 4553,
                "type": "source"
              },
              {
                "path": "../../src/modules/spots/components/pages/SpotEdit.vue",
                "relativePath": "modules/spots/components/pages/SpotEdit.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"for-transition w-100 cols-1 pd-thin gap-thin\">\n\n\n    <Block class=\"flex-nowrap flex-v-center flex\">\n      \n      <h1 class=\"mn-r-auto\">\n        {{ route.params.spot ? spots.state.spot.profile.name : 'Create Spot' }}\n      </h1>\n\n      <Button \n        :submit=\"onSubmit\" \n        :callback=\"redirectTo\"\n        class=\"bg-main\"\n      >\n        Save Spot\n      </Button>\n    </Block>\n    \n\n    <div class=\"cols-2 gap-thin\"> \n      <Block\n        title=\"Profile\"\n        class=\"mn-b-semi\"\n      >\n        <div class=\"gap-small mn-b-small cols-2-fit-content\">\n          <UploadImage \n             v-model:photo=\"spots.state.spot.profile.photo\"\n            :uploadPath=\"'organizations/' + spots.state.spot.name + '/avatars'\"\n            class=\"aspect-1x1 w-8r o-hidden radius-extra\" \n          />\n\n          <div class=\"w-100\">\n            <Field \n              v-model:field=\"spots.state.spot.profile.name\"     \n              label=\"Name\"  \n              placeholder=\"Spot Name\" \n              class=\"mn-b-small bg-white radius-small pd-medium\"\n              :validation=\"organizationName\" \n            />\n            <Field \n              v-model:field=\"spots.state.spot.profile.description\"     \n              label=\"Description\"  \n              placeholder=\"Spot description (max 120 symbols)\" \n              class=\"bg-white radius-small pd-medium\"\n              :validation=\"organizationName\" \n            />  \n          </div>\n        </div>\n\n        <Field \n          v-model:field=\"spots.state.spot.minorder\"     \n          label=\"Min.order\"  \n          placeholder=\"Enter minimum order value\" \n          class=\"bg-white radius-small mn-b-small pd-small\"\n          :validation=\"organizationName\" \n        />  \n\n        <Select \n          v-model:select=\"spots.state.spot.status\"\n          label=\"Status\"\n          :options=\"[\n            'unpublished', \n            'published',\n            'archivied'\n          ]\"\n          placeholder=\"Status\"\n          class=\"pos-relative w-100 mn-b-small bg-white radius-small pd-medium\"\n        />\n\n        <p class=\"p-medium mn-b-small\">Please the available delivery options:</p>\n\n        <Checkbox \n          v-for=\"option in ['pickup','courier','post']\"\n          :label=\"option\"\n          name=\"Delivery\"\n          :value=\"option\"\n          class=\"w-100 mn-b-small bg-white radius-small pd-small\"\n          :radio=\"spots.state.spot.delivery\"\n          @update:radio=\"event => spots.state.spot.delivery = event\"\n        />\n\n        <p class=\"p-medium mn-b-small\">Please select the available payment methods:</p>\n     \n        <Checkbox \n          v-for=\"option in ['cash','bank transfer','crypto']\"\n          :label=\"option\"\n          name=\"Payment\"\n          :value=\"option\"\n          class=\"w-100 mn-b-small bg-white radius-small pd-small\"\n          :radio=\"spots.state.spot.payment\"\n          @update:radio=\"event => spots.state.spot.payment = event\"\n        />\n      </Block>\n\n      <Block\n        title=\"Location\"\n        class=\"pos-relative\"\n      >\n        <Address\n          :apiKey=\"GOOGLE_MAPS_API_KEY\" \n          :address=\"spots.state.spot.address\" \n          :location=\"spots.state.spot.location\"  \n          :locale=\"$i18n.locale\"   \n          label=\"Address\"    \n          placeholder=\"Enter delivery address\"  \n          class=\"\n            bg-white pd-small radius-tl-medium radius-tr-medium \n          \"\n          @update:location=\"newLocation => {\n            spots.state.spot.location = newLocation;\n          }\"\n          @update:address=\"newAddress => {\n            spots.state.spot.address = newAddress;\n          }\"\n        />\n        <LocationMarker \n         :apiKey=\"GOOGLE_MAPS_API_KEY\" \n\n          :address=\"spots.state.spot.address\" \n          :location=\"spots.state.spot.location\" \n          :locale=\"$i18n.locale\"\n          \n          class=\"h-20r mn-b-small radius-bl-medium radius-br-medium  o-hidden\"\n          @update:location=\"newLocation => {\n            spots.state.spot.location = newLocation;\n          }\"\n          @update:address=\"newAddress => {\n            spots.state.spot.address = newAddress;\n          }\"\n        />\n        <WorktimeEdit \n          v-model:worktime=\"spots.state.spot.worktime\"\n          class=\"mn-b-small\"\n        />\n\n        <p class=\"mn-b-small p-medium\">Options:</p>\n        <Checkbox \n          :label=\"'Hide address'\"\n          name=\"address\"\n          class=\"w-100 mn-r-small bg-white radius-small pd-small\"\n          :radio=\"spots.state.spot.position?.hide\"\n          @update:radio=\"event => spots.state.spot.position.hide = event\"\n        />\n\n      </Block>\n\n    </div>\n\n    <Button :submit=\"onDelete\" :callback=\"redirectDash\" class=\"w-100 bg-light\">Delete Spot</Button>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\";\n\nimport Block from '@martyrs/src/components/Block/Block.vue';\nimport UploadImage from '@martyrs/src/components/UploadImage/UploadImage.vue';\n\nimport Tab from \"@martyrs/src/components/Tab/Tab.vue\";\nimport Field from \"@martyrs/src/components/Field/Field.vue\";\nimport Select from \"@martyrs/src/components/Select/Select.vue\";\nimport Checkbox from \"@martyrs/src/components/Checkbox/Checkbox.vue\";\nimport Address from \"@martyrs/src/components/Address/Address.vue\";\nimport LocationMarker from \"@martyrs/src/components/LocationMarker/LocationMarker.vue\";\nimport Button from \"@martyrs/src/components/Button/Button.vue\";\nimport Popup from \"@martyrs/src/components/Popup/Popup.vue\";\n\nimport WorktimeEdit from \"../sections/WorktimeEdit.vue\"; \n\nimport * as spots from \"@martyrs/src/modules/spots/store/spots.js\";\n\nconst router = useRouter();\nconst route = useRoute();\nconst tabOrganization = ref(\"details\");\nconst showAddNew = ref(false);\n\nonMounted(async () => {\n  await fetchData();\n})\n\nasync function fetchData() {\n\n  if (route.params.spot) await spots.actions.readOne(route.params.spot);\n\n  const lng = spots.state.spot.location?.coordinates[0]\n  const lat = spots.state.spot.location?.coordinates[1]\n\n  spots.state.spot.location = {\n    lat: lat || 1,\n    lng: lng || 1\n  }\n}\n\nasync function onSubmit() {\n\n  spots.state.spot.location = {\n    type: 'Point',\n    coordinates: [spots.state.spot.location.lng, spots.state.spot.location.lat]\n  }\n\n\n  if (route.params.spot) {\n    await spots.actions.update(\n      route.params._id,\n      spots.state.spot\n    );\n  }\n  if (!route.params.spot) {\n    await spots.actions.create(\n      route.params._id,\n      spots.state.spot\n    );\n  }\n}\n\nfunction redirectTo() {\n  // router.replace({ name: \"Spot\", params: { _id: route.params._id, spot: spots.state.spot._id } });\n   router.push({ name: \"Organization\",  query: { tab: 'spots' }, params: { _id: route.params._id }});\n}\n\nasync function onDelete() {\n  await spots.actions.delete(\n    route.params._id,\n    spots.state.spot\n  );\n}\n\nfunction redirectDash() {\n  router.push({ name: \"Organization\", params: { _id: route.params._id }});\n}\n</script>\n\n<style scoped>\n</style>",
                "name": "SpotEdit.vue",
                "size": 6990,
                "type": "source"
              }
            ]
          },
          "sections": {
            "_files": [
              {
                "path": "../../src/modules/spots/components/sections/MapSection.vue",
                "relativePath": "modules/spots/components/sections/MapSection.vue",
                "extension": ".vue",
                "content": "<template>\n  <section id=\"map\" class=\"section\">\n    <div class=\"mn-b-big t-center title\">\n      <h2 class=\"\" v-html=\"t('title')\"></h2>\n    </div>\n\n    <div class=\"cols-2\">\n      <MapBlock \n      :name=\"t('map.title')\" \n      map=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d988.2464207440368!2d98.32843645562768!3d7.791339890847109!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x30502f47783f9337%3A0x516fcf234b41baa0!2z4Lia4LmJ4Liy4LiZ4Lif4Li04LiZ4LiB4Lix4LiN!5e0!3m2!1sen!2sth!4v1671872245101!5m2!1sen!2sth\"\n      link=\"https://goo.gl/maps/Pvvow9B4uS9eEHP56\" \n      :text=\"t('map.description')\"\n      />\n      <MapBlock \n      :name=\"t('newplaces.title')\" \n      :text=\"t('newplaces.description')\"\n      />\n    </div>\n  </section>\n</template>\n\n\n<script setup>\n  import { ref, computed, onServerPrefetch, onMounted } from 'vue'\n\n  import MapBlock from \"@martyrs/src/modules/landing/components/blocks/MapBlock.vue\"\n\n  import { useI18n } from 'vue-i18n'\n    \n  const text = {\n    messages: {\n      en: {\n        title: '<b>Fin.Kan House Is Our Partner</b><br>And Pickup Location 📍',\n        subtitle: 'Buy CBD and high THC weed in-store at our central Weeder location',\n        map: {\n          title: '43 283 Soi Boathouse, Rawai 🏨',\n          description: 'Opening hours from 18:00 to 24:00.'\n        },\n        newplaces: {\n          title: 'New Places is Coming 👌',\n          description: 'We are in the process of opening a new locations for faster delivery to all areas of Phuket. Subscribe to our social networks and expect news!'\n        }\n      },\n      ru: {\n        title: '<b>Fin.Kan House Наш Партнер</b><br>и Пункт Выдачи 📍',\n        subtitle: 'Купите травку с КБД и высоким содержанием ТГК в центральном магазине Weeder.',\n        map: {\n          title: '43 283 Soi Boathouse, Rawai 🏨',\n          description: 'Время работы с 18:00 до 24:00.'\n        },\n        newplaces: {\n          title: 'Новые места на подходе 👌',\n          description: 'Мы занимаемся открытием нового мест для более быстрой доставки во все районы Пхукеты. Подписыватесь на наши социальные сети и ожидайте новостей!'\n        }\n      }\n    }\n  }\n\n  const { t } = useI18n(text)\n\n</script>\n\n<style lang=\"scss\">\n#map {\n  padding-bottom: 0;\n  \n  .cols-2 {\n      gap: 1rem;\n\n      border-radius: 2rem;\n      overflow: hidden;\n      \n      .col:first-of-type {\n          display: flex;\n          flex-direction: column;\n\n          .button-link {color: #00ff88;}\n      }\n      .col:last-of-type {\n\n          #gmap_canvas {\n            // border-radius: 2rem;\n            overflow: hidden;\n            \n             height: 100%;\n              width: 100%;\n          }\n      }\n  }\n}\n</style>\n",
                "name": "MapSection.vue",
                "size": 2691,
                "type": "source"
              },
              {
                "path": "../../src/modules/spots/components/sections/WorktimeEdit.vue",
                "relativePath": "modules/spots/components/sections/WorktimeEdit.vue",
                "extension": ".vue",
                "content": "<template>\n  <div class=\"working-hours-editor w-100\">\n    <div class=\"mn-b-small flex flex-nowrap flex-v-center\">\n      <h4 class=\"mn-r-auto\">{{ t('workingHours.title') }}</h4>\n      <Button \n        class=\"bg-main\"\n        :submit=\"addRegularDay\"\n        :showSucces=\"false\" \n        :showLoader=\"false\"\n      >\n        {{ t('workingHours.addRegularDay') }}\n      </Button>\n    </div>\n\n    <!-- Таблица для регулярных часов работы -->\n    <div class=\"bg-white radius-small pd-small mn-b-medium\">\n      <h5 class=\"mn-b-small\">{{ t('workingHours.regularSchedule') }}</h5>\n      \n      <div v-if=\"worktime.regular && worktime.regular.length > 0\" class=\"regular-schedule mn-b-small\">\n        <div \n          v-for=\"(day, index) in worktime.regular\" \n          :key=\"`regular-${index}`\" \n          class=\"schedule-item pd-small mn-b-small flex flex-v-center flex-nowrap\"\n          :class=\"index % 2 === 0 ? 'bg-light' : ''\"\n        >\n          <div class=\"day-info flex-child-1\">\n            <div class=\"day-name t-semi\">{{ getWeekdayName(day.dayOfWeek) }}</div>\n            <div class=\"day-hours\" v-if=\"day.isOpen && day.periods && day.periods.length > 0\">\n              <template v-for=\"(period, pIndex) in day.periods\" :key=\"`period-${pIndex}`\">\n                <span class=\"period t-small t-transp\">\n                  {{ period.open }} - {{ period.close }}\n                </span>\n                <span v-if=\"pIndex < day.periods.length - 1\" class=\"t-small t-transp\">, </span>\n              </template>\n            </div>\n            <div v-else class=\"day-hours t-small t-transp t-red\">\n              {{ t('workingHours.closed') }}\n            </div>\n          </div>\n          <div class=\"day-actions flex-nowrap flex gap-small\">\n            <Button \n              class=\"pd-micro bg-light\"\n              :submit=\"() => editRegularDay(index)\"\n              :showSucces=\"false\" \n              :showLoader=\"false\"\n            >\n              {{ t('workingHours.edit') }}\n            </Button>\n            <Button \n              class=\"pd-micro bg-fourth-nano\"\n              :submit=\"() => removeRegularDay(index)\"\n              :showSucces=\"false\" \n              :showLoader=\"false\"\n            >\n              {{ t('workingHours.remove') }}\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div v-else class=\"empty-schedule bg-light pd-medium radius-small t-center mn-b-small\">\n        {{ t('workingHours.noRegularSchedule') }}\n      </div>\n    </div>\n\n    <!-- Таблица для особых дней -->\n    <div class=\"bg-white radius-small pd-small mn-b-small\">\n      <div class=\"mn-b-small flex flex-nowrap flex-v-center\">\n        <h5 class=\"mn-r-auto\">{{ t('workingHours.specialDays') }}</h5>\n        <Button \n          class=\"bg-light mn-l-small\"\n          :submit=\"addSpecialDay\"\n          :showSucces=\"false\" \n          :showLoader=\"false\"\n        >\n          {{ t('workingHours.addSpecialDay') }}\n        </Button>\n      </div>\n      <div v-if=\"worktime.special && worktime.special.length > 0\" class=\"special-schedule mn-b-small\">\n        <div \n          v-for=\"(day, index) in worktime.special\" \n          :key=\"`special-${index}`\" \n          class=\"schedule-item pd-small mn-b-small flex flex-v-center flex-nowrap\"\n          :class=\"index % 2 === 0 ? 'bg-light' : ''\"\n        >\n          <div class=\"day-info flex-child-1\">\n            <div class=\"flex flex-nowrap flex-v-center\">\n              <div class=\"day-name t-semi\">{{ formatDate(day.date) }}</div>\n              <div v-if=\"day.description\" class=\"t-small t-transp mn-l-small\">({{ day.description }})</div>\n            </div>\n            <div class=\"day-hours\" v-if=\"day.isOpen && day.periods && day.periods.length > 0\">\n              <template v-for=\"(period, pIndex) in day.periods\" :key=\"`special-period-${pIndex}`\">\n                <span class=\"period t-small t-transp\">\n                  {{ period.open }} - {{ period.close }}\n                </span>\n                <span v-if=\"pIndex < day.periods.length - 1\" class=\"t-small t-transp\">, </span>\n              </template>\n            </div>\n            <div v-else class=\"day-hours t-small t-transp t-red\">\n              {{ t('workingHours.closed') }}\n            </div>\n          </div>\n          <div class=\"day-actions flex-nowrap flex gap-small\">\n            <Button \n              class=\"pd-micro bg-light\"\n              :submit=\"() => editSpecialDay(index)\"\n              :showSucces=\"false\" \n              :showLoader=\"false\"\n            >\n              {{ t('workingHours.edit') }}\n            </Button>\n            <Button \n              class=\"pd-micro bg-fourth-nano\"\n              :submit=\"() => removeSpecialDay(index)\"\n              :showSucces=\"false\" \n              :showLoader=\"false\"\n            >\n              {{ t('workingHours.remove') }}\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div v-else class=\"empty-schedule bg-light pd-medium radius-small t-center\">\n        {{ t('workingHours.noSpecialDays') }}\n      </div>\n    </div>\n\n    <!-- Модальное окно для добавления/редактирования регулярного дня -->\n    <Popup \n      :isPopupOpen=\"showRegularDayModal\" \n      @close-popup=\"showRegularDayModal = false\"\n      :title=\"editingRegularIndex !== null ? t('workingHours.editRegularDay') : t('workingHours.addRegularDay')\"\n      class=\"bg-white pd-semi w-m-33r radius-big\"\n    >\n      <div class=\"schedule-editor\">\n        <Select \n          v-model:select=\"currentRegularDay.dayOfWeek\"\n          value=\"text\"\n          :options=\"availableWeekdays\"\n          property=\"value\"\n          class=\"pos-relative w-100 mn-b-small bg-light radius-small pd-medium\"\n        />\n\n        <Checkbox \n          :label=\"t('workingHours.isOpen')\"\n          name=\"isOpenRegular\"\n          :value=\"true\"\n          :radio=\"currentRegularDay.isOpen\"\n          @update:radio=\"val => currentRegularDay.isOpen = val\"\n          class=\"w-100 mn-b-small bg-light radius-small pd-small\"\n        />\n        \n        <div v-if=\"currentRegularDay.isOpen\">\n          <div class=\"flex flex-nowrap flex-v-center mn-b-small\">\n            <h5 class=\"mn-r-auto\">{{ t('workingHours.periods') }}</h5>\n            <Button \n              class=\"pd-micro bg-light\"\n              :submit=\"addPeriodToRegular\"\n              :showSucces=\"false\" \n              :showLoader=\"false\"\n            >\n              {{ t('workingHours.addPeriod') }}\n            </Button>\n          </div>\n          \n          <div v-if=\"validationErrors.overlappingPeriods\" class=\"error-message mn-b-small pd-small radius-small bg-fourth-nano\">\n            {{ t('workingHours.errorOverlappingPeriods') }}\n          </div>\n          \n          <div \n            v-for=\"(period, pIndex) in currentRegularDay.periods\" \n            :key=\"`edit-period-${pIndex}`\"\n            class=\"period-row mn-b-small flex flex-nowrap gap-small\"\n          >\n            <div class=\"flex-child-1 time-inputs cols-2 gap-small\">\n              <Field \n                v-model:field=\"period.open\"\n                :label=\"t('workingHours.opens')\"\n                type=\"time\"\n                class=\"bg-light radius-small pd-medium\"\n                @blur=\"validatePeriods\"\n              />\n              <Field \n                v-model:field=\"period.close\"\n                :label=\"t('workingHours.closes')\"\n                type=\"time\"\n                class=\"bg-light radius-small pd-medium\"\n                @blur=\"validatePeriods\"\n              />\n            </div>\n            <Button \n              v-if=\"currentRegularDay.periods.length > 1\"\n              class=\"pd-micro bg-fourth-nano\"\n              :submit=\"() => removeRegularPeriod(pIndex)\"\n              :showSucces=\"false\" \n              :showLoader=\"false\"\n            >\n              {{ t('workingHours.remove') }}\n            </Button>\n          </div>\n        </div>\n        \n        <div class=\"button-group flex flex-nowrap gap-small mn-t-medium\">\n          <Button \n            class=\"w-100 bg-light\"\n            :submit=\"() => showRegularDayModal = false\"\n            :showSucces=\"false\" \n            :showLoader=\"false\"\n          >\n            {{ t('workingHours.cancel') }}\n          </Button>\n          <Button \n            class=\"w-100 bg-main\"\n            :submit=\"saveRegularDay\"\n            :showSucces=\"false\"\n            :disabled=\"!isValidRegularDay\"\n          >\n            {{ t('workingHours.save') }}\n          </Button>\n        </div>\n      </div>\n    </Popup>\n\n    <!-- Модальное окно для добавления/редактирования особого дня -->\n    <Popup \n      :isPopupOpen=\"showSpecialDayModal\" \n      @close-popup=\"showSpecialDayModal = false\"\n      :title=\"editingSpecialIndex !== null ? t('workingHours.editSpecialDay') : t('workingHours.addSpecialDay')\"\n      class=\"bg-white pd-semi w-m-33r radius-big\"\n    >\n      <div class=\"schedule-editor\">\n        <Field \n          v-model:field=\"currentSpecialDay.dateInput\"\n          :label=\"t('workingHours.date')\"\n          type=\"date\"\n          class=\"bg-light radius-small pd-medium mn-b-small\"\n          @blur=\"validateSpecialDate\"\n        />\n        \n        <div v-if=\"validationErrors.duplicateDate\" class=\"error-message mn-b-small pd-small radius-small bg-fourth-nano\">\n          {{ t('workingHours.errorDuplicateDate') }}\n        </div>\n        \n        <Field \n          v-model:field=\"currentSpecialDay.description\"\n          :label=\"t('workingHours.description')\"\n          :placeholder=\"t('workingHours.descriptionPlaceholder')\"\n          class=\"bg-light radius-small pd-medium mn-b-small\"\n        />\n\n        <Checkbox \n          :label=\"t('workingHours.isOpen')\"\n          name=\"isOpenSpecial\"\n          :value=\"true\"\n          :radio=\"currentSpecialDay.isOpen\"\n          @update:radio=\"val => currentSpecialDay.isOpen = val\"\n          class=\"w-100 mn-b-small bg-white radius-small pd-small\"\n        />\n        \n        <div v-if=\"currentSpecialDay.isOpen\">\n          <div class=\"flex flex-nowrap flex-v-center mn-b-small\">\n            <h5 class=\"mn-r-auto\">{{ t('workingHours.periods') }}</h5>\n            <Button \n              class=\"pd-micro bg-light\"\n              :submit=\"addPeriodToSpecial\"\n              :showSucces=\"false\" \n              :showLoader=\"false\"\n            >\n              {{ t('workingHours.addPeriod') }}\n            </Button>\n          </div>\n          \n          <div v-if=\"validationErrors.overlappingPeriods\" class=\"error-message mn-b-small pd-small radius-small bg-fourth-nano\">\n            {{ t('workingHours.errorOverlappingPeriods') }}\n          </div>\n          \n          <div \n            v-for=\"(period, pIndex) in currentSpecialDay.periods\" \n            :key=\"`edit-special-period-${pIndex}`\"\n            class=\"period-row mn-b-small flex flex-nowrap gap-small\"\n          >\n            <div class=\"flex-child-1 time-inputs cols-2 gap-small\">\n              <Field \n                v-model:field=\"period.open\"\n                :label=\"t('workingHours.opens')\"\n                type=\"time\"\n                class=\"bg-light radius-small pd-medium\"\n                @blur=\"validatePeriods\"\n              />\n              <Field \n                v-model:field=\"period.close\"\n                :label=\"t('workingHours.closes')\"\n                type=\"time\"\n                class=\"bg-light radius-small pd-medium\"\n                @blur=\"validatePeriods\"\n              />\n            </div>\n            <Button \n              v-if=\"currentSpecialDay.periods.length > 1\"\n              class=\"pd-micro bg-fourth-nano\"\n              :submit=\"() => removeSpecialPeriod(pIndex)\"\n              :showSucces=\"false\" \n              :showLoader=\"false\"\n            >\n              {{ t('workingHours.remove') }}\n            </Button>\n          </div>\n        </div>\n        \n        <div class=\"button-group flex flex-nowrap gap-small mn-t-medium\">\n          <Button \n            class=\"w-100 bg-light\"\n            :submit=\"() => showSpecialDayModal = false\"\n            :showSucces=\"false\" \n            :showLoader=\"false\"\n          >\n            {{ t('workingHours.cancel') }}\n          </Button>\n          <Button \n            class=\"w-100 bg-main\"\n            :submit=\"saveSpecialDay\"\n            :showSucces=\"false\"\n            :disabled=\"!isValidSpecialDay\"\n          >\n            {{ t('workingHours.save') }}\n          </Button>\n        </div>\n      </div>\n    </Popup>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, watch, onMounted } from 'vue';\nimport { useI18n } from 'vue-i18n';\n\nimport Button from '@martyrs/src/components/Button/Button.vue';\nimport Field from '@martyrs/src/components/Field/Field.vue';\nimport Select from '@martyrs/src/components/Select/Select.vue';\nimport Checkbox from '@martyrs/src/components/Checkbox/Checkbox.vue';\nimport Popup from '@martyrs/src/components/Popup/Popup.vue';\n\nconst worktime = defineModel('worktime')\nconst emit = defineEmits(['update:worktime']);\n\n// i18n\nconst { t, locale } = useI18n({\n  messages: {\n    en: {\n      workingHours: {\n        title: 'Working Hours',\n        regularSchedule: 'Regular Schedule',\n        specialDays: 'Special Days',\n        addRegularDay: 'Add Day',\n        addSpecialDay: 'Add Day',\n        editRegularDay: 'Edit Regular Day',\n        editSpecialDay: 'Edit Special Day',\n        save: 'Save',\n        cancel: 'Cancel',\n        edit: 'Edit',\n        remove: 'Remove',\n        weekday: 'Weekday',\n        date: 'Date',\n        isOpen: 'Open on this day',\n        description: 'Description',\n        descriptionPlaceholder: 'Holiday, Special event, etc.',\n        periods: 'Operating Hours',\n        addPeriod: 'Add Period',\n        opens: 'Opens at',\n        closes: 'Closes at',\n        closed: 'Closed',\n        noRegularSchedule: 'No regular schedule set. Add working days to define your regular hours.',\n        noSpecialDays: 'No special days set. Add special days for holidays or events.',\n        errorDuplicateDate: 'This date already exists in special days.',\n        errorOverlappingPeriods: 'Time periods cannot overlap.',\n        selectDate: 'Please select a date.',\n        errorInvalidPeriod: 'Invalid time period. Closing time must be after opening time.'\n      }\n    },\n    ru: {\n      workingHours: {\n        title: 'Часы работы',\n        regularSchedule: 'Регулярное расписание',\n        specialDays: 'Особые дни',\n        addRegularDay: 'Добавить день',\n        addSpecialDay: 'Добавить особый день',\n        editRegularDay: 'Изменить рабочий день',\n        editSpecialDay: 'Изменить особый день',\n        save: 'Сохранить',\n        cancel: 'Отмена',\n        edit: 'Изменить',\n        remove: 'Удалить',\n        weekday: 'День недели',\n        date: 'Дата',\n        isOpen: 'Открыто в этот день',\n        description: 'Описание',\n        descriptionPlaceholder: 'Праздник, особое событие и т.д.',\n        periods: 'Часы работы',\n        addPeriod: 'Добавить период',\n        opens: 'Открывается в',\n        closes: 'Закрывается в',\n        closed: 'Закрыто',\n        noRegularSchedule: 'Регулярное расписание не установлено. Добавьте рабочие дни для определения регулярных часов.',\n        noSpecialDays: 'Особые дни не установлены. Добавьте особые дни для праздников или событий.',\n        errorDuplicateDate: 'Эта дата уже существует в особых днях.',\n        errorOverlappingPeriods: 'Временные периоды не могут пересекаться.',\n        selectDate: 'Пожалуйста, выберите дату.',\n        errorInvalidPeriod: 'Недопустимый временной период. Время закрытия должно быть после времени открытия.'\n      }\n    }\n  }\n});\n\n// Форматирование даты с использованием браузерных API\nconst formatDate = (date) => {\n  if (!date) return '';\n  const dateObj = new Date(date);\n  return new Intl.DateTimeFormat(locale.value, {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  }).format(dateObj);\n};\n\n// Получение названия дня недели по номеру\nconst getWeekdayName = (dayNumber) => {\n  if (dayNumber === undefined || dayNumber === null) return '';\n  \n  // Создаем дату с известным начальным днем недели (1 января 2023 - воскресенье)\n  const date = new Date(2023, 0, 1 + dayNumber);\n  \n  return new Intl.DateTimeFormat(locale.value, { weekday: 'long' }).format(date);\n};\n\n// Состояние для модальных окон\nconst showRegularDayModal = ref(false);\nconst showSpecialDayModal = ref(false);\n\n// Индексы для редактирования\nconst editingRegularIndex = ref(null);\nconst editingSpecialIndex = ref(null);\n\n// Валидация\nconst validationErrors = ref({\n  overlappingPeriods: false,\n  duplicateDate: false,\n  invalidPeriod: false\n});\n\n// Текущие значения для редактирования\nconst currentRegularDay = ref({\n  dayOfWeek: 1, // Понедельник по умолчанию\n  isOpen: true,\n  periods: [{\n    open: '09:00',\n    close: '18:00'\n  }]\n});\n\nconst currentSpecialDay = ref({\n  dateInput: '', // Для ввода даты в формате YYYY-MM-DD\n  date: null,\n  description: '',\n  isOpen: false,\n  periods: [{\n    open: '09:00',\n    close: '18:00'\n  }]\n});\n\n// Список доступных дней недели (0-6)\nconst weekdays = [0, 1, 2, 3, 4, 5, 6];\n\n// Получаем доступные дни недели (исключая те, которые уже добавлены)\nconst availableWeekdays = computed(() => {\n  const usedDays = new Set((worktime.value?.regular || []).map(d => d.dayOfWeek));\n  \n  // Фильтруем дни, которые еще не добавлены или это текущий редактируемый день\n  return weekdays\n    .filter(day => \n      !usedDays.has(day) || \n      (editingRegularIndex.value !== null && \n       worktime.value?.regular[editingRegularIndex.value]?.dayOfWeek === day)\n    )\n    .map(day => ({\n      text: getWeekdayName(day),\n      value: day\n    }));\n});\n\n// Проверка валидности текущего состояния\nconst isValidRegularDay = computed(() => {\n  return !validationErrors.value.overlappingPeriods && !validationErrors.value.invalidPeriod;\n});\n\nconst isValidSpecialDay = computed(() => {\n  return !validationErrors.value.duplicateDate && \n         !validationErrors.value.overlappingPeriods && \n         !validationErrors.value.invalidPeriod && \n         !!currentSpecialDay.value.dateInput;\n});\n\n// Функции добавления дней\nconst addRegularDay = () => {\n  editingRegularIndex.value = null;\n  currentRegularDay.value = {\n    dayOfWeek: availableWeekdays.value[0]?.value ?? 1,\n    isOpen: true,\n    periods: [{\n      open: '09:00',\n      close: '18:00'\n    }]\n  };\n  validationErrors.value = {\n    overlappingPeriods: false,\n    duplicateDate: false,\n    invalidPeriod: false\n  };\n  showRegularDayModal.value = true;\n};\n\nconst addSpecialDay = () => {\n  editingSpecialIndex.value = null;\n  // Устанавливаем текущую дату по умолчанию\n  const today = new Date();\n  const todayFormatted = `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}-${String(today.getDate()).padStart(2, '0')}`;\n  \n  currentSpecialDay.value = {\n    dateInput: todayFormatted,\n    date: today,\n    description: '',\n    isOpen: false,\n    periods: [{\n      open: '09:00',\n      close: '18:00'\n    }]\n  };\n  \n  validationErrors.value = {\n    overlappingPeriods: false,\n    duplicateDate: false,\n    invalidPeriod: false\n  };\n  \n  showSpecialDayModal.value = true;\n  \n  // Сразу проверяем на дублирование даты\n  validateSpecialDate();\n};\n\n// Валидация периодов (проверка на пересечение)\nconst validatePeriods = () => {\n  const periods = showRegularDayModal.value ? \n                 currentRegularDay.value.periods : \n                 currentSpecialDay.value.periods;\n  \n  if (!periods || periods.length <= 1) {\n    validationErrors.value.overlappingPeriods = false;\n    validationErrors.value.invalidPeriod = false;\n    return;\n  }\n  \n  // Проверка на недопустимые периоды (конец раньше начала)\n  validationErrors.value.invalidPeriod = periods.some(period => \n    period.open >= period.close\n  );\n  \n  if (validationErrors.value.invalidPeriod) {\n    return;\n  }\n  \n  // Сортируем периоды по времени начала\n  const sortedPeriods = [...periods].sort((a, b) => a.open.localeCompare(b.open));\n  \n  // Проверяем пересечения\n  for (let i = 0; i < sortedPeriods.length - 1; i++) {\n    if (sortedPeriods[i].close > sortedPeriods[i + 1].open) {\n      validationErrors.value.overlappingPeriods = true;\n      return;\n    }\n  }\n  \n  validationErrors.value.overlappingPeriods = false;\n};\n\n// Валидация даты для особого дня (проверка на дублирование)\nconst validateSpecialDate = () => {\n  if (!currentSpecialDay.value.dateInput) {\n    validationErrors.value.duplicateDate = false;\n    return;\n  }\n  \n  const newDateObj = new Date(currentSpecialDay.value.dateInput);\n  newDateObj.setHours(0, 0, 0, 0); // Нормализуем время\n  \n  const isDuplicate = worktime.value.special.some((specialDay, index) => {\n    if (editingSpecialIndex.value === index) return false; // Пропускаем текущий редактируемый день\n    \n    const existingDate = new Date(specialDay.date);\n    existingDate.setHours(0, 0, 0, 0); // Нормализуем время\n    \n    return existingDate.getTime() === newDateObj.getTime();\n  });\n  \n  validationErrors.value.duplicateDate = isDuplicate;\n};\n\n// Методы для работы с регулярными днями\nconst editRegularDay = (index) => {\n  editingRegularIndex.value = index;\n  const day = JSON.parse(JSON.stringify(worktime.value.regular[index]));\n  \n  // Если нет периодов, добавляем пустой\n  if (!day.periods || day.periods.length === 0) {\n    day.periods = [{\n      open: '09:00',\n      close: '18:00'\n    }];\n  }\n  \n  currentRegularDay.value = day;\n  validationErrors.value = {\n    overlappingPeriods: false,\n    duplicateDate: false,\n    invalidPeriod: false\n  };\n  showRegularDayModal.value = true;\n  \n  // Валидируем периоды\n  validatePeriods();\n};\n\nconst removeRegularDay = (index) => {\n  const updatedWorktime = { ...worktime.value };\n  updatedWorktime.regular.splice(index, 1);\n  emit('update:worktime', updatedWorktime);\n};\n\nconst saveRegularDay = () => {\n  // Проверяем валидность\n  validatePeriods();\n  if (!isValidRegularDay.value) {\n    return;\n  }\n  \n  // Копируем текущее значение модели\n  const updatedWorktime = JSON.parse(JSON.stringify(worktime.value));\n  \n  // Убеждаемся, что regular существует\n  if (!updatedWorktime.regular) {\n    updatedWorktime.regular = [];\n  }\n  \n  // Копируем текущий день\n  const dayToSave = { ...currentRegularDay.value };\n  \n  // Если день закрыт, удаляем периоды\n  if (!dayToSave.isOpen) {\n    dayToSave.periods = [];\n  }\n  \n  // Обновляем или добавляем\n  if (editingRegularIndex.value !== null) {\n    updatedWorktime.regular[editingRegularIndex.value] = dayToSave;\n  } else {\n    updatedWorktime.regular.push(dayToSave);\n  }\n  \n  // Сортируем по дням недели\n  updatedWorktime.regular.sort((a, b) => a.dayOfWeek - b.dayOfWeek);\n  \n  // Обновляем модель\n  worktime.value = updatedWorktime\n  emit('update:worktime', updatedWorktime);\n  showRegularDayModal.value = false;\n};\n\nconst addPeriodToRegular = () => {\n  currentRegularDay.value.periods.push({\n    open: '09:00',\n    close: '18:00'\n  });\n  validatePeriods();\n};\n\nconst removeRegularPeriod = (index) => {\n  currentRegularDay.value.periods.splice(index, 1);\n  validatePeriods();\n};\n\n// Методы для работы с особыми днями\nconst editSpecialDay = (index) => {\n  editingSpecialIndex.value = index;\n  const day = JSON.parse(JSON.stringify(worktime.value.special[index]));\n  \n  // Форматируем дату для поля ввода\n  const date = new Date(day.date);\n  const dateForInput = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\n  \n  // Если нет периодов, добавляем пустой\n  if (!day.periods || day.periods.length === 0) {\n    day.periods = [{\n      open: '09:00',\n      close: '18:00'\n    }];\n  }\n  \n  currentSpecialDay.value = {\n    ...day,\n    dateInput: dateForInput\n  };\n  \n  validationErrors.value = {\n    overlappingPeriods: false,\n    duplicateDate: false,\n    invalidPeriod: false\n  };\n  showSpecialDayModal.value = true;\n  \n  // Валидируем периоды\n  validatePeriods();\n};\n\nconst removeSpecialDay = (index) => {\n  const updatedWorktime = { ...worktime.value };\n  updatedWorktime.special.splice(index, 1);\n  emit('update:worktime', updatedWorktime);\n};\n\nconst saveSpecialDay = () => {\n  // Проверяем валидность\n  validateSpecialDate();\n  validatePeriods();\n  \n  if (!isValidSpecialDay.value) {\n    if (!currentSpecialDay.value.dateInput) {\n      alert(t('workingHours.selectDate'));\n    }\n    return;\n  }\n  \n  // Копируем текущее значение модели\n  const updatedWorktime = JSON.parse(JSON.stringify(worktime.value));\n  \n  // Убеждаемся, что special существует\n  if (!updatedWorktime.special) {\n    updatedWorktime.special = [];\n  }\n  \n  // Преобразуем дату из input в объект Date\n  const dateParts = currentSpecialDay.value.dateInput.split('-');\n  const specialDate = new Date(\n    parseInt(dateParts[0]), \n    parseInt(dateParts[1]) - 1, \n    parseInt(dateParts[2])\n  );\n  \n  // Копируем текущий день и обновляем дату\n  const dayToSave = { \n    ...currentSpecialDay.value,\n    date: specialDate\n  };\n  \n  // Удаляем вспомогательное поле\n  delete dayToSave.dateInput;\n  \n  // Если день закрыт, удаляем периоды\n  if (!dayToSave.isOpen) {\n    dayToSave.periods = [];\n  }\n  \n  // Обновляем или добавляем\n  if (editingSpecialIndex.value !== null) {\n    updatedWorktime.special[editingSpecialIndex.value] = dayToSave;\n  } else {\n    updatedWorktime.special.push(dayToSave);\n  }\n  \n  // Сортируем по датам\n  updatedWorktime.special.sort((a, b) => new Date(a.date) - new Date(b.date));\n  \n  // Обновляем модель\n  emit('update:worktime', updatedWorktime);\n  showSpecialDayModal.value = false;\n};\n\nconst addPeriodToSpecial = () => {\n  currentSpecialDay.value.periods.push({\n    open: '09:00',\n    close: '18:00'\n  });\n  validatePeriods();\n};\n\nconst removeSpecialPeriod = (index) => {\n  currentSpecialDay.value.periods.splice(index, 1);\n  validatePeriods();\n};\n\n// Инициализация значений при монтировании\nonMounted(() => {\n  // Проверяем, что начальное значение модели имеет правильную структуру\n  if (!worktime.value.regular || !worktime.value.special  ) worktime.value = {\n    regular: [],\n    special: []\n  }\n  // emit('update:worktime', worktime.value);\n});\n</script>\n\n<style scoped>\n.working-hours-editor {\n  border-radius: 8px;\n}\n\n.schedule-item {\n  transition: all 0.3s ease;\n  border-bottom: 1px solid rgba(var(--grey), 0.1);\n}\n\n.schedule-item:last-child {\n  border-bottom: none;\n}\n\n.period {\n  display: inline-block;\n}\n\n.empty-schedule {\n  color: rgba(var(--dark), 0.6);\n}\n\n.period-row {\n  align-items: center;\n}\n\n.error-message {\n  color: white;\n}\n</style>",
                "name": "WorktimeEdit.vue",
                "size": 26336,
                "type": "source"
              }
            ]
          }
        }
      },
      "wallet": {
        "controllers": {
          "factories": {
            "_files": [
              {
                "path": "../../src/modules/wallet/controllers/factories/payments.factory.js",
                "relativePath": "modules/wallet/controllers/factories/payments.factory.js",
                "extension": ".js",
                "content": "import * as QRCode from 'qrcode';\nconst controllerFactory = db => {\n  const Payment = db.payment;\n  const Wallet = db.wallet;\n  const Order = db.order;\n  const create = async (req, res) => {\n    let { amount, positions, userId } = req.body;\n    const newPayment = new Payment(req.body);\n    await newPayment.save();\n    const qrData = `PaymentID:${newPayment._id};Amount:${amount}`;\n    const qrCode = await QRCode.toDataURL(qrData);\n    res.send({ qrCode, paymentId: newPayment._id });\n  };\n  const read = async (req, res) => {\n    try {\n      const paymentes = await Payment.find({}).sort({ createdAt: 'desc' }).exec();\n      if (!paymentes) {\n        return res.status(404).send({ message: 'Paymentes not found.' });\n      }\n      res.status(200).send(paymentes);\n    } catch (err) {\n      res.status(500).send({ message: err.toString() });\n    }\n  };\n  const update = async (req, res) => {\n    const session = await db.mongoose.startSession();\n    session.startTransaction();\n    try {\n      const { paymentId, walletId } = req.body; // Теперь мы работаем с walletId\n      const payment = await Payment.findById(paymentId).session(session);\n      if (!payment) {\n        throw new Error('Payment not found');\n      }\n      if (payment.status !== 'pending') {\n        throw new Error('Payment is not in a pending state');\n      }\n      const wallet = await Wallet.findById(walletId).session(session);\n      if (!wallet) {\n        throw new Error('Wallet not found');\n      }\n      if (wallet.amount < payment.amount) {\n        throw new Error('Insufficient funds');\n      }\n      // Списание средств с кошелька\n      wallet.amount -= payment.amount;\n      await wallet.save({ session });\n      // Обновление статуса платежа\n      payment.status = 'completed';\n      await payment.save({ session });\n      await session.commitTransaction();\n      res.send('Payment processed successfully');\n    } catch (error) {\n      await session.abortTransaction();\n      res.status(500).send(error.message);\n    } finally {\n      session.endSession();\n    }\n  };\n  async function processPayment(paymentIntent) {\n    const paymentId = paymentIntent.id;\n    const paymentExists = await Payment.findOne({ paymentId });\n    // Check if the payment has been processed before\n    if (!paymentExists) {\n      try {\n        const newPayment = new Payment({\n          paymentId: paymentId,\n          status: 'processing',\n          metadata: paymentIntent.metadata, // Store any additional data needed\n        });\n        await newPayment.save();\n        // Update payment status to 'completed'\n        newPayment.status = 'completed';\n        await newPayment.save();\n      } catch (err) {\n        console.error('Failed to process payment intent:', err);\n        newPayment.status = 'failed';\n        await newPayment.save();\n      }\n    }\n  }\n  const deletePayment = (req, res) => {\n    Payment.findOneAndDelete({ _id: req.params._id }, (err, payment) => {\n      if (err) {\n        return res.status(500).send({ message: err });\n      }\n      if (!payment) {\n        return res.status(404).send({ message: 'Something wrong when deleting payment.' });\n      }\n      res.status(200).send(payment);\n    });\n  };\n  return {\n    create,\n    read,\n    update,\n    delete: deletePayment,\n  };\n};\nexport default controllerFactory;\n",
                "name": "payments.factory.js",
                "size": 3306,
                "type": "source"
              },
              {
                "path": "../../src/modules/wallet/controllers/factories/rewards.factory.js",
                "relativePath": "modules/wallet/controllers/factories/rewards.factory.js",
                "extension": ".js",
                "content": "import { BigNumber } from 'bignumber.js';\nimport { Types } from 'mongoose';\nconst ObjectId = { Types }.Types.ObjectId;\nBigNumber.config({\n  EXPONENTIAL_AT: [-1000, 2000],\n});\nconst VIEWS_REWARD_COEFF = '0.1';\nconst WDT_DECIMALS = 8;\nconst calculateRewardForPost = (snapshot, viewsCount, reactionsCount, commentsCount) => {\n  console.log('snapshot', snapshot);\n  if (snapshot) {\n    return new BigNumber(Math.max(viewsCount - snapshot.views, 0))\n      .multipliedBy(VIEWS_REWARD_COEFF)\n      .plus(Math.max(reactionsCount - snapshot.reactions, 0))\n      .plus(Math.max(commentsCount - snapshot.comments, 0));\n  }\n  return new BigNumber('10').plus(new BigNumber(viewsCount).multipliedBy(VIEWS_REWARD_COEFF)).plus(reactionsCount).plus(commentsCount);\n};\nconst rewardsControllerFactory = (db, wdmClient, wss) => {\n  const Blogpost = db.blogpost;\n  const Reaction = db.reaction;\n  const Comment = db.comment;\n  const Reward = db.reward;\n  const Wallet = db.wallet;\n  const lookup = {};\n  wss.on('connection', (ws, req) => {\n    ws.type = 'rewards';\n    if (req.userId) {\n      lookup[req.userId] = ws;\n      ws.on('close', () => {\n        delete lookup[req.userId];\n      });\n    }\n  });\n  const listRewards = async (req, res) => {\n    const userId = new ObjectId(req.userId);\n    try {\n      const aggregationResults = await Blogpost.aggregate([\n        // Соответствие блогпостов для данного пользователя\n        { $match: { 'creator.target': userId } },\n        // Добавление информации о реакциях и комментариях\n        {\n          $lookup: {\n            from: 'reactions',\n            localField: '_id',\n            foreignField: 'target',\n            as: 'reactions',\n          },\n        },\n        {\n          $lookup: {\n            from: 'comments',\n            localField: '_id',\n            foreignField: 'target',\n            as: 'comments',\n          },\n        },\n        // Добавление информации о предыдущей награде\n        {\n          $lookup: {\n            from: 'rewards',\n            let: { blogId: '$_id' },\n            pipeline: [\n              {\n                $match: {\n                  $expr: {\n                    $and: [{ $eq: ['$user', userId] }, { $eq: ['$type', 'blogpost'] }, { $eq: ['$target', '$$blogId'] }],\n                  },\n                },\n              },\n              { $sort: { createdAt: -1 } },\n              { $limit: 1 },\n            ],\n            as: 'previousReward',\n          },\n        },\n        // Преобразование результатов\n        {\n          $project: {\n            _id: 1,\n            user: req.userId,\n            type: 'blogpost',\n            views: 1,\n            reactionsCount: { $size: '$reactions' },\n            commentsCount: { $size: '$comments' },\n            previousReward: { $arrayElemAt: ['$previousReward', 0] },\n            name: 1,\n            content: 1,\n            url: 1,\n          },\n        },\n      ]);\n      const rewards = aggregationResults.map(result => ({\n        user: result.user,\n        type: result.type,\n        amount: calculateRewardForPost(result.previousReward?.snapshot, result.views, result.reactionsCount, result.commentsCount),\n        name: result.name,\n        content: result.content,\n        url: result.url,\n      }));\n      res.status(200).send(rewards);\n    } catch (error) {\n      res.status(500).send({ message: 'Произошла ошибка при получении наград', error: error.message });\n    }\n  };\n  const collectTokens = async (req, res) => {\n    const blogs = await Blogpost.find({ 'creator.target': req.userId }).exec();\n    let totalRewards = new BigNumber(0);\n    for (const blog of blogs) {\n      const reactions = await Reaction.countDocuments({ target: { $in: blog._id } }).exec();\n      const comments = await Comment.countDocuments({ target: { $in: blog._id } }).exec();\n      const previousReward = await Reward.findOne({\n        user: req.userId,\n        type: 'blogpost',\n        target: blog._id,\n      })\n        .sort({ createdAt: -1 })\n        .exec();\n      const reward = calculateRewardForPost(previousReward?.snapshot, blog.views, reactions, comments);\n      if (reward.gt(0)) {\n        totalRewards = totalRewards.plus(reward);\n        const snapshot = {\n          views: previousReward ? (previousReward.snapshot.views < blog.views ? blog.views : previousReward.snapshot.views) : blog.views,\n          reactions: previousReward ? (previousReward.snapshot.reactions < reactions ? reactions : previousReward.snapshot.reactions) : reactions,\n          comments: previousReward ? (previousReward.snapshot.comments < comments ? comments : previousReward.snapshot.comments) : comments,\n        };\n        await Reward.create({\n          user: req.userId,\n          type: 'blogpost',\n          target: blog._id,\n          amount: reward.toString(),\n          snapshot: snapshot,\n        });\n      }\n    }\n    if (totalRewards.gt(0)) {\n      await wdmClient.transfer(totalRewards.shiftedBy(WDT_DECIMALS).toString(), req.body.recipient, req.userId);\n    }\n    res.status(200).send();\n  };\n  const requestDeposit = async (req, res) => {\n    const response = await wdmClient.createDepositRequest(req.body.network, req.body.amount, req.body.token, req.userId);\n    res.status(200).send(response.data);\n  };\n  const cancelDeposit = async (req, res) => {\n    const response = await wdmClient.cancelDeposit(req.body.id, req.userId);\n    res.status(200).send(response.data);\n  };\n  const getDepositConfig = async (req, res) => {\n    const response = await wdmClient.getDepositConfig();\n    res.status(200).send(response.data);\n  };\n  const handleDepositUpdate = async (req, res) => {\n    if (req.body.status === 'TRANSFER_STATUS_COMPLETED') {\n      const userWallet = await Wallet.findOne({ owner: new ObjectId(req.body.user) });\n      const amount = new BigNumber(req.body.amount).shiftedBy(-WDT_DECIMALS).dividedBy(process.env.TOKEN_EXCHANGE_RATE).toString();\n      if (userWallet) {\n        const topupIndex = userWallet.balances.findIndex(b => b.name === 'WDT');\n        if (topupIndex < 0) {\n          userWallet.balances.push({ name: 'WDT', amount: +amount, locked_amount: 0 });\n        } else {\n          userWallet.balances[topupIndex] = {\n            name: 'WDT',\n            amount: userWallet.balances[topupIndex].amount + +amount,\n            locked_amount: userWallet.balances[topupIndex].locked_amount,\n          };\n        }\n        await userWallet.save();\n      } else {\n        await Wallet.create({\n          owner: new ObjectId(req.body.user),\n          balances: [{ name: 'WDT', amount: +amount, locked_amount: 0 }],\n        });\n      }\n    }\n    if (lookup[req.body.user]) {\n      lookup[req.body.user].send(JSON.stringify(req.body));\n    }\n    res.status(200).send();\n  };\n  return {\n    listRewards,\n    collectTokens,\n    requestDeposit,\n    getDepositConfig,\n    cancelDeposit,\n    handleDepositUpdate,\n  };\n};\nexport default rewardsControllerFactory;\n",
                "name": "rewards.factory.js",
                "size": 6888,
                "type": "source"
              }
            ]
          },
          "routes": {
            "_files": [
              {
                "path": "../../src/modules/wallet/controllers/routes/payments.routes.js",
                "relativePath": "modules/wallet/controllers/routes/payments.routes.js",
                "extension": ".js",
                "content": "import middlewareFactoryAuth from '@martyrs/src/modules/auth/controllers/middlewares/index.js';\nimport controllerFactoryTickets from '@martyrs/src/modules/events/controllers/tickets.controller.js';\nimport Observer from '@martyrs/src/modules/globals/controllers/classes/globals.observer.js';\nimport WebhookStripe from '@martyrs/src/modules/integrations/stripe/controllers/webhooks/stripe.webhook.js';\nimport controllerFactory from '../factories/payments.factory.js';\nexport default (function (app, db, origins, publicPath) {\n  const observer = new Observer();\n  const webhook = new WebhookStripe(app, db, observer);\n  const controller = controllerFactory(db);\n  console.log('payments ticket', publicPath);\n  const controllerTickets = controllerFactoryTickets(db, publicPath);\n  const { verifySignUp, verifyUser } = middlewareFactoryAuth(db);\n  observer.subscribe('checkout.session.completed', async paymentIntent => {\n    try {\n      const event = await db.event.findOne({ _id: paymentIntent.metadata.product });\n      if (!event) {\n        console.error('Event not found:', paymentIntent.metadata.product);\n        return;\n      }\n      // Найдем тип билета по metadata\n      const ticketType = event.ticketsTypes.find(type => type.name === paymentIntent.metadata.ticketType);\n      if (!ticketType) {\n        console.error('Ticket type not found:', paymentIntent.metadata.ticketType);\n        return;\n      }\n      // Расчет количества билетов\n      const quantity = paymentIntent.amount_total / (ticketType.price * 100);\n      console.log('Purchase details:');\n      console.log('Email:', paymentIntent.customer_details.email);\n      console.log('Name:', paymentIntent.customer_details.name);\n      console.log('Event ID:', paymentIntent.metadata.eventId);\n      console.log('Ticket Type:', ticketType.name);\n      console.log('Quantity:', quantity);\n      let ticketData = {\n        name: paymentIntent.customer_details.name,\n        email: paymentIntent.customer_details.email,\n        target: paymentIntent.metadata.product,\n        type: 'event',\n        seat: ticketType.name,\n        quantity: quantity,\n        price: ticketType.price,\n      };\n      await controllerTickets.saveAndSendTicket(ticketData);\n    } catch (error) {\n      console.error('Error processing checkout session:', error);\n    }\n  });\n  app.get('/api/payments/read', controller.read);\n  app.post('/api/payments/create', controller.create);\n  app.post('/api/payments/update', controller.update);\n  app.delete('/api/payments/delete', controller.delete);\n});\n",
                "name": "payments.routes.js",
                "size": 2536,
                "type": "source"
              },
              {
                "path": "../../src/modules/wallet/controllers/routes/rewards.routes.js",
                "relativePath": "modules/wallet/controllers/routes/rewards.routes.js",
                "extension": ".js",
                "content": "import middlewareFactoryAuth from '@martyrs/src/modules/auth/controllers/middlewares/index.js';\nimport rewardsControllerFactory from '../factories/rewards.factory.js';\nexport default (app, db, wss, wdmClient, origins) => {\n  const controller = rewardsControllerFactory(db, wdmClient, wss);\n  const { authJwt, authSecret } = middlewareFactoryAuth(db);\n  app.use((req, res, next) => {\n    const origin = req.headers.origin;\n    if (origins.includes(origin)) {\n      res.setHeader('Access-Control-Allow-Origin', origin);\n    }\n    res.header('Access-Control-Allow-Headers', 'x-access-token, Origin, Content-Type, Accept');\n    next();\n  });\n  app.get('/api/crypto/rewards', [authJwt.verifyToken], controller.listRewards);\n  app.post('/api/crypto/collect', [authJwt.verifyToken], controller.collectTokens);\n  app.post('/api/crypto/deposit', [authJwt.verifyToken], controller.requestDeposit);\n  app.post('/api/crypto/deposit/cancel', [authJwt.verifyToken], controller.cancelDeposit);\n  app.post('/api/crypto/deposit/update', [authSecret.verifySecret('POST', '/api/crypto/deposit/update', process.env.WDM_SECRET)], controller.handleDepositUpdate);\n  app.get('/api/crypto/deposit/config', [], controller.getDepositConfig);\n};\n",
                "name": "rewards.routes.js",
                "size": 1219,
                "type": "source"
              }
            ]
          }
        },
        "models": {
          "_files": [
            {
              "path": "../../src/modules/wallet/models/payment.model.js",
              "relativePath": "modules/wallet/models/payment.model.js",
              "extension": ".js",
              "content": "export default db => {\n  const PaymentSchema = new db.mongoose.Schema(\n    {\n      data: {\n        type: Object,\n      },\n      currency: {\n        type: String,\n      },\n      status: {\n        type: String,\n      },\n      customer: {\n        type: db.mongoose.Schema.Types.ObjectId,\n        ref: 'User',\n      },\n      creator: {\n        type: db.mongoose.Schema.Types.ObjectId,\n        ref: 'User',\n      },\n    },\n    {\n      timestamps: {\n        currentTime: () => Date.now(),\n      },\n    }\n  );\n  const Payment = db.mongoose.model('Payment', PaymentSchema);\n  return Payment;\n};\n",
              "name": "payment.model.js",
              "size": 587,
              "type": "source"
            },
            {
              "path": "../../src/modules/wallet/models/reward.model.js",
              "relativePath": "modules/wallet/models/reward.model.js",
              "extension": ".js",
              "content": "export default db => {\n  const RewardSchema = new db.mongoose.Schema(\n    {\n      user: {\n        type: db.mongoose.Schema.Types.ObjectId,\n        ref: () => {\n          if (this.owner.type === 'user') return 'User';\n          if (this.owner.type === 'organization') return 'Organization';\n        },\n        required: true,\n      },\n      type: {\n        type: String,\n        enum: ['blogpost', 'order'],\n        required: true,\n      },\n      target: {\n        type: db.mongoose.Schema.Types.ObjectId,\n        ref: () => {\n          if (this.owner.blogpost === 'blogpost') return 'Blogpost';\n          if (this.owner.blogpost === 'order') return 'Order';\n        },\n        required: true,\n      },\n      amount: {\n        type: String,\n        required: true,\n      },\n      snapshot: {\n        views: {\n          type: String,\n          required: true,\n        },\n        reactions: {\n          type: String,\n          required: true,\n        },\n        comments: {\n          type: String,\n          required: true,\n        },\n      },\n    },\n    {\n      timestamps: {\n        currentTime: () => Date.now(),\n      },\n    },\n    { strict: false }\n  );\n  return db.mongoose.model('Reward', RewardSchema);\n};\n",
              "name": "reward.model.js",
              "size": 1211,
              "type": "source"
            },
            {
              "path": "../../src/modules/wallet/models/wallet.model.js",
              "relativePath": "modules/wallet/models/wallet.model.js",
              "extension": ".js",
              "content": "export default db => {\n  const WalletSchema = new db.mongoose.Schema(\n    {\n      owner: {\n        type: db.mongoose.Schema.Types.ObjectId,\n        ref: () => {\n          if (this.owner.type === 'user') return 'User';\n          if (this.owner.type === 'organization') return 'Organization';\n        },\n        required: true,\n      },\n      balances: [\n        {\n          name: String, // Name of currency\n          amount: Number, // Amount\n          locked_amount: Number,\n        },\n      ],\n    },\n    {\n      timestamps: {\n        currentTime: () => Date.now(),\n      },\n    },\n    { strict: false }\n  );\n  return db.mongoose.model('Wallet', WalletSchema);\n};\n",
              "name": "wallet.model.js",
              "size": 666,
              "type": "source"
            }
          ]
        },
        "views": {
          "router": {
            "_files": [
              {
                "path": "../../src/modules/wallet/views/router/payments.router.js",
                "relativePath": "modules/wallet/views/router/payments.router.js",
                "extension": ".js",
                "content": "const payments = [\n  {\n    path: 'payments',\n    name: 'Payments',\n    meta: {\n      title: {\n        en: 'Payments',\n        ru: 'Платежами',\n      },\n      authorize: [],\n    },\n    component: () => import(/* webpackChunkName: 'Payments' */ '@martyrs/src/modules/wallet/views/components/pages/Payments.vue'),\n    children: [\n      {\n        path: 'create',\n        name: 'PaymentsCreate',\n        meta: {\n          title: {\n            en: 'Create Payment',\n            ru: 'Создать платеж',\n          },\n          authorize: [],\n        },\n        component: () => import(/* webpackChunkName: 'Payments' */ '@martyrs/src/modules/wallet/views/components/pages/Payments.vue'),\n        children: [],\n      },\n    ],\n  },\n];\n\nexport default payments;\n",
                "name": "payments.router.js",
                "size": 750,
                "type": "source"
              }
            ]
          },
          "store": {
            "_files": [
              {
                "path": "../../src/modules/wallet/views/store/payments.store.js",
                "relativePath": "modules/wallet/views/store/payments.store.js",
                "extension": ".js",
                "content": "import { setError } from '@martyrs/src/modules/globals/views/store/globals.js';\nimport axios from 'axios';\nimport { reactive, watch } from 'vue';\n\nconst $axios = axios.create({ baseURL: process.env.API_URL, withCredentials: true });\n\nconst state = reactive({\n  current: {\n    Status: '',\n  },\n  data: {},\n});\n\nconst actions = {\n  async read() {\n    try {\n      const response = await $axios.get(`/api/payments`);\n      state.data = response.data;\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n\n  async create(payment) {\n    try {\n      const response = await $axios.post(`/api/payments`, payment);\n      state.data[response.data._id] = response.data;\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n\n  async update(payment) {\n    try {\n      const response = await $axios.post(`/api/payments`, payment);\n      state.current = response.data;\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n\n  async delete(_id) {\n    try {\n      const response = await $axios.delete(`/api/payments`);\n      delete state.data[_id];\n      return response.data;\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  },\n};\n\nconst history = [];\nhistory.push(state);\n\nwatch(state, newState => {\n  history.push(newState);\n});\n\nexport { actions, state };\n",
                "name": "payments.store.js",
                "size": 1414,
                "type": "source"
              },
              {
                "path": "../../src/modules/wallet/views/store/wallet.store.js",
                "relativePath": "modules/wallet/views/store/wallet.store.js",
                "extension": ".js",
                "content": "import axios from 'axios';\nimport { BigNumber } from 'bignumber.js';\nimport { reactive } from 'vue';\n\nconst API_CRYPTO_PATH = '/api/crypto';\nconst WDT_SUPPLY = 20_000_000;\n\nconst $axios = axios.create({ baseURL: process.env.API_URL, withCredentials: true });\n\nconst state = reactive({\n  rewards: [],\n  tokenBalance: '0',\n  share: '0',\n  account: null,\n  web3: null,\n  depositInfo: null,\n  depositRequestIsActive: false,\n  websocket: null,\n  config: null,\n  chosenNetwork: null,\n});\n\nconst timer = reactive({ remaining: 0, interval: null });\n\nconst actions = {\n  loadConfig: async () => {\n    await $axios\n      .get(`${API_CRYPTO_PATH}/deposit/config`)\n      .then(r => {\n        state.config = r.data;\n        state.chosenNetwork = {\n          name: `polygon-WDT`,\n          value: {\n            token: state.config.polygon.tokens.WDT,\n            network: 'polygon',\n          },\n        };\n      })\n      .catch(e => console.error(e));\n  },\n\n  connectWebSocket: () => {\n    state.websocket = new WebSocket(process.env.WSS_URL);\n\n    state.websocket.onmessage = event => {\n      const message = JSON.parse(event.data);\n\n      if (message.id === state.depositInfo.id) {\n        const confirmations = state.depositInfo.confirmations;\n\n        state.depositInfo = message;\n        state.depositInfo.confirmations = confirmations;\n      }\n\n      if (message.hash === state.depositInfo.tx.hash) {\n        state.depositInfo.confirmations = message.confirmations;\n      }\n    };\n\n    state.websocket.onerror = err => console.error(err);\n  },\n\n  disconnectWebSocket: () => {\n    if (state.websocket) {\n      state.websocket.close();\n      state.websocket = null;\n    }\n  },\n\n  listRewards: async () => {\n    try {\n      const r = await $axios.get(`${API_CRYPTO_PATH}/rewards`);\n\n      state.rewards = r.data;\n      state.tokenBalance = r.data.reduce((acc, v) => acc.plus(v.amount), new BigNumber('0')).toString();\n\n      state.share = new BigNumber(state.tokenBalance).div(WDT_SUPPLY).multipliedBy(100).toFormat(6);\n    } catch (e) {\n      console.error(e);\n    }\n  },\n\n  collectRewards: async () => {\n    try {\n      await $axios.post(`${API_CRYPTO_PATH}/collect`, { recipient: state.account });\n      await actions.listRewards();\n    } catch (e) {\n      console.error(e);\n    }\n  },\n\n  disconnectWallet: async () => {\n    try {\n      await window.ethereum.request({\n        method: 'wallet_revokePermissions',\n        params: [{ eth_accounts: {} }],\n      });\n      state.account = null;\n    } catch (e) {\n      console.error(e);\n    }\n  },\n\n  connectWallet: async () => {\n    try {\n      const accounts = await state.web3.eth.requestAccounts();\n      state.account = accounts[0];\n    } catch (e) {\n      console.error(e);\n    }\n  },\n\n  tryReconnectWallet: async () => {\n    try {\n      const a = await state.web3.eth.getAccounts();\n      if (a.length > 0) {\n        await actions.connectWallet();\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  },\n\n  requestCryptoDeposit: async amount => {\n    state.depositRequestIsActive = true;\n\n    await $axios\n      .post(`${API_CRYPTO_PATH}/deposit`, {\n        network: state.chosenNetwork.value.network,\n        amount: new BigNumber(amount).shiftedBy(8).toString(),\n        token: state.chosenNetwork.value.token,\n      })\n      .then(r => {\n        state.depositInfo = r.data;\n\n        const createTimestamp = new Date(r.data.createdAt).getTime();\n        const dead = createTimestamp + state.config[state.chosenNetwork.value.network].waitingTime;\n        timer.remaining = Math.floor((dead - Date.now()) / 1000);\n\n        timer.interval = setInterval(() => {\n          timer.remaining -= 1;\n\n          if (timer.remaining === 0) {\n            clearInterval(timer.interval);\n          }\n        }, 1000);\n      })\n      .catch(e => console.error(e));\n\n    state.depositRequestIsActive = false;\n\n    actions.connectWebSocket();\n  },\n\n  stopTimer: () => {\n    clearInterval(timer.interval);\n  },\n\n  cancelDeposit: async () => {\n    await $axios\n      .post(`${API_CRYPTO_PATH}/deposit/cancel`, { id: state.depositInfo.id })\n      .then(() => actions.stopTimer())\n      .then(() => actions.disconnectWebSocket())\n      .catch(e => console.error(e));\n  },\n};\n\nexport { actions, state, timer };\n",
                "name": "wallet.store.js",
                "size": 4241,
                "type": "source"
              }
            ]
          },
          "components": {
            "blocks": {
              "_files": [
                {
                  "path": "../../src/modules/wallet/views/components/blocks/CardBalanceReplenished.vue",
                  "relativePath": "modules/wallet/views/components/blocks/CardBalanceReplenished.vue",
                  "extension": ".vue",
                  "content": "<template>\n  <h2 class=\"mn-b-small t-center t-bold\">{{ t('wallet.balanceReplenished') }}</h2>\n\n  <div class=\"radius-medium br-1px br-black br-solid pd-big flex flex-column flex-justify-center flex-items-center\">\n    <h3 class=\"t-semi\">\n      {{ t('wallet.youReceived') }}\n    </h3>\n    <h3 class=\"t-semi\">\n      {{ receiveAmount }} WDT\n    </h3>\n  </div>\n\n  <button\n    class=\"uppercase w-100 bg-main t-black pd-thin radius-medium t-center br-solid br-2px br-black-transp-10 mn-t-small\"\n    @click=\"close\"\n  >\n    {{ t('wallet.backToWallet') }}\n  </button>\n</template>\n\n<script setup>\n  import { useI18n } from 'vue-i18n'\n  import { computed } from 'vue'\n  import { BigNumber } from 'bignumber.js'\n\n  import text from '@martyrs/src/modules/wallet/views/localization/wallet.json'\n  import { state } from '@martyrs/src/modules/wallet/views/store/wallet.store';\n\n  const emits = defineEmits(['close'])\n\n  // Localization\n  const { t } = useI18n({\n    useScope: 'global', \n    ...text\n  })\n\n  const receiveAmount = computed(() =>\n    new BigNumber(state.depositInfo.amount)\n      .shiftedBy(-8)\n      .dividedBy(process.env.TOKEN_EXCHANGE_RATE)\n      .toString()\n  )\n\n  function close() {\n    emits(\"close\")\n  }\n</script>\n\n<style scoped>\n</style>\n",
                  "name": "CardBalanceReplenished.vue",
                  "size": 1243,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/wallet/views/components/blocks/CardDeposit.vue",
                  "relativePath": "modules/wallet/views/components/blocks/CardDeposit.vue",
                  "extension": ".vue",
                  "content": "<template>\n  <h2 class=\"mn-b-small t-center t-bold\">Deposit with card</h2>\n\n  <div class=\"bg-grey radius-big mn-t-semi mn-b-semi flex flex-justify-between\">\n    <Field\n      :placeholder=\"t('wallet.enterAmount')\"\n      class=\"pd-medium radius-small\"\n    />\n\n    <div class=\"uppercase flex flex-justify-center flex-items-center mn-r-semi t-semi\">\n      USD\n    </div>\n  </div>\n\n  <h3 class=\"t-semi\">You will receieve: 0 WDT</h3>\n\n  <button\n    class=\"uppercase w-100 bg-main t-black pd-thin radius-medium t-center br-solid br-2px br-black-transp-10 mn-t-small\"\n    @click=\"switchMenu(3)\"\n  >\n    {{ t('wallet.pay') }}\n  </button>\n\n  <button\n    class=\"uppercase w-100 bg-main t-black pd-thin radius-medium t-center br-solid br-2px br-black-transp-10 mn-t-small\"\n    @click=\"backSelection\"\n  >\n    {{ t('wallet.backToSelection') }}\n  </button>\n</template>\n\n<script setup>\n  import text from '@martyrs/src/modules/wallet/views/localization/wallet.json'\n  import Field from '@martyrs/src/components/Field/Field.vue'\n  import { useI18n } from 'vue-i18n'\n\n  const emits = defineEmits(['back-selection', 'switch-menu'])\n\n  // Localization\n  const { t } = useI18n({\n    useScope: 'global', \n    ...text\n  })\n\n  function backSelection() {\n    emits(\"back-selection\")\n  }\n\n  function switchMenu(screen = 0) {\n    emits(\"switch-menu\", screen)\n  }\n</script>\n\n<style scoped>\n</style>",
                  "name": "CardDeposit.vue",
                  "size": 1370,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/wallet/views/components/blocks/CashDeposit.vue",
                  "relativePath": "modules/wallet/views/components/blocks/CashDeposit.vue",
                  "extension": ".vue",
                  "content": "<template>\n  <h2 class=\"mn-b-small t-center t-bold\">Deposit with cash</h2>\n\n  <p class=\"t-transp t-center\">\n    You need to go to casse to topup balance\n  </p>\n\n  <div\n    class=\"w-100 bg-grey radius-medium mn-t-medium mn-b-medium\"\n    style=\"height: 152px\"\n  />\n\n  <button\n      class=\"w-100 bg-main t-black pd-thin radius-medium t-center br-solid br-2px br-black-transp-10 mn-t-small\"\n      @click=\"backSelection\">Back to selection\n  </button>\n</template>\n\n<script setup>\n  const emits = defineEmits(['back-selection'])\n\n  function backSelection() {\n    emits(\"back-selection\");\n  }\n</script>\n\n<style scoped>\n</style>",
                  "name": "CashDeposit.vue",
                  "size": 619,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/wallet/views/components/blocks/CryptoDeposit.vue",
                  "relativePath": "modules/wallet/views/components/blocks/CryptoDeposit.vue",
                  "extension": ".vue",
                  "content": "<template>\n  <h3 class=\"mn-b-small t-center t-bold\">{{ t('wallet.depositWithCrypto') }}</h3>\n\n  <Field \n    v-if=\"state.config\"\n    v-model:field=\"amount\"\n    :placeholder=\"t('wallet.enterAmount')\"\n    class=\"mn-b-thin bg-white w-100 br-solid br-1px br-black-transp-5 pd-small radius-small\" \n  >\n    <Select \n      :options=\"depositOptions\"\n      v-model:select=\"state.chosenNetwork\"\n      class=\"bg-light t-nowrap pd-r-thin pd-l-thin pd-t-nano pd-b-nano radius-thin\"\n    />\n  </Field>\n\n  <p class=\"t-semi\">You will receive: {{ receiveAmount }} {{t('wallet.token')}}</p>\n\n  <button\n    class=\"uppercase w-100 bg-main t-black pd-thin radius-medium t-center br-solid br-2px br-black-transp-10 mn-t-small\"\n    @click=\"actions.requestCryptoDeposit(amount).then(() => switchMenu(5))\"\n    :disabled=\"state.depositRequestIsActive || !state.config\"\n  >\n    {{ t('wallet.pay') }}\n  </button>\n\n  <button\n    class=\"uppercase w-100 t-center mn-t-small\"\n    @click=\"backSelection\"\n  >\n    {{ t('wallet.backToSelection') }}\n  </button>\n</template>\n\n<script setup>\n  import { useI18n } from 'vue-i18n'\n  import { ref, onMounted, computed } from 'vue';\n  import { BigNumber } from 'bignumber.js';\n\n  import { state, actions } from '@martyrs/src/modules/wallet/views/store/wallet.store';\n  import text from '@martyrs/src/modules/wallet/views/localization/wallet.json'\n  import Field from '@martyrs/src/components/Field/Field.vue'\n  import Select from '@martyrs/src/components/Select/Select.vue'\n\n  BigNumber.config({\n    EXPONENTIAL_AT: [-1000, 20000]\n  });\n\n  const amount = ref(1);\n  const emits = defineEmits(['back-selection', 'switch-menu'])\n\n  // Localization\n  const { t } = useI18n({\n    useScope: 'global', \n    ...text\n  })\n\n  const receiveAmount = computed(() =>\n    new BigNumber(amount.value)\n      .dividedBy(process.env.TOKEN_EXCHANGE_RATE)\n      .toString()\n  )\n\n  const depositOptions = computed(() => {\n    const options = [];\n\n    const networks = Object.keys(state.config || {});\n\n    for (const network of networks) {\n      for (const token of Object.keys(state.config[network].tokens)) {\n        options.push({\n          name: `${network}-${token}`,\n          value: {\n            token: state.config[network].tokens[token],\n            network: network\n          }\n        });\n      }\n    }\n\n    return options;\n  });\n\n  onMounted(() => {\n    actions.loadConfig();\n  })\n\n  function backSelection() {\n    emits(\"back-selection\")\n  }\n\n  function switchMenu(screen = 0) {\n    emits(\"switch-menu\", screen)\n  }\n</script>\n\n<style scoped>\n</style>",
                  "name": "CryptoDeposit.vue",
                  "size": 2547,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/wallet/views/components/blocks/CryptoDepositProcessing.vue",
                  "relativePath": "modules/wallet/views/components/blocks/CryptoDepositProcessing.vue",
                  "extension": ".vue",
                  "content": "<template>\n  <h2 class=\"mn-b-small t-center t-bold\">{{ t('wallet.depositWithCrypto') }}</h2>\n\n  <div class=\"flex flex-justify-between\">\n    <h3 class=\"t-semi\">Amount: {{ amount }} {{ state.chosenNetwork.name.toUpperCase() }}</h3>\n    <button\n      class=\"uppercase t-main cursor-pointer\"\n      @click=\"() => copy(amount)\"\n    >\n      copy\n    </button>\n  </div>\n\n  <div class=\"flex flex-justify-between\">\n    <h3 class=\"t-semi t-truncate address\">Wallet: {{ state.depositInfo.to }}</h3>\n    <button\n      class=\"uppercase t-main cursor-pointer\"\n      @click=\"() => copy(state.depositInfo.to)\"\n    >\n      copy\n    </button>\n  </div>\n\n  <div class=\"flex flex-justify-around radius-big br-solid br-2px br-black-transp-10\">\n    <canvas id=\"qrcode_address_deposit\"></canvas>\n  </div>\n\n  <div class=\"flex flex-justify-between\">\n    <h3 class=\"t-semi\">You will receive:</h3>\n    <h3 class=\"t-semi\">{{ receive }} WDT</h3>\n  </div>\n  <div v-if=\"state.depositInfo.status === 'TRANSFER_STATUS_WAITING_FOR_TX'\" class=\"flex flex-justify-between\">\n    <h3 class=\"t-semi\">Times left:</h3>\n    <h3 class=\"t-semi\">{{ remainingTime }}</h3>\n  </div>\n  <div class=\"flex flex-justify-between\">\n    <h3 class=\"t-semi\">Status:</h3>\n    <h3 class=\"t-semi\">{{ status }}</h3>\n  </div>\n\n  <button\n    v-if=\"state.depositInfo.status === 'TRANSFER_STATUS_WAITING_FOR_TX'\"\n    class=\"uppercase w-100 bg-main t-black pd-thin radius-medium t-center br-solid br-2px br-black-transp-10 mn-t-small\"\n    @click=\"actions.cancelDeposit().then(() => backSelection())\"\n  >\n    {{ t('wallet.cancel') }}\n  </button>\n</template>\n\n<script setup>\n  import QRCode from 'qrcode';\n  import { useI18n } from 'vue-i18n';\n  import { watch, computed, onMounted } from 'vue';\n  import { BigNumber } from 'bignumber.js';\n\n  import text from '@martyrs/src/modules/wallet/views/localization/wallet.json';\n  import { state, actions, timer } from '@martyrs/src/modules/wallet/views/store/wallet.store';\n\n  BigNumber.config({\n    EXPONENTIAL_AT: [-1000, 20000]\n  });\n\n  const emits = defineEmits(['back-selection', 'switch-menu']);\n\n  // Localization\n  const { t } = useI18n({\n    useScope: 'global',\n    ...text\n  });\n\n  const remainingTime = computed(() => {\n    const mins = Math.floor(timer.remaining / 60);\n    const secs = Math.floor(timer.remaining % 60);\n\n    return `${mins}:${secs < 10 ? `0${secs}` : secs}`;\n  });\n\n  const amount = computed(() =>\n    new BigNumber(state.depositInfo.amount)\n      .shiftedBy(-8)\n      .toString()\n  );\n\n  const receive = computed(() =>\n    new BigNumber(amount.value)\n      .dividedBy(process.env.TOKEN_EXCHANGE_RATE)\n      .toString()\n  )\n\n  const status = computed(() => {\n    switch (state.depositInfo.status) {\n      case 'TRANSFER_STATUS_WAITING_FOR_TX':\n        return 'Waiting for payment';\n      case 'TRANSFER_STATUS_SENT':\n        const confirmations = `${state.depositInfo.confirmations || 0} / ${state.config[state.chosenNetwork.value.network].confirmations}`;\n        return `Confirming (${confirmations})`;\n      default:\n        return 'Superposition.';\n    }\n  });\n\n  function backSelection() {\n    emits(\"back-selection\");\n  }\n\n  function switchMenu(screen = 0) {\n    emits(\"switch-menu\", screen);\n  }\n\n  function copy(text) {\n    navigator.clipboard.writeText(text);\n  }\n\n  onMounted(() => {\n    QRCode.toCanvas(\n      document.getElementById('qrcode_address_deposit'),\n      state.depositInfo.to,\n      { width: 300 },\n      (error) =>  { if (error) { console.error(error); } }\n    )\n  })\n\n  watch(\n    state,\n    async () => {\n      if (state.depositInfo.status === 'TRANSFER_STATUS_SENT') {\n        actions.stopTimer();\n      }\n\n      if (state.depositInfo.status === 'TRANSFER_STATUS_COMPLETED') {\n        actions.disconnectWebSocket();\n        switchMenu(3);\n      }\n    },\n    { deep: true },\n  )\n</script>\n\n<style scoped>\n  .address {\n    text-wrap: nowrap;\n    display: block;\n  }\n</style>",
                  "name": "CryptoDepositProcessing.vue",
                  "size": 3901,
                  "type": "source"
                }
              ]
            },
            "elements": {
              "_files": [
                {
                  "path": "../../src/modules/wallet/views/components/elements/ConnectMetamask.vue",
                  "relativePath": "modules/wallet/views/components/elements/ConnectMetamask.vue",
                  "extension": ".vue",
                  "content": "<template>\n  <div>\n    <!-- Connect Metamask -->\n    <button \n      v-if=\"!isMetaMaskInstalled\"\n      @click=\"connectMetaMask\" \n      class=\"transition-ease-in-out cursor-pointer bg-black radius-big flex-v-center flex-nowrap flex t-left uppercase w-100 pd-small t-white\"\n    >\n      <img loading=\"lazy\" :src=\"metamaskIcon\" class=\"mn-r-small i-big\">\n      <span class=\"h4 uppercase w-100\">{{ t('connectMetaMask') }}</span>\n      <IconAdd class=\"t-transp\" fill=\"rgb(var(--white))\"/>\n    </button>\n    <template v-else>\n      <!-- Switch to Polygon -->\n      <button \n        v-if=\"!isPolygon\"\n        @click=\"switchToPolygon\" \n        class=\"transition-ease-in-out cursor-pointer hover-bg-white hover-t-black bg-black t-white radius-big flex-v-center flex-nowrap flex t-left uppercase w-100 pd-small\"\n      >\n        <img loading=\"lazy\" :src=\"metamaskIcon\" class=\"mn-r-small i-big\">\n        <span class=\"h4 uppercase w-100\">{{ t('switchToPolygon') }}</span>\n        <IconAdd class=\"t-transp\" fill=\"rgb(var(--white))\"/>\n      </button>\n      <!-- Add Token to metamask -->\n      <button \n        v-if=\"isPolygon\"\n        @click=\"addToken\" \n        class=\"transition-ease-in-out cursor-pointer hover-bg-white hover-t-black bg-black radius-big flex-v-center flex-nowrap flex t-left uppercase w-100 pd-small t-white\"\n      >\n        <img loading=\"lazy\" :src=\"metamaskIcon\" class=\"mn-r-small i-big\">\n        <span class=\"h4 uppercase w-100\">{{ t('addToken') }}</span>\n        <IconAdd class=\"hover-fill-black fill-white t-transp\"/>\n      </button>\n    </template>\n    <p class=\"mn-t-small\" v-if=\"error\">{{ error }}</p>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, computed } from 'vue';\nimport { useI18n } from 'vue-i18n';\n\nimport IconAdd from '@martyrs/src/modules/icons/navigation/IconAdd.vue';\n\nconst props = defineProps({\n  // Token configuration\n  tokenAddress: {\n    type: String,\n    required: true\n  },\n  tokenSymbol: {\n    type: String,\n    required: true\n  },\n  tokenImage: {\n    type: String,\n    required: true\n  },\n  tokenDecimals: {\n    type: Number,\n    default: 18\n  },\n  // Chain configuration\n  targetChainId: {\n    type: String,\n    default: '0x89' // Polygon Mainnet by default\n  },\n  // UI configuration\n  metamaskIcon: {\n    type: String,\n    default: '/icons/metamask.svg'\n  },\n  content: {\n    type: Object,\n    default: () => ({\n      en: {\n        \"connectMetaMask\": \"Connect MetaMask\",\n        \"switchToPolygon\": \"Switch to Polygon\",\n        \"addToken\": `Add token to MetaMask`,\n      }\n    })\n  }\n});\n\nconst isMetaMaskInstalled = ref(false);\nconst isPolygon = ref(false);\nconst loading = ref(false);\nconst error = ref(null);\nconst buttonStyle = ref({});\n\nconst connectMetaMask = async () => {\n  if (typeof window.ethereum !== 'undefined') {\n    try {\n      await window.ethereum.request({ method: 'eth_requestAccounts' });\n      checkMetaMask();\n    } catch (err) {\n      error.value = err.message;\n      console.error('Error connecting to MetaMask:', err);\n    }\n  } else {\n    window.open('https://metamask.io/', '_blank');\n  }\n};\n\nconst checkMetaMask = async () => {\n  if (typeof window.ethereum !== 'undefined') {\n    isMetaMaskInstalled.value = true;\n    const chainId = await window.ethereum.request({ method: 'eth_chainId' });\n    isPolygon.value = chainId === props.targetChainId;\n  } else {\n    isMetaMaskInstalled.value = false;\n  }\n};\n\nconst switchToPolygon = async () => {\n  try {\n    await window.ethereum.request({\n      method: 'wallet_switchEthereumChain',\n      params: [{ chainId: props.targetChainId }],\n    });\n    checkMetaMask();\n  } catch (err) {\n    error.value = err.message;\n    console.error('Error switching to Polygon:', err);\n  }\n};\n\nconst addToken = async () => {\n  buttonStyle.value['pointer-events'] = 'none';\n  error.value = null;\n  loading.value = true;\n  \n  try {\n    await ethereum.request({\n      method: 'wallet_watchAsset',\n      params: {\n        type: 'ERC20',\n        options: {\n          address: props.tokenAddress,\n          symbol: props.tokenSymbol,\n          decimals: props.tokenDecimals,\n          image: props.tokenImage,\n        },\n      },\n    });\n    buttonStyle.value['background-color'] = '#009911';\n    loading.value = false;\n  } catch (err) {\n    error.value = err.message;\n    loading.value = false;\n  }\n};\n\nconst { t } = useI18n({\n  messages: props.content\n});\n\nonMounted(() => {\n  checkMetaMask();\n});\n</script>",
                  "name": "ConnectMetamask.vue",
                  "size": 4411,
                  "type": "source"
                }
              ]
            },
            "pages": {
              "_files": [
                {
                  "path": "../../src/modules/wallet/views/components/pages/Payments.vue",
                  "relativePath": "modules/wallet/views/components/pages/Payments.vue",
                  "extension": ".vue",
                  "content": "<template>\n  <div class=\"pd-thin\">\n\n    <SectionPageTitle\n      title=\"Payments\"\n      @update:tabs_current=\"(update) => tab = update\"\n      :tabs_current=\"tab\"\n      :tabs=\"[\n        { name: 'All',        value: 'all' },\n        { name: 'Created',   value: 'created' },\n        { name: 'Proccesing',  value: 'processing' },\n        { name: 'Finished',  value: 'finished' },\n        { name: 'Canceled',  value: 'canceled' },\n        { name: 'Refunded',  value: 'refunded' },\n      ]\"\n      :actions=\"[\n        { to: { name: 'PaymentsCreate'}, label: 'Create Payment' }\n      ]\"\n      class=\"mn-b-small bg-light bg-light radius-big\"\n    />\n\n    <Feed\n      :search=\"true\"\n      :states=\"{\n        empty: {\n          title: 'No Payments Found',\n          description: 'Currently, there are no payments.'\n        }\n      }\"\n      :store=\"{\n        read: (options) => payments.actions.read(options)\n      }\"\n      :options=\"{\n        limit: 15,\n        owner: route.params._id,\n        ...(tab !== 'all' && { type: tab })\n      }\"\n      v-slot=\"{ \n        items \n      }\"\n      class=\"gap-thin cols-3 mobile:cols-1\"\n    >\n      <div\n        v-for=\"payment in items\" \n         class=\"bg-light pos-relative pd-medium radius-big\"\n      >\n        {{payment}}\n      </div>\n    </Feed>\n\n\n</div>\n</template>\n\n\n<script setup>\nimport { ref } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\n\nimport SectionPageTitle from '@martyrs/src/modules/globals/views/components/sections/SectionPageTitle.vue'\nimport Feed from '@martyrs/src/components/Feed/Feed.vue'\n\nimport * as payments from '@martyrs/src/modules/wallet/views/store/payments.store';  \n\nconst route = useRoute();\nconst router = useRouter();\n\nconst tab = ref('all')\n</script>\n\n\n<style lang=\"scss\">\n\n.round-stat {\n  padding: 1rem;\n  border-radius: 5rem;\n  width: 3rem;\n  height: 3rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid rgba(0,0,0,0.1);\n\n  &-tab {\n    width: 2rem;\n    height: 2rem;\n  }\n}\n\n\n\n.order-card {\n  border-radius: 0.25rem;\n  overflow: hidden;\n  box-shadow: 0 8px 8px -8px rgb(36 36 36 / 10%);\n  .order-status {\n    color: black;\n    background: #EEF2F6; \n    width: 100%;\n    padding: 0.75rem 1.5rem;\n    margin: 0;\n  }\n\n  .new {\n    color: white;\n    background: #00ff88;\n  }\n\n  .block {\n    border-radius: 0;\n    border: 0;\n  }\n}\n\n  \n</style>\n",
                  "name": "Payments.vue",
                  "size": 2361,
                  "type": "source"
                },
                {
                  "path": "../../src/modules/wallet/views/components/pages/Wallet.vue",
                  "relativePath": "modules/wallet/views/components/pages/Wallet.vue",
                  "extension": ".vue",
                  "content": "<template>\n  <div class=\"pd-thin\">\n    <section class=\"bg-black t-white mn-b-thin radius-big pd-big\">\n      <h1 class=\"mn-b-medium\">{{ t('wallet.title') }}</h1>\n\n      <p class=\"mn-b-semi t-transp p-big\">\n        {{ t('wallet.subtitle') }}\n      </p>\n\n      <div \n        v-if=\"state.account\"\n        class=\"gap-thin mn-b-thin flex-nowrap bg-black radius-extra t-white br-solid br-white-transp-10 br-1px flex-v-center flex pd-medium\"\n      >\n        <div class=\"flex-v-center flex-nowrap flex mn-r-auto\">\n          <!-- <img loading=\"lazy\" src=\"/logo/wdt.svg\" class=\"mn-r-thin i-big\"> -->\n          <h2>{{state.tokenBalance}} {{ t('wallet.token') }}</h2>\n        </div>\n\n        <button @click=\"openGetMorePopup\" class=\"t-nowrap w-max bg-main t-medium button\">Get More</button>\n\n\n        <Button \n          :submit=\"actions.collectRewards\" \n          class=\"w-max bg-white t-black t-medium button\"\n        >\n          Withdraw\n        </Button>\n      </div>\n\n      <ConnectMetamask class=\"mn-b-thin radius-extra br-solid br-white-transp-10 br-1px w-100\" />\n\n      <div\n        v-if=\"state.account\"\n        class=\"w-100 mn-b-semi flex-column flex pd-big radius-big bg-main t-black\"\n      >\n        <p class=\"t-transp t-medium mn-b-thin\">You own:</p>\n        <p class=\"h1 mn-b-small\">{{state.share}}%</p>\n        <p class=\"t-white p-big t-medium mn-b-semi\">of all shares</p>\n\n          <div\n            class=\"flex-v-center mn-b-small flex-nowrap flex pd-small bg-black-transp-5 radius-extra\"\n          >\n              <!-- <img loading=\"lazy\" src=\"@/assets/icons/metamask.svg\" class=\"mn-r-small i-big\" > -->\n            \n            <p v-if=\"state.account\" class=\"t-transp t-medium \">\n               <span class=\"uppercase p-small t-medium t-transp\">Connected Metamask</span><br>\n               <span>{{state.account}}</span>\n            </p>\n\n            <button\n              v-if=\"state.account\"\n              @click=\"actions.disconnectWallet\"\n              class=\"mn-l-auto bg-red button\"\n            >\n              Disconnect Wallet\n            </button>\n          </div>\n      </div>\n\n    </section>\n\n    <div v-if=\"!state.account\" class=\"mn-b-semi cols-2 gap-thin\">\n      <div\n        class=\"w-100 pd-medium radius-medium t-center bg-light\"\n      >\n        <h3 class=\"mn-b-small\">Make first order and start earning Weeder Token</h3>\n        <button class=\"mn-l-auto mn-r-auto bg-main button\">Explore marketplace</button>\n      </div>\n\n      <div\n        class=\"w-100 pd-medium flex-center flex flex-column radius-medium t-center bg-light\"\n      >\n        <h3 \n          v-if=\"!state.account\"\n          class=\"mn-b-small\"\n        >\n          Connect Metamask to withdrawal your earnings.\n        </h3>\n\n        <button\n          v-if=\"!state.account\"\n          @click=\"actions.connectWallet\"\n          class=\"br-solid br-2px br-black-transp-10 t-black button\"\n        >\n          Connect Wallet\n        </button>\n      </div>\n    </div>\n\n    <h2 class=\"mn-b-small\" v-if=\"state.rewards.length > 0\">Latest Rewards </h2>\n\n    <section class=\"cols-3 mobile:cols-1 gap-thin\">\n      <div \n        class=\"radius-medium bg-light\"\n        v-for=\"income in state.rewards\"\n      > \n        <div class=\"flex-nowrap br-b br-black-transp-10 br-solid flex pd-medium\">\n          <!-- <img loading=\"lazy\" src=\"/logo/wdt-plus.svg\" class=\"mn-r-thin i-semi\"> -->\n          <p class=\"t-semi mn-r-auto\">{{income.amount}} WDT</p>\n          \n          <span class=\"pd-t-nano pd-b-nano pd-l-thin pd-r-thin bg-main flex flex-center radius-extra t-semi p-small\">{{income.type === 'blogpost' ? 'Community Reward' : income.type}}</span>\n        </div>\n\n        <div class=\"pd-medium\">\n          <h4 class=\"t-regular mn-b-thin\">{{income.name}}</h4>\n          <!-- <p class=\"p-small\">{{income.content[0].content}}</p> -->\n        </div>\n\n      </div>\n\n\n    </section>\n\n    <h2 class=\"mn-b-small\" v-if=\"state.rewards.length > 0\">Activity</h2>\n\n    <section class=\"cols-3 mobile:cols-1 gap-thin\">\n      <div \n        class=\"radius-medium bg-grey\"\n        v-for=\"income in state.rewards\"\n      > \n        <div class=\"flex-nowrap br-b br-black-transp-10 br-solid flex pd-medium\">\n          <!-- <img loading=\"lazy\" src=\"/logo/wdt-plus.svg\" class=\"mn-r-thin i-semi\"> -->\n          <p class=\"t-semi mn-r-auto\">{{income.amount}} WDT</p>\n          \n          <span class=\"pd-t-nano pd-b-nano pd-l-thin pd-r-thin bg-main flex flex-center radius-extra t-semi p-small\">{{income.type === 'blogpost' ? 'Community Reward' : income.type}}</span>\n        </div>\n\n        <div class=\"pd-medium\">\n          <h4 class=\"t-regular mn-b-thin\">{{income.name}}</h4>\n          <!-- <p class=\"p-small\">{{income.content[0].content}}</p> -->\n        </div>\n      </div>\n    </section>\n\n    <Popup \n      @close-popup=\"closeGetMorePopup\" \n      :isPopupOpen=\"isGetMorePopup\"\n      class=\"w-m-50r t-left pd-big bg-white radius-big\"\n    >\n      <div\n        v-if=\"currentMenuPopup === 0\"\n      >\n        <h2 class=\"mn-b-small t-center t-bold\">Choose the way of deposit</h2>\n\n        <button\n          class=\"w-100 bg-white t-black pd-thin radius-medium h3 t-center br-solid br-2px br-black-transp-10 mn-t-small\"\n          @click=\"switchGetMoreMenu(1)\"\n        >\n          CASH\n        </button>\n\n        <button\n          class=\"w-100 bg-white t-black pd-thin radius-medium h3 t-center br-solid br-2px br-black-transp-10 mn-t-small\"\n          @click=\"switchGetMoreMenu(2)\"\n        >\n          CARD\n        </button>\n\n        <button\n          class=\"w-100 bg-white t-black pd-thin radius-medium h3 t-center br-solid br-2px br-black-transp-10 mn-t-small\"\n          @click=\"switchGetMoreMenu(4)\"\n        >\n          CRYPTO\n        </button>\n      </div>\n\n      <CashDepositMenu\n        v-if=\"currentMenuPopup === 1\"\n        @back-selection=\"switchGetMoreMenu(0)\"\n      />\n\n      <CardDepositMenu\n        v-if=\"currentMenuPopup === 2\"\n        @back-selection=\"switchGetMoreMenu(0)\"\n        @switch-menu=\"switchGetMoreMenu\"\n      />\n\n      <CardBalanceReplenished\n        v-if=\"currentMenuPopup === 3\"\n        @close=\"closeGetMorePopup\"\n      />\n\n      <CryptoDepositMenu\n        v-if=\"currentMenuPopup === 4\"\n        @back-selection=\"switchGetMoreMenu(0)\"\n        @switch-menu=\"switchGetMoreMenu\"\n      />\n\n      <CryptoDepositProcessing\n        v-if=\"currentMenuPopup === 5\"\n        @back-selection=\"switchGetMoreMenu(0)\"\n        @switch-menu=\"switchGetMoreMenu\"\n      />\n    </Popup>\n  </div>\n</template>\n\n<script setup>\n  import { onMounted, ref } from 'vue';\n  import { useI18n } from 'vue-i18n'\n  import Web3 from \"web3\";\n\n  import { state, actions } from '@martyrs/src/modules/wallet/views/store/wallet.store';\n\n  import text from '@martyrs/src/modules/wallet/views/localization/wallet.json'\n \n  const { t } = useI18n({\n    useScope: 'global', \n    ...text\n  })\n\n  import Popup from '@martyrs/src/components/Popup/Popup.vue';\n  import Button from '@martyrs/src/components/Button/Button.vue'; \n\n  import CardBlogpost from '@martyrs/src/modules/community/components/blocks/CardBlogpost.vue';\n\n  import ConnectMetamask from '@martyrs/src/modules/wallet/views/components/elements/ConnectMetamask.vue';\n\n  import CashDepositMenu from '@martyrs/src/modules/wallet/views/components/blocks/CashDeposit.vue';\n  import CardDepositMenu from '@martyrs/src/modules/wallet/views/components/blocks/CardDeposit.vue';\n  import CryptoDepositMenu from '@martyrs/src/modules/wallet/views/components/blocks/CryptoDeposit.vue';\n  import CardBalanceReplenished from '@martyrs/src/modules/wallet/views/components/blocks/CardBalanceReplenished.vue';\n  import CryptoDepositProcessing from '@martyrs/src/modules/wallet/views/components/blocks/CryptoDepositProcessing.vue';\n\n\n\n  onMounted(() => {\n      // User has disconnected metamask from extension\n    window.ethereum.on('accountsChanged', (accounts) => {\n      if (accounts.length < 1) {\n        state.account = null;\n      }\n    });\n\n\n    state.web3 = new Web3(window.ethereum || 'http://localhost:8080');\n\n    actions.listRewards();\n    actions.tryReconnectWallet();\n  });\n\n  // /////////////////////////////////////////\n  // GetMore Popup\n  // /////////////////////////////////////////\n  const isGetMorePopup = ref(false)\n  const currentMenuPopup = ref(0)\n\n  function switchGetMoreMenu(value) {\n    currentMenuPopup.value = value;\n  }\n\n  function openGetMorePopup() {\n    isGetMorePopup.value = true;\n  }\n  function closeGetMorePopup() {\n    isGetMorePopup.value = false;\n    currentMenuPopup.value = 0;\n    actions.stopTimer();\n    actions.disconnectWebSocket();\n  }\n</script>",
                  "name": "Wallet.vue",
                  "size": 8554,
                  "type": "source"
                }
              ]
            }
          },
          "localization": {
            "_files": [
              {
                "path": "../../src/modules/wallet/views/localization/wallet.json",
                "relativePath": "modules/wallet/views/localization/wallet.json",
                "extension": ".json",
                "content": "{\n  \"messages\": {\n    \"en-default\": {\n      \"wallet\": {\n        \"title\": \"Your Wallet\",\n        \"subtitle\": \"Earn WDT by purchasing our weed or contributing to the community.\",\n        \"token\": \"WDT\",\n        \"pay\": \"pay\",\n        \"youReceived\": \"you received\",\n        \"enterAmount\": \"enter amount to top up\",\n        \"backToWallet\": \"back to wallet\",\n        \"backToSelection\": \"back to selection\",\n        \"balanceReplenished\": \"balance replenished\",\n        \"depositWithCrypto\": \"deposit with crypto\"\n      }\n    },\n    \"ru-default\": {\n      \"wallet\": {\n        \"title\": \"Ваш Кошелек\",\n        \"subtitle\": \"Зарабатывайте WDT, покупая товары или внося вклад в сообщество.\",\n        \"pay\": \"купить\",\n        \"youReceived\": \"вы пополнили на сумму\",\n        \"enterAmount\": \"введите сумму для пополнения\",\n        \"backToWallet\": \"назад к кошельку\",\n        \"backToSelection\": \"назад к списку\",\n        \"balanceReplenished\": \"баланс пополнен\",\n        \"depositWithCrypto\": \"пополнение криптовалютой\"\n      }\n    }\n  }\n}\n",
                "name": "wallet.json",
                "size": 1019,
                "type": "source"
              }
            ]
          }
        },
        "_files": [
          {
            "path": "../../src/modules/wallet/wallet.server.js",
            "relativePath": "modules/wallet/wallet.server.js",
            "extension": ".js",
            "content": "import FactoryPayments from './controllers/factories/payments.factory.js';\nimport RoutesPayments from './controllers/routes/payments.routes.js';\nimport RoutesRewards from './controllers/routes/rewards.routes.js';\nimport ModelPayment from './models/payment.model.js';\nimport ModelReward from './models/reward.model.js';\nimport ModelWallet from './models/wallet.model.js';\n// Initialization function for setting up the module within the application\nfunction initializePayments(app, db, wss, wdmClient, origins, publicPath) {\n  // Setup models in the database object\n  db.wallet = ModelWallet(db);\n  db.payment = ModelPayment(db);\n  db.reward = ModelReward(db);\n  // Setup routes if the app object is provided\n  if (app) {\n    RoutesPayments(app, db, origins, publicPath);\n    // RoutesRewards(app, db, wss, wdmClient, origins)\n  }\n}\nexport const models = {\n  ModelWallet,\n  ModelPayment,\n  ModelReward,\n};\nexport const routes = {\n  RoutesPayments,\n  RoutesRewards,\n};\nexport const controllers = {\n  FactoryPayments,\n};\nexport { initializePayments as initialize };\nexport default {\n  initialize: initializePayments,\n  models,\n  routes,\n  controllers,\n};\n",
            "name": "wallet.server.js",
            "size": 1151,
            "type": "source"
          }
        ]
      }
    },
    "styles": {
      "base": {
        "_files": [
          {
            "path": "../../src/styles/base/all.scss",
            "relativePath": "styles/base/all.scss",
            "extension": ".scss",
            "content": "@use 'backgrounds';\n@use 'borders';\n@use 'scrolling';\n@use 'transitions';\n@use 'shadow_transitions_hover_refactor';\n\n\n.disabled {\n\topacity: 0.75  !important;\n \tpointer-events: none  !important;\n \tcursor: default  !important;\n \tcolor: rgba(var(--black), 0.5)  !important;\n}\n\n.unactive { opacity: 0.0; }\n.hide { display: block; position: absolute; opacity: 0; pointer-events: none; }\n\n.t-truncate {\n  overflow: hidden; /* Скрывает все, что выходит за пределы блока */\n  text-overflow: ellipsis; /* Добавляет многоточие, если текст обрезается */\n  display: -webkit-box; /* Устанавливает элемент как блочный контейнер */\n  -webkit-line-clamp: 1; /* Ограничивает количество строк до 3 */\n  -webkit-box-orient: vertical; /* Устанавливает вертикальное направление расположения строк */\n}\n\n.t-trimmed {\n  overflow: hidden; /* Скрывает все, что выходит за пределы блока */\n  text-overflow: ellipsis clip;\n  display: -webkit-box; /* Устанавливает элемент как блочный контейнер */\n  -webkit-line-clamp: 1; /* Ограничивает количество строк до 3 */\n  -webkit-box-orient: vertical; /* Устанавливает вертикальное направление расположения строк */\n}\n\n\nbody { \n\t.bs-black-small { box-shadow: 0px 0px 17px -3px rgba(var(--black), 0.1);  }\n\t\n\t.w-auto { width: auto; }\n\t.w-min \t{ width: min-content; }\n\t.w-fit \t{ width: fit-content; }\n\t.w-max \t{ width: max-content; }\n\t\n\t.h-auto { height: auto; }\n\t.h-min \t{ height: min-content; }\n\t.h-fit \t{ height: fit-content; }\n\t.h-max \t{ height: max-content; }\n\n\t.w-m-66r { width: min(100%, 66rem); }\n\t.w-m-60r { width: min(100%, 60rem); }\n\t.w-m-50r { width: min(100%, 50rem); }\n\t.w-m-40r { width: min(100%, 40rem); }\n\t.w-m-33r { width: min(100%, 33rem); }\n\t.w-m-25r { width: min(100%, 25rem); }\n\t.w-m-20r { width: min(100%, 20rem); }\n\t.w-m-15r { width: min(100%, 15rem); }\n\t.w-m-10r { width: min(100%, 10rem); }\n\t.w-m-5r  { width: min(100%, 5rem); \t}\n\t.w-m-3r  { width: min(100%, 3rem); \t}\n\t.w-m-2r  { width: min(100%, 2rem); \t}\n}\n\nbody {\n\t.rotate-90 {\n\t\ttransform: rotate(90deg)\n\t}\n\n\t.rotate-180 {\n\t\ttransform: rotate(180deg)\n\t}\n}\n\nbody { \n\t.cursor-pointer {cursor: pointer; }\n\t.cursor-move {cursor: move; }\n\t.cursor-text {cursor: text; }\n\t.cursor-help {cursor: help; }\n\t.cursor-wait {cursor: wait; }\n\t.cursor-crosshair {cursor: crosshair; }\n\t.cursor-not-allowed {cursor: not-allowed; }\n\t.cursor-grab {cursor: grab; }\n\t.cursor-grabbing {cursor: grabbing; }\n\n\t.cursor-ns-resize {cursor: ns-resize; }\n\t.cursor-ew-resize {cursor: ew-resize; }\n\t.cursor-ne-resize {cursor: ne-resize; }\n\t.cursor-nw-resize {cursor: nw-resize; }\n\t.cursor-se-resize {cursor: se-resize; }\n\t.cursor-sw-resize {cursor: sw-resize; }\n\t\n\t.cursor-n-resize {cursor: n-resize; }\n\t.cursor-e-resize {cursor: e-resize; }\n\t.cursor-s-resize {cursor: s-resize; }\n\t.cursor-w-resize {cursor: w-resize; } \n}\n\nbody { \n\t// Text Brands\n\t.t-youtube \t\t{ color: rgba(var(--youtube), 1); \t}\n\t.t-telegram \t{ color: rgba(var(--telegram), 1); \t}\n\t.t-twitter \t\t{ color: rgba(var(--twitter), 1); \t}\n\t.t-reddit \t\t{ color: rgba(var(--reddit), 1); \t\t}\n\t.t-instagram \t{ color: rgba(var(--instagram), 1); }\n\t// Text Color Classes\n\t.t-main   { color: rgb(var(--main));;\t\t}\n\t.t-second { color: rgb(var(--second));  }\n\t.t-black  { color: rgba(var(--black), 1); \t}\n\t.t-dark   { color: rgba(var(--dark), 1); \t\t}\n\t.t-grey   { color: rgba(var(--grey), 1);\t\t}\n\t.t-white  { color: rgba(var(--white), 1);\t\t}\n\t.t-transp { opacity: 0.5\t\t\t\t\t}\n\t.t-violet { color: violet\t\t\t\t\t}\n\t.t-blue { color: #0057FF; \t\t\t}\n\t.t-green   { color: rgb(var(--green));;\t\t}\n\t.t-red \t{ color: rgba(var(--red), 1);; \t\t\t}\n\t// WhiteSpace\n\t.t-nowrap { white-space: nowrap; }\n\t.t-normal { white-space: normal; } \n\t.t-pre \t\t{ white-space: pre; }\n\t.t-pre-line { white-space: pre-line; }\n\t.t-pre-wrap { white-space: pre-wrap; }\n\t// \n\t.i-main-f { fill:   rgb(var(--main)) }\n\t.i-main-s { stroke: rgb(var(--main)) }\n\t// Icon Clasess\n\t.i-extra \t\t{ width: var(--extra);  \theight: var(--extra); }\n\t.i-big    \t{ width: var(--big);   \t \theight: var(--big); }\n\t.i-semi   \t{ width: var(--semi);    \theight: var(--semi); }\n\t.i-medium   {\twidth: var(--medium);  \theight: var(--medium); } \n\t.i-regular  { width: var(--regular);  height: var(--regular) }\n\t.i-small  \t{ width: var(--small);\t\theight: var(--small) }\n\t.i-default\t{ width: var(--regular);  height: var(--regular) }\n\t.i-thin  \t\t{ width: 2rem;     \t\t\t\theight: 2rem }\n\t.i-base  \t\t{ width: 1rem;     \t\t\t\theight: 1rem }\n\t// Extra \n\t.i-circle   { padding: var(--small); border-radius: var(--extra); background: var(--light-main); overflow: visible; }\n\t// Aspect ratio\n\t.aspect-16x9 \t{ aspect-ratio: 16 / 9; }\n\t.aspect-4x3 \t{ aspect-ratio: 4 / 3; \t}\n\t.aspect-1x1 \t{ aspect-ratio: 1 / 1; \t}\n\t// Object-fit\n\t.object-fit-cover \t{ object-fit: cover; }\n\t.object-fit-contain { object-fit: contain;}\n\t.object-fit-fill \t\t{ object-fit: fill;}\n\t// //////////////////////////////////////// \n\t// Interaction\n\t// ////////////////////////////////////////\n\t// Pointer Events\n\t.no-events { pointer-events: none }\n\t// Transition\n\t// //////////////////////////////////////// \n\t// Layout\n\t// //////////////////////////////////////// \n\t// Positions\n\t.pos-relative { position: relative; }\n\t.pos-absolute { position: absolute; }\n\t.pos-fixed    { position: fixed; }\n\t.pos-sticky   { position: sticky; }\n\t.pos-static   { position: static; }\n\t// Overflow\n\t.o-hidden   {overflow: hidden; }\n\t.o-scroll   {overflow: scroll; }\n\t.o-y-scroll {overflow-y: scroll; }\n\t.o-x-scroll {overflow-x: scroll; } /* This was incorrect in your code */\n\t.o-x-hidden {overflow-x: hidden; touch-action: pan-y;}\n\t.o-auto     {overflow: auto; }\n\t.o-visible  {overflow: visible; }\n\t.o-clip     {overflow: clip; } /* Modern alternative to hidden */\n\t.o-y-auto   {overflow-y: auto; }\n\t.o-x-auto   {overflow-x: auto; }\n\t.o-y-hidden {overflow-y: hidden; }\n\t.o-y-visible {overflow-y: visible; }\n\t.o-x-visible {overflow-x: visible; }\n\t.o-y-clip   {overflow-y: clip; }\n\t.o-x-clip   {overflow-x: clip; }\n\t.o-initial  {overflow: initial; }\n\t.o-inherit  {overflow: inherit; }\n\t.o-unset    {overflow: unset; }\n\t.o-revert   {overflow: revert; }\n\t.o-revert-layer {overflow: revert-layer; }\n\t// Display\n\n\t// Flex\n\t.flex {\n\t\tdisplay: flex;\n\t\t&-nowrap \t\t\t\t\t{ flex-wrap: nowrap; } \n\t\t&-wrap \t\t\t\t\t\t{ flex-wrap: wrap; }\t\n\t\t&-center \t\t\t\t\t{ align-items: center; justify-content: center; }\n\t}\n\n\n\t.d-flex \t\t\t\t{display: flex; }\n\t.d-block \t\t\t\t{display: block; }\n\t.d-inline-block {display: inline-block; }\n\t.d-inline-flex \t{display: inline-flex; }\t\n\t.d-grid \t\t\t\t{display: grid; }\t\n\t.d-none \t\t\t\t{display: none; }\n\n\t.align-self-start {\n\t\talign-self: start;\n\t}\n\n\t.flex-child {\t\n\t\t&-none \t\t\t\t{ flex: none; }\n\t\t&-noresize \t\t{ flex: 0 } \n\t\t&-1 \t\t\t\t\t{ flex: 1; }\n\t\t&-auto \t\t\t\t{ flex: auto; }\n\t\t&-default \t\t{ flex: 0 0 auto } \n\t\t&-initial \t\t{ flex: initial; }\n\t\t&-grow-0 \t\t\t{ flex-grow: 0; }\n\t\t&-grow-1 \t\t\t{ flex-grow: 1; }\n\t\t&-grow-2 \t\t\t{ flex-grow: 2; }\n\t\t&-grow-3 \t\t\t{ flex-grow: 3; }\n\t\t&-shrink-0 \t\t{ flex-shrink: 0; }\n\t\t&-shrink-1 \t\t{ flex-shrink: 1; }\n\t\t&-basis-auto\t{ flex-basis: auto; }\n\t\t&-basis-0 \t\t{ flex-basis: 0; }\n\t\t&-order-0     { order: 0; }\n\t\t&-order-1     { order: 1; }\n\t\t&-order-2     { order: 2; }\n\t\t&-order-3     { order: 3; }\n\t\t&-order-4     { order: 4; }\n\t\t&-order-5     { order: 5; }\n\t\t&-order-6     { order: 6; }\n\t\t&-order-7     { order: 7; }\n\t\t&-order-      { order: 8; }\n\t\t&-order-9     { order: 9; }\n\t\t&-order-last  { order: 9999; }\n\t}\n\n\t.cols-1 .col {\n\t  width: var(--col-width);\n\t}\n\n\t.cols-2 .col {\n\t  width: var(--col-width);\n\t}\n\n\t.cols-3 .col {\n\t  width: var(--col-width);\n\t}\n\n\t// COLUMNS AND ROWS\n\t.cols-1 {display: grid; grid-template-columns: 1fr; }\n\t.cols-2 {\n\t\tdisplay: grid; \n\t\tgrid-template-columns: 1fr 1fr; \n\t\tgrid-auto-flow: dense;\n\n\t\t> *:only-child {\n\t    grid-column: 1 / -1;\n\t\t}\n\t}  \n\t.cols-2-fit-content {display: grid; grid-template-columns: fit-content(100%) 1fr; }  \n\t.cols-3 {display: grid; grid-template-columns: 1fr 1fr 1fr; } \n\t.cols-4 {display: grid; grid-template-columns: 1fr 1fr 1fr 1fr; }  \t\n\t.cols-5 {display: grid; grid-template-columns: 1fr 1fr 1fr 1fr 1fr; } \n\t.cols-6 {display: grid; grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr; } \n\n\t.cols-2-golden-ration {display: grid; grid-template-columns: 1.66fr 1.33fr;\t}\n\t\n\t.cols-2-2_1 {display: grid; grid-template-columns: 2fr 1fr;\t}\n\t.cols-2-1_2 {display: grid; grid-template-columns: 1fr 2fr;\t}\n\n\t.cols-2-1_2_1 {display: grid; grid-template-columns: 1fr 2fr 1fr;\t}\n\t\n\t.cols-2-1_3 {\n\t\tdisplay: grid; \n\t\tgrid-template-columns: 1fr 3fr; \n\t\tgrid-auto-flow: dense;\n\n\t\t> *:only-child {\n\t    grid-column: 1 / -1;\n\t\t}\n\t}\n\n\t.cols-2-3_1 {\n\t\tdisplay: grid; \n\t\tgrid-template-columns: 3fr 1fr;\t\n\t\tgrid-auto-flow: dense;\n\n\t\t> *:only-child {\n\t    grid-column: 1 / -1;\n\t\t}\n\t}\n\n\t.cols-2-1_4 {display: grid; grid-template-columns: 1fr 4fr;\t}\n\t.cols-2-4_1 {display: grid; grid-template-columns: 4fr 1fr;\t}\n\t// COLUMN\n\t.col-w-100 {\n\t\tgrid-column: 1 / -1\n\t}\n\t// Rows\n\t.rows-1 {display: grid; grid-template-rows: auto 1fr; }\n\t.rows-1-min0_max1 {display: grid; grid-template-rows: minmax(0, 1fr); }\n\t// REFACTOR THIS SHIT\n\t.grid {\n\t  display: grid;\n\t}\n\n\t.cols {\n\t  grid-template-columns: repeat(var(--cols), 1fr);\n\t}\n\n\t.col-1-1fr {\n\t  --col-width: 1fr;\n\t}\n\n\t.col-2-1fr {\n\t  --col-width: 1fr;\n\t}\n\n\t.col-3-1fr {\n\t  --col-width: 1fr;\n\t}\n\n\t.col-1-2fr {\n\t  --col-width: 2fr;\n\t}\n\n\t.col-2-2fr {\n\t  --col-width: 2fr;\n\t}\n\n\t.col-3-2fr {\n\t  --col-width: 2fr;\n\t}\n\n\t.col-1-3fr {\n\t  --col-width: 3fr;\n\t}\n\n\t.col-2-3fr {\n\t  --col-width: 3fr;\n\t}\n\n\t.col-3-3fr {\n\t  --col-width: 3fr;\n\t}\n\n\t.cols-1 {\n\t  --cols: 1;\n\t}\n\n\t.cols-2 {\n\t  --cols: 2;\n\t}\n\n\t.cols-3 {\n\t  --cols: 3;\n\t}\n\n\n\t// Gaps\n\t// Z-INDEX\n\n\t.z-index-0 \t{z-index: 0;  }\n\t.z-index-1 \t{z-index: 10; }\n\t.z-index-2 \t{z-index: 20; }\n\t.z-index-3 \t{z-index: 30; }\n\t.z-index-4 \t{z-index: 40; }\n\t.z-index-5 \t{z-index: 50; }\n\t.z-index-6 \t{z-index: 60; }\n\t.z-index-7 \t{z-index: 70; }\n\t.z-index-8 \t{z-index: 80; }\n\t.z-index-9 \t{z-index: 90; }\n\t.z-index-10\t{z-index: 100; }\n\t.z-index-1-negative { z-index: -10;  }\n}",
            "name": "all.scss",
            "size": 9901,
            "type": "source"
          },
          {
            "path": "../../src/styles/base/backgrounds.scss",
            "relativePath": "styles/base/backgrounds.scss",
            "extension": ".scss",
            "content": "body { \n\t// Colors\n\t.bg-red         { background: rgb(var(--red));          }\n\t.bg-red-nice    { background: rgb(var(--red-nice));     }\n\t.bg-green       { background: rgb(var(--green));        }\n\t.bg-green-nice  { background: rgb(var(--green-nice));   }\n\t.bg-orange      { background: rgb(var(--orange));       } /* исправлено имя переменной */\n\t.bg-orange-nice { background: rgb(var(--orange-nice));  } /* исправлено имя переменной */\n\t.bg-yellow      { background: rgb(var(--yellow));       }\n\t.bg-yellow-nice { background: rgb(var(--yellow-nice));  }\n\t// Colors BG\n\t.bg-youtube \t{ background: rgba(var(--youtube), \t\t1); }\n\t.bg-telegram \t{ background: rgba(var(--telegram), \t1); }\n\t.bg-twitter \t{ background: rgba(var(--twitter), \t\t1); }\n\t.bg-reddit \t\t{ background: rgba(var(--reddit), \t\t1); }\n\t.bg-instagram \t{ background: rgba(var(--instagram), \t1); }\n\t// BG Blur\n\t.bg-blur-extra \t\t{ backdrop-filter: blur(var(--extra)) \t}\n\t.bg-blur-big \t\t\t{ backdrop-filter: blur(var(--big)) \t\t}\n\t.bg-blur-semi \t\t{ backdrop-filter: blur(var(--semi)) \t\t}\t\n\t.bg-blur-medium \t{ backdrop-filter: blur(var(--medium)) \t}\n\t.bg-blur-regular \t{ backdrop-filter: blur(var(--regular)) }\n\t.bg-blur-small \t\t{ backdrop-filter: blur(var(--small)) \t}\n\t.bg-blur-thin \t\t{ backdrop-filter: blur(var(--thin)) \t\t}\n\t// Other\n\t.bg-grad-main { background: radial-gradient(84.52% 84.52% at 50% 50%, rgb(var(--main)) 23.39%, #E7FFF4 100%), #E8FFF3;}\n\t// Transpatrens\n\t.bg-t-white \t{ background: rgba(var(--white),0.1); \t\t}\n\t.bg-t-grey \t\t{ background: rgba(var(--grey),0.1); \t\t}\n\t.bg-t-darkgrey \t{ background: rgba(var(--darkgrey),0.1); \t}\n\t.bg-transp  \t{ background: rgba(var(--white),0); \t\t}\n\t// Video Bg\n\t.bg-video {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tz-index: 1;\n\t\tobject-fit: cover;\n\t}\n\t// Fills\n\t.fill-l-main  \t{ fill: var(--light-main); }\n\t.fill-main  \t\t{ fill: rgb(var(--main)); }\n\t.fill-black  \t\t{ fill: rgb(var(--black)); }\n\t.fill-dark  \t\t{ fill: var(--dark); }\n\t.fill-grey  \t\t{ fill: var(--grey); }\n\t.fill-light  \t\t{ fill: var(--light); }\n\t.fill-card \t\t\t{ fill: #F7F7F7; }\n\t.fill-card-blue { fill: #eef2f6; }\n\t.fill-white  \t\t{ fill: rgb(var(--white));; }\n\t.fill-t-white \t{ fill: rgba(var(--white),0.1); }\n\t.fill-t-grey  \t{ fill: rgba(var(--grey),0.1); }\n\t.fill-t-darkgrey{ fill: rgba(var(--darkgrey),0.1); }\n\t.fill-transp  \t{ fill: rgba(var(--white),0); }\n\t// Colors Fills\n\t.fill-blue \t\t\t{ fill: #0057FF; }\n\t.fill-light-blue{ fill: #4E8AFF; }\n\t.fill-lightblue { fill: linear-gradient(180deg, rgba(255, 255, 255, 0.75) 0%, rgba(255, 255, 255, 0) 100%), #BFD4FF; }\n\t.fill-green \t\t{ fill: #25DA08; }\n\t.fill-light-red { fill: var(--light-red); }\n\t// Brand Fills\n\t.fill-youtube \t{ fill: var(--youtube); }\n\t.fill-telegram \t{ fill: var(--telegram); }\n\t.fill-twitter \t{ fill: var(--twitter); }\n\t.fill-reddit \t\t{ fill: var(--reddit); }\n\t.fill-instagram { fill: var(--instagram); }\n}",
            "name": "backgrounds.scss",
            "size": 2887,
            "type": "source"
          },
          {
            "path": "../../src/styles/base/borders.scss",
            "relativePath": "styles/base/borders.scss",
            "extension": ".scss",
            "content": "\n\nbody { \n\thr {\n\t\twidth: 100%;\n\t\theight: 1px;\n\t\tbackground: rgba(0,0,0,0.1);\n\t\tmargin: 0;\n\t\tborder: none;\n\n\t\t&.absolute {\n\t\t\tposition: absolute;\n\t\t\tleft: 0;\n\t\t\ttop: 0;\n\t\t}\n\t}\n\n\thr.vertical {\n\t\theight: 100%;\n\t\twidth: 1px;\n\t\t// position: absolute;\n\t\tleft: 0;\n\t\ttop: 0;\n\t\tbackground: rgba(0,0,0,0.1);\n\t\tmargin: 0;\n\t\tborder: none;\n\t}\n\n\t// Border Clasess\n\t.br-zero { \n\t\tborder-width: 0;\n\t\tborder-top-width: 0;\n\t\tborder-right-width: 0;\n\t\tborder-bottom-width: 0;\n\t\tborder-left-width: 0;\n\t}\n\t.br-1px { border-width: 1px; }\n\t.br-2px { border-width: 2px; }\n\t/* Border style */\n\t.br-solid { border-style: solid; }\n\t.br-dash { border-style: dashed; }\n\t\t/* Border sides */\n\t.br-t { border-top-width: 1px; }\n\t.br-r { border-right-width: 1px; }\n\t.br-b { border-bottom-width: 1px; }\n\t.br-b-2px { border-bottom-width: 2px; }\n\t.br-b-3px { border-bottom-width: 3px; }\n\t.br-l { border-left-width: 1px; }\n\t/* Border colors */\n\t.br-black \t\t\t\t{ border-color: rgba(var(--black), \t1.00); }\n\t.br-dark \t\t\t\t{ border-color: rgba(var(--dark), \t1.00); }\n\t.br-main \t\t\t\t{ border-color: rgba(var(--main), \t1.00); }\n\t.br-second\t\t\t\t{ border-color: rgba(var(--second), 1.00); }\n\t.br-grey \t\t\t\t{ border-color: rgba(var(--grey), \t1.00); }\n\t.br-light \t\t\t\t{ border-color: rgba(var(--light), \t1.00); }\n\t.br-white \t\t\t\t{ border-color: rgba(var(--white), \t1.00); }\n\t.br-red \t\t\t\t{ border-color: red; }\n\t// Border Grey transp\n\t.br-grey-transp-50 \t\t{ border-color: rgba(var(--grey), \t0.50); }\n\t.br-grey-transp-25\t\t{ border-color: rgba(var(--grey), \t0.25); }\n\t.br-grey-transp-10\t\t{ border-color: rgba(var(--grey), \t0.10); }\n\t// Border Black Transp\n\t.br-black-transp\t\t{ border-color: rgba(var(--black), 0.05); }\n\t.br-black-transp-5     \t{ border-color: rgba(var(--black), 0.05); }\n\t.br-black-transp-10    \t{ border-color: rgba(var(--black), 0.10); }\n\t.br-black-transp-15    \t{ border-color: rgba(var(--black), 0.15); }\n\t.br-black-transp-20    \t{ border-color: rgba(var(--black), 0.20); }\n\t.br-black-transp-25    \t{ border-color: rgba(var(--black), 0.25); }\n\t.br-black-transp-30    \t{ border-color: rgba(var(--black), 0.30); }\n\t.br-black-transp-35    \t{ border-color: rgba(var(--black), 0.35); }\n\t.br-black-transp-40    \t{ border-color: rgba(var(--black), 0.40); }\n\t.br-black-transp-45    \t{ border-color: rgba(var(--black), 0.45); }\n\t.br-black-transp-50    \t{ border-color: rgba(var(--black), 0.50); }\n\t.br-black-transp-55    \t{ border-color: rgba(var(--black), 0.55); }\n\t.br-black-transp-60    \t{ border-color: rgba(var(--black), 0.60); }\n\t.br-black-transp-65    \t{ border-color: rgba(var(--black), 0.65); }\n\t.br-black-transp-70    \t{ border-color: rgba(var(--black), 0.70); }\n\t.br-black-transp-75    \t{ border-color: rgba(var(--black), 0.75); }\n\t.br-black-transp-80    \t{ border-color: rgba(var(--black), 0.80); }\n\t.br-black-transp-85    \t{ border-color: rgba(var(--black), 0.85); }\n\t.br-black-transp-90    \t{ border-color: rgba(var(--black), 0.90); }\n\t.br-black-transp-95    \t{ border-color: rgba(var(--black), 0.95); }\n\t.br-black-transp-100   \t{ border-color: rgba(var(--black), 1.00); }\n\t// Border White Transp\n\t.br-white-transp \t\t{ border-color: rgba(var(--white), 0.10); }\n\t.br-white-transp-5 \t\t{ border-color: rgba(var(--white), 0.05); }\n\t.br-white-transp-10 \t{ border-color: rgba(var(--white), 0.10); }\n\t.br-white-transp-15 \t{ border-color: rgba(var(--white), 0.15); }\n\t.br-white-transp-20 \t{ border-color: rgba(var(--white), 0.20); }\n\t.br-white-transp-25 \t{ border-color: rgba(var(--white), 0.25); }\n\t.br-white-transp-30 \t{ border-color: rgba(var(--white), 0.30); }\n\t.br-white-transp-35 \t{ border-color: rgba(var(--white), 0.35); }\n\t.br-white-transp-40 \t{ border-color: rgba(var(--white), 0.40); }\n\t.br-white-transp-45 \t{ border-color: rgba(var(--white), 0.45); }\n\t.br-white-transp-50 \t{ border-color: rgba(var(--white), 0.50); }\n\t.br-white-transp-55 \t{ border-color: rgba(var(--white), 0.55); }\n\t.br-white-transp-60 \t{ border-color: rgba(var(--white), 0.60); }\n\t.br-white-transp-65 \t{ border-color: rgba(var(--white), 0.65); }\n\t.br-white-transp-70 \t{ border-color: rgba(var(--white), 0.70); }\n\t.br-white-transp-75 \t{ border-color: rgba(var(--white), 0.75); }\n\t.br-white-transp-80 \t{ border-color: rgba(var(--white), 0.80); }\n\t.br-white-transp-85 \t{ border-color: rgba(var(--white), 0.85); }\n\t.br-white-transp-90 \t{ border-color: rgba(var(--white), 0.90); }\n\t.br-white-transp-95 \t{ border-color: rgba(var(--white), 0.95); }\n\t.br-white-transp-100 \t{ border-color: rgba(var(--white), 1.00); }\n\t/* Social media brand borders */\n\t.br-youtube \t{ border-color: rgba(var(--youtube), 1);; }\n\t.br-telegram \t{ border-color: rgba(var(--telegram), 1);; }\n\t.br-twitter \t{ border-color: rgba(var(--twitter), 1);; }\n\t.br-reddit \t\t{ border-color: rgba(var(--reddit), 1);; }\n\t.br-instagram { border-color: rgba(var(--instagram), 1);; }\n\t/* Inset borders */\n\t.br-inset-2px-black { box-shadow: inset 0 0 0 2px rgba(var(--black),1); }\n\t// Border anim\n\t.br-anim { border-style: dashed; animation: dash-animation 1s linear infinite;}\n\n\t@keyframes dash-animation {\n\t  0% {\n\t    border-color-position: 0;\n\t  }\n\t  100% {\n\t    border-color-position: 20px;\n\t  }\n\t}\n\n\t.br-neon {\n\t  border: 2px solid #00ff00;\n\t  box-shadow: 0 0 10px #00ff00, 0 0 20px #00ff00, 0 0 30px #00ff00;\n\t}\n\n\t.br-glow {\n\t  border: 2px solid rgb(var(--white));\n\t  box-shadow: 0px 0px 5px rgb(var(--white)), 0px 0px 10px rgb(var(--white)), 0px 0px 15px rgb(var(--white));\n\t}\n\n\t.br-glow-animation {\n\t\tanimation: glow-animation 2s ease-in-out infinite;\n\t}\n\n\t@keyframes glow-animation {\n    0%, 100% {\n        box-shadow: 0px 0px 5px rgba(var(--white), 0.5), 0px 0px 10px rgba(var(--white), 0.5), 0px 0px 15px rgba(var(--white), 0.5);\n    }\n\t    50% {\n\t        box-shadow: 0px 0px 10px rgba(var(--white), 1), 0px 0px 20px rgba(var(--white), 1), 0px 0px 30px rgba(var(--white), 1);\n\t    }\n\t}\n\n\n\n\t.br-double-line {\n\t  border: double 4px #ffffff;\n\t  box-shadow: 10px 10px 30px #d1d1d1, -10px -10px 30px #ffffff;\n\t}\n\n\t.br-inset {\n\t  border: 2px solid #ffffff;\n\t  box-shadow: inset 10px 10px 30px #d1d1d1, inset -10px -10px 30px #ffffff;\n\t}\n\n\t.br-outset {\n\t  border: 2px solid #ffffff;\n\t  box-shadow: 10px 10px 30px #d1d1d1, -10px -10px 30px #ffffff;\n\t}\n\n\t.br-inner-soft {\n\t  border: 2px solid #ffffff;\n\t  box-shadow: inset 5px 5px 10px #d1d1d1, inset -5px -5px 10px #ffffff;\n\t}\n\n\t.br-outer-soft {\n\t  border: 2px solid #ffffff;\n\t  box-shadow: 5px 5px 10px #d1d1d1, -5px -5px 10px #ffffff;\n\t}\n\n\t.br-glass {\n\t  border: 2px solid #ffffff;\n\t  box-shadow: 10px 10px 30px #d1d1d1, -10px -10px 30px #ffffff;\n\t  backdrop-filter: blur(10px);\n\t}\n\n\t.br-glass-inset {\n\t  border: 2px solid #ffffff;\n\t  box-shadow: inset 10px 10px 30px #d1d1d1, inset -10px -10px 30px #ffffff;\n\t  backdrop-filter: blur(10px);\n\t}\n\n\t.br-neumorphic {\n\t  border: 2px solid #ffffff;\n\t  box-shadow: 10px 10px 30px #d1d1d1, -10px -10px 30px #ffffff;\n\t}\n\n\t.br-border-flip {\n\t  border: 2px solid #ffffff;\n\t  animation: border-flip 3s linear infinite;\n\t}\n\n\t@keyframes border-flip {\n\t  0%, 100% {\n\t    border-color: #ffffff;\n\t  }\n\t  50% {\n\t    border-color: #00ff00;\n\t  }\n\t}\n\n\t.br-pulse {\n\t  border: 2px solid #ffffff;\n\t  box-shadow: 0 0 0 0 #ffffff;\n\t  animation: pulse 2s infinite;\n\t}\n\n\t@keyframes pulse {\n\t  0% {\n\t    transform: scale(0.95);\n\t    box-shadow: 0 0 0 0 #ffffff;\n\t  }\n\t  70% {\n\t    transform: scale(1);\n\t    box-shadow: 0 0 0 10px rgba(255, 255, 255, 0);\n\t  }\n\t  100% {\n\t    transform: scale(0.95);\n\t    box-shadow: 0 0 0 0 rgba(255, 255, 255, 0);\n\t  }\n\t}\n\n\t.br-spin {\n\t  border: 2px solid #ffffff;\n\t  animation: spin 2s linear infinite;\n\t}\n\n\t@keyframes spin {\n\t  0% {\n\t    transform: rotate(0deg);\n\t  }\n\t  100% {\n\t    transform: rotate(360deg);\n\t  }\n\t}\n}",
            "name": "borders.scss",
            "size": 7624,
            "type": "source"
          },
          {
            "path": "../../src/styles/base/scrolling.scss",
            "relativePath": "styles/base/scrolling.scss",
            "extension": ".scss",
            "content": "body { \n\t// Overflow Anchor\n\t.overflow-anchor-auto { overflow-anchor: auto; }\n\t.overflow-anchor-none { overflow-anchor: none; }\n\t// Overscroll Behavior\n\t.overscroll-behavior-auto \t\t{ overscroll-behavior: auto; }\n\t.overscroll-behavior-contain \t{ overscroll-behavior: contain; }\n\t.overscroll-behavior-none \t\t{ overscroll-behavior: none; }\n\t.overscroll-behavior-x-auto \t{ overscroll-behavior-x: auto; }\n\t.overscroll-behavior-y-auto \t{ overscroll-behavior-y: auto; }\n\t.overscroll-behavior-x-none \t{ overscroll-behavior-x: none; }\n\t.overscroll-behavior-y-none \t{ overscroll-behavior-y: none; }\n\t// Scroll\n\t.scroll-snap-type-x-mandatory { scroll-snap-type: x mandatory; } \n\t.scroll-snap-type-y-mandatory { scroll-snap-type: y mandatory; }\n\t// Scroll Snap Align\n\t.scroll-snap-align-start \t{ scroll-snap-align: start; }\n\t.scroll-snap-align-end \t\t{ scroll-snap-align: end; }\n\t.scroll-snap-align-center \t{ scroll-snap-align: center; }\n\t// Scroll Snap Stop\n\t.scroll-snap-stop-normal \t{ scroll-snap-stop: normal; }\n\t.scroll-snap-stop-always \t{ scroll-snap-stop: always; }\n\t// Scroll Behavior\n\t.scroll-behavior-auto \t{ scroll-behavior: auto; }\n\t.scroll-behavior-smooth { scroll-behavior: smooth; }\n\t// Scroll mn\n\t.scroll-mn-auto \t\t{ scroll-margin: auto; }\n\t.scroll-mn-top-auto \t{ scroll-mn-top: auto; }\n\t.scroll-mn-right-auto \t{ scroll-mn-right: auto; }\n\t.scroll-mn-bottom-auto \t{ scroll-mn-bottom: auto; }\n\t.scroll-mn-left-auto \t{ scroll-mn-left: auto; }\n\t// Scroll mn Variables\n\t.scroll-mn-b-extra \t\t{ scroll-margin: var(--extra); }\n\t.scroll-mn-b-big \t\t\t{ scroll-margin: var(--big); }\n\t.scroll-mn-b-semi \t\t{ scroll-margin: var(--semi); }\n\t.scroll-mn-b-medium \t\t{ scroll-margin: var(--medium); }\n\t.scroll-mn-b-regular \t\t{ scroll-margin: var(--regular); }\n\t.scroll-mn-b-small \t\t{ scroll-margin: var(--small); }\n\t.scroll-mn-b-thin \t\t{ scroll-margin: var(--thin); }\n\t.scroll-mn-b-micro \t\t{ scroll-margin: var(--micro); }\n\t// Scroll pd\n\t.scroll-pd-auto \t\t{ scroll-padding: auto; }\n\t.scroll-pd-top-auto \t{ scroll-pd-top: auto; }\n\t.scroll-pd-right-auto \t{ scroll-pd-right: auto; }\n\t.scroll-pd-bottom-auto \t{ scroll-pd-bottom: auto; }\n\t.scroll-pd-left-auto \t{ scroll-pd-left: auto; }\n\t// Scroll pd with Variables\n\t.scroll-pd-extra \t\t{ scroll-padding: var(--extra); }\n\t.scroll-pd-big \t\t\t{ scroll-padding: var(--big); }\n\t.scroll-pd-semi \t\t{ scroll-padding: var(--semi); }\n\t.scroll-pd-medium \t\t{ scroll-padding: var(--medium); }\n\t.scroll-pd-regular \t\t{ scroll-padding: var(--regular); }\n\t.scroll-pd-small \t\t{ scroll-padding: var(--small); }\n\t.scroll-pd-thin \t\t{ scroll-padding: var(--thin); }\n\t.scroll-pd-micro \t\t{ scroll-padding: var(--micro); }\n\n\t.scroll-hide::-webkit-scrollbar {\n    width: 0;\n    height: 0;\n  }\n\n  /* Главный трек scrollbar */\n  .scroll-hide::-webkit-scrollbar-track {\n    background: red;\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n    display: none;\n  }\n\n  /* Ползунок scrollbar */\n  .scroll-hide::-webkit-scrollbar-thumb {\n    background-color: red;\n    outline: 1px solid slategrey;\n    display: none;\n  }\n\n  /* Горизонтальный scrollbar */\n  .scroll-hide::-webkit-scrollbar:horizontal {\n    height: 0;\n    display: none;\n  }\n\n  /* Вертикальный scrollbar */\n  .scroll-hide::-webkit-scrollbar:vertical {\n    width: 0;\n    display: none;\n  }\n\n  /* Кнопка уменьшения (decrement) */\n  .scroll-hide::-webkit-scrollbar-button:decrement {\n    display: none;\n  }\n\n  /* Кнопка увеличения (increment) */\n  .scroll-hide::-webkit-scrollbar-button:increment {\n    display: none;\n  }\n\n  /* Кнопка уменьшения (decrement) - отдельная */\n  .scroll-hide::-webkit-scrollbar-button:start {\n    display: none;\n  }\n\n  /* Кнопка увеличения (increment) - отдельная */\n  .scroll-hide::-webkit-scrollbar-button:end {\n    display: none;\n  }\n\n  /* Двойная кнопка */\n  .scroll-hide::-webkit-scrollbar-button:double-button {\n    display: none;\n  }\n\n  /* Одиночная кнопка */\n  .scroll-hide::-webkit-scrollbar-button:single-button {\n    display: none;\n  }\n\n  /* Нет кнопок */\n  .scroll-hide::-webkit-scrollbar-button:no-button {\n    display: none;\n  }\n\n  /* Угол scrollbar */\n  .scroll-hide::-webkit-scrollbar-corner:corner-present {\n    background: red;\n  }\n\n  /* scrollbar в неактивном окне */\n  .scroll-hide::-webkit-scrollbar:window-inactive {\n    background: red;\n  }\n}",
            "name": "scrolling.scss",
            "size": 4259,
            "type": "source"
          },
          {
            "path": "../../src/styles/base/shadow_transitions_hover_refactor.scss",
            "relativePath": "styles/base/shadow_transitions_hover_refactor.scss",
            "extension": ".scss",
            "content": "body { \n\t.hover-scale-0 {&:hover {transform: scale(1.015); \t} } \n\t.hover-scale-1 {&:hover {transform: scale(1.05); \t} } \n\t.hover-scale-2 {&:hover {transform: scale(1.1); \t} }\n\t.hover-scale-3 {&:hover {transform: scale(1.2); \t} }\n\n\n\t.hover-bg-main {&:hover {background: rgb(var(--main), 1);; } }\n\t.hover-bg-second {&:hover {background: rgb(var(--second), 1);; } }\n\t.hover-bg-third {&:hover {background: rgb(var(--second), 1);; } }\n\t.hover-bg-fourth {&:hover {background: rgb(var(--third), 1);; } }\n\t.hover-bg-fifth {&:hover {background: rgb(var(--fifth), 1);; } }\n\t.hover-bg-white {&:hover {background: rgb(var(--white), 1);; } }\n\t.hover-bg-black {&:hover {background: rgb(var(--black), 1);; } }\n\t.hover-bg-light {&:hover {background: rgb(var(--light), 1);; } }\n\t.hover-bg-dark {&:hover {background: rgb(var(--dark), 1);; } }\n\n\n\t.hover-fill-main {&:hover {fill: rgb(var(--main)); } }\n\t.hover-fill-white {&:hover {fill: rgb(var(--white)); } }\n\t.hover-fill-black {&:hover {fill: rgb(var(--black)); } }\n\n\t.hover-t-white {&:hover {color: rgba(var(--white), 1);; } }\n\t.hover-t-black {&:hover {color: rgba(var(--black), 1);; } }\n\t.hover-br-transp {&:hover {background: rgba(var(--white),0); } }\n\t.hover-br-l-dark {&:hover {border: 1px solid rgba(var(--dark), 0.2) } }\n\n\t.hover-t-underline {&:hover {text-decoration: underline;}}\n\n\n\t.hover-translate-1 {&:hover {transform: translateY(-10px); } }\n\t.hover-rotate-1 {&:hover {transform: rotate(-10deg); } }\n\t.hover-translateX-1 {&:hover {transform: translateX(20px); } }\n\t.hover-combined-1 {&:hover {transform: translateY(-10px) rotate(-10deg); } }\n\t.hover-easeInOut-1 {&:hover {transform: translateY(-10px) scale(1.1); } }\n\t.hover-arc-1 {&:hover {transform: translateX(20px) translateY(-10px) rotate(-10deg); } }\n\t.hover-timing-1 {&:hover {transition: transform 0.2s ease-in-out; transform: translateY(-10px); } }\n\t.hover-exaggeration-1 {&:hover {transform: scale(1.5); } }\n\t.hover-solid-drawing-1 {&:hover {transform: translateY(-10px) scale(1.1) rotate(-10deg); } }\n\t.hover-appeal-1 {&:hover {transform: translateY(-10px) scale(1.1) rotate(-5deg); } } \n\n\n\t// Shadows \n\t.bs-red { box-shadow: 0 0 5px red; }\n\n\t.bs-black { box-shadow: 0 10px 15px rgba(0,0,0,0.05); }\n\n\n\t.bs-tilt {\n\t  box-shadow: 10px 10px 10px rgba(0,0,0,0.1), -10px -10px 10px rgba(0,0,0,0.1);\n\t}\n\n\t/* тень с двух сторон */\n\t.bs-double-sided {\n\t  box-shadow: -3px 0px 3px rgba(0,0,0,0.1), 3px 0px 3px rgba(0,0,0,0.1);\n\t}\n\n\t/* тень с эффектом вырубки */\n\t.bs-cutout {\n\t  box-shadow: 0 0 0 5px rgba(0,0,0,0.1), 0 0 0 10px white, 0 0 0 15px rgba(0,0,0,0.1);\n\t}\n\n\t/* тень с эффектом глубины */\n\t.bs-depth {\n\t  box-shadow: 0 3px 3px rgba(0,0,0,0.1), 0 0 0 5px rgba(0,0,0,0.2), 0 6px 10px rgba(0,0,0,0.2);\n\t}\n\n\t/* тень с эффектом вздутия */\n\t.bs-bubble {\n\t  box-shadow: 0 0 0 3px rgba(0,0,0,0.1), 0 0 15px rgba(0,0,0,0.2), 0 6px 10px rgba(0,0,0,0.2);\n\t}\n\n\t/* тень с плавным переходом */\n\t.bs-gradient {\n\t  box-shadow: 0 0 5px rgba(0,0,0,0.1), 0 10px 20px rgba(0,0,0,0.4), 0 20px 30px rgba(0,0,0,0.5);\n\t}\n\n\t/* тень с эффектом расплывания */\n\t.bs-blur-light {\n\t\tbox-shadow: 0 5px 10px rgba(0,0,0,0.1), 0 10px 15px rgba(0,0,0,0.15), 0 15px 25px rgba(0,0,0,0.2),0 0 5px rgba(255,255,255,0.05), 0 -10px 20px rgba(255,255,255,0.2), 0 -20px 30px rgba(255,255,255,0.25), 0 -30px 50px rgba(255,255,255,0.3);\n\t}\n\n\t.bs-blur-light-hover {\n\t  &:hover {\n\t    box-shadow: 0 20px 40px rgba(0,0,0,0.3), 0 40px 60px rgba(0,0,0,0.35), 0 60px 80px rgba(0,0,0,0.4);\n\t  }\n\t}\n\n\t.bs-blur-regular {\n\t\tbox-shadow: 0 10px 20px rgba(0,0,0,0.2), 0 20px 30px rgba(0,0,0,0.25), 0 30px 50px rgba(0,0,0,0.3),0 0 5px rgba(255,255,255,0.05), 0 -10px 20px rgba(255,255,255,0.2), 0 -20px 30px rgba(255,255,255,0.25), 0 -30px 50px rgba(255,255,255,0.3);\n\t}\n\n\t.bs-blur-regular-hover {\n\t  &:hover {\n\t    box-shadow: 0 25px 50px rgba(0,0,0,0.5), 0 50px 75px rgba(0,0,0,0.7), 0 75px 100px rgba(0,0,0,0.8);\n\t  }\n\t}\n\n\t.bs-blur-medium {\n\t\tbox-shadow: 0 0 7px rgba(0,0,0,0.1), 0 15px 25px rgba(0,0,0,0.4), 0 25px 40px rgba(0,0,0,0.5), 0 40px 70px rgba(0,0,0,0.6);\n\t}\n\n\t.bs-blur-medium-hover {\n\t  &:hover {\n\t    box-shadow: 0 0 15px rgba(0,0,0,0.2), 0 30px 60px rgba(0,0,0,0.5), 0 60px 90px rgba(0,0,0,0.7), 0 90px 120px rgba(0,0,0,0.8);\n\t  }\n\t}\n\n\t.bs-blur-semi {\n\t\tbox-shadow: 0 0 10px rgba(0,0,0,0.1), 0 20px 35px rgba(0,0,0,0.4), 0 35px 55px rgba(0,0,0,0.5), 0 55px 95px rgba(0,0,0,0.6);\n\t}\n\n\t.bs-blur-semi-hover {\n\t  &:hover {\n\t\t\tbox-shadow: 0 0 18px rgba(0,0,0,0.2), 0 40px 80px rgba(0,0,0,0.5), 0 80px 120px rgba(0,0,0,0.7), 0 120px 200px rgba(0,0,0,0.8);\n\t\t}\n\t}\n\n\t.bs-blur-heavy {\n\t\tbox-shadow: 0 0 15px rgba(0,0,0,0.1), 0 30px 50px rgba(0,0,0,0.4), 0 50px 80px rgba(0,0,0,0.5), 0 80px 130px rgba(0,0,0,0.6);\n\t}\n\n\t.bs-blur-heavy-hover {\n\t\t&:hover {\n\t\tbox-shadow: 0 0 25px rgba(0,0,0,0.2), 0 60px 100px rgba(0,0,0,0.5), 0 100px 150px rgba(0,0,0,0.7), 0 150px 250px rgba(0,0,0,0.8);\n\t\t}\n\t}\n\n\n\n\t/* тень с эффектом перекрестия */\n\t.bs-cross {\n\t  box-shadow: -10px -10px 10px rgba(0,0,0,0.1), 10px 10px 10px rgba(0,0,0,0.1);\n\t}\n\n\t/* тень с эффектом выступающей кнопки */\n\t.bs-button {\n\t  box-shadow: 0 0 0 2px rgba(0,0,0,0.1), 0 4px 6px rgba(0,0,0,0.2), 0 8px 10px rgba(0,0,0,0.2);\n\t}\n\n\t  /* .bs-dotted */\n\t.bs-whirl {\n\n\t\tbox-shadow: 0 0 0 3px rgba(0,0,0,0.1) inset;\n\t}\n\n\t.bs-embossed {\n\t    box-shadow: 0 2px 2px rgba(0,0,0,0.1), 0 0 0 3px rgba(0,0,0,0.1) inset;\n\t}\n\n\t.bs-gradient {\n\t    background-image: linear-gradient(135deg, #1111 0%, #FFF 50%, #F0F2F5 100%);\n\t    box-shadow: 2px 2px 10px rgba(0,0,0,0.2), -2px -2px 10px rgba(255,255,255,0.7);\n\t}\n\n\t.bs-perspective {\n\t    perspective: 500px;\n\t    transform: rotateY(15deg) rotateX(15deg) scale(1.1);\n\t}\n\n\t.bs-ripple {\n\t    position: relative;\n\t    overflow: hidden;\n\t    transform: translate3d(0, 0, 0);\n\t}\n\n\t.bs-ripple::after {\n\t    content: \"\";\n\t    display: block;\n\t    position: absolute;\n\t    width: 100%;\n\t    height: 100%;\n\t    top: 0;\n\t    left: 0;\n\t    pointer-events: none;\n\t    background-image: radial-gradient(circle, #000 10%, transparent 10.01%);\n\t    background-repeat: no-repeat;\n\t    background-position: 50%;\n\t    transform: scale(10, 10);\n\t    opacity: 0;\n\t    transition: transform 0.5s, opacity 1s;\n\t}\n\n\t.bs-ripple:active::after {\n\t    transform: scale(0, 0);\n\t    opacity: 0.3;\n\t    transition: 0s;\n\t}\n}",
            "name": "shadow_transitions_hover_refactor.scss",
            "size": 6239,
            "type": "source"
          },
          {
            "path": "../../src/styles/base/transitions.scss",
            "relativePath": "styles/base/transitions.scss",
            "extension": ".scss",
            "content": "body { \n\t/* Стандартные функции переходов */\n\t.transition-sine-in {transition: all 0.33s cubic-bezier(0.12, 0, 0.39, 0); }\n\t.transition-sine-out {transition: all 0.33s cubic-bezier(0.61, 1, 0.88, 1); }\n\t.transition-sine-in-out {transition: all 0.33s cubic-bezier(0.37, 0, 0.63, 1); }\n\t\n\t.transition-quad-in {transition: all 0.33s cubic-bezier(0.11, 0, 0.5, 0); }\n\t.transition-quad-out {transition: all 0.33s cubic-bezier(0.5, 1, 0.89, 1); }\n\t.transition-quad-in-out {transition: all 0.33s cubic-bezier(0.45, 0, 0.55, 1); }\n\t\n\t.transition-cubic-in {transition: all 0.33s cubic-bezier(0.32, 0, 0.67, 0); }\n\t.transition-cubic-out {transition: all 0.33s cubic-bezier(0.33, 1, 0.68, 1); }\n\t.transition-cubic-in-out {transition: all 0.33s cubic-bezier(0.65, 0, 0.35, 1); }\n\t\n\t.transition-quart-in {transition: all 0.33s cubic-bezier(0.5, 0, 0.75, 0); }\n\t.transition-quart-out {transition: all 0.33s cubic-bezier(0.25, 1, 0.5, 1); }\n\t.transition-quart-in-out {transition: all 0.33s cubic-bezier(0.76, 0, 0.24, 1); }\n\t\n\t.transition-quint-in {transition: all 0.33s cubic-bezier(0.64, 0, 0.78, 0); }\n\t.transition-quint-out {transition: all 0.33s cubic-bezier(0.22, 1, 0.36, 1); }\n\t.transition-quint-in-out {transition: all 0.33s cubic-bezier(0.83, 0, 0.17, 1); }\n\t\n\t.transition-expo-in {transition: all 0.33s cubic-bezier(0.7, 0, 0.84, 0); }\n\t.transition-expo-out {transition: all 0.33s cubic-bezier(0.16, 1, 0.3, 1); }\n\t.transition-expo-in-out {transition: all 0.33s cubic-bezier(0.87, 0, 0.13, 1); }\n\t\n\t.transition-circ-in {transition: all 0.33s cubic-bezier(0.55, 0, 1, 0.45); }\n\t.transition-circ-out {transition: all 0.33s cubic-bezier(0, 0.55, 0.45, 1); }\n\t.transition-circ-in-out {transition: all 0.33s cubic-bezier(0.85, 0, 0.15, 1); }\n\t\n\t.transition-back-in {transition: all 0.33s cubic-bezier(0.36, 0, 0.66, -0.56); }\n\t.transition-back-out {transition: all 0.33s cubic-bezier(0.34, 1.56, 0.64, 1); }\n\t.transition-back-in-out {transition: all 0.33s cubic-bezier(0.68, -0.6, 0.32, 1.6); }\n\t\n\t.transition-elastic-in {transition: all 0.33s cubic-bezier(0.7, 0.0, 0.84, 0.0); }\n\t.transition-elastic-out {transition: all 0.33s cubic-bezier(0.16, 1.0, 0.3, 1.0); }\n\t.transition-elastic-in-out {transition: all 0.33s cubic-bezier(0.87, 0.0, 0.13, 1.0); }\n\t\n\t.transition-bounce-in {transition: all 0.33s cubic-bezier(0.5, 0.0, 0.75, 0.0); }\n\t.transition-bounce-out {transition: all 0.33s cubic-bezier(0.25, 1.0, 0.5, 1.0); }\n\t.transition-bounce-in-out {transition: all 0.33s cubic-bezier(0.76, 0.0, 0.24, 1.0); }\n\t\n\t/* Оригинальные переходы */\n\t.transition-linear {transition: all 0.33s linear; }\n \t.transition-ease-in {transition: all 0.33s cubic-bezier(0.42, 0, 1, 1); }\n\t.transition-ease-out {transition: all 0.33s cubic-bezier(0, 0, 0.58, 1); }\n\t.transition-ease-in-out {transition: all 0.33s cubic-bezier(0.42, 0, 0.58, 1); }\n\t.transition-staggered {transition: all 0.33s cubic-bezier(0.25, 0.46, 0.45, 0.94); }\n\t.transition-bounce {transition: all 0.33s cubic-bezier(0.71, -0.46, 0.88, 0.6); }\n\t.transition-elastic {transition: all 0.33s cubic-bezier(0.17, 0.67, 0.33, 0.94); }\n\t.transition-spring {transition: all 0.33s cubic-bezier(0.23, 1, 0.32, 1.01); }\n\t.transition-boomerang {transition: all 0.66s cubic-bezier(0.42, 0, 0.58, 1); }\n\t.transition-slow-motion {transition: all 1.33s cubic-bezier(0.25, 0.46, 0.45, 0.94); }\n\t.transition-zoom {transition: all 0.33s cubic-bezier(0.71, -0.46, 0.88, 0.6); }\n\t.transition-fly-away {transition: all 0.33s cubic-bezier(0.17, 0.67, 0.33, 0.94); }\n\t.transition-squeeze {transition: all 0.3s cubic-bezier(0.390, 0.575, 0.565, 1.000); transform-origin: center; }\n\t\n\t/* Таймингы */\n\t.transition-timing-1 {\n\t\ttransition-duration: 0.15s;\n\t}\n\t.transition-timing-2 {\n\t\ttransition-duration: 0.25s;\n\t}\n\t.transition-timing-3 {\n\t\ttransition-duration: 0.35s;\n\t}\n\t.transition-timing-4 {\n\t\ttransition-duration: 0.45s;\n\t}\n\t.transition-timing-5 {\n\t\ttransition-duration: 0.55s;\n\t}\n\t.transition-timing-6 {\n\t\ttransition-duration: 0.75s;\n\t}\n\t.transition-timing-7 {\n\t\ttransition-duration: 1s;\n\t}\n\t.transition-timing-8 {\n\t\ttransition-duration: 1.5s;\n\t}\n\t\n\t/* Задержки */\n\t.transition-delay-1 {\n\t\ttransition-delay: 0.1s;\n\t}\n\t.transition-delay-2 {\n\t\ttransition-delay: 0.2s;\n\t}\n\t.transition-delay-3 {\n\t\ttransition-delay: 0.3s;\n\t}\n\t.transition-delay-4 {\n\t\ttransition-delay: 0.5s;\n\t}\n\t.transition-delay-5 {\n\t\ttransition-delay: 0.7s;\n\t}\n\t.transition-delay-6 {\n\t\ttransition-delay: 1s;\n\t}\n\t.transition-delay-7 {\n\t\ttransition-delay: 1.5s;\n\t}\n\t.transition-delay-8 {\n\t\ttransition-delay: 2s;\n\t}\n}",
            "name": "transitions.scss",
            "size": 4502,
            "type": "source"
          }
        ]
      },
      "_files": [
        {
          "path": "../../src/styles/config.scss",
          "relativePath": "styles/config.scss",
          "extension": ".scss",
          "content": "@use \"sass:map\";\n// Generate Variants for Colors Variables\n@mixin generate-vars-color($base-var-name) {\n  --#{$base-var-name}-extra: \t\tcolor-mix(in srgb, rgb(var(--#{$base-var-name})) 10%, black 80%);\n\t--#{$base-var-name}-big: \t\t\tcolor-mix(in srgb, rgb(var(--#{$base-var-name})) 25%, black 70%);\n\t--#{$base-var-name}-semi: \t\tcolor-mix(in srgb, rgb(var(--#{$base-var-name})) 50%, black 60%);\n\t--#{$base-var-name}-medium: \tcolor-mix(in srgb, rgb(var(--#{$base-var-name})) 90%, black 50%);\n\t--#{$base-var-name}-regular: \trgb(var(--#{$base-var-name}));\n\t--#{$base-var-name}-small: \t\tcolor-mix(in srgb, rgb(var(--#{$base-var-name})) 90%, white 50%);\n\t--#{$base-var-name}-thin: \t\tcolor-mix(in srgb, rgb(var(--#{$base-var-name})) 50%, white 60%);\n\t--#{$base-var-name}-micro: \t\tcolor-mix(in srgb, rgb(var(--#{$base-var-name})) 25%, white 70%);\n\t--#{$base-var-name}-nano: \t\tcolor-mix(in srgb, rgb(var(--#{$base-var-name})) 10%, white 80%);\n}\n\n@mixin generate-bg-classes($base-class-name, $base-var-name) {\n\t.#{$base-class-name} \t\t\t\t{ background: rgb(var(--#{$base-var-name})); \t}\n\t.#{$base-class-name}-extra\t{ background: var(--#{$base-var-name}-extra); \t}\n\t.#{$base-class-name}-big \t\t{ background: var(--#{$base-var-name}-big); \t}\n\t.#{$base-class-name}-semi \t{ background: var(--#{$base-var-name}-semi); \t}\n\t.#{$base-class-name}-medium { background: var(--#{$base-var-name}-medium); \t} \n\t.#{$base-class-name}-regular{ background: var(--#{$base-var-name}-regular);} \n\t.#{$base-class-name}-small \t{ background: var(--#{$base-var-name}-small); \t} \n\t.#{$base-class-name}-thin \t{ background: var(--#{$base-var-name}-thin); \t} \n\t.#{$base-class-name}-micro \t{ background: var(--#{$base-var-name}-micro); \t} \n\t.#{$base-class-name}-nano \t{ background: var(--#{$base-var-name}-nano); \t} \n\n \t@for $i from 1 through 20 {\n        $percentage: $i * 5;\n\n        .#{$base-class-name}-transp-#{$percentage} {\n            background: rgba(var(--#{$base-var-name}), $percentage * 0.01);\n        }\n    }\n}\n\n@mixin generate-base-classes($class-name, $css-property, $values) {\n  @each $value-key, $value in $values {\n    .#{$class-name}-#{$value-key} {\n      #{$css-property}: $value;\n    }\n    .#{$class-name}-#{$value-key}-negative {\n      #{$css-property}: calc(#{$value} * -1);\n    }\n  }\n}\n\n@mixin generate-modifier-classes($class-name, $css-property, $modifiers, $values) {\n  @each $value-key, $value in $values {\n    @each $modifier, $css-modifier in $modifiers {\n      .#{$class-name}-#{$modifier}-#{$value-key} {\n        #{$css-property}-#{$css-modifier}: $value;\n      }\n      .#{$class-name}-#{$modifier}-#{$value-key}-negative {\n        #{$css-property}-#{$css-modifier}: calc(#{$value} * -1);\n      }\n    }\n  }\n}\n\n@mixin generate-breakpoint-classes($class-name, $css-property, $values, $modifiers, $breakpoints) {\n  @each $breakpoint-key, $breakpoint-query in $breakpoints {\n    @media #{$breakpoint-query} {\n      @each $value-key, $value in $values {\n        .#{$breakpoint-key}\\:#{$class-name}-#{$value-key} {\n          #{$css-property}: $value;\n        }\n        .#{$breakpoint-key}\\:#{$class-name}-#{$value-key}-negative {\n          #{$css-property}: calc(#{$value} * -1);\n        }\n      }\n      @if $modifiers {\n        @each $value-key, $value in $values {\n          @each $modifier, $css-modifier in $modifiers {\n            .#{$breakpoint-key}\\:#{$class-name}-#{$modifier}-#{$value-key} {\n              #{$css-property}-#{$css-modifier}: $value;\n            }\n            .#{$breakpoint-key}\\:#{$class-name}-#{$modifier}-#{$value-key}-negative {\n              #{$css-property}-#{$css-modifier}: calc(#{$value} * -1);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n@mixin generate-utility-classes($class-name, $css-property, $modifiers, $values, $breakpoints: null) {\n  // Генерация базовых классов без модификаторов и медиа-запросов\n  @include generate-base-classes($class-name, $css-property, $values);\n\n  // Генерация классов с модификаторами\n  @if $modifiers {\n    @include generate-modifier-classes($class-name, $css-property, $modifiers, $values);\n  }\n\n  // Генерация классов с медиа-запросами\n  @if $breakpoints {\n    @include generate-breakpoint-classes($class-name, $css-property, $values, $modifiers, $breakpoints);\n  }\n}\n\n:root {\n\t// THEME\n\tcolor-scheme: light dark;\n\t////////////////////////////////////////\n\t// 1.COLORS VARIABLES \n\t///////////////////////////////////////\n\t--main: \t10,250,125;;\n\t@include \tgenerate-vars-color('main');\n\t--second:\t34,102,255;\n\t@include \tgenerate-vars-color('second');\n\t--third:\t162,10,255;\n\t@include \tgenerate-vars-color('third');\n\t--fourth:\t255,10,84;\n\t@include \tgenerate-vars-color('fourth');\n\t--fifth:\t255,216,10;\n\t@include \tgenerate-vars-color('fifth');\n\t// Black and white colors\n\t--black:  0,0,0;\n\t@include \tgenerate-vars-color('black');\n\t--dark:   36,36,36; \t\n\t@include \tgenerate-vars-color('dark');\n\t--grey:   180,180,180; \n\t@include \tgenerate-vars-color('grey');\n\t--light:  245,249,247; \n\t@include \tgenerate-vars-color('light');\n\t--white:  255,255,255;\n\t@include \tgenerate-vars-color('white');\n\t// Tones\n\t--red: \t\t\t\t\t360, 70, 90;\n\t--red-nice: \t\t354, 80, 100;\n\t--green: \t\t\t\t88,\t 207,\t57;\n\t--green-nice: \t35,\t226,\t0;\n\t--orange: \t\t\t8, 72, 94;\n\t--orange-nice:\t13, 70, 100;\n\t--yellow: \t\t\t38, 100, 100;\n\t--yellow-nice: \t45, 97, 100;\n\t// For brands\n\t--youtube:\t\t\t252,13,27;\n\t--telegram:\t\t\tlinear-gradient(0deg, #1D93D2 0%, #38B0E3 100%), #000000;\n\t--twitter:\t\t\t29,155,240;\n\t--instagram:\t\t233,89,80;\n\t--reddit:\t\t\t\t255,69,0;\n\t// Special\n\t--transparent:  0,0,0,0;\n\t/////////////////////////////////////////\n\t// 2.SIZE VARIABLES //\n\t///////////////////////////////////////\n\t--extra:   \t4.00rem;\n\t--big:   \t\t2.50rem; \n\t--semi:    \t1.50rem;\n\t--medium:  \t1.25rem;\n\t--regular:\t1.00rem;\n\t--small:   \t0.75rem;\n\t--thin:    \t0.50rem;\n\t--micro: \t\t0.25rem;\n\t--nano: \t\t0.10rem;\n\t////////////////////////////////////////\n\t// 3. TEXT VARIABLES\n\t///////////////////////////////////////\n\t--font: 'Avenir Next World';\n\t--font-main: 'Avenir Next World';\n\t--font-second: 'Avenir Next World';\n\t////////////////////////////////////////\n\t// 4. BREAKPOINTS\n\t///////////////////////////////////////\n\t--flip-phone-max:\t\t\t\t320px;\n\t--phone-landscape-max: \t640px;\n\t--tablet-portrait-min: \t641px;\n\t--tablet-portrait-max: \t768px;\n\t--tablet-landscape-min:\t769px;\n\t--tablet-landscape-max:\t1024px;\n\t--desktop-min: \t\t\t\t\t1025px;\n\t--desktop-max: \t\t\t\t\t1440px;\n\t--xl-desktop-min: \t\t\t1441px;\n\t--xl-desktop-max: \t\t\t1920px;\n\t--xxl-desktop-min: \t\t\t1921px;\n}\n$modifiers: (\n  't': 'top',\n  'r': 'right',\n  'b': 'bottom',\n  'l': 'left'\n);\n\n$variables: (\n  'extra': var(--extra),\n  'big': var(--big),\n  'semi': var(--semi),\n  'medium': var(--medium),\n  'regular': var(--regular),\n  'small': var(--small),\n  'thin': var(--thin),\n  'micro': var(--micro),\n  'nano': var(--nano),\n);\n\n$rem: (\n  '50r': 50rem,\n  '45r': 45rem,\n  '40r': 40rem,\n  '35r': 35rem,\n  '32r': 32rem,\n  '30r': 30rem,\n  '25r': 25rem,\n  '24r': 24rem,\n  '20r': 20rem,\n  '16r': 16rem,\n  '15r': 15rem,\n  '12r': 12rem,\n  '10r': 10rem,\n  '8r': 8rem,\n  '6r': 5rem,\n  '5r': 5rem,\n  '4r': 4rem,\n  '3r': 3rem,\n  '2r': 2rem,\n  '1r': 1rem,\n);\n\n$vh: (\n  '100vh': 100vh,\n  '80vh': 80vh,\n  '75vh': 75vh,\n  '66vh': 66vh,\n  '50vh': 50vh,\n  '40vh': 40vh,\n  '33vh': 33vh,\n  '25vh': 25vh,\n  '20vh': 20vh,\n  '15vh': 15vh,\n  '10vh': 10vh,\n);\n\n$percent: (\n  '100': 100%,\n  '80': 80%,\n  '75': 75%,\n  '70': 70%,\n  '66': 66%,\n  '50': 50%,\n  '45': 45%,\n  '40': 40%,\n  '33': 33%,\n  '25': 25%,\n  '20': 20%,\n  '15': 15%,\n  '10': 10%,\n  '5': 5%,\n  '0': 0%,\n);\n\n$breakpoints: (\n  'mobile': \"(max-width: 640px)\",\n  'tablet': \"(min-width: 641px) and (max-width: 1024px)\",\n  'desktop': \"(min-width: 1025px) and (max-width: 1440px)\",\n  'widescreen': \"(min-width: 1441px)\"\n);\n\n$base: (\n  'auto': auto,\n  'zero': 0,\n);\n\n$combined: map.merge($vh, $rem);\n$combined: map.merge($combined, $percent);\n$combined: map.merge($combined, $variables);\n$combined: map.merge($combined, $base);\n\n/* -------------------------- */\n/* FLEX */\n/* ------------------------- */\n$justify-content: (\n  'h-center': center,\n  'justify-start': flex-start,\n  'justify-center': center,\n  'justify-end': flex-end,\n  'justify-between': space-between,\n  'justify-around': space-around,\n);\n\n$align-items: (\n  'v-center': center,\n  'align-start': flex-start,\n  'align-center': center,\n  'align-end': flex-end,\n  'align-stretch': stretch,\n  'align-baseline': baseline,\n);\n\n$flex-direction: (\n  'row': row,\n  'column': column\n);\n\n$order: (\n  '1': 1,\n  '2': 2,\n  '3': 3,\n  '4': 4,\n  '5': 5,\n  '6': 6,\n  '7': 7,\n  '8': 8,\n  '9': 9,\n  '10': 10\n);\n\n$cols: (\n\t'1': 1fr,\n\t'2': 1fr 1fr,\n\t'3': 1fr 1fr 1fr,\n\t'4': 1fr 1fr 1fr 1fr,\n\t'5': 1fr 1fr 1fr 1fr 1fr,\n\t'6': 1fr 1fr 1fr 1fr 1fr 1fr,\n);\n\nbody {\n\t@include generate-utility-classes('pd',\t'padding', $modifiers, $combined, $breakpoints);\n\t@include generate-utility-classes('mn', 'margin', $modifiers, $combined, $breakpoints);\n\n\t@include generate-utility-classes('w', 'width', null, $combined, $breakpoints);\n\t@include generate-utility-classes('h', 'height', null, $combined, $breakpoints);\n\n\t@include generate-utility-classes('pos-t', 'top', null, $combined, $breakpoints);\n\t@include generate-utility-classes('pos-r', 'right', null, $combined, $breakpoints);\n\t@include generate-utility-classes('pos-b', 'bottom', null, $combined, $breakpoints);\n\t@include generate-utility-classes('pos-l', 'left', null, $combined, $breakpoints);\n\n\t@include generate-utility-classes('h-max', 'max-height', null, $combined, $breakpoints);\n\t@include generate-utility-classes('h-min', 'min-height', null, $combined, $breakpoints);\n\n\t@include generate-utility-classes('w-max', 'max-width',\tnull, $combined, $breakpoints);\n\t@include generate-utility-classes('w-min', 'min-width',\tnull, $combined, $breakpoints);\n\n\t@include generate-utility-classes('radius', 'border-radius', null, $combined, $breakpoints);\n\n\t@include generate-utility-classes('radius-tl', 'border-top-left-radius', null, $combined, $breakpoints);\n\t@include generate-utility-classes('radius-tr', 'border-top-right-radius', null, $combined, $breakpoints);\n\t@include generate-utility-classes('radius-br', 'border-bottom-right-radius', null, $combined, $breakpoints);\n\t@include generate-utility-classes('radius-bl', 'border-bottom-left-radius', null, $combined, $breakpoints);\n\n\t@include generate-utility-classes('gap', 'gap', null, $combined, $breakpoints);\n\t@include generate-utility-classes('flex', 'justify-content', null, $justify-content, $breakpoints);\n\t@include generate-utility-classes('flex', 'align-items', null, $align-items, $breakpoints);\n\t@include generate-utility-classes('flex', 'flex-direction', null, $flex-direction, $breakpoints);\n\t@include generate-utility-classes('order', 'order', null, $order, $breakpoints);\n\n\t@include generate-utility-classes('cols', 'grid-template-columns', null, $cols, $breakpoints);\n\t\n\t@include generate-bg-classes('bg-main', \t'main');\n\t@include generate-bg-classes('bg-second',\t'second');\n\t@include generate-bg-classes('bg-third', \t'third');\n\t@include generate-bg-classes('bg-fourth', 'fourth');\n\t@include generate-bg-classes('bg-fifth', \t'fifth');\n\n\t@include generate-bg-classes('bg-black', \t'black');\n\t@include generate-bg-classes('bg-dark', \t'dark');\n\t@include generate-bg-classes('bg-grey', \t'grey');\n\t@include generate-bg-classes('bg-light', \t'light');\n\t@include generate-bg-classes('bg-white', \t'white');\n}",
          "name": "config.scss",
          "size": 11338,
          "type": "source"
        },
        {
          "path": "../../src/styles/layout.scss",
          "relativePath": "styles/layout.scss",
          "extension": ".scss",
          "content": "* {\n\tbox-sizing: border-box;\n}\n\nhtml {\n\tbackface-visibility: hidden;\n\ttext-rendering: geometricPrecision;\n\t-webkit-font-smoothing: subpixel-antialiased;\n\t-moz-osx-font-smoothing: grayscale;\n}\n\nbody {\n\tbackground: rgb(var(--white));\n\tcolor: rgb(var(--black));; \n}\n\nhtml,\nbody,\n#app,\n {\n  position: relative;\n  width: 100%;\n  height: 100%;\n}\n\n\n// TURN OFF SCROLL AND CUROURS\n// * {\n//   cursor: none !important;\n//   > * {\n//     cursor: none !important;\n//   }\n//   > *::-webkit-scrollbar {\n\n//     display: none !important;\n//   }\n// }",
          "name": "layout.scss",
          "size": 535,
          "type": "source"
        },
        {
          "path": "../../src/styles/reset.scss",
          "relativePath": "styles/reset.scss",
          "extension": ".scss",
          "content": "@charset \"UTF-8\";\nhtml, button, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video, textarea, input {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline; \n  color: inherit;\n  background: transparent;\n  text-decoration: none; \n  -webkit-tap-highlight-color: transparent;\n}\n\na:link, a:visited, a:hover {\n  color: inherit;\n  text-decoration: none;\n}\n\n\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n  display: block; \n}\n\nheader, select, input, span, label, textarea {\n  box-sizing: border-box; \n  font-family: inherit; \n}\n\n\nol, ul, li {\n  list-style: none; \n}\n\nblockquote, q {\n  quotes: none; \n}\n\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none; \n}\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0; \n}\n\ninput, textarea  {\n  background: transparent;\n  text-decoration: none; \n  &, &:link, &:focus, &:visited, &:active {\n    text-decoration: none; \n    outline: none;\n    border: none;\n    -moz-appearance:none;\n    -webkit-appearance:none;\n    -o-appearance:none;\n  }\n}\n\n/* Chrome, Safari, Edge, Opera */\ndiv {\n  -moz-user-select: text;\n}\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}",
          "name": "reset.scss",
          "size": 1724,
          "type": "source"
        },
        {
          "path": "../../src/styles/responsive.scss",
          "relativePath": "styles/responsive.scss",
          "extension": ".scss",
          "content": "$super-ultra-tiny-flip-phone-max:   240px;\n\n$flip-phone-max:                    320px;\n$phone-portrait-max:                321px;\n$phone-landscape-max:               640px;\n\n$tablet-portrait-min:               641px;\n$tablet-portrait-max:               768px;\n\n$tablet-landscape-min:              769px;\n$tablet-landscape-max:              1024px;\n\n$desktop-min:                       1025px;\n$desktop-max:                       1440px;\n\n$xl-desktop-min:                    1441px;\n$xl-desktop-max:                    1920px;\n\n$xxl-desktop-min:                   1921px;\n\n@media screen and (min-width:  $xxl-desktop-min) {\n    html, body {\n      font-size: 22px;\n    }\n  }\n  \n  @media screen and (min-width:  $xl-desktop-min) {\n    html, body {\n      font-size: 24px;\n    }\n  }\n  \n  @media screen and (max-width:  $desktop-max) {\n    html, body {\n      font-size: 18px;\n    }\n  }\n  \n  @media screen and (max-width:  $tablet-landscape-max) {\n\n    html, body {\n      font-size: 24px;\n    }\n  }\n  \n  @media screen and (min-width:  $tablet-portrait-min) {\n    .mobile-only {\n       display: none !important;\n    }\n\n    .mobile-w-100 {\n      width: 100% !important;\n    }\n\n  }\n\n   @media screen and (max-width: 1025px) {\n\n    .desktop-only {\n       display: none !important; \n    }\n\n    .mobile-only {\n       display: inherit !important;\n    }\n    \n     // Cols\n    .cols-1, .cols-2, .cols-4,  .cols-2-2_1, .cols-2-1_2, .cols-2-1_3, .cols-2-golden-ration   { display: grid !important; grid-template-columns: 1fr !important;  }\n    .cols-4.no-responsive { grid-template-columns: 1fr 1fr 1fr 1fr !important }\n    .cols-2 { >.col { width: 100% !important;  } }\n\n    .pd-extra { padding: 3rem }\n    .pd-big { padding: 1.5rem }\n\n    .cols-4, .cols-5 {\n      grid-template-columns: 1fr 1fr !important;\n      // grid-template-rows: 1fr 1fr  !important; \n      gap: 1rem 1rem;\n      grid-template-areas: \n        \"col1 col2\"\n        \"col3 col4\" !important; \n    }\n\n    .cols-6 {\n      grid-template-columns: 1fr 1fr 1fr!important;\n    }\n\n    .footer {\n      text-align: center;\n\n      .logo-link {\n        img {\n          margin: 0 auto;\n          margin-bottom: 2rem;\n        }\n      }\n\n      .twocols {\n        column-count: 1 !important;\n      }\n\n      .socials {\n        justify-content: center;\n      }\n    }\n\n     .catalog-wrapper {\n        grid-template-columns: 1fr !important; \n\n        .grid-layout {\n          grid-template-columns: 1fr 1fr !important; \n          gap: 1rem !important;\n        }\n      }\n\n    \n  }\n  \n  @media screen and (max-width:  $phone-landscape-max) {\n      \n    html, body {\n        font-size: 16px;\n    }\t\n    \n    .categories {\n      padding-top: 8rem !important; \n\n      div {\n        width: 100%;\n      }\n    }\n\n  \n\n/*    h1, .h1 { font-size: 2.5rem }*/\n/*    h2, .h2 { font-size: 1.75rem }*/\n/*    h3, .h3 { font-size: 1.5rem }*/\n\n   \n\n    // Margins\n    .mn-r-extra {\n      margin-right: 2rem;\n    }\n\n    .mn-b-big {\n      margin-bottom: 1.5rem;\n    }\n\n    // Header\n    #header-bottom {\n      padding: 1rem;\n      padding-top: 0;\n\n      .bottom-header {\n        background: rgba(34, 102, 255, 0.05);\n        border-radius: 1rem;\n      }\n    }\n  }\n\n  @media screen and (min-width:  $phone-portrait-max) {\n\n  }\n  \n  @media screen and (max-width:  $phone-portrait-max) {\n\n\n  }\n  \n  @media screen and (max-width:  $flip-phone-max) {\n    html, body {\n      font-size: 16px;\n    }\n  }\n  \n  @media screen and (max-width:  $super-ultra-tiny-flip-phone-max) {\n    html, body {\n      font-size: 16px;\n    }\n  }",
          "name": "responsive.scss",
          "size": 3528,
          "type": "source"
        },
        {
          "path": "../../src/styles/theme.scss",
          "relativePath": "styles/theme.scss",
          "extension": ".scss",
          "content": "@use 'reset';\n\n@use 'base/all';\n\n@use 'typography';\n@use 'layout';\n@use 'responsive';\n\n@use 'config';",
          "name": "theme.scss",
          "size": 101,
          "type": "source"
        },
        {
          "path": "../../src/styles/typography.scss",
          "relativePath": "styles/typography.scss",
          "extension": ".scss",
          "content": "// Global Font Family\nbody {\n\tfont-family: var(--font); \n}\n\n.font-main {\n\tfont-family: var(--font-main); \n}\n\n.font-second {\n\tfont-family: var(--font-second); \n}\n\nh1,h2,h3,h4,h5,span,p {\n  text-box: trim-both cap alphabetic;\n/*  text-box-trim: trim-both;*/\n/*  text-box-edge: cap alphabetic;*/\n} \n\n.text-box-none {\n  text-box: none;\n}\n\n.text-box-auto {\n  text-box: auto;\n}\n\n.text-box-trim-none {\n  text-box-trim: none;\n}\n\n\n\n.text-box-trim {\n  text-box: trim-both cap alphabetic;\n}\n\n.trimmed > * {\n  text-box: trim-both cap alphabetic;\n  overflow: visible;\n}\n\n.text-box-trim-end {\n  text-box: trim-end cap alphabetic;\n}\n\nspan.text-box-trim-end {\n  text-box: trim-end cap alphabetic;\n}\n\n\n// Font Styles\nh1,.h1  { font-family: var(--font-main); font-weight: 500; font-size: 3.250rem; \tline-height: 1.000; letter-spacing: -0.05rem; \ttext-transform: none; }\nh2,.h2  { font-family: var(--font-main); font-weight: 500; font-size: 2.500rem; \tline-height: 1.000; letter-spacing: -0.05rem;\ttext-transform: none; }\nh3,.h3  { font-family: var(--font-main); font-weight: 500; font-size: 1.750rem; \tline-height: 1.000; letter-spacing: -0.05rem;\ttext-transform: none; }\nh4,.h4  { font-family: var(--font-main); font-weight: 500; font-size: 1.500rem; \tline-height: 1.000; letter-spacing: +0.0rem; \ttext-transform: none; }\nh5,.h5 \t{ font-family: var(--font-main); font-weight: 500; font-size: 1.375rem; \tline-height: 1.000;\tletter-spacing: -0.0rem; \ttext-transform: none; }\n\n// Typogragy Styles\n.p-nano        { font-family: var(--font-second); font-weight: 400; font-size: 0.50rem; line-height: 1.250; }\n.p-micro       { font-family: var(--font-second); font-weight: 400; font-size: 0.625rem; line-height: 1.250; }\n.p-small       { font-family: var(--font-second); font-weight: 400; font-size: 0.75rem; line-height: 1.250; }\np,.p-regular   { font-family: var(--font-second); font-weight: 400; font-size: 1.0rem; line-height: 1.250 }\n.p-medium   \t { font-family: var(--font-second); font-weight: 400; font-size: 1.0rem; line-height: 1.250 }\n.p-semi        { font-family: var(--font-second); font-weight: 400; font-size: 1.125rem; line-height: 1.250; letter-spacing: 0.0rem; }\n.p-big         { font-family: var(--font-second); font-weight: 400; font-size: 1.25rem; line-height: 1.250; }\n.p-extra       { font-family: var(--font-second); font-weight: 400; font-size: 2.00rem; line-height: 1.250; }\n\nb  { font-weight: 600}\n\na, button { font-family: var(--font-main); }\n\na  \t\t\t\t{\ttransition: all 0.233s ease; }\na:hover   { cursor: pointer;} \n/*a:active  { opacity: 0.75 }*/\n// Text align\n.t-left   \t{ text-align: left; \t}\n.t-center   { text-align: center; }\n.t-right  \t{ text-align: right; \t}\n// Font weights\n.t-bold   \t{ font-weight: 900;}\n.t-demi   \t{ font-weight: 700;}\n.t-semi   \t{ font-weight: 600;}\n.t-medium \t{ font-weight: 500;}\n.t-regular \t{ font-weight: 400;}\n.t-light  \t{ font-weight: 300;}\n// Linehegiht\n.t-lh-05\t\t{ line-height: 0.5 }\n.t-lh-075\t\t{ line-height: 0.75 }\n.t-lh-1 \t\t{ line-height: 1}\n.t-lh-15 \t\t{ line-height: 1.5}\n.t-lh-2 \t\t{ line-height: 2}\n\n.lh-bold   \t{ line-height: 3.000; }\n.lh-demi   \t{ line-height: 2.000; }\n.lh-semi   \t{ line-height: 1.500; }\n.lh-medium \t{ line-height: 1.250; }\n.lh-regular { line-height: 1.125; }\n.lh-light  \t{ line-height: 1.000; }\n\n.t-trim {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n/*Text trim*/\n.t-trim-1 {\n\tdisplay: -webkit-box;\n  -webkit-box-orient: vertical;  \n  overflow: hidden;\n  -webkit-line-clamp: 1;\n}\n\n.t-trim-2 {\n\tdisplay: -webkit-box;\n  -webkit-box-orient: vertical;  \n  overflow: hidden;\n  -webkit-line-clamp: 2;\n}\n\n.t-trim-3 {\n\tdisplay: -webkit-box;\n  -webkit-box-orient: vertical;  \n  overflow: hidden;\n  -webkit-line-clamp: 3;\n}\n\n\n\n// Text decoration\n.uppercase \t\t\t\t{ text-transform: uppercase;\t\t\t}\n.capitalize \t\t\t\t{ text-transform: capitalize;\t\t\t}\n.underline \t\t\t\t{ text-decoration: underline; \t\t}\n.line-through \t\t{ text-decoration: line-through; }\n\n\n",
          "name": "typography.scss",
          "size": 3931,
          "type": "source"
        }
      ]
    }
  }
}