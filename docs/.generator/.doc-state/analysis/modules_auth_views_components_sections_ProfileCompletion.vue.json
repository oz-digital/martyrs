{
  "path": "../../src/modules/auth/views/components/sections/ProfileCompletion.vue",
  "relativePath": "modules/auth/views/components/sections/ProfileCompletion.vue",
  "type": "source",
  "name": "ProfileCompletion.vue",
  "extension": ".vue",
  "analysis": {
    "Summary": "Vue 3 component that displays a user profile completion meter: a header text, a percentage value (either passed in or calculated), an optional call-to-action button linking to an edit profile route, and a visual progress bar.",
    "Purpose": "To give users visual feedback on how complete their profile data is, encouraging them to fill out missing fields and providing a quick link to the profile edit page.",
    "Components": [
      {
        "name": "ProfileCompletion",
        "type": "Vue SFC (Single-File Component)",
        "responsibility": "Render a section with a title, percentage display, optional CTA button, and a styled progress bar."
      }
    ],
    "Functions": [
      {
        "name": "calculateCompletion",
        "purpose": "Recursively traverse a profile object, count total and filled properties, and compute a completion percentage.",
        "parameters": [
          {
            "name": "profileObject",
            "type": "Object",
            "description": "The user profile data to analyze."
          }
        ],
        "returns": {
          "type": "Number",
          "description": "Integer percentage of filled properties (0–100)."
        }
      }
    ],
    "Dependencies": [
      "vue (ref, defineProps)",
      "vue-router (router-link)"
    ],
    "Usage": "Imported into parent views or pages where profile progress should be displayed. Used as `<ProfileCompletion :target=\"userProfile\" :cta=\"true\" text=\"Profile Complete\" text_cta=\"Edit\" />` or similar. Relies on a named route 'User Edit Profile' existing in the router.",
    "Importance": 3,
    "Notes": [
      "The component uses `defineProps` and a top-level call to calculateCompletion; updates to `target` after initial render won’t recalculate the percentage (no watcher or onMounted hook).",
      "The `percentage` prop can override the computed value.",
      "The `<style scoped>` block is empty—styles come from global utility classes (e.g., Tailwind or custom).",
      "The `user` prop is typed as Object but used directly as a route param; likely needs `user._id`."
    ]
  }
}