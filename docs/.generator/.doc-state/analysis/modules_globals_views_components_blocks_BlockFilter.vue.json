{
  "path": "../../src/modules/globals/views/components/blocks/BlockFilter.vue",
  "relativePath": "modules/globals/views/components/blocks/BlockFilter.vue",
  "type": "source",
  "name": "BlockFilter.vue",
  "extension": ".vue",
  "analysis": {
    "Summary": "BlockFilter.vue представляет собой Vue 3 компонент, который выводит на экран сворачиваемый список фильтров. Каждый фильтр раскрывается/сворачивается с помощью компонента Spoiler, а варианты внутри него отображаются как набор чекбоксов. При выборе опции генерируется событие 'click_filter', а кнопка Reset Filters позволяет сбросить все выбранные фильтры.",
    "Purpose": "Обеспечить в интерфейсе блок фильтрации данных: отобразить группы опций, дать возможность выбрать одну опцию в группе и сбросить все фильтры.",
    "Components": [
      {
        "name": "Spoiler",
        "responsibility": "Оборачивает каждый блок фильтра в сворачиваемый/раскрываемый контейнер с заголовком и контентом."
      },
      {
        "name": "Checkbox",
        "responsibility": "Отображает отдельную опцию фильтра как чекбокс (радио-кнопку), позволяет переключать состояние выбора."
      },
      {
        "name": "IconChevronBottom",
        "responsibility": "Иконка-стрелка, указывающая вниз; поворачивается на 180° при раскрытии Spoiler."
      }
    ],
    "Functions": [
      {
        "name": "handleCheckboxUpdate",
        "description": "Вызывается при переключении чекбокса; сохраняет новое состояние в модель filter.selected и эмитит событие 'click_filter'.",
        "parameters": [
          {
            "name": "filterKey",
            "type": "string",
            "description": "Ключ группы фильтра (filterOption.value)."
          },
          {
            "name": "event",
            "type": "boolean",
            "description": "Новое значение выбранного чекбокса."
          }
        ]
      },
      {
        "name": "resetFilters",
        "description": "Сбрасывает всю модель выбранных фильтров filter.selected в пустой объект.",
        "parameters": []
      }
    ],
    "Dependencies": [
      {
        "module": "vue",
        "imports": [
          "ref",
          "defineProps",
          "defineEmits",
          "defineModel"
        ]
      },
      {
        "module": "@martyrs/src/components/Checkbox/Checkbox.vue",
        "imports": [
          "Checkbox"
        ]
      },
      {
        "module": "@martyrs/src/components/Spoiler/Spoiler.vue",
        "imports": [
          "Spoiler"
        ]
      },
      {
        "module": "@martyrs/src/modules/icons/navigation/IconChevronBottom.vue",
        "imports": [
          "IconChevronBottom"
        ]
      }
    ],
    "Usage": "Импортируется и используется в родительских компонентах, которым нужны фильтры. Пример: <BlockFilter :options=\"filterOptions\" @click_filter=\"onFilterClick\" />. Внешняя модель filter передаётся через defineModel('filter') из родителя.",
    "Importance": 3,
    "Notes": [
      "Использует Composition API с <script setup> и кастомный макрос defineModel для двухстороннего связывания состояния filter.",
      "Все обработчики событий заданы инлайн; можно вынести их в отдельные методы для улучшения читаемости.",
      "Сброс фильтров реализован простым присваиванием пустого объекта — родитель должен следить за реактивностью."
    ]
  }
}