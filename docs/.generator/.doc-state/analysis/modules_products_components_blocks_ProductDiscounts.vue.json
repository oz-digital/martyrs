{
  "path": "../../src/modules/products/components/blocks/ProductDiscounts.vue",
  "relativePath": "modules/products/components/blocks/ProductDiscounts.vue",
  "type": "source",
  "name": "ProductDiscounts.vue",
  "extension": ".vue",
  "analysis": {
    "Summary": "ProductDiscounts.vue is a Vue component that renders a list of available discounts (special offers) for a product variant. It displays each discount’s name, value (formatted with currency and unit), optional description, and any date/time conditions as chips. Users can click on a discount card to select it.",
    "Purpose": "Provide a UI block in the product detail or checkout flow that shows all applicable discount offers for a given product and allow the user to choose one.",
    "Components": [
      {
        "name": "IconDiscount",
        "path": "@martyrs/src/modules/icons/entities/IconDiscount.vue",
        "role": "Displays the discount icon next to the heading."
      },
      {
        "name": "Chips",
        "path": "@martyrs/src/components/Chips/Chips.vue",
        "role": "Renders small labeled chips representing discount conditions (date/time)."
      },
      {
        "name": "Tooltip",
        "path": "@martyrs/src/components/Tooltip/Tooltip.vue",
        "role": "Wraps the discount name to show full description on hover if it’s too long."
      },
      {
        "name": "currentVariant",
        "type": "Computed",
        "role": "Determines which product variant is in use (either selectedVariant or the first in productVariants)."
      }
    ],
    "Functions": [
      {
        "name": "hasDateCondition",
        "params": [
          "discount"
        ],
        "description": "Returns true if the discount object has a start or end date."
      },
      {
        "name": "hasTimeCondition",
        "params": [
          "discount"
        ],
        "description": "Returns true if the discount object has a start or end time."
      },
      {
        "name": "formatDateRange",
        "params": [
          "dateRange"
        ],
        "description": "Formats a dateRange object into a localized string \"start - end\", handling missing start/end."
      },
      {
        "name": "formatTimeRange",
        "params": [
          "timeRange"
        ],
        "description": "Formats a timeRange object into a \"start-end today\" or default labels when missing."
      },
      {
        "name": "getConditionsAsChips",
        "params": [
          "discount"
        ],
        "description": "Builds an array of chip data objects for date/time conditions present in the discount."
      },
      {
        "name": "selectDiscount",
        "params": [
          "discount"
        ],
        "description": "Emits a 'select-discount' event with the chosen discount payload."
      }
    ],
    "Dependencies": [
      "vue (computed, defineProps, defineEmits)",
      "@martyrs/src/modules/icons/entities/IconDiscount.vue",
      "@martyrs/src/components/Chips/Chips.vue",
      "@martyrs/src/components/Tooltip/Tooltip.vue"
    ],
    "Usage": "Imported into higher-level product or checkout components. You pass in props: discounts (Array), regularPrice, selectedVariant and productVariants. The parent listens for the 'select-discount' event to update the applied discount.",
    "Importance": 3,
    "Notes": "1. Uses scoped CSS for hover effect on discount cards. 2. Date/time logic is simplified (always marks 'today'). 3. Quantity-based condition code is commented out—may be revisited. 4. Defaults ensure component renders nothing if no discounts are provided."
  }
}