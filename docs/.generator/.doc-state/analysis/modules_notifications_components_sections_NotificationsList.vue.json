{
  "path": "../../src/modules/notifications/components/sections/NotificationsList.vue",
  "relativePath": "modules/notifications/components/sections/NotificationsList.vue",
  "type": "source",
  "name": "NotificationsList.vue",
  "extension": ".vue",
  "analysis": {
    "Summary": "Vue component that displays a list of user notifications with loading, empty-state and refresh controls. It fetches notifications on mount, filters and sorts them, and handles click actions.",
    "Purpose": "To provide a reusable notifications list UI in the Martyrs-based application, managing fetch, display, filtering and user interaction for notifications.",
    "Components": [
      {
        "name": "NotificationsList",
        "role": "Root component rendering the full notifications list interface, including header, loading, empty states, items and footer."
      },
      {
        "name": "NotificationItem",
        "role": "Child component rendering an individual notification entry. Imported from '../blocks/NotificationItem.vue'."
      }
    ],
    "Functions": [
      {
        "name": "filteredNotifications",
        "type": "computed",
        "description": "Filters and sorts the raw notifications array based on the selected filterType ('all', 'unread', 'read', or specific types) and orders them by creation date descending.",
        "params": []
      },
      {
        "name": "emptyMessage",
        "type": "computed",
        "description": "Generates a context-specific empty-state message depending on whether there are zero notifications or no notifications matching the current filter.",
        "params": []
      },
      {
        "name": "handleNotificationClick",
        "type": "method",
        "description": "Invokes the injected handleNotificationAction callback when a notification is clicked, passing its ID and metadata.",
        "params": [
          {
            "name": "notification",
            "type": "object",
            "description": "Notification item containing _id and metadata fields."
          }
        ]
      },
      {
        "name": "refreshNotifications",
        "type": "method",
        "description": "Calls the injected getNotifications function with the current user ID to reload notifications.",
        "params": []
      },
      {
        "name": "formatTime",
        "type": "method",
        "description": "Formats a timestamp into a relative or absolute string (e.g., 'Just now', '5 minutes ago', or 'Oct 5, 2023, 14:07').",
        "params": [
          {
            "name": "timestamp",
            "type": "string|number|Date",
            "description": "The date/time value to format."
          }
        ]
      }
    ],
    "Dependencies": [
      "vue (ref, computed, onMounted, inject)",
      "vue-router (useRouter)",
      "../blocks/NotificationItem.vue",
      "@martyrs/src/modules/auth/views/store/auth.js",
      "injected useNotifications provider"
    ],
    "Usage": "Imported into a parent view or layout where notifications are needed. The consuming parent must provide a 'useNotifications' injection that supplies notification state and actions.",
    "Importance": 4,
    "Notes": [
      "Filter controls in the header are currently commented out, ready for future enablement.",
      "Scoped styles apply a max-width and center alignment for desktop, and hide header on mobile via MOBILE_APP flag.",
      "Relative time formatting is implemented manually without external libraries.",
      "onMounted hook fetches notifications only if none are already loaded.",
      "All interactions (mark all read, refresh, click) rely on the injected notification service."
    ]
  }
}