{
  "path": "../../src/modules/rents/views/components/pages/GanttChart.vue",
  "relativePath": "modules/rents/views/components/pages/GanttChart.vue",
  "type": "source",
  "name": "GanttChart.vue",
  "extension": ".vue",
  "analysis": {
    "Summary": "GanttChart.vue — Vue.js component that renders an interactive Gantt chart with three views (hours, days, weeks). It displays items (e.g., rentals) as horizontal bars on a time-based grid and provides controls to switch views, navigate periods, select month/year and jump to today.",
    "Purpose": "To visualize a collection of time-bound items (such as rental bookings) along a timeline in different granularities, enabling users to inspect schedules, statuses and navigate across time.",
    "Components": [
      {
        "name": "GanttChart (this component)",
        "responsibility": "Manages state for date range, view mode, renders header (timeline), body (rows and bars), handles navigation and emits events."
      },
      {
        "name": "Tab",
        "source": "@martyrs/src/components/Tab/Tab.vue",
        "responsibility": "Renders the view-mode selector tabs (Hours/Days/Weeks) and emits selection events."
      },
      {
        "name": "Select",
        "source": "@martyrs/src/components/Select/Select.vue",
        "responsibility": "Dropdown selector used for selecting year."
      },
      {
        "name": "IconChevronLeft",
        "source": "@martyrs/src/modules/icons/navigation/IconChevronLeft.vue",
        "responsibility": "Left navigation arrow icon."
      },
      {
        "name": "IconChevronRight",
        "source": "@martyrs/src/modules/icons/navigation/IconChevronRight.vue",
        "responsibility": "Right navigation arrow icon."
      }
    ],
    "Functions": [
      {
        "name": "switchView",
        "description": "Switches between 'hours', 'days' and 'weeks' views, updates date range and resets scroll position.",
        "parameters": [
          "viewType (String)"
        ]
      },
      {
        "name": "updateDateRangeForView",
        "description": "Adjusts displayStartDate, displayEndDate and cellWidth based on current view and selected month/year.",
        "parameters": []
      },
      {
        "name": "navigatePrevious",
        "description": "Moves the visible time window backwards (by 3 days, 1 month or 4 weeks) depending on current view.",
        "parameters": []
      },
      {
        "name": "navigateNext",
        "description": "Moves the visible time window forwards (by 3 days, 1 month or 4 weeks) depending on current view.",
        "parameters": []
      },
      {
        "name": "goToToday",
        "description": "Sets month/year to today and centers the chart on the current date.",
        "parameters": []
      },
      {
        "name": "centerViewOnDate",
        "description": "Scrolls the chart container so that a given date/hour is centered in view.",
        "parameters": [
          "date (Date)"
        ]
      },
      {
        "name": "visibleDates (computed)",
        "description": "Generates array of Date objects between displayStartDate and displayEndDate (daily granularity).",
        "parameters": []
      },
      {
        "name": "visibleHours (computed)",
        "description": "Generates array of { date, hour } objects for every 2-hour interval between displayStartDate and displayEndDate.",
        "parameters": []
      },
      {
        "name": "visibleWeeks (computed)",
        "description": "Generates array of week ranges ({ start, end, isMonthStart }) covering displayStartDate to displayEndDate.",
        "parameters": []
      },
      {
        "name": "yearOptions (computed)",
        "description": "Builds a list of years ±5 around the current calendar year for the year selector.",
        "parameters": []
      },
      {
        "name": "handleScroll",
        "description": "Emits 'load-more' or adjusts timeline header on horizontal scroll (implementation referenced in template).",
        "parameters": [
          "event (Event)"
        ]
      },
      {
        "name": "Utility helpers",
        "description": "Various methods for formatting dates (formatShortDate, formatHour, formatMonth, formatDay, formatDateRange), checking current/today/week status (isCurrentHour, isToday, isWeekend, isCurrentWeek), calculating week number (getWeekNumber), grouping items and computing bar geometry (getItemBars, getItemTitle, getStatusClass, getBarStatusClass).",
        "parameters": []
      }
    ],
    "Dependencies": [
      "vue (ref, computed, watch, onMounted, nextTick, defineProps, defineEmits)",
      "@martyrs/src/components/Tab/Tab.vue",
      "@martyrs/src/components/Select/Select.vue",
      "@martyrs/src/modules/icons/navigation/IconChevronLeft.vue",
      "@martyrs/src/modules/icons/navigation/IconChevronRight.vue"
    ],
    "Usage": "Imported into a parent view or page as:\nimport GanttChart from './GanttChart.vue';\n\nUsed in template with props: items, startDate, endDate, and listens to events 'item-click' and 'load-more'.",
    "Importance": 4,
    "Notes": [
      "No <style> block is present; styling is driven by global/utility classes (e.g., bg-white, radius-small).",
      "handleScroll is referenced in template but actual implementation should include logic for infinite / lazy loading or sticky header adjustment.",
      "Emits 'load-more' for pagination when scrolling far right.",
      "Dynamic bar positioning relies on rowHeight ref (not shown) and idKey prop for key uniqueness.",
      "Truncated code snippet may hide additional watchers or lifecycle hooks (e.g., onMounted logic)."
    ]
  }
}