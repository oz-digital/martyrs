{
  "path": "../../src/modules/products/routes/leftovers.routes.js",
  "relativePath": "modules/products/routes/leftovers.routes.js",
  "type": "source",
  "name": "leftovers.routes.js",
  "extension": ".js",
  "analysis": {
    "Summary": "Этот файл регистрирует HTTP-маршруты для CRUD-операций над ресурсом «leftovers» с помощью переданного объекта приложения (app) и подключения к базе данных (db).",
    "Purpose": "Определить набор API-эндпоинтов для работы с остатками продуктов (leftovers) и связать их с методами контроллера.",
    "Components": [
      {
        "name": "default export",
        "type": "Function",
        "responsibility": "Функция инициализации маршрутов, принимает app и db, создаёт экземпляр контроллера и регистрирует маршруты."
      },
      {
        "name": "controller",
        "type": "Object",
        "responsibility": "Набор методов для обработки запросов: read, get, create, update, delete."
      }
    ],
    "Functions": [
      {
        "name": "exported default function",
        "description": "Инициализирует маршруты в переданном приложении",
        "parameters": [
          {
            "name": "app",
            "type": "Object",
            "description": "Инстанс веб-фреймворка для регистрации HTTP-маршрутов"
          },
          {
            "name": "db",
            "type": "Any",
            "description": "Подключение к базе данных, используется при создании контроллера"
          }
        ]
      },
      {
        "name": "controller.read",
        "description": "Обрабатывает GET /leftovers, возвращает список всех leftovers",
        "parameters": [
          "req",
          "res"
        ]
      },
      {
        "name": "controller.get",
        "description": "Обрабатывает GET /leftovers/:_id, возвращает один leftover по идентификатору",
        "parameters": [
          "req",
          "res"
        ]
      },
      {
        "name": "controller.create",
        "description": "Обрабатывает POST /leftovers, создаёт новый leftover",
        "parameters": [
          "req",
          "res"
        ]
      },
      {
        "name": "controller.update",
        "description": "Обрабатывает POST /leftovers/:_id, обновляет существующий leftover",
        "parameters": [
          "req",
          "res"
        ]
      },
      {
        "name": "controller.delete",
        "description": "Обрабатывает DELETE /leftovers/:_id, удаляет указанный leftover",
        "parameters": [
          "req",
          "res"
        ]
      }
    ],
    "Dependencies": [
      {
        "module": "../controllers/leftovers.controller.js",
        "importedAs": "controllerFactory",
        "purpose": "Фабрика для создания контроллера операций с leftovers"
      }
    ],
    "Usage": "Импортируется и вызывается при инициализации приложения: `import leftoversRoutes from './modules/products/routes/leftovers.routes.js'; leftoversRoutes(app, db);`",
    "Importance": 3,
    "Notes": [
      "Не содержит собственной логики обработки — все действия делегируются контроллеру.",
      "Маршруты регистрируются сразу при вызове функции-экспорта.",
      "Используется REST-подход: методы соответствуют CRUD-операциям.",
      "Небольшой риск дублирования HTTP-методов для update и create (оба POST), можно рассмотреть PUT для обновления."
    ]
  }
}