{
  "path": "../../src/modules/backoffice/components/pages/Dashboard.vue",
  "relativePath": "modules/backoffice/components/pages/Dashboard.vue",
  "type": "source",
  "name": "Dashboard.vue",
  "extension": ".vue",
  "analysis": {
    "summary": "Vue.js компонент страницы административной панели «Dashboard». Отображает обзор ключевых метрик (активные участники, новые заказы, месячный доход) и блоки Recent Orders и Activity Feed.",
    "purpose": "Обеспечить интерфейс главной страницы бэкофис-панели: визуализация статистики и последних заказов для администратора.",
    "components": [
      {
        "name": "Block",
        "from": "@martyrs/src/components/Block/Block.vue",
        "role": "Контейнер для визуальных блоков с заголовком и слотами."
      },
      {
        "name": "Feed",
        "from": "@martyrs/src/components/Feed/Feed.vue",
        "role": "Компонент ленивой подгрузки списков с поддержкой состояний и управлением через store."
      },
      {
        "name": "Table",
        "from": "@martyrs/src/components/Table/Table.vue",
        "role": "Таблица для отображения переданных items и колонок."
      },
      {
        "name": "StatusBadge",
        "from": "@martyrs/src/components/Table/StatusBadge.vue",
        "role": "Визуальный бейдж для отображения статуса заказа."
      },
      {
        "name": "IconProfile",
        "from": "@martyrs/src/modules/icons/entities/IconProfile.vue",
        "role": "Иконка профиля."
      },
      {
        "name": "IconProducts",
        "from": "@martyrs/src/modules/icons/entities/IconProducts.vue",
        "role": "Иконка продуктов (не используется в шаблоне)."
      },
      {
        "name": "IconEvents",
        "from": "@martyrs/src/modules/icons/entities/IconEvents.vue",
        "role": "Иконка событий (не используется в шаблоне)."
      },
      {
        "name": "IconGroups",
        "from": "@martyrs/src/modules/icons/entities/IconGroups.vue",
        "role": "Иконка групп (не используется в шаблоне)."
      },
      {
        "name": "IconCommunity",
        "from": "@martyrs/src/modules/icons/entities/IconCommunity.vue",
        "role": "Иконка сообщества (не используется в шаблоне)."
      },
      {
        "name": "IconGallery",
        "from": "@martyrs/src/modules/icons/entities/IconGallery.vue",
        "role": "Иконка галереи (не используется в шаблоне)."
      },
      {
        "name": "IconOrders",
        "from": "@martyrs/src/modules/icons/entities/IconOrders.vue",
        "role": "Иконка заказов."
      },
      {
        "name": "IconLeftovers",
        "from": "@martyrs/src/modules/icons/entities/IconLeftovers.vue",
        "role": "Иконка остатков (не используется в шаблоне)."
      }
    ],
    "functions": [
      {
        "name": "onMounted",
        "signature": "onMounted(async () => { ... })",
        "purpose": "Vue lifecycle hook, вызывается при монтировании компонента."
      },
      {
        "name": "orders.actions.read",
        "signature": "read(options: { user: string; limit: number; page: number; }) → Promise",
        "purpose": "Загружает список заказов для компонента Feed."
      },
      {
        "name": "formatter (ID)",
        "signature": "(value: string) ⇒ string",
        "purpose": "Форматирует ID заказа в виде #xxxx...xxxx."
      },
      {
        "name": "formatter (Name)",
        "signature": "(value: string) ⇒ string",
        "purpose": "Добавляет префикс emoji к имени клиента."
      },
      {
        "name": "formatter (Positions)",
        "signature": "(value: any[]) ⇒ number",
        "purpose": "Возвращает число позиций в заказе."
      },
      {
        "name": "formatter (Metadata)",
        "signature": "(value: string|Date) ⇒ string",
        "purpose": "Форматирует дату создания заказа в локальную строку."
      }
    ],
    "dependencies": [
      "vue (ref, onMounted)",
      "vue-router (useRoute, useRouter)",
      "@martyrs/src/components/Block/Block.vue",
      "@martyrs/src/components/Feed/Feed.vue",
      "@martyrs/src/components/Table/Table.vue",
      "@martyrs/src/components/Table/StatusBadge.vue",
      "@martyrs/src/modules/icons/entities/IconProfile.vue",
      "@martyrs/src/modules/icons/entities/IconProducts.vue",
      "@martyrs/src/modules/icons/entities/IconEvents.vue",
      "@martyrs/src/modules/icons/entities/IconGroups.vue",
      "@martyrs/src/modules/icons/entities/IconCommunity.vue",
      "@martyrs/src/modules/icons/entities/IconGallery.vue",
      "@martyrs/src/modules/icons/entities/IconOrders.vue",
      "@martyrs/src/modules/icons/entities/IconLeftovers.vue",
      "@martyrs/src/modules/auth/views/store/auth.js",
      "@martyrs/src/modules/organizations/store/organizations.js",
      "@martyrs/src/modules/orders/store/orders.js"
    ],
    "usage": "Импортируется как страница в конфигурации маршрутизатора бэкофис-модуля (например, в routes.js) и отображается при переходе администратора на «/dashboard».",
    "importance": 4,
    "notes": [
      "В секции <style> нет стилей — стили унаследованы от глобальной темы и утилитных классов.",
      "Пустой массив columns в скрипте не используется — возможно, задел под будущие расширения.",
      "Некоторые иконки импортированы, но не используются в шаблоне (IconProducts, IconEvents, IconGroups, IconCommunity, IconGallery, IconLeftovers).",
      "Feed-компонент настраивается через props store и states без прямой мутации локального состояния.",
      "Компонент организован с использованием Composition API (script setup)."
    ]
  }
}