{
  "path": "../../src/modules/organizations/models/membership.model.js",
  "relativePath": "modules/organizations/models/membership.model.js",
  "type": "source",
  "name": "membership.model.js",
  "extension": ".js",
  "analysis": {
    "Summary": "Этот файл экспортирует фабрику для создания Mongoose-схемы и модели «Membership», которая хранит информацию о членстве пользователя в организации, отделе или у другого пользователя.",
    "Purpose": "Определить и зарегистрировать в переданном экземпляре БД (db) модель Membership, чтобы остальные части приложения могли хранить, запрашивать и управлять записями о членствах.",
    "Components": [
      {
        "name": "MembershipSchema",
        "type": "Mongoose Schema",
        "responsibilities": "Описывает поля документа membership: user, type, role, label, target и включает автоматические поля timestamps."
      },
      {
        "name": "Membership",
        "type": "Mongoose Model",
        "responsibilities": "Обеспечивает CRUD-операции и методы работы с коллекцией memberships."
      }
    ],
    "Functions": [
      {
        "name": "default export",
        "description": "Фабричная функция, принимающая объект db, создающая схему, устанавливающая индексы и регистрирующая модель в mongoose.",
        "parameters": [
          "db (объект с полем mongoose)"
        ]
      },
      {
        "name": "ref function (target)",
        "description": "Динамически возвращает имя коллекции для поля target на основании значения поля type.",
        "parameters": [
          "value (значение поля target)"
        ]
      }
    ],
    "Dependencies": [
      "db.mongoose – Mongoose для определения схем и моделей",
      "User model – для поля user и при type='user' в поле target",
      "Organization model – для type='organization' в поле target"
    ],
    "Usage": "Импортируется как `const Membership = require('modules/organizations/models/membership.model')(db);` после чего доступен как `db.mongoose.model('Membership')` или через хранилище моделей фреймворка.",
    "Importance": 4,
    "Notes": [
      "Поле type поддерживает три варианта: 'organization', 'department', 'user', но в ref-функции не описан case для 'department'.",
      "Добавлен композитный индекс { user: 1, target: 1, role: 1 } для оптимизации частых запросов по этим полям.",
      "Используются timestamps для автоматического управления createdAt и updatedAt."
    ]
  }
}