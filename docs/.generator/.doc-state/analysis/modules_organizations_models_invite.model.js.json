{
  "path": "../../src/modules/organizations/models/invite.model.js",
  "relativePath": "modules/organizations/models/invite.model.js",
  "type": "source",
  "name": "invite.model.js",
  "extension": ".js",
  "analysis": {
    "Summary": "Этот файл определяет Mongoose-схему и модель Invite для хранения и управления приглашениями в систему, добавляет метаданные владения и учётных данных, а также устанавливает уникальные индексы на комбинации полей.",
    "Purpose": "Задача файла — централизованно описать структуру и правила валидации документов «приглашений» (Invite) в базе данных MongoDB через Mongoose и предоставить готовую модель для использования в модуле организаций.",
    "Components": [
      {
        "name": "InviteSchema",
        "type": "Mongoose.Schema",
        "responsibilities": [
          "Определить поля: code, status, role, timestamps",
          "Применить общие схемы владения (ownership) и учётных данных (credentials)",
          "Настроить уникальные составные индексы для полей owner+email и owner+phone"
        ]
      },
      {
        "name": "Invite",
        "type": "Mongoose.Model",
        "responsibilities": [
          "Предоставлять API для CRUD-операций с документами приглашений"
        ]
      }
    ],
    "Functions": [
      {
        "name": "default export",
        "signature": "db => Model",
        "description": "Функция-фабрика, которая принимает объект подключения к БД (с Mongoose) и возвращает готовую модель Invite.",
        "parameters": [
          {
            "name": "db",
            "type": "Object",
            "description": "Инстанс подключения к БД, содержащий mongoose и другие параметы."
          }
        ],
        "returns": {
          "type": "Mongoose.Model",
          "description": "Модель Invite"
        }
      }
    ],
    "Dependencies": [
      "@martyrs/src/modules/globals/models/schemas/credentials.schema.js",
      "@martyrs/src/modules/globals/models/schemas/ownership.schema.js",
      "db.mongoose.Schema",
      "db.mongoose.model"
    ],
    "Usage": "В инициализаторе или модуле организаций импортируется как `import createInviteModel from 'modules/organizations/models/invite.model.js'` и вызывается: `const Invite = createInviteModel(db);` для регистрации модели в Mongoose.",
    "Importance": 3,
    "Notes": [
      "Используются partialFilterExpression для уникальных индексов, что позволяет создавать уникальность только когда email/phone заданы.",
      "Применяются два общих плагина — ownership и credentials — для унификации полей (owner, createdBy, updatedBy и т. д.).",
      "Схема автоматически добавляет поля createdAt и updatedAt благодаря опции timestamps."
    ]
  }
}