{
  "path": "../../src/modules/governance/views/store/votings.js",
  "relativePath": "modules/governance/views/store/votings.js",
  "type": "source",
  "name": "votings.js",
  "extension": ".js",
  "analysis": {
    "Summary": "Этот файл реализует локальный хранилище (store) голосований во Vue-приложении на основе Composition API: содержит реактивное состояние голосов, набор асинхронных действий для работы с API и историю изменений состояния.",
    "Purpose": "Служит модулем управления голосами: чтение, создание, обновление и удаление голосов через HTTP-запросы, а также хранит текущее состояние и историю изменений голосований.",
    "Components": [
      {
        "name": "votesState",
        "type": "reactive object",
        "responsibilities": "Хранит список всех голосов и текущий объект голоса (выбранный вариан, пользователь, время)."
      },
      {
        "name": "votesActions",
        "type": "actions object",
        "responsibilities": "Набор методов для взаимодействия с серверным API: создание, получение, обновление и удаление голосов."
      },
      {
        "name": "votesHistory",
        "type": "Array",
        "responsibilities": "Локальный лог-буфер, содержащий серию снимков votesState при каждом изменении."
      }
    ],
    "Functions": [
      {
        "name": "castVote",
        "description": "Отправляет POST-запрос для голосования по заданному votingId, обновляет локальный список all и возвращает новый голос.",
        "params": [
          "votingId: String",
          "vote: Object"
        ]
      },
      {
        "name": "getVotesForVoting",
        "description": "Получает список всех голосов для конкретного голосования.",
        "params": [
          "votingId: String"
        ]
      },
      {
        "name": "getUserVotes",
        "description": "Запрашивает все голоса, отданные конкретным пользователем.",
        "params": [
          "userId: String"
        ]
      },
      {
        "name": "updateVote",
        "description": "Отправляет PUT-запрос для редактирования существующего голоса, обновляет элемент в votesState.all и возвращает обновлённый объект.",
        "params": [
          "id: String",
          "vote: Object"
        ]
      },
      {
        "name": "deleteVote",
        "description": "Отправляет DELETE-запрос для удаления голоса по его id и убирает его из votesState.all.",
        "params": [
          "id: String"
        ]
      }
    ],
    "Dependencies": [
      "vue (reactive, watch)",
      "@martyrs/src/modules/globals/views/store/globals.js (setError)",
      "@martyrs/src/modules/globals/views/utils/axios-instance.js ($axios)"
    ],
    "Usage": "Импортируется как модуль Vue store: `import { votesState, votesActions } from 'modules/governance/views/store/votings.js'`. Используется в компонентах для вызова действий и доступа к состоянию голосований.",
    "Importance": 3,
    "Notes": "1) Через watch ведётся глубокая копия состояния в votesHistory — может расти без ограничений. 2) Все ошибки обрабатываются единообразно через setError. 3) current в votesState не используется в действиях напрямую, зарезервирован под локальные формы."
  }
}