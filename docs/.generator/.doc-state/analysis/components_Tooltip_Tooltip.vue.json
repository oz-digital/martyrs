{
  "path": "../../src/components/Tooltip/Tooltip.vue",
  "relativePath": "components/Tooltip/Tooltip.vue",
  "type": "source",
  "name": "Tooltip.vue",
  "extension": ".vue",
  "analysis": {
    "Summary": "Vue 3 component that wraps any slot content and shows a styled tooltip with custom text on mouse hover.",
    "Purpose": "Provide contextual hints or labels for arbitrary elements by displaying a small popup tooltip when the user hovers over the wrapped content.",
    "Components": [
      {
        "name": "Tooltip",
        "type": "Vue component",
        "responsibilities": [
          "Render a wrapper div that listens for mouse events.",
          "Render a tooltip box (`.tooltip-content`) positioned near the cursor.",
          "Expose a `text` prop to customize the tooltip content."
        ]
      },
      {
        "name": "CSS classes",
        "items": [
          {
            "class": "tooltip-container",
            "role": "Relative container for positioning the tooltip and making the host content inline-block."
          },
          {
            "class": "tooltip-content",
            "role": "Absolute positioned box for tooltip text; non-interactive (pointer-events: none)."
          }
        ]
      }
    ],
    "Functions": [
      {
        "name": "showTooltip",
        "description": "Handles mouseover event: marks tooltip visible and computes its position based on the mouse coordinates.",
        "parameters": [
          {
            "name": "event",
            "type": "MouseEvent",
            "description": "The mouse event from which to read clientX and clientY."
          }
        ]
      },
      {
        "name": "hideTooltip",
        "description": "Handles mouseleave event: hides the tooltip by updating reactive style.",
        "parameters": []
      }
    ],
    "Dependencies": [
      "vue (ref, reactive, defineProps)"
    ],
    "Usage": "Import the component with `import Tooltip from 'components/Tooltip/Tooltip.vue'` and then use in templates: `<Tooltip text=\"Hello, world!\"><button>Hover me</button></Tooltip>`.",
    "Importance": 3,
    "Notes": [
      "Position calculation divides clientX/Y by 100 before adding offset â€” may not align precisely with cursor in all layouts.",
      "Tooltip style is fully controlled via a reactive `tooltipStyle` object; can be extended for animation or theming.",
      "No external CSS or positioning library is used; everything is inline-reactive."
    ]
  }
}