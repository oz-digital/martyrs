{
  "path": "../../src/modules/products/components/elements/Image360.vue",
  "relativePath": "modules/products/components/elements/Image360.vue",
  "type": "source",
  "name": "Image360.vue",
  "extension": ".vue",
  "analysis": {
    "Summary": "Vue.js component that loads a sequence of product images from a given folder and lets the user drag or touch-swipe to rotate through them, simulating a 360° view. Displays a loader with percentage progress until the first frame is ready.",
    "Purpose": "To provide an interactive 360-degree product viewer in the storefront, enhancing product presentation by allowing users to rotate the product image sequence via mouse or touch gestures.",
    "Components": [
      {
        "name": "Image360.vue",
        "responsibility": "Main container component that handles image preloading, user interaction (drag/touch rotation) and rendering of the current frame or loader."
      },
      {
        "name": "Loader",
        "responsibility": "Displays a loading spinner with progress percentage while the image sequence is being preloaded."
      },
      {
        "name": "Transition (scale5)",
        "responsibility": "Animation wrapper that scales and fades in the first loaded image, and the loader component."
      }
    ],
    "Functions": [
      {
        "name": "loadImages",
        "purpose": "Asynchronously preload all image frames (1.jpg to N.jpg) from the specified path and track how many have successfully decoded.",
        "parameters": []
      },
      {
        "name": "startRotation",
        "purpose": "Begin tracking a drag or touch sequence for rotation. Records the initial clientX position.",
        "parameters": [
          {
            "event": "MouseEvent | TouchEvent"
          }
        ]
      },
      {
        "name": "rotate",
        "purpose": "On move events, compute horizontal delta; if above threshold, advance or rewind the image index to rotate view.",
        "parameters": [
          {
            "event": "MouseEvent | TouchEvent"
          }
        ]
      },
      {
        "name": "stopRotation",
        "purpose": "End the drag/touch rotation interaction.",
        "parameters": []
      },
      {
        "name": "unloadImages",
        "purpose": "Clear the internal images array on component unmount to free memory.",
        "parameters": []
      }
    ],
    "Dependencies": [
      "vue (ref, watch, onMounted, onUnmounted, computed from @vue/runtime-core)",
      "Loader component (@martyrs/src/components/Loader/Loader.vue)",
      "Global constant FILE_SERVER_URL (environment or runtime injection)",
      "CSS variables (e.g. --black) defined elsewhere"
    ],
    "Usage": "Imported into parent views or pages with `import Image360 from 'modules/products/components/elements/Image360.vue'` and used in template as `<Image360 :image-path=\"/uploads/360s/product123\" :image-count=\"36\" />`.",
    "Importance": 4,
    "Notes": [
      "Prop `autoRotateSpeed` is declared but not implemented; potential enhancement for automatic rotation.",
      "The `firstImageLoad` ref exists but isn’t toggled—CSS `:css=\"!firstImageLoad\"` may not behave as intended.",
      "`autoRotateInterval` is declared but never initialized; if auto-rotation is required, implement interval logic.",
      "Uses `Image.decode()` which may not be supported on all older browsers; fallback handling could be added.",
      "Scoped styles include transition definitions (expand, scale, scale5) and prevent text selection on drag."
    ]
  }
}