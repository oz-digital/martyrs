{
  "path": "../../src/modules/globals/views/components/partials/Navigation.vue",
  "relativePath": "modules/globals/views/components/partials/Navigation.vue",
  "type": "source",
  "name": "Navigation.vue",
  "extension": ".vue",
  "analysis": {
    "Summary": "Navigation.vue is a Vue 3 component that renders a multi-level navigation menu. It supports expandable/collapsible sections, nested sub-items, theme-aware styling, responsive horizontal vs. sidebar layouts, and route-based highlighting.",
    "Purpose": "Provide the main site navigation UI. It displays categories and items (with optional sub-items), handles expand/collapse behavior, and navigates via vue-router when menu entries are clicked.",
    "Components": [
      {
        "name": "Navigation (this component)",
        "role": "Renders a list of navigation sections, items and optional sub-items; manages expansion state and routing."
      },
      {
        "name": "IconChevronBottom",
        "role": "Chevron icon used to indicate and toggle expandable menu sections."
      },
      {
        "name": "Dropdown",
        "role": "Generic dropdown UI component (imported but not used in this file)."
      },
      {
        "name": "Spoiler",
        "role": "Generic spoiler (collapsible) component (imported but not used in this file)."
      }
    ],
    "Functions": [
      {
        "name": "toggleSection",
        "description": "Toggles the expanded/collapsed state of a given section title. When the sidebar is closed and an expandable item is clicked, it first emits a close event, waits 50ms, then expands.",
        "parameters": [
          "title (String)"
        ]
      },
      {
        "name": "isSectionExpanded",
        "description": "Checks whether a given section title currently exists in the expandedSections list.",
        "parameters": [
          "title (String)"
        ]
      },
      {
        "name": "processRoute",
        "description": "Resolves a route definition that may be a function by invoking it with the auth state and current route, or returns it directly if it's not a function.",
        "parameters": [
          "routeFn (Function|String|Object)"
        ]
      }
    ],
    "Dependencies": [
      "vue (ref, watch, computed, defineProps, defineEmits)",
      "vue-router (useRouter, useRoute)",
      "@martyrs/src/modules/icons/navigation/IconChevronBottom.vue",
      "@martyrs/src/modules/globals/views/store/globals.js",
      "@martyrs/src/modules/auth/views/store/auth.js",
      "@martyrs/src/components/Dropdown/Dropdown.vue",
      "@martyrs/src/components/Spoiler/Spoiler.vue"
    ],
    "Usage": "Imported into a layout or parent view and used as `<Navigation :navigationItems=\"...\" :theme=\"'light'|'dark'\" :stateSidebar=\"boolean\" :horizontal=\"boolean\" @closeSidebar=\"...\" />`. Parent passes an array of section objects with items and optional subItems.",
    "Importance": 4,
    "Notes": [
      "The component directly mutates the prop `stateSidebar` in click handlers, which is against Vue best practicesâ€”should emit an event instead.",
      "The variable `isPhone` is referenced in the template click logic but is not defined in this file (likely a global/composable fallback).",
      "Imports `Dropdown` and `Spoiler` but neither is used in the template.",
      "Uses scoped CSS for rotation, visibility toggling, and custom dropdown enter/leave animations.",
      "Handles both string/Object routes and function-based routes for auth-aware navigation."
    ]
  }
}