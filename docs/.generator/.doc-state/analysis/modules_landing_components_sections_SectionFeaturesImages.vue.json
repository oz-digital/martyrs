{
  "path": "../../src/modules/landing/components/sections/SectionFeaturesImages.vue",
  "relativePath": "modules/landing/components/sections/SectionFeaturesImages.vue",
  "type": "source",
  "name": "SectionFeaturesImages.vue",
  "extension": ".vue",
  "analysis": {
    "Summary": "Vue SFC that renders a “How to buy” / features section with a translated title, subtitle and a 3-column list of feature cards (image, heading, text). It uses vue-i18n for localization and pulls its data from a textData prop (with English/Russian defaults).",
    "Purpose": "Provide a reusable landing-page section that displays a localized list of feature images and descriptions in a responsive grid.",
    "Components": [
      {
        "name": "SectionFeaturesImages",
        "role": "Main Vue component combining template, script (I18n setup) and scoped styles to render the features section."
      }
    ],
    "Functions": [
      {
        "name": "defineProps",
        "description": "Vue 3 Composition API helper that defines incoming props and their types/defaults.",
        "parameters": [
          "{ title: String, textData: Object }"
        ]
      },
      {
        "name": "useI18n",
        "description": "Hook from vue-i18n to setup localization functions based on provided messages.",
        "parameters": [
          "props.textData"
        ]
      },
      {
        "name": "t",
        "description": "Returns a localized string for a given key.",
        "parameters": [
          "key: string"
        ]
      },
      {
        "name": "tm",
        "description": "Returns a localized message or object (e.g. array of features) for a given key.",
        "parameters": [
          "key: string"
        ]
      }
    ],
    "Dependencies": [
      "vue",
      "vue-i18n"
    ],
    "Usage": "Import and register this component in a parent (e.g. landing page) by<br> `import SectionFeaturesImages from 'modules/landing/components/sections/SectionFeaturesImages.vue'`<br>Then use `<SectionFeaturesImages />` in the template, optionally overriding `textData` or `title` props.",
    "Importance": 3,
    "Notes": [
      "Default `textData` prop supplies English and Russian translations for title, subtitle and features array.",
      "Scoped SCSS includes rules for `#grid2` and `.left/.center/.right` with CSS `:has()`, but this component’s template does not reference `#grid2` or those classes—likely leftover or intended for a different section.",
      "CSS `:has()` selector may have limited browser support; test for compatibility.",
      "All image tags use `loading=\"lazy\"` for performance."
    ]
  }
}