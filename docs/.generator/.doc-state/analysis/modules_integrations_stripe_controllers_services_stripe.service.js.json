{
  "path": "../../src/modules/integrations/stripe/controllers/services/stripe.service.js",
  "relativePath": "modules/integrations/stripe/controllers/services/stripe.service.js",
  "type": "source",
  "name": "stripe.service.js",
  "extension": ".js",
  "analysis": {
    "Summary": "Этот файл реализует сервис интеграции с платёжной системой Stripe: создание и обновление продуктов, управление ценами и ссылками на оплату, сессиями Checkout и возвратами.",
    "Purpose": "Предоставить конкретную реализацию абстрактного сервиса платежей (servicePayment) для работы с API Stripe в рамках фреймворка \"martyrs\".",
    "Components": [
      {
        "name": "stripe",
        "type": "constant",
        "description": "Клиентская библиотека Stripe, инициализированная с API-ключом и версией API."
      },
      {
        "name": "servicePaymentStripe",
        "type": "class",
        "description": "Наследует базовый servicePayment и реализует методы для работы с продуктами, ценами, ссылками, сессиями и возвратами в Stripe."
      }
    ],
    "Functions": [
      {
        "name": "createProducts",
        "description": "Создаёт продукт в Stripe и для каждого переданного элемента — цену и ссылку на оплату.",
        "parameters": [
          {
            "name": "entityId",
            "type": "string",
            "description": "ID продукта/события"
          },
          {
            "name": "items",
            "type": "Array<{ name: string, price: number }>",
            "description": "Список типов билетов с их ценами"
          },
          {
            "name": "eventName",
            "type": "string",
            "description": "Название события/продукта"
          }
        ]
      },
      {
        "name": "updateProducts",
        "description": "Обновляет существующий продукт: переименовывает, деактивирует удалённые элементы, создаёт или обновляет цены и ссылки на оплату.",
        "parameters": [
          {
            "name": "entityId",
            "type": "string",
            "description": "ID продукта/события"
          },
          {
            "name": "newItems",
            "type": "Array<{ name: string, price: number }>",
            "description": "Новый набор типов билетов"
          },
          {
            "name": "existingItems",
            "type": "Array<{ name: string, stripePaymentLinkId?: string, link?: string }>",
            "description": "Существующие в системе типы билетов с привязанными ссылками"
          },
          {
            "name": "eventName",
            "type": "string",
            "description": "Новое название события/продукта"
          }
        ]
      },
      {
        "name": "deactivateProduct",
        "description": "Деактивирует продукт в Stripe, все связанные цены и ссылки на оплату.",
        "parameters": [
          {
            "name": "productId",
            "type": "string",
            "description": "ID продукта для деактивации"
          }
        ]
      },
      {
        "name": "createСheckout",
        "description": "Создаёт сессию Stripe Checkout для проведения оплаты по выбранным вариантам.",
        "parameters": [
          {
            "name": "event",
            "type": "{ variants: Array<{ priceId: string, quantity: number }>, successUrl: string, cancelUrl: string }",
            "description": "Данные сессии: позиции, URL успеха и отмены"
          }
        ]
      },
      {
        "name": "deactivateСheckout",
        "description": "Истекает (expire) существующую сессию Checkout.",
        "parameters": [
          {
            "name": "sessionId",
            "type": "string",
            "description": "ID сессии для истечения"
          }
        ]
      },
      {
        "name": "createRefund",
        "description": "Создаёт возврат (refund) для указанного платежного интента.",
        "parameters": [
          {
            "name": "event",
            "type": "{ paymentIntentId: string }",
            "description": "ID платежного интента для возврата"
          }
        ]
      },
      {
        "name": "updateRefund",
        "description": "Обновляет метаданные существующего возврата.",
        "parameters": [
          {
            "name": "refundId",
            "type": "string",
            "description": "ID возврата для обновления"
          },
          {
            "name": "metadata",
            "type": "object",
            "description": "Новые метаданные для возврата"
          }
        ]
      },
      {
        "name": "deactivateRefund",
        "description": "Отменяет (cancel) существующий возврат.",
        "parameters": [
          {
            "name": "refundId",
            "type": "string",
            "description": "ID возврата для отмены"
          }
        ]
      }
    ],
    "Dependencies": [
      {
        "module": "@martyrs/src/modules/integrations/integrations.service.js",
        "imported": "servicePayment",
        "description": "Базовый абстрактный сервис платежей"
      },
      {
        "module": "stripe",
        "imported": "Stripe",
        "description": "Официальная клиентская библиотека Stripe"
      },
      {
        "module": "process.env.STRIPE_API_KEY",
        "description": "Переменная окружения с ключом API Stripe"
      }
    ],
    "Usage": "Импортируется как default-экспорт и регистрируется в контейнере зависимостей martyrs. Другие модули вызывают его методы для управления продуктами, ссылками на оплату, сессиями и возвратами через Stripe.",
    "Importance": 4,
    "Notes": [
      "По умолчанию валюта жёстко задана как THB.",
      "Версия API Stripe указана явно ('2025-04-30.basil').",
      "Методы updateProducts и createProducts тесно работают с метаданными для ticketType, что упрощает синхронизацию в базе.",
      "Все операции обёрнуты в try/catch для логирования ошибок и проброса исключений."
    ]
  }
}