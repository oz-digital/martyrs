{
  "path": "../../src/modules/globals/controllers/classes/globals.observer.js",
  "relativePath": "modules/globals/controllers/classes/globals.observer.js",
  "type": "source",
  "name": "globals.observer.js",
  "extension": ".js",
  "analysis": {
    "Summary": "Этот файл реализует класс Observer, предоставляющий простой механизм подписки на события, их оповещения и удаления слушателей.",
    "Purpose": "Обеспечить централизованную систему управления событиями (event bus) внутри модуля globals — публикацию и подписку на события.",
    "Components": [
      {
        "name": "Observer",
        "role": "Класс-менеджер слушателей событий, поддерживает подписку, оповещение и удаление коллбэков."
      }
    ],
    "Functions": [
      {
        "name": "constructor",
        "description": "Инициализирует объект слушателей как пустой объект.",
        "parameters": []
      },
      {
        "name": "subscribe",
        "description": "Регистрирует callback на событие eventType. Если указан флаг once=true, коллбэк будет удален после первого срабатывания.",
        "parameters": [
          {
            "name": "eventType",
            "type": "string",
            "description": "Имя события."
          },
          {
            "name": "callback",
            "type": "Function",
            "description": "Функция-обработчик события."
          },
          {
            "name": "once",
            "type": "boolean",
            "description": "Флаг одноразового вызова (по умолчанию false)."
          }
        ]
      },
      {
        "name": "notify",
        "description": "Асинхронно вызывает все коллбэки, зарегистрированные на eventType, передавая им данные. Удаляет одноразовые слушатели после выполнения.",
        "parameters": [
          {
            "name": "eventType",
            "type": "string",
            "description": "Имя события для оповещения."
          },
          {
            "name": "data",
            "type": "any",
            "description": "Данные, передаваемые коллбэкам."
          }
        ]
      },
      {
        "name": "remove",
        "description": "Удаляет конкретный callback из списка слушателей для eventType. Если слушателей не останется, удаляет запись о событии.",
        "parameters": [
          {
            "name": "eventType",
            "type": "string",
            "description": "Имя события."
          },
          {
            "name": "callback",
            "type": "Function",
            "description": "Функция-обработчик, которую нужно удалить."
          }
        ]
      }
    ],
    "Dependencies": [],
    "Usage": "import Observer from 'modules/globals/controllers/classes/globals.observer.js';\nconst obs = new Observer();\nobs.subscribe('someEvent', data => { /* ... */ });\nawait obs.notify('someEvent', payload);\nobs.remove('someEvent', handler);",
    "Importance": 4,
    "Notes": "- Использует Map для хранения уникальных коллбэков на каждое событие.\n- Обрабатывает ошибки внутри коллбэков через console.error.\n- Метод notify ждет завершения всех промисов, что гарантирует порядок и завершение обработчиков перед удалением once-слушателей.\n- Не имеет внешних зависимостей и легко может использоваться как самостоятельный event bus."
  }
}