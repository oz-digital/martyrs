{
  "path": "../../src/modules/community/components/pages/BlogPost.vue",
  "relativePath": "modules/community/components/pages/BlogPost.vue",
  "type": "source",
  "name": "BlogPost.vue",
  "extension": ".vue",
  "analysis": {
    "Summary": "Vue page component that fetches and displays a single blog post. It shows loading skeletons, an empty state if no data, the post content inside a card, a source link, and a comments section. It also sets up SEO metadata and a share action.",
    "Purpose": "Provides the UI and data-loading logic for the \"Blogpost\" route in the community module, handling server-side and client-side fetching, rendering, and metadata injection.",
    "Components": [
      {
        "name": "TransitionGroup / transition",
        "responsibility": "Animate list and single-element transitions for skeletons, empty state, content and comments."
      },
      {
        "name": "SkeletonBlogpost",
        "responsibility": "Placeholder skeleton UI shown while the post is loading."
      },
      {
        "name": "EmptyState",
        "responsibility": "Displays a message when no blog post is found."
      },
      {
        "name": "CardBlogpost",
        "responsibility": "Container for the blog post data (title, user, etc.) and custom slot for content."
      },
      {
        "name": "Viewer",
        "responsibility": "Renders structured post content blocks (text, images, etc.)."
      },
      {
        "name": "Comments",
        "responsibility": "Section for displaying and submitting comments on this blog post."
      }
    ],
    "Functions": [
      {
        "name": "fetchBlogpost",
        "purpose": "Asynchronously load the blog post data from the store by user ID and URL param, update local and global state.",
        "params": "none (uses route.params.url, auth.state.user)",
        "returns": "Promise<void>"
      },
      {
        "name": "share",
        "purpose": "Invoke the Web Share API to share title, excerpt, and URL of the current blog post.",
        "params": "none (reads computed refs)",
        "returns": "Promise<void> or early return if not supported"
      }
    ],
    "Dependencies": [
      "vue (ref, computed, onMounted, onServerPrefetch)",
      "@unhead/vue (useHead)",
      "vue-router (useRoute)",
      "@martyrs/src/components/Loader/Loader.vue",
      "@martyrs/src/components/EmptyState/EmptyState.vue",
      "@martyrs/src/modules/community/components/blocks/CardBlogpost.vue",
      "@martyrs/src/modules/icons/skeletons/SkeletonBlogpost.vue",
      "@martyrs/src/modules/organizations/components/sections/Publics.vue",
      "@martyrs/src/modules/community/components/sections/Comments.vue",
      "@martyrs/src/modules/constructor/components/sections/Viewer.vue",
      "@martyrs/src/modules/community/store/blogposts.js",
      "@martyrs/src/modules/auth/views/store/auth.js"
    ],
    "Usage": "Registered as the component for the 'Blogpost' route in the router. When the user navigates to /blog/:url, the router mounts this component, triggers data fetch, and sets page metadata.",
    "Importance": 4,
    "Notes": [
      "Uses onServerPrefetch for SSR data fetching.",
      "Directly mutates blog.state.current after fetch.",
      "SEO metadata (og:, twitter:) is computed and injected via useHead.",
      "Share button in template is commented out; share logic is still implemented.",
      "Empty <style> block indicates styling is handled via utility classes or external styles."
    ]
  }
}