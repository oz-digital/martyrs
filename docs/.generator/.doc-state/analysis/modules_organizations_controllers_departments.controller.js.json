{
  "path": "../../src/modules/organizations/controllers/departments.controller.js",
  "relativePath": "modules/organizations/controllers/departments.controller.js",
  "type": "source",
  "name": "departments.controller.js",
  "extension": ".js",
  "analysis": {
    "Summary": "Этот файл экспортирует фабрику контроллеров для работы с сущностью Department — предоставляет CRUD-операции (чтение одного, чтение списка, создание, обновление, удаление) с использованием Mongoose.",
    "Purpose": "Организовать HTTP-обработчики для управления отделами в рамках заданной организации.",
    "Components": [
      {
        "name": "controllerFactory",
        "type": "Function",
        "responsibility": "Принимает объект db, возвращает набор методов для работы с моделью Department"
      }
    ],
    "Functions": [
      {
        "name": "readOne",
        "params": [
          "req",
          "res"
        ],
        "description": "Находит один отдел по req.params._id, наполняет поля members.user и subdepartments, возвращает документ или 404"
      },
      {
        "name": "read",
        "params": [
          "req",
          "res"
        ],
        "description": "Находит список отделов с опциональными фильтрами по organization и hidden, наполняет поля members.user и subdepartments, возвращает массив или 404"
      },
      {
        "name": "create",
        "params": [
          "req",
          "res"
        ],
        "description": "Создаёт новый отдел в организации req.params._id на основе req.body, возвращает сохранённый документ"
      },
      {
        "name": "update",
        "params": [
          "req",
          "res"
        ],
        "description": "Обновляет отдел по req.body._id новыми данными из req.body, возвращает обновлённый документ или 404"
      },
      {
        "name": "delete",
        "params": [
          "req",
          "res"
        ],
        "description": "Удаляет отдел по req.body._id и req.params._id (организация), возвращает сообщение об успехе или 404"
      }
    ],
    "Dependencies": [
      "db.department (Mongoose model)",
      "db.mongoose.Types.ObjectId (для преобразования строки в ObjectId)",
      "Express req, res"
    ],
    "Usage": "Импортируется как default, вызывается с объектом db: const departmentsCtrl = controllerFactory(db); затем подключается к маршрутам express/ martyrs: router.get('/departments/:_id', departmentsCtrl.readOne) и т.д.",
    "Importance": 3,
    "Notes": [
      "Используется populate для связей members.user и subdepartments",
      "Метод create реализован через async/await, остальные через промисы .then/.catch",
      "Имя ключа экспортируемого метода delete переименовано в deleteDepartment внутри фабрики, но экспортируется как delete",
      "В ответах используется единая схема ошибок: 404 при отсутствии ресурса и 500 при ошибках БД"
    ]
  }
}