{
  "path": "../../src/modules/notifications/components/partials/NotificationItem.vue",
  "relativePath": "modules/notifications/components/partials/NotificationItem.vue",
  "type": "source",
  "name": "NotificationItem.vue",
  "extension": ".vue",
  "analysis": {
    "Summary": "Vue-компонент для отображения одного уведомления в списке: показывает иконку, заголовок, текст, время создания и позволяет пометить уведомление как прочитанное.",
    "Purpose": "Используется внутри списка уведомлений для рендеринга каждого элемента уведомлений и обработки кликов по ним (отметка как прочитанное и прокидывание события в родитель).",
    "Components": [
      {
        "name": "NotificationItem",
        "responsibility": "Рендерит единичное уведомление с его данными и управляет статусом чтения."
      }
    ],
    "Functions": [
      {
        "name": "handleClick",
        "description": "Обрабатывает клик по карточке уведомления: если уведомление не прочитано, вызывает markAsRead, затем эмитит событие 'click' с объектом notification.",
        "parameters": []
      },
      {
        "name": "getIconForType",
        "description": "Возвращает эмодзи-иконку в зависимости от типа уведомления.",
        "parameters": [
          {
            "name": "type",
            "type": "string",
            "description": "Тип уведомления (success, warning, danger, info, message, order, payment, update и т. д.)"
          }
        ]
      },
      {
        "name": "formatTime",
        "description": "Форматирует метку времени в «относительный» формат (только что, N минут/часов/дней назад или дата).",
        "parameters": [
          {
            "name": "timestamp",
            "type": "string|number|Date",
            "description": "Временная метка создания уведомления"
          }
        ]
      }
    ],
    "Dependencies": [
      "vue (inject, defineProps, defineEmits)",
      "useNotifications (инжектируемый composable для действий с уведомлениями)"
    ],
    "Usage": "Импортируется в родительском компоненте списка уведомлений и используется как <NotificationItem :notification=\"item\" @click=\"onNotificationClick\" /> при переборе массива уведомлений.",
    "Importance": 3,
    "Notes": [
      "Используется scoped CSS для локальной стилизации.",
      "formatTime не зависит от внешних библиотек (достаточно простая реализация).",
      "markAsRead вызывается и при клике на сам элемент, и отдельно кнопкой «✓» с .stop, чтобы избежать двойного эмита.",
      "Иконки реализованы через эмодзи; при расширении типов уведомлений может потребоваться поддержка SVG или внешних иконпаков.",
      "ARIA-атрибут aria-label установлен для кнопки отметки как прочитанное."
    ]
  }
}