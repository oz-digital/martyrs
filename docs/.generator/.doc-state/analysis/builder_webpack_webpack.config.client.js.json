{
  "path": "../../src/builder/webpack/webpack.config.client.js",
  "relativePath": "builder/webpack/webpack.config.client.js",
  "type": "source",
  "name": "webpack.config.client.js",
  "extension": ".js",
  "analysis": {
    "Summary": "Этот файл экспортирует функцию, генерирующую и возвращающую клиентскую Webpack-конфигурацию для сборки фронтенд-кода проекта. Конфигурация учитывает режим разработки и продакшн, интегрирует плагины для оптимизации, минимизации и очистки неиспользуемых CSS-классов.",
    "Purpose": "Определить и настроить Webpack для сборки клиентской части приложения: точки входа, правила сборки, плагины, оптимизации и вывод собранных файлов.",
    "Components": [
      {
        "name": "entry",
        "responsibility": "Точка входа сборки (main), с поддержкой hot-reload в режиме разработки."
      },
      {
        "name": "output",
        "responsibility": "Настройки директорий, шаблонов имён файлов и очистки директории перед сборкой."
      },
      {
        "name": "plugins",
        "responsibility": "Подключение и настройка плагинов: StatsWriterPlugin, PurgeCSSPlugin, TerserPlugin, CssMinimizerPlugin и опционально плагинов для dev/production."
      },
      {
        "name": "optimization",
        "responsibility": "Настройка разделения чанков, минимизации кода и кэширования."
      }
    ],
    "Functions": [
      {
        "name": "default export",
        "params": [
          {
            "name": "projectRoot",
            "type": "string",
            "description": "Корневая директория проекта, используется для вычисления путей."
          }
        ],
        "description": "Возвращает итоговый объект Webpack-конфигурации, объединённый с базовой конфигурацией через webpack-merge."
      },
      {
        "name": "extractor",
        "params": [
          {
            "name": "content",
            "type": "string",
            "description": "Содержимое файла .vue для извлечения классов."
          }
        ],
        "description": "Регулярно ищет в переданном контенте все CSS-классы, включая те, что содержат префиксы tailwind (sm:, lg: и т.п.), для PurgeCSS."
      }
    ],
    "Dependencies": [
      "css-minimizer-webpack-plugin",
      "glob-all",
      "path",
      "purgecss-webpack-plugin",
      "terser-webpack-plugin",
      "webpack-merge",
      "webpack-stats-plugin",
      "./webpack.config.base.js"
    ],
    "Usage": "Импортируется и вызывается билд-скриптом или Webpack CLI, передавая корневую директорию проекта: `webpack --config builder/webpack/webpack.config.client.js` или внутри другого JS файла: `import clientConfig from './webpack.config.client.js'; const cfg = clientConfig(projectRoot);`.",
    "Importance": 4,
    "Notes": [
      "Учитывает переменную окружения NODE_ENV для переключения между development и production режимами.",
      "PurgeCSS настроен на сканирование как исходного кода проекта, так и исходников фреймворка martyrs и сторонних модулей.",
      "Плагин для горячей перезагрузки (HotModuleReplacementPlugin) и генерации сервис-воркера (WorkboxPlugin.GenerateSW) закомментированы, но могут быть активированы при необходимости.",
      "Используется merge с базовым конфигом (`webpack.config.base.js`) для единообразия настроек.",
      "В продакшне включена минимизация JS через Terser и CSS через CssMinimizerPlugin."
    ]
  }
}