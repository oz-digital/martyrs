{
  "path": "../../src/modules/spots/components/pages/Map.vue",
  "relativePath": "modules/spots/components/pages/Map.vue",
  "type": "source",
  "name": "Map.vue",
  "extension": ".vue",
  "analysis": {
    "Summary": "Vue SFC that renders a full-screen Google Map, fetches organization data based on route or IP/geocoding fallback, plots them as markers and provides a \"Search in This Location\" button to re-query within the current map view.",
    "Purpose": "To display interactive organization locations on a styled Google Map and allow users to re-search within the map’s current center and zoom bounds.",
    "Components": [
      {
        "name": "Map.vue",
        "role": "Main component that encapsulates map initialization, data fetching and marker management."
      },
      {
        "name": "Button",
        "importPath": "@martyrs/src/components/Button/Button.vue",
        "role": "Reusable button component used to trigger a search with the current map center."
      }
    ],
    "Functions": [
      {
        "name": "getCountry",
        "description": "Fetches the client’s two-letter country code via an external IP lookup (ip2c.org).",
        "params": []
      },
      {
        "name": "onMounted (map initialization)",
        "description": "Runs on component mount. Determines latitude/longitude and zoom from route or global state, falls back to geocoding by country/state/city or IP, loads Google Maps API, fetches organization data, initializes the map, applies custom styles, and plots markers with click handlers.",
        "params": []
      },
      {
        "name": "searchInCurrentLocation",
        "description": "Re-queries the organizations store using the map’s current center and zoom to fetch and re-render markers in view.",
        "params": []
      }
    ],
    "Dependencies": [
      {
        "module": "vue",
        "imports": [
          "onMounted",
          "watch",
          "ref"
        ]
      },
      {
        "module": "vue-router",
        "imports": [
          "useRoute",
          "useRouter"
        ]
      },
      {
        "module": "@googlemaps/js-api-loader",
        "imports": [
          "Loader as GMLoader"
        ]
      },
      {
        "module": "@martyrs/src/components/Button/Button.vue"
      },
      {
        "module": "@martyrs/src/modules/organizations/store/organizations.js",
        "imports": [
          "state",
          "actions"
        ]
      },
      {
        "module": "@martyrs/src/modules/globals/views/store/globals.js"
      },
      {
        "module": "@martyrs/src/modules/marketplace/views/store/marketplace.js"
      }
    ],
    "Usage": "Typically rendered as a route page in the Spots module. Parent passes props like `apiKey`, optional `location`, `address`, `localPosition` and `locale`. Other components or layouts import and include `<Map />` in their template.",
    "Importance": 4,
    "Notes": [
      "Applies a dark, high-contrast style array to the Google Map.",
      "Differentiates marker icons based on whether an organization has products.",
      "Falls back to country geocoding if no coordinates are provided, and logs errors to console.",
      "Imports `watch` but does not currently use it.",
      "Scoped SCSS only customizes map focus outline removal."
    ]
  }
}