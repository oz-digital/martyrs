{
  "path": "../../src/modules/gallery/components/sections/BackofficeGallery.vue",
  "relativePath": "modules/gallery/components/sections/BackofficeGallery.vue",
  "type": "source",
  "name": "BackofficeGallery.vue",
  "extension": ".vue",
  "analysis": {
    "Summary": "BackofficeGallery.vue представляет собой Vue-компонент для панели администратора (backoffice), обеспечивающий просмотр, фильтрацию, добавление, редактирование и удаление фотографий в галерее организации.",
    "Purpose": "Обеспечить интерфейс управления фотографиями галереи: вкладки по статусам, сортировку, фильтр по датам, предпросмотр, массовую загрузку, редактирование статуса и удаление.",
    "Components": [
      {
        "name": "SectionPageTitle",
        "responsibility": "Рендерит заголовок страницы, навигационные вкладки (All, Featured, Published, Draft, Archived) и кнопку «Add Photo», если есть доступ."
      },
      {
        "name": "Feed",
        "responsibility": "Универсальный компонент для загрузки и отображения коллекции объектов (photos) с поддержкой v-model:items, сортировки, фильтрации по дате и групповых состояний (empty)."
      },
      {
        "name": "CardHeader",
        "responsibility": "Отображает метаданные фотографии (дата, автор) и выпадающий список действий (Delete, Archive, Publish, Draft) с проверкой прав доступа."
      },
      {
        "name": "Chips",
        "responsibility": "Выводит список тегов, присвоенных фотографии."
      },
      {
        "name": "Popup",
        "responsibility": "Обёртка для модальных окон предпросмотра и формы добавления/редактирования фотографии."
      },
      {
        "name": "PhotoViewer",
        "responsibility": "Показывает полноэкранный просмотр выбранного изображения."
      },
      {
        "name": "EditImages",
        "responsibility": "Компонент загрузки и предварительного просмотра изображений перед отправкой на сервер."
      },
      {
        "name": "BlockTags",
        "responsibility": "Управление тегами: ввод новых и отображение подсказок."
      },
      {
        "name": "Button",
        "responsibility": "Универсальная кнопка с поддержкой кастомных коллбеков submit и callback."
      }
    ],
    "Functions": [
      {
        "name": "openPreviewPopup",
        "parameters": [
          "photo"
        ],
        "purpose": "Открыть модальное окно предпросмотра и установить выбранную фотографию."
      },
      {
        "name": "closePreviewPopup",
        "parameters": [],
        "purpose": "Закрыть окно предпросмотра и сбросить выбранную фотографию."
      },
      {
        "name": "openPhotoPopup",
        "parameters": [
          "photo"
        ],
        "purpose": "Открыть окно формы добавления/редактирования фотографии и установить выбранный объект (null для нового)."
      },
      {
        "name": "closePhotoPopup",
        "parameters": [],
        "purpose": "Закрыть форму добавления и сбросить стейт загруженных изображений и выбранного изображения."
      },
      {
        "name": "onUpdatedImages",
        "parameters": [
          "newImages"
        ],
        "purpose": "Обновить список загруженных изображений при работе с EditImages."
      },
      {
        "name": "deletePhoto",
        "parameters": [
          "item"
        ],
        "purpose": "Удалить фотографию через gallery.delete и убрать её из локального массива photos."
      },
      {
        "name": "changeStatus",
        "parameters": [
          "item",
          "status"
        ],
        "purpose": "Изменить статус фотографии (archived/published/draft) через gallery.update и обновить локальный массив."
      },
      {
        "name": "createPhoto",
        "parameters": [
          "status"
        ],
        "purpose": "Создать новые фото (draft или published) с загруженными изображениями и тегами, добавить их в photos."
      }
    ],
    "Dependencies": [
      "vue (ref, reactive, computed, onMounted)",
      "vue-router (useRoute)",
      "@martyrs/src/components/Field/Field.vue",
      "@martyrs/src/components/Button/Button.vue",
      "@martyrs/src/components/Select/Select.vue",
      "@martyrs/src/components/Chips/Chips.vue",
      "@martyrs/src/components/Checkbox/Checkbox.vue",
      "@martyrs/src/components/SelectMulti/SelectMulti.vue",
      "@martyrs/src/components/Popup/Popup.vue",
      "@martyrs/src/components/Feed/Feed.vue",
      "@martyrs/src/components/PhotoViewer/PhotoViewer.vue",
      "@martyrs/src/modules/auth/views/store/auth.js",
      "@martyrs/src/modules/gallery/store/gallery.js",
      "@martyrs/src/modules/globals/views/components/blocks/CardHeader.vue",
      "@martyrs/src/modules/globals/views/components/sections/SectionPageTitle.vue",
      "@martyrs/src/components/EditImages/EditImages.vue",
      "@martyrs/src/components/FieldTags/BlockTags.vue"
    ],
    "Usage": "Компонент импортируется и используется в маршрутах backoffice для управления галереей конкретной организации. Он получает параметр route.params._id (ID организации) и передаёт его в запросы store/gallery.",
    "Importance": 4,
    "Notes": [
      "Для проверки прав доступа в шаблоне используется функция hasAccess, которая не импортирована явно — вероятно, доступна глобально.",
      "При копировании объектов фотографии используется JSON.stringify/parse для глубокого клонирования перед мутациями.",
      "FILE_SERVER_URL ожидается как глобальная переменная окружения для формирования URL изображений.",
      "Секция <style scoped> пуста — стили компонента предполагаются через утилитарные классы."
    ]
  }
}