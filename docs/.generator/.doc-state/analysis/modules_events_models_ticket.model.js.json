{
  "path": "../../src/modules/events/models/ticket.model.js",
  "relativePath": "modules/events/models/ticket.model.js",
  "type": "source",
  "name": "ticket.model.js",
  "extension": ".js",
  "analysis": {
    "Summary": "Defines a Mongoose schema for tickets and exports a factory function that, given a database connection (db), creates and returns a Ticket model.",
    "Purpose": "Represents ticket entities in the application, storing client info, seat, price, ownership, type (event or parking), QR code, status, and related timestamps, enabling CRUD operations on tickets.",
    "Components": [
      {
        "name": "TicketSchema",
        "type": "mongoose.Schema",
        "responsibility": "Defines the shape of ticket documents, their fields, types, enums, refs, indexes, and timestamps."
      },
      {
        "name": "Ticket",
        "type": "mongoose.Model",
        "responsibility": "Provides the interface for querying and mutating ticket documents in MongoDB."
      }
    ],
    "Functions": [
      {
        "name": "defaultExport",
        "description": "Factory function that takes a db object, builds a TicketSchema on db.mongoose, compiles it into a model, and returns it.",
        "parameters": [
          {
            "name": "db",
            "type": "Object",
            "description": "An object providing a mongoose instance under db.mongoose."
          }
        ],
        "returns": "Mongoose model 'Ticket'."
      },
      {
        "name": "refCallback",
        "description": "Dynamically selects the referenced model name based on the ticket type ('event' -> 'Event', 'parking' -> 'Parking').",
        "parameters": [
          {
            "name": "value",
            "type": "Any",
            "description": "Current ObjectId value for the target field (not used in logic)."
          }
        ],
        "returns": "String name of the model to reference."
      },
      {
        "name": "timestamps.currentTime",
        "description": "Custom function to supply the current timestamp value for createdAt/updatedAt.",
        "parameters": [],
        "returns": "Number (Date.now())."
      }
    ],
    "Dependencies": [
      "db.mongoose (Mongoose instance)",
      "Client model (via ref 'Client')",
      "User model (via ref 'User')",
      "Event model (via ref in refCallback when type='event')",
      "Parking model (via ref in refCallback when type='parking')"
    ],
    "Usage": "Imported and initialized by passing the application's db object into the factory. Example:\n\nconst ticketModel = require('./modules/events/models/ticket.model');\nconst Ticket = ticketModel(db);\n\nThen used elsewhere via Ticket.find(), Ticket.create(), etc.",
    "Importance": 4,
    "Notes": [
      "Typo in status field: 'deafult' should be 'default'; without correction, default status may not apply.",
      "Defines a compound index on { user: 1, type: 1, target: 1 } for efficient queries by owner, ticket type, and target.",
      "Uses a dynamic ref callback to switch references based on the ticket type, a pattern requiring care when populating.",
      "Timestamps option customizes currentTime to Date.now(), ensuring millisecond accuracy."
    ]
  }
}