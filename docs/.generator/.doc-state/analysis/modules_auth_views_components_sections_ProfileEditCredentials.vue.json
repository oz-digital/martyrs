{
  "path": "../../src/modules/auth/views/components/sections/ProfileEditCredentials.vue",
  "relativePath": "modules/auth/views/components/sections/ProfileEditCredentials.vue",
  "type": "source",
  "name": "ProfileEditCredentials.vue",
  "extension": ".vue",
  "analysis": {
    "Summary": "Vue component for adding, editing and verifying a user’s phone number and email address with two-factor authentication support.",
    "Purpose": "Provides the UI and logic for a user to add or change their contact credentials (email and phone) and handle sending/verification of 2FA codes before updating the user record in the auth store.",
    "Components": [
      {
        "name": "ProfileEditCredentials",
        "role": "Container component managing the state and flow for editing/adding email and phone, and verifying codes."
      },
      {
        "name": "Field",
        "source": "@martyrs/src/components/Field/Field.vue",
        "role": "Generic text input component used for email, verification code, and (edited) phone display."
      },
      {
        "name": "Button",
        "source": "@martyrs/src/components/Button/Button.vue",
        "role": "Generic button component used for all submit actions (add, change, verify, cancel)."
      },
      {
        "name": "FieldPhone",
        "source": "@martyrs/src/components/FieldPhone/FieldPhone.vue",
        "role": "Phone input component with country code selector."
      }
    ],
    "Functions": [
      {
        "name": "startEditing",
        "params": [
          "type"
        ],
        "description": "Enables edit mode for either 'email' or 'phone', resets the corresponding new value."
      },
      {
        "name": "startAdding",
        "params": [
          "type"
        ],
        "description": "Enables add mode for either 'email' or 'phone', clears the new input field."
      },
      {
        "name": "cancelAdding",
        "params": [
          "type"
        ],
        "description": "Cancels the add flow for email or phone and resets state."
      },
      {
        "name": "cancelEdit",
        "params": [],
        "description": "Resets all in-progress states (adding, editing, verification) and clears inputs."
      },
      {
        "name": "sendVerification",
        "params": [
          "type",
          "action"
        ],
        "description": "Validates the new contact info (if editing), then invokes twofa.sendCode to dispatch a 2FA code. Sets up state flags to show the verification UI."
      },
      {
        "name": "verifyCode",
        "params": [],
        "description": "Compares user-entered code with the code in twofa store. On success, updates the user record with new email/phone via users.actions.update, then reloads user data."
      },
      {
        "name": "resendCode",
        "params": [],
        "description": "Clears the current code input and re-invokes sendVerification with the existing type/action."
      },
      {
        "name": "onMounted",
        "params": [],
        "description": "Lifecycle hook that fetches the current user by ID from the route and reveals the component when data is loaded."
      }
    ],
    "Dependencies": [
      "vue (ref, onMounted)",
      "vue-router (useRoute, useRouter)",
      "@martyrs/src/components/Field/Field.vue",
      "@martyrs/src/components/Button/Button.vue",
      "@martyrs/src/components/FieldPhone/FieldPhone.vue",
      "@martyrs/src/modules/auth/views/store/users.js",
      "@martyrs/src/modules/auth/views/store/twofa.js"
    ],
    "Usage": "Imported into a parent profile or settings view as `<ProfileEditCredentials :userId=\"...\" />`. It reads the user state and provides callbacks to the store. Not typically used standalone.",
    "Importance": 4,
    "Notes": [
      "No <style> section – styling is applied via utility classes.",
      "All state is managed with Vue refs and the central auth stores (users, twofa).",
      "Verification flow centralizes both add and edit under the same code path.",
      "Error handling is minimal – errors are logged to console.",
      "Relies on twofa.state.code.code being populated remotely before verifyCode is called."
    ]
  }
}