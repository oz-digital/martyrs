{
  "path": "../../src/modules/products/models/schemas/discount.schema.js",
  "relativePath": "modules/products/models/schemas/discount.schema.js",
  "type": "source",
  "name": "discount.schema.js",
  "extension": ".js",
  "analysis": {
    "Summary": "Этот файл экспортирует фабричную функцию, создающую и возвращающую Mongoose Schema для описания скидок (DiscountSchema) без собственного _id.",
    "Purpose": "Определить структуру и валидацию полей скидки/специальной цены как встроенной схемы, которую можно использовать в моделях продуктов или других сущностях.",
    "Components": [
      {
        "name": "DiscountSchema",
        "type": "mongoose.Schema",
        "responsibilities": [
          "Задать поле type с ограничением enum ['discount','special_price'] и значением по умолчанию 'discount'",
          "Задать обязательное числовое поле value >= 0",
          "Опциональное поле quantity с минимальным значением 1",
          "Вложенный объект date с полями start и end типа Date",
          "Вложенный объект time с полями start и end строкового формата 'HH:mm'",
          "Дополнительные текстовые поля name и description",
          "Отключить автоматическое создание поля _id (через опцию { _id: false })"
        ]
      }
    ],
    "Functions": [
      {
        "name": "default export",
        "type": "Function",
        "description": "Принимает объект db, извлекает из него mongoose и создает DiscountSchema.",
        "parameters": [
          {
            "name": "db",
            "type": "Object",
            "description": "Экземпляр соединения с базой, содержащий mongoose"
          }
        ],
        "returns": "mongoose.Schema"
      }
    ],
    "Dependencies": [
      "db.mongoose.Schema"
    ],
    "Usage": "Импортируется через require или import, затем вызывается с переданным объектом db. Полученный DiscountSchema встраивается как поддокумент в другие схемы (например, ProductSchema). Пример: const DiscountSchema = require('./discount.schema')(db);",
    "Importance": 3,
    "Notes": [
      "Схема выступает именно как subdocument: опция { _id: false } отключает собственный идентификатор.",
      "Поле time хранит строки в формате 'HH:mm', без валидации регулярным выражением.",
      "enum для type жестко задает два возможных режима: 'discount' и 'special_price'.",
      "Поля date.start и date.end допускают хранение полного диапазона дат."
    ]
  }
}