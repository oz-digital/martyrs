{
  "path": "../../src/modules/products/components/pages/LeftoverEdit.vue",
  "relativePath": "modules/products/components/pages/LeftoverEdit.vue",
  "type": "source",
  "name": "LeftoverEdit.vue",
  "extension": ".vue",
  "analysis": {
    "Summary": "Vue component for creating or editing a leftover inventory record. It lets the user add product positions (with variant selection), assign them to a storage spot, enter comments, and then save, reset or delete the record.",
    "Purpose": "Serve as the page-level UI in the products module for stock-in/stock-out operations (leftovers). It interfaces with stores to fetch, create, update or delete a leftover inventory entry.",
    "Components": [
      {
        "name": "Block",
        "role": "Layout container with optional header, actions and placeholder."
      },
      {
        "name": "Button",
        "role": "Clickable element for submit, reset or delete actions."
      },
      {
        "name": "Field",
        "role": "Textarea input for the leftover comment."
      },
      {
        "name": "Feed",
        "role": "Data-driven list that reads from a store and renders items via a scoped slot."
      },
      {
        "name": "Select",
        "role": "(Imported but unused) Dropdown-style select input."
      },
      {
        "name": "Dropdown",
        "role": "(Partially used/commented) Context menu for per-item actions."
      },
      {
        "name": "Popup",
        "role": "Modal window for selecting products or variants."
      },
      {
        "name": "CardOrderItem",
        "role": "Renders a searchable product item inside the products popup."
      },
      {
        "name": "CardSpot",
        "role": "Displays a storage spot inside the spot-selection feed."
      },
      {
        "name": "CardPosition",
        "role": "Shows an added position (variant) with quantity and cost."
      },
      {
        "name": "QuantitySelector",
        "role": "Control to adjust the quantity of a position."
      },
      {
        "name": "IconEdit/IconDelete/IconEllipsis",
        "role": "SVG icons (commented or optional) for edit/delete menus."
      }
    ],
    "Functions": [
      {
        "name": "openProductsPopup",
        "description": "Opens the product-selection modal.",
        "parameters": []
      },
      {
        "name": "closeProductsPopup",
        "description": "Closes the product-selection modal.",
        "parameters": []
      },
      {
        "name": "closeVariantsPopup",
        "description": "Closes the variant-selection modal and clears the selected product.",
        "parameters": []
      },
      {
        "name": "selectProduct",
        "description": "Handles product click: picks the product, closes product popup; if only one variant, adds it immediately, else opens variant popup.",
        "parameters": [
          {
            "name": "product",
            "type": "Object"
          }
        ]
      },
      {
        "name": "formatProductName",
        "description": "Returns a display name combining product and variant attributes.",
        "parameters": [
          {
            "name": "product",
            "type": "Object"
          },
          {
            "name": "variant",
            "type": "Object"
          }
        ]
      },
      {
        "name": "addVariantToInventory",
        "description": "Builds a position from the selected variant and adds it to the leftover state via globals.actions.add.",
        "parameters": [
          {
            "name": "variant",
            "type": "Object"
          }
        ]
      },
      {
        "name": "onReset",
        "description": "Reloads the existing leftover or resets to an empty new record.",
        "parameters": []
      },
      {
        "name": "onSubmit",
        "description": "Creates or updates the leftover via the leftovers store, then navigates back to the list view.",
        "parameters": []
      },
      {
        "name": "onDelete",
        "description": "Deletes the current leftover and navigates back to the list view.",
        "parameters": []
      }
    ],
    "Dependencies": [
      "vue (computed, onMounted, ref, reactive)",
      "vue-router (useRoute, useRouter)",
      "@martyrs/src/components/Block/Block.vue",
      "@martyrs/src/components/Button/Button.vue",
      "@martyrs/src/components/Field/Field.vue",
      "@martyrs/src/components/Feed/Feed.vue",
      "@martyrs/src/components/Select/Select.vue",
      "@martyrs/src/components/Dropdown/Dropdown.vue",
      "@martyrs/src/components/Popup/Popup.vue",
      "@martyrs/src/modules/orders/components/blocks/CardOrderItem.vue",
      "@martyrs/src/modules/spots/components/blocks/CardSpot.vue",
      "../blocks/CardPosition.vue",
      "../elements/QuantitySelector.vue",
      "@martyrs/src/modules/globals/views/mixins/mixins.js",
      "@martyrs/src/modules/globals/views/store/globals.js",
      "@martyrs/src/modules/auth/views/store/auth.js",
      "@martyrs/src/modules/products/store/leftovers.js",
      "@martyrs/src/modules/products/store/products.js",
      "@martyrs/src/modules/spots/store/spots.js",
      "@martyrs/src/modules/icons/navigation/IconEdit.vue",
      "@martyrs/src/modules/icons/navigation/IconDelete.vue",
      "@martyrs/src/modules/icons/navigation/IconEllipsis.vue"
    ],
    "Usage": "Registered as a route component (e.g. in vue-router) for a path like '/:orgId/leftovers/:leftoverId/edit' or '/:orgId/leftovers/new'. It reads route.params to decide between edit vs. create and is invoked directly by the router.",
    "Importance": 4,
    "Notes": "No <style> section in this file; styling is applied via utility classes. Uses direct mutations of global store state and globals.actions.add. Error handling is limited to console.error. The Select and Dropdown imports are largely unused or commented out. formatPrice comes from a global mixin."
  }
}