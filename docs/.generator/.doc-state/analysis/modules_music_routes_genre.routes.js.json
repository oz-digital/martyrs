{
  "path": "../../src/modules/music/routes/genre.routes.js",
  "relativePath": "modules/music/routes/genre.routes.js",
  "type": "source",
  "name": "genre.routes.js",
  "extension": ".js",
  "analysis": {
    "Summary": "Этот файл экспортирует функцию, которая настраивает маршруты Express для работы с жанрами: CRUD-операции, получение треков по жанру, популярных жанров и жанра по URL.",
    "Purpose": "Зарегистрировать на переданном экземпляре Express все API-эндпоинты для работы с ресурсом «жанр» с применением JWT-авторизации для защищённых операций.",
    "Components": [
      {
        "name": "controller",
        "responsibility": "Объект с методами для работы с жанрами (create, read, update, delete, getGenreTracks, getPopularGenres), создаётся вызовом genre(app, db)."
      },
      {
        "name": "authJwt",
        "responsibility": "Набор middleware для проверки JWT-токена и ролей пользователя (verifyToken, isAdmin), извлекается из middlewareFactoryAuth(db)."
      },
      {
        "name": "inline GET /api/genres/url/:url handler",
        "responsibility": "Асинхронная функция для поиска жанра по полю url в базе и возврата результата или ошибки."
      }
    ],
    "Functions": [
      {
        "name": "exported default function",
        "description": "Главная функция, принимающая app, db, origins, publicPath и регистрирующая маршруты.",
        "parameters": [
          "app (Express)",
          "db (объект моделей)",
          "origins",
          "publicPath"
        ]
      },
      {
        "name": "controller.create",
        "description": "Создание нового жанра.",
        "parameters": [
          "req",
          "res"
        ]
      },
      {
        "name": "controller.read",
        "description": "Получение списка всех жанров.",
        "parameters": [
          "req",
          "res"
        ]
      },
      {
        "name": "controller.update",
        "description": "Обновление данных жанра.",
        "parameters": [
          "req",
          "res"
        ]
      },
      {
        "name": "controller.delete",
        "description": "Удаление жанра.",
        "parameters": [
          "req",
          "res"
        ]
      },
      {
        "name": "controller.getGenreTracks",
        "description": "Получение треков, связанных с жанром по его ID.",
        "parameters": [
          "req",
          "res"
        ]
      },
      {
        "name": "controller.getPopularGenres",
        "description": "Получение списка популярных жанров.",
        "parameters": [
          "req",
          "res"
        ]
      },
      {
        "name": "inline async handler for GET /api/genres/url/:url",
        "description": "Ищет в базе жанр по полю url, возвращает 404 если не найден или 500 в случае ошибки.",
        "parameters": [
          "req",
          "res"
        ]
      }
    ],
    "Dependencies": [
      "@martyrs/src/modules/auth/controllers/middlewares/index.js",
      "../controllers/genre.controller.js",
      "db.genre (модель Genre)"
    ],
    "Usage": "Импортируется в центральном модуле маршрутизации проекта и вызывается как функция с параметрами (app, db, origins, publicPath) для автоматической регистрации эндпоинтов.",
    "Importance": 3,
    "Notes": [
      "Параметры origins и publicPath в сигнатуре функции не используются.",
      "CRUD-маршруты защищены middleware authJwt.verifyToken и authJwt.isAdmin.",
      "Inline-handler демонстрирует прямую работу с моделью db.genre без контроллера."
    ]
  }
}