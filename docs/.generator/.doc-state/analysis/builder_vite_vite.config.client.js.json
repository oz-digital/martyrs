{
  "path": "../../src/builder/vite/vite.config.client.js",
  "relativePath": "builder/vite/vite.config.client.js",
  "type": "source",
  "name": "vite.config.client.js",
  "extension": ".js",
  "analysis": {
    "Summary": "Этот файл генерирует Vite-конфигурацию для клиентской части проекта. Он объединяет базовые настройки из vite.config.base.js с кастомным клиентским конфигом, настроенным под продакшен и дев-сборку, и добавляет набор плагинов для очистки CSS, генерации service worker и записи статистики сборки.",
    "Purpose": "Сформировать и экспортировать конфигурацию Vite для сборки фронтенд-клиента проекта. Обеспечить оптимизацию (минификация, PurgeCSS), поддержку HMR в разработке, генерацию service worker и сбор сборочной статистики.",
    "Components": [
      {
        "name": "Default Export Function",
        "responsibility": "Main entry: принимает projectRoot, определяет режим (isProd), собирает clientConfig и возвращает merge(baseConfig, clientConfig)."
      },
      {
        "name": "vite-plugin-purge-css",
        "responsibility": "Плагин Vite: при production-сборке ищет CSS-файлы в бандле и прогоняет их через PurgeCSS, удаляя неиспользуемые селекторы."
      },
      {
        "name": "vite-plugin-workbox",
        "responsibility": "Плагин Vite: в деве пишет простой sw.js, в продакшене генерирует полноценный сервис-воркер через Workbox."
      },
      {
        "name": "vite-plugin-stats-writer",
        "responsibility": "Плагин Vite: после сборки (closeBundle) собирает метаданные по бандлу (entrypoints, размеры, списки файлов) и пишет их в stats.json."
      }
    ],
    "Functions": [
      {
        "name": "default",
        "description": "Генерирует итоговый Vite-конфиг на основе projectRoot и NODE_ENV.",
        "parameters": [
          "projectRoot (string)"
        ]
      },
      {
        "name": "manualChunks",
        "description": "Определяет отдельный чанк 'vendors' для всех модулей из node_modules.",
        "parameters": [
          "id (string)"
        ]
      },
      {
        "name": "transformIndexHtml.transform",
        "description": "Hook Vite для трансформации HTML до PurgeCSS (тут stub для production).",
        "parameters": [
          "html (string)",
          "{ bundle } (object)"
        ]
      },
      {
        "name": "vite-plugin-purge-css.generateBundle",
        "description": "Асинхронно прогоняет каждый CSS-файл через PurgeCSS и подменяет исходный CSS на очищенный.",
        "parameters": [
          "options (object)",
          "bundle (object)"
        ]
      },
      {
        "name": "vite-plugin-workbox.closeBundle",
        "description": "При деве пишет минимальный sw.js; на проде вызывает workbox-build.generateSW для создания сервис-воркера.",
        "parameters": []
      },
      {
        "name": "vite-plugin-stats-writer.closeBundle",
        "description": "Собирает статистику по JS-активам бандла и сохраняет её в stats.json.",
        "parameters": [
          "options (object)",
          "bundle (object)"
        ]
      }
    ],
    "Dependencies": [
      "fs",
      "path",
      "lodash.merge",
      "purgecss",
      "workbox-build",
      "./vite.config.base.js"
    ],
    "Usage": "Импортируется и вызывается с аргументом projectRoot в процессе старта или сборки Vite. Вернёт объект конфигурации, который передаётся Vite CLI/API.",
    "Importance": 5,
    "Notes": [
      "Использует условие process.env.NODE_ENV для переключения между дев- и прод-сборкой.",
      "PurgeCSS настроен с safelist и кастомным extractor для поддержки динамических классов (Tailwind-style).",
      "Workbox плагин поддерживает оба режима: дев (минимальный sw.js) и прод (generateSW).",
      "Статистика сборки содержит только JS-активы, CSS-файлы не учитываются."
    ]
  }
}