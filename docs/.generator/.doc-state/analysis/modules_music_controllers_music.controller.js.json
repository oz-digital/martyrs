{
  "path": "../../src/modules/music/controllers/music.controller.js",
  "relativePath": "modules/music/controllers/music.controller.js",
  "type": "source",
  "name": "music.controller.js",
  "extension": ".js",
  "analysis": {
    "Summary": "This file defines a factory function that initializes and exports a MusicController class. MusicController extends a generic CRUD controller to add logging, cache invalidation, and attribute-based access control (ABAC) checks specifically for music resources.",
    "Purpose": "To provide RESTful create, update, and delete handlers for music items in the application, enforcing authentication, ownership rules, ABAC permissions, and caching logic.",
    "Components": [
      {
        "name": "MusicController",
        "responsibility": "Extends CRUD operations to add custom create, update, and delete methods with ABAC checks, logging, and cache flushing"
      }
    ],
    "Functions": [
      {
        "name": "default exported function",
        "description": "Initializes controller dependencies (Logger, Cache, ABAC) and returns the MusicController class",
        "parameters": [
          {
            "name": "app",
            "description": "Express application instance"
          },
          {
            "name": "db",
            "description": "Database connection or context"
          }
        ]
      },
      {
        "name": "MusicController.create",
        "description": "Overrides base create to enforce authentication, set ownership, perform ABAC check, create a music record, flush cache, and log outcomes",
        "parameters": [
          {
            "name": "req",
            "description": "Express request, expects req.userId and req.body"
          },
          {
            "name": "res",
            "description": "Express response"
          }
        ]
      },
      {
        "name": "MusicController.update",
        "description": "Overrides base update to load the resource, perform ABAC check for update, apply changes, flush cache, and return the updated document",
        "parameters": [
          {
            "name": "req",
            "description": "Express request, expects req.userId and req.body._id"
          },
          {
            "name": "res",
            "description": "Express response"
          }
        ]
      },
      {
        "name": "MusicController.delete",
        "description": "Overrides base delete to load the resource, perform ABAC check for deletion, delete the document, flush cache, and return proper status",
        "parameters": [
          {
            "name": "req",
            "description": "Express request, expects req.userId and req.body._id"
          },
          {
            "name": "res",
            "description": "Express response"
          }
        ]
      }
    ],
    "Dependencies": [
      "@martyrs/src/modules/globals/controllers/classes/globals.abac.js",
      "@martyrs/src/modules/globals/controllers/classes/globals.cache.js",
      "@martyrs/src/modules/globals/controllers/classes/globals.crud.js",
      "@martyrs/src/modules/globals/controllers/classes/globals.logger.js"
    ],
    "Usage": "Imported and invoked during module initialization with (app, db). The returned MusicController is then instantiated (e.g. new MusicController(basePath, app, db, musicModel, options)) and wired to routes.",
    "Importance": 4,
    "Notes": [
      "Relies on req.userId set by authentication middleware",
      "Automatically sets creator and owner metadata on creation if missing",
      "Uses ABAC to authorize create/update/delete operations",
      "Flushes global cache after mutations to keep data fresh",
      "Logs both to console for debugging and via a Logger class for persistent logs",
      "Error handling returns appropriate HTTP status codes and messages"
    ]
  }
}