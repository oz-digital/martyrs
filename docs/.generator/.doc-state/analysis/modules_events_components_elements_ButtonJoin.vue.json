{
  "path": "../../src/modules/events/components/elements/ButtonJoin.vue",
  "relativePath": "modules/events/components/elements/ButtonJoin.vue",
  "type": "source",
  "name": "ButtonJoin.vue",
  "extension": ".vue",
  "analysis": {
    "Summary": "Vue-компонент кнопки Join/Leave для событий или парковок, который по клику создает или удаляет «билет» через store и эмитит обновление состояния.",
    "Purpose": "Предоставить интерактивную кнопку для управления участием пользователя в событии или парковке (приобретение/возврат билета) с уведомлением родительского компонента.",
    "Components": [
      {
        "name": "ButtonJoin",
        "responsibility": "Обрабатывает логику переключения состояния билета и рендерит UI-кнопку."
      },
      {
        "name": "Button",
        "responsibility": "Внешний переиспользуемый компонент кнопки из библиотекой martyrs для стилизованного рендера."
      }
    ],
    "Functions": [
      {
        "name": "toggleJoin",
        "purpose": "Обрабатывает клик по кнопке – вызывает joinEventOrParking или leaveEventOrParking в зависимости от hasTicket.",
        "parameters": []
      },
      {
        "name": "joinEventOrParking",
        "purpose": "Отправляет экшен tickets.actions.create для создания билета и эмитит событие updateTicket с новыми данными.",
        "parameters": [
          "targetId: String"
        ]
      },
      {
        "name": "leaveEventOrParking",
        "purpose": "Отправляет экшен tickets.actions.delete для удаления билета и эмитит событие updateTicket с обновленным состоянием.",
        "parameters": [
          "targetId: String"
        ]
      }
    ],
    "Dependencies": [
      "@martyrs/src/components/Button/Button.vue",
      "vue (ref, defineProps, defineEmits)",
      "@martyrs/src/modules/auth/views/store/auth.js",
      "@martyrs/src/modules/events/store/tickets.js"
    ],
    "Usage": "Импортируется и используется в родительских компонентах (например, деталях события или парковки) как <ButtonJoin :type=\"...\" :userId=\"...\" :hasTicket=\"...\" :targetId=\"...\" @updateTicket=\"handler\"/>.",
    "Importance": 3,
    "Notes": "— Используется <script setup> синтаксис.  \n— Эмитит событие 'updateTicket' для синхронизации состояния.  \n— Импорт auth.js на текущий момент не используется в компоненте.  \n— Терминология переименована из 'membership' в 'ticket'."
  }
}