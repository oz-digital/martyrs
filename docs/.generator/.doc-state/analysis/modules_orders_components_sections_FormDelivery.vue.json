{
  "path": "../../src/modules/orders/components/sections/FormDelivery.vue",
  "relativePath": "modules/orders/components/sections/FormDelivery.vue",
  "type": "source",
  "name": "FormDelivery.vue",
  "extension": ".vue",
  "analysis": {
    "Summary": "Vue component for managing the delivery section of an order form. It renders available delivery types (pickup, courier, post), allows selecting a pickup spot or entering an address with a map, and captures delivery comments.",
    "Purpose": "Provide UI and logic for selecting and configuring delivery options within the orders module.",
    "Components": [
      {
        "name": "Block",
        "description": "Wrapper component rendering a titled section.",
        "props": "title"
      },
      {
        "name": "Radio",
        "description": "Renders a radio button; used here to choose delivery type.",
        "props": "label, value, v-model:radio"
      },
      {
        "name": "CardSpot",
        "description": "Displays a pickup spot card; used to select a spot for pickup deliveries.",
        "props": "spot, organization, editAcess, showDeliveryOptions, showPaymentOptions, selected"
      },
      {
        "name": "Address",
        "description": "Input with autocomplete/map support for entering an address.",
        "props": "label, apiKey, address, location, placeholder"
      },
      {
        "name": "LocationMarker",
        "description": "Map view displaying a location marker; allows dragging to update location/address.",
        "props": "apiKey, address, location"
      },
      {
        "name": "Field",
        "description": "Textarea input; used for order delivery comments.",
        "props": "type, placeholder, v-model:field"
      }
    ],
    "Functions": [
      {
        "name": "capitalize",
        "description": "Capitalizes the first letter of a string.",
        "params": [
          "str"
        ]
      },
      {
        "name": "availableDeliveryTypes (computed)",
        "description": "Collects all delivery types supported by the organization’s spots into a unique array.",
        "params": []
      },
      {
        "name": "watch delivery.type",
        "description": "Watches order.delivery.type and resets order.delivery.spot to null when changing away from 'pickup'.",
        "params": [
          "newType"
        ]
      },
      {
        "name": "onMounted init",
        "description": "On component mount, populates order.delivery.address and order.delivery.location from globals.state.position if available.",
        "params": []
      }
    ],
    "Dependencies": [
      "vue (watch, computed, onMounted)",
      "vue-router (useRoute)",
      "@martyrs/src/components/Block/Block.vue",
      "@martyrs/src/components/Radio/Radio.vue",
      "@martyrs/src/components/Field/Field.vue",
      "@martyrs/src/components/Address/Address.vue",
      "@martyrs/src/components/LocationMarker/LocationMarker.vue",
      "@martyrs/src/modules/spots/components/blocks/CardSpot.vue",
      "@martyrs/src/modules/globals/views/store/globals.js",
      "@martyrs/src/modules/spots/store/spots.js"
    ],
    "Usage": "Imported into higher-level order form views or pages under modules/orders to render the delivery configuration section.",
    "Importance": 4,
    "Notes": [
      "The `route` constant is declared but unused and could be removed.",
      "Directly mutates `props.order` – ensure parent allows mutations or switch to emits.",
      "Initial address/location relies on global state; may require user permission for geolocation.",
      "No <style> block present; styling is done via classes on components."
    ]
  }
}