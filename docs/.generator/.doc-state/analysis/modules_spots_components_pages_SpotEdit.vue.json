{
  "path": "../../src/modules/spots/components/pages/SpotEdit.vue",
  "relativePath": "modules/spots/components/pages/SpotEdit.vue",
  "type": "source",
  "name": "SpotEdit.vue",
  "extension": ".vue",
  "analysis": {
    "summary": "Vue page component for creating and editing a “Spot” entity. Renders a form with sections for profile, settings (min order, status, delivery & payment options), location (address picker, map marker, worktime editor) and provides Save and Delete actions.",
    "purpose": "Serves as the edit/create UI in the Spots module. It loads spot data (if editing), binds form fields to the store, and dispatches create/update/delete actions, then navigates back to the parent Organization view.",
    "components": [
      {
        "name": "Block",
        "responsibility": "Layout wrapper that groups form sections with optional title and styling."
      },
      {
        "name": "UploadImage",
        "responsibility": "Handles image uploading and cropping for the spot’s profile photo."
      },
      {
        "name": "Field",
        "responsibility": "Generic input field component with v-model, label, placeholder, and validation support."
      },
      {
        "name": "Select",
        "responsibility": "Dropdown selector for choosing a single value (e.g. status)."
      },
      {
        "name": "Checkbox",
        "responsibility": "Togglable checkbox/radio group for multi-/single-select options (delivery, payment, hide address)."
      },
      {
        "name": "Address",
        "responsibility": "Autocomplete address input powered by Google Maps API."
      },
      {
        "name": "LocationMarker",
        "responsibility": "Visual map display with drag-and-drop marker to select geographic coordinates."
      },
      {
        "name": "WorktimeEdit",
        "responsibility": "Section for editing the spot’s operating hours."
      },
      {
        "name": "Button",
        "responsibility": "Action buttons for save and delete operations."
      }
    ],
    "functions": [
      {
        "name": "fetchData",
        "purpose": "If editing, loads a single spot from the store and normalizes its location into {lat, lng}.",
        "parameters": "None (uses route params and store)."
      },
      {
        "name": "onSubmit",
        "purpose": "Prepares the location as GeoJSON Point, then calls create or update action depending on presence of route.params.spot.",
        "parameters": "None (reads route.params and store)."
      },
      {
        "name": "redirectTo",
        "purpose": "Navigates back to the parent Organization page, opening the 'spots' tab.",
        "parameters": "None."
      },
      {
        "name": "onDelete",
        "purpose": "Calls delete action for the current spot, then relies on redirectDash to navigate away.",
        "parameters": "None."
      },
      {
        "name": "redirectDash",
        "purpose": "Navigates back to the Organization overview page after deletion.",
        "parameters": "None."
      }
    ],
    "dependencies": [
      "vue (ref, onMounted)",
      "vue-router (useRoute, useRouter)",
      "@martyrs/src/components/Block/Block.vue",
      "@martyrs/src/components/UploadImage/UploadImage.vue",
      "@martyrs/src/components/Field/Field.vue",
      "@martyrs/src/components/Select/Select.vue",
      "@martyrs/src/components/Checkbox/Checkbox.vue",
      "@martyrs/src/components/Address/Address.vue",
      "@martyrs/src/components/LocationMarker/LocationMarker.vue",
      "@martyrs/src/components/Button/Button.vue",
      "@martyrs/src/components/Popup/Popup.vue",
      "../sections/WorktimeEdit.vue",
      "@martyrs/src/modules/spots/store/spots.js"
    ],
    "usage": "Registered as a route component in the organization's router config. When the user navigates to the '/organizations/:_id/spots/edit/:spot?' path, this component is loaded, binds to the spots store, and renders inside a <router-view>.",
    "importance": 4,
    "notes": [
      "Imports Tab and Popup components but does not use them in template (could be legacy).",
      "route.params.spot vs route.params._id naming is inconsistent; create uses route.params._id for parent organization ID.",
      "Scoped <style> block is empty—styles rely on utility CSS classes.",
      "Form validations reference 'organizationName' but that validator is not imported or defined here (likely globally available)."
    ]
  }
}