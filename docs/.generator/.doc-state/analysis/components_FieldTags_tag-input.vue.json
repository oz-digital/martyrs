{
  "path": "../../src/components/FieldTags/tag-input.vue",
  "relativePath": "components/FieldTags/tag-input.vue",
  "type": "source",
  "name": "tag-input.vue",
  "extension": ".vue",
  "analysis": {
    "Summary": "Компонент TagInput отображает и управляет текстовым полем ввода для редактирования метки (тэга) внутри VueTagsInput.",
    "Purpose": "Предоставить инлайн-редактор меток для компонента VueTagsInput, позволяя редактировать текст тега через слот tag-center.",
    "Components": [
      {
        "name": "TagInput",
        "responsibility": "Рендерит <input> для редактирования текста тега в заданном scope."
      }
    ],
    "Functions": [
      {
        "name": "validateTag",
        "purpose": "Валидирует введённый текст тега при каждом вводе символа.",
        "parameters": [
          "index",
          "event"
        ]
      },
      {
        "name": "performCancelEdit",
        "purpose": "Отменяет режим редактирования тега при потере фокуса.",
        "parameters": [
          "index"
        ]
      },
      {
        "name": "performSaveEdit",
        "purpose": "Сохраняет изменения тега при нажатии клавиш (например, Enter/Escape).",
        "parameters": [
          "index",
          "event"
        ]
      }
    ],
    "Dependencies": [
      "Vue (runtime)",
      "Props.scope — объект, предоставляемый родительским компонентом VueTagsInput"
    ],
    "Usage": [
      "Импортируется и регистрируется в компоненте VueTagsInput.",
      "Используется внутри слота tag-center как <TagInput :scope=\"scope\" />."
    ],
    "Importance": 2,
    "Notes": [
      "Компонент полностью зависит от структуры объекта scope (должны быть поля edit, tag, maxlength, index и методы validateTag, performCancelEdit, performSaveEdit).",
      "Использует абсолютное позиционирование — родительский контейнер должен иметь position: relative.",
      "CSS сбрасывает стандартные стили input (outline, ms-clear) и делает фон прозрачным."
    ]
  }
}