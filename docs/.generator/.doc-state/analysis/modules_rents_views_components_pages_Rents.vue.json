{
  "path": "../../src/modules/rents/views/components/pages/Rents.vue",
  "relativePath": "modules/rents/views/components/pages/Rents.vue",
  "type": "source",
  "name": "Rents.vue",
  "extension": ".vue",
  "analysis": {
    "Summary": "Rents.vue is a page component that displays a list of rental records for a given organization. It offers both a Gantt chart (calendar) view and (commented-out) card/list view, with tab-based filtering by status and infinite scroll pagination.",
    "Purpose": "To provide a user interface for browsing, filtering, and navigating to details of rent entries within an organization. It also facilitates creating new rent records and toggling between calendar and list views.",
    "Components": [
      {
        "name": "Tab",
        "responsibility": "Renders a horizontal set of tabs for filtering rent items by status (All, Active, Completed, Canceled)."
      },
      {
        "name": "Feed",
        "responsibility": "Handles data fetching and loading states; wraps the display of rent items, passing them to its slot."
      },
      {
        "name": "GanttChart",
        "responsibility": "Displays rent items on a timeline (calendar) view, supports click events and dynamic loading."
      },
      {
        "name": "CardRent",
        "responsibility": "(Commented out) Would render individual rent items in a card/list format."
      }
    ],
    "Functions": [
      {
        "name": "toggleView",
        "description": "Switches between calendar (Gantt) view and list view.",
        "parameters": []
      },
      {
        "name": "viewRentDetails",
        "description": "Navigates to the detail page for a specific rent item.",
        "parameters": [
          {
            "name": "rent",
            "type": "Object",
            "description": "The rent record whose details should be viewed (expects an '_id' field)."
          }
        ]
      },
      {
        "name": "loadMoreData",
        "description": "Handles infinite scroll on the Gantt chart by adjusting the visible date range and fetching additional data.",
        "parameters": [
          {
            "name": "payload",
            "type": "Object",
            "description": "An object containing 'direction' (\"forward\" or \"backward\") and 'date' (Date boundary to load from)."
          }
        ]
      }
    ],
    "Dependencies": [
      "vue (ref, computed, onMounted, watch)",
      "vue-router (useRoute, useRouter)",
      "@martyrs/src/components/Tab/Tab.vue",
      "@martyrs/src/components/Feed/Feed.vue",
      "@martyrs/src/modules/rents/views/components/blocks/CardRent.vue",
      "@martyrs/src/modules/rents/views/components/pages/GanttChart.vue",
      "@martyrs/src/modules/rents/views/store/rents.store"
    ],
    "Usage": "Typically registered as a route component in the application router (e.g. under an organizationâ€™s rents path). It is imported by the router configuration and rendered when navigating to the 'Rents' page for an organization.",
    "Importance": 4,
    "Notes": [
      "The SCSS <style> block is empty, implying global or parent styles are used.",
      "CardRent-based list view is present but commented out; list view implementation may be pending or replaced by the Gantt chart.",
      "Initial calendar range is set to 30 days before and after the current date, and loadMoreData extends this range by 30 days on scroll.",
      "Tab selection is initialized from the route query parameter 'tab' to maintain state via URL."
    ]
  }
}