{
  "path": "../../src/modules/governance/controllers/routes/tasks.routes.js",
  "relativePath": "modules/governance/controllers/routes/tasks.routes.js",
  "type": "source",
  "name": "tasks.routes.js",
  "extension": ".js",
  "analysis": {
    "Summary": "Этот файл определяет маршруты (routes) для работы с сущностью \"tasks\" в RESTful API, связывая HTTP-методы и пути с соответствующими контроллерами.",
    "Purpose": "Инициализация и регистрация всех CRUD и вспомогательных маршрутов для задач (tasks) в приложении на базе Express.",
    "Components": [
      {
        "name": "defaultExport",
        "type": "function",
        "description": "Функция, принимающая Express-приложение и вспомогательные объекты, регистрирует в нем маршруты для задач."
      },
      {
        "name": "controller",
        "type": "object",
        "description": "Объект с методами-обработчиками для каждого маршрута, возвращаемый factory-функцией taskFactory"
      }
    ],
    "Functions": [
      {
        "name": "defaultExport",
        "description": "Регистрация маршрутов /api/tasks на переданном Express-приложении",
        "parameters": [
          "app",
          "db",
          "origins",
          "publicPath"
        ]
      },
      {
        "name": "getAllTasks",
        "description": "Возвращает список всех задач",
        "parameters": [
          "req",
          "res",
          "next"
        ]
      },
      {
        "name": "getTaskById",
        "description": "Возвращает задачу по указанному ID",
        "parameters": [
          "req",
          "res",
          "next"
        ]
      },
      {
        "name": "createTask",
        "description": "Создает новую задачу",
        "parameters": [
          "req",
          "res",
          "next"
        ]
      },
      {
        "name": "updateTask",
        "description": "Обновляет существующую задачу по ID",
        "parameters": [
          "req",
          "res",
          "next"
        ]
      },
      {
        "name": "deleteTask",
        "description": "Удаляет задачу по ID",
        "parameters": [
          "req",
          "res",
          "next"
        ]
      },
      {
        "name": "assignTask",
        "description": "Назначает задачу пользователю",
        "parameters": [
          "req",
          "res",
          "next"
        ]
      },
      {
        "name": "completeTask",
        "description": "Отмечает задачу как завершенную",
        "parameters": [
          "req",
          "res",
          "next"
        ]
      }
    ],
    "Dependencies": [
      "../factories/tasks.controller.js (taskFactory)",
      "Express app instance (app)",
      "db – объект подключения к БД",
      "origins, publicPath – параметры конфигурации (не используются внутри)"
    ],
    "Usage": "Импортируется и вызывается в точке инициализации маршрутов (обычно в файле, где конфигурируется Express), передавая туда app, db и опциональные параметры origins и publicPath.",
    "Importance": 3,
    "Notes": [
      "Используется паттерн factory – taskFactory(db) возвращает контроллер.",
      "Аргументы origins и publicPath не применяются внутри функции, но оставлены для консистентности сигнатур других роутов.",
      "Файл не содержит собственных бизнес-логик, а лишь связывает HTTP-эндпоинты с контроллерами."
    ]
  }
}