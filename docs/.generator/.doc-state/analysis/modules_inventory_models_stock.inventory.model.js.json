{
  "path": "../../src/modules/inventory/models/stock.inventory.model.js",
  "relativePath": "modules/inventory/models/stock.inventory.model.js",
  "type": "source",
  "name": "stock.inventory.model.js",
  "extension": ".js",
  "analysis": {
    "Summary": "Определяет Mongoose-схему и модель для учета остатков на складах (StockInventory), включая статусы, позиции и связь с другими сущностями.",
    "Purpose": "Служит для хранения и работы с документами инвентаризации складов: создание, чтение, фильтрация по складам и статусам, привязка к пользователям и организациям.",
    "Components": [
      {
        "name": "Default Export Function",
        "responsibility": "Фабрика для создания и возвращения модели StockInventory на основе переданного экземпляра db."
      },
      {
        "name": "StockInventorySchema",
        "responsibility": "Mongoose-схема, описывающая структуру документа инвентаризации: склад, статус, позиции, комментарий, метки времени."
      },
      {
        "name": "StockInventory Model",
        "responsibility": "Mongoose-модель, через которую выполняются операции CRUD над коллекцией stockinventories."
      }
    ],
    "Functions": [
      {
        "name": "default export",
        "description": "Принимает объект db, создает и возвращает mongoose-модель StockInventory.",
        "parameters": [
          {
            "name": "db",
            "type": "Object",
            "description": "Контейнер с подключением mongoose и настройками базы."
          }
        ]
      },
      {
        "name": "applyOwnershipSchema",
        "description": "Добавляет в схему поля для контроля прав собственности (createdBy, organization и т.п.).",
        "parameters": [
          {
            "name": "schema",
            "type": "mongoose.Schema",
            "description": "Схема, к которой будут добавлены поля ownership."
          },
          {
            "name": "db",
            "type": "Object",
            "description": "Тот же объект db, содержащий mongoose."
          }
        ]
      },
      {
        "name": "currentTime",
        "description": "Функция генерации текущего времени для полей timestamps.",
        "parameters": []
      }
    ],
    "Dependencies": [
      {
        "module": "@martyrs/src/modules/globals/models/schemas/ownership.schema.js",
        "import": "applyOwnershipSchema"
      },
      {
        "module": "mongoose",
        "import": "db.mongoose"
      },
      {
        "module references": [
          "Spot",
          "StockAdjustment"
        ],
        "description": "Связанные модели через ref."
      }
    ],
    "Usage": "Импортируется и инициализируется на старте приложения или модульным загрузчиком моделей: require('modules/inventory/models/stock.inventory.model.js')(db). Возвращает Mongoose-модель для дальнейших запросов.",
    "Importance": 3,
    "Notes": [
      "Используется глобальная схема ownership для автоподстановки полей доступа.",
      "Добавлены индексы на поля storage и комбинированный индекс (status, createdAt) для быстрого поиска.",
      "Статус инвентаризации ограничен enum-перечислением ['draft', 'completed', 'cancelled'].",
      "Таймстемпы генерируются через функцию currentTime, возвращающую Date.now()."
    ]
  }
}