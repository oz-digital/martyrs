{
  "path": "../../src/modules/organizations/policies/organizations.policies.js",
  "relativePath": "modules/organizations/policies/organizations.policies.js",
  "type": "source",
  "name": "organizations.policies.js",
  "extension": ".js",
  "analysis": {
    "Summary": "Этот файл экспортирует функцию инициализации политик доступа для модулей организаций. Он регистрирует глобальную ABAC-политику OrganizationAccessPolicy, настраивает верификатор публичного доступа и расширяет переданный контроллер доступа методами управления конфигурацией публичного доступа.",
    "Purpose": "Обеспечить централизованную проверку прав доступа к ресурсам организаций, включая: владельца организации, членов подразделений и публичный доступ с валидацией параметров запроса.",
    "Components": [
      {
        "name": "initializeOrganizationPolicies",
        "type": "function (default export)",
        "description": "Главная инициализирующая функция. Принимает экземпляр abacAccessControl и объект db, настраивает глобальную политику, публичный верификатор и расширяет abacAccessControl вспомогательными методами."
      },
      {
        "name": "publicAccessVerifier",
        "type": "instance of Verifier",
        "description": "Верификатор параметров публичного запроса (status). Используется для фильтрации и проверки query-параметров в публичном режиме."
      },
      {
        "name": "OrganizationAccessPolicy",
        "type": "ABAC global policy",
        "description": "Асинхронная функция проверки контекста (user, resource, action и пр.), определяющая результат allow/force/reason по сочетанию ролей владельца, членства в департаментах и публичного доступа."
      }
    ],
    "Functions": [
      {
        "name": "initializeOrganizationPolicies",
        "params": [
          "abacAccessControl: объект контроллера ABAC",
          "db: объект базы данных с моделями organization, department и mongoose"
        ],
        "returns": "Расширенный abacAccessControl",
        "description": "Регистрирует глобальную политику, связывает верификатор и добавляет методы управления конфигурацией публичного доступа."
      },
      {
        "name": "findOrgId",
        "params": [],
        "returns": "string|null",
        "description": "Извлекает ID организации из currentResource.owner или data.owner, если тип owner === 'organization'."
      },
      {
        "name": "updatePublicAccessConfig",
        "owner": "abacAccessControl",
        "params": [
          "newConfig: object"
        ],
        "description": "Позволяет динамически менять схему верификатора публичного доступа."
      },
      {
        "name": "getPublicAccessConfig",
        "owner": "abacAccessControl",
        "params": [],
        "returns": "object",
        "description": "Возвращает текущую конфигурацию публичного верификатора."
      }
    ],
    "Dependencies": [
      "@martyrs/src/modules/globals/controllers/classes/globals.Validator.js",
      "@martyrs/src/modules/globals/controllers/classes/globals.verifier.js",
      "db.organization (Mongoose модель)",
      "db.department (Mongoose модель)",
      "db.mongoose.Types.ObjectId",
      "abacAccessControl (внешний объект управления политиками)"
    ],
    "Usage": "Импортируется в месте конфигурации модуля организаций (например, при инициализации сервера или при сборке всех ABAC политик):\n\n  import initializeOrganizationPolicies from './modules/organizations/policies/organizations.policies.js';\n  const abac = createAbac();\n  const db = createDb();\n  initializeOrganizationPolicies(abac, db);\n\nПосле этого другие компоненты проекта получают доступ к политике по ключу 'OrganizationAccessPolicy' внутри abacAccessControl.",
    "Importance": 4,
    "Notes": [
      "Политика поддерживает три уровня доступа: владелец организации (force allow), член департамента (allow) и публичный доступ для чтения с валидацией статуса.",
      "При публичном доступе только параметр status разрешён и валидируется как oneOf(['published','active','featured']).",
      "При отсутствии user и валидации query read-доступ по умолчанию запрещён.",
      "Методы updatePublicAccessConfig и getPublicAccessConfig защищают внутреннюю конфигурацию верификатора от некорректного изменения."
    ]
  }
}