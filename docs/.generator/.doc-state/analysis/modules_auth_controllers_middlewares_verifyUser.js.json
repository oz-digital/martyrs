{
  "path": "../../src/modules/auth/controllers/middlewares/verifyUser.js",
  "relativePath": "modules/auth/controllers/middlewares/verifyUser.js",
  "type": "source",
  "name": "verifyUser.js",
  "extension": ".js",
  "analysis": {
    "Summary": "Этот файл экспортирует фабрику middleware-функций для Express, которые проверяют уникальность имени пользователя и существование пользователя в базе данных до выполнения основных действий контроллеров авторизации.",
    "Purpose": "Обеспечение предварительной валидации данных пользователя при регистрационных и аутентификационных запросах: проверка, что имя пользователя не занято, и что пользователь с указанными контактными данными уже зарегистрирован.",
    "Components": [
      {
        "name": "middlewareFactory",
        "type": "function",
        "responsibility": "Принимает объект db с моделями и возвращает набор middleware-функций для проверки данных пользователя."
      }
    ],
    "Functions": [
      {
        "name": "checkDuplicateUsername",
        "params": [
          "req",
          "res",
          "next"
        ],
        "description": "Проверяет, не используется ли в базе уже переданное в req.body.username имя пользователя. Если такое имя найдено (кроме текущего пользователя при обновлении), возвращает 400 и код ошибки USERNAME_ALREADY_USED, иначе вызывает next()."
      },
      {
        "name": "checkUserExist",
        "params": [
          "req",
          "res",
          "next"
        ],
        "description": "Проверяет существование пользователя по email или телефону (в зависимости от req.body.type). Если пользователь не найден, возвращает 400 и код ошибки USER_NOT_REGISTERED_YET, иначе вызывает next()."
      }
    ],
    "Dependencies": [
      {
        "module": "db",
        "description": "Объект с моделями базы данных. Используются user и role (role пока не применяется)."
      },
      {
        "module": "Express",
        "description": "Стандартные объекты req, res, next."
      },
      {
        "module": "Mongoose",
        "description": "Методы findOne() и exec() у модели User."
      }
    ],
    "Usage": "Импортируется как функция по умолчанию, в точках настройки маршрутов передается объект db, из возвращаемого объекта деструктурируются нужные middleware-функции и добавляются в цепочку обработки Express.",
    "Importance": 4,
    "Notes": [
      "Модель Role импортируется, но в текущей реализации не используется.",
      "В checkUserExist отсутствие req.body.type или некорректный тип не обрабатывается явно.",
      "При ошибках логгируется в консоль, нет единого механизма error-handling.",
      "Фабрика рассчитана на передачу кастомного объекта db и может быть протестирована в isolation."
    ]
  }
}