{
  "path": "../../src/builder/webpack/webpack.config.ssr.js",
  "relativePath": "builder/webpack/webpack.config.ssr.js",
  "type": "source",
  "name": "webpack.config.ssr.js",
  "extension": ".js",
  "analysis": {
    "Summary": "Этот файл экспортирует функцию, которая собирает и возвращает Webpack-конфигурацию для серверного (SSR) бандла проекта. Конфиг нацелен на Node.js, поддерживает ESM-модули, отключает загрузку CSS и при продакшн-сборке генерирует манифест.",
    "Purpose": "Подготовка специальной Webpack-конфигурации для server-side rendering (SSR) клиентской точки входа, с учётом особенностей сборки под Node.js и генерации минимального единственного чанк-файла.",
    "Components": [
      {
        "name": "LimitChunkCountPlugin",
        "module": "webpack.optimize",
        "responsibility": "Ограничивает количество чанков на выходе до одного (максимум 1)."
      },
      {
        "name": "WebpackManifestPlugin",
        "module": "webpack-manifest-plugin",
        "responsibility": "Генерирует manifest.json, сопоставляющий исходные файлы и выходные ассеты (используется в production режиме)."
      }
    ],
    "Functions": [
      {
        "name": "defaultExport",
        "type": "Function",
        "signature": "projectRoot: string => webpack.Configuration",
        "description": "Генерирует и возвращает конфигурацию Webpack для SSR. Оборачивает базовый конфиг (webpack.config.base.js) с настройками для Node.js.",
        "parameters": [
          {
            "name": "projectRoot",
            "type": "string",
            "description": "Корневая директория проекта, используется для формирования абсолютных путей в entry и output."
          }
        ]
      }
    ],
    "Dependencies": [
      "path",
      "webpack",
      "webpack-manifest-plugin",
      "webpack-merge",
      "webpack-node-externals",
      "./webpack.config.base.js"
    ],
    "Usage": "Импортируется в сборочных скриптах (например, в webpack CLI или кастомных node-скриптах). Вызывается с параметром projectRoot для получения финальной конфигурации и передаётся Webpack.",
    "Importance": 4,
    "Notes": [
      "target: 'node' и externals настроены через webpack-node-externals, чтобы не бандлить зависимости из node_modules.",
      "Используется экспериментальная опция outputModule: true и libraryTarget: 'module' для генерации ESM-модуля.",
      "CSS-файлы обрабатываются через null-loader (игнорируются при SSR).",
      "В режиме development отключено минифицирование, чтобы ускорить сборку и сохранять читабельность."
    ]
  }
}