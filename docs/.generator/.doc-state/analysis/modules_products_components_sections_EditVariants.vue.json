{
  "path": "../../src/modules/products/components/sections/EditVariants.vue",
  "relativePath": "modules/products/components/sections/EditVariants.vue",
  "type": "source",
  "name": "EditVariants.vue",
  "extension": ".vue",
  "analysis": {
    "Summary": "EditVariants.vue is a Vue 3 component that displays a list of product variants and provides a popup form to create, edit, copy, and delete variants, including editing their basic info, pricing, quantity, attributes, ingredients, and images.",
    "Purpose": "Serve as the product‐variants management UI within the products module of the martyrs framework, allowing users to maintain one or more variants per product.",
    "Components": [
      {
        "name": "Block",
        "responsibility": "Wrapper container with a title, placeholder, and action button to open the variant editor popup."
      },
      {
        "name": "Field",
        "responsibility": "Form input component used for editing text, numbers, and embedding the unit select."
      },
      {
        "name": "Button",
        "responsibility": "Clickable button used for adding attributes, saving or canceling variant edits."
      },
      {
        "name": "Popup",
        "responsibility": "Modal container for the variant editing form."
      },
      {
        "name": "Select",
        "responsibility": "Dropdown select for choosing the unit of measure in the quantity field."
      },
      {
        "name": "EditImages",
        "responsibility": "Component to upload, preview, and manage image list for a variant."
      },
      {
        "name": "EditIngredients",
        "responsibility": "Component to manage a variant’s ingredient list (imported from the products module)."
      },
      {
        "name": "PlaceholderImage",
        "responsibility": "Fallback graphic shown when a variant has no images."
      },
      {
        "name": "IconEdit",
        "responsibility": "Pencil icon used to trigger editing of an existing variant."
      },
      {
        "name": "IconDelete",
        "responsibility": "Trash icon used to delete a variant or remove an attribute."
      },
      {
        "name": "IconDuplicate",
        "responsibility": "Copy icon used to duplicate an existing variant."
      }
    ],
    "Functions": [
      {
        "name": "openVariantPopup",
        "description": "Opens the popup and populates currentVariant with either an existing variant’s data or default blank values.",
        "params": [
          {
            "name": "index",
            "type": "Number | undefined",
            "description": "Index of the variant to edit; if undefined, prepares form for a new variant."
          }
        ]
      },
      {
        "name": "closeVariantPopup",
        "description": "Closes the variant editor popup and resets editingVariantIndex.",
        "params": []
      },
      {
        "name": "addAttribute",
        "description": "Appends a blank attribute entry to currentVariant.attributes.",
        "params": []
      },
      {
        "name": "copyVariant",
        "description": "Duplicates a variant at the given index, deep copying its fields and appending “(Copy)” to its name.",
        "params": [
          {
            "name": "index",
            "type": "Number",
            "description": "Index of the variant to duplicate."
          }
        ]
      },
      {
        "name": "deleteVariant",
        "description": "Removes a variant at the given index; ensures at least one variant remains or issues an alert.",
        "params": [
          {
            "name": "index",
            "type": "Number",
            "description": "Index of the variant to delete."
          }
        ]
      },
      {
        "name": "saveVariant",
        "description": "Validates currentVariant.name, constructs a clean variant object, and either updates an existing variant or pushes a new one to the variants model.",
        "params": []
      }
    ],
    "Dependencies": [
      "vue (ref, reactive, defineModel)",
      "vue-router (useRoute)",
      "@martyrs/src/components/Block/Block.vue",
      "@martyrs/src/components/Field/Field.vue",
      "@martyrs/src/components/Button/Button.vue",
      "@martyrs/src/components/Popup/Popup.vue",
      "@martyrs/src/components/Select/Select.vue",
      "@martyrs/src/components/EditImages/EditImages.vue",
      "@martyrs/src/modules/products/components/sections/EditIngredients.vue",
      "@martyrs/src/modules/icons/placeholders/PlaceholderImage.vue",
      "@martyrs/src/modules/icons/navigation/IconEdit.vue",
      "@martyrs/src/modules/icons/navigation/IconDelete.vue",
      "@martyrs/src/modules/icons/actions/IconDuplicate.vue"
    ],
    "Usage": "Imported and used in a parent product‐editing view. It binds to a `variants` model via defineModel('variants') and exposes methods to manipulate that array. Typical import: `import EditVariants from './sections/EditVariants.vue'` and then `<EditVariants v-model:variants=\"productVariants\" />`.",
    "Importance": 4,
    "Notes": [
      "Uses defineModel('variants') from martyrs to bind to a shared reactive product variants array.",
      "Relies on a global FILE_SERVER_URL for image source prefix.",
      "Validation is minimal (alerts for missing name or single‐variant deletion).",
      "Deep copies arrays when opening/editing/copying to avoid mutating source data prematurely.",
      "Attributes without name or value are filtered out on save."
    ]
  }
}