{
  "path": "../../src/modules/core/model/Adapter.postgre.js",
  "relativePath": "modules/core/model/Adapter.postgre.js",
  "type": "source",
  "name": "Adapter.postgre.js",
  "extension": ".js",
  "analysis": {
    "Summary": "Этот файл реализует класс PostgreSQLAdapter, расширяющий базовый DBAdapter, и предоставляет методы для выполнения CRUD-операций и запросов к PostgreSQL-базе через переданный пул соединений.",
    "Purpose": "Обеспечить конкретную реализацию адаптера для работы с моделями в PostgreSQL в рамках фреймворка martyrs.",
    "Components": [
      {
        "name": "PostgreSQLAdapter",
        "responsibility": "Класс-адаптер для выполнения операций создания, чтения, обновления, удаления и подсчёта записей в таблице БД, имя которой соответствует modelName."
      }
    ],
    "Functions": [
      {
        "name": "constructor",
        "description": "Инициализирует адаптер, устанавливает имя модели и пул соединений.",
        "parameters": [
          {
            "name": "modelName",
            "type": "string",
            "description": "Имя таблицы/модели в базе."
          },
          {
            "name": "connection",
            "type": "object",
            "description": "Pool или клиент для выполнения SQL-запросов."
          }
        ]
      },
      {
        "name": "create",
        "description": "Вставляет новую запись в таблицу и возвращает созданный объект.",
        "parameters": [
          {
            "name": "data",
            "type": "object",
            "description": "Ключ-значение полей для вставки."
          }
        ]
      },
      {
        "name": "findById",
        "description": "Находит одну запись по её первичному ключу id.",
        "parameters": [
          {
            "name": "id",
            "type": "number|string",
            "description": "Значение первичного ключа."
          }
        ]
      },
      {
        "name": "find",
        "description": "Возвращает все записи, удовлетворяющие фильтру query.",
        "parameters": [
          {
            "name": "query",
            "type": "object",
            "description": "Объект полей для WHERE-условий."
          }
        ]
      },
      {
        "name": "findOne",
        "description": "Возвращает первую запись, удовлетворяющую фильтру query.",
        "parameters": [
          {
            "name": "query",
            "type": "object",
            "description": "Объект полей для WHERE-условий."
          }
        ]
      },
      {
        "name": "update",
        "description": "Обновляет запись с заданным id данными из объекта data и возвращает обновлённый объект.",
        "parameters": [
          {
            "name": "id",
            "type": "number|string",
            "description": "Идентификатор записи."
          },
          {
            "name": "data",
            "type": "object",
            "description": "Ключ-значение полей для обновления."
          }
        ]
      },
      {
        "name": "delete",
        "description": "Удаляет запись по id и возвращает булево значение успешности операции.",
        "parameters": [
          {
            "name": "id",
            "type": "number|string",
            "description": "Идентификатор записи."
          }
        ]
      },
      {
        "name": "count",
        "description": "Возвращает число записей, удовлетворяющих фильтру query.",
        "parameters": [
          {
            "name": "query",
            "type": "object",
            "description": "Объект полей для WHERE-условий."
          }
        ]
      }
    ],
    "Dependencies": [
      "./DBAdapter.js"
    ],
    "Usage": "Импортируется как default-экспорт и инстанцируется с именем модели и пулом подключения к PostgreSQL: `import PostgreSQLAdapter from './Adapter.postgre.js'; const adapter = new PostgreSQLAdapter('users', pgPool);`",
    "Importance": 4,
    "Notes": [
      "Все запросы параметризованы через плейсхолдеры `$1`, `$2` и т.д. для предотвращения SQL-инъекций.",
      "Имя таблицы (modelName) подставляется напрямую без экранирования — убедитесь, что оно валидно.",
      "Методы генерируют динамические WHERE-условия из простого объекта ключ-значение.",
      "Метод count возвращает результат как целое число."
    ]
  }
}