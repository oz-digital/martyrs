{
  "path": "../../src/modules/orders/orders.server.js",
  "relativePath": "modules/orders/orders.server.js",
  "type": "source",
  "name": "orders.server.js",
  "extension": ".js",
  "analysis": {
    "Summary": "Файл определяет логику инициализацию модуля заказов в приложении на фреймворке martyrs: регистрирует модели в объекте базы данных, подключает маршруты и CRUD-эндпоинты.",
    "Purpose": "Основная задача — подключить к основному приложению модели заказов, клиентов, отзывов и заявок, а также настроить маршруты и CRUD-контроллер для работы с клиентами.",
    "Components": [
      {
        "name": "initializeOrders",
        "type": "function",
        "responsibility": "Инициализирует модуль: регистрирует модели и подключает маршруты в переданном Express-приложении."
      },
      {
        "name": "CRUD",
        "type": "class",
        "responsibility": "Глобальный универсальный контроллер для создания, чтения, обновления и удаления записей (создаётся экземпляр для клиентов)."
      },
      {
        "name": "FactoryOrder",
        "type": "function",
        "responsibility": "Фабрика/контроллер для бизнес-логики заказов."
      },
      {
        "name": "ModelOrder",
        "type": "function",
        "responsibility": "Определяет модель заказа в базе данных."
      },
      {
        "name": "ModelCustomer",
        "type": "function",
        "responsibility": "Определяет модель клиента в базе данных."
      },
      {
        "name": "ModelTestimonial",
        "type": "function",
        "responsibility": "Определяет модель отзыва в базе данных."
      },
      {
        "name": "ModelApplication",
        "type": "function",
        "responsibility": "Определяет модель заявки в базе данных."
      },
      {
        "name": "RoutesOrder",
        "type": "function",
        "responsibility": "Подключает маршруты, связанные с заказами."
      },
      {
        "name": "RoutesApplications",
        "type": "function",
        "responsibility": "Подключает маршруты, связанные с заявками."
      }
    ],
    "Functions": [
      {
        "name": "initializeOrders",
        "description": "Инициализирует модели и маршруты модуля заказов.",
        "parameters": [
          {
            "name": "app",
            "type": "Express",
            "description": "Экземпляр приложения Express, куда подключаются маршруты (если передан)."
          },
          {
            "name": "db",
            "type": "object",
            "description": "Контейнер моделей БД; используется для регистрации схем."
          },
          {
            "name": "origins",
            "type": "array|string",
            "description": "Список разрешённых источников для CORS."
          },
          {
            "name": "publicPath",
            "type": "string",
            "description": "Публичный путь для статичных ресурсов или префикс URL."
          }
        ]
      }
    ],
    "Dependencies": [
      "@martyrs/src/modules/globals/controllers/classes/globals.crud.js",
      "./controllers/orders.controller.js",
      "./models/order.model.js",
      "./models/customer.model.js",
      "./models/testimonial.model.js",
      "./models/application.model.js",
      "./routes/orders.routes.js",
      "./routes/applications.routes.js"
    ],
    "Usage": "Импортируется в точке входа сервера или в основном модуле, затем вызывается initialize(app, db, origins, publicPath) для настройки модуля заказов. Также доступна деструктуризация export: models, routes, controllers.",
    "Importance": 4,
    "Notes": [
      "CRUD-контроллер создаётся только для endpoints '/api/customers'.",
      "Маршруты подключаются только при наличии объекта app.",
      "FactoryOrder экспортируется в списке controllers, но напрямую в initializeOrders не используется.",
      "В exports представлены как named exports, так и default-объект с теми же полями."
    ]
  }
}