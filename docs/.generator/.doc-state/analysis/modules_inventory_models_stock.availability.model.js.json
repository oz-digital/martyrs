{
  "path": "../../src/modules/inventory/models/stock.availability.model.js",
  "relativePath": "modules/inventory/models/stock.availability.model.js",
  "type": "source",
  "name": "stock.availability.model.js",
  "extension": ".js",
  "analysis": {
    "Summary": "Этот файл объявляет Mongoose-схему и модель для хранения данных об остатках и доступности товарных вариантов на разных складах.",
    "Purpose": "Определить структуру коллекции VariantAvailability в MongoDB для модуля управления запасами и предоставить готовый Mongoose-модельный интерфейс для CRUD-операций.",
    "Components": [
      {
        "name": "VariantAvailabilitySchema",
        "type": "mongoose.Schema",
        "responsibility": "Описывает поля документа (product, variant, storage, quantity, available, reservations, constraints) и конфигурацию меток времени."
      },
      {
        "name": "VariantAvailability",
        "type": "mongoose.Model",
        "responsibility": "Mongoose-модель на основе VariantAvailabilitySchema, обеспечивающая взаимодействие с коллекцией в базе данных."
      }
    ],
    "Functions": [
      {
        "name": "export default (db)",
        "description": "Фабричная функция, которая принимает контекст базы данных (с объектом mongoose), создаёт схему, устанавливает индексы и возвращает модель.",
        "parameters": [
          {
            "name": "db",
            "type": "Object",
            "description": "Контекст приложения с подключённым mongoose (db.mongoose)."
          }
        ]
      }
    ],
    "Dependencies": [
      "db.mongoose — библиотека mongoose",
      "Модели Product, Variant, Spot (через ref-поля в схеме)"
    ],
    "Usage": "Импортируется и вызывается при инициализации модуля inventory, например: `const VariantAvailability = require('modules/inventory/models/stock.availability.model')(db);`",
    "Importance": 4,
    "Notes": " • Установлен уникальный композитный индекс по полям (product, variant, storage) для предотвращения дублирования.  \n • Дополнительные индексы по storage и полю available для ускорения запросов по складу и сортировки по доступному количеству.  \n • Поле constraints поддерживает вложенный массив ограничений на ингредиенты, что полезно при смешивании или сборке композиций."
  }
}