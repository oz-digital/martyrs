{
  "path": "../../src/modules/organizations/components/pages/DepartmentEdit.vue",
  "relativePath": "modules/organizations/components/pages/DepartmentEdit.vue",
  "type": "source",
  "name": "DepartmentEdit.vue",
  "extension": ".vue",
  "analysis": {
    "Summary": "Vue component for creating and editing a department within an organization. It renders a form for department profile, members, settings and access controls, and provides functionality to save, delete and manage members.",
    "Purpose": "Provides the UI and logic for department CRUD operations (create, read, update, delete) in the organizations module of the application.",
    "Components": [
      {
        "name": "UploadImage",
        "responsibility": "Handles profile photo upload for the department."
      },
      {
        "name": "Field",
        "responsibility": "Renders and validates input fields for department name and description."
      },
      {
        "name": "Checkbox",
        "responsibility": "Toggles boolean settings (hidden flag, access permissions)."
      },
      {
        "name": "Button",
        "responsibility": "Triggers form submit (save) or delete actions."
      },
      {
        "name": "Block",
        "responsibility": "Sections the form into titled blocks (Profile, Team)."
      },
      {
        "name": "CardUser",
        "responsibility": "Displays a user/member card with photo, name, position and delete action."
      },
      {
        "name": "Popup",
        "responsibility": "Modal container for adding new department members."
      },
      {
        "name": "Feed",
        "responsibility": "Searchable list of organization users for selecting and adding new members."
      },
      {
        "name": "IconDelete",
        "responsibility": "Icon used in member delete actions."
      },
      {
        "name": "DepartmentSub",
        "responsibility": "(Subcomponent, currently commented out) would render sub-departments list."
      },
      {
        "name": "EditArray",
        "responsibility": "(Imported but unused) utility for editing array fields."
      }
    ],
    "Functions": [
      {
        "name": "fetchData",
        "purpose": "Loads initial department data if editing (calls departments.actions.readOne).",
        "parameters": "None"
      },
      {
        "name": "openMemberPopup",
        "purpose": "Opens the 'Add member' popup and optionally selects a member index.",
        "parameters": "member (optional number or object)"
      },
      {
        "name": "closeMemberPopup",
        "purpose": "Closes the 'Add member' popup and clears selection.",
        "parameters": "None"
      },
      {
        "name": "openDepartmentPopup",
        "purpose": "Opens the (commented out) sub-department popup and optionally selects an index.",
        "parameters": "department (optional number)"
      },
      {
        "name": "closeDepartmentPopup",
        "purpose": "Closes the sub-department popup and clears selection.",
        "parameters": "None"
      },
      {
        "name": "onSubmit",
        "purpose": "Creates or updates a department via departments.actions based on route params.",
        "parameters": "None"
      },
      {
        "name": "redirectTo",
        "purpose": "Navigates to the Organization Members page after save.",
        "parameters": "None"
      },
      {
        "name": "onDelete",
        "purpose": "Deletes the department after confirmation.",
        "parameters": "None"
      },
      {
        "name": "removeMember",
        "purpose": "Removes a member from the local members array after confirmation.",
        "parameters": "member (object)"
      },
      {
        "name": "redirectDash",
        "purpose": "Navigates back to the main Organization page.",
        "parameters": "None"
      }
    ],
    "Dependencies": [
      "vue (ref, script setup)",
      "vue-router (useRoute, useRouter)",
      "js-cookie",
      "@martyrs/src/components/Breadcrumbs/Breadcrumbs.vue",
      "@martyrs/src/components/UploadImage/UploadImage.vue",
      "@martyrs/src/components/Tab/Tab.vue",
      "@martyrs/src/components/Field/Field.vue",
      "@martyrs/src/components/Select/Select.vue",
      "@martyrs/src/components/Checkbox/Checkbox.vue",
      "@martyrs/src/components/Address/Address.vue",
      "@martyrs/src/components/LocationMarker/LocationMarker.vue",
      "@martyrs/src/components/Button/Button.vue",
      "@martyrs/src/components/Popup/Popup.vue",
      "@martyrs/src/components/Block/Block.vue",
      "@martyrs/src/components/Feed/Feed.vue",
      "@martyrs/src/modules/icons/navigation/IconDelete.vue",
      "@martyrs/src/modules/organizations/components/blocks/EditArray.vue",
      "@martyrs/src/modules/organizations/components/blocks/DepartmentSub.vue",
      "@martyrs/src/modules/auth/views/components/blocks/CardUser.vue",
      "@martyrs/src/modules/globals/views/store/globals.js",
      "@martyrs/src/modules/organizations/store/departments.js",
      "@martyrs/src/modules/organizations/store/memberships.js"
    ],
    "Usage": "Typically registered as a route component under organization department edit/create paths. Imported by the router configuration and rendered when the user navigates to the department edit page.",
    "Importance": 4,
    "Notes": "Uses Vue Composition API (script setup). Manages two modal states for member and department popups. Relies on global stores for departments and memberships. Includes commented-out code for sub-department editing, indicating potential future expansion."
  }
}