{
  "path": "../../src/modules/inventory/models/stock.adjustment.model.js",
  "relativePath": "modules/inventory/models/stock.adjustment.model.js",
  "type": "source",
  "name": "stock.adjustment.model.js",
  "extension": ".js",
  "analysis": {
    "summary": "Defines a Mongoose schema and model for recording inventory stock adjustments, including fields for product, variant, storage location, source of change, reason, quantity, cost, comments, timestamps, and ownership metadata.",
    "purpose": "Provide a persistent data model to track any adjustments to inventory levels (restocks, sales, returns, damages, transfers, custom alterations) and support querying and indexing for reporting or audit purposes.",
    "components": [
      {
        "name": "StockAdjustmentSchema",
        "role": "Mongoose Schema that defines the structure of a stock adjustment record, including fields, types, validation rules, timestamps, and indexes."
      },
      {
        "name": "StockAdjustment",
        "role": "Mongoose Model created from StockAdjustmentSchema, used to perform CRUD operations on the stock adjustments collection."
      }
    ],
    "functions": [
      {
        "name": "default export (factory)",
        "params": [
          "db"
        ],
        "description": "Function that takes a database context (with mongoose) and returns the initialized StockAdjustment model. Internally sets up the schema, applies ownership plugin, declares indexes, and registers the model."
      },
      {
        "name": "applyOwnershipSchema",
        "params": [
          "Schema",
          "db"
        ],
        "description": "Plugin function imported from globals that augments the schema with ownership fields (e.g., createdBy, updatedBy) and related access controls."
      }
    ],
    "dependencies": [
      "@martyrs/src/modules/globals/models/schemas/ownership.schema.js",
      "db.mongoose (Mongoose library instance)",
      "Referenced models: Product, Variant, Spot",
      "Dynamic refPath targets: User, Order, Inventory"
    ],
    "usage": "Imported and invoked with a database object, e.g.\n\nconst StockAdjustment = require('modules/inventory/models/stock.adjustment.model.js')(db);\n\nThen used elsewhere to create, query, and manage stock adjustment documents.",
    "importance": 4,
    "notes": [
      "The ‘source’ field uses a dynamic refPath so its target document type depends on the source.type value.",
      "Multiple indexes are declared for common query patterns (by product, variant, storage, reason, creation date) to optimize performance.",
      "Custom timestamps configuration uses Date.now() to set createdAt and updatedAt.",
      "Ownership schema plugin ensures each record carries metadata about which user or entity owns or modified it."
    ]
  }
}