{
  "path": "../../src/builder/rspack/rspack.config.api.js",
  "relativePath": "builder/rspack/rspack.config.api.js",
  "type": "source",
  "name": "rspack.config.api.js",
  "extension": ".js",
  "analysis": {
    "Summary": "Этот файл экспортирует функцию-генератор конфигурации Rspack для сборки серверного бандла Node.js. Конфигурация настраивает точки входа, выходные файлы, обработку внешних зависимостей и специальные правила для .node-модулей.",
    "Purpose": "Основное назначение — централизованно формировать и возвращать конфигурацию сборщика (Rspack/Webpack) для сервера проекта на основе переданного пути projectRoot.",
    "Components": [
      {
        "name": "default export (factory function)",
        "responsibility": "Принимает путь к корню проекта и возвращает объект конфигурации Rspack."
      },
      {
        "name": "inline externals function",
        "responsibility": "Обрабатывает запросы к файлам с расширением .node, помечая их как внешние CommonJS-модули."
      }
    ],
    "Functions": [
      {
        "name": "default (projectRoot)",
        "description": "Фабричная функция, создающая конфигурацию Rspack",
        "parameters": [
          {
            "name": "projectRoot",
            "type": "string",
            "description": "Абсолютный путь к корню проекта"
          }
        ],
        "returns": "Object — конфигурация Rspack"
      },
      {
        "name": "externals function",
        "description": "Проверяет запросы на .node-файлы и помечает их как внешние",
        "parameters": [
          {
            "name": "{ context, request }",
            "type": "object",
            "description": "Контекст сборки и имя импортируемого модуля"
          },
          {
            "name": "callback",
            "type": "function",
            "description": "Функция обратного вызова для передачи решения о внешнем модуле"
          }
        ],
        "returns": "Вызывает callback с меткой external или без изменений"
      }
    ],
    "Dependencies": [
      "@rspack/core",
      "path",
      "webpack-node-externals",
      "node-loader"
    ],
    "Usage": "Импортируется в скриптах сборки (например, в CLI или другом модуле конфигурации) и вызывается с аргументом projectRoot для получения готового объекта конфигурации Rspack.",
    "Importance": 4,
    "Notes": [
      "Используется output.module и experiments.outputModule для генерации ECMAScript-модулей.",
      "В externals явно исключаются все модули из node_modules и файлы .node.",
      "Закомментирован плагин HotModuleReplacement; при необходимости можно раскомментировать для HMR.",
      "Настроен alias '@martyrs' для упрощённого импорта локальных утилит."
    ]
  }
}