{
  "path": "../../src/modules/globals/globals.server.js",
  "relativePath": "modules/globals/globals.server.js",
  "type": "source",
  "name": "globals.server.js",
  "extension": ".js",
  "analysis": {
    "Summary": "Этот файл отвечает за инициализацию глобального модуля на сервере: определяет модель лога, создает экземпляр ABAC (доступ на основе политик) и загружает глобальные политики, а также экспортирует менеджер WebSocket.",
    "Purpose": "Организовать стартовую настройку модуля globals в приложении: регистрация Mongoose-модели Log, инициализация механизмов управления доступом и WebSocket.",
    "Components": [
      {
        "name": "WebSocketManager",
        "type": "class",
        "responsibility": "Менеджер WebSocket-соединений для globals-модуля."
      },
      {
        "name": "getInstance (from globals.abac)",
        "type": "function",
        "responsibility": "Фабрика/синглтон для получения экземпляра ABAC-контроллера с привязкой к базе данных."
      },
      {
        "name": "initGlobalsPolicies",
        "type": "function",
        "responsibility": "Функция, возвращающая набор политик для ABAC на основе переданного контроллера."
      },
      {
        "name": "Log Model",
        "type": "Mongoose Model",
        "responsibility": "Схема и модель для хранения логов на сервере."
      }
    ],
    "Functions": [
      {
        "name": "initializeGlobals",
        "description": "Инициализирует globals-модуль: регистрирует модель Log в переданном объекте db, создает ABAC-инстанс и применяет к нему политики.",
        "parameters": [
          {
            "name": "app",
            "type": "Object",
            "description": "Экземпляр сервера/приложения (Express и т.п.)."
          },
          {
            "name": "db",
            "type": "Object",
            "description": "Объект доступа к базе данных, содержащий mongoose и контейнер моделей."
          },
          {
            "name": "origins",
            "type": "Array<String>",
            "description": "Список разрешённых источников (CORS), может использоваться внутри init или WebSocketManager."
          },
          {
            "name": "publicPath",
            "type": "String",
            "description": "Путь к публичным ресурсам, потенциально используется для конфигурации статических файлов или WebSocket."
          }
        ],
        "returns": "void"
      }
    ],
    "Dependencies": [
      "@martyrs/src/modules/globals/controllers/classes/globals.abac.js",
      "@martyrs/src/modules/globals/controllers/classes/globals.websocket.js",
      "./controllers/policies/globals.policies.js",
      "mongoose (через db.mongoose)"
    ],
    "Usage": "Импортируется в точке инициализации сервера или в главном модуле приложения: `import globals from 'modules/globals/globals.server.js'; globals.initialize(app, db, origins, publicPath);` или через именованный экспорт `initialize` и `WebSocketManager`.",
    "Importance": 4,
    "Notes": [
      "Определение модели Log вынесено внутрь инициализатора для гарантии единственного создания модели.",
      "Параметры origins и publicPath передаются, но в текущей реализации не используются напрямую — могут быть нужны в расширении WebSocketManager или политик.",
      "Экспорт сделан и как default-объект, и как именованные экспорты для гибкости подключения."
    ]
  }
}