{
  "path": "../../src/modules/orders/routes/testimonials.routes.js",
  "relativePath": "modules/orders/routes/testimonials.routes.js",
  "type": "source",
  "name": "testimonials.routes.js",
  "extension": ".js",
  "analysis": {
    "Summary": "Этот файл настраивает HTTP-маршруты для работы с сущностью «testimonials» (отзывы) в приложении. Он связывает URL-пути с соответствующими методами контроллера и при необходимости подключает JWT-аутентификацию.",
    "Purpose": "Определить и зарегистрировать CRUD-эндпоинты для ресурса testimonials, обеспечивая доступ к операциям чтения, создания, обновления и удаления отзывов.",
    "Components": [
      {
        "name": "default export",
        "type": "function",
        "responsibility": "Принимает экземпляр приложения (app) и регистрирует маршруты."
      }
    ],
    "Functions": [
      {
        "name": "app.get('/api/testimonials', controller.read)",
        "purpose": "Получить список всех testimonials.",
        "params": "нет URL-параметров; тело запроса не требуется."
      },
      {
        "name": "app.post('/api/testimonials/create', [authJwt.verifyToken], controller.create)",
        "purpose": "Создать новый testimonial.",
        "params": "JWT в заголовках для авторизации; тело запроса содержит данные отзыва."
      },
      {
        "name": "app.post('/api/testimonials/update', [authJwt.verifyToken], controller.update)",
        "purpose": "Обновить существующий testimonial.",
        "params": "JWT в заголовках; в теле запроса — идентификатор и новые поля отзыва."
      },
      {
        "name": "app.delete('/api/testimonials/delete/:_id', [authJwt.verifyToken], controller.delete)",
        "purpose": "Удалить testimonial по его ID.",
        "params": "JWT в заголовках; URL-параметр _id."
      }
    ],
    "Dependencies": [
      {
        "module": "../controllers/testimonials.controller.js",
        "importedAs": "controller",
        "purpose": "Набор функций для обработки запросов (read, create, update, delete)."
      },
      {
        "module": "../middlewares.js",
        "importedAs": "middlewares",
        "purpose": "Набор middleware, в частности authJwt.verifyToken для защиты маршрутов."
      }
    ],
    "Usage": "Импортируется в точке входа сервера (например, в файле app.js или server.js) и вызывается с передачей экземпляра Express/martyrs-приложения: `import testimonialsRoutes from './modules/orders/routes/testimonials.routes.js'; testimonialsRoutes(app);`",
    "Importance": 3,
    "Notes": [
      "Для операций создания, обновления и удаления обязательно наличие корректного JWT-токена.",
      "Роутер не использует Router() из Express, а сразу регистрирует пути на переданном экземпляре app.",
      "Имя экспортируемой функции анонимно, но применяется через default-import."
    ]
  }
}