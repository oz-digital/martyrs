{
  "path": "../../src/modules/products/components/forms/StockAuditForm.vue",
  "relativePath": "modules/products/components/forms/StockAuditForm.vue",
  "type": "source",
  "name": "StockAuditForm.vue",
  "extension": ".vue",
  "analysis": {
    "Summary": "StockAuditForm.vue is a Vue component that renders a stock audit form, allowing users to input a physical count, view the current available quantity, select an adjustment reason (including custom), add a note, and either cancel or save the adjustment.",
    "Purpose": "To provide a self-contained UI for creating and emitting inventory adjustments (quantity or value) for a given product, integrating seamlessly with the 'martyrs' framework's form and icon components.",
    "Components": [
      {
        "name": "StockAuditForm",
        "type": "Vue SFC",
        "responsibility": "Main wrapper component housing the template, script logic, and emits 'save' and 'close' events."
      },
      {
        "name": "Field",
        "type": "Imported UI component (@martyrs)",
        "responsibility": "Renders labeled input fields (number, text, textarea) with v-model binding and styling."
      },
      {
        "name": "IconDamage / IconExpire / IconMisplacement / IconThief / IconStocktake / IconCustom",
        "type": "Imported icon components (@martyrs)",
        "responsibility": "Render icons next to each adjustment reason option."
      }
    ],
    "Functions": [
      {
        "name": "formatPrice",
        "purpose": "Format a numeric value as a currency string ('$0.00').",
        "parameters": [
          {
            "name": "price",
            "type": "String|Number",
            "description": "The raw price or numeric string to format."
          }
        ],
        "returns": "String"
      },
      {
        "name": "saveAdjustment",
        "purpose": "Collect form state into an adjustmentData object and emit it via the 'save' event.",
        "parameters": [],
        "behavior": [
          "Determines type-specific fields (quantity vs. value).",
          "Includes productId, reason (or custom text), optional note, physicalCount or valueAdjustment, and computed discrepancy.",
          "Emits 'save' with the assembled payload."
        ]
      }
    ],
    "Dependencies": [
      "vue (ref, computed, defineProps, defineEmits)",
      "@martyrs/src/components/Field/Field.vue",
      "@martyrs/src/modules/icons/navigation/IconInfo.vue (used for all adjustment icons)"
    ],
    "Usage": "Imported into higher-level stock management views or modals. Parent components pass a 'product' prop, listen for the 'save' event to process the adjustment, and listen for 'close' to dismiss the form.",
    "Importance": 3,
    "Notes": [
      "The formatPrice function is declared but not currently used in the template.",
      "valueAdjustment and adjustmentType are defined for non-quantity adjustments but not rendered in the current template.",
      "All six icon imports reference the same IconInfo component, suggesting placeholder usage or a future differentiation.",
      "The discrepancy field updates reactively based on physicalCount and product.available."
    ]
  }
}