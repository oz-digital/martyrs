{
  "path": "../../src/modules/orders/orders.client.js",
  "relativePath": "modules/orders/orders.client.js",
  "type": "source",
  "name": "orders.client.js",
  "extension": ".js",
  "analysis": {
    "Summary": "Этот файл определяет и инициализирует клиентский модуль \"orders\" во фреймворке martyrs: регистрирует Vuex-подобные store-модули, настраивает маршруты (router) для разных контекстов (root, backoffice, user, organization) и экспортирует набор Vue-компонентов для страниц, блоков, секций и частичных видов.",
    "Purpose": "Служит точкой подключения модуля заказов к основному приложению: добавляет маршрутизацию, регистрирует хранилища состояния и предоставляет коллекцию компонентов для отображения функционала работы с заказами.",
    "Components": [
      {
        "name": "ModuleOrder",
        "type": "Object",
        "responsibility": "Главный экспорт модуля: содержит метод initialize и ссылки на все store-модули, роутер и Vue-компоненты"
      },
      {
        "name": "initializeOrders",
        "type": "Function",
        "responsibility": "Инициализирует модуль заказов: прописывает маршруты и регистрирует сторы"
      },
      {
        "name": "storeOrders",
        "type": "Store module",
        "responsibility": "Управление логикой и данными заказов"
      },
      {
        "name": "storeShopcart",
        "type": "Store module",
        "responsibility": "Управление логикой и данными корзины"
      },
      {
        "name": "storeTestimonials",
        "type": "Store module",
        "responsibility": "Управление клиентскими отзывами"
      },
      {
        "name": "routerOrders",
        "type": "Router config",
        "responsibility": "Набор описаний маршрутов для работы с заказами"
      },
      {
        "name": "OrderCreate, OrderCreateBackoffice, Orders",
        "type": "Vue pages",
        "responsibility": "Страницы создания и просмотра списка/деталей заказов (корень и бэкофис)"
      },
      {
        "name": "CardOrder, CardOrderItem, CardOrderUser, StatusHistory",
        "type": "Vue blocks",
        "responsibility": "Компоненты-блоки для отображения карточек заказов и истории статусов"
      },
      {
        "name": "AskToLogin, EmptyState, FormCustomerDetails, FormDelivery, FormPayment, Succes",
        "type": "Vue sections",
        "responsibility": "Разделы страницы оформления заказа (форма данных, доставки, оплаты, состояния)"
      },
      {
        "name": "ShopCart",
        "type": "Vue partial",
        "responsibility": "Частичный компонент корзины"
      }
    ],
    "Functions": [
      {
        "name": "initializeOrders",
        "description": "Добавляет маршруты в переданный router и регистрирует сторы в объекте store",
        "parameters": [
          {
            "name": "app",
            "type": "Object",
            "description": "Экземпляр основного приложения martyrs"
          },
          {
            "name": "store",
            "type": "Object",
            "description": "Менеджер стор-модулей"
          },
          {
            "name": "router",
            "type": "Object",
            "description": "Vue-router или обёртка над ним"
          },
          {
            "name": "options",
            "type": "Object",
            "description": "Настройки (пути родительских маршрутов и флаги включения маршрутов)"
          }
        ],
        "returns": "void"
      }
    ],
    "Dependencies": [
      "./store/orders.js",
      "./store/shopcart.js",
      "./store/testimonials.js",
      "@martyrs/src/modules/globals/views/router/addRoutes.js",
      "./router/orders.router.js",
      "Vue-компоненты из папки ./components"
    ],
    "Usage": "Импортируется как default: ModuleOrder. В основном файле приложения вызывают ModuleOrder.initialize(app, store, router, options) и при необходимости обращаются к ModuleOrder.views для регистрации компонентов.",
    "Importance": 4,
    "Notes": "• При отсутствии флагов withBackoffice/withUserRoutes/withOrganizationRoutes маршруты для соответствующих контекстов регистрируются по умолчанию\n• Некоторые страницы (Favorites) закомментированы и не экспортируются\n• Метаданные маршрутов (meta.context) позволяют различать контекст использования"
  }
}