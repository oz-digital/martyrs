{
  "path": "../../src/modules/events/components/sections/List.vue",
  "relativePath": "modules/events/components/sections/List.vue",
  "type": "source",
  "name": "List.vue",
  "extension": ".vue",
  "analysis": {
    "summary": "Vue component that displays a list of upcoming or filtered events with loading skeletons and empty-state messaging, using transitions for smooth appearance.",
    "purpose": "Serve as a reusable section in the events module to fetch and render a short list of events based on provided filters (category, status, organization, owner, user, period, phase).",
    "components": [
      {
        "name": "Loader",
        "responsibility": "Displays a loading spinner or indicator (currently commented out in template)."
      },
      {
        "name": "SkeletonEventShort",
        "responsibility": "Renders a placeholder skeleton element for each event while data is loading."
      },
      {
        "name": "EmptyState",
        "responsibility": "Shows a message and description when there are no events to display after loading."
      },
      {
        "name": "CardEvent",
        "responsibility": "Renders an individual event card with minimal details; handles click to route to event detail page."
      },
      {
        "name": "TransitionGroup / transition",
        "responsibility": "Wraps lists and individual elements to animate their insertion and removal."
      }
    ],
    "functions": [
      {
        "name": "onMounted",
        "description": "Lifecycle hook that fires when the component is mounted; fetches event data from the store.",
        "params": []
      },
      {
        "name": "events.read",
        "description": "Asynchronously reads a list of events from the events store based on pagination and filter props.",
        "params": [
          "skip (Number): number of records to skip",
          "limit (Number): maximum number of records to fetch",
          "sortOrder (String): sorting direction, here 'desc'",
          "category (String|null)",
          "user (String|Number|null)",
          "owner (String|null)",
          "organization (String|null)",
          "period (String|null)",
          "phase (String|null)",
          "status (String|null)"
        ]
      },
      {
        "name": "$router.push",
        "description": "Navigates to the event detail route when a CardEvent is clicked.",
        "params": [
          "name (String): route name 'Event'",
          "params.url (String): URL identifier of the clicked event"
        ]
      }
    ],
    "dependencies": [
      "vue (ref, onMounted, TransitionGroup, transition)",
      "@martyrs/src/components/Loader/Loader.vue",
      "@martyrs/src/components/EmptyState/EmptyState.vue",
      "@martyrs/src/modules/events/components/blocks/CardEvent.vue",
      "@martyrs/src/modules/icons/skeletons/SkeletonEvent.vue",
      "@martyrs/src/modules/icons/skeletons/SkeletonEventShort.vue",
      "@martyrs/src/modules/events/store/events.js",
      "vue-router (accessed via this.$router in template)"
    ],
    "usage": "Imported into higher-level views or pages to render a short events list section; parent components pass filter props (category, status, etc.).",
    "importance": 3,
    "notes": [
      "Uses Vue 3 <script setup> and Composition API.",
      "Default limit is set to 3; skip starts at 0 (no pagination controls).",
      "Loader component is imported but commented outâ€”only skeleton placeholders are active.",
      "Dynamic classes add bottom border except on the last item.",
      "Empty <style> block suggests styling is handled globally or pending local overrides."
    ]
  }
}