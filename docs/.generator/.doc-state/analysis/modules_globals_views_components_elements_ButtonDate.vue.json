{
  "path": "../../src/modules/globals/views/components/elements/ButtonDate.vue",
  "relativePath": "modules/globals/views/components/elements/ButtonDate.vue",
  "type": "source",
  "name": "ButtonDate.vue",
  "extension": ".vue",
  "analysis": {
    "Summary": "Vue component that renders a clickable date icon and a formatted date string, invoking an optional callback when clicked.",
    "Purpose": "To display a human-readable date or date range with an accompanying icon and handle click events via a provided action.",
    "Components": [
      {
        "name": "ButtonDate",
        "responsibility": "Wrapper component combining an icon and formatted date text with click handling."
      },
      {
        "name": "IconDate",
        "responsibility": "Visual icon representing a calendar/date, imported and displayed inside the ButtonDate component."
      }
    ],
    "Functions": [
      {
        "name": "handleClick",
        "description": "Internal handler for click events; invokes the `action` prop if provided.",
        "parameters": []
      },
      {
        "name": "formatDate",
        "description": "Formats a date object with `start` and `end` properties into a human-readable string or range.",
        "parameters": [
          {
            "name": "dateObj",
            "type": "Object",
            "properties": [
              {
                "name": "start",
                "type": "string|number|null"
              },
              {
                "name": "end",
                "type": "string|number|null"
              }
            ]
          }
        ]
      }
    ],
    "Dependencies": [
      "vue (toRefs, computed)",
      "@martyrs/src/modules/icons/entities/IconDate.vue"
    ],
    "Usage": "Import and register `<ButtonDate>` in a parent component, then bind `:date=\"{ start: ..., end: ... }\"` and optionally `:action=\"yourCallback\"`.",
    "Importance": 3,
    "Notes": [
      "Uses UTC methods (getUTCDate, getUTCMonth, getUTCFullYear) to avoid timezone discrepancies.",
      "Displays 'All Time' when both `start` and `end` are null.",
      "If `end` is missing, shows only the full start date; if both exist, shows a range without repeating the start year.",
      "Relies on CSS utility classes (`cursor-pointer`, `flex-center`, `desktop-only`, etc.) defined elsewhere.",
      "No local `<style>` section; styling is entirely class-based."
    ]
  }
}