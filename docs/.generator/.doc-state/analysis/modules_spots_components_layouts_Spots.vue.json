{
  "path": "../../src/modules/spots/components/layouts/Spots.vue",
  "relativePath": "modules/spots/components/layouts/Spots.vue",
  "type": "source",
  "name": "Spots.vue",
  "extension": ".vue",
  "analysis": {
    "Summary": "Vue layout component for the “spots” section of the marketplace. It renders a full-screen wrapper with a header showing the current location (city/state/country), a dynamic child component (via <router-view>), and manages synchronization between URL params, global position state, and marketplace filters.",
    "Purpose": "Provide the overall layout and routing wrapper for spot-related pages. It initializes location state and filters from the URL, watches for changes in global position and filters to update the URL, and fetches category data on mount.",
    "Components": [
      {
        "name": "Spoiler",
        "responsibility": "(Imported) Generic collapsible content component"
      },
      {
        "name": "Checkbox",
        "responsibility": "(Imported) Custom checkbox input"
      },
      {
        "name": "Field",
        "responsibility": "(Imported) Custom form field input"
      },
      {
        "name": "Breadcrumbs",
        "responsibility": "(Imported) Renders navigation breadcrumbs"
      },
      {
        "name": "Dropdown",
        "responsibility": "(Imported) Custom dropdown selector"
      },
      {
        "name": "Dynamic Page Component",
        "responsibility": "Rendered via <router-view> to display child pages (e.g. listing, detail)"
      }
    ],
    "Functions": [
      {
        "name": "denormalizeUrlParam",
        "purpose": "Convert a slug (with hyphens) into human-readable text with spaces and capitalized words.",
        "parameters": [
          "param: string"
        ]
      },
      {
        "name": "normalizeUrlParam",
        "purpose": "Convert human-readable location strings into URL-safe slugs (lowercase, hyphens, alphanumeric).",
        "parameters": [
          "param: string"
        ]
      },
      {
        "name": "onMounted callback",
        "purpose": "On component mount: read route params into localPosition, initialize marketplace filters from query, fetch category data.",
        "parameters": []
      },
      {
        "name": "watchFilter (marketplace.state.filter.selected)",
        "purpose": "Deep-watch selected filters; update the URL query accordingly whenever filters change.",
        "parameters": [
          "newFilterValue: object",
          "oldFilterValue: object"
        ]
      },
      {
        "name": "watchPosition (globals.state.position)",
        "purpose": "Deep-watch global position; update route params whenever the global position changes.",
        "parameters": [
          "newPosition: object"
        ]
      }
    ],
    "Dependencies": [
      "vue",
      "vue-router",
      "vue-i18n",
      "@martyrs/src/components/Spoiler/Spoiler.vue",
      "@martyrs/src/components/Checkbox/Checkbox.vue",
      "@martyrs/src/components/Field/Field.vue",
      "@martyrs/src/components/Breadcrumbs/Breadcrumbs.vue",
      "@martyrs/src/components/Dropdown/Dropdown.vue",
      "@martyrs/src/modules/globals/views/store/globals.js",
      "@martyrs/src/modules/products/store/categories.js",
      "@martyrs/src/modules/marketplace/views/store/marketplace.js"
    ],
    "Usage": "Imported in router configuration as the layout for the spots module, e.g.:\n{\n  path: '/spots/:country/:state/:city',\n  component: Spots,\n  children: [ /* child routes render inside its router-view */ ]\n}\nOther components reference it by its file path: modules/spots/components/layouts/Spots.vue.",
    "Importance": 4,
    "Notes": "• The <style> block is empty (no component-specific styles).  \n• i18n messages are dynamically populated from categories.state.all.  \n• Expects an environment variable GOOGLE_MAPS_API_KEY passed as prop to child components.  \n• Syncs both URL query (filters) and route params (location) to reactive state.  \n• Uses transition named “scaleIn” for child view animations."
  }
}