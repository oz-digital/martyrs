{
  "path": "../../src/modules/products/components/sections/SectionProduct.vue",
  "relativePath": "modules/products/components/sections/SectionProduct.vue",
  "type": "source",
  "name": "SectionProduct.vue",
  "extension": ".vue",
  "analysis": {
    "Summary": "Vue component that renders a product detail section: shows main image or 360Â° viewer, thumbnails, product name, price, description/specifications tabs, and action buttons (add to cart or edit).",
    "Purpose": "Serve as the main product detail display in the storefront, allowing users to view images, read details/specs, and perform actions like adding to cart or editing (if authorized).",
    "Components": [
      {
        "name": "Image360",
        "source": "@martyrs/src/modules/products/components/elements/Image360.vue",
        "responsibility": "Displays a 360-degree interactive view of the product when `product.image3d` is provided."
      },
      {
        "name": "PlaceholderImage",
        "source": "@martyrs/src/modules/icons/placeholders/PlaceholderImage.vue",
        "responsibility": "Shows a placeholder graphic if no product image is available."
      },
      {
        "name": "ProductImages",
        "source": "@martyrs/src/modules/products/components/blocks/ProductImages.vue",
        "responsibility": "Renders a gallery or thumbnail strip when the product has multiple images."
      },
      {
        "name": "IconEdit",
        "source": "@martyrs/src/modules/icons/navigation/IconEdit.vue",
        "responsibility": "Provides an edit icon button; navigates to the product edit route if the user has edit access."
      },
      {
        "name": "Price",
        "source": "@martyrs/src/modules/products/components/elements/Price.vue",
        "responsibility": "Formats and displays the product price (hidden for rental listings)."
      },
      {
        "name": "Tab",
        "source": "@martyrs/src/components/Tab/Tab.vue",
        "responsibility": "Provides a tabbed interface to switch between 'Description' and 'Specifications' views."
      },
      {
        "name": "Button",
        "source": "@martyrs/src/components/Button/Button.vue",
        "responsibility": "Generic button component used for 'Add to order'; handles async submit state (success/error)."
      }
    ],
    "Functions": [
      {
        "name": "validateToCard",
        "purpose": "Determines if the 'Add to order' button should be disabled based on product stock quantity.",
        "parameters": [
          "product"
        ],
        "returns": "Boolean (true = disabled, false = enabled)"
      },
      {
        "name": "addToCart",
        "purpose": "Adds the selected product to the shopping cart store; resets cart if switching organizations.",
        "parameters": [
          "product"
        ],
        "returns": "Promise<Boolean> (resolves true on success, throws on error)"
      }
    ],
    "Dependencies": [
      "vue (computed, ref)",
      "vue-router (useRoute, useRouter)",
      "vue-i18n (useI18n)",
      "@martyrs/src/components/Button/Button.vue",
      "@martyrs/src/components/Tab/Tab.vue",
      "@martyrs/src/modules/icons/navigation/IconEdit.vue",
      "@martyrs/src/modules/icons/placeholders/PlaceholderImage.vue",
      "@martyrs/src/modules/products/components/elements/Image360.vue",
      "@martyrs/src/modules/products/components/blocks/ProductImages.vue",
      "@martyrs/src/modules/products/components/elements/THC.vue",
      "@martyrs/src/modules/products/components/elements/Price.vue",
      "@martyrs/src/modules/orders/store/shopcart.js"
    ],
    "Usage": "Imported into a parent product page or layout and used as `<SectionProduct :product=\"...\" :accesses=\"...\" :user=\"...\" :recommendation=\"...\" />`. It reads route params and allows navigation to edit view via vue-router.",
    "Importance": 4,
    "Notes": [
      "No `<style>` block is defined here; styling is entirely via utility classes.",
      "The `THC` component is imported but not utilized in the template.",
      "The component supports an optional `recommendation` prop to show AI-driven messages.",
      "Edit icon visibility is gated by `hasAccess(route.params._id, 'products', 'edit', accesses)` logic.",
      "Tab content switches between description and specifications with a slide-fade transition.",
      "Code for product variants is commented out and may be revisited in future updates."
    ]
  }
}