/**
 * Функция для создания ЧПУ (человеко-понятного URL) из строки.
 * Обрабатывает Unicode-символы и специальные символы.
 * Для необработанных символов генерирует случайный идентификатор.
 * @param {string} str - строка, которую нужно преобразовать.
 * @returns {string} - строка, представляющая собой ЧПУ.
 */
function createFriendlyURL(str) {
  if (typeof str !== 'string') {
    throw new Error('Входные данные должны быть строкой');
  }
  // Карта замен для распространенных Unicode символов
  const unicodeMap = {
    // Числа в разных стилях Unicode
    '𝟬': '0',
    '𝟭': '1',
    '𝟮': '2',
    '𝟯': '3',
    '𝟰': '4',
    '𝟱': '5',
    '𝟲': '6',
    '𝟳': '7',
    '𝟴': '8',
    '𝟵': '9',
    '０': '0',
    '１': '1',
    '２': '2',
    '３': '3',
    '４': '4',
    '５': '5',
    '６': '6',
    '７': '7',
    '８': '8',
    '９': '9',
    // Латинские буквы в различных стилях
    '𝐀': 'a',
    '𝐁': 'b',
    '𝐂': 'c',
    '𝐃': 'd',
    '𝐄': 'e',
    '𝐅': 'f',
    '𝐆': 'g',
    '𝐇': 'h',
    '𝐈': 'i',
    '𝐉': 'j',
    '𝐊': 'k',
    '𝐋': 'l',
    '𝐌': 'm',
    '𝐍': 'n',
    '𝐎': 'o',
    '𝐏': 'p',
    '𝐐': 'q',
    '𝐑': 'r',
    '𝐒': 's',
    '𝐓': 't',
    '𝐔': 'u',
    '𝐕': 'v',
    '𝐖': 'w',
    '𝐗': 'x',
    '𝐘': 'y',
    '𝐙': 'z',
    '𝐚': 'a',
    '𝐛': 'b',
    '𝐜': 'c',
    '𝐝': 'd',
    '𝐞': 'e',
    '𝐟': 'f',
    '𝐠': 'g',
    '𝐡': 'h',
    '𝐢': 'i',
    '𝐣': 'j',
    '𝐤': 'k',
    '𝐥': 'l',
    '𝐦': 'm',
    '𝐧': 'n',
    '𝐨': 'o',
    '𝐩': 'p',
    '𝐪': 'q',
    '𝐫': 'r',
    '𝐬': 's',
    '𝐭': 't',
    '𝐮': 'u',
    '𝐯': 'v',
    '𝐰': 'w',
    '𝐱': 'x',
    '𝐲': 'y',
    '𝐳': 'z',
    '𝗔': 'a',
    '𝗕': 'b',
    '𝗖': 'c',
    '𝗗': 'd',
    '𝗘': 'e',
    '𝗙': 'f',
    '𝗚': 'g',
    '𝗛': 'h',
    '𝗜': 'i',
    '𝗝': 'j',
    '𝗞': 'k',
    '𝗟': 'l',
    '𝗠': 'm',
    '𝗡': 'n',
    '𝗢': 'o',
    '𝗣': 'p',
    '𝗤': 'q',
    '𝗥': 'r',
    '𝗦': 's',
    '𝗧': 't',
    '𝗨': 'u',
    '𝗩': 'v',
    '𝗪': 'w',
    '𝗫': 'x',
    '𝗬': 'y',
    '𝗭': 'z',
    '𝗮': 'a',
    '𝗯': 'b',
    '𝗰': 'c',
    '𝗱': 'd',
    '𝗲': 'e',
    '𝗳': 'f',
    '𝗴': 'g',
    '𝗵': 'h',
    '𝗶': 'i',
    '𝗷': 'j',
    '𝗸': 'k',
    '𝗹': 'l',
    '𝗺': 'm',
    '𝗻': 'n',
    '𝗼': 'o',
    '𝗽': 'p',
    '𝗾': 'q',
    '𝗿': 'r',
    '𝘀': 's',
    '𝘁': 't',
    '𝘂': 'u',
    '𝘃': 'v',
    '𝘄': 'w',
    '𝘅': 'x',
    '𝘆': 'y',
    '𝘇': 'z',
    // Кириллица (основные буквы)
    а: 'a',
    б: 'b',
    в: 'v',
    г: 'g',
    д: 'd',
    е: 'e',
    ё: 'e',
    ж: 'zh',
    з: 'z',
    и: 'i',
    й: 'y',
    к: 'k',
    л: 'l',
    м: 'm',
    н: 'n',
    о: 'o',
    п: 'p',
    р: 'r',
    с: 's',
    т: 't',
    у: 'u',
    ф: 'f',
    х: 'h',
    ц: 'ts',
    ч: 'ch',
    ш: 'sh',
    щ: 'sch',
    ъ: '',
    ы: 'y',
    ь: '',
    э: 'e',
    ю: 'yu',
    я: 'ya',
    // Другие специальные символы
    '/': '-',
    '\\': '-',
    '|': '-',
    ':': '-',
    ';': '-',
    '.': '-',
    ',': '-',
    '!': '',
    '?': '',
    '(': '',
    ')': '',
    '[': '',
    ']': '',
    '{': '',
    '}': '',
    '<': '',
    '>': '',
    '@': 'at',
    '#': '',
    $: '',
    '%': 'percent',
    '^': '',
    '&': 'and',
    '*': '',
    '+': 'plus',
    '=': 'equals',
    "'": '',
    '"': '',
    '`': '',
    '~': '-',
    '—': '-',
    '–': '-',
    '―': '-',
    '‒': '-', // различные типы тире
    '•': '-',
    '·': '-',
    '…': '-', // маркеры списков и другие спецсимволы
  };
  // Кэш для хранения сгенерированных идентификаторов для неизвестных символов
  const unknownCharCache = {};
  // Функция для генерации случайного идентификатора для символа
  function generateRandomId() {
    // Генерируем 6-значный буквенно-цифровой идентификатор
    const chars = 'abcdefghijklmnopqrstuvwxyz0123456789';
    let result = '';
    for (let i = 0; i < 6; i++) {
      result += chars.charAt(Math.floor(Math.random() * chars.length));
    }
    return 'x' + result; // Добавляем 'x' в начало, чтобы гарантировать, что ID начинается с буквы
  }
  // Функция для транслитерации символов
  function transliterateChar(char) {
    // Если символ есть в карте, используем его преобразование
    if (unicodeMap[char] !== undefined) {
      return unicodeMap[char];
    }
    // Если это латинская буква, цифра или дефис, оставляем как есть
    if (/[a-z0-9-]/.test(char)) {
      return char;
    }
    // Для необработанного символа генерируем или используем существующий ID
    if (!unknownCharCache[char]) {
      unknownCharCache[char] = generateRandomId();
    }
    return unknownCharCache[char];
  }
  // Преобразуем строку посимвольно
  let result = '';
  for (let i = 0; i < str.length; i++) {
    result += transliterateChar(str[i]);
  }
  // Преобразуем строку: удаляем пробелы по краям, приводим к нижнему регистру
  result = result.trim().toLowerCase();
  // Заменяем пробелы на дефисы
  result = result.replace(/ /g, '-');
  // Удаляем нежелательные символы, оставляем только буквы, цифры, дефисы
  // Note: больше не нужно, так как мы уже обработали все символы
  // Удаляем множественные дефисы
  result = result.replace(/-+/g, '-');
  // Удаляем дефисы в начале и в конце строки
  result = result.replace(/^-+|-+$/g, '');
  return result;
}
export default createFriendlyURL;
